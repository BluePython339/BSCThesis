sub_4f0395
push 0xe22330a9
mov [ esp ] 0x8550013b
jmp rwxdata
pushfd
mov [ esp ] 0x36c7677b
push 0xde565282
pushad
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
pushad
pushad
mov [ esp + 0x3c ] eax
jmp rwxdata
jmp rwxdata
push esi
mov [ esp + 0x3c ] ebx
pushfd
push [ esp + 0xc ]
mov [ esp + 0x40 ] esi
mov [ esp ] ebx
push 0xbcf07293
push [ esp ]
mov [ esp + 0x44 ] ebp
pushfd
call sub_4f8548
sub_4f1ed8
mov [ esp + 0x24 ] 0x8550013b
pushad
mov [ esp + 0x40 ] 0x36c7677b
push 0x80731ca4
push 0x2afea37c
lea esp [ esp + 0x48 ]
jmp rwxdata
pushad
pushad
mov [ esp + 0x3c ] eax
jmp rwxdata
jmp rwxdata
push esi
mov [ esp + 0x3c ] ebx
pushfd
push [ esp + 0xc ]
mov [ esp + 0x40 ] esi
mov [ esp ] ebx
push 0xbcf07293
push [ esp ]
mov [ esp + 0x44 ] ebp
pushfd
call sub_4f8548
sub_4f3e8b
mov [ esp ] 0x88cc013a
pushfd
jmp rwxdata
jmp rwxdata
mov [ esp ] 0xe41f17dd
pushfd
pushad
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
push 0x4bc9b65b
mov [ esp ] eax
pushfd
mov [ esp ] ebx
call sub_4f806e
sub_4f622d
call sub_4f84f0
setpe ah
jl rwxdata
mov dx sp
xchg dl al
push edi
bswap ax
mov edx [ ebp ]
pushad
not ah
pushad
mov eax [ ebp + 0x4 ]
jmp rwxdata
not al
pushad
mov edx [ ebp ]
lahf
mov ax [ esp + 0x8 ]
mov eax [ ebp + 0x4 ]
pushad
pushfd
mov [ esp + 0x8 ] eax
div [ ebp + 0x8 ]
call sub_4f7a0a
xor ax cx
mov eax [ ebp ]
neg dl
add dh al
mov edx [ ebp + 0x4 ]
cmp bx bp
test ch ch
add ebp 0x8
call j_sub_4f6754
pushfd
pop [ esp + 0x50 ]
call j_sub_4f8469
call sub_4f72f4
mov [ esp ] 0x81
push esp
pushfd
div [ ebp + 0x8 ]
pushfd
mov [ ebp + 0x4 ] edx
mov [ esp ] cl
mov [ ebp + 0x8 ] eax
call sub_4f82e1
sub_4f628b
and ebx 0xff0
pushfd
cmc
test edx edx
cmp ebx 0xfe0
jmp rwxdata
push 0x6d6bf94a
jmp rwxdata
lea esp [ esp + 0xc ]
jne rwxdata
not bh
pushfd
lea ebx [ esi - 0x3bfa3b41 ]
lea ebx [ edi * 2 - 0x4d1ae68a ]
mov ebx [ esp + 0x4 ]
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x8 ]
jmp sub_4f6685
bsr ebx edi
adc bh ch
rcl bh cl
rcr bx 0xe
xor [ ebp + 0xc ] 0x20
sub_4f63e6
test di 0xe7ff
add ebp 0x2
push edx
mov [ esp ] al
push ebp
mov [ eax + edi ] dl
push [ esp ]
push 0xff3e3df
pushfd
lea esp [ esp + 0x3c ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4f7b3e
sub_4f6492
mov [ esp ] al
mov [ esp ] 0x1f
cmp ebp eax
pushad
jmp rwxdata
push 0x7652f3ee
lea esp [ esp + 0x28 ]
ja rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4f7b3e
lahf
xadd ah cl
aad 0x4f
mov edx esp
jle rwxdata
movzx ax dl
sbb ch ch
lea ecx [ edi + 0x40 ]
rcl di 0xb
shl ax 0x6
sub ecx edx
bt sp 0x6
lahf
lea eax [ ebp - 0x80 ]
cmc
sbb di di
and al 0xfc
neg edi
shl di 0xf
sbb edi 0xcca9dbd
sub eax ecx
jmp rwxdata
daa
shrd ax bx cl
lea ecx [ edi + 0x40 ]
aaa
das
clc
sub ecx edx
ror di 0x6
lea edi [ ecx * 8 - 0x16c9a026 ]
aas
lea eax [ ebp - 0x80 ]
shl di cl
bswap di
lea edi [ ebp * 8 + 0x38afb322 ]
and al 0xfc
bsr di di
mov di cx
sub eax ecx
lea edi [ esi * 2 + 0x29878978 ]
mov esp eax
mov di 0x2915
bswap di
push 0x2855f3b4
mov edi eax
pushfd
pop [ esp ]
movsx di dl
push esi
not di
std
mov esi edx
bswap edi
ja rwxdata
pushad
movzx edi al
mov esp eax
movsx edi cl
movsx di cl
pushfd
pushfd
xchg [ esp ] esi
lea esi [ ebp * 8 + 0x21d4c8f2 ]
call sub_4f6773
bswap di
pushad
jmp rwxdata
not edi
pushad
lea edi [ ecx + eax - 0x40 ]
mov [ esp ] ch
pushfd
call sub_4f771e
lea edi [ ecx + eax - 0x40 ]
mov [ esp ] 0xc4d4
xchg [ esp + 0x1c ] edi
not edi
pushad
mov edi eax
pushfd
jmp rwxdata
std
call sub_4f7374
sub_4f6754
push [ esp ]
pushfd
mov [ eax ] edx
push 0xf65e9b8b
pushfd
push 0xdca92d94
mov [ esp + 0xc ] 0xb8
lea esp [ esp + 0x18 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4f7b3e
sub_4f6773
pop edi
movsx si dl
mov esi edx
jmp rwxdata
jmp rwxdata
lea edi [ ecx + eax - 0x40 ]
cld
push edi
pushad
not edi
mov edi eax
pushfd
cld
jmp rwxdata
pushfd
push ecx
call sub_4f7252
mov [ esp + 0x4 ] dl
mov [ esp + 0x4 ] esi
pushad
mov [ esp + 0x20 ] ebp
push 0xe2ff0f60
mov [ esp ] bh
mov [ esp + 0x18 ] bl
pushfd
mov [ esp + 0x24 ] edx
call sub_4f853a
sub_4f67fd
pushad
mov [ esp ] 0x991fbb6f
mov [ ebp ] eax
mov [ esp + 0x4 ] 0xad
pushfd
mov [ esp + 0x4 ] al
lea esp [ esp + 0x2c ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4f7b3e
sub_4f69da
mov [ esp + 0x28 ] edi
mov [ esp + 0x4 ] 0x32a5
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_4f8109
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_4f7eff
sub_4f6a19
pushad
mov [ esp + 0x14 ] al
mov [ esp + 0x14 ] 0xc2
sub ebp 0x2
mov [ esp + 0x10 ] dh
cmc
shr al cl
jmp rwxdata
mov [ esp ] 0x250e
push edi
mov [ ebp + 0x4 ] ax
push 0xb8fd6aa5
pushfd
push ebx
pushfd
pop [ esp + 0x34 ]
pushfd
jmp rwxdata
jmp rwxdata
push [ esp + 0x38 ]
pop [ ebp ]
pushfd
lea esp [ esp + 0x40 ]
jmp sub_4f6685
sub_4f6cba
push [ esp + 0x50 ]
pop [ ebp ]
mov [ esp ] 0x3c
mov [ esp + 0x4 ] ah
mov [ esp + 0xc ] bh
lea esp [ esp + 0x54 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4f7b3e
sub_4f6d5c
pushfd
mov [ esp + 0x24 ] esi
push [ esp + 0x4 ]
mov [ esp + 0x24 ] ebp
jmp rwxdata
mov [ esp + 0x4 ] dh
mov [ esp + 0x20 ] edx
mov [ esp + 0x8 ] 0xdb
pushfd
jmp rwxdata
pushad
mov [ esp + 0x40 ] esi
jmp rwxdata
call j_sub_4f7d8d
sub_4f7252
[ edi ] [ esi ]
btc si 0x2
mov edi [ esp + 0x30 ]
cmc
add esi 0xac05aaec
mov esi [ esp + 0x34 ]
mov [ esp + 0x8 ] 0x4f
push [ esp + 0x38 ]
popfd
pushfd
mov [ esp ] di
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4f7b3e
sub_4f7282
pushfd
mov [ esp + 0xc ] esi
jmp rwxdata
mov [ esp + 0x8 ] edi
mov [ esp ] 0xc8
lea esp [ esp + 0x8 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_4f8109
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_4f7eff
sub_4f7374
cld
pushfd
[ edi ] [ esi ]
shl esi 0x1f
neg di
pop esi
mov edi [ esp + 0x44 ]
clc
rol esi cl
mov esi [ esp + 0x48 ]
std
push [ esp + 0x4c ]
popfd
mov [ esp + 0x10 ] dh
mov [ esp + 0x8 ] 0xde
mov [ esp ] cl
mov [ esp ] esp
lea esp [ esp + 0x50 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4f7b3e
sub_4f75dc
push 0xd3032c59
mov [ esp + 0x24 ] edi
mov [ esp + 0xc ] ebx
lea esp [ esp + 0x24 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_4f8109
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_4f7eff
sub_4f77be
push ebp
push ebx
mov [ esp ] 0x7f
pushfd
mov [ esp + 0x4 ] edx
lea esp [ esp + 0x4 ]
ja rwxdata
pushad
mov [ esp + 0x1c ] esi
call sub_4f6574
pushfd
mov [ esp ] esi
pushfd
push esp
jmp rwxdata
mov [ esp + 0x4 ] edi
pushfd
pushfd
push eax
lea esp [ esp + 0x10 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_4f8109
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_4f7eff
sub_4f7a0a
pushfd
mov [ ebp + 0x4 ] edx
push 0x16192d20
call sub_4f7b27
movsx cx al
movsx cx dl
mov ecx [ ebp - 0x4 ]
pushad
pushad
jmp rwxdata
lea ebp [ ebp + ecx * 4 ]
pushfd
pushfd
mov [ esp + 0x4 ] 0xd80c67b7
jmp sub_4f7c4c
sub_4f7c4c
mov [ ebp ] eax
pushfd
push esp
mov [ esp + 0x4 ] 0x85f8
lea esp [ esp + 0x50 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4f7b3e
sub_4f7d8d
mov [ esp + 0x40 ] edi
mov [ esp ] esp
lea esp [ esp + 0x40 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_4f8109
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_4f7eff
sub_4f7eff
push [ esp + 0x10 ]
lea esp [ esp + 0x20 ]
jne rwxdata
not bh
pushfd
lea ebx [ esi - 0x3bfa3b41 ]
lea ebx [ edi * 2 - 0x4d1ae68a ]
mov ebx [ esp + 0x4 ]
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x8 ]
jmp sub_4f6685
xor bl 0x74
mov ebx eax
cmc
test dl 0x2f
call sub_4f628b
sub_4f7f2d
mov [ esp + 0x44 ] edi
mov [ esp ] 0x5
push esi
push esp
pushfd
lea esp [ esp + 0x50 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_4f8109
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_4f7eff
sub_4f8109
bt ax bx
rol esi 0xe
lea ebp [ eax + 0x3077a4b8 ]
dec esi
cmp esi 0x98ef26ae
add ch 0xf2
pushad
lea ebp [ esp + 0x40 ]
shrd di bx cl
bt bx ax
sub esp 0x80
rcl di cl
mov edi esp
shl bh 0x7
bt sp di
mov ebx esi
bsf cx dx
bswap cx
add esi [ ebp ]
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4f7b3e
sub_4f8469
mov [ esp ] bh
push [ esp + 0x54 ]
pop [ ebp ]
mov [ esp ] sp
mov [ esp ] cx
mov [ esp + 0x4 ] ax
mov [ esp + 0x8 ] 0xa
lea esp [ esp + 0x58 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4f7b3e
sub_4f84f0
[ edi ] [ esi ]
add esi 0x9d1f4232
shl si cl
mov edi [ esp + 0x58 ]
shl si 0xa
shr si cl
test cl 0xe9
mov esi [ esp + 0x5c ]
test ah 0x57
clc
cmc
test si ax
push [ esp + 0x60 ]
popfd
mov [ esp + 0x8 ] 0xa4
mov [ esp + 0x8 ] 0x43
lea esp [ esp + 0x64 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4f7b3e
sub_4f8548
push [ esp ]
mov [ esp + 0x4c ] edx
pushfd
mov [ esp + 0x4c ] esi
jmp rwxdata
jmp rwxdata
mov [ esp + 0x4 ] dl
push 0x19be167d
mov [ esp + 0x4c ] edi
push 0xccde9e3a
mov [ esp + 0x8 ] 0xa5
lea esp [ esp + 0x50 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_4f8109
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_4f7eff
_start
push edi
pushad
pushad
mov [ esp + 0x40 ] 0x39d0013b
pushfd
call sub_4f0884
sub_4f0884
push ecx
push 0xf1df98f0
mov [ esp + 0x4c ] 0x62634d65
mov [ esp + 0x4 ] bx
mov [ esp + 0x8 ] di
lea esp [ esp + 0x4c ]
jmp rwxdata
push 0x4bc9b65b
mov [ esp ] eax
pushfd
mov [ esp ] ebx
call sub_4f806e
sub_4f1ecb
jle sub_4f0395
sub_4f1ed1
pushad
sub_4f1ed2
push 0xe5dcd568
sub_4f1ed7
pushfd
_TLS_Entry_0
call sub_4f3e8b
sub_4f6526
cld
call sub_4f622d
sub_4f6574
call sub_4f75dc
sub_4f6685
rcr ax cl
bt si 0xe
lea eax [ edi + 0x50 ]
call sub_4f6492
mov [ esp + 0x24 ] eax
mov [ esp + 0x4 ] 0x82
call sub_4f6b86
sub_4f6712
call sub_4f8255
sub_4f687b
call sub_4f76a8
j_sub_4f6cba
jmp sub_4f6cba
sub_4f6a9f
bt ecx 0x7
sub ebp 0x4
mov [ esp + 0x4 ] al
mov [ esp ] bl
mov [ ebp ] eax
mov [ esp + 0x4 ] al
mov [ esp + 0x4 ] al
push 0x45d15dcd
pushfd
lea esp [ esp + 0x40 ]
jmp sub_4f6685
sub_4f6b22
mov [ esp + 0x2c ] eax
pushfd
push 0x3bac19c1
mov [ esp + 0x4 ] 0xf5
push [ esp + 0x34 ]
retn 0x38
sub_4f6b86
mov [ esp + 0x14 ] dl
jmp sub_4f6bef
j_sub_4f8469
jmp sub_4f8469
sub_4f6bef
mov [ esp + 0x24 ] ebx
jmp j_sub_4f6d5c
sub_4f72f4
mov [ esp ] eax
mov eax [ fs : eax ]
call j_sub_4f67fd
adc al ch
mov al [ ebp ]
pushfd
stc
mov cl [ ebp + 0x2 ]
call sub_4f6a19
j_sub_4f6754
jmp sub_4f6754
sub_4f76a8
pushfd
mov [ esp + 0x28 ] ebp
mov [ esp ] ah
mov [ esp + 0x24 ] edx
pushad
mov [ esp + 0x40 ] esi
call sub_4f7914
sub_4f771e
xchg [ esp + 0x24 ] edi
cld
pushad
mov edi eax
mov [ esp ] esi
call sub_4f6712
j_sub_4f7d8d
jmp sub_4f7d8d
sub_4f7914
mov [ esp + 0x8 ] 0x50
call sub_4f7f2d
j_sub_4f7f1b
jmp sub_4f7f1b
sub_4f7b27
mov [ ebp + 0x8 ] eax
mov [ esp ] dh
mov [ esp + 0x4 ] 0x66cd
pushfd
pop [ esp + 0x50 ]
jmp j_sub_4f6cba
sub_4f7b3e
test dl ah
mov [ esp ] 0x80
stc
add ecx 0x0
jmp sub_4f849f
sub_4f7c3c
sbb dh dl
shl dx 0x3
clc
mov dx [ ebp ]
jmp sub_4f63e6
j_sub_4f6d5c
jmp sub_4f6d5c
sub_4f7f1b
mov [ esp + 0x20 ] esi
call sub_4f687b
j_sub_4f67fd
jmp sub_4f67fd
sub_4f806e
lea esp [ esp + 0x4 ]
jge rwxdata
pushad
jmp rwxdata
push esp
mov [ esp ] cl
mov [ esp ] esi
jmp sub_4f77be
call j_sub_4f7f1b
sub_4f8255
call sub_4f6526
sub_4f82e1
mov [ esp + 0x4 ] 0xe2a3
jmp rwxdata
pushfd
pop [ esp + 0x50 ]
call j_sub_4f8469
call sub_4f72f4
sub_4f849f
pushfd
mov [ esp + 0x28 ] ecx
pushfd
mov [ esp ] al
push 0xbddf9cf3
pushfd
push [ esp + 0x34 ]
retn 0x38
sub_4f853a
push 0xece3a10a
mov [ esp + 0x28 ] esi
jmp rwxdata
call sub_4f69da
