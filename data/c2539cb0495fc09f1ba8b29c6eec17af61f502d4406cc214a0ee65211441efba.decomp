sub_401000
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ edi + 0x30 ] eax
mov eax [ ebp + 0x14 ]
mov [ edi + 0x34 ] eax
lea eax [ edi + 0x18 ]
push eax
push edi
push sub_401123
push ecx
call sub_409027
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea ecx [ edi + 0x20 ]
mov ecx [ edi + 0x4 ]
movzx eax [ ecx ]
push eax
push ecx
push 0x2
push edi
call sub_40105d
add esp 0x10
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
movzx esi si
or esi 0x80070000
jmp r-xdata
sub_40105d
push ebp
mov ebp esp
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x1c ]
push [ eax + 0x18 ]
call sub_409067
add esp 0x14
test eax eax
jle r-xdata
pop ebp
retn
movzx eax ax
or eax 0x80070000
sub_401088
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push [ esi + 0x1c ]
push [ esi + 0x18 ]
call sub_4090aa
and [ esi + 0x18 ] 0x0
and [ esi + 0x1c ] 0x0
pop ecx
pop ecx
pop esi
pop ebp
retn
sub_4010a7
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor edx edx
push esi
mov esi r--data
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ edx + 0x1 ]
and [ ecx + 0x4 ] 0x0
and [ ecx + 0xc ] 0x0
mov [ ecx ] esi
mov [ ecx + 0x8 ] eax
pop esi
pop ebp
retn
mov edx eax
mov esi eax
lea ecx [ edx + 0x1 ]
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub edx ecx
sub_4010df
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
xor edi edi
mov esi r--data
mov edx edi
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ edx * 2 + 0x2 ]
mov [ ecx + 0x4 ] edi
mov [ ecx + 0xc ] edi
pop edi
mov [ ecx ] esi
mov [ ecx + 0x8 ] eax
pop esi
pop ebp
retn
mov edx eax
mov esi eax
lea ecx [ edx + 0x2 ]
mov ax [ edx ]
add edx 0x2
cmp ax di
jne r-xdata
sub edx ecx
sar edx 0x1
sub_401123
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
test eax eax
je r-xdata
pop ebp
retn 0x24
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x1c ]
push edi
mov edi [ ebp + 0x20 ]
sub ecx 0x0
je r-xdata
and [ eax ] 0x0
sub ecx 0x1
jne r-xdata
pop esi
pop edi
pop ebx
push [ eax + 0x34 ]
push [ ebp + 0x24 ]
push edi
push ebx
push ecx
push [ ebp + 0x14 ]
mov ecx esi
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_406db5
call esi
mov ecx [ ebp + 0x18 ]
test dl dl
je r-xdata
mov ecx 0x100
movzx ecx dl
inc ecx
jmp r-xdata
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ebx
mov [ eax + 0x14 ] edi
jmp r-xdata
sub_40119b
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
or eax [ ebp + 0x10 ]
je r-xdata
mov al 0x1
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x8 ]
mov eax [ edx + 0xc ]
and ecx [ ebp + 0xc ]
and eax [ ebp + 0x10 ]
or ecx eax
je r-xdata
xor al al
pop ebp
retn
mov eax [ edx + 0x10 ]
mov ecx [ edx + 0x14 ]
and eax [ ebp + 0xc ]
and ecx [ ebp + 0x10 ]
cmp eax [ edx + 0x10 ]
jne r-xdata
cmp ecx [ edx + 0x14 ]
je r-xdata
sub_4011d7
push ebp
mov ebp esp
sub esp 0x10
mov al [ r--data ]
mov edx [ ebp + 0xc ]
mov ecx edx
push esi
mov esi [ ebp + 0x8 ]
sub ecx r--data
or ecx 0xb000000
mov eax [ edx ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x8 ]
add edx 0xc
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x4 ]
push ecx
and [ ecx + 0x4 ] 0x0
push [ ebp + 0x18 ]
mov [ ecx ] eax
mov eax [ esi + 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
movzx eax [ eax ]
and [ ecx + 0x14 ] 0x0
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] 0x2
mov [ ecx + 0x10 ] edx
movzx eax [ edx ]
mov [ ecx + 0x18 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ecx + 0x1c ] 0x1
push [ esi + 0x1c ]
push [ esi + 0x18 ]
call sub_4090e4
add esp 0x1c
pop esi
mov esp ebp
pop ebp
retn
sub_4012d0
push ebp
mov ebp esp
sub esp 0x204
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov [ ebp - 0x104 ] 0x7b777c63
mov [ ebp - 0x100 ] 0xc56f6bf2
mov [ ebp - 0xfc ] 0x2b670130
mov [ ebp - 0xf8 ] 0x76abd7fe
mov [ edi ] r--data
mov [ ebp - 0xf4 ] 0x7dc982ca
mov [ ebp - 0xf0 ] 0xf04759fa
mov [ ebp - 0xec ] 0xafa2d4ad
mov [ ebp - 0xe8 ] 0xc072a49c
mov [ ebp - 0xe4 ] 0x2693fdb7
mov [ ebp - 0xe0 ] 0xccf73f36
mov [ ebp - 0xdc ] 0xf1e5a534
mov [ ebp - 0xd8 ] 0x1531d871
mov [ ebp - 0xd4 ] 0xc323c704
mov [ ebp - 0xd0 ] 0x9a059618
mov [ ebp - 0xcc ] 0xe2801207
mov [ ebp - 0xc8 ] 0x75b227eb
mov [ ebp - 0xc4 ] 0x1a2c8309
mov [ ebp - 0xc0 ] 0xa05a6e1b
mov [ ebp - 0xbc ] 0xb3d63b52
mov [ ebp - 0xb8 ] 0x842fe329
mov [ ebp - 0xb4 ] 0xed00d153
mov [ ebp - 0xb0 ] 0x5bb1fc20
mov [ ebp - 0xac ] 0x39becb6a
mov [ ebp - 0xa8 ] 0xcf584c4a
mov [ ebp - 0xa4 ] 0xfbaaefd0
mov [ ebp - 0xa0 ] 0x85334d43
mov [ ebp - 0x9c ] 0x7f02f945
mov [ ebp - 0x98 ] 0xa89f3c50
mov [ ebp - 0x94 ] 0x8f40a351
mov [ ebp - 0x90 ] 0xf5389d92
mov [ ebp - 0x8c ] 0x21dab6bc
mov [ ebp - 0x88 ] 0xd2f3ff10
mov [ ebp - 0x84 ] 0xec130ccd
mov [ ebp - 0x80 ] 0x1744975f
mov [ ebp - 0x7c ] 0x3d7ea7c4
mov [ ebp - 0x78 ] 0x73195d64
mov [ ebp - 0x74 ] 0xdc4f8160
mov [ ebp - 0x70 ] 0x88902a22
mov [ ebp - 0x6c ] 0x14b8ee46
mov [ ebp - 0x68 ] 0xdb0b5ede
mov [ ebp - 0x64 ] 0xa3a32e0
mov [ ebp - 0x60 ] 0x5c240649
mov [ ebp - 0x5c ] 0x62acd3c2
mov [ ebp - 0x58 ] 0x79e49591
mov [ ebp - 0x54 ] 0x6d37c8e7
mov [ ebp - 0x50 ] 0xa94ed58d
mov [ ebp - 0x4c ] 0xeaf4566c
mov [ ebp - 0x48 ] 0x8ae7a65
mov [ ebp - 0x44 ] 0x2e2578ba
mov [ ebp - 0x40 ] 0xc6b4a61c
mov [ ebp - 0x3c ] 0x1f74dde8
mov [ ebp - 0x38 ] 0x8a8bbd4b
mov [ ebp - 0x34 ] 0x66b53e70
mov [ ebp - 0x30 ] 0xef60348
mov [ ebp - 0x2c ] 0xb9573561
mov [ ebp - 0x28 ] 0x9e1dc186
mov [ ebp - 0x24 ] 0x1198f8e1
mov [ ebp - 0x20 ] 0x948ed969
mov [ ebp - 0x1c ] 0xe9871e9b
mov [ ebp - 0x18 ] 0xdf2855ce
mov [ ebp - 0x14 ] 0xd89a18c
mov [ ebp - 0x10 ] 0x6842e6bf
mov [ ebp - 0xc ] 0xf2d9941
mov [ ebp - 0x8 ] 0x16bb54b0
mov [ ebp - 0x204 ] 0xd56a0952
mov [ ebp - 0x200 ] 0x38a53630
mov [ ebp - 0x1fc ] 0x9ea340bf
mov [ ebp - 0x1f8 ] 0xfbd7f381
mov [ ebp - 0x1f4 ] 0x8239e37c
mov [ ebp - 0x1f0 ] 0x87ff2f9b
mov [ ebp - 0x1ec ] 0x44438e34
mov [ ebp - 0x1e8 ] 0xcbe9dec4
mov [ ebp - 0x1e4 ] 0x32947b54
mov [ ebp - 0x1e0 ] 0x3d23c2a6
mov [ ebp - 0x1dc ] 0xb954cee
mov ebx 0x100
mov [ ebp - 0x1d8 ] 0x4ec3fa42
push ebx
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x1d4 ] 0x66a12e08
push eax
lea eax [ edi + 0x4 ]
mov [ ebp - 0x1d0 ] 0xb224d928
push eax
mov [ ebp - 0x1cc ] 0x49a25b76
mov [ ebp - 0x1c8 ] 0x25d18b6d
mov [ ebp - 0x1c4 ] 0x64f6f872
mov [ ebp - 0x1c0 ] 0x16986886
mov [ ebp - 0x1bc ] 0xcc5ca4d4
mov [ ebp - 0x1b8 ] 0x92b6655d
mov [ ebp - 0x1b4 ] 0x5048706c
mov [ ebp - 0x1b0 ] 0xdab9edfd
mov [ ebp - 0x1ac ] 0x5746155e
mov [ ebp - 0x1a8 ] 0x849d8da7
mov [ ebp - 0x1a4 ] 0xabd890
mov [ ebp - 0x1a0 ] 0xad3bc8c
mov [ ebp - 0x19c ] 0x558e4f7
mov [ ebp - 0x198 ] 0x645b3b8
mov [ ebp - 0x194 ] 0x8f1e2cd0
mov [ ebp - 0x190 ] 0x20f3fca
mov [ ebp - 0x18c ] 0x3bdafc1
mov [ ebp - 0x188 ] 0x6b8a1301
mov [ ebp - 0x184 ] 0x4111913a
mov [ ebp - 0x180 ] 0xeadc674f
mov [ ebp - 0x17c ] 0xcecff297
mov [ ebp - 0x178 ] 0x73e6b4f0
mov [ ebp - 0x174 ] 0x2274ac96
mov [ ebp - 0x170 ] 0x8535ade7
mov [ ebp - 0x16c ] 0xe837f9e2
mov [ ebp - 0x168 ] 0x6edf751c
mov [ ebp - 0x164 ] 0x711af147
mov [ ebp - 0x160 ] 0x89c5291d
mov [ ebp - 0x15c ] 0xe62b76f
mov [ ebp - 0x158 ] 0x1bbe18aa
mov [ ebp - 0x154 ] 0x4b3e56fc
mov [ ebp - 0x150 ] 0x2079d2c6
mov [ ebp - 0x14c ] 0xfec0db9a
mov [ ebp - 0x148 ] 0xf45acd78
mov [ ebp - 0x144 ] 0x33a8dd1f
mov [ ebp - 0x140 ] 0x31c70788
mov [ ebp - 0x13c ] 0x591012b1
mov [ ebp - 0x138 ] 0x5fec8027
mov [ ebp - 0x134 ] 0xa97f5160
mov [ ebp - 0x130 ] 0xd4ab519
mov [ ebp - 0x12c ] 0x9f7ae52d
mov [ ebp - 0x128 ] 0xef9cc993
mov [ ebp - 0x124 ] 0x4d3be0a0
mov [ ebp - 0x120 ] 0xb0f52aae
mov [ ebp - 0x11c ] 0x3cbbebc8
mov [ ebp - 0x118 ] 0x61995383
mov [ ebp - 0x114 ] 0x7e042b17
mov [ ebp - 0x110 ] 0x26d677ba
mov [ ebp - 0x10c ] 0x631469e1
mov [ ebp - 0x108 ] 0x7d0c2155
call sub_406f00
push ebx
lea eax [ ebp - 0x204 ]
push eax
lea ecx [ edi + 0x104 ]
push ecx
call sub_406f00
add esp 0x18
lea ecx [ edi + 0x204 ]
push ecx
push esi
mov ecx edi
call sub_401ae5
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn 0x4
sub_4017ec
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x2b4
push esi
call sub_405fd3
pop ecx
pop ecx
sub_401812
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
sub edx ecx
push esi
push edi
push 0x4
pop esi
mov al [ edx + ecx ]
xor [ ecx ] al
inc ecx
sub edi 0x1
jne r-xdata
sub esi 0x1
jne r-xdata
push 0x4
pop edi
pop edi
pop esi
pop ebp
retn 0x8
sub_40183b
push ebp
mov ebp esp
mov al [ ebp + 0xc ]
xor ecx ecx
push ebx
xor ebx ebx
mov [ ebp + 0xc ] al
inc ecx
inc ecx
cmp ecx 0x4
jl r-xdata
xor dl 0x1b
mov [ ebp + ecx + 0xc ] dl
mov al [ ebp + ecx + 0xb ]
mov dl al
add dl dl
mov [ ebp + ecx + 0xc ] dl
test al al
jns r-xdata
mov ah [ ebp + 0x8 ]
mov edx ebx
inc edx
cmp edx 0x4
jl r-xdata
xor bl [ ebp + edx + 0xc ]
mov al ah
mov cl dl
shr al cl
test al 0x1
je r-xdata
mov al bl
pop ebx
pop ebp
retn 0x8
sub_401887
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor edx edx
push edi
mov [ ebp - 0x18 ] ecx
lea edi [ ebp - 0x14 ]
mov [ ebp - 0x1c ] esi
mov al [ ebx ]
mov [ edi + ecx ] al
inc ecx
push 0x4
pop eax
add ebx eax
cmp ecx eax
jl r-xdata
inc edx
add edi eax
cmp edx eax
jl r-xdata
xor ecx ecx
lea ebx [ esi + edx ]
mov esi [ ebp - 0x18 ]
mov ecx esi
lea eax [ esi + 0x2a4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_401812
push 0x9
pop edi
lea ebx [ esi + 0x294 ]
sub ebx 0x10
sub edi 0x1
jns r-xdata
lea eax [ ebp - 0x14 ]
mov ecx esi
push eax
call sub_40198e
lea eax [ ebp - 0x14 ]
mov ecx esi
push eax
call sub_401a74
lea eax [ ebp - 0x14 ]
mov ecx esi
push eax
call sub_401ab6
push ebx
lea eax [ ebp - 0x14 ]
mov ecx esi
push eax
call sub_401812
test edi edi
je r-xdata
mov ebx [ ebp - 0x1c ]
lea esi [ ebp - 0x14 ]
xor ecx ecx
mov al [ esi + edx ]
inc edx
mov [ edi ] al
push 0x4
pop eax
add edi eax
cmp edx eax
jl r-xdata
inc ecx
add esi eax
cmp ecx eax
jl r-xdata
xor edx edx
lea edi [ ebx + ecx ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn 0x4
sub_401952
push ebp
mov ebp esp
push ecx
push esi
xor esi esi
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] esi
jle r-xdata
mov eax [ ebp + 0x8 ]
pop esi
mov esp ebp
pop ebp
retn 0x8
push ebx
mov ebx [ ebp + 0xc ]
add esi 0x10
sub ebx 0x10
cmp esi [ ebp + 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax esi
push eax
call sub_401887
mov ecx [ ebp - 0x4 ]
cmp ebx 0x10
jl r-xdata
pop ebx
sub_40198e
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
push edi
mov [ ebp - 0x4 ] ebx
lea edi [ ebp - 0x8 ]
mov [ ebp - 0x14 ] 0x4
mov al [ edx ]
mov [ ebp + ecx - 0x8 ] al
inc ecx
push 0x4
pop eax
add edx eax
cmp ecx eax
jl r-xdata
mov [ ebp - 0x18 ] 0x3
mov [ ebp - 0xc ] esi
mov esi [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
movzx eax [ ebp + eax - 0x8 ]
mov ecx ebx
push eax
push 0xb
call sub_40183b
lea ecx [ esi - 0x1 ]
mov bl al
and ecx 0x80000003
jns r-xdata
dec eax
or eax 0xfffffffc
inc eax
movzx ecx [ ebp + ecx - 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
push 0xd
call sub_40183b
xor bl al
mov eax esi
and eax 0x80000003
jns r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
movzx eax [ ebp + eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
push eax
push 0x9
call sub_40183b
mov ecx [ ebp - 0x4 ]
xor bl al
movzx eax [ edi + esi - 0x3 ]
push eax
push 0xe
call sub_40183b
xor bl al
mov eax [ ebp - 0xc ]
inc esi
mov [ eax ] bl
add eax 0x4
sub [ ebp - 0x10 ] 0x1
mov ebx [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ esi - 0x2 ]
and eax 0x80000003
jns r-xdata
mov esi [ ebp + 0x8 ]
inc esi
sub [ ebp - 0x14 ] 0x1
mov [ ebp + 0x8 ] esi
jne r-xdata
xor ecx ecx
mov edx esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_401a74
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x4
pop ecx
push 0x3
pop edx
add eax ecx
mov al [ eax + edi ]
mov [ ebp + esi + 0x8 ] al
inc esi
cmp esi 0x4
jl r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ edx + esi ]
and eax 0x80000003
jns r-xdata
mov eax [ ebp + 0x8 ]
dec edx
mov [ ecx + edi ] eax
add ecx 0x4
test edx edx
jg r-xdata
xor esi esi
pop edi
pop esi
pop ebp
retn 0x4
sub_401ab6
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
push 0x4
pop edi
movzx eax [ edx + esi ]
mov al [ eax + ecx + 0x104 ]
mov [ edx + esi ] al
inc esi
cmp esi 0x4
jl r-xdata
add edx 0x4
sub edi 0x1
jne r-xdata
xor esi esi
pop edi
pop esi
pop ebp
retn 0x4
sub_401ae5
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov [ ebp - 0x24 ] ecx
mov esi eax
push edi
mov [ ebp - 0x1c ] eax
xor ecx ecx
mov [ ebp - 0x10 ] 0x8040201
mov [ ebp - 0xc ] 0x80402010
mov [ ebp - 0x8 ] 0x361b
mov al [ edi ]
mov [ esi + edx ] al
inc edx
push 0x4
pop eax
add edi eax
cmp edx eax
jl r-xdata
inc ecx
add esi eax
cmp ecx eax
jl r-xdata
xor edx edx
lea edi [ ecx + ebx ]
mov edi [ ebp - 0x1c ]
lea eax [ ebp - 0x10 ]
xor ebx ebx
add edi 0x10
inc ebx
mov [ ebp - 0x1c ] edi
dec eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] eax
mov bl [ eax ]
mov bl [ edx + eax + 0xc ]
jmp r-xdata
test edx edx
je r-xdata
mov ebx [ ebp - 0x20 ]
test edx edx
jne r-xdata
mov [ ebp + ecx - 0x14 ] bl
add eax 0x4
inc ecx
cmp ecx 0x4
jl r-xdata
xor ecx ecx
lea esi [ edi + edx ]
mov al [ ebp - 0x14 ]
xor esi esi
mov edi [ ebp - 0x24 ]
inc esi
mov [ ebp - 0x15 ] al
xor ebx ebx
lea eax [ ebp - 0x14 ]
sub esi eax
mov al [ ebp + ecx - 0x14 ]
xor al [ esi - 0x10 ]
inc ecx
mov [ esi ] al
lea esi [ esi + 0x4 ]
cmp ecx 0x4
jl r-xdata
inc edx
lea eax [ edi - 0xd ]
cmp edx 0x4
jl r-xdata
movzx eax [ ebp + eax - 0x14 ]
inc ebx
mov al [ eax + edi + 0x4 ]
mov [ ecx ] al
cmp ebx 0x3
jl r-xdata
dec eax
or eax 0xfffffffc
inc eax
xor ecx ecx
inc ebx
add edi 0x10
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] edi
cmp ebx 0xa
jle r-xdata
lea ecx [ ebp - 0x14 ]
add ecx ebx
lea eax [ esi + ecx ]
and eax 0x80000003
jns r-xdata
movzx eax [ ebp - 0x15 ]
mov ecx edi
mov ebx [ ebp - 0x20 ]
mov edi [ ebp - 0x1c ]
mov al [ eax + ecx + 0x4 ]
mov [ ebp - 0x11 ] al
mov eax [ ebp - 0x28 ]
mov al [ eax + ebx ]
xor [ ebp - 0x14 ] al
xor edx edx
lea eax [ edi - 0xd ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn 0x8
sub_401c26
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov esi edi
mov eax [ edi + 0x4 ]
mov [ ebx + 0x104 ] eax
push [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
add eax edi
push eax
push ebx
call sub_406f00
add edi [ edi + 0x10 ]
add esp 0xc
mov eax [ esi ]
mov ecx [ esi + 0xc ]
mov [ ebx + 0x10c ] eax
sub eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push ecx
push edi
mov ecx ebx
call sub_401c79
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_401c79
push ebp
mov ebp esp
sub esp 0xc
mov eax ecx
push ebx
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ eax + 0x104 ]
mov [ ebp - 0xc ] edx
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
add eax edx
jmp r-xdata
pop edi
mov eax esi
pop esi
mov eax [ ebp + 0x8 ]
sub eax ebx
mov [ ebp + 0x8 ] eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea eax [ esi - 0x14 ]
cmp edi eax
jbe r-xdata
mov esi [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
inc edi
cmp edi esi
jb r-xdata
push ebx
push r--data
call sub_401d5b
mov edx [ ebp - 0xc ]
pop ecx
pop ecx
lea ecx [ edi + ebx ]
mov ebx [ ebp - 0x8 ]
mov al [ eax + ecx ]
xor al [ esi + ebx ]
inc esi
mov ebx [ ebp + 0x10 ]
mov [ ecx ] al
mov eax [ ebp + 0x8 ]
cmp esi edx
jb r-xdata
mov esi [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
test edx edx
je r-xdata
sub_401d06
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401d00
push [ eax + 0x4 ]
push [ eax ]
call sub_40c8d3
add esp 0x18
pop ebp
retn
sub_401d29
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401d00
mov ecx [ eax ]
push [ eax + 0x4 ]
or ecx 0x1
push ecx
call sub_40c94a
or ecx 0xffffffff
add esp 0x1c
test eax eax
cmovs eax ecx
pop ebp
retn
sub_401d5b
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0x0
push [ ebp + 0x8 ]
push 0x1
call sub_409d36
pop ecx
push eax
call sub_401d06
add esp 0x10
pop ebp
retn
sub_401d95
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
lea eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov [ ebp - 0x4 ] esi
push ecx
push [ ebp + 0x10 ]
mov [ esi ] r--data
push ecx
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
push [ ebp + 0x8 ]
call GdipCreateBitmapFromScan0
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_401dd0
push ebp
mov ebp esp
push ecx
push ecx
push esi
push [ ebp + 0x18 ]
mov esi ecx
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_401e2e
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov [ ebp + 0x18 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
mov [ esi ] ecx
call GdipDeleteFontFamily
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x14
movss xmm0 [ ebp + 0xc ]
lea eax [ ebp + 0x18 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ecx
movss [ esp ] xmm0
push [ ebp - 0x8 ]
call GdipCreateFont
mov ecx [ ebp + 0x18 ]
mov [ esi + 0x4 ] eax
sub_401e2e
push ebp
mov ebp esp
push esi
mov esi ecx
xor eax eax
mov ecx [ ebp + 0xc ]
mov [ esi ] eax
test ecx ecx
je r-xdata
push esi
push eax
push [ ebp + 0x8 ]
call GdipCreateFontFamilyFromName
mov [ esi + 0x4 ] eax
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax [ ecx + 0x4 ]
sub_401e56
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
xor eax eax
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
test ecx ecx
je r-xdata
mov [ esi ] eax
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x4 ]
push eax
push [ ecx + 0x4 ]
call GdipGetImageGraphicsContext
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x4 ]
sub_401e86
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
and [ eax ] 0x0
cmp [ ebp + 0xc ] 0x0
push eax
push [ ebp + 0x8 ]
je r-xdata
call GdipLoadImageFromFile
call GdipLoadImageFromFileICM
jmp r-xdata
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
pop ebp
retn 0x8
sub_401eb8
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x24 ] 0x1
xor ebx ebx
lea eax [ ebp - 0x24 ]
push ebx
push eax
and [ edi + 0x14 ] 0x0
lea esi [ edi + 0x18 ]
and [ edi + 0x10 ] 0x0
lea eax [ edi + 0x8c ]
and [ edi + 0xc ] 0x0
and [ edi + 0x8 ] 0x0
mov [ edi ] r--data
mov [ esi ] 0xff000000
and [ edi + 0x34 ] 0x0
and [ edi + 0x30 ] 0x0
and [ edi + 0x2c ] 0x0
and [ edi + 0x28 ] 0x0
and [ edi + 0x70 ] 0x0
and [ edi + 0x6c ] 0x0
and [ edi + 0x68 ] 0x0
and [ edi + 0x64 ] 0x0
and [ edi + 0x80 ] 0x0
and [ edi + 0x7c ] 0x0
and [ edi + 0x78 ] 0x0
and [ edi + 0x74 ] 0x0
push eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
call GdiplusStartup
push 0x281e14
mov ecx esi
call sub_402899
push esi
lea ecx [ ebp - 0x14 ]
call sub_401f96
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ebx
push eax
push ebx
push ecx
mov [ esp ] 0x3f800000
push [ esi ]
call GdipCreatePen1
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
call sub_4020b3
lea ecx [ ebp - 0x8 ]
mov [ edi + 0x20 ] eax
call sub_402159
push [ ebp - 0x8 ]
mov [ edi + 0x1c ] eax
call GdipDeletePen
push [ ebp - 0x10 ]
call GdipDeleteBrush
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_401f96
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
and [ ebp - 0x4 ] 0x0
push ecx
mov [ esi + 0x8 ] 0x6
mov [ esi ] r--data
push [ eax ]
call GdipCreateSolidFill
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_401ffa
push ebp
mov ebp esp
push esi
mov esi ecx
push [ esi + 0x4 ]
mov [ esi ] r--data
call GdipDisposeImage
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
test [ ebp + 0x8 ] 0x4
jne r-xdata
push 0x10
push esi
call sub_406db5
pop ecx
pop ecx
push esi
call GdipFree
jmp r-xdata
sub_402033
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_401fe8
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x90
push esi
call sub_405fd3
pop ecx
pop ecx
sub_402058
push ebp
mov ebp esp
push esi
mov esi ecx
push [ esi + 0x4 ]
mov [ esi ] r--data
call GdipDeleteBrush
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
test [ ebp + 0x8 ] 0x4
jne r-xdata
push 0xc
push esi
call sub_406db5
pop ecx
pop ecx
push esi
call GdipFree
jmp r-xdata
sub_402091
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push [ eax ]
push [ esi ]
call GdipGraphicsClear
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_4020b3
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push edi
mov edi ecx
push eax
push [ edi + 0x4 ]
call GdipCloneBrush
test eax eax
je r-xdata
push 0xc
call GdipAlloc
mov esi eax
mov [ ebp - 0x8 ] esi
test esi esi
je r-xdata
mov [ edi + 0x8 ] eax
xor esi esi
mov eax [ edi + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ esi ] r--data
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ecx
jmp r-xdata
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
push [ ebp - 0x4 ]
call GdipDeleteBrush
test esi esi
jne r-xdata
sub_40210d
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
mov esi ecx
push eax
push [ esi + 0x4 ]
call GdipCloneImage
test eax eax
je r-xdata
push 0x10
call GdipAlloc
mov edx eax
mov [ ebp - 0x8 ] edx
test edx edx
je r-xdata
mov [ esi + 0x8 ] eax
xor edx edx
mov ecx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ edx ] r--data
mov [ edx + 0x4 ] eax
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov eax edx
pop esi
mov esp ebp
pop ebp
retn
sub_402159
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
mov esi ecx
push eax
push [ esi ]
call GdipClonePen
push 0x8
mov [ esi + 0x4 ] eax
call GdipAlloc
mov edx eax
mov [ ebp - 0x8 ] edx
test edx edx
je r-xdata
xor edx edx
mov ecx [ ebp - 0x4 ]
mov eax [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
mov [ edx ] ecx
jmp r-xdata
mov eax edx
pop esi
mov esp ebp
pop ebp
retn
sub_402199
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
lea eax [ esi + 0x18 ]
push eax
call sub_402091
mov ecx esi
call sub_4021be
mov ecx esi
call sub_40239e
mov ecx esi
pop esi
jmp sub_402506
sub_4021be
push 0x28
mov eax sub_41afdb
call sub_40603d
mov edi ecx
mov [ ebp - 0x10 ] edi
mov ecx [ edi + 0x38 ]
push 0x26200a
call sub_402827
mov ecx [ edi + 0x38 ]
push eax
call sub_40284d
push eax
lea ecx [ ebp - 0x34 ]
call sub_401d95
lea eax [ ebp - 0x34 ]
xor ebx ebx
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] ebx
call sub_401e56
mov ecx [ edi + 0x38 ]
mov [ ebp - 0x4 ] 0x1
call sub_402827
mov ecx [ edi + 0x38 ]
push eax
call sub_40284d
push eax
push ebx
push ebx
push [ edi + 0x38 ]
lea ecx [ ebp - 0x1c ]
call sub_40230c
mov ecx rw-data
call sub_405b34
imul ecx eax 0x12
mov esi 0xbc
sub esi ecx
test eax eax
je r-xdata
lea eax [ ebp - 0x14 ]
mov ecx rw-data
push eax
call sub_405b88
mov esi eax
mov [ ebp - 0x24 ] ebx
lea eax [ ebp - 0x24 ]
push eax
push ebx
push ecx
mov [ esp ] 0x3f800000
push 0xffffffff
call GdipCreatePen1
sub esi 0x1
mov [ ebp - 0x20 ] eax
js r-xdata
cmp eax 0x1
jle r-xdata
movups xmm0 [ edi + 0x64 ]
mov ecx [ edi + 0x4 ]
lea eax [ ebp - 0x34 ]
sub esp 0x10
movups [ esp ] xmm0
push eax
call sub_402344
push [ ebp - 0x24 ]
call GdipDeletePen
push [ ebp - 0x1c ]
call GdipDeleteGraphics
push [ ebp - 0x30 ]
call GdipDisposeImage
call sub_406017
retn
inc esi
push 0x17
push 0x16
push esi
push 0x6
push [ edi + 0x3c ]
lea ecx [ ebp - 0x1c ]
call sub_40230c
cmp eax 0x2
jl r-xdata
mov eax [ ebp - 0x14 ]
push 0x9
push 0xd
push 0xfffffff9
imul eax [ ebx + eax + 0x8 ] 0x12
pop ecx
sub ecx eax
push ecx
push 0xa
push [ ebp - 0x24 ]
push [ ebp - 0x1c ]
call GdipDrawRectangleI
lea ebx [ ebx + 0xc ]
sub esi 0x1
jne r-xdata
lea ebx [ edi + 0x38 ]
lea ebx [ ebx + eax * 4 ]
lea edi [ eax - 0x1 ]
push 0x12
push 0x16
push esi
push 0x6
push [ ebx ]
lea ecx [ ebp - 0x1c ]
call sub_40230c
add esi 0x12
lea ebx [ ebx - 0x4 ]
sub edi 0x1
jne r-xdata
mov edi [ ebp - 0x10 ]
xor ebx ebx
sub_40230c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
test eax eax
je r-xdata
xor eax eax
mov eax [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
jmp r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ esi ]
call GdipDrawImageRectI
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x14
sub_402344
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
test eax eax
je r-xdata
xor eax eax
mov eax [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
jmp r-xdata
movss xmm0 [ ebp + 0x18 ]
sub esp 0x10
movss [ esp + 0xc ] xmm0
movss xmm0 [ ebp + 0x14 ]
movss [ esp + 0x8 ] xmm0
movss xmm0 [ ebp + 0x10 ]
movss [ esp + 0x4 ] xmm0
movss xmm0 [ ebp + 0xc ]
movss [ esp ] xmm0
push eax
push [ esi ]
call GdipDrawImageRect
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x14
sub_40239e
push 0x2c
mov eax sub_41b006
call sub_40603d
mov ebx ecx
push 0x26200a
push 0x64
push 0xc8
lea ecx [ ebp - 0x38 ]
call sub_401d95
lea eax [ ebp - 0x38 ]
xor esi esi
push eax
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] esi
call sub_401e56
push [ ebx + 0x18 ]
mov [ ebp - 0x4 ] 0x1
push [ ebp - 0x28 ]
call GdipGraphicsClear
mov ecx [ ebp - 0x24 ]
test eax eax
mov [ ebp - 0x10 ] esi
cmovne ecx eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x34 ]
mov [ ebp - 0x24 ] ecx
call GdipGetImageWidth
mov edi [ ebp - 0x30 ]
test eax eax
mov esi [ ebp - 0x10 ]
cmovne edi eax
and [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x34 ]
call GdipGetImageHeight
test eax eax
mov ecx rw-data
cmovne edi eax
lea eax [ esi - 0xa ]
cdq
and edx 0x3
mov [ ebp - 0x30 ] edi
lea esi [ edx + eax ]
mov eax [ ebp - 0x10 ]
add eax 0xfffffff6
sar esi 0x2
cdq
sub eax edx
mov edi eax
lea eax [ ebp - 0x18 ]
sar edi 0x1
movd xmm0 esi
cvtdq2ps xmm2 xmm0
push eax
movd xmm1 edi
addss xmm2 [ r--data ]
cvtdq2ps xmm1 xmm1
movss [ ebp - 0x1c ] xmm2
addss xmm1 [ r--data ]
movss [ ebp - 0x10 ] xmm1
call sub_405c00
sub eax 0x1
mov [ ebp - 0x20 ] eax
js r-xdata
movups xmm0 [ ebx + 0x28 ]
mov ecx [ ebx + 0x4 ]
lea eax [ ebp - 0x38 ]
sub esp 0x10
movups [ esp ] xmm0
push eax
call sub_402344
push [ ebp - 0x28 ]
call GdipDeleteGraphics
push [ ebp - 0x34 ]
call GdipDisposeImage
call sub_406017
retn
xor ecx ecx
mov eax [ ebp - 0x18 ]
sub esp 0x10
movd xmm2 edi
cvtdq2ps xmm2 xmm2
movss xmm0 [ eax + ecx * 8 + 0x4 ]
mulss xmm0 xmm2
movd xmm1 esi
cvtdq2ps xmm1 xmm1
addss xmm0 [ ebp - 0x10 ]
movss [ esp + 0xc ] xmm2
movss [ esp + 0x8 ] xmm1
movss [ esp + 0x4 ] xmm0
movss xmm0 [ eax + ecx * 8 ]
lea ecx [ ebp - 0x28 ]
mulss xmm0 xmm1
addss xmm0 [ ebp - 0x1c ]
movss [ esp ] xmm0
push [ ebx + 0x24 ]
call sub_402344
mov ecx [ ebp - 0x14 ]
inc ecx
mov [ ebp - 0x14 ] ecx
cmp ecx [ ebp - 0x20 ]
jle r-xdata
sub_402506
push ebp
mov ebp esp
sub esp 0xe8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push 0x26200a
mov ebx ecx
lea ecx [ ebp - 0xe8 ]
push 0x190
push 0xc8
mov [ ebp - 0xbc ] ebx
call sub_401d95
lea eax [ ebp - 0xe8 ]
push eax
lea ecx [ ebp - 0xb8 ]
call sub_401e56
push [ ebx + 0x18 ]
push [ ebp - 0xb8 ]
call GdipGraphicsClear
mov ecx [ ebp - 0xb4 ]
test eax eax
mov esi r--data
cmovne ecx eax
xor edi edi
push edi
push 0x2
push 0x1
push ecx
mov [ ebp - 0xb4 ] ecx
lea ecx [ ebp - 0xcc ]
mov [ esp ] 0x42700000
push esi
call sub_401dd0
push edi
push 0x2
push edi
push ecx
mov [ esp ] 0x42700000
lea ecx [ ebp - 0xc4 ]
push esi
call sub_401dd0
lea eax [ ebp - 0xb0 ]
mov [ ebp - 0xb0 ] 0xff00ff00
push eax
lea ecx [ ebp - 0xd8 ]
call sub_401f96
lea eax [ ebp - 0x7c ]
push r--data
push eax
call sub_4029ca
lea eax [ ebp - 0x54 ]
push r--data
push eax
call sub_4029ca
lea eax [ ebp - 0x2c ]
push r--data
push eax
call sub_4029ca
push [ rw-data ]
mov esi r--data
lea eax [ ebp - 0x68 ]
push esi
push eax
call sub_4029ca
push [ rw-data ]
lea eax [ ebp - 0x40 ]
push esi
push eax
call sub_4029ca
push [ rw-data ]
lea eax [ ebp - 0x18 ]
push esi
push eax
call sub_4029ca
add esp 0x3c
lea eax [ ebp - 0xac ]
push 0x6
pop ecx
mov [ ebp - 0xb0 ] ecx
and [ eax + 0x4 ] edi
and [ eax ] edi
lea eax [ eax + 0x8 ]
sub ecx 0x1
jne r-xdata
push 0x14
lea eax [ ebp - 0xa8 ]
pop ecx
movd xmm0 ecx
add ecx 0x78
mov [ eax - 0x4 ] 0x41800000
cvtdq2ps xmm0 xmm0
movss [ eax ] xmm0
lea eax [ eax + 0x10 ]
cmp ecx 0x140
jle r-xdata
push 0x50
lea esi [ ebp - 0xa0 ]
pop edi
lea ebx [ ebp - 0x68 ]
push ebx
call sub_40ca53
imul eax eax 0x21
add ebx 0x28
pop ecx
mov ecx 0xc8
sub ecx eax
shr ecx 0x1
movd xmm0 ecx
cvtdq2pd xmm0 xmm0
shr ecx 0x1f
addsd xmm0 [ ecx * 8 + r--data ]
cvtpd2ps xmm0 xmm0
movss [ esi - 0x4 ] xmm0
movd xmm0 edi
add edi 0x78
cvtdq2ps xmm0 xmm0
movss [ esi ] xmm0
add esi 0x10
cmp edi 0x140
jle r-xdata
mov ebx [ ebp - 0xbc ]
lea esi [ ebp - 0x7c ]
lea edi [ ebp - 0xac ]
lea eax [ ebp - 0xd8 ]
push eax
push edi
lea eax [ ebp - 0xc4 ]
push eax
push 0xffffffff
push esi
lea ecx [ ebp - 0xb8 ]
call sub_40275f
add edi 0x8
add esi 0x14
sub [ ebp - 0xb0 ] 0x1
jne r-xdata
movups xmm0 [ ebx + 0x8 ]
mov ecx [ ebx + 0x4 ]
lea eax [ ebp - 0xe8 ]
sub esp 0x10
movups [ esp ] xmm0
push eax
call sub_402344
push [ ebp - 0xd4 ]
call GdipDeleteBrush
push [ ebp - 0xc4 ]
call GdipDeleteFont
push [ ebp - 0xcc ]
call GdipDeleteFont
push [ ebp - 0xb8 ]
call GdipDeleteGraphics
push [ ebp - 0xe4 ]
call GdipDisposeImage
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn
sub_40275f
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x14 ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push esi
movss xmm0 [ eax ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
movss [ ebp - 0x10 ] xmm0
movss xmm0 [ eax + 0x4 ]
movss [ ebp - 0xc ] xmm0
test ecx ecx
je r-xdata
xor ecx ecx
mov ecx [ ecx + 0x4 ]
jmp r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
jmp r-xdata
push ecx
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi ]
call GdipDrawString
test eax eax
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_4027c8
push ebp
mov ebp esp
push ecx
push 0x10
call GdipAlloc
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0xc ]
mov ecx eax
push [ ebp + 0x8 ]
call sub_401e86
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4027ef
push ebp
mov ebp esp
push ecx
push esi
push 0x8
call GdipAlloc
mov esi eax
mov [ ebp - 0x4 ] esi
test esi esi
je r-xdata
xor esi esi
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call GdipCreateFromHDC
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
jmp r-xdata
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_402827
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
mov esi ecx
push eax
push [ esi + 0x4 ]
call GdipGetImageHeight
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop esi
mov esp ebp
pop ebp
retn
mov [ esi + 0x8 ] eax
sub_40284d
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
mov esi ecx
push eax
push [ esi + 0x4 ]
call GdipGetImageWidth
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop esi
mov esp ebp
pop ebp
retn
mov [ esi + 0x8 ] eax
sub_402873
push esi
push 0x0
push r--data
mov esi ecx
call sub_4027c8
push 0x0
push r--data
mov [ esi + 0x24 ] eax
call sub_4027c8
add esp 0x10
mov [ esi + 0x38 ] eax
pop esi
retn
sub_402899
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax edx
push esi
movzx esi dl
or esi 0xffffff00
shr eax 0x8
shl esi 0x8
movzx eax al
or esi eax
shr edx 0x10
shl esi 0x8
movzx eax dl
or esi eax
mov [ ecx ] esi
pop esi
pop ebp
retn 0x4
sub_4028c8
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
mov [ esi + 0x84 ] eax
call [ GetDC@IAT ]
push eax
mov [ esi + 0x88 ] eax
call sub_4027ef
pop ecx
mov [ esi + 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
push [ esi + 0x84 ]
call [ GetClientRect@IAT ]
mov eax [ ebp - 0xc ]
mov ecx esi
sub eax [ ebp - 0x14 ]
movd xmm5 [ ebp - 0x14 ]
movd xmm3 [ ebp - 0x10 ]
cvtdq2ps xmm5 xmm5
movd xmm6 eax
mov eax [ ebp - 0x8 ]
cvtdq2ps xmm6 xmm6
sub eax [ ebp - 0x10 ]
movd xmm4 eax
movaps xmm2 xmm6
movss [ esi + 0x7c ] xmm6
mulss xmm2 [ r--data ]
movaps xmm0 xmm6
divss xmm0 [ r--data ]
movss [ esi + 0x30 ] xmm6
mulss xmm6 [ r--data ]
cvtdq2ps xmm4 xmm4
divss xmm6 [ r--data ]
cvtdq2ps xmm3 xmm3
movss [ esi + 0x80 ] xmm4
subss xmm4 xmm2
movss [ esi + 0x74 ] xmm5
movss [ esi + 0x78 ] xmm3
movss [ esi + 0x64 ] xmm5
movss [ esi + 0x68 ] xmm2
movss [ esi + 0x6c ] xmm0
movss [ esi + 0x70 ] xmm4
movss [ esi + 0x28 ] xmm5
movss [ esi + 0x2c ] xmm3
movss [ esi + 0x34 ] xmm2
movss [ esi + 0x8 ] xmm0
movss [ esi + 0xc ] xmm2
movss [ esi + 0x10 ] xmm6
movss [ esi + 0x14 ] xmm4
call sub_402873
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn 0x4
sub_4029e8
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401d00
push [ eax + 0x4 ]
push [ eax ]
call sub_40c96e
or ecx 0xffffffff
add esp 0x1c
test eax eax
cmovs eax ecx
pop ebp
retn
sub_402a16
push ebp
mov ebp esp
sub esp 0x3ec
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi rw-data
push edi
mov ecx esi
call sub_405a50
mov ecx eax
test ecx ecx
jle r-xdata
mov edi rw-data
mov ecx edi
call sub_402506
lea eax [ ebp - 0x3ec ]
mov ecx esi
push eax
call sub_405b6d
cmp [ ebp - 0x20c ] 0x1
jne r-xdata
lea eax [ ecx + 0x1 ]
imul eax ecx
push 0xa
cdq
sub eax edx
sar eax 0x1
imul eax [ rw-data ]
imul eax eax 0x5
add [ rw-data ] eax
mov eax [ rw-data ]
add eax ecx
mov [ rw-data ] eax
cdq
pop ecx
idiv ecx
lea ecx [ eax + 0x1 ]
mov eax 0xbb8
cdq
idiv ecx
mov [ rw-data ] ecx
mov [ rw-data ] eax
mov ecx esi
call sub_405e14
mov ecx edi
call sub_40239e
mov [ rw-data ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn
sub_402aca
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0xf
jne r-xdata
pop ebp
jmp [ DefWindowProcA@IAT ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call [ BeginPaint@IAT ]
mov ecx rw-data
call sub_405432
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call [ EndPaint@IAT ]
mov ecx rw-data
call sub_4021be
sub_402b06
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0xf
jne r-xdata
pop ebp
jmp [ DefWindowProcA@IAT ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call [ BeginPaint@IAT ]
mov ecx rw-data
call sub_402199
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call [ EndPaint@IAT ]
sub_402b38
push ebp
mov ebp esp
mov cl [ rw-data ]
mov eax [ ebp + 0x8 ]
test cl cl
je r-xdata
push esi
cmp eax 0x20
jne r-xdata
cmp eax 0x20
jne r-xdata
cmp [ eax + rw-data ] 0x0
jne r-xdata
test cl cl
sete al
mov [ rw-data ] al
test al al
je r-xdata
pop ebp
retn
pop esi
push ebx
xor ebx ebx
inc ebx
mov [ eax + rw-data ] bl
mov dl [ rw-data ]
mov cl [ rw-data ]
test dl dl
je r-xdata
push rw-data
xor esi esi
push esi
push esi
push r-xdata
push esi
push esi
call [ CreateThread@IAT ]
mov [ rw-data ] eax
jmp r-xdata
push 0x0
push [ rw-data ]
call [ TerminateThread@IAT ]
jmp r-xdata
sub eax 0x25
je r-xdata
test cl cl
jne r-xdata
xor esi esi
test dl dl
je r-xdata
sub eax 0x1
je r-xdata
pop ebx
push esi
test cl cl
je r-xdata
push 0xffffffff
xor esi esi
test dl dl
je r-xdata
sub eax 0x1
je r-xdata
push esi
push 0xffffffff
push ebx
mov ecx rw-data
test cl cl
mov ecx rw-data
push esi
je r-xdata
push 0xffffffff
push esi
push esi
jmp r-xdata
xor esi esi
test dl dl
je r-xdata
sub eax 0x1
jne r-xdata
push esi
push esi
push 0xf
push [ rw-data ]
call [ PostMessageA@IAT ]
test al al
je r-xdata
push ebx
jmp r-xdata
push esi
push ebx
jmp r-xdata
mov ecx rw-data
test cl cl
mov ecx rw-data
push esi
je r-xdata
push ebx
jmp r-xdata
xor esi esi
push esi
test dl dl
je r-xdata
push esi
jmp r-xdata
call sub_405e46
jmp r-xdata
push esi
push ebx
jmp r-xdata
push 0xffffffff
jmp r-xdata
push esi
jmp r-xdata
test cl cl
mov ecx rw-data
je r-xdata
push [ rw-data ]
call [ TerminateThread@IAT ]
mov ecx rw-data
call sub_405b15
imul eax [ rw-data ]
push 0x5
pop ecx
cdq
idiv ecx
add [ rw-data ] eax
call sub_402a16
push rw-data
push esi
push esi
push r-xdata
push esi
push esi
call [ CreateThread@IAT ]
mov [ rw-data ] eax
jmp r-xdata
call sub_405ccf
push esi
push 0xffffffff
push esi
push 0xffffffff
jmp r-xdata
sub_402cc5
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
dec eax
push esi
mov esi [ ebp + 0x10 ]
sub eax 0x1
je r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
sub eax 0xfe
je r-xdata
push [ ebp + 0x14 ]
push esi
call sub_402b38
pop ecx
pop ecx
jmp r-xdata
sub eax 0x1
jne r-xdata
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ DefWindowProcA@IAT ]
pop esi
pop ebp
retn 0x10
cmp esi 0x100
jae r-xdata
call sub_40646d
int3
mov [ esi + rw-data ] al
jmp r-xdata
sub_402db7
push ebx
xor ebx ebx
push 0x100
push ebx
push rw-data
mov [ rw-data ] bl
call sub_407850
add esp 0xc
mov ecx rw-data
call sub_405df6
push ebx
push ebx
push 0xf
push [ rw-data ]
call [ PostMessageA@IAT ]
push ebx
push ebx
push 0xf
push [ rw-data ]
call [ PostMessageA@IAT ]
push rw-data
push ebx
push ebx
push r-xdata
push ebx
push ebx
call [ CreateThread@IAT ]
mov [ rw-data ] eax
pop ebx
retn
sub_402e18
push ebp
mov ebp esp
sub esp 0xac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor edi edi
mov [ ebp - 0x3c ] 0x23
mov esi 0x7f00
mov [ ebp - 0x38 ] sub_402cc5
push esi
push edi
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] ebx
call [ LoadIconA@IAT ]
push esi
push edi
mov [ ebp - 0x28 ] eax
call [ LoadCursorA@IAT ]
push 0xa
mov [ ebp - 0x20 ] edi
lea esi [ ebp - 0x3c ]
mov [ ebp - 0x1c ] edi
lea edi [ ebp - 0x84 ]
pop ecx
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x18 ] r--data
[ edi ] [ esi ]
push 0xa
pop ecx
lea esi [ ebp - 0x3c ]
mov [ ebp - 0x60 ] r--data
lea edi [ ebp - 0xac ]
mov [ ebp - 0x80 ] sub_402aca
[ edi ] [ esi ]
mov esi [ RegisterClassA@IAT ]
push eax
mov [ ebp - 0x88 ] r--data
mov [ ebp - 0xa8 ] sub_402b06
call esi
test ax ax
je r-xdata
push 0x30
push r--data
push r--data
push 0x0
call [ MessageBoxA@IAT ]
xor eax eax
lea eax [ ebp - 0x84 ]
push eax
call esi
test ax ax
je r-xdata
lea eax [ ebp - 0xac ]
push eax
call esi
test ax ax
je r-xdata
mov esi [ GetSystemMetrics@IAT ]
push 0x0
call esi
cdq
sub eax edx
mov edi eax
mov eax [ rw-data ]
cdq
sub eax edx
sar edi 0x1
sar eax 0x1
push 0x1
sub edi eax
call esi
mov ecx [ rw-data ]
cdq
sub eax edx
mov esi eax
mov eax ecx
cdq
sub eax edx
sar esi 0x1
sar eax 0x1
sub esi eax
xor eax eax
push eax
push ebx
push eax
push eax
push ecx
push [ rw-data ]
push esi
mov esi [ CreateWindowExA@IAT ]
push edi
push 0xa0000
push r--data
push r--data
push eax
call esi
lea ecx [ ebp - 0x14 ]
mov [ rw-data ] eax
push ecx
push eax
call [ GetClientRect@IAT ]
xor eax eax
mov edi r--data
push eax
push ebx
push eax
push [ rw-data ]
push [ ebp - 0x8 ]
push [ ebp - 0x8 ]
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push 0x40000000
push edi
push r--data
push eax
call esi
push 0x0
push ebx
xor ebx ebx
mov [ rw-data ] eax
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
push ebx
push [ rw-data ]
push [ ebp - 0x8 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push 0x40000000
push edi
push r--data
push ebx
call esi
mov esi [ ShowWindow@IAT ]
push ebx
push [ rw-data ]
mov [ rw-data ] eax
call esi
push ebx
push [ rw-data ]
call esi
push ebx
push [ rw-data ]
call esi
push [ rw-data ]
call [ SetFocus@IAT ]
push [ rw-data ]
mov ecx rw-data
call sub_405690
push [ rw-data ]
mov ecx rw-data
call sub_4028c8
push 0x100
push ebx
push rw-data
call sub_407850
add esp 0xc
lea eax [ ebp - 0x40 ]
push eax
push ebx
push ebx
push r-xdata
push ebx
push ebx
call [ CreateThread@IAT ]
mov [ rw-data ] eax
jmp r-xdata
cmp [ rw-data ] bl
jne r-xdata
push 0x1
push ebx
push ebx
push ebx
lea eax [ ebp - 0x5c ]
push eax
call [ PeekMessageA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x54 ]
jmp r-xdata
cmp [ ebp - 0x58 ] 0x12
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn 0x10
lea eax [ ebp - 0x5c ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x5c ]
push eax
call [ DispatchMessageA@IAT ]
mov [ rw-data ] bl
jmp r-xdata
push 0x64
call [ Sleep@IAT ]
sub_4030a2
push 0x10
mov eax sub_41b031
call sub_406071
mov edi ecx
and [ edi ] 0x0
push 0x214
call sub_406549
pop ecx
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor esi esi
mov ecx eax
call sub_401c12
mov esi eax
jmp r-xdata
push ebx
call j_sub_40df49
mov [ esp ] sub_40328c
call [ SetUnhandledExceptionFilter@IAT ]
mov eax edi
call sub_40602c
retn
push eax
push 0xe7d6
push ebx
mov ecx esi
call sub_401c26
mov esi [ edi ]
add esi [ ebp - 0x1c ]
and [ ebp - 0x17 ] 0x0
mov [ ebp - 0x18 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
push 0xe7d6
call sub_40657c
mov [ esp ] 0xe7d6
mov ebx eax
push rw-data
push ebx
call sub_406f00
add esp 0xc
mov ecx rw-data
push 0xe7d6
push ebx
call sub_401952
push 0x0
push 0xe7d6
push ebx
mov ecx esi
call sub_401c26
push 0x40
push 0x3000
push eax
push 0x0
mov [ ebp - 0x1c ] eax
call [ VirtualAlloc@IAT ]
mov [ edi ] eax
test eax eax
je r-xdata
xor esi esi
push 0x5
dec esi
lea eax [ ebp - 0x18 ]
push esi
push eax
call [ lstrcpynA@IAT ]
push r--data
lea eax [ ebp - 0x18 ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
push 0x104
push esi
push rw-data
call [ lstrcpynA@IAT ]
cmp esi [ edi ]
jb r-xdata
jmp r-xdata
test esi esi
je r-xdata
sub_4031a7
push 0x18
push r--data
call sub_406590
mov edi ecx
mov [ ebp - 0x28 ] edi
xor esi esi
cmp [ edi ] esi
je r-xdata
push 0x2000
push esi
mov eax [ ebp - 0x28 ]
push [ eax ]
call [ VirtualFree@IAT ]
push 0xffffffff
call [ GetCurrentProcess@IAT ]
push eax
call [ WaitForSingleObject@IAT ]
call sub_4065d6
retn
mov [ ebp - 0x1c ] esi
push rw-data
call [ lstrlenA@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] esi
mov ecx esi
mov eax esi
cmp [ edi ] eax
cmovne eax [ edi ]
mov [ ebp - 0x1c ] eax
push 0x64
push esi
push esi
call sub_407850
add esp 0xc
jmp r-xdata
mov edx esi
mov [ ebp - 0x4 ] 0xfffffffe
inc ecx
jmp r-xdata
mov eax [ ebp - 0x1c ]
sub eax ecx
cmp edx eax
jae r-xdata
mov [ ebp - 0x24 ] ecx
cmp ecx [ ebp - 0x1c ]
jae r-xdata
inc edx
jmp r-xdata
push r--data
push r--data
call sub_403292
pop ecx
pop ecx
mov [ ebp - 0x20 ] edx
cmp edx ecx
jge r-xdata
sub_403226
mov esp [ ebp - 0x18 ]
xor esi esi
mov ecx esi
mov edx esi
inc ecx
jmp r-xdata
mov eax [ ebp - 0x1c ]
sub eax ecx
cmp edx eax
jb r-xdata
cmp ecx [ ebp - 0x1c ]
jae r-xdata
push rw-data
call [ ebp - 0x1c ]
pop ecx
push 0xffffffff
call [ GetCurrentProcess@IAT ]
push eax
call [ WaitForSingleObject@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x2000
push esi
mov eax [ ebp - 0x28 ]
push [ eax ]
call [ VirtualFree@IAT ]
push 0xffffffff
call [ GetCurrentProcess@IAT ]
push eax
call [ WaitForSingleObject@IAT ]
call sub_4065d6
retn
inc edx
jmp r-xdata
cmp edx ecx
jge r-xdata
sub_403292
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push 0x104
push 0x0
lea eax [ ebp - 0x20c ]
push eax
call sub_407850
add esp 0xc
push 0x104
push 0x0
lea eax [ ebp - 0x108 ]
push eax
call sub_407850
add esp 0xc
push 0x104
lea eax [ ebp - 0x20c ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
mov [ ebp - 0x278 ] eax
push 0x0
push 0x1a
lea eax [ ebp - 0x108 ]
push eax
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
lea eax [ ebp - 0x108 ]
push eax
call [ lstrlenA@IAT ]
mov [ ebp - 0x260 ] eax
mov eax [ ebp - 0x260 ]
mov [ ebp + eax - 0x108 ] 0x5c
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
shl eax 0x1
push eax
push [ ebp + 0xc ]
mov eax [ ebp - 0x260 ]
lea eax [ ebp + eax - 0x107 ]
push eax
call sub_406f00
add esp 0xc
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] ecx
mov [ ebp - 0x254 ] edx
push ecx
push eax
push esi
push esp
push ebx
push esi
call sub_403410
retn 0x50
sub_4033a0
pop edx
jns r-xdata
jne r-xdata
add ecx 0x54bf0a75
jne r-xdata
push ecx
call sub_4033a0
jmp [ 0x70246c83 ]
sub ebx 0x81f9795a
shl [ ebp + 0xa ] 0xbf
push esp
sub [ esp + 0x70 ] 0x2
sub esp 0x8
jge r-xdata
mov edi 0xf1e85154
jno r-xdata
add eax 0xe89c5656
add eax 0xb9000000
jae r-xdata
add ecx 0x53575255
call sub_4033d8
jne 0xffffffffa3a51a4b
push esi
push esi
pushfd
call sub_4033c9
mov ecx 0xc1810d71
push ebp
push edx
push edi
push ebx
mov [ fs : 0xffffffff9c248481 ] eax
add [ eax ] al
add [ esi + 0x34 ] ah
inc eax
add [ ebx + 0x57704ec ] al
jmp 0xffffffff894f3a60
sub_4033d8
add [ esp + 0x9c ] r-xdata
sub esp 0x4
ja r-xdata
jne r-xdata
jmp 0xffffffff894f3a60
jg r-xdata
add edx 0x5e855
add [ eax ] al
jae r-xdata
jne 0xffffffffa864d8ff
mov ecx 0x850fef7f
push ebp
call sub_4033fc
jns 0xffffffffc2c13d66
add [ eax ] al
add al ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x7508ec83 ] bh
adc al 0x81
out 0x53 eax
push eax
call sub_40341f
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_403417
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104f8eb
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_403450
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x25c ]
mov ecx [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
lea eax [ ebp - 0x108 ]
push eax
lea eax [ ebp - 0x20c ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x25b ] eax
mov [ ebp - 0x257 ] ecx
mov [ ebp - 0x253 ] edx
push esi
push ebp
push esi
call sub_40355e
retn 0x10
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405fe1
mov esp ebp
pop ebp
retn
sub_403410
sub esp 0x8
jne r-xdata
push ecx
push ebx
call sub_403417
mov ecx 0x18244483
push es
and edi 0x1e85053
add [ eax ] al
add [ ecx + ebx * 2 - 0x7efd82a7 ] bh
r-xdata
jae r-xdata
or eax 0xc181027d
sub esp 0x4
jne r-xdata
add [ esp + 0x18 ] 0x6
jae 0xffffffffe828877e
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104f8eb
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_403450
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x25c ]
mov ecx [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
lea eax [ ebp - 0x108 ]
push eax
lea eax [ ebp - 0x20c ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x25b ] eax
mov [ ebp - 0x257 ] ecx
mov [ ebp - 0x253 ] edx
push esi
push ebp
push esi
call sub_40355e
retn 0x10
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405fe1
mov esp ebp
pop ebp
retn
sub_403417
push ebx
push eax
call sub_40341f
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_403417
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104f8eb
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_403450
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x25c ]
mov ecx [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
lea eax [ ebp - 0x108 ]
push eax
lea eax [ ebp - 0x20c ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x25b ] eax
mov [ ebp - 0x257 ] ecx
mov [ ebp - 0x253 ] edx
push esi
push ebp
push esi
call sub_40355e
retn 0x10
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405fe1
mov esp ebp
pop ebp
retn
sub_40341f
pop ecx
pop ecx
jge r-xdata
ja r-xdata
xor edx 0x830f0a77
push ecx
push ebx
call sub_403417
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
add [ esp + 0x18 ] 0x6
jae 0xffffffffe828877e
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104f8eb
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_403450
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x25c ]
mov ecx [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
lea eax [ ebp - 0x108 ]
push eax
lea eax [ ebp - 0x20c ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x25b ] eax
mov [ ebp - 0x257 ] ecx
mov [ ebp - 0x253 ] edx
push esi
push ebp
push esi
call sub_40355e
retn 0x10
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405fe1
mov esp ebp
pop ebp
retn
sub_4034d3
pop eax
ja r-xdata
jne r-xdata
call [ 0xffffffff81027959 ]
pop eax
jno r-xdata
jo 0xffffffffe846a62b
jns r-xdata
xor ebx 0x53e90173
pop ecx
jns r-xdata
leave
call 0x35ac2f
adc eax 0x81027959
jae r-xdata
xor eax 0xf02795a
mov [ ebx + 0x248246c ] es
jns r-xdata
sub [ esp + 0x30 ] r-xdata
sub esp 0x4
jae r-xdata
push ebp
push esp
sub esp 0x8
call sub_4034ff
jae 0x5a762379
or ecx 0x30246c81
mov ebx 0x83004034
in al dx
add al 0x73
adc al [ ecx - 0x16fe8c0d ]
push ebx
jmp 0xffffffff83948a46
push edx
push ebp
sub esp 0xc
call sub_403524
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
mov bl 0x35
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f3bae
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub esp 0x4
jge r-xdata
sub [ esp + 0x48 ] 0x2
jl 0x4864a18b
add al [ ebx + 0x77d04ec ]
sub_4034ff
pop edx
jns r-xdata
sub [ esp + 0x48 ] 0x2
sub esp 0x4
jge r-xdata
jl 0x4864a18b
push edx
push ebp
sub esp 0xc
call sub_403524
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
mov bl 0x35
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f3bae
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
add al [ ebx + 0x77d04ec ]
sub_403524
add esp 0x4
jae r-xdata
pop ecx
jno r-xdata
jmp [ 0x5c244481 ]
jae r-xdata
ja 0xffffffffecc38a6b
add [ esp + 0x5c ] r-xdata
sub esp 0x4
jne r-xdata
mov esp 0x7304c483
or al 0xe8
add eax 0x81000000
ja r-xdata
jmp 0xffffffff8d4f3bae
jg r-xdata
je 0x461d98
jno r-xdata
mov edi 0xc368c483
add [ eax ] al
je 0xffffffff840023cc
push ebx
call sub_40354c
jge 0xffffffff844f3fb8
jne r-xdata
push 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
add [ ebx + 0x545604ec ] 0x56
push eax
push ecx
call sub_403578
jpo 0x59283aee
les ebp [ eax - 0x3d ]
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3aaacc
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x539189dd
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
test [ ebp - 0x74000003 ] esp
lea ebp [ ecx - 0x74000003 ]
xchg ebp eax
lodsd [ esi ]
std
call sub_403593
mov esp 0x890f0573
out 0xff eax
and eax 0x5c244481
mov bl 0x35
inc eax
add [ ebx + 0x57504ec ] al
push edx
push ebp
sub esp 0xc
call sub_403524
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub_40355e
sub esp 0x4
push esi
push esp
push esi
push eax
push ecx
call sub_403578
jpo 0x59283aee
jne r-xdata
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3aaacc
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x539189dd
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
test [ ebp - 0x74000003 ] esp
lea ebp [ ecx - 0x74000003 ]
xchg ebp eax
lodsd [ esi ]
std
call sub_403593
mov esp 0x890f0573
push edx
push ebp
sub esp 0xc
call sub_403524
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
mov bl 0x35
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f3bae
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub_403578
pop edx
jae r-xdata
pop eax
jne r-xdata
sub ebx 0x10244483
push es
jge r-xdata
or eax 0xbb067358
ja r-xdata
jae 0x539189dd
pop eax
jae r-xdata
call 0xe3aaacc
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
test [ ebp - 0x74000003 ] esp
lea ebp [ ecx - 0x74000003 ]
xchg ebp eax
lodsd [ esi ]
std
call sub_403593
mov esp 0x890f0573
sub esp 0x4
ja r-xdata
add [ esp + 0x10 ] 0x6
mov ebx 0x81f5735a
jmp r-xdata
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push edx
push ebp
sub esp 0xc
call sub_403524
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
mov bl 0x35
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f3bae
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub_403593
jae r-xdata
pop edx
jns 0x5b002612
jmp [ esp + 0x24 ]
xor esi 0x242464ff
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
test [ ebp - 0x74000003 ] esp
lea ebp [ ecx - 0x74000003 ]
xchg ebp eax
lodsd [ esi ]
std
jns r-xdata
sub_403715
push ebp
mov ebp esp
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov [ ebp - 0x78 ] r--data
mov [ ebp - 0x74 ] 0x100
mov [ ebp - 0x94 ] 0x2
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x58 ] edx
push esi
push ebp
push esi
call sub_4037fb
retn 0x10
sub_403770
pop eax
ja r-xdata
jne r-xdata
call [ 0xffffffff81027959 ]
pop eax
jno r-xdata
jo 0xffffffffe846a8c8
jns r-xdata
xor ebx 0x53e90173
pop ecx
jns r-xdata
leave
call 0x35aecc
adc eax 0x81027959
jae r-xdata
xor eax 0xf02795a
jns r-xdata
sub [ esp + 0x30 ] r-xdata
sub esp 0x4
jae r-xdata
or ecx 0x30246c81
pop eax
aaa
inc eax
add [ ebx + 0x127304ec ] al
push ebp
push esp
sub esp 0x8
call sub_40379c
jae 0x5a762616
push ebx
jmp 0xffffffff83948ce3
push edx
push ebp
sub esp 0xc
call sub_4037c1
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
push eax
cmp [ eax ] al
sub esp 0x4
jne r-xdata
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub esp 0x4
jge r-xdata
sub [ esp + 0x48 ] 0x2
jl 0x4864a428
ja r-xdata
jmp 0xffffffff8d4f3e4b
add al [ ebx + 0x77d04ec ]
jg r-xdata
je 0x462035
jno r-xdata
mov edi 0xc368c483
add [ eax ] al
je 0xffffffff84002669
push ebx
call sub_4037e9
jge 0xffffffff844f4255
jne r-xdata
push 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
add [ ebx + 0x545604ec ] 0x56
push eax
push ecx
call sub_403815
jpo 0x59283d8b
les ebp [ eax - 0x3d ]
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3aad69
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x53918c7a
mov [ ebx + 0x248246c ] es
add cl [ edi ]
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
pushfd
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
lea eax [ ebp + 0x3c ]
movzx eax ax
lea ecx [ ebp - 0x3c ]
cmp eax ecx
je r-xdata
call sub_403830
mov esp 0x890f0573
movsx eax [ ebp + 0xcc ]
xor edx edx
mov ecx 0x7bb6
div ecx
mov [ ebp - 0x6c ] edx
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x44 ]
cwde
not eax
mov [ ebp - 0x6c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
movzx eax al
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x54 ]
movsx eax [ eax - 0xc ]
not eax
mov [ ebp - 0x70 ] eax
lea eax [ ebp + 0xa0 ]
movzx eax ax
lea ecx [ ebp - 0x54 ]
sub eax [ ecx - 0x18 ]
mov [ ebp - 0x70 ] eax
jmp r-xdata
movsx eax [ ebp + 0x40 ]
cmp [ ebp - 0x6c ] eax
jb r-xdata
mov [ ebp - 0x58 ] 0x400
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x74 ]
or eax 0xf003f
push eax
push 0x0
push [ ebp - 0x78 ]
push 0x80000001
call [ RegOpenKeyExA@IAT ]
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x54 ]
add eax 0xfffffff0
cdq
push 0x78
pop ecx
idiv ecx
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x58 ] 0x400
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x74 ]
or eax 0xf003f
push eax
push 0x0
push [ ebp - 0x78 ]
push 0x80000001
call [ RegOpenKeyExA@IAT ]
mov [ ebp - 0x5c ] eax
movsx eax [ ebp - 0x1c ]
xor ecx ecx
sub ecx eax
mov [ ebp - 0x7c ] ecx
jmp r-xdata
cmp [ ebp - 0x70 ] 0x57a9
jbe r-xdata
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp + 0x40 ]
cwde
xor ecx ecx
sub ecx eax
mov [ ebp - 0x80 ] ecx
lea eax [ ebp - 0x48 ]
movzx eax al
imul eax eax 0x54af
mov [ ebp - 0x80 ] eax
jmp r-xdata
lea eax [ ebp + 0x64 ]
cmp [ ebp - 0x7c ] eax
jae r-xdata
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
lea eax [ eax + eax + 0x1 ]
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x58 ] edx
push esi
push ebx
sub esp 0x10
call sub_404038
retn 0x50
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x80 ]
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x5c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405fe1
mov esp ebp
pop ebp
retn
sub_40379c
pop edx
jns r-xdata
sub [ esp + 0x48 ] 0x2
jl 0x4864a428
push edx
push ebp
sub esp 0xc
call sub_4037c1
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
push eax
cmp [ eax ] al
sub esp 0x4
jne r-xdata
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
add al [ ebx + 0x77d04ec ]
ja r-xdata
jmp 0xffffffff8d4f3e4b
jg r-xdata
je 0x462035
jno r-xdata
mov edi 0xc368c483
add [ eax ] al
je 0xffffffff84002669
push ebx
call sub_4037e9
jge 0xffffffff844f4255
jne r-xdata
push 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
add [ ebx + 0x545604ec ] 0x56
push eax
push ecx
call sub_403815
jpo 0x59283d8b
les ebp [ eax - 0x3d ]
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3aad69
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x53918c7a
sub esp 0x4
jge r-xdata
add cl [ edi ]
mov [ ebx + 0x248246c ] es
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
pushfd
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
lea eax [ ebp + 0x3c ]
movzx eax ax
lea ecx [ ebp - 0x3c ]
cmp eax ecx
je r-xdata
call sub_403830
mov esp 0x890f0573
movsx eax [ ebp + 0xcc ]
xor edx edx
mov ecx 0x7bb6
div ecx
mov [ ebp - 0x6c ] edx
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x44 ]
cwde
not eax
mov [ ebp - 0x6c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
movzx eax al
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x54 ]
movsx eax [ eax - 0xc ]
not eax
mov [ ebp - 0x70 ] eax
lea eax [ ebp + 0xa0 ]
movzx eax ax
lea ecx [ ebp - 0x54 ]
sub eax [ ecx - 0x18 ]
mov [ ebp - 0x70 ] eax
jmp r-xdata
movsx eax [ ebp + 0x40 ]
cmp [ ebp - 0x6c ] eax
jb r-xdata
mov [ ebp - 0x58 ] 0x400
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x74 ]
or eax 0xf003f
push eax
push 0x0
push [ ebp - 0x78 ]
push 0x80000001
call [ RegOpenKeyExA@IAT ]
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x54 ]
add eax 0xfffffff0
cdq
push 0x78
pop ecx
idiv ecx
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x58 ] 0x400
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x74 ]
or eax 0xf003f
push eax
push 0x0
push [ ebp - 0x78 ]
push 0x80000001
call [ RegOpenKeyExA@IAT ]
mov [ ebp - 0x5c ] eax
movsx eax [ ebp - 0x1c ]
xor ecx ecx
sub ecx eax
mov [ ebp - 0x7c ] ecx
jmp r-xdata
cmp [ ebp - 0x70 ] 0x57a9
jbe r-xdata
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp + 0x40 ]
cwde
xor ecx ecx
sub ecx eax
mov [ ebp - 0x80 ] ecx
lea eax [ ebp - 0x48 ]
movzx eax al
imul eax eax 0x54af
mov [ ebp - 0x80 ] eax
jmp r-xdata
lea eax [ ebp + 0x64 ]
cmp [ ebp - 0x7c ] eax
jae r-xdata
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
lea eax [ eax + eax + 0x1 ]
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x58 ] edx
push esi
push ebx
sub esp 0x10
call sub_404038
retn 0x50
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x80 ]
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x5c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405fe1
mov esp ebp
pop ebp
retn
sub_4037c1
add esp 0x4
jae r-xdata
pop ecx
jno r-xdata
jmp [ 0x5c244481 ]
jae r-xdata
ja 0xffffffffecc38d08
add [ esp + 0x5c ] r-xdata
sub esp 0x4
jne r-xdata
mov esp 0x7304c483
or al 0xe8
add eax 0x81000000
ja r-xdata
jmp 0xffffffff8d4f3e4b
jg r-xdata
je 0x462035
jno r-xdata
mov edi 0xc368c483
add [ eax ] al
je 0xffffffff84002669
push ebx
call sub_4037e9
jge 0xffffffff844f4255
jne r-xdata
push 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
add [ ebx + 0x545604ec ] 0x56
push eax
push ecx
call sub_403815
jpo 0x59283d8b
les ebp [ eax - 0x3d ]
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3aad69
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x53918c7a
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
pushfd
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
lea eax [ ebp + 0x3c ]
movzx eax ax
lea ecx [ ebp - 0x3c ]
cmp eax ecx
je r-xdata
call sub_403830
mov esp 0x890f0573
out 0xff eax
and eax 0x5c244481
push eax
cmp [ eax ] al
push edx
push ebp
sub esp 0xc
call sub_4037c1
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
movsx eax [ ebp + 0xcc ]
xor edx edx
mov ecx 0x7bb6
div ecx
mov [ ebp - 0x6c ] edx
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x44 ]
cwde
not eax
mov [ ebp - 0x6c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
movzx eax al
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x54 ]
movsx eax [ eax - 0xc ]
not eax
mov [ ebp - 0x70 ] eax
lea eax [ ebp + 0xa0 ]
movzx eax ax
lea ecx [ ebp - 0x54 ]
sub eax [ ecx - 0x18 ]
mov [ ebp - 0x70 ] eax
jmp r-xdata
movsx eax [ ebp + 0x40 ]
cmp [ ebp - 0x6c ] eax
jb r-xdata
mov [ ebp - 0x58 ] 0x400
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x74 ]
or eax 0xf003f
push eax
push 0x0
push [ ebp - 0x78 ]
push 0x80000001
call [ RegOpenKeyExA@IAT ]
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x54 ]
add eax 0xfffffff0
cdq
push 0x78
pop ecx
idiv ecx
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x58 ] 0x400
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x74 ]
or eax 0xf003f
push eax
push 0x0
push [ ebp - 0x78 ]
push 0x80000001
call [ RegOpenKeyExA@IAT ]
mov [ ebp - 0x5c ] eax
movsx eax [ ebp - 0x1c ]
xor ecx ecx
sub ecx eax
mov [ ebp - 0x7c ] ecx
jmp r-xdata
cmp [ ebp - 0x70 ] 0x57a9
jbe r-xdata
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp + 0x40 ]
cwde
xor ecx ecx
sub ecx eax
mov [ ebp - 0x80 ] ecx
lea eax [ ebp - 0x48 ]
movzx eax al
imul eax eax 0x54af
mov [ ebp - 0x80 ] eax
jmp r-xdata
lea eax [ ebp + 0x64 ]
cmp [ ebp - 0x7c ] eax
jae r-xdata
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
lea eax [ eax + eax + 0x1 ]
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x58 ] edx
push esi
push ebx
sub esp 0x10
call sub_404038
retn 0x50
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x80 ]
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x5c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405fe1
mov esp ebp
pop ebp
retn
sub_4037fb
sub esp 0x4
push esi
push esp
push esi
jne r-xdata
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3aad69
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x53918c7a
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
pushfd
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
lea eax [ ebp + 0x3c ]
movzx eax ax
lea ecx [ ebp - 0x3c ]
cmp eax ecx
je r-xdata
call sub_403830
mov esp 0x890f0573
push edx
push ebp
sub esp 0xc
call sub_4037c1
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
push eax
cmp [ eax ] al
sub esp 0x4
jne r-xdata
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
movsx eax [ ebp + 0xcc ]
xor edx edx
mov ecx 0x7bb6
div ecx
mov [ ebp - 0x6c ] edx
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x44 ]
cwde
not eax
mov [ ebp - 0x6c ] eax
jmp r-xdata
ja r-xdata
jmp 0xffffffff8d4f3e4b
lea eax [ ebp - 0x3c ]
movzx eax al
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x54 ]
movsx eax [ eax - 0xc ]
not eax
mov [ ebp - 0x70 ] eax
lea eax [ ebp + 0xa0 ]
movzx eax ax
lea ecx [ ebp - 0x54 ]
sub eax [ ecx - 0x18 ]
mov [ ebp - 0x70 ] eax
jmp r-xdata
movsx eax [ ebp + 0x40 ]
cmp [ ebp - 0x6c ] eax
jb r-xdata
jg r-xdata
je 0x462035
mov [ ebp - 0x58 ] 0x400
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x74 ]
or eax 0xf003f
push eax
push 0x0
push [ ebp - 0x78 ]
push 0x80000001
call [ RegOpenKeyExA@IAT ]
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x54 ]
add eax 0xfffffff0
cdq
push 0x78
pop ecx
idiv ecx
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x58 ] 0x400
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x74 ]
or eax 0xf003f
push eax
push 0x0
push [ ebp - 0x78 ]
push 0x80000001
call [ RegOpenKeyExA@IAT ]
mov [ ebp - 0x5c ] eax
movsx eax [ ebp - 0x1c ]
xor ecx ecx
sub ecx eax
mov [ ebp - 0x7c ] ecx
jmp r-xdata
cmp [ ebp - 0x70 ] 0x57a9
jbe r-xdata
jno r-xdata
push eax
push ecx
call sub_403815
jpo 0x59283d8b
mov edi 0xc368c483
add [ eax ] al
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp + 0x40 ]
cwde
xor ecx ecx
sub ecx eax
mov [ ebp - 0x80 ] ecx
lea eax [ ebp - 0x48 ]
movzx eax al
imul eax eax 0x54af
mov [ ebp - 0x80 ] eax
jmp r-xdata
lea eax [ ebp + 0x64 ]
cmp [ ebp - 0x7c ] eax
jae r-xdata
je 0xffffffff84002669
push ebx
call sub_4037e9
jge 0xffffffff844f4255
push 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
add [ ebx + 0x545604ec ] 0x56
les ebp [ eax - 0x3d ]
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
lea eax [ eax + eax + 0x1 ]
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x58 ] edx
push esi
push ebx
sub esp 0x10
call sub_404038
retn 0x50
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x80 ]
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x5c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405fe1
mov esp ebp
pop ebp
retn
sub_403815
pop edx
jae r-xdata
pop eax
sub ebx 0x10244483
push es
jge r-xdata
or eax 0xbb067358
ja r-xdata
jae 0x53918c7a
pop eax
jae r-xdata
call 0xe3aad69
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
pushfd
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
lea eax [ ebp + 0x3c ]
movzx eax ax
lea ecx [ ebp - 0x3c ]
cmp eax ecx
je r-xdata
call sub_403830
mov esp 0x890f0573
sub esp 0x4
ja r-xdata
add [ esp + 0x10 ] 0x6
mov ebx 0x81f5735a
jmp r-xdata
movsx eax [ ebp + 0xcc ]
xor edx edx
mov ecx 0x7bb6
div ecx
mov [ ebp - 0x6c ] edx
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x44 ]
cwde
not eax
mov [ ebp - 0x6c ] eax
jmp r-xdata
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
lea eax [ ebp - 0x3c ]
movzx eax al
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x54 ]
movsx eax [ eax - 0xc ]
not eax
mov [ ebp - 0x70 ] eax
lea eax [ ebp + 0xa0 ]
movzx eax ax
lea ecx [ ebp - 0x54 ]
sub eax [ ecx - 0x18 ]
mov [ ebp - 0x70 ] eax
jmp r-xdata
movsx eax [ ebp + 0x40 ]
cmp [ ebp - 0x6c ] eax
jb r-xdata
push edx
push ebp
sub esp 0xc
call sub_4037c1
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
push eax
cmp [ eax ] al
sub esp 0x4
jne r-xdata
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
mov [ ebp - 0x58 ] 0x400
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x74 ]
or eax 0xf003f
push eax
push 0x0
push [ ebp - 0x78 ]
push 0x80000001
call [ RegOpenKeyExA@IAT ]
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x54 ]
add eax 0xfffffff0
cdq
push 0x78
pop ecx
idiv ecx
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x58 ] 0x400
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x74 ]
or eax 0xf003f
push eax
push 0x0
push [ ebp - 0x78 ]
push 0x80000001
call [ RegOpenKeyExA@IAT ]
mov [ ebp - 0x5c ] eax
movsx eax [ ebp - 0x1c ]
xor ecx ecx
sub ecx eax
mov [ ebp - 0x7c ] ecx
jmp r-xdata
cmp [ ebp - 0x70 ] 0x57a9
jbe r-xdata
ja r-xdata
jmp 0xffffffff8d4f3e4b
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp + 0x40 ]
cwde
xor ecx ecx
sub ecx eax
mov [ ebp - 0x80 ] ecx
lea eax [ ebp - 0x48 ]
movzx eax al
imul eax eax 0x54af
mov [ ebp - 0x80 ] eax
jmp r-xdata
lea eax [ ebp + 0x64 ]
cmp [ ebp - 0x7c ] eax
jae r-xdata
jg r-xdata
je 0x462035
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
lea eax [ eax + eax + 0x1 ]
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x58 ] edx
push esi
push ebx
sub esp 0x10
call sub_404038
retn 0x50
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x80 ]
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x5c ] 0x0
je r-xdata
jno r-xdata
mov edi 0xc368c483
add [ eax ] al
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405fe1
mov esp ebp
pop ebp
retn
je 0xffffffff84002669
push ebx
call sub_4037e9
jge 0xffffffff844f4255
jne r-xdata
push 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
add [ ebx + 0x545604ec ] 0x56
push eax
push ecx
call sub_403815
jpo 0x59283d8b
les ebp [ eax - 0x3d ]
sub_403830
jae r-xdata
pop edx
jns 0x5b0028af
jmp [ esp + 0x24 ]
xor esi 0x242464ff
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
pushfd
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
lea eax [ ebp + 0x3c ]
movzx eax ax
lea ecx [ ebp - 0x3c ]
cmp eax ecx
je r-xdata
jns r-xdata
movsx eax [ ebp + 0xcc ]
xor edx edx
mov ecx 0x7bb6
div ecx
mov [ ebp - 0x6c ] edx
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x44 ]
cwde
not eax
mov [ ebp - 0x6c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
movzx eax al
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x54 ]
movsx eax [ eax - 0xc ]
not eax
mov [ ebp - 0x70 ] eax
lea eax [ ebp + 0xa0 ]
movzx eax ax
lea ecx [ ebp - 0x54 ]
sub eax [ ecx - 0x18 ]
mov [ ebp - 0x70 ] eax
jmp r-xdata
movsx eax [ ebp + 0x40 ]
cmp [ ebp - 0x6c ] eax
jb r-xdata
mov [ ebp - 0x58 ] 0x400
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x74 ]
or eax 0xf003f
push eax
push 0x0
push [ ebp - 0x78 ]
push 0x80000001
call [ RegOpenKeyExA@IAT ]
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x54 ]
add eax 0xfffffff0
cdq
push 0x78
pop ecx
idiv ecx
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x58 ] 0x400
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x74 ]
or eax 0xf003f
push eax
push 0x0
push [ ebp - 0x78 ]
push 0x80000001
call [ RegOpenKeyExA@IAT ]
mov [ ebp - 0x5c ] eax
movsx eax [ ebp - 0x1c ]
xor ecx ecx
sub ecx eax
mov [ ebp - 0x7c ] ecx
jmp r-xdata
cmp [ ebp - 0x70 ] 0x57a9
jbe r-xdata
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp + 0x40 ]
cwde
xor ecx ecx
sub ecx eax
mov [ ebp - 0x80 ] ecx
lea eax [ ebp - 0x48 ]
movzx eax al
imul eax eax 0x54af
mov [ ebp - 0x80 ] eax
jmp r-xdata
lea eax [ ebp + 0x64 ]
cmp [ ebp - 0x7c ] eax
jae r-xdata
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
lea eax [ eax + eax + 0x1 ]
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x58 ] edx
push esi
push ebx
sub esp 0x10
call sub_404038
retn 0x50
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x80 ]
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x5c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405fe1
mov esp ebp
pop ebp
retn
sub_4039c0
jne r-xdata
jno r-xdata
or edi 0x9a890f
add [ eax ] al
add esp 0x8
jno r-xdata
sub edx 0x11e890f
add [ eax ] al
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44fe62
pop edx
jno r-xdata
mov ecx 0xe981637f
jae r-xdata
sub ecx 0xe1813e75
add [ eax + eax - 0x7af10000 ] 0xea810971
jns r-xdata
call [ 0x40246c81 ]
0x83004039 0x10ec
pop edx
ja r-xdata
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
jns r-xdata
jge 0xffffffffb8afb9c2
pushfd
call sub_4039ab
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
push ebp
call sub_4039c0
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jae r-xdata
or edi 0x8d0f2c73
jg r-xdata
jmp [ 0xce8d0f ]
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
pop ecx
jno r-xdata
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
jae r-xdata
jg r-xdata
jne 0x24c14a8b
jne r-xdata
call sub_403a4b
ja 0x504be52
call 0x5290928b
add esp 0x4
jns r-xdata
mov eax 0xc7819173
jge r-xdata
jmp 0xffffffff844f6cec
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcac36b
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
add esp 0x4
jne r-xdata
jg 0xffffffffff96bdc2
pop eax
jns r-xdata
sub eax 0xfec5e89c
jno r-xdata
sub esi 0x73bd047f
push ebp
jns r-xdata
xor edx 0x81257159
r-xdata
jno 0x16402805
pop edx
jg r-xdata
jpo 0xf70b328
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
ja r-xdata
and ecx 0xf681ad79
jno r-xdata
pop ecx
or eax 0xf04c483
mov ebp ebp
add esp 0x4
jno r-xdata
je 0xfffffffffed0be34
jne r-xdata
jno 0xffffffff834f922f
ja r-xdata
jmp [ 0xfffffffff381df77 ]
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1fa1b
jae r-xdata
je 0xffffffff814fdc01
jne 0xffffffffeac1435b
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
ja r-xdata
call 0xffcb52a
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jg r-xdata
jg 0xffffffff9c948e36
ja r-xdata
jns r-xdata
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1bb55
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
push esi
push esi
call sub_403b36
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd942d
push edx
call sub_403a6c
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a478f1
jae r-xdata
je 0xffffffffa3a4e001
jge r-xdata
call [ 0xffffffffca81677d ]
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
pop edx
pop edx
call sub_403aeb
xor edi 0x517f5859
jno 0xfffffffff2c195a8
push ecx
push ebx
call sub_403a3b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3c38c
ja r-xdata
jge 0x71fc7b93
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
push ebp
pushfd
call sub_403c94
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jno r-xdata
mov ebx 0xf04c483
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jne r-xdata
or edx 0xf3812e79
pushfd
push esi
call sub_403c8b
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_403da5
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
pop eax
jge r-xdata
jge 0xffffffffffa2bf40
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jno r-xdata
sub esi 0x89641f79
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc17a7a
jae r-xdata
add edx 0xff108f0f
pop ecx
jns r-xdata
jno 0xffffffff874f71f3
jne r-xdata
sub edi 0x64244481
xor [ ebx + 0x40 ] eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacccb8
jae r-xdata
ja 0xffffffffa3c34c50
push ecx
push edx
push ebp
sub esp 0x4
call sub_403c57
xor ebx 0x15ff4e7f
mov edx 0xff47830f
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
ja r-xdata
pop edx
mov eax 0xff55870f
jg r-xdata
jpo 0xdec236
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
ja r-xdata
xor ebx 0xff3d870f
call sub_403c07
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_404025
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
jmp 0xffffffffff79bd4e
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff946ae
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_403cb7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jg r-xdata
add eax 0x5abb2979
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7549026a
jg r-xdata
ja 0xcac066
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf450499
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf490170
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bbf0d
pop edx
jge r-xdata
jo 0xffffffff854f975f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f450225
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffd0f64
jae r-xdata
call sub_403e1c
jb 0xffffffff81b2bad2
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb280
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0c2a3
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd4ea7
add esp 0x4
jae r-xdata
jl 0xf3bfe8
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403cc2
jae 0xffffffffff43c4e7
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f96e1
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe891917e
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158c242
push edi
call sub_403f14
jg 0xfffffffff0b3993b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133cdbe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58663437
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9911
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428b75d
jae r-xdata
call 0xffffffff854f994b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95dbec
jo 0xffffffffa2c14dff
push ecx
push edx
call sub_403ee4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c17241
push edx
call sub_403e80
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_403efb
jo 0xff9b4e8
jo 0xffffffff894f9925
jae r-xdata
je 0xffffffffff6dc32f
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_403ebe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_403f64
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c46f
push esp
pushfd
push ecx
sub esp 0xc
call sub_403ee1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_403a3b
jns r-xdata
jns r-xdata
xor esi 0x58b93d7f
jno r-xdata
push ebp
call sub_4039c0
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jae r-xdata
jno 0x739894a7
jg r-xdata
jne 0x24c14a8b
jae r-xdata
sub ecx 0xe1813e75
pop eax
jae r-xdata
add eax 0xf9b7159
test [ edx + 0xf ] ebx
and [ edi + edi * 8 ] 0x15ffffff
or [ 0xffffffffff6d830f ] 0xfe9ffff
mov [ edx - 0x7f000000 ] ecx
iretd
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jns r-xdata
jge 0xffffffffb8afb9c2
pushfd
call sub_4039ab
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_403a4b
ja 0x504be52
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
ja r-xdata
and ebx 0xcf812475
jno r-xdata
pop ecx
or eax 0xf04c483
mov ebp ebp
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
jae r-xdata
pop ecx
jno r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
pop edx
jg r-xdata
jpo 0xf70b328
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
je 0xffffffffa3a4e001
jg r-xdata
jg 0xffffffff9c948e36
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44fe62
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
ja r-xdata
and ecx 0xf681ad79
jns r-xdata
jmp 0xcac36b
call sub_403aeb
xor edi 0x517f5859
jno 0xfffffffff2c195a8
push ecx
push ebx
call sub_403a3b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
push esi
push esi
call sub_403b36
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd942d
push edx
call sub_403a6c
or edi 0x830f5858
jne r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jno 0x16402805
jae r-xdata
je 0xffffffff814fdc01
jne r-xdata
jno 0xffffffff834f922f
xor edx 0x81257159
r-xdata
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac1435b
sub_403a4b
pop eax
pop edx
pop eax
jae r-xdata
pop edx
pop eax
jae r-xdata
or eax 0xff6d830f
pop eax
pop ecx
jge r-xdata
jne 0xf44fe62
pop ecx
or eax 0xf04c483
mov ebp ebp
add [ eax + eax - 0x7af10000 ] 0xea810971
jg r-xdata
jne 0x24c14a8b
jno r-xdata
push ebp
call sub_4039c0
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jne r-xdata
and eax 0x8b0f327f
jae r-xdata
sub ecx 0xe1813e75
pushfd
call sub_4039ab
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_403a4b
ja 0x504be52
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jns r-xdata
jge 0xffffffffb8afb9c2
jae r-xdata
pop ecx
jno r-xdata
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
ja r-xdata
and ecx 0xf681ad79
jns r-xdata
jmp 0xcac36b
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
jno 0x16402805
pop edx
jg r-xdata
jpo 0xf70b328
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jns r-xdata
xor edx 0x81257159
r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
jae r-xdata
je 0xffffffff814fdc01
jne r-xdata
jno 0xffffffff834f922f
jg r-xdata
jg 0xffffffff9c948e36
ja r-xdata
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac1435b
push esi
push esi
call sub_403b36
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd942d
push edx
call sub_403a6c
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jns r-xdata
jae r-xdata
je 0xffffffffa3a4e001
call sub_403aeb
xor edi 0x517f5859
jno 0xfffffffff2c195a8
push ecx
push ebx
call sub_403a3b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
sub_403a6c
jg r-xdata
pop eax
add esp 0x4
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
pop ecx
jno r-xdata
jno 0x16402805
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcac36b
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jns r-xdata
xor edx 0x81257159
r-xdata
pop edx
jg r-xdata
jpo 0xf70b328
jae r-xdata
sub eax 0x4d795a58
jae r-xdata
je 0xffffffff814fdc01
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44fe62
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
jg 0xffffffff9c948e36
ja r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
push esi
push esi
call sub_403b36
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd942d
push edx
call sub_403a6c
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jne r-xdata
jno 0xffffffff834f922f
push ebp
call sub_4039c0
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4e001
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac1435b
jg r-xdata
jne 0x24c14a8b
jae r-xdata
sub ecx 0xe1813e75
call sub_403aeb
xor edi 0x517f5859
jno 0xfffffffff2c195a8
push ecx
push ebx
call sub_403a3b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8afb9c2
pushfd
call sub_4039ab
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_403a4b
ja 0x504be52
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jno r-xdata
pop ecx
jae r-xdata
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub_403ab7
pop eax
pop ecx
pop ecx
jae r-xdata
pop eax
pop eax
jae r-xdata
or edx 0xff50830f
pop ecx
pop eax
jg r-xdata
mov ebx 0x8f0f6975
pop edx
jne r-xdata
jno 0xfffffffff2c195a8
push ecx
push ebx
call sub_403a3b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
pushfd
push ebx
push esp
pushfd
add esi 0xf337d58
test [ edi - 0x5b ] bh
pop ecx
jno r-xdata
jno 0x16402805
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jns r-xdata
jmp 0xcac36b
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
pop edx
jg r-xdata
jpo 0xf70b328
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jae r-xdata
sub eax 0x4d795a58
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44fe62
jns r-xdata
xor edx 0x81257159
r-xdata
call sub_403aeb
xor edi 0x517f5859
push edi
push ebp
push ecx
and ecx 0xff378f0f
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
jae r-xdata
je 0xffffffff814fdc01
jne r-xdata
jno 0xffffffff834f922f
push ebp
call sub_4039c0
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jg r-xdata
jg 0xffffffff9c948e36
ja r-xdata
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac1435b
jg r-xdata
jne 0x24c14a8b
jae r-xdata
sub ecx 0xe1813e75
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd942d
push edx
call sub_403a6c
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8afb9c2
pushfd
call sub_4039ab
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_403a4b
ja 0x504be52
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4e001
jno r-xdata
pop ecx
jae r-xdata
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
push esi
push esi
call sub_403b36
sub ebx 0xfeace855
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
sub_403aeb
pushfd
jae r-xdata
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
pop ecx
jno r-xdata
jno 0x16402805
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcac36b
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jns r-xdata
xor edx 0x81257159
r-xdata
pop edx
jg r-xdata
jpo 0xf70b328
jae r-xdata
sub eax 0x4d795a58
jae r-xdata
je 0xffffffff814fdc01
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44fe62
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
jg 0xffffffff9c948e36
ja r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
push esi
push esi
call sub_403b36
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd942d
push edx
call sub_403a6c
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jne r-xdata
jno 0xffffffff834f922f
push ebp
call sub_4039c0
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4e001
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac1435b
jg r-xdata
jne 0x24c14a8b
jae r-xdata
sub ecx 0xe1813e75
call sub_403aeb
xor edi 0x517f5859
jno 0xfffffffff2c195a8
push ecx
push ebx
call sub_403a3b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8afb9c2
push edi
push eax
push edx
call sub_403a4b
ja 0x504be52
pushfd
call sub_4039ab
mov eax [ fs : 0xffffffff9ce8c173 ]
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jno r-xdata
pop ecx
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
sub_403b36
sub [ esp + 0x40 ] r-xdata
sub esp 0x10
pop edx
ja r-xdata
jg r-xdata
jmp [ 0xce8d0f ]
jge r-xdata
jmp 0xffffffff844f6cec
jno r-xdata
sub esi 0x73bd047f
push ebp
ja r-xdata
jmp [ 0xfffffffff381df77 ]
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1fa1b
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
ja r-xdata
call 0xffcb52a
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1bb55
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a478f1
jge r-xdata
call [ 0xffffffffca81677d ]
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
pop edx
pop edx
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3c38c
ja r-xdata
jge 0x71fc7b93
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
push ebp
pushfd
call sub_403c94
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jno r-xdata
mov ebx 0xf04c483
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jne r-xdata
or edx 0xf3812e79
pushfd
push esi
call sub_403c8b
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_403da5
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
pop eax
jge r-xdata
jge 0xffffffffffa2bf40
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jno r-xdata
sub esi 0x89641f79
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc17a7a
jae r-xdata
add edx 0xff108f0f
pop ecx
jns r-xdata
jno 0xffffffff874f71f3
jne r-xdata
sub edi 0x64244481
xor [ ebx + 0x40 ] eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacccb8
jae r-xdata
ja 0xffffffffa3c34c50
push ecx
push edx
push ebp
sub esp 0x4
call sub_403c57
xor ebx 0x15ff4e7f
mov edx 0xff47830f
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
ja r-xdata
pop edx
mov eax 0xff55870f
jg r-xdata
jpo 0xdec236
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
ja r-xdata
xor ebx 0xff3d870f
call sub_403c07
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_404025
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
jmp 0xffffffffff79bd4e
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff946ae
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_403cb7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jg r-xdata
add eax 0x5abb2979
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7549026a
jg r-xdata
ja 0xcac066
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf450499
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf490170
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bbf0d
pop edx
jge r-xdata
jo 0xffffffff854f975f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f450225
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffd0f64
jae r-xdata
call sub_403e1c
jb 0xffffffff81b2bad2
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb280
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0c2a3
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd4ea7
add esp 0x4
jae r-xdata
jl 0xf3bfe8
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403cc2
jae 0xffffffffff43c4e7
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f96e1
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe891917e
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158c242
push edi
call sub_403f14
jg 0xfffffffff0b3993b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133cdbe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58663437
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9911
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428b75d
jae r-xdata
call 0xffffffff854f994b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95dbec
jo 0xffffffffa2c14dff
push ecx
push edx
call sub_403ee4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c17241
push edx
call sub_403e80
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_403efb
jo 0xff9b4e8
jo 0xffffffff894f9925
jae r-xdata
je 0xffffffffff6dc32f
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_403ebe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_403f64
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c46f
push esp
pushfd
push ecx
sub esp 0xc
call sub_403ee1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_403c07
pop ecx
pop edx
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jae r-xdata
add edx 0xff108f0f
pop edx
mov eax 0xff55870f
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1fa1b
ja r-xdata
call 0xffcb52a
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a478f1
jg r-xdata
and ebx 0xff5a870f
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop edx
pop edx
jae r-xdata
jne r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
ja r-xdata
jg r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
jae r-xdata
ja r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
pushfd
push esi
call sub_403c8b
sub ebx 0xa48f0f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
ja r-xdata
jge 0x71fc7b93
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1bb55
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3c38c
add [ eax ] al
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jno r-xdata
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_403da5
add esi 0xa6830f
add [ eax ] al
mov ebx 0xf04c483
jae r-xdata
ja 0xffffffffa3c34c50
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
pop eax
ja r-xdata
xor edx 0x880f5e7f
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
push ecx
push edx
push ebp
sub esp 0x4
call sub_403c57
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jne r-xdata
sub edi 0x64244481
xor [ ebx + 0x40 ] eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacccb8
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
push ebp
pushfd
call sub_403c94
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jne r-xdata
or edx 0xf3812e79
jg r-xdata
jpo 0xdec236
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
pop eax
jge r-xdata
jge 0xffffffffffa2bf40
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc17a7a
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_404025
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jg r-xdata
ja 0xffffffffff9bbf0d
pop eax
pop eax
pop edx
jne r-xdata
call 0xf490170
lea eax [ ecx + 0x1 ]
add [ eax ] al
pop ecx
jns r-xdata
jno 0xffffffff874f71f3
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff946ae
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_403cb7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jno r-xdata
and ebx 0x870f4975
jae r-xdata
call sub_403e1c
jb 0xffffffff81b2bad2
or edx 0x54549c55
ja r-xdata
xor ebx 0xff3d870f
call sub_403c07
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7549026a
jg r-xdata
ja 0xcac066
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf450499
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
jmp 0xffffffffff79bd4e
pop edx
jge r-xdata
jo 0xffffffff854f975f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f450225
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffd0f64
add esp 0x4
jae r-xdata
jl 0xf3bfe8
jg r-xdata
add eax 0x5abb2979
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb280
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0c2a3
pop eax
jg r-xdata
jge 0xffffffff894f96e1
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd4ea7
ja r-xdata
jno 0xffffffffe891917e
push 0x81ffffff
out 0x77 al
jne r-xdata
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403cc2
jae 0xffffffffff43c4e7
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jno r-xdata
jae 0xffffffff8428b75d
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158c242
push edi
call sub_403f14
jg 0xfffffffff0b3993b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133cdbe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jae r-xdata
je 0xffffffffff6dc32f
jge r-xdata
les ecx [ eax ]
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58663437
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9911
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f994b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95dbec
jo 0xffffffffa2c14dff
push ecx
push edx
call sub_403ee4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c17241
push edx
call sub_403e80
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_403efb
jo 0xff9b4e8
jo 0xffffffff894f9925
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_403ebe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_403f64
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c46f
push esp
pushfd
push ecx
sub esp 0xc
call sub_403ee1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_403c57
ja r-xdata
jno r-xdata
jl 0x2f28d8b8
jno r-xdata
jl 0xfffffffff6c1fa1b
add [ eax ] al
add [ edx + 0x7504c483 ] bh
pop edx
pop edx
jns 0xffffffff815018c6
ja r-xdata
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jne r-xdata
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3c38c
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jg r-xdata
xor ecx 0xff70810f
jae r-xdata
ja 0xffffffff89a478f1
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffcb52a
cmp [ edi + 0x7f ] 0x81

ja r-xdata
or ebx 0xff6e8f0f
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
ja r-xdata
xor ebx 0xff3d870f
ja r-xdata
jg r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
jne r-xdata
sub edi 0x64244481
xor [ ebx + 0x40 ] eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacccb8
jae r-xdata
ja 0xffffffffa3c34c50
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
jmp 0xffffffffff79bd4e
ja r-xdata
jge 0x71fc7b93
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1bb55
jg r-xdata
jpo 0xdec236
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
add eax 0x5abb2979
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_404025
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc17a7a
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff946ae
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_403cb7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
pushfd
push esi
call sub_403c8b
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_403da5
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jae r-xdata
call [ 0xffffffffc181727f ]
push ecx
push edx
push ebp
sub esp 0x4
call sub_403c57
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7549026a
jg r-xdata
ja 0xcac066
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf450499
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf490170
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bbf0d
jae r-xdata
add edx 0xff108f0f
call sub_403c07
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
rol [ ecx + 0x108f0fc2 ] 0xff
push ebp
pushfd
call sub_403c94
mov edx 0x7504c483
mov esp 0xe2818371
jne r-xdata
or edx 0xf3812e79
pop edx
jge r-xdata
jo 0xffffffff854f975f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f450225
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffd0f64
jae r-xdata
call sub_403e1c
jb 0xffffffff81b2bad2
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
pop edx
mov eax 0xff55870f
pop eax
jge r-xdata
jge 0xffffffffffa2bf40
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb280
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0c2a3
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
pop ecx
jns r-xdata
jno 0xffffffff874f71f3
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd4ea7
add esp 0x4
jae r-xdata
jl 0xf3bfe8
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403cc2
jae 0xffffffffff43c4e7
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f96e1
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe891917e
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158c242
push edi
call sub_403f14
jg 0xfffffffff0b3993b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133cdbe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58663437
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9911
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428b75d
jae r-xdata
call 0xffffffff854f994b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95dbec
jo 0xffffffffa2c14dff
push ecx
push edx
call sub_403ee4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c17241
push edx
call sub_403e80
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_403efb
jo 0xff9b4e8
jo 0xffffffff894f9925
jae r-xdata
je 0xffffffffff6dc32f
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_403ebe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_403f64
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c46f
push esp
pushfd
push ecx
sub esp 0xc
call sub_403ee1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_403c8b
pop ecx
ja r-xdata
pop edx
ja r-xdata
jae 0xffffffff81ceb1f0
pop eax
jns r-xdata
jno 0xffffffffefc17a7a
out dx eax
jae r-xdata
jne 0xffffffffe3c21e89
push ecx
push edx
push ebp
sub esp 0x4
call sub_403c57
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jg r-xdata
sub edi 0x5c755a59
ja r-xdata
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jno r-xdata
jno 0xfffffffff1c1c5c0
ja r-xdata
jge 0x71fc7b93
jge r-xdata
call [ 0xffffffffca81677d ]
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
ja r-xdata
and edx 0xff42850f
jno r-xdata
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jae r-xdata
xor ebx 0xff728f0f
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3c38c
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1fa1b
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
ja r-xdata
jmp [ 0xfffffffff381df77 ]
jno r-xdata
sub esi 0x89641f79
push ebp
pushfd
call sub_403c94
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
and ebx 0xff5a870f
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffcb52a
cmp [ edi + 0x7f ] 0x81

jae r-xdata
ja 0xffffffff89a478f1
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
pop eax
jge r-xdata
jge 0xffffffffffa2bf40
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jg r-xdata
pop edx
pop edx
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1bb55
pop ecx
jns r-xdata
jno 0xffffffff874f71f3
pushfd
push esi
call sub_403c8b
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_403da5
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jne r-xdata
sub edi 0x64244481
xor [ ebx + 0x40 ] eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacccb8
jae r-xdata
ja 0xffffffffa3c34c50
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jae r-xdata
add edx 0xff108f0f
jg r-xdata
jpo 0xdec236
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
ja r-xdata
pop edx
mov eax 0xff55870f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_404025
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jge r-xdata
mov [ fs : edi - 0x21 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff946ae
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_403cb7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jne r-xdata
or edx 0xf3812e79
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7549026a
jg r-xdata
ja 0xcac066
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf450499
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf490170
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bbf0d
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
pop edx
jge r-xdata
jo 0xffffffff854f975f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f450225
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffd0f64
jae r-xdata
call sub_403e1c
jb 0xffffffff81b2bad2
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb280
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0c2a3
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
ja r-xdata
xor ebx 0xff3d870f
call sub_403c07
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd4ea7
add esp 0x4
jae r-xdata
jl 0xf3bfe8
jae r-xdata
jmp 0xffffffffff79bd4e
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403cc2
jae 0xffffffffff43c4e7
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f96e1
jg r-xdata
add eax 0x5abb2979
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe891917e
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158c242
push edi
call sub_403f14
jg 0xfffffffff0b3993b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133cdbe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58663437
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9911
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428b75d
jae r-xdata
call 0xffffffff854f994b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95dbec
jo 0xffffffffa2c14dff
push ecx
push edx
call sub_403ee4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c17241
push edx
call sub_403e80
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_403efb
jo 0xff9b4e8
jo 0xffffffff894f9925
jae r-xdata
je 0xffffffffff6dc32f
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_403ebe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_403f64
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c46f
push esp
pushfd
push ecx
sub esp 0xc
call sub_403ee1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_403c94
pop eax
jne r-xdata
jne r-xdata
sub edi 0xfeb2810f
pop eax
jge r-xdata
jge 0xffffffffffa2bf40
pop ecx
jns r-xdata
jno 0xffffffff874f71f3
jg r-xdata
jo 0xffffffffcbc1bb55
ja r-xdata
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jg r-xdata
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
jge r-xdata
call [ 0xffffffffca81677d ]
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jae r-xdata
xor ebx 0xff728f0f
push ecx
push edx
push ebp
sub esp 0x4
call sub_403c57
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3c38c
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1fa1b
jne r-xdata
or edx 0xf3812e79
push ebp
pushfd
call sub_403c94
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
and ebx 0xff5a870f
add ecx 0xaa890f
add [ eax ] al
jg r-xdata
xor esi 0x25ffca77
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffcb52a
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc17a7a
jge 0x71fc7b93
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
add [ ecx + 0x42850fe2 ] 0xffffffff
pushfd
push esi
call sub_403c8b
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_403da5
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jne r-xdata
sub edi 0x64244481
xor [ ebx + 0x40 ] eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacccb8
jae r-xdata
ja 0xffffffffa3c34c50
jae r-xdata
ja 0xffffffff89a478f1
ja r-xdata
xor ebx 0xff3d870f
call sub_403c07
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
add edx 0xff108f0f
jg r-xdata
jpo 0xdec236
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
pop edx
pop edx
jae r-xdata
jmp 0xffffffffff79bd4e
ja r-xdata
pop edx
mov eax 0xff55870f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_404025
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jg r-xdata
add eax 0x5abb2979
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff946ae
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_403cb7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7549026a
jg r-xdata
ja 0xcac066
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf450499
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf490170
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bbf0d
pop edx
jge r-xdata
jo 0xffffffff854f975f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f450225
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffd0f64
jae r-xdata
call sub_403e1c
jb 0xffffffff81b2bad2
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb280
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0c2a3
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd4ea7
add esp 0x4
jae r-xdata
jl 0xf3bfe8
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403cc2
jae 0xffffffffff43c4e7
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f96e1
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe891917e
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158c242
push edi
call sub_403f14
jg 0xfffffffff0b3993b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133cdbe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58663437
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9911
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428b75d
jae r-xdata
call 0xffffffff854f994b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95dbec
jo 0xffffffffa2c14dff
push ecx
push edx
call sub_403ee4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c17241
push edx
call sub_403e80
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_403efb
jo 0xff9b4e8
jo 0xffffffff894f9925
jae r-xdata
je 0xffffffffff6dc32f
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_403ebe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_403f64
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c46f
push esp
pushfd
push ecx
sub esp 0xc
call sub_403ee1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_403cb7
add esp 0x4
jae r-xdata
push ecx
push ebx
push ecx
call sub_403db4
xor ebx 0xff1a830f
jo 0x5596941a
call sub_403da5
add esi 0xa6830f
add [ eax ] al
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c34c50
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9bbf0d
pop eax
pop eax
pop edx
jne r-xdata
call 0xf490170
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdec236
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_403e1c
jb 0xffffffff81b2bad2
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff946ae
add esp 0x4
jae r-xdata
jl 0xf3bfe8
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7549026a
jg r-xdata
ja 0xcac066
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f96e1
pop edx
jge r-xdata
jo 0xffffffff854f975f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f450225
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe891917e
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb280
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacccb8
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
xor [ ebx + 0x40 ] eax
add [ ebx + 0x5a5928ec ] al
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff8428b75d
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_403cc2
jae 0xffffffffff43c4e7
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6dc32f
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_404025
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_403cb7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158c242
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf450499
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffd0f64
jno r-xdata
jge 0xffffffffffa0c2a3
jge r-xdata
jpe 0x74cd4ea7
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_403f14
jg 0xfffffffff0b3993b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133cdbe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58663437
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9911
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f994b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95dbec
jo 0xffffffffa2c14dff
push ecx
push edx
call sub_403ee4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c17241
push edx
call sub_403e80
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_403efb
jo 0xff9b4e8
jo 0xffffffff894f9925
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_403ebe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_403f64
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c46f
push esp
pushfd
push ecx
sub esp 0xc
call sub_403ee1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_403cc2
push esp
push edi
push esi
push ebp
call sub_403da5
add esi 0xa6830f
add [ eax ] al
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c34c50
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9bbf0d
pop eax
pop eax
pop edx
jne r-xdata
call 0xf490170
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdec236
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_403e1c
jb 0xffffffff81b2bad2
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff946ae
add esp 0x4
jae r-xdata
jl 0xf3bfe8
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7549026a
jg r-xdata
ja 0xcac066
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f96e1
pop edx
jge r-xdata
jo 0xffffffff854f975f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f450225
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe891917e
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb280
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacccb8
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
xor [ ebx + 0x40 ] eax
add [ ebx + 0x5a5928ec ] al
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff8428b75d
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_403cc2
jae 0xffffffffff43c4e7
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6dc32f
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_404025
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_403cb7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158c242
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf450499
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffd0f64
jno r-xdata
jge 0xffffffffffa0c2a3
jge r-xdata
jpe 0x74cd4ea7
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_403f14
jg 0xfffffffff0b3993b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133cdbe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58663437
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9911
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f994b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95dbec
jo 0xffffffffa2c14dff
push ecx
push edx
call sub_403ee4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c17241
push edx
call sub_403e80
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_403efb
jo 0xff9b4e8
jo 0xffffffff894f9925
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_403ebe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_403f64
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c46f
push esp
pushfd
push ecx
sub esp 0xc
call sub_403ee1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_403da5
jg r-xdata
jne r-xdata
and eax 0xae830f
add [ eax ] al
jae r-xdata
and esi 0x89641273
pop eax
pop eax
pop edx
jne r-xdata
call 0xf490170
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdec236
jae r-xdata
or edx 0x54549c55
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
call sub_403e1c
jb 0xffffffff81b2bad2
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
xor al [ ecx ]
add [ eax ] al
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff946ae
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7549026a
jg r-xdata
ja 0xcac066
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop edx
jge r-xdata
jo 0xffffffff854f975f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f450225
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb280
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c34c50
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacccb8
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
xor [ ebx + 0x40 ] eax
add [ ebx + 0x5a5928ec ] al
jne r-xdata
mov eax 0xfeef890f
jae r-xdata
sub ecx 0xfeea830f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_403cc2
jae 0xffffffffff43c4e7
xor ecx 0x890fd079
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
or esi 0xff24810f
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_404025
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_403cb7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158c242
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
jg r-xdata
ja 0xffffffffff9bbf0d
add [ eax ] al
pop ecx
jno r-xdata
call 0xf450499
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jno r-xdata
and ebx 0x870f4975
pop ecx
jne r-xdata
jbe 0xffd0f64
jae r-xdata
xor esi 0xe681cd75
jno r-xdata
jge 0xffffffffffa0c2a3
add esp 0x4
jae r-xdata
jl 0xf3bfe8
jge r-xdata
jpe 0x74cd4ea7
pop eax
jg r-xdata
jge 0xffffffff894f96e1
add [ eax ] al
ja r-xdata
and eax 0x4c48358
ja r-xdata
jno 0xffffffffe891917e
push 0x81ffffff
out 0x77 al
jne r-xdata
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
push edi
call sub_403f14
jg 0xfffffffff0b3993b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133cdbe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jno r-xdata
jae 0xffffffff8428b75d
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58663437
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9911
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
je 0xffffffffff6dc32f
jge r-xdata
les ecx [ eax ]
jae r-xdata
call 0xffffffff854f994b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95dbec
jo 0xffffffffa2c14dff
push ecx
push edx
call sub_403ee4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c17241
push edx
call sub_403e80
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_403efb
jo 0xff9b4e8
jo 0xffffffff894f9925
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_403ebe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_403f64
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c46f
push esp
pushfd
push ecx
sub esp 0xc
call sub_403ee1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_403db4
jne r-xdata
add esp 0x8
jg 0xf450243
jae r-xdata
ja 0xffffffffa3c34c50
xchg [ esi - 0x1 ] eax
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9bbf0d
pop eax
pop eax
pop edx
jne r-xdata
call 0xf490170
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdec236
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_403e1c
jb 0xffffffff81b2bad2
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff946ae
add esp 0x4
jae r-xdata
jl 0xf3bfe8
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7549026a
jg r-xdata
ja 0xcac066
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f96e1
add [ eax ] al
pop edx
jge r-xdata
jo 0xffffffff854f975f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f450225
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe891917e
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb280
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacccb8
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
xor [ ebx + 0x40 ] eax
add [ ebx + 0x5a5928ec ] al
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff8428b75d
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_403cc2
jae 0xffffffffff43c4e7
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6dc32f
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_404025
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_403cb7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158c242
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf450499
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffd0f64
jno r-xdata
jge 0xffffffffffa0c2a3
jge r-xdata
jpe 0x74cd4ea7
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_403f14
jg 0xfffffffff0b3993b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133cdbe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58663437
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9911
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f994b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95dbec
jo 0xffffffffa2c14dff
push ecx
push edx
call sub_403ee4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c17241
push edx
call sub_403e80
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_403efb
jo 0xff9b4e8
jo 0xffffffff894f9925
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_403ebe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_403f64
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c46f
push esp
pushfd
push ecx
sub esp 0xc
call sub_403ee1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_403e1c
jne r-xdata
jne r-xdata
or ebx 0xfad7f58
adc [ ecx + 0x53 ] 0xff83e851
jg r-xdata
ja 0xcac066
jno r-xdata
js 0x7f450225
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
pop edx
pop edx
jne r-xdata
or esi 0xff24810f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
jns r-xdata
sub ebx 0xe8525452
insb
jae r-xdata
and esi 0x89641273
jg r-xdata
jns 0x158c242
pop eax
pop eax
pop edx
jne r-xdata
call 0xf490170
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdec236
pop edx
jge r-xdata
jo 0xffffffff854f975f
add [ eax ] al
jae r-xdata
or edx 0x54549c55
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
call sub_403e1c
jb 0xffffffff81b2bad2
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
pop edx
jg r-xdata
and ecx 0xf04c483
xor al [ ecx ]
add [ eax ] al
sub eax 0x6c7315ff
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
pop ecx
pop ecx
jne r-xdata
jo 0x7ff946ae
jae r-xdata
and edx 0xff53830f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
and [ edx + 0xf000000 ] 0xffffff8d
les eax [ edi + ecx ]
jae r-xdata
js 0x7549026a
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
add esp 0x4
jg r-xdata
je 0xffffffff804fb280
pop eax
ja r-xdata
xor edx 0x880f5e7f
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
add esp 0x4
ja r-xdata
jl 0xffffffffffacccb8
jne r-xdata
sub edi 0x64244481
xor [ ebx + 0x40 ] eax
add [ ebx + 0x5a5928ec ] al
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c34c50
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jge r-xdata
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jae r-xdata
sub ecx 0xfeea830f
jg r-xdata
sub edi 0xf681b871
jne r-xdata
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_404025
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403cc2
jae 0xffffffffff43c4e7
xor ecx 0x890fd079
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
push edx
push esp
push edx
call sub_403cb7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
jae r-xdata
mov ebp 0x478f0f5a
pop ecx
jno r-xdata
call 0xf450499
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jg r-xdata
ja 0xffffffffff9bbf0d
pop ecx
jne r-xdata
jbe 0xffd0f64
jno r-xdata
and ebx 0x870f4975
jno r-xdata
jge 0xffffffffffa0c2a3
jae r-xdata
xor esi 0xe681cd75
jge r-xdata
jpe 0x74cd4ea7
add esp 0x4
jae r-xdata
jl 0xf3bfe8
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f96e1
add [ eax ] al
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe891917e
push 0x81ffffff
out 0x77 al
jne r-xdata
push edi
call sub_403f14
jg 0xfffffffff0b3993b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133cdbe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58663437
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9911
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428b75d
jae r-xdata
call 0xffffffff854f994b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95dbec
jo 0xffffffffa2c14dff
push ecx
push edx
call sub_403ee4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c17241
push edx
call sub_403e80
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_403efb
jo 0xff9b4e8
jo 0xffffffff894f9925
jae r-xdata
je 0xffffffffff6dc32f
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_403ebe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_403f64
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c46f
push esp
pushfd
push ecx
sub esp 0xc
call sub_403ee1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_403e80
pop ecx
ja r-xdata
push esi
push esi
sub esp 0x10
call sub_403f7d
xor edi 0x810a7d58
0xf59
mov esp 0xd5e85054
add [ eax ] al
add [ ecx - 0x17adae0f ] al
dec esp
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xchg [ edi ] cl
sub_403ebe
jae r-xdata
pop edx
pop eax
jg r-xdata
xor ecx 0x8c0fc977
jae r-xdata
jo 0x58663437
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop ecx
ja r-xdata
jge 0xffffffff9c95dbec
add esp 0x4
jno r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_403ebe
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_403f14
jg 0xfffffffff0b3993b
add edx 0xc381ea77
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53c46f
push esp
push eax
call sub_403f64
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133cdbe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9911
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f994b
xor al 0xff
push esp
pushfd
push ecx
sub esp 0xc
call sub_403ee1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
push ecx
push edx
call sub_403ee4
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c14dff
jl 0xffffffffc1c17241
push edx
call sub_403e80
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_403efb
jo 0xff9b4e8
jo 0xffffffff894f9925
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_403ee1
jg r-xdata
pop edx
pop edx
pop edx
jg r-xdata
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
pop eax
pop ecx
jae r-xdata
or edx 0xec830f
add [ eax ] al
xor ecx 0x8c0fc977
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jge r-xdata
add eax 0x4c4835a
jae r-xdata
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53c46f
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
pop eax
call [ 0xffffffffff37e857 ]
jae r-xdata
call 0xffffffff854f994b
xor al 0xff
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
xor esi 0xac810f59
push edi
call sub_403f14
jg 0xfffffffff0b3993b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_403ee1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
jae r-xdata
jo 0x58663437
pop eax
jge r-xdata
jbe 0x133cdbe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
jge 0xffffffff9c95dbec
add esp 0x4
jno r-xdata
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9911
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_403ebe
and edi 0x850fc67f
push ecx
push edx
call sub_403ee4
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c14dff
jl 0xffffffffc1c17241
push edx
call sub_403e80
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_403efb
jo 0xff9b4e8
jo 0xffffffff894f9925
push esp
push eax
call sub_403f64
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_403ee4
jg r-xdata
pop eax
jge r-xdata
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
add esp 0x4
jae r-xdata
or edx 0xc7810f59
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jne r-xdata
add edx 0xfee48d0f
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53c46f
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
push esi
call sub_404025
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jge r-xdata
xor esi 0xac810f59
push edi
call sub_403f14
jg 0xfffffffff0b3993b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push esp
pushfd
push ecx
sub esp 0xc
call sub_403ee1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58663437
jae r-xdata
call 0xffffffff854f994b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95dbec
add esp 0x4
jno r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_403ebe
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_403f64
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133cdbe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9911
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jo 0xffffffffa2c14dff
push ecx
push edx
call sub_403ee4
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c17241
push edx
call sub_403e80
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_403efb
jo 0xff9b4e8
jo 0xffffffff894f9925
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_403efb
jne r-xdata
jae r-xdata
or ecx 0xa38d0f
add [ eax ] al
pop edx
add esp 0x4
jns 0x119c63e
jae r-xdata
call 0xffffffff854f994b
xor al 0xff
add [ eax ] al
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd4ea7
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push edi
call sub_403f14
jg 0xfffffffff0b3993b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53c46f
jae r-xdata
add eax 0x4c4835a
jae r-xdata
jo 0x58663437
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
pop ecx
ja r-xdata
jge 0xffffffff9c95dbec
add esp 0x4
jno r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_403ee1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_403ebe
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
push eax
call sub_403f64
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133cdbe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9911
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
push ecx
push edx
call sub_403ee4
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c14dff
jl 0xffffffffc1c17241
push edx
call sub_403e80
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_403efb
jo 0xff9b4e8
jo 0xffffffff894f9925
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_403f14
pop ecx
pop edx
ja r-xdata
pop eax
pop ecx
jns r-xdata
mov esi 0x790cc483
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
add eax 0x4c4835a
jae r-xdata
push edx
call sub_403e80
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_403efb
jo 0xff9b4e8
jo 0xffffffff894f9925
ja r-xdata
add edi 0xff74830f
jae r-xdata
call 0xffffffff854f994b
xor al 0xff
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
push ecx
push edx
call sub_403ee4
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c14dff
jl 0xffffffffc1c17241
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
push edi
call sub_403f14
jg 0xfffffffff0b3993b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
add [ eax ] al
add [ edi ] cl
pop ecx
pop eax
ja r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jae r-xdata
jo 0x58663437
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c46f
pop ecx
ja r-xdata
jge 0xffffffff9c95dbec
add esp 0x4
jno r-xdata
iretd
push esp
pushfd
push ecx
sub esp 0xc
call sub_403ee1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
or edi 0x80c481
add [ eax ] al
retn
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_403ebe
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
xchg [ edi ] cl
push esp
push eax
call sub_403f64
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133cdbe
add [ eax ] al
jno 0xf9a9911
sub_403f1d
add esp 0xc
jns r-xdata
pop eax
pop ecx
sub eax 0xbb830f
add [ eax ] al
jns 0x119c63e
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
add [ eax ] al
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd4ea7
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53c46f
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jge r-xdata
jns r-xdata
xor esi 0xac810f59
push edi
call sub_403f14
jg 0xfffffffff0b3993b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_403ee1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58663437
jae r-xdata
call 0xffffffff854f994b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95dbec
add esp 0x4
jno r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_403ebe
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
push eax
call sub_403f64
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133cdbe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9911
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
push ecx
push edx
call sub_403ee4
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c14dff
jl 0xffffffffc1c17241
push edx
call sub_403e80
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_403efb
jo 0xff9b4e8
jo 0xffffffff894f9925
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_403f64
pop edx
add esp 0x4
jne r-xdata
pushfd
push edi
pushfd
call sub_403efb
jo 0xff9b4e8
xor edi 0xaae85157
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
push edi
call sub_403f14
jg 0xfffffffff0b3993b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58663437
jae r-xdata
call 0xffffffff854f994b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95dbec
add esp 0x4
jno r-xdata
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_403ebe
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push esp
push eax
call sub_403f64
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133cdbe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53c46f
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9911
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
push ecx
push edx
call sub_403ee4
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c14dff
jl 0xffffffffc1c17241
push edx
call sub_403e80
and esi 0xe981dd73
jo 0xffffffff894f9925
push esp
pushfd
push ecx
sub esp 0xc
call sub_403ee1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
insd
sub_403f7d
jae r-xdata
jne r-xdata
sub ecx 0xe89c579c
jb r-xdata
jne r-xdata
sub edi 0x4c4835a
jne r-xdata
pop edx
pop ecx
pop eax
jae r-xdata
mov ecx 0xf6811c75
pushfd
push edi
pushfd
call sub_403efb
jo 0xff9b4e8
xor edi 0xaae85157
jg r-xdata
add esi 0x808f0f5a
add [ eax ] al
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd4ea7
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
jg r-xdata
jno 0xf9a9911
push edi
call sub_403f14
jg 0xfffffffff0b3993b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
push edi
push ecx
call sub_403f1d
add edx 0xff05e852
jne 0xffffffffc2c16d21
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58663437
ja r-xdata
jae r-xdata
call 0xffffffff854f994b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95dbec
add esp 0x4
jno r-xdata
push ebp
pushfd
push eax
pushfd
add ebx 0xdc7f585a
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_403ebe
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push esp
push eax
call sub_403f64
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133cdbe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53c46f
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
push ecx
push edx
call sub_403ee4
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c14dff
jl 0xffffffffc1c17241
push edx
call sub_403e80
and esi 0xe981dd73
jo 0xffffffff894f9925
push esp
pushfd
push ecx
sub esp 0xc
call sub_403ee1
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
insd
sub_404038
sub esp 0x14
push ebp
push edi
push esp
sub esp 0x8
call sub_4040e3
jns 0xffffffff9cc14fa5
add [ eax ] al
add [ 0xffffffff850f595a ] cl
jns r-xdata
jmp 0x10028c3
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
push eax
push ecx
sub esp 0x10
call sub_4040df
jo 0xffffffffff29cea0
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59754dd1
jae r-xdata
or eax 0x15ff2875
push esi
call sub_40412e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jne r-xdata
jpe 0x18c3509a
jns r-xdata
add ebx 0x9c575756
jae r-xdata
or eax 0x8d0fb671
jne r-xdata
call 0xffffffffcec18327
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
pop edx
jne r-xdata
ja 0xffffffffe85bc009
jae r-xdata
jl 0xffffffffa1a4d343
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
call sub_4040fd
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c15017
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1f46a
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
pop ecx
add eax 0xfefc8d0f
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1de4e
jg r-xdata
jge 0x18ac6b8
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
jno r-xdata
xor eax 0xff56850f
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jg r-xdata
jge 0xffffffffc009b6ce
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40425c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jg r-xdata
jl 0xe24b487
add esp 0x4
ja r-xdata
jge 0x100c556
jns r-xdata
add esi 0x99870f
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jg r-xdata
jne 0xffffffffe7c22fa0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c203fc
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jns r-xdata
xor esi 0x76795a59
jb 0x120c4f3
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jo 0xc64861c
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jge r-xdata
call sub_4040f0
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c159af
jae r-xdata
jpo 0x362899f5
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7289a45
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_40427f
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cbab
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
or eax 0x850f595a
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4041ad
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101bb59a
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9a0a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4042b8
sub esi 0xe92e7f58
push esp
push edi
call sub_4041da
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13ca25
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_4040df
jge r-xdata
add esp 0x8
jge 0xffffffff874ff35c
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jg r-xdata
jge r-xdata
js 0x59754dd1
jae r-xdata
or eax 0x15ff2875
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jne r-xdata
jpe 0x18c3509a
jns r-xdata
add ebx 0x9c575756
jae r-xdata
jo 0xc64861c
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
call 0xffffffffcec18327
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
pop edx
jne r-xdata
ja 0xffffffffe85bc009
jae r-xdata
jl 0xffffffffa1a4d343
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
jae r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jge r-xdata
call sub_4040f0
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
push es
jno r-xdata
mov esp 0xd2775a59
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
call sub_4040fd
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c15017
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1f46a
push esi
call sub_40412e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jg r-xdata
jge 0x18ac6b8
sub esp 0x1c
jge r-xdata
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x10028c3
push eax
push ecx
sub esp 0x10
call sub_4040df
jo 0xffffffffff29cea0
or esi 0xf04c483
xor ebp 0xfffffffe
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pop ecx
add eax 0xfefc8d0f
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
jae r-xdata
or eax 0x8d0fb671
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1de4e
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40425c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
add esp 0x4
ja r-xdata
jge 0x100c556
jns r-xdata
add esi 0x99870f
jno r-xdata
xor eax 0xff56850f
pop eax
jg r-xdata
jne 0xffffffffe7c22fa0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c203fc
jg r-xdata
jge 0xffffffffc009b6ce
jns r-xdata
xor esi 0x76795a59
jb 0x120c4f3
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jl 0xe24b487
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c159af
jae r-xdata
jpo 0x362899f5
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7289a45
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_40427f
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cbab
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4041ad
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101bb59a
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9a0a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4042b8
sub esi 0xe92e7f58
push esp
push edi
call sub_4041da
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13ca25
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_4040e3
jne r-xdata
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1f46a
pop ecx
pop edx
ja r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
pop eax
jno r-xdata
jns r-xdata
or esi 0x890f537f
pop edx
jne r-xdata
ja 0xffffffffe85bc009
jge r-xdata
sub edx 0xf281e771
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1de4e
jns r-xdata
add ebx 0x9c575756
call sub_4040fd
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c15017
jae r-xdata
pop edx
jns r-xdata
sub edx 0xee815d71
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
jpe 0x18c3509a
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jno r-xdata
xor eax 0xff56850f
push esi
call sub_40412e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jne r-xdata
jl 0xffffffffa1a4d343
jg r-xdata
jge 0x18ac6b8
pop ecx
add eax 0xfefc8d0f
jg r-xdata
jge 0xffffffffc009b6ce
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x10028c3
push eax
push ecx
sub esp 0x10
call sub_4040df
jo 0xffffffffff29cea0
or esi 0xf04c483
xor ebp 0xfffffffe
jge r-xdata
js 0x59754dd1
jae r-xdata
or eax 0x15ff2875
pop ecx
jae r-xdata
mov ecx 0x59054979
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jg r-xdata
jl 0xe24b487
jae r-xdata
or eax 0x8d0fb671
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
call 0xffffffffcec18327
jno r-xdata
add ecx 0x8d0f3a7d
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40425c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
add esp 0x4
ja r-xdata
jge 0x100c556
jns r-xdata
add esi 0x99870f
jae r-xdata
jo 0xc64861c
jne r-xdata
xor edi 0x5c775a59
pop eax
jg r-xdata
jne 0xffffffffe7c22fa0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c203fc
jge r-xdata
call sub_4040f0
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
xor esi 0x76795a59
jb 0x120c4f3
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jae r-xdata
or esi 0x937f5959
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c159af
jae r-xdata
jpo 0x362899f5
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7289a45
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_40427f
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cbab
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4041ad
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101bb59a
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9a0a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4042b8
sub esi 0xe92e7f58
push esp
push edi
call sub_4041da
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13ca25
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_4040f0
jno r-xdata
pop ecx
pop ecx
jg r-xdata
xor edx 0x59bc4079
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jns r-xdata
or esi 0x890f537f
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1f46a
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1de4e
jns r-xdata
add ebx 0x9c575756
jne r-xdata
xor edi 0x5c775a59
pop edx
ja r-xdata
pop ecx
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
pop eax
jno r-xdata
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
pop edx
jne r-xdata
ja 0xffffffffe85bc009
jge r-xdata
sub edx 0xf281e771
jno r-xdata
xor eax 0xff56850f
push esi
call sub_40412e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jae r-xdata
or esi 0x937f5959
call sub_4040fd
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c15017
jae r-xdata
pop edx
jns r-xdata
sub edx 0xee815d71
jno r-xdata
mov esp 0xd2775a59
jg r-xdata
jge 0xffffffffc009b6ce
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x10028c3
push eax
push ecx
sub esp 0x10
call sub_4040df
jo 0xffffffffff29cea0
or esi 0xf04c483
xor ebp 0xfffffffe
jge r-xdata
js 0x59754dd1
jae r-xdata
or eax 0x15ff2875
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
jpe 0x18c3509a
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jg r-xdata
jl 0xe24b487
jae r-xdata
or eax 0x8d0fb671
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
jne r-xdata
jl 0xffffffffa1a4d343
jg r-xdata
jge 0x18ac6b8
pop ecx
add eax 0xfefc8d0f
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
jg r-xdata
sub ecx 0xce819d75
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
call 0xffffffffcec18327
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jae r-xdata
jo 0xc64861c
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40425c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jge r-xdata
call sub_4040f0
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
add esp 0x4
ja r-xdata
jge 0x100c556
jns r-xdata
add esi 0x99870f
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
pop eax
jg r-xdata
jne 0xffffffffe7c22fa0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c203fc
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jns r-xdata
xor esi 0x76795a59
jb 0x120c4f3
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c159af
jae r-xdata
jpo 0x362899f5
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7289a45
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_40427f
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cbab
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4041ad
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101bb59a
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9a0a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4042b8
sub esi 0xe92e7f58
push esp
push edi
call sub_4041da
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13ca25
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_4040fd
jg r-xdata
pop eax
pop ecx
jge r-xdata
jns 0xffffffff8202ba5f
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
retn
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
add eax 0xfefc8d0f
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop edx
jne r-xdata
ja 0xffffffffe85bc009
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c15017
jae r-xdata
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
push eax
push ecx
sub esp 0x10
call sub_4040df
jo 0xffffffffff29cea0
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59754dd1
jae r-xdata
or eax 0x15ff2875
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jns r-xdata
call sub_4040fd
sub ebx 0xa3642773
add ebx 0x9c575756
pop ecx
jae r-xdata
mov ecx 0x59054979
push esi
call sub_40412e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
jg r-xdata
jge 0x18ac6b8
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x10028c3
jne r-xdata
jpe 0x18c3509a
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
call 0xffffffffcec18327
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jae r-xdata
or eax 0x8d0fb671
jl 0xffffffffa1a4d343
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1f46a
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40425c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
add esp 0x4
ja r-xdata
jge 0x100c556
jns r-xdata
add esi 0x99870f
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
pop eax
jg r-xdata
jne 0xffffffffe7c22fa0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c203fc
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1de4e
jns r-xdata
xor esi 0x76795a59
jb 0x120c4f3
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jno r-xdata
xor eax 0xff56850f
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c159af
jae r-xdata
jpo 0x362899f5
jg r-xdata
jge 0xffffffffc009b6ce
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7289a45
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_40427f
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cbab
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jg r-xdata
jl 0xe24b487
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4041ad
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101bb59a
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9a0a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4042b8
sub esi 0xe92e7f58
push esp
push edi
call sub_4041da
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jno r-xdata
jno 0xffffffffff13ca25
jmp [ esp + 0x18 ]
or eax 0xfef5830f
jae r-xdata
jo 0xc64861c
mov eax 0xff64870f
jge r-xdata
call sub_4040f0
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
pop ecx
jno r-xdata
xor esi 0xe381807d
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
sub_40412e
jne r-xdata
jns r-xdata
call [ 0xffffffffea81cd7d ]
pop edx
jae r-xdata
jo 0xffffffffcec160dd
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
pop edx
jne r-xdata
ja 0xffffffffe85bc009
add esp 0x4
jae r-xdata
jg r-xdata
jge 0x18ac6b8
pop ecx
add eax 0xfefc8d0f
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c15017
jae r-xdata
jae r-xdata
or eax 0x8d0fb671
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jns r-xdata
jmp 0x10028c3
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40425c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
push eax
push ecx
sub esp 0x10
call sub_4040df
jo 0xffffffffff29cea0
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59754dd1
jae r-xdata
or eax 0x15ff2875
jns r-xdata
call sub_4040fd
sub ebx 0xa3642773
add ebx 0x9c575756
pop ecx
jae r-xdata
mov ecx 0x59054979
add esp 0x4
ja r-xdata
jge 0x100c556
jns r-xdata
add esi 0x99870f
push esi
call sub_40412e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pop eax
jg r-xdata
jne 0xffffffffe7c22fa0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c203fc
jmp [ 0xc4830f ]
jne r-xdata
jpe 0x18c3509a
call 0xffffffffcec18327
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jns r-xdata
xor esi 0x76795a59
jb 0x120c4f3
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jl 0xffffffffa1a4d343
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1f46a
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c159af
jae r-xdata
jpo 0x362899f5
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7289a45
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_40427f
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cbab
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1de4e
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4041ad
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101bb59a
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9a0a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4042b8
sub esi 0xe92e7f58
push esp
push edi
call sub_4041da
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
xor eax 0xff56850f
jno r-xdata
jno 0xffffffffff13ca25
jmp [ esp + 0x18 ]
or eax 0xfef5830f
jg r-xdata
jge 0xffffffffc009b6ce
mov eax 0xff64870f
jg r-xdata
jl 0xe24b487
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jae r-xdata
jo 0xc64861c
jge r-xdata
call sub_4040f0
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
sub_4041ad
pop ecx
pop eax
pop edx
pop edx
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jns r-xdata
add esi 0x99870f
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
jae r-xdata
jbe 0xfffffffff2c203fc
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40425c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
add esp 0x4
ja r-xdata
jge 0x100c556
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop eax
jg r-xdata
jne 0xffffffffe7c22fa0
add [ eax ] al
jae r-xdata
jpo 0x362899f5
jns r-xdata
xor esi 0x76795a59
jb 0x120c4f3
ja r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_4041ad
add edx 0x79810f59
add eax 0xff0e830f
jae r-xdata
sub edi 0xff5b8d0f
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c159af
pushfd
push eax
call sub_4042b8
sub esi 0xe92e7f58
push esp
push edi
call sub_4041da
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
ja r-xdata
jmp 0xffffffffe7289a45
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_40427f
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cbab
jae r-xdata
jae r-xdata
jmp [ 0x182464ff ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101bb59a
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9a0a
lea ecx [ edi ]
add eax 0x0
jno r-xdata
jno 0xffffffffff13ca25
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
mov eax 0xff64870f
sub_4041da
pop ecx
pop edx
jns r-xdata
jge r-xdata
jb 0x120c4f3
jae r-xdata
or edx 0x59b9427f
add esp 0x8
ja r-xdata
add [ eax ] al
add esp 0x4
ja r-xdata
jpo 0xfcc4cc
jns r-xdata
or esi 0xa5810f
add [ eax ] al
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
jno r-xdata
sub edx 0x57e85254
add [ eax ] al
add [ ecx + 0x5a7f58c7 ] al
add [ eax ] al
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c203fc
ja r-xdata
jmp 0xffffffffe7289a45
jns r-xdata
add esi 0x99870f
ja r-xdata
add esi 0xc7817c73
add esp 0x4
jne r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jmp [ 0x182464ff ]
jno r-xdata
and edx 0xff23870f
jae r-xdata
mov eax 0xe3795858
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
push esp
push edi
call sub_4041da
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x362899f5
jno r-xdata
jno 0xffffffffff13ca25
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
mov eax 0xff64870f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
sub esp 0x18
call sub_4041ad
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
mov edi 0xcf81337f
pushfd
push eax
call sub_4042b8
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c159af
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_40427f
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cbab
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101bb59a
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9a0a
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40425c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100c556
pop eax
jg r-xdata
jne 0xffffffffe7c22fa0
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
pop edx
jno r-xdata
and ecx 0xff69830f
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_40422a
jg r-xdata
pop ecx
add esp 0x8
ja r-xdata
or edi 0x8d0f647d
jns r-xdata
or esi 0xa5810f
add [ eax ] al
add esi 0xc7817c73
pop edx
jno r-xdata
and ecx 0xff69830f
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c203fc
jae r-xdata
sub edi 0xff5b8d0f
add esp 0x4
jne r-xdata
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jae r-xdata
mov eax 0xe3795858
jns r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jns r-xdata
add [ eax ] al
add esi 0x99870f
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
push esp
push edi
call sub_4041da
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x362899f5
jg r-xdata
jge 0xffffffffe1c159af
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
pushfd
call sub_40427f
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cbab
jae r-xdata
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_4041ad
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101bb59a
pushfd
push eax
call sub_4042b8
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
ja r-xdata
jmp 0xffffffffe7289a45
jae r-xdata
jpo 0x5a9a9a0a
lea ecx [ edi ]
add eax 0x0
jae r-xdata
jmp [ 0x182464ff ]
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jno r-xdata
jno 0xffffffffff13ca25
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
mov eax 0xff64870f
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40425c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
ja r-xdata
mov edi 0xcf81337f
add esp 0x4
ja r-xdata
jge 0x100c556
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
pop eax
jg r-xdata
jne 0xffffffffe7c22fa0
add [ eax ] al
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
jns r-xdata
xor esi 0x76795a59
jb 0x120c4f3
jae r-xdata
add ebx 0x840f3e7f
add [ eax ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
sub_40425c
jg r-xdata
push ecx
push edi
call sub_4042dc
or ebx 0x2de0735a
mov ecx 0x8c48359
ja r-xdata
pushfd
push eax
call sub_4042b8
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
jns r-xdata
or esi 0xa5810f
add [ eax ] al
add esi 0xc7817c73
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c203fc
add esp 0x4
jne r-xdata
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
mov eax 0xe3795858
jns r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jns r-xdata
add [ eax ] al
add esi 0x99870f
push esp
push edi
call sub_4041da
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x362899f5
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_4041ad
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
jmp 0xffffffffe7289a45
jae r-xdata
jmp [ 0x182464ff ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
jno r-xdata
jno 0xffffffffff13ca25
ja r-xdata
mov eax 0xff64870f
ja r-xdata
mov edi 0xcf81337f
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c159af
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_40427f
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cbab
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101bb59a
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9a0a
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40425c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100c556
pop eax
jg r-xdata
jne 0xffffffffe7c22fa0
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
jb 0x120c4f3
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_4042b8
jae r-xdata
push esp
push edx
call sub_40422a
add edi 0x815a7f58
neg [ ecx + 0x5a ]
jns r-xdata
xor ebx 0x7504c483
stosb [ edi ]
jge r-xdata
jb 0x120c4f3
jae r-xdata
or edx 0x59b9427f
add esp 0x8
ja r-xdata
add [ eax ] al
add esp 0x4
ja r-xdata
jpo 0xfcc4cc
jns r-xdata
or esi 0xa5810f
add [ eax ] al
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
jno r-xdata
sub edx 0x57e85254
add [ eax ] al
add [ ecx + 0x5a7f58c7 ] al
add [ eax ] al
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c203fc
ja r-xdata
jmp 0xffffffffe7289a45
jns r-xdata
add esi 0x99870f
ja r-xdata
add esi 0xc7817c73
add esp 0x4
jne r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jmp [ 0x182464ff ]
jno r-xdata
and edx 0xff23870f
jae r-xdata
mov eax 0xe3795858
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
push esp
push edi
call sub_4041da
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x362899f5
jno r-xdata
jno 0xffffffffff13ca25
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
mov eax 0xff64870f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
sub esp 0x18
call sub_4041ad
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
mov edi 0xcf81337f
pushfd
push eax
call sub_4042b8
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c159af
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_40427f
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cbab
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101bb59a
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9a0a
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40425c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100c556
pop eax
jg r-xdata
jne 0xffffffffe7c22fa0
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
pop edx
jno r-xdata
and ecx 0xff69830f
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_40438d
pop edx
jns r-xdata
jne r-xdata
add ecx 0x54bf0a75
jne r-xdata
push ecx
call sub_40438d
jmp [ 0x70246c83 ]
sub ebx 0x81f9795a
shl [ ebp + 0xa ] 0xbf
push esp
sub [ esp + 0x70 ] 0x2
sub esp 0x8
jge r-xdata
mov edi 0xf1e85154
jno r-xdata
add eax 0xe89c5656
add eax 0xb9000000
jae r-xdata
add ecx 0x53575255
call sub_4043c5
jne 0xffffffffa3a52a38
push esi
push esi
pushfd
call sub_4043b6
mov ecx 0xc1810d71
push ebp
push edx
push edi
push ebx
mov [ fs : 0xffffffff9c248481 ] eax
add [ eax ] al
add [ ebx + 0x44 ] dl
inc eax
add [ ebx + 0x57704ec ] al
jmp 0xffffffff894f4a4d
sub_4043c5
add [ esp + 0x9c ] r-xdata
sub esp 0x4
ja r-xdata
jne r-xdata
jmp 0xffffffff894f4a4d
jg r-xdata
add edx 0x5e855
add [ eax ] al
jae r-xdata
jne 0xffffffffa864e8ec
mov ecx 0x850fef7f
push ebp
call sub_4043e9
jns 0xffffffffc2c14d53
add [ eax ] al
add al ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x7508ec83 ] bh
adc al 0x81
out 0x53 eax
push eax
call sub_40440c
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_404404
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x10508d8
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_40443d
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x40 ]
jbe r-xdata
mov [ ebp - 0x2c ] 0x5245
mov eax [ ebp + 0x80 ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x84 ] edx
lea eax [ ebp - 0x54 ]
add eax 0xffffed1b
mov [ ebp - 0x84 ] eax
jmp r-xdata
lea eax [ ebp - 0x50 ]
xor ecx ecx
sub ecx eax
mov [ ebp - 0x88 ] ecx
mov eax [ ebp + 0xc8 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x88 ] edx
jmp r-xdata
lea eax [ ebp + 0x8c ]
lea ecx [ ebp + 0x2c ]
movzx ecx cx
and eax ecx
lea ecx [ ebp + 0x2c ]
movzx ecx cl
shr ecx 0x3
cmp [ ebp - 0x84 ] 0x464b
cmova ecx eax
movzx eax [ ebp + 0xc ]
cmp ecx eax
ja r-xdata
mov [ ebp - 0x58 ] 0x400
push [ ebp - 0x8c ]
push [ ebp + 0xc ]
push 0x1
push 0x0
push [ ebp + 0x8 ]
push [ ebp - 0x60 ]
call [ RegSetValueExA@IAT ]
mov [ ebp - 0x5c ] eax
xor eax eax
sub eax [ ebp - 0x44 ]
mov [ ebp - 0x90 ] eax
mov [ ebp - 0x58 ] 0x400
push [ ebp - 0x8c ]
push [ ebp + 0xc ]
push 0x1
push 0x0
push [ ebp + 0x8 ]
push [ ebp - 0x60 ]
call [ RegSetValueExA@IAT ]
mov [ ebp - 0x5c ] eax
lea eax [ ebp + 0x8c ]
shr eax 0x4
mov [ ebp - 0x90 ] eax
jmp r-xdata
lea eax [ ebp - 0x44 ]
movzx eax al
cmp [ ebp - 0x88 ] eax
jbe r-xdata
push [ ebp - 0x60 ]
call [ RegCloseKey@IAT ]
xor eax eax
inc eax
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x90 ]
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x5c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405fe1
mov esp ebp
pop ebp
retn
sub_404404
push ebx
push eax
call sub_40440c
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_404404
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x10508d8
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_40443d
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x40 ]
jbe r-xdata
mov [ ebp - 0x2c ] 0x5245
mov eax [ ebp + 0x80 ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x84 ] edx
lea eax [ ebp - 0x54 ]
add eax 0xffffed1b
mov [ ebp - 0x84 ] eax
jmp r-xdata
lea eax [ ebp - 0x50 ]
xor ecx ecx
sub ecx eax
mov [ ebp - 0x88 ] ecx
mov eax [ ebp + 0xc8 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x88 ] edx
jmp r-xdata
lea eax [ ebp + 0x8c ]
lea ecx [ ebp + 0x2c ]
movzx ecx cx
and eax ecx
lea ecx [ ebp + 0x2c ]
movzx ecx cl
shr ecx 0x3
cmp [ ebp - 0x84 ] 0x464b
cmova ecx eax
movzx eax [ ebp + 0xc ]
cmp ecx eax
ja r-xdata
mov [ ebp - 0x58 ] 0x400
push [ ebp - 0x8c ]
push [ ebp + 0xc ]
push 0x1
push 0x0
push [ ebp + 0x8 ]
push [ ebp - 0x60 ]
call [ RegSetValueExA@IAT ]
mov [ ebp - 0x5c ] eax
xor eax eax
sub eax [ ebp - 0x44 ]
mov [ ebp - 0x90 ] eax
mov [ ebp - 0x58 ] 0x400
push [ ebp - 0x8c ]
push [ ebp + 0xc ]
push 0x1
push 0x0
push [ ebp + 0x8 ]
push [ ebp - 0x60 ]
call [ RegSetValueExA@IAT ]
mov [ ebp - 0x5c ] eax
lea eax [ ebp + 0x8c ]
shr eax 0x4
mov [ ebp - 0x90 ] eax
jmp r-xdata
lea eax [ ebp - 0x44 ]
movzx eax al
cmp [ ebp - 0x88 ] eax
jbe r-xdata
push [ ebp - 0x60 ]
call [ RegCloseKey@IAT ]
xor eax eax
inc eax
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x90 ]
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x5c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405fe1
mov esp ebp
pop ebp
retn
sub_40440c
pop ecx
pop ecx
jge r-xdata
ja r-xdata
xor edx 0x830f0a77
push ecx
push ebx
call sub_404404
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
add [ esp + 0x18 ] 0x6
jae 0xffffffffe828976b
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x10508d8
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_40443d
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x40 ]
jbe r-xdata
mov [ ebp - 0x2c ] 0x5245
mov eax [ ebp + 0x80 ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x84 ] edx
lea eax [ ebp - 0x54 ]
add eax 0xffffed1b
mov [ ebp - 0x84 ] eax
jmp r-xdata
lea eax [ ebp - 0x50 ]
xor ecx ecx
sub ecx eax
mov [ ebp - 0x88 ] ecx
mov eax [ ebp + 0xc8 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x88 ] edx
jmp r-xdata
lea eax [ ebp + 0x8c ]
lea ecx [ ebp + 0x2c ]
movzx ecx cx
and eax ecx
lea ecx [ ebp + 0x2c ]
movzx ecx cl
shr ecx 0x3
cmp [ ebp - 0x84 ] 0x464b
cmova ecx eax
movzx eax [ ebp + 0xc ]
cmp ecx eax
ja r-xdata
mov [ ebp - 0x58 ] 0x400
push [ ebp - 0x8c ]
push [ ebp + 0xc ]
push 0x1
push 0x0
push [ ebp + 0x8 ]
push [ ebp - 0x60 ]
call [ RegSetValueExA@IAT ]
mov [ ebp - 0x5c ] eax
xor eax eax
sub eax [ ebp - 0x44 ]
mov [ ebp - 0x90 ] eax
mov [ ebp - 0x58 ] 0x400
push [ ebp - 0x8c ]
push [ ebp + 0xc ]
push 0x1
push 0x0
push [ ebp + 0x8 ]
push [ ebp - 0x60 ]
call [ RegSetValueExA@IAT ]
mov [ ebp - 0x5c ] eax
lea eax [ ebp + 0x8c ]
shr eax 0x4
mov [ ebp - 0x90 ] eax
jmp r-xdata
lea eax [ ebp - 0x44 ]
movzx eax al
cmp [ ebp - 0x88 ] eax
jbe r-xdata
push [ ebp - 0x60 ]
call [ RegCloseKey@IAT ]
xor eax eax
inc eax
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x90 ]
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x5c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405fe1
mov esp ebp
pop ebp
retn
sub_4045a3
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x70
push esi
call sub_405fd3
pop ecx
pop ecx
sub_4045c6
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
lea eax [ ebp - 0x14 ]
mov esi ecx
push eax
push 0xb00
call [ glGetFloatv@IAT ]
sub esp 0xc
xorps xmm0 xmm0
movss [ ebp - 0x18 ] xmm0
mov [ esp + 0x8 ] 0x3f333333
mov [ esp + 0x4 ] 0x3f333333
and [ esp ] 0x0
call [ glColor3f@IAT ]
call [ glPushMatrix@IAT ]
movss xmm0 [ esi + 0x8 ]
sub esp 0xc
mulss xmm0 [ r--data ]
and [ esp + 0x8 ] 0x0
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm0
call [ glTranslatef@IAT ]
mov edi [ glVertex3f@IAT ]
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
push 0x2
call [ glBegin@IAT ]
movd xmm0 [ ebp - 0x1c ]
sub esp 0xc
movss xmm1 [ esi + 0x8 ]
mulss xmm1 [ r--data ]
cvtdq2ps xmm0 xmm0
mulss xmm1 [ r--data ]
mulss xmm0 [ esi + 0x8 ]
movss [ esp + 0x8 ] xmm0
movss [ esp + 0x4 ] xmm1
movss [ esp ] xmm1
call edi
mov eax [ ebp - 0x1c ]
sub esp 0xc
movss xmm1 [ esi + 0x8 ]
mulss xmm1 [ r--data ]
movd xmm0 eax
cvtdq2ps xmm0 xmm0
mulss xmm0 [ esi + 0x8 ]
movss [ esp + 0x8 ] xmm0
movaps xmm0 xmm1
mulss xmm0 [ r--data ]
mulss xmm1 [ r--data ]
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm1
call edi
mov eax [ ebp - 0x1c ]
sub esp 0xc
movss xmm1 [ esi + 0x8 ]
mulss xmm1 [ r--data ]
movd xmm0 eax
cvtdq2ps xmm0 xmm0
mulss xmm1 [ r--data ]
mulss xmm0 [ esi + 0x8 ]
movss [ esp + 0x8 ] xmm0
movss [ esp + 0x4 ] xmm1
movss [ esp ] xmm1
call edi
mov eax [ ebp - 0x1c ]
sub esp 0xc
movss xmm1 [ esi + 0x8 ]
mulss xmm1 [ r--data ]
movd xmm0 eax
cvtdq2ps xmm0 xmm0
mulss xmm0 [ esi + 0x8 ]
movss [ esp + 0x8 ] xmm0
movaps xmm0 xmm1
mulss xmm0 [ r--data ]
mulss xmm1 [ r--data ]
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm1
call edi
call [ glEnd@IAT ]
movss xmm1 [ r--data ]
inc ebx
dec [ ebp - 0x1c ]
movd xmm0 ebx
cvtdq2ps xmm0 xmm0
comiss xmm1 xmm0
jae r-xdata
mov ebx [ ebp - 0x20 ]
push 0x3
call [ glBegin@IAT ]
movss xmm1 [ esi + 0x8 ]
sub esp 0xc
movaps xmm2 xmm1
mulss xmm1 [ ebp - 0x18 ]
mulss xmm2 [ r--data ]
and [ esp + 0x8 ] 0x0
movaps xmm0 xmm2
mulss xmm2 [ r--data ]
mulss xmm0 [ r--data ]
subss xmm0 xmm1
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm2
call edi
movss xmm1 [ esi + 0x8 ]
sub esp 0xc
movaps xmm0 xmm1
movaps xmm2 xmm1
mulss xmm0 [ r--data ]
mulss xmm2 [ r--data ]
mulss xmm1 [ ebp - 0x18 ]
movss [ esp + 0x8 ] xmm0
movaps xmm0 xmm2
mulss xmm0 [ r--data ]
mulss xmm2 [ r--data ]
subss xmm0 xmm1
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm2
call edi
movss xmm1 [ esi + 0x8 ]
sub esp 0xc
movaps xmm2 xmm1
movaps xmm0 xmm1
mulss xmm2 [ r--data ]
mulss xmm0 [ r--data ]
mulss xmm2 [ r--data ]
mulss xmm1 [ ebp - 0x18 ]
movss [ esp + 0x8 ] xmm0
movaps xmm0 xmm2
subss xmm0 xmm1
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm2
call edi
movss xmm1 [ esi + 0x8 ]
sub esp 0xc
movaps xmm2 xmm1
mulss xmm1 [ ebp - 0x18 ]
mulss xmm2 [ r--data ]
and [ esp + 0x8 ] 0x0
mulss xmm2 [ r--data ]
movaps xmm0 xmm2
subss xmm0 xmm1
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm2
call edi
call [ glEnd@IAT ]
push 0x3
call [ glBegin@IAT ]
movss xmm2 [ esi + 0x8 ]
sub esp 0xc
movaps xmm1 xmm2
mulss xmm2 [ ebp - 0x18 ]
mulss xmm1 [ r--data ]
and [ esp + 0x8 ] 0x0
movaps xmm0 xmm1
mulss xmm1 [ r--data ]
mulss xmm0 [ r--data ]
subss xmm1 xmm2
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm1
call edi
movss xmm2 [ esi + 0x8 ]
sub esp 0xc
movaps xmm0 xmm2
movaps xmm1 xmm2
mulss xmm0 [ r--data ]
mulss xmm1 [ r--data ]
movss [ esp + 0x8 ] xmm0
movaps xmm0 xmm1
mulss xmm0 [ r--data ]
mulss xmm1 [ r--data ]
mulss xmm2 [ ebp - 0x18 ]
movss [ esp + 0x4 ] xmm0
subss xmm1 xmm2
movss [ esp ] xmm1
call edi
movss xmm1 [ esi + 0x8 ]
sub esp 0xc
movaps xmm2 xmm1
movaps xmm0 xmm1
mulss xmm2 [ r--data ]
mulss xmm0 [ r--data ]
mulss xmm2 [ r--data ]
mulss xmm1 [ ebp - 0x18 ]
movss [ esp + 0x8 ] xmm0
movss [ esp + 0x4 ] xmm2
subss xmm2 xmm1
movss [ esp ] xmm2
call edi
movss xmm0 [ esi + 0x8 ]
sub esp 0xc
movaps xmm1 xmm0
mulss xmm0 [ ebp - 0x18 ]
mulss xmm1 [ r--data ]
and [ esp + 0x8 ] 0x0
mulss xmm1 [ r--data ]
movss [ esp + 0x4 ] xmm1
subss xmm1 xmm0
movss [ esp ] xmm1
call edi
call [ glEnd@IAT ]
inc ebx
movd xmm0 ebx
cvtdq2ps xmm1 xmm0
movss xmm0 [ r--data ]
comiss xmm0 xmm1
movss [ ebp - 0x18 ] xmm1
jae r-xdata
lea eax [ ebp - 0x14 ]
push eax
call [ glColor4fv@IAT ]
call [ glPopMatrix@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn
sub_4049df
push ebp
mov ebp esp
push ecx
push ecx
movss xmm0 [ ecx + 0x8 ]
mulss xmm0 [ r--data ]
push esi
push edi
push 0x7
movss [ ebp - 0x4 ] xmm0
call [ glBegin@IAT ]
mov esi [ glNormal3f@IAT ]
sub esp 0xc
mov [ esp + 0x8 ] 0x3f800000
and [ esp + 0x4 ] 0x0
and [ esp ] 0x0
call esi
push ecx
push ecx
and [ esp + 0x4 ] 0x0
and [ esp ] 0x0
call [ glTexCoord2f@IAT ]
movss xmm1 [ ebp - 0x4 ]
sub esp 0xc
mov edi [ glVertex3f@IAT ]
movaps xmm0 xmm1
xorps xmm0 [ r--data ]
movss [ ebp - 0x8 ] xmm0
movss [ esp + 0x8 ] xmm1
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm0
call edi
push ecx
push ecx
and [ esp + 0x4 ] 0x0
mov [ esp ] 0x3f800000
call [ glTexCoord2f@IAT ]
movss xmm1 [ ebp - 0x4 ]
sub esp 0xc
movss xmm0 [ ebp - 0x8 ]
movss [ esp + 0x8 ] xmm1
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm1
call edi
push ecx
push ecx
mov [ esp + 0x4 ] 0x3f800000
mov [ esp ] 0x3f800000
call [ glTexCoord2f@IAT ]
movss xmm0 [ ebp - 0x4 ]
sub esp 0xc
movss [ esp + 0x8 ] xmm0
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm0
call edi
push ecx
push ecx
mov [ esp + 0x4 ] 0x3f800000
and [ esp ] 0x0
call [ glTexCoord2f@IAT ]
movss xmm0 [ ebp - 0x4 ]
sub esp 0xc
movss [ esp + 0x8 ] xmm0
movss [ esp + 0x4 ] xmm0
movss xmm0 [ ebp - 0x8 ]
movss [ esp ] xmm0
call edi
sub esp 0xc
mov [ esp + 0x8 ] 0xbf800000
and [ esp + 0x4 ] 0x0
and [ esp ] 0x0
call esi
push ecx
push ecx
and [ esp + 0x4 ] 0x0
mov [ esp ] 0x3f800000
call [ glTexCoord2f@IAT ]
movss xmm0 [ ebp - 0x8 ]
sub esp 0xc
movss [ esp + 0x8 ] xmm0
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm0
call edi
push ecx
push ecx
mov [ esp + 0x4 ] 0x3f800000
mov [ esp ] 0x3f800000
call [ glTexCoord2f@IAT ]
movss xmm0 [ ebp - 0x8 ]
sub esp 0xc
movss xmm1 [ ebp - 0x4 ]
movss [ esp + 0x8 ] xmm0
movss [ esp + 0x4 ] xmm1
movss [ esp ] xmm0
call edi
push ecx
push ecx
mov [ esp + 0x4 ] 0x3f800000
and [ esp ] 0x0
call [ glTexCoord2f@IAT ]
movss xmm0 [ ebp - 0x8 ]
sub esp 0xc
movss [ esp + 0x8 ] xmm0
movss xmm0 [ ebp - 0x4 ]
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm0
call edi
push ecx
push ecx
and [ esp + 0x4 ] 0x0
and [ esp ] 0x0
call [ glTexCoord2f@IAT ]
movss xmm0 [ ebp - 0x8 ]
sub esp 0xc
movss [ esp + 0x8 ] xmm0
movss [ esp + 0x4 ] xmm0
movss xmm0 [ ebp - 0x4 ]
movss [ esp ] xmm0
call edi
sub esp 0xc
and [ esp + 0x8 ] 0x0
mov [ esp + 0x4 ] 0x3f800000
and [ esp ] 0x0
call esi
push ecx
push ecx
mov [ esp + 0x4 ] 0x3f800000
and [ esp ] 0x0
call [ glTexCoord2f@IAT ]
movss xmm0 [ ebp - 0x8 ]
sub esp 0xc
movss xmm1 [ ebp - 0x4 ]
movss [ esp + 0x8 ] xmm0
movss [ esp + 0x4 ] xmm1
movss [ esp ] xmm0
call edi
push ecx
push ecx
and [ esp + 0x4 ] 0x0
and [ esp ] 0x0
call [ glTexCoord2f@IAT ]
movss xmm0 [ ebp - 0x4 ]
sub esp 0xc
movss [ esp + 0x8 ] xmm0
movss [ esp + 0x4 ] xmm0
movss xmm0 [ ebp - 0x8 ]
movss [ esp ] xmm0
call edi
push ecx
push ecx
and [ esp + 0x4 ] 0x0
mov [ esp ] 0x3f800000
call [ glTexCoord2f@IAT ]
movss xmm0 [ ebp - 0x4 ]
sub esp 0xc
movss [ esp + 0x8 ] xmm0
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm0
call edi
push ecx
push ecx
mov [ esp + 0x4 ] 0x3f800000
mov [ esp ] 0x3f800000
call [ glTexCoord2f@IAT ]
movss xmm0 [ ebp - 0x8 ]
sub esp 0xc
movss [ esp + 0x8 ] xmm0
movss xmm0 [ ebp - 0x4 ]
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm0
call edi
sub esp 0xc
and [ esp + 0x8 ] 0x0
mov [ esp + 0x4 ] 0xbf800000
and [ esp ] 0x0
call esi
push ecx
push ecx
mov [ esp + 0x4 ] 0x3f800000
mov [ esp ] 0x3f800000
call [ glTexCoord2f@IAT ]
movss xmm0 [ ebp - 0x8 ]
sub esp 0xc
movss [ esp + 0x8 ] xmm0
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm0
call edi
push ecx
push ecx
mov [ esp + 0x4 ] 0x3f800000
and [ esp ] 0x0
call [ glTexCoord2f@IAT ]
movss xmm0 [ ebp - 0x8 ]
sub esp 0xc
movss [ esp + 0x8 ] xmm0
movss [ esp + 0x4 ] xmm0
movss xmm0 [ ebp - 0x4 ]
movss [ esp ] xmm0
call edi
push ecx
push ecx
and [ esp + 0x4 ] 0x0
and [ esp ] 0x0
call [ glTexCoord2f@IAT ]
movss xmm1 [ ebp - 0x4 ]
sub esp 0xc
movss xmm0 [ ebp - 0x8 ]
movss [ esp + 0x8 ] xmm1
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm1
call edi
push ecx
push ecx
and [ esp + 0x4 ] 0x0
mov [ esp ] 0x3f800000
call [ glTexCoord2f@IAT ]
movss xmm0 [ ebp - 0x4 ]
sub esp 0xc
movss [ esp + 0x8 ] xmm0
movss xmm0 [ ebp - 0x8 ]
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm0
call edi
sub esp 0xc
and [ esp + 0x8 ] 0x0
and [ esp + 0x4 ] 0x0
mov [ esp ] 0x3f800000
call esi
push ecx
push ecx
and [ esp + 0x4 ] 0x0
mov [ esp ] 0x3f800000
call [ glTexCoord2f@IAT ]
movss xmm0 [ ebp - 0x8 ]
sub esp 0xc
movss [ esp + 0x8 ] xmm0
movss [ esp + 0x4 ] xmm0
movss xmm0 [ ebp - 0x4 ]
movss [ esp ] xmm0
call edi
push ecx
push ecx
mov [ esp + 0x4 ] 0x3f800000
mov [ esp ] 0x3f800000
call [ glTexCoord2f@IAT ]
movss xmm0 [ ebp - 0x8 ]
sub esp 0xc
movss [ esp + 0x8 ] xmm0
movss xmm0 [ ebp - 0x4 ]
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm0
call edi
push ecx
push ecx
mov [ esp + 0x4 ] 0x3f800000
and [ esp ] 0x0
call [ glTexCoord2f@IAT ]
movss xmm0 [ ebp - 0x4 ]
sub esp 0xc
movss [ esp + 0x8 ] xmm0
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm0
call edi
push ecx
push ecx
and [ esp + 0x4 ] 0x0
and [ esp ] 0x0
call [ glTexCoord2f@IAT ]
movss xmm1 [ ebp - 0x4 ]
sub esp 0xc
movss xmm0 [ ebp - 0x8 ]
movss [ esp + 0x8 ] xmm1
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm1
call edi
sub esp 0xc
and [ esp + 0x8 ] 0x0
and [ esp + 0x4 ] 0x0
mov [ esp ] 0xbf800000
call esi
mov esi [ glTexCoord2f@IAT ]
push ecx
push ecx
and [ esp + 0x4 ] 0x0
and [ esp ] 0x0
call esi
movss xmm0 [ ebp - 0x8 ]
sub esp 0xc
movss [ esp + 0x8 ] xmm0
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm0
call edi
push ecx
push ecx
and [ esp + 0x4 ] 0x0
mov [ esp ] 0x3f800000
call esi
movss xmm0 [ ebp - 0x4 ]
sub esp 0xc
movss [ esp + 0x8 ] xmm0
movss xmm0 [ ebp - 0x8 ]
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm0
call edi
push ecx
push ecx
mov [ esp + 0x4 ] 0x3f800000
mov [ esp ] 0x3f800000
call esi
movss xmm0 [ ebp - 0x4 ]
sub esp 0xc
movss [ esp + 0x8 ] xmm0
movss [ esp + 0x4 ] xmm0
movss xmm0 [ ebp - 0x8 ]
movss [ esp ] xmm0
call edi
push ecx
push ecx
mov [ esp + 0x4 ] 0x3f800000
and [ esp ] 0x0
call esi
movss xmm0 [ ebp - 0x8 ]
sub esp 0xc
movss xmm1 [ ebp - 0x4 ]
movss [ esp + 0x8 ] xmm0
movss [ esp + 0x4 ] xmm1
movss [ esp ] xmm0
call edi
call [ glEnd@IAT ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_404f5e
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push 0x28
pop eax
mov esi ecx
mov [ ebp - 0x2c ] ax
xor ebx ebx
mov [ ebp - 0x28 ] 0x25
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] 0x1800
push eax
push [ esi + 0x68 ]
xor edi edi
mov [ ebp - 0x20 ] ebx
inc edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2a ] di
mov [ ebp - 0x18 ] 0x10000000
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
call [ ChoosePixelFormat@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
push eax
push [ esi + 0x68 ]
call [ SetPixelFormat@IAT ]
push [ esi + 0x68 ]
call [ wglCreateContext@IAT ]
push eax
push [ esi + 0x68 ]
mov [ esi + 0x64 ] eax
call [ wglMakeCurrent@IAT ]
mov eax edi
push 0x30
push r--data
push r--data
push ebx
call [ MessageBoxA@IAT ]
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn
sub_405009
push ebx
push esi
mov esi [ glGenLists@IAT ]
mov ebx ecx
push 0x1
call esi
push 0x2
mov [ ebx + 0x3c ] eax
call esi
push 0x1300
push [ ebx + 0x3c ]
mov [ ebx + 0x38 ] eax
call [ glNewList@IAT ]
mov ecx ebx
call sub_4045c6
mov esi [ glEndList@IAT ]
call esi
push 0x1300
push [ ebx + 0x38 ]
call [ glNewList@IAT ]
mov ecx ebx
call sub_4049df
call esi
pop esi
pop ebx
retn
sub_405058
push 0x90
mov eax sub_41b063
call sub_406071
mov esi ecx
mov [ ebp - 0x4c ] esi
lea ebx [ esi + 0x10 ]
push ebx
push 0xa
call [ glGenTextures@IAT ]
push 0x8
call sub_406549
pop ecx
mov [ ebp - 0x48 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_4030a2
jmp r-xdata
inc eax
push eax
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x44 ]
push r--data
push eax
call sub_401d7a
add esp 0xc
lea eax [ ebp - 0x44 ]
mov ecx esi
push eax
lea eax [ ebp - 0x9c ]
push eax
call sub_40554c
push 0xa
pop ecx
push [ ebx ]
mov esi eax
lea edi [ ebp - 0x74 ]
[ edi ] [ esi ]
mov edi 0xde1
push edi
call [ glBindTexture@IAT ]
mov esi [ ebp - 0x4c ]
push [ esi + 0xc ]
push 0x1401
push 0x80e0
push 0x0
push [ ebp - 0x6c ]
push [ ebp - 0x70 ]
push 0x3
push 0x0
push edi
call [ glTexImage2D@IAT ]
push 0x2601
push 0x2800
push edi
mov edi [ glTexParameteri@IAT ]
call edi
push 0x2601
push 0x2801
push 0xde1
call edi
mov eax [ ebp - 0x48 ]
lea ebx [ ebx + 0x4 ]
cmp eax 0x9
jle r-xdata
call sub_40602c
retn
or [ ebp - 0x4 ] 0xffffffff
mov ecx eax
call sub_4031a7
xor eax eax
sub_40513f
push ebp
mov ebp esp
sub esp 0x410
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
lea eax [ ebp - 0x14 ]
mov ebx ecx
push eax
push 0xb00
mov [ ebp - 0x404 ] ebx
call [ glGetFloatv@IAT ]
push 0xde1
call [ glEnable@IAT ]
sub esp 0xc
mov [ esp + 0x8 ] 0x3f800000
mov [ esp + 0x4 ] 0x3f800000
mov [ esp ] 0x3f800000
call [ glColor3f@IAT ]
lea eax [ ebp - 0x3fc ]
mov ecx rw-data
push eax
call sub_405b6d
lea ecx [ ebx + 0x34 ]
xor edi edi
mov [ ebp - 0x40c ] ecx
push 0x4
pop edx
add eax edx
inc ebx
mov [ ebp - 0x400 ] eax
mov eax [ ebp - 0x408 ]
sub eax edx
mov [ ebp - 0x408 ] eax
cmp ebx 0x9
jle r-xdata
call [ glPushMatrix@IAT ]
mov eax [ ebp - 0x404 ]
sub esp 0xc
movss xmm2 [ eax + 0x8 ]
lea eax [ ebx + 0x1 ]
movd xmm0 eax
movaps xmm1 xmm2
mulss xmm1 [ r--data ]
lea eax [ esi + 0x1 ]
cvtdq2ps xmm0 xmm0
mulss xmm0 xmm2
subss xmm1 xmm0
movd xmm0 eax
cvtdq2ps xmm0 xmm0
lea eax [ edi + 0x1 ]
movss [ esp + 0x8 ] xmm1
mulss xmm0 xmm2
movss [ esp + 0x4 ] xmm0
movd xmm0 eax
cvtdq2ps xmm0 xmm0
mulss xmm0 xmm2
movss [ esp ] xmm0
call [ glTranslatef@IAT ]
mov eax [ ebp - 0x404 ]
push [ eax + 0x38 ]
call [ glCallList@IAT ]
call [ glPopMatrix@IAT ]
mov eax [ ebp - 0x400 ]
push [ eax ]
push 0xde1
call [ glBindTexture@IAT ]
mov eax [ ebp - 0x400 ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebp - 0x410 ]
inc esi
mov ecx [ ebp - 0x40c ]
cmp esi edx
jle r-xdata
add eax esi
mov [ ebp - 0x408 ] ecx
xor ebx ebx
imul eax eax 0x28
lea eax [ ebp + eax - 0x3fc ]
mov [ ebp - 0x400 ] eax
mov eax ecx
inc edi
cmp edi edx
jle r-xdata
xor esi esi
imul eax edi 0x5
mov [ ebp - 0x410 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ glColor4fv@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn
sub_4052cd
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] ecx
push eax
push 0xb00
call [ glGetFloatv@IAT ]
lea eax [ ebp - 0x28 ]
push eax
push 0xb40
call [ glGetIntegerv@IAT ]
sub esp 0xc
mov [ esp + 0x8 ] 0x3f800000
mov [ esp + 0x4 ] 0x3f800000
mov [ esp ] 0x3f800000
call [ glColor3f@IAT ]
mov esi [ glPolygonMode@IAT ]
push 0x1b01
push 0x408
call esi
push 0xde1
call [ glDisable@IAT ]
lea eax [ ebp - 0x1c ]
mov ecx rw-data
push eax
call sub_405b88
sub eax 0x1
js r-xdata
lea eax [ ebp - 0x14 ]
push eax
call [ glColor4fv@IAT ]
push 0xde1
call [ glEnable@IAT ]
push [ ebp - 0x28 ]
push 0x408
call esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x18 ]
push ebx
push edi
xor edi edi
lea ebx [ eax + 0x1 ]
mov eax [ ebp - 0x1c ]
movd xmm0 [ edi + eax ]
cvtdq2ps xmm0 xmm0
movss [ ebp - 0x24 ] xmm0
movd xmm0 [ edi + eax + 0x4 ]
cvtdq2ps xmm0 xmm0
movss [ ebp - 0x20 ] xmm0
movd xmm0 [ edi + eax + 0x8 ]
cvtdq2ps xmm0 xmm0
movss [ ebp - 0x18 ] xmm0
call [ glPushMatrix@IAT ]
movss xmm2 [ esi + 0x8 ]
sub esp 0xc
movaps xmm0 xmm2
movaps xmm1 xmm2
mulss xmm0 [ r--data ]
mulss xmm1 [ ebp - 0x18 ]
addss xmm1 xmm0
cvtps2pd xmm0 xmm1
addsd xmm0 [ r--data ]
cvtpd2ps xmm0 xmm0
movss [ esp + 0x8 ] xmm0
movaps xmm0 xmm2
mulss xmm0 [ ebp - 0x20 ]
mulss xmm2 [ ebp - 0x24 ]
movss [ esp + 0x4 ] xmm0
movss [ esp ] xmm2
call [ glTranslatef@IAT ]
push [ esi + 0x38 ]
call [ glCallList@IAT ]
call [ glPopMatrix@IAT ]
add edi 0xc
sub ebx 0x1
jne r-xdata
mov esi [ glPolygonMode@IAT ]
pop edi
pop ebx
sub_405432
push esi
push 0x4100
mov esi ecx
call [ glClear@IAT ]
push 0xde1
call [ glDisable@IAT ]
push [ esi + 0x3c ]
call [ glCallList@IAT ]
mov ecx esi
call sub_40513f
mov ecx esi
call sub_4052cd
push [ esi + 0x68 ]
call [ SwapBuffers@IAT ]
pop esi
retn
sub_40546d
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
push [ ebp + 0x8 ]
push 0x0
push 0x0
call [ glViewport@IAT ]
push 0x1701
call [ glMatrixMode@IAT ]
call [ glLoadIdentity@IAT ]
mov eax [ ebp - 0x4 ]
sub esp 0x20
movd xmm1 [ ebp + 0x8 ]
cvtdq2ps xmm1 xmm1
movss xmm0 [ eax + 0x8 ]
mulss xmm0 [ r--data ]
movss xmm2 [ eax + 0x40 ]
addss xmm0 xmm2
subss xmm2 [ r--data ]
addss xmm0 [ r--data ]
cvtps2pd xmm0 xmm0
movsd [ esp + 0x18 ] xmm0
cvtps2pd xmm0 xmm2
movsd [ esp + 0x10 ] xmm0
movd xmm0 [ ebp + 0xc ]
cvtdq2ps xmm0 xmm0
divss xmm1 xmm0
cvtps2pd xmm0 xmm1
movsd [ esp + 0x8 ] xmm0
movsd xmm0 [ eax + 0x48 ]
movsd [ esp ] xmm0
call gluPerspective
push 0x1700
call [ glMatrixMode@IAT ]
call [ glLoadIdentity@IAT ]
mov ecx [ ebp - 0x4 ]
sub esp 0xc
movss xmm1 [ ecx + 0x8 ]
mulss xmm1 [ r--data ]
movss xmm0 [ ecx + 0x40 ]
xorps xmm0 [ r--data ]
movss [ esp + 0x8 ] xmm0
movss [ esp + 0x4 ] xmm1
movss [ esp ] xmm1
call [ glTranslatef@IAT ]
mov esp ebp
pop ebp
retn 0x8
sub_40554c
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0xc ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
push r--data
push edx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x48 ] edi
call sub_409e7b
mov ebx eax
pop ecx
pop ecx
test ebx ebx
jne r-xdata
push ebx
push 0x1
lea eax [ ebp - 0x14 ]
push 0xe
push eax
call sub_40cc54
mov eax 0x4d42
add esp 0x10
cmp [ ebp - 0x14 ] ax
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0xa ]
push esi
push ebx
add eax 0xfffffff2
push eax
lea eax [ ebp - 0x40 ]
push 0x1
push eax
call sub_40cc54
add esp 0x10
lea esi [ ebp - 0x40 ]
push 0xa
pop ecx
[ edi ] [ esi ]
mov esi [ ebp - 0x2c ]
test esi esi
jne r-xdata
push ebx
call sub_409f08
pop ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn 0x8
push esi
call sub_40ca6e
mov ecx [ ebp - 0x44 ]
push ebx
push esi
push 0x1
push eax
mov [ ecx + 0xc ] eax
call sub_40cc54
push ebx
call sub_409f08
mov eax [ ebp - 0x48 ]
add esp 0x18
pop esi
push [ ebp - 0x38 ]
call sub_40ca79
pop ecx
mov ecx eax
movzx eax [ ebp - 0x32 ]
imul eax [ ebp - 0x3c ]
add eax 0x7
cdq
and edx 0x7
lea esi [ edx + eax ]
sar esi 0x3
imul esi ecx
sub_405627
push edi
mov edi ecx
call sub_405009
sub esp 0x10
mov [ esp + 0xc ] 0x3f800000
mov [ esp + 0x8 ] 0x3dcccccd
mov [ esp + 0x4 ] 0x3dcccccd
mov [ esp ] 0x3dcccccd
call [ glClearColor@IAT ]
push 0x405
call [ glCullFace@IAT ]
push 0xb71
call [ glEnable@IAT ]
push 0x1102
push 0xc50
call [ glHint@IAT ]
push 0xde1
call [ glEnable@IAT ]
mov ecx edi
pop edi
jmp sub_405058
sub_405690
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
mov [ esi + 0x60 ] eax
call [ GetDC@IAT ]
mov [ esi + 0x68 ] eax
lea eax [ esi + 0x50 ]
push eax
push [ esi + 0x60 ]
call [ GetClientRect@IAT ]
movd xmm0 [ esi + 0x58 ]
cvtdq2ps xmm0 xmm0
mov eax [ esi + 0x5c ]
sub eax [ esi + 0x54 ]
cdq
sub eax edx
sar eax 0x1
divss xmm0 [ r--data ]
push ecx
push ecx
movss [ esi + 0x8 ] xmm0
movd xmm0 eax
cvtdq2pd xmm0 xmm0
movsd [ ebp - 0x8 ] xmm0
movsd xmm0 [ esi + 0x48 ]
mulsd xmm0 [ r--data ]
divsd xmm0 [ r--data ]
mulsd xmm0 [ r--data ]
movsd [ esp ] xmm0
call sub_40cd10
fdivr [ ebp - 0x8 ]
pop ecx
pop ecx
mov ecx esi
fstp [ esi + 0x40 ]
call sub_404f5e
push [ esi + 0x5c ]
mov ecx esi
push [ esi + 0x58 ]
call sub_40546d
mov ecx esi
call sub_405627
mov ecx esi
call sub_405432
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40573c
push esi
mov esi ecx
push 0x0
mov [ esi ] r--data
call sub_40ca11
push eax
call sub_409c5c
pop ecx
pop ecx
call sub_409c3b
push 0x5
pop ecx
cdq
idiv ecx
mov ecx esi
mov [ esi + 0x4 ] edx
call sub_40593c
mov ecx esi
call sub_405df6
mov eax esi
pop esi
retn
sub_40577b
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x514
push esi
call sub_405fd3
pop ecx
pop ecx
sub_4057a1
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
lea edi [ eax - 0x1 ]
mov [ ebp - 0x4 ] ecx
mov edx ebx
test edi edi
js r-xdata
mov al 0x1
lea ecx [ esi + 0x8 ]
xor al al
jmp r-xdata
inc edx
add ecx 0xc
cmp edx edi
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
imul eax [ ecx - 0x8 ] 0x5
mov esi [ ebp - 0x4 ]
add eax [ ecx - 0x4 ]
imul eax eax 0xa
sub eax [ ecx ]
cmp [ esi + eax * 4 - 0xe8 ] 0x1
mov esi [ ebp + 0x8 ]
je r-xdata
test edi edi
js r-xdata
add esi 0x8
cmp [ esi - 0x8 ] 0x5
jg r-xdata
cmp [ esi - 0x4 ] 0x1
jl r-xdata
cmp [ esi - 0x4 ] 0x5
jg r-xdata
cmp [ esi ] 0xfffffff6
jl r-xdata
cmp [ esi ] 0xffffffff
jg r-xdata
push 0xa
call [ Sleep@IAT ]
inc ebx
add esi 0xc
cmp ebx edi
jle r-xdata
cmp [ esi - 0x8 ] 0x1
jl r-xdata
sub_40582b
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
sub edi 0x1
mov [ ebp - 0x4 ] ecx
js r-xdata
mov esi [ ebp + 0x10 ]
push 0xc
push 0x0
push esi
call sub_407850
add esp 0xc
test edi edi
js r-xdata
mov esi [ ebp + 0x8 ]
add esi 0x8
mov al 0x1
mov ecx [ ebp + 0x8 ]
lea ebx [ edi + 0x1 ]
add ecx 0x4
inc ebx
add esi 0xc
cmp ebx edi
jle r-xdata
cmp eax 0x5
jg r-xdata
cmp eax 0x5
jle r-xdata
xor edx edx
inc edx
sub edx eax
cmp edx [ esi ]
jg r-xdata
mov eax [ esi - 0x8 ]
cmp eax 0x1
jl r-xdata
cmp [ esi - 0x4 ] 0x1
jl r-xdata
cmp [ ecx ] 0x1
jge r-xdata
push 0x5
pop edx
sub edx eax
cmp edx [ esi ]
jge r-xdata
mov [ esi ] edx
cmp [ esi - 0x4 ] 0x5
jg r-xdata
cmp [ ecx ] 0x5
jle r-xdata
xor eax eax
inc eax
sub eax [ ecx ]
cmp eax [ esi + 0x4 ]
jg r-xdata
cmp [ esi ] 0xffffffff
jg r-xdata
mov edx [ ecx + 0x4 ]
cmp edx 0xfffffff6
jge r-xdata
push 0x5
pop eax
sub eax [ ecx ]
cmp eax [ esi + 0x4 ]
jge r-xdata
mov [ esi + 0x4 ] eax
cmp [ esi ] 0xfffffff6
jl r-xdata
cmp edx 0xffffffff
jle r-xdata
push 0xfffffff6
pop eax
sub eax [ ecx ]
cmp eax [ esi + 0x8 ]
jle r-xdata
imul eax eax 0x5
add eax [ esi - 0x4 ]
imul eax eax 0xa
sub eax [ esi ]
cmp [ ecx + eax * 4 - 0xe8 ] 0x1
je r-xdata
add ecx 0xc
sub ebx 0x1
jne r-xdata
or edi 0xffffffff
sub edi edx
cmp edi [ esi + 0x8 ]
jge r-xdata
push 0xfffffff6
pop eax
sub eax edx
mov [ esi + 0x8 ] eax
jmp r-xdata
xor al al
jmp r-xdata
push 0xa
call [ Sleep@IAT ]
mov ecx [ ebp - 0x4 ]
mov eax [ ecx - 0x4 ]
cmp eax 0x1
jge r-xdata
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40593c
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] 0x5
push 0x3
mov [ ebp - 0x8 ] esi
pop eax
lea edi [ esi + 0x3f8 ]
and [ ebx ] 0x0
push 0xa
call [ Sleep@IAT ]
lea ebx [ ebx + 0xc ]
sub esi 0x1
jne r-xdata
add edi 0x30
sub [ ebp - 0x4 ] 0x1
push 0x3
pop eax
jne r-xdata
or [ edi + 0x4 ] 0xffffffff
lea ebx [ edi + 0x10 ]
mov [ edi - 0x4 ] eax
mov esi eax
mov [ edi ] eax
mov esi [ ebp - 0x8 ]
xor ecx ecx
xor eax eax
inc eax
or edx 0xffffffff
pop edi
mov [ esi + 0x400 ] ecx
mov [ esi + 0x404 ] eax
mov [ esi + 0x40c ] eax
mov [ esi + 0x410 ] eax
mov [ esi + 0x418 ] eax
mov [ esi + 0x41c ] ecx
mov [ esi + 0x430 ] ecx
mov [ esi + 0x434 ] eax
mov [ esi + 0x43c ] edx
mov [ esi + 0x440 ] ecx
mov [ esi + 0x448 ] eax
mov [ esi + 0x44c ] ecx
mov [ esi + 0x460 ] edx
mov [ esi + 0x464 ] eax
mov [ esi + 0x46c ] edx
mov [ esi + 0x470 ] ecx
mov [ esi + 0x478 ] eax
mov [ esi + 0x47c ] ecx
mov [ esi + 0x490 ] edx
mov [ esi + 0x494 ] eax
mov [ esi + 0x49c ] ecx
mov [ esi + 0x4a0 ] eax
mov [ esi + 0x4a8 ] eax
mov [ esi + 0x4ac ] ecx
mov [ esi + 0x4c0 ] edx
mov [ esi + 0x4c4 ] ecx
mov [ esi + 0x4cc ] eax
mov [ esi + 0x4d0 ] ecx
mov [ esi + 0x4d8 ] 0x2
mov [ esi + 0x4dc ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_405a50
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push 0xfffffff6
xor eax eax
mov [ ebp - 0x10 ] ecx
pop edx
mov [ ebp - 0x8 ] eax
lea ebx [ ecx + 0x30 ]
mov [ ebp - 0x4 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x5
mov dl 0x1
mov esi ebx
pop edi
xor dl dl
inc ecx
add eax 0x28
cmp ecx 0x4
jle r-xdata
xor ecx ecx
mov eax esi
test dl dl
mov edx [ ebp - 0x4 ]
je r-xdata
cmp [ eax ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc edx
sub ebx 0x4
mov [ ebp - 0x4 ] edx
cmp edx 0xffffffff
jle r-xdata
inc [ ebp - 0x8 ]
cmp edx 0xfffffffe
jg r-xdata
add esi 0xc8
sub edi 0x1
jne r-xdata
cmp eax 0x3
jg r-xdata
mov eax [ ebp - 0x10 ]
push 0x5
add eax 0xc
pop esi
or esi 0xffffffff
mov edi ebx
sub esi edx
and [ eax ] 0x0
add eax 0x28
sub ecx 0x1
jne r-xdata
sub esi 0x1
jne r-xdata
mov eax [ ecx - 0x4 ]
mov [ ecx ] eax
add ecx 0x28
sub edx 0x1
jne r-xdata
sub [ ebp - 0xc ] 0x1
jne r-xdata
push 0x5
pop ecx
dec edx
add ebx 0x4
push 0x5
pop edx
sub edi 0x4
sub esi 0x1
jne r-xdata
mov ecx edi
mov [ ebp - 0xc ] 0x5
mov edx [ ebp - 0x4 ]
sub_405b15
push esi
push edi
mov edi ecx
xor esi esi
pop edi
mov eax esi
pop esi
retn
inc esi
jmp r-xdata
push 0xffffffff
push 0x0
push 0x0
mov ecx edi
call sub_405ccf
test al al
je r-xdata
sub_405b34
push 0xa
pop eax
push ebx
push esi
add ecx 0xc
push edi
pop edi
pop esi
pop ebx
retn
inc ebx
add edi 0x28
cmp ebx 0x4
jle r-xdata
cmp [ edi ] 0x1
je r-xdata
inc edx
add esi 0xc8
cmp edx 0x4
jle r-xdata
xor ebx ebx
mov edi esi
add ecx 0x4
sub eax 0x1
jns r-xdata
xor edx edx
mov esi ecx
xor eax eax
sub_405b88
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x30
mov ebx ecx
call sub_40ca6e
mov edx [ ebp + 0x8 ]
lea esi [ ebx + 0x4e4 ]
mov edi eax
pop ecx
mov [ edx ] eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor esi esi
mov eax [ edx ]
mov ecx [ ebx + esi + 0x4f0 ]
add ecx [ ebx + 0x4e4 ]
push 0xa
mov [ eax + esi + 0xc ] ecx
mov eax [ edx ]
mov ecx [ ebx + esi + 0x4f4 ]
add ecx [ ebx + 0x4e8 ]
mov [ eax + esi + 0x10 ] ecx
mov ecx [ ebx + esi + 0x4f8 ]
mov eax [ edx ]
add ecx [ ebx + 0x4ec ]
mov [ eax + esi + 0x14 ] ecx
call [ Sleep@IAT ]
mov edx [ ebp + 0x8 ]
add esi 0xc
cmp esi 0x18
jle r-xdata
push 0x4
pop eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_405c00
push ebp
mov ebp esp
push esi
push edi
push 0x20
mov esi ecx
call sub_40ca6e
mov edi [ ebp + 0x8 ]
mov edx eax
pop ecx
xorps xmm2 xmm2
movaps xmm3 xmm2
mov [ edi ] edx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
cmp ecx 0x4
jne r-xdata
cmp ecx 0x4
je r-xdata
imul eax ecx 0x30
mov eax [ eax + esi + 0x3f4 ]
sub eax 0x3
movd xmm0 eax
cvtdq2ps xmm0 xmm0
addss xmm0 xmm2
movss [ edx ] xmm0
imul eax [ esi + 0x4 ] 0x30
mov eax [ eax + esi + 0x3f8 ]
sub eax 0x3
xor edx edx
movd xmm0 eax
mov eax [ edi ]
cvtdq2ps xmm0 xmm0
addss xmm0 xmm3
movss [ eax + 0x4 ] xmm0
movss xmm3 [ r--data ]
movss xmm2 [ r--data ]
mov eax [ esi + 0x4 ]
movaps xmm1 xmm3
lea eax [ edx + eax * 4 ]
imul eax eax 0xc
movd xmm0 [ eax + esi + 0x400 ]
mov eax [ edi ]
cvtdq2ps xmm0 xmm0
addss xmm0 xmm2
movss [ eax + edx * 8 + 0x8 ] xmm0
mov eax [ esi + 0x4 ]
mov ecx [ edi ]
lea eax [ edx + eax * 4 ]
imul eax eax 0xc
movd xmm0 [ eax + esi + 0x404 ]
cvtdq2ps xmm0 xmm0
subss xmm1 xmm0
movss [ ecx + edx * 8 + 0xc ] xmm1
inc edx
cmp edx 0x2
jle r-xdata
push 0x4
pop eax
pop edi
pop esi
pop ebp
retn 0x4
sub_405ccf
push ebp
mov ebp esp
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx ecx
push ebx
push esi
push edi
lea eax [ edx + 0x4e4 ]
mov [ ebp - 0x3c ] edx
mov esi eax
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0xc ]
lea edi [ ebp - 0x34 ]
lea ebx [ edx + 0x4f4 ]
push 0x3
movsd [ edi ] [ esi ]
mov [ ebp - 0x40 ] ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ ebp - 0x34 ]
lea esi [ ebp - 0x24 ]
add ecx [ ebp + 0x8 ]
mov edi ebx
add [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
add [ ebp - 0x2c ] eax
mov [ ebp - 0x34 ] ecx
pop ebx
mov ecx [ ebp - 0x3c ]
lea eax [ ebp - 0x34 ]
push 0x4
push eax
call sub_4057a1
mov ebx [ ebp - 0x40 ]
test al al
je r-xdata
mov ecx [ ebp - 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
mov edi [ ebp - 0x38 ]
lea esi [ ebp - 0x34 ]
mov al 0x1
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ edi - 0x4 ]
add eax ecx
mov [ esi - 0x4 ] eax
mov eax [ edi ]
add eax [ ebp - 0x30 ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0x2c ]
push 0xa
mov [ esi + 0x4 ] eax
call [ Sleep@IAT ]
lea edi [ edi + 0xc ]
lea esi [ esi + 0xc ]
sub ebx 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn 0xc
mov esi [ ebp - 0x38 ]
lea edi [ ebp - 0x34 ]
push 0x3
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea esi [ ebp - 0x24 ]
pop edi
mov eax [ ebx - 0x4 ]
add eax [ ebp - 0x34 ]
mov [ esi - 0x4 ] eax
mov eax [ ebx ]
add eax [ ebp - 0x30 ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0x2c ]
push 0xa
mov [ esi + 0x4 ] eax
call [ Sleep@IAT ]
lea ebx [ ebx + 0xc ]
lea esi [ esi + 0xc ]
sub edi 0x1
jne r-xdata
mov ebx [ ebp - 0x3c ]
lea esi [ ebp - 0x30 ]
push 0x4
pop edi
imul eax [ esi - 0x4 ] 0x5
push 0xa
add eax [ esi ]
imul eax eax 0xa
sub eax [ esi + 0x4 ]
mov [ ebx + eax * 4 - 0xe8 ] 0x1
call [ Sleep@IAT ]
lea esi [ esi + 0xc ]
sub edi 0x1
jne r-xdata
xor al al
sub_405e14
push esi
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
mov [ edi + 0x8 ] eax
call sub_409c3b
push 0x5
pop ecx
cdq
lea esi [ edi + 0x3f4 ]
idiv ecx
imul eax [ edi + 0x8 ] 0x30
push 0xc
mov [ edi + 0x4 ] edx
add edi 0x4e4
pop ecx
add esi eax
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_405e46
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
push esi
mov esi ecx
imul eax eax
mov ecx [ ebp + 0x8 ]
imul ecx ecx
mov [ ebp - 0x74 ] esi
add ecx eax
mov eax edx
imul eax edx
add ecx eax
cmp ecx 0x1
je r-xdata
push ebx
xor ebx ebx
test edx edx
je r-xdata
xor al al
jmp r-xdata
push edi
add esi 0x4e4
lea edi [ ebp - 0x34 ]
push 0x9
pop ecx
push 0x3
movsd [ edi ] [ esi ]
pop eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x74 ]
lea edi [ ebp - 0x28 ]
add esi 0x4f0
[ edi ] [ esi ]
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn 0xc
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
lea edi [ ebp - 0x24 ]
mov ebx eax
cmp [ esi + 0x504 ] ebx
jne r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
lea esi [ ebp - 0x20 ]
mov ebx eax
mov eax [ edi ]
mov ecx [ edi + 0x4 ]
imul eax esi
imul ecx esi
push 0xa
neg eax
mov [ edi + 0x4 ] eax
mov [ edi ] ecx
call [ Sleep@IAT ]
lea edi [ edi + 0xc ]
sub ebx 0x1
jne r-xdata
push 0x3
pop eax
xor al al
jmp r-xdata
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x64 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x3
lea edi [ ebp - 0x28 ]
pop ebx
mov eax [ esi ]
mov ecx [ esi - 0x8 ]
imul eax edi
imul ecx edi
push 0xa
neg eax
mov [ esi - 0x8 ] eax
mov [ esi ] ecx
call [ Sleep@IAT ]
lea esi [ esi + 0xc ]
sub ebx 0x1
jne r-xdata
pop ebx
mov eax [ ebp + ebx - 0x28 ]
add eax [ ebp - 0x34 ]
mov [ ebp + ebx - 0x58 ] eax
mov eax [ ebp + ebx - 0x24 ]
add eax [ ebp - 0x30 ]
mov [ ebp + ebx - 0x54 ] eax
mov eax [ ebp + ebx - 0x20 ]
add eax [ ebp - 0x2c ]
push 0xa
mov [ ebp + ebx - 0x50 ] eax
call [ Sleep@IAT ]
add ebx 0xc
cmp ebx 0x18
jle r-xdata
mov ebx [ ebp - 0x74 ]
lea eax [ ebp - 0x70 ]
push eax
push 0x4
lea eax [ ebp - 0x64 ]
mov ecx ebx
push eax
call sub_40582b
test al al
je r-xdata
mov eax [ edi ]
mov ecx [ edi + 0x4 ]
imul eax esi
imul ecx esi
push 0xa
neg eax
mov [ edi + 0x4 ] eax
mov [ edi ] ecx
call [ Sleep@IAT ]
lea edi [ edi + 0xc ]
sub ebx 0x1
jne r-xdata
xor al al
push 0x9
pop ecx
push [ ebp - 0x68 ]
lea esi [ ebp - 0x28 ]
push [ ebp - 0x6c ]
lea edi [ ebx + 0x4f0 ]
push [ ebp - 0x70 ]
[ edi ] [ esi ]
mov ecx ebx
call sub_405ccf
mov al 0x1
jmp r-xdata
pop edi
sub_405ff4
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0xc
push esi
call sub_405fd3
pop ecx
pop ecx
sub_40603d
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax

sub_406071
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax

sub_4060a8
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax

sub_4060df
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
lea edx [ ecx + 0x18 ]
add edx eax
movzx eax [ ecx + 0x6 ]
imul esi eax 0x28
add esi edx
cmp edx esi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
add edx 0x28
cmp edx esi
jne r-xdata
mov eax [ edx + 0x8 ]
add eax [ edx + 0xc ]
cmp ecx eax
jb r-xdata
cmp ecx [ edx + 0xc ]
jb r-xdata
mov eax edx
jmp r-xdata
pop esi
pop ebp
retn
sub_406123
call sub_4069d3
test eax eax
jne r-xdata
mov eax [ fs : 0x18 ]
push esi
mov esi rw-data
mov edx [ eax + 0x4 ]
jmp r-xdata
xor al al
retn
xor eax eax
mov ecx edx
[ esi ] ecx
test eax eax
jne r-xdata
cmp edx eax
je r-xdata
xor al al
pop esi
retn
mov al 0x1
pop esi
retn
sub_406158
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
call sub_40682e
call sub_407b4a
test al al
jne r-xdata
mov [ rw-data ] 0x1
call sub_40d9b9
test al al
jne r-xdata
xor al al
pop ebp
retn
mov al 0x1
pop ebp
retn
push 0x0
call sub_407b78
pop ecx
jmp r-xdata
sub_406191
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_4069d3
test eax eax
je r-xdata
cmp esi 0x1
jne r-xdata
mov eax [ rw-data ]
lea esi [ ebp - 0xc ]
push edi
and eax 0x1f
mov edi rw-data
push 0x20
pop ecx
sub ecx eax
or eax 0xffffffff
ror eax cl
xor eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi rw-data
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
lea esi [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov al 0x1
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
test esi esi
jne r-xdata
push 0x5
call sub_4069df
int3
push rw-data
call sub_40d833
pop ecx
test eax eax
je r-xdata
push rw-data
call sub_40d833
neg eax
pop ecx
sbb al al
inc al
jmp r-xdata
xor al al
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_406228
push 0x8
push r--data
call sub_406590
and [ ebp - 0x4 ] 0x0
mov eax 0x5a4d
cmp [ __dos_header ] ax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor al al
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx __dos_header
sub eax ecx
push eax
push ecx
call sub_4060df
pop ecx
pop ecx
test eax eax
je r-xdata
test [ eax + 0x24 ] 0x80000000
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov al 0x1
jmp r-xdata
call sub_4065d6
retn
sub_4062d2
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_40d9cb
push [ ebp + 0x8 ]
call sub_407b78
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
sub_4062fa
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ rw-data ]
and ecx 0x1f
push [ ebp + 0x8 ]
ror eax cl
cmp eax 0xffffffff
jne r-xdata
push rw-data
call sub_40d870
pop ecx
call sub_40d800
jmp r-xdata
neg eax
pop ecx
sbb eax eax
not eax
and eax [ ebp + 0x8 ]
pop ebp
retn
sub_406372
push ebp
mov ebp esp
sub esp 0x324
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x324 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov [ eax + rw-data ] 0x2
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push 0x4
pop eax
shl eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push r--data
call sub_40634a
mov esp ebp
pop ebp
retn
push 0x2
pop ecx
int 0x29
sub_406479
push ebp
mov ebp esp
sub esp 0x31c
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x31c ]
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
mov [ eax + rw-data ] ecx
push r--data
call sub_40634a
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
int 0x29
sub_406549
push ebp
mov ebp esp
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40ca6e
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_40d9f1
pop ecx
test eax eax
jne r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
call sub_406c9c
call sub_406cb9
sub_406590
push sub_4079f0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax

sub_4065eb
push esi
push 0x2
call sub_40da8d
call sub_406d82
push eax
call sub_40dc47
call sub_40de49
mov esi eax
call sub_406d7f
push 0x1
mov [ esi ] eax
call sub_406191
add esp 0xc
pop esi
test al al
je r-xdata
push 0x7
call sub_4069df
int3
fnclex
call sub_406df1
push sub_406e1c
call sub_406335
call sub_4069cf
push eax
call sub_40d297
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_406d88
call sub_406dd9
test eax eax
je r-xdata
call sub_406db5
call sub_406db5
call sub_406d94
call sub_406d7f
push eax
call sub_40ddb2
pop ecx
call sub_40d8c0
test al al
je r-xdata
push sub_406d7f
call sub_40db12
pop ecx
call sub_406d7f
xor eax eax
retn
call j_sub_40d2a2
sub_4066a9
push 0x14
push r--data
call sub_406590
push 0x1
call sub_406158
pop ecx
test al al
jne r-xdata
xor bl bl
mov [ ebp - 0x19 ] bl
and [ ebp - 0x4 ] 0x0
call sub_406123
mov [ ebp - 0x24 ] al
mov eax [ rw-data ]
xor ecx ecx
inc ecx
cmp eax ecx
je r-xdata
push 0x7
call sub_4069df
test eax eax
jne r-xdata
mov bl cl
mov [ ebp - 0x19 ] bl
mov [ rw-data ] ecx
push r--data
push r--data
call sub_40dbd6
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_406deb
mov esi eax
cmp [ esi ] edi
je r-xdata
push esi
call sub_406228
pop ecx
test al al
je r-xdata
push r--data
push r--data
call sub_40db7a
pop ecx
pop ecx
mov [ rw-data ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0xff
jmp r-xdata
push edi
call sub_407bd6
pop ecx
call sub_406afa
movzx eax ax
push eax
call sub_40db27
push eax
push edi
push __dos_header
call sub_402e18
mov esi eax
push edi
call sub_407c72
pop ecx
call sub_406b2d
test al al
jne r-xdata
push esi
call sub_406228
pop ecx
test al al
je r-xdata
push edi
push 0x2
push edi
mov esi [ esi ]
mov ecx esi
call j_sub_406db5
call esi
push [ ebp - 0x24 ]
call sub_4062b5
pop ecx
call sub_406de5
mov esi eax
xor edi edi
cmp [ esi ] edi
je r-xdata
call sub_4065d6
retn
test bl bl
jne r-xdata
push esi
call sub_409c25
push [ esi ]
call sub_409bed
pop ecx
push edi
push 0x1
call sub_4062d2
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
mov eax esi
jmp r-xdata
call sub_409bc8
sub_4067f0
mov esp [ ebp - 0x18 ]
call sub_406b2d
test al al
jne r-xdata
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
push [ ebp - 0x20 ]
call sub_409bd7
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_4065d6
retn
call sub_409bb9
sub_40682e
push ebp
mov ebp esp
and [ rw-data ] 0x0
sub esp 0x2c
push ebx
xor ebx ebx
inc ebx
or [ rw-data ] ebx
push 0xa
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
and [ ebp - 0x14 ] 0x0
xor eax eax
or [ rw-data ] 0x2
xor ecx ecx
push esi
push edi
mov [ rw-data ] ebx
lea edi [ ebp - 0x2c ]
push ebx
cpuid
mov esi ebx
pop ebx
mov [ edi ] eax
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
xor ecx 0x49656e69
mov eax [ ebp - 0x24 ]
xor eax 0x6c65746e
or ecx eax
mov eax [ ebp - 0x28 ]
xor eax 0x756e6547
or ecx eax
neg ecx
push 0x1
pop eax
sbb cl cl
push 0x0
add cl 0x1
pop ecx
push ebx
cpuid
mov esi ebx
pop ebx
mov [ edi ] eax
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
je r-xdata
mov edi [ rw-data ]
mov eax [ ebp - 0x2c ]
and eax 0xfff3ff0
cmp eax 0x106c0
je r-xdata
pop edi
pop esi
test eax 0x100000
je r-xdata
push 0x7
pop eax
xor ecx ecx
push ebx
cpuid
mov esi ebx
pop ebx
lea ebx [ ebp - 0x2c ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] edx
mov eax [ ebp - 0x28 ]
test eax 0x200
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
je r-xdata
mov edi [ rw-data ]
or edi 0x1
mov [ rw-data ] edi
jmp r-xdata
cmp eax 0x20660
je r-xdata
or [ rw-data ] 0x4
mov [ rw-data ] 0x2
test eax 0x8000000
je r-xdata
or edi 0x2
mov [ rw-data ] edi
cmp [ ebp - 0xc ] 0x7
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x18 ] eax
jl r-xdata
cmp eax 0x20670
je r-xdata
test eax 0x10000000
je r-xdata
cmp eax 0x30650
je r-xdata
xor ecx ecx
xgetbv
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
and eax 0x6
xor ecx ecx
cmp eax 0x6
jne r-xdata
cmp eax 0x30660
je r-xdata
test ecx ecx
jne r-xdata
cmp eax 0x30670
jne r-xdata
mov eax [ rw-data ]
or eax 0x8
mov [ rw-data ] 0x3
test [ ebp - 0x14 ] 0x20
mov [ rw-data ] eax
je r-xdata
or eax 0x20
mov [ rw-data ] 0x5
mov [ rw-data ] eax
sub_4069df
push ebp
mov ebp esp
sub esp 0x324
push ebx
push esi
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor esi esi
lea eax [ ebp - 0x324 ]
push 0x2cc
push esi
push eax
mov [ rw-data ] esi
call sub_407850
add esp 0xc
mov [ ebp - 0x274 ] eax
mov [ ebp - 0x278 ] ecx
mov [ ebp - 0x27c ] edx
mov [ ebp - 0x280 ] ebx
mov [ ebp - 0x284 ] esi
mov [ ebp - 0x288 ] edi
mov [ ebp - 0x25c ] ss
mov [ ebp - 0x268 ] cs
mov [ ebp - 0x28c ] ds
mov [ ebp - 0x290 ] es
mov [ ebp - 0x294 ] fs
mov [ ebp - 0x298 ] gs
pushfd
pop [ ebp - 0x264 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x26c ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x324 ] 0x10001
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x270 ] eax
lea eax [ ebp - 0x58 ]
push esi
push eax
call sub_407850
mov eax [ ebp + 0x4 ]
add esp 0xc
mov [ ebp - 0x58 ] 0x40000015
mov [ ebp - 0x54 ] 0x1
mov [ ebp - 0x4c ] eax
call [ IsDebuggerPresent@IAT ]
push esi
lea ebx [ eax - 0x1 ]
neg ebx
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x324 ]
sbb bl bl
mov [ ebp - 0x4 ] eax
inc bl
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
int 0x29
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bl
neg eax
sbb eax eax
and [ rw-data ] eax
sub_406afa
push ebp
mov ebp esp
sub esp 0x44
push 0x44
lea eax [ ebp - 0x44 ]
push 0x0
push eax
call sub_407850
add esp 0xc
lea eax [ ebp - 0x44 ]
push eax
call [ GetStartupInfoW@IAT ]
test [ ebp - 0x18 ] 0x1
je r-xdata
push 0xa
pop eax
movzx eax [ ebp - 0x14 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_406b2d
push 0x0
call [ GetModuleHandleW@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
mov eax 0x5a4d
cmp [ ecx ] ax
jne r-xdata
xor al al
retn
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
jne r-xdata
cmp [ eax + 0x74 ] 0xe
jbe r-xdata
cmp [ eax + 0xe8 ] 0x0
setne al
retn
sub_406b7d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_40de54
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
je r-xdata
sub_406c32
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
push eax
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_407d2d
pop ecx
pop ecx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_406c6f
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
push eax
call sub_407d90
test [ ebp + 0x8 ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0xc
push esi
call sub_405fd3
pop ecx
pop ecx
sub_406ce3
push ebp
mov ebp esp
sub esp 0x14
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
mov eax [ rw-data ]
push esi
push edi
mov edi 0xbb40e64e
mov esi 0xffff0000
cmp eax edi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
xor [ ebp - 0x4 ] eax
call [ GetCurrentProcessId@IAT ]
xor [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor ecx [ ebp - 0x14 ]
xor ecx [ ebp - 0x4 ]
xor ecx eax
cmp ecx edi
jne r-xdata
test esi eax
je r-xdata
test esi ecx
jne r-xdata
mov ecx 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] ecx
not ecx
mov [ rw-data ] ecx
mov eax ecx
or eax 0x4711
shl eax 0x10
or ecx eax
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_406df1
push ebx
push esi
mov esi r--data
mov ebx r--data
cmp esi ebx
jae r-xdata
pop esi
pop ebx
retn
push edi
add esi 0x4
cmp esi ebx
jb r-xdata
mov ecx edi
call j_sub_406db5
call edi
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
sub_406e1c
push ebx
push esi
mov esi r--data
mov ebx r--data
cmp esi ebx
jae r-xdata
pop esi
pop ebx
retn
push edi
add esi 0x4
cmp esi ebx
jb r-xdata
mov ecx edi
call j_sub_406db5
call edi
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
sub_406f00
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x20
jb r-xdata
cmp edi eax
jb r-xdata
and ecx 0x1f
je r-xdata
cmp ecx 0x80
jae r-xdata
lea esi [ ecx + esi ]
lea edi [ ecx + edi ]
cmp ecx 0x20
jb r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax ecx
shr ecx 0x2
je r-xdata
bt [ rw-data ] 0x1
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
test ecx 0xfffffffc
je r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
add edi 0x4
add esi 0x4
sub ecx 0x1
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
[ edi ] [ esi ]
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test ecx ecx
je r-xdata
jmp r-xdata
test ecx ecx
je r-xdata
sub edi 0x4
sub esi 0x4
mov eax [ esi ]
mov [ edi ] eax
sub ecx 0x4
test ecx 0xfffffffc
jne r-xdata
test edi 0xf
je r-xdata
test edi 0x3
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov edx ecx
shr edx 0x5
test edx edx
je r-xdata
test edi 0x3
je r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
sub edi 0x1
sub esi 0x1
mov al [ esi ]
mov [ edi ] al
sub ecx 0x1
jne r-xdata
cmp ecx 0x80
jb r-xdata
dec ecx
dec esi
dec edi
mov al [ esi ]
mov [ edi ] al
test edi 0xf
jne r-xdata
cmp ecx 0x20
jb r-xdata
mov edx edi
and edx 0x3
sub ecx edx
lea esp [ esp ]
lea ecx [ ecx ]
test edi 0x3
jne r-xdata
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
lea ebx [ ebx ]
mov edx ecx
cmp ecx 0x20
jb r-xdata
mov al [ esi ]
mov [ edi ] al
dec ecx
add esi 0x1
add edi 0x1
test edi 0x3
jne r-xdata
cmp ecx 0x20
jb r-xdata
sub esi 0x80
sub edi 0x80
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu xmm2 [ esi + 0x20 ]
movdqu xmm3 [ esi + 0x30 ]
movdqu xmm4 [ esi + 0x40 ]
movdqu xmm5 [ esi + 0x50 ]
movdqu xmm6 [ esi + 0x60 ]
movdqu xmm7 [ esi + 0x70 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
movdqu [ edi + 0x20 ] xmm2
movdqu [ edi + 0x30 ] xmm3
movdqu [ edi + 0x40 ] xmm4
movdqu [ edi + 0x50 ] xmm5
movdqu [ edi + 0x60 ] xmm6
movdqu [ edi + 0x70 ] xmm7
sub ecx 0x80
test ecx 0xffffff80
jne r-xdata
mov edx ecx
shr ecx 0x2
and edx 0x3
sub esi 0x4
sub edi 0x4
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + r-xdata ]
mov al [ esi - 0x1 ]
mov [ edi - 0x1 ] al
dec esi
dec edi
sub edx 0x1
jne r-xdata
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
lea esi [ esi + 0x20 ]
lea edi [ edi + 0x20 ]
dec edx
jne r-xdata
shr ecx 0x2
[ edi ] [ esi ]
and edx 0x3
jmp [ edx * 4 + r-xdata ]
sub esi 0x20
sub edi 0x20
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
sub ecx 0x20
test ecx 0xffffffe0
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
lea esp [ esp ]
mov edi edi
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov edi edi
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + r-xdata ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_407474
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
lea ecx [ ebp - 0x18 ]
and [ ebp - 0x18 ] 0x0
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_4076b0
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_407f70
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov esp ebp
pop ebp
retn
sub_4074d4
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x34 ] sub_407775
mov eax [ rw-data ]
lea ecx [ ebp - 0x38 ]
xor eax ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x20 ] eax
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x1c ] esp
mov [ ebp - 0x18 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x8 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
call sub_407e75
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call [ r--data ]
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x4 ]
pop ecx
pop ecx
and [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x38 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
sub_4075b1
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0xc ]
mov edx ecx
mov ebx [ edi + 0x10 ]
mov [ ebp - 0x4 ] ecx
test esi esi
js r-xdata
mov eax [ ebp + 0x14 ]
inc ecx
mov [ eax ] ecx
mov eax [ ebp + 0x18 ]
mov [ eax ] edx
cmp edx [ edi + 0xc ]
ja r-xdata
imul eax ecx 0x14
add eax 0x8
add eax ebx
call sub_40de54
cmp ecx edx
ja r-xdata
mov edi [ ebp + 0x10 ]
sub eax 0x14
dec ecx
cmp [ eax - 0x4 ] edi
mov edi [ ebp + 0x8 ]
jge r-xdata
imul eax ecx 0x14
pop edi
pop esi
add eax ebx
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0xffffffff
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi [ eax ]
mov edi [ ebp + 0x8 ]
jle r-xdata
test esi esi
jns r-xdata
mov edx [ ebp - 0x4 ]
dec esi
mov [ ebp - 0x4 ] ecx
cmp ecx 0xffffffff
je r-xdata
sub_407629
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_40765b
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call [ RtlUnwind@IAT ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4076b0
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_405fe1
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_408b92
add esp 0x20
pop esi
pop ebp
retn
sub_4076e1
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
call sub_407e75
mov ecx [ eax + 0x24 ]
mov [ esi + 0x4 ] ecx
call sub_407e75
mov [ eax + 0x24 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_407705
push ebp
mov ebp esp
push esi
call sub_407e75
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x24 ]
jne r-xdata
call sub_407e75
mov ecx [ eax + 0x24 ]
jmp r-xdata
call sub_407e75
lea ecx [ eax + 0x24 ]
mov eax [ esi + 0x4 ]
mov [ ecx ] eax
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp esi eax
je r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx eax
call sub_40de54
pop esi
pop ebp
retn
sub_40774f
push ebp
mov ebp esp
call sub_407e75
mov eax [ eax + 0x24 ]
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_407775
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_405fe1
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_408b92
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_4074d4
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40765b
pop ebx
mov esp ebp
pop ebp
retn
sub_407814
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_408b92
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_407850
mov ecx [ esp + 0xc ]
movzx eax [ esp + 0x8 ]
mov edx edi
mov edi [ esp + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x4 ]
mov edi edx
retn
imul eax eax 0x1010101
cmp ecx 0x20
jle r-xdata
test ecx 0x3
je r-xdata
cmp ecx 0x80
jl r-xdata
test ecx 0x4
je r-xdata
mov [ edi ] al
inc edi
sub ecx 0x1
test ecx 0x3
jne r-xdata
bt [ rw-data ] 0x1
jae r-xdata
bt [ rw-data ] 0x1
jae r-xdata
test ecx 0xfffffff8
je r-xdata
mov [ edi ] eax
add edi 0x4
sub ecx 0x4
movd xmm0 eax
pshufd xmm0 xmm0 0x0
bt [ rw-data ] 0x1
jae r-xdata
[ edi ]
mov eax [ esp + 0x4 ]
mov edi edx
retn
lea esp [ esp ]
lea ebx [ ebx ]
lea edi [ ecx + edi - 0x20 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm0
mov eax [ esp + 0x4 ]
mov edi edx
retn
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm0
add edi 0x20
sub ecx 0x20
cmp ecx 0x20
jae r-xdata
movd xmm0 eax
pshufd xmm0 xmm0 0x0
add ecx edi
movups [ edi ] xmm0
add edi 0x10
and edi 0xfffffff0
sub ecx edi
cmp ecx 0x80
jle r-xdata
mov [ edi ] eax
mov [ edi + 0x4 ] eax
add edi 0x8
sub ecx 0x8
test ecx 0xfffffff8
jne r-xdata
test ecx 0x1f
je r-xdata
lea esp [ esp ]
lea esp [ esp ]
nop
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
sub ecx 0x80
test ecx 0xffffff00
jne r-xdata
jmp r-xdata
cmp ecx 0x20
jb r-xdata
sub_4079b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
add ecx edi
xor ecx [ eax + edi ]
pop edi
pop esi
pop ebp
jmp sub_405fe1
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_405fe1
sub_4079f0
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov eax [ ebx + 0x8 ]
lea esi [ ebx + 0x10 ]
xor eax [ rw-data ]
push esi
push eax
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x8 ] eax
call sub_4079b0
mov edi [ ebp + 0x10 ]
push edi
call sub_406db5
mov eax [ ebp + 0x8 ]
add esp 0xc
test [ eax + 0x4 ] 0x66
jne r-xdata
cmp [ ebx + 0xc ] 0xfffffffe
je r-xdata
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] edi
mov edi [ ebx + 0xc ]
mov [ ebx - 0x4 ] eax
cmp edi 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push esi
mov ecx ebx
mov edx 0xfffffffe
call sub_408e67
mov ecx [ ebp - 0x8 ]
lea eax [ edi + 0x2 ]
lea eax [ edi + eax * 2 ]
mov ebx [ ecx + eax * 4 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x14 ] eax
test ecx ecx
je r-xdata
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_408e1e
mov cl 0x1
mov [ ebp - 0x1 ] cl
test eax eax
js r-xdata
test cl cl
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jle r-xdata
jmp r-xdata
push esi
push [ ebp - 0x8 ]
call sub_4079b0
add esp 0x8
mov edi ebx
cmp ebx 0xfffffffe
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_408e4e
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] edi
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
push esi
push [ ebp - 0x8 ]
mov [ eax + 0xc ] ebx
call sub_4079b0
mov ecx [ ebp - 0x14 ]
add esp 0x8
mov edx esi
mov ecx [ ecx + 0x8 ]
call sub_408e35
int3
jmp r-xdata
push r--data
call sub_41a8e0
add esp 0x4
test eax eax
je r-xdata
push rw-data
push esi
mov edx edi
mov ecx eax
call sub_408e67
mov eax [ ebp + 0xc ]
mov esi [ r--data ]
mov ecx esi
push 0x1
push [ ebp + 0x8 ]
call j_sub_406db5
call esi
mov esi [ ebp - 0x10 ]
add esp 0x8
sub_407b4a
call sub_4092b4
call sub_40925e
call sub_408e7e
test al al
jne r-xdata
call sub_407f15
test al al
jne r-xdata
xor al al
retn
call sub_407d0e
mov al 0x1
retn
call sub_408eba
jmp r-xdata
sub_407b78
push ebp
mov ebp esp
call sub_407d21
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
call sub_407f48
call sub_408eba
push 0x0
call sub_409282
pop ecx
sub_407b9c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
push esi
push edi
push [ ebp + 0x8 ]
call [ GetModuleFileNameW@IAT ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn
test eax eax
jne r-xdata
cmp eax esi
jne r-xdata
xor ecx ecx
mov [ edi ] cx
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ edi + esi * 2 - 0x2 ] ax
sub_407bd6
push ebp
mov ebp esp
sub esp 0x24c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20c ]
push 0x104
push ecx
push eax
call sub_407b9c
add esp 0xc
cmp [ rw-data ] 0x5
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405fe1
mov esp ebp
pop ebp
retn
push edi
push 0x2000
push 0x0
mov edi rw-data
push edi
call sub_40119b
add esp 0xc
test al al
je r-xdata
pop edi
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_4010a7
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x21c ]
push eax
call sub_4010df
lea eax [ ebp - 0x24c ]
push eax
push 0x4
push 0x0
push 0x0
push r--data
push edi
call sub_4011d7
add esp 0x28
sub_407c72
push ebp
mov ebp esp
sub esp 0x24c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20c ]
push 0x104
push ecx
push eax
call sub_407b9c
add esp 0xc
cmp [ rw-data ] 0x5
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405fe1
mov esp ebp
pop ebp
retn
push edi
push 0x2000
push 0x0
mov edi rw-data
push edi
call sub_40119b
add esp 0xc
test al al
je r-xdata
pop edi
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_4010a7
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x21c ]
push eax
call sub_4010df
lea eax [ ebp - 0x24c ]
push eax
push 0x4
push 0x0
push 0x0
push r--data
push edi
call sub_4011d7
add esp 0x28
sub_407d2d
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ edi ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] 0x0
mov ecx [ edi ]
test ecx ecx
je r-xdata
lea edx [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ebx
push esi
lea ebx [ ecx + 0x1 ]
push ebx
call sub_40ca6e
mov esi eax
pop ecx
test esi esi
je r-xdata
push esi
call j_sub_40df49#3
pop ecx
pop esi
pop ebx
jmp r-xdata
push [ edi ]
push ebx
push esi
call sub_40deef
mov eax [ ebp + 0xc ]
mov ecx esi
add esp 0xc
xor esi esi
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop edi
pop ebp
retn
sub_407d90
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
pop esi
pop ebp
retn
push [ esi ]
call j_sub_40df49#3
pop ecx
sub_407daf
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] edi
test edi edi
je r-xdata
test [ edi ] 0x10
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test [ edi ] 0x8
je r-xdata
mov ecx [ ebx ]
sub ecx 0x4
push ecx
mov eax [ ecx ]
mov esi [ eax + 0x20 ]
mov ecx esi
mov edi [ eax + 0x18 ]
call j_sub_406db5
call esi
mov [ ebp - 0xc ] 0x1994000
sub_407e1d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
cmp eax ecx
jne r-xdata
add ecx 0x5
add eax 0x5
xor eax eax
pop ebp
retn
sbb eax eax
or eax 0x1
pop ebp
retn
test dl dl
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
jmp r-xdata
sub_407e83
cmp [ rw-data ] 0xffffffff
jne r-xdata
push ebx
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_4091a1
mov ebx eax
pop ecx
cmp ebx 0xffffffff
je r-xdata
xor eax eax
retn
xor ebx ebx
jmp r-xdata
test ebx ebx
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax ebx
pop ebx
retn
push 0xffffffff
push [ rw-data ]
call sub_4091db
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push 0x28
push 0x1
call sub_40e014
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
xor ebx ebx
push ebx
push [ rw-data ]
call sub_4091db
pop ecx
pop ecx
jmp r-xdata
push esi
push [ rw-data ]
call sub_4091db
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_40df49
pop ecx
pop esi
mov ebx esi
xor esi esi
sub_407f15
push sub_407e59
call sub_40912d
mov [ rw-data ] eax
pop ecx
cmp eax 0xffffffff
jne r-xdata
push rw-data
push eax
call sub_4091db
pop ecx
pop ecx
test eax eax
jne r-xdata
xor al al
retn
mov al 0x1
retn
call sub_407f48
jmp r-xdata
sub_407f70
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_4093ec
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_4093ec
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_407fbc
push 0x8
push r--data
call sub_406590
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_4065d6
retn
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
test [ ecx ] 0x10
je r-xdata
and [ ebp - 0x4 ] 0x0
push edx
push [ eax + 0x18 ]
call sub_408895
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
mov eax [ eax + 0x18 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ecx
mov esi [ eax + 0x8 ]
mov ecx esi
call j_sub_406db5
call esi
sub_408083
push 0x38
push r--data
call sub_406590
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
and [ ebp - 0x3c ] 0x0
mov ebx [ ebp + 0xc ]
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x2c ] eax
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_4076e1
pop ecx
pop ecx
mov [ ebp - 0x30 ] eax
call sub_407e75
mov eax [ eax + 0x10 ]
mov [ ebp - 0x34 ] eax
call sub_407e75
mov eax [ eax + 0x14 ]
mov [ ebp - 0x38 ] eax
call sub_407e75
mov [ eax + 0x10 ] edi
call sub_407e75
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x14 ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
call sub_407474
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x40 ] 0x0
call sub_4081be
mov eax ebx
call sub_4065d6
retn
sub_408117
mov esp [ ebp - 0x18 ]
call sub_407e75
and [ eax + 0x20 ] 0x0
mov edx [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
cmp [ edx + 0x4 ] 0x80
jg r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ ebx + 0x8 ]
jmp r-xdata
push eax
push edx
push 0x0
push ebx
call sub_408aca
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x40 ] 0x0
call sub_4081be
mov eax ebx
call sub_4065d6
retn
imul ebx ecx 0x14
mov [ ebp - 0x24 ] ebx
cmp eax [ ebx + edi + 0x4 ]
mov ebx [ ebp + 0xc ]
jle r-xdata
mov [ ebp - 0x20 ] eax
mov edi [ edx + 0x10 ]
xor ecx ecx
mov [ ebp - 0x28 ] ecx
cmp [ edx + 0xc ] ecx
jbe r-xdata
inc ecx
mov [ ebp - 0x28 ] ecx
cmp ecx [ edx + 0xc ]
jb r-xdata
mov ebx [ ebp - 0x24 ]
cmp eax [ ebx + edi + 0x8 ]
mov ebx [ ebp + 0xc ]
jg r-xdata
imul eax ecx 0x14
mov eax [ eax + edi + 0x4 ]
inc eax
mov [ ebp - 0x20 ] eax
mov ecx [ edx + 0x8 ]
mov eax [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
sub_4081be
mov eax [ ebp - 0x2c ]
mov [ ebx - 0x4 ] eax
push [ ebp - 0x30 ]
call sub_407705
pop ecx
call sub_407e75
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x10 ] ecx
call sub_407e75
mov ecx [ ebp - 0x38 ]
mov [ eax + 0x14 ] ecx
cmp [ edi ] 0xe06d7363
jne r-xdata
mov ebx [ ebp - 0x1c ]
cmp [ edi + 0x10 ] 0x3
jne r-xdata
cmp [ edi + 0x14 ] 0x19930520
je r-xdata
mov ebx [ ebp - 0x1c ]
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
cmp [ edi + 0x14 ] 0x19930521
je r-xdata
retn
test ebx ebx
je r-xdata
cmp [ edi + 0x14 ] 0x19930522
jne r-xdata
push [ edi + 0x18 ]
call sub_40774f
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x40 ] 0x0
setne al
movzx eax al
push eax
push edi
call sub_407fbc
pop ecx
pop ecx
jmp r-xdata
sub_408279
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push edi
push [ ebp + 0x8 ]
call sub_4088c1
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop ebp
retn
push edi
push eax
call sub_407629
call sub_40765b
push esi
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_408aca
mov eax [ esi + 0x4 ]
inc eax
push 0x100
push [ ebp + 0x28 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0x1c ]
push [ eax + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_408083
add esp 0x2c
pop esi
test eax eax
je r-xdata
sub_4082f4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_407e75
xor ecx ecx
inc ecx
mov [ eax + 0x20 ] ecx
mov eax ecx
pop ebp
retn
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_40833e
push ebp
mov ebp esp
sub esp 0x44
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x1 ] 0x0
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ ebx + 0x8 ]
jmp r-xdata
call sub_40de54
cmp eax [ edi + 0x4 ]
jge r-xdata
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0xe06d7363
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_407e75
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push eax
push edi
push [ ebp + 0x14 ]
push ecx
push ebx
push esi
call sub_40869f
add esp 0x20
cmp [ esi ] 0xe06d7363
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_407e75
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
call sub_407e75
mov esi [ eax + 0x10 ]
call sub_407e75
mov [ ebp - 0x24 ] 0x1
mov eax [ eax + 0x14 ]
mov [ ebp - 0xc ] eax
test esi esi
je r-xdata
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x14 ]
push ecx
push eax
push [ ebp + 0x20 ]
push edi
call sub_4075b1
mov edx [ ebp - 0x14 ]
add esp 0x14
cmp edx [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
call sub_407e75
cmp [ eax + 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_407fbc
pop ecx
pop ecx
lea ecx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_407e75
mov eax [ eax + 0x1c ]
mov [ ebp - 0x20 ] eax
call sub_407e75
push [ ebp - 0x20 ]
push esi
and [ eax + 0x1c ] 0x0
call sub_4087ba
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc edx
add ecx 0x14
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x20 ] ecx
cmp edx [ ebp - 0x2c ]
jb r-xdata
cmp eax [ ecx - 0xc ]
jg r-xdata
push [ ebp - 0x20 ]
call sub_408856
pop ecx
test al al
je r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
lea edi [ ecx - 0x10 ]
mov [ ebp - 0x38 ] edi
mov edi [ ebp + 0x18 ]
cmp [ ecx - 0x10 ] eax
jg r-xdata
mov ebx [ ecx ]
mov [ ebp - 0x10 ] ebx
mov ebx [ ecx - 0x4 ]
test ebx ebx
mov [ ebp - 0x18 ] ebx
mov ebx [ ebp + 0xc ]
jle r-xdata
jmp r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
test [ edi + 0x20 ] 0x4
jne r-xdata
test [ edi + 0x20 ] 0x4
je r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
mov ecx [ eax ]
lea edx [ eax + 0x4 ]
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] edx
push 0x1
push esi
call sub_407fbc
pop ecx
pop ecx
lea ecx [ ebp - 0x44 ]
call sub_40806b
push r--data
lea eax [ ebp - 0x44 ]
push eax
call sub_407daf
push [ edi + 0x1c ]
push esi
call sub_4087ba
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
add [ ebp - 0x10 ] 0x10
dec eax
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
push [ esi + 0x1c ]
push [ edx ]
push [ ebp - 0x10 ]
call sub_408c8e
add esp 0xc
test eax eax
jne r-xdata
call sub_407e75
call sub_407e75
call sub_407e75
mov [ eax + 0x10 ] esi
call sub_407e75
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp - 0xc ]
push esi
mov [ eax + 0x14 ] ecx
jne r-xdata
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x34 ]
jmp r-xdata
push [ ebp - 0x24 ]
mov eax [ ebp - 0x1c ]
push [ ebp + 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x20 ]
push [ ebp - 0x38 ]
push [ eax ]
push [ ebp - 0x10 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push ebx
push esi
call sub_408279
add esp 0x2c
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x1c ]
dec eax
add edx 0x4
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x1c ] edx
test eax eax
jg r-xdata
push [ ebp + 0x24 ]
push ebx
jmp r-xdata
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x28 ] ecx
test ecx ecx
jle r-xdata
mov eax [ ebp - 0x18 ]
call sub_40765b
push 0xffffffff
push edi
push [ ebp + 0x14 ]
push ebx
call sub_408aca
add esp 0x10
push [ edi + 0x1c ]
call sub_40823f
sub_40869f
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x80000003
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push ebx
push esi
call sub_407e75
mov ebx [ ebp + 0x18 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
call sub_407e75
cmp [ eax + 0x8 ] esi
je r-xdata
call sub_40de54
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x20 ]
push ebx
call sub_4075b1
mov ecx [ ebp - 0x8 ]
add esp 0x14
mov edx [ ebp - 0x4 ]
cmp ecx edx
jae r-xdata
cmp [ edi ] 0xe0434f4d
je r-xdata
pop esi
pop ebx
lea esi [ eax + 0xc ]
mov eax [ ebp + 0x1c ]
cmp [ edi ] 0xe0434352
je r-xdata
inc ecx
add esi 0x14
mov [ ebp - 0x8 ] ecx
cmp ecx edx
jb r-xdata
cmp eax [ esi - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_4074d4
add esp 0x1c
test eax eax
jne r-xdata
cmp eax [ esi - 0xc ]
jl r-xdata
mov eax [ esi ]
mov edi [ esi + 0x4 ]
shl eax 0x4
mov edi [ edi + eax - 0xc ]
test edi edi
je r-xdata
mov edi [ esi + 0x4 ]
add edi 0xfffffff0
add eax edi
mov edi [ ebp + 0x8 ]
test [ eax ] 0x40
jne r-xdata
mov edx [ esi + 0x4 ]
mov ebx [ edx + eax - 0xc ]
mov edx [ ebp - 0x4 ]
cmp [ ebx + 0x8 ] 0x0
mov ebx [ ebp + 0x18 ]
jne r-xdata
mov eax [ ebp + 0x1c ]
push 0x1
push [ ebp + 0x24 ]
lea ecx [ esi - 0xc ]
push [ ebp + 0x20 ]
push ecx
push 0x0
push eax
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_408279
mov edx [ ebp - 0x4 ]
add esp 0x2c
mov ecx [ ebp - 0x8 ]
sub_4087ba
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
call sub_40de54
mov edi [ esi ]
xor ebx ebx
test edi edi
jle r-xdata
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov [ ebp - 0x4 ] ebx
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ecx [ eax ]
add eax 0x4
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
add edx 0x10
mov [ ebp - 0x4 ] edx
sub edi 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
add eax edx
mov [ ebp - 0x14 ] eax
mov ecx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
mov bl 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
dec eax
add ecx 0x4
mov [ ebp - 0x8 ] eax
test eax eax
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x14 ]
jg r-xdata
mov edx [ ebp + 0x8 ]
push [ edx + 0x1c ]
push [ ecx ]
push eax
call sub_408c8e
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
sub_408856
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp [ edi ] esi
jle r-xdata
xor al al
mov ebx esi
mov al 0x1
jmp r-xdata
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi + 0x4 ]
push rw-data
mov eax [ ebx + eax + 0x4 ]
add eax 0x4
push eax
call sub_407e1d
pop ecx
pop ecx
test eax eax
je r-xdata
sub_40889c
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
mov eax [ ecx ]
mov esi [ ecx + 0x4 ]
add eax edx
test esi esi
js r-xdata
pop esi
pop ebp
retn
mov ecx [ ecx + 0x8 ]
mov edx [ esi + edx ]
mov ecx [ edx + ecx ]
add ecx esi
add eax ecx
sub_4088c1
push 0x8
push r--data
call sub_406590
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
test [ edx ] 0x80000000
je r-xdata
lea edi [ ecx + 0xc ]
add edi [ edx + 0x8 ]
mov edi ecx
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40889c
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_408895
sub eax 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push edx
push ecx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_408953
add esp 0x10
sub eax 0x1
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4065d6
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40889c
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_408895
jmp r-xdata
sub_408953
push 0x10
push r--data
call sub_406590
xor ebx ebx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] bl
je r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ eax ]
mov esi [ ebp + 0xc ]
test ecx ecx
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] ebx
mov edi [ ebp + 0x14 ]
test cl cl
jns r-xdata
add esi 0xc
add esi edx
mov eax [ ebp + 0x8 ]
test cl 0x8
je r-xdata
test [ edi ] 0x10
je r-xdata
test [ edi ] 0x1
je r-xdata
mov ecx [ eax + 0x18 ]
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
cmp [ edi + 0x18 ] ebx
jne r-xdata
cmp [ eax + 0x18 ] 0x0
je r-xdata
call sub_40de54
test esi esi
je r-xdata
mov ecx eax
call j_sub_406db5
call [ ebp - 0x1c ]
mov ecx eax
jmp r-xdata
cmp [ eax + 0x18 ] ebx
je r-xdata
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
test esi esi
je r-xdata
mov [ esi ] ecx
lea eax [ edi + 0x8 ]
push eax
push ecx
jmp r-xdata
test ecx ecx
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
push [ edi + 0x14 ]
push [ eax + 0x18 ]
push esi
call sub_409440
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
call sub_40889c
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
test [ edi ] 0x4
push 0x0
pop ebx
setne bl
inc ebx
mov [ ebp - 0x20 ] ebx
push [ edi + 0x14 ]
lea eax [ edi + 0x8 ]
push eax
push ecx
call sub_40889c
pop ecx
pop ecx
push eax
push esi
call sub_409440
add esp 0xc
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax ebx
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
call sub_4065d6
retn
lea eax [ edi + 0x8 ]
push eax
push [ esi ]
sub_408a85
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe0434352
je r-xdata
call sub_407e75
cmp [ eax + 0x18 ] 0x0
jle r-xdata
cmp [ eax ] 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_407e75
dec [ eax + 0x18 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
call sub_407e75
and [ eax + 0x18 ] 0x0
jmp sub_40de54
sub_408aca
push 0x10
push r--data
call sub_406590
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x4 ] 0x80
mov eax [ ebp + 0x8 ]
jg r-xdata
mov esi [ eax + 0x8 ]
movsx esi [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408b7e
cmp esi [ ebp + 0x14 ]
jne r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_407e75
inc [ eax + 0x18 ]
and [ ebp - 0x4 ] 0x0
call sub_40de54
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] esi
call sub_4065d6
retn
mov ecx [ ebp + 0x10 ]
cmp esi [ ecx + 0x4 ]
jge r-xdata
mov eax [ ecx + 0x8 ]
mov edx [ eax + esi * 8 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0x1
cmp [ eax + esi * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
push 0x103
push eax
mov eax [ ecx + 0x8 ]
push [ eax + esi * 8 + 0x4 ]
call sub_407f70
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_408b92
push ebp
mov ebp esp
push ebx
push esi
push edi
push [ ebp + 0x10 ]
call sub_406db5
pop ecx
call sub_407e75
mov ecx [ ebp + 0x18 ]
xor esi esi
mov edx [ ebp + 0x8 ]
mov ebx 0x1fffffff
mov edi 0x19930522
cmp [ eax + 0x20 ] esi
jne r-xdata
test [ edx + 0x4 ] 0x66
je r-xdata
cmp [ edx ] 0xe06d7363
je r-xdata
cmp [ ecx + 0xc ] esi
jne r-xdata
cmp [ ecx + 0x4 ] esi
je r-xdata
cmp [ edx ] 0x80000026
je r-xdata
cmp [ edx ] 0xe06d7363
jne r-xdata
mov eax [ ecx ]
and eax ebx
cmp eax 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] esi
jne r-xdata
mov eax [ ecx ]
and eax ebx
cmp eax edi
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call sub_40833e
add esp 0x20
cmp [ edx + 0x10 ] 0x3
jb r-xdata
cmp eax edi
jb r-xdata
cmp [ ecx + 0x1c ] esi
jne r-xdata
push 0xffffffff
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_408aca
add esp 0x10
jmp r-xdata
test [ ecx + 0x20 ] 0x1
jne r-xdata
cmp [ edx + 0x14 ] edi
jbe r-xdata
test [ ecx + 0x20 ] 0x4
je r-xdata
mov eax [ edx + 0x1c ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
movzx eax [ ebp + 0x24 ]
push eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ecx
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call j_sub_406db5
call esi
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_408c8e
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ edx + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea ecx [ eax + 0x8 ]
cmp [ ecx ] 0x0
je r-xdata
test [ edx ] 0x80
mov edi [ ebp + 0xc ]
je r-xdata
mov ebx [ edi + 0x4 ]
xor esi esi
cmp eax ebx
je r-xdata
test [ edi ] 0x10
jne r-xdata
test [ edi ] 0x2
je r-xdata
lea eax [ ebx + 0x8 ]
mov eax [ ebp + 0x10 ]
test [ eax ] 0x1
je r-xdata
test [ edx ] 0x8
je r-xdata
sbb eax eax
or eax 0x1
test bl bl
je r-xdata
test [ eax ] 0x2
je r-xdata
test [ edx ] 0x1
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax esi
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ eax + 0x1 ]
jne r-xdata
xor esi esi
inc esi
test [ edx ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test eax eax
je r-xdata
add ecx 0x2
add eax 0x2
test bl bl
jne r-xdata
mov bl [ ecx ]
cmp bl [ eax ]
jne r-xdata
sub_408d20
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_408db0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_4093f5
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_409414
jmp r-xdata
sub_408db0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_405fe1
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_408d20
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_408df6
push ebp
push [ esp + 0x8 ]
call sub_406db5
add esp 0x4
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_408d20
add esp 0xc
pop ebp
retn 0x4
sub_408e1e
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_408e4e
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_408e7e
push esi
push edi
mov edi rw-data
xor esi esi
call sub_408eba
xor al al
inc [ rw-data ]
add esi 0x18
add edi 0x18
cmp esi 0x18
jb r-xdata
push 0x0
push 0xfa0
push edi
call sub_409218
add esp 0xc
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
pop edi
pop esi
retn
sub_408eba
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov al 0x1
pop esi
retn
imul eax esi 0x18
push edi
lea edi [ eax + rw-data ]
push edi
call [ DeleteCriticalSection@IAT ]
dec [ rw-data ]
sub edi 0x18
sub esi 0x1
jne r-xdata
pop edi
sub_408f06
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
push esi
push edi
lea ebx [ eax * 4 + rw-data ]
xor eax eax
[ ebx ] ecx
mov edx [ rw-data ]
or edi 0xffffffff
mov ecx edx
mov esi edx
and ecx 0x1f
xor esi eax
ror esi cl
cmp esi edi
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov esi [ ebp + 0x10 ]
cmp esi [ ebp + 0x14 ]
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
push [ esi ]
call sub_408fa6
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax edx
push 0x20
and eax 0x1f
pop ecx
sub ecx eax
ror edi cl
xor edi edx
xchg [ ebx ] edi
push [ ebp + 0xc ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
add esi 0x4
cmp esi [ ebp + 0x14 ]
jne r-xdata
mov edx [ rw-data ]
push esi
call sub_408ee9
pop ecx
xchg [ ebx ] eax
jmp r-xdata
test eax eax
je r-xdata
mov edx [ rw-data ]
sub_408fa6
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
xor ecx ecx
push edi
xor eax eax
lea edi [ ebx * 4 + rw-data ]
[ edi ] ecx
mov ecx eax
test ecx ecx
je r-xdata
mov ebx [ ebx * 4 + r--data ]
push esi
push 0x800
push 0x0
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
neg eax
sbb eax eax
and eax ecx
jmp r-xdata
mov eax esi
xchg [ edi ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
pop edi
pop ebx
pop ebp
retn
mov eax esi
push esi
call [ FreeLibrary@IAT ]
xor esi esi
push esi
push esi
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
jmp r-xdata
or eax 0xffffffff
xchg [ edi ] eax
xor eax eax
jmp r-xdata
test esi esi
jne r-xdata
pop esi
sub_409027
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x0
call sub_408f06
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_406db5
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_409067
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x1
call sub_408f06
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0x18 ]
mov ecx esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_406db5
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_4090aa
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x2
call sub_408f06
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call j_sub_406db5
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_4090e4
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x3
call sub_408f06
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0x20 ]
mov ecx esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_406db5
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_40912d
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x4
call sub_408f06
mov esi eax
add esp 0x10
test esi esi
je r-xdata
pop esi
pop ebp
jmp [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call j_sub_406db5
call esi
pop esi
pop ebp
retn
sub_409167
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x5
call sub_408f06
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsFree@IAT ]
mov ecx esi
call j_sub_406db5
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_4091a1
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x6
call sub_408f06
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsGetValue@IAT ]
mov ecx esi
call j_sub_406db5
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_4091db
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x7
call sub_408f06
add esp 0x10
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsSetValue@IAT ]
mov ecx esi
call j_sub_406db5
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_409218
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x8
call sub_408f06
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_406db5
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_40925e
mov eax [ rw-data ]
push edi
push 0x20
and eax 0x1f
mov edi rw-data
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
push 0x9
pop ecx
[ edi ]
pop edi
retn
sub_409282
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push esi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jne r-xdata
cmp [ esi ] 0xffffffff
je r-xdata
cmp [ esi ] 0x0
je r-xdata
pop esi
and [ esi ] 0x0
push [ esi ]
call [ FreeLibrary@IAT ]
sub_4092e0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409300
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_405fe1
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_409345
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_409345
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_409300
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4093f5
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_409414
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_4093ec
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_4093f5
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_409440
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x20
jb r-xdata
cmp edi eax
jb r-xdata
and ecx 0x1f
je r-xdata
cmp ecx 0x80
jae r-xdata
lea esi [ ecx + esi ]
lea edi [ ecx + edi ]
cmp ecx 0x20
jb r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax ecx
shr ecx 0x2
je r-xdata
bt [ rw-data ] 0x1
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
test ecx 0xfffffffc
je r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
add edi 0x4
add esi 0x4
sub ecx 0x1
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
[ edi ] [ esi ]
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test ecx ecx
je r-xdata
jmp r-xdata
test ecx ecx
je r-xdata
sub edi 0x4
sub esi 0x4
mov eax [ esi ]
mov [ edi ] eax
sub ecx 0x4
test ecx 0xfffffffc
jne r-xdata
test edi 0xf
je r-xdata
test edi 0x3
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov edx ecx
shr edx 0x5
test edx edx
je r-xdata
test edi 0x3
je r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
sub edi 0x1
sub esi 0x1
mov al [ esi ]
mov [ edi ] al
sub ecx 0x1
jne r-xdata
cmp ecx 0x80
jb r-xdata
dec ecx
dec esi
dec edi
mov al [ esi ]
mov [ edi ] al
test edi 0xf
jne r-xdata
cmp ecx 0x20
jb r-xdata
mov edx edi
and edx 0x3
sub ecx edx
lea esp [ esp ]
lea ecx [ ecx ]
test edi 0x3
jne r-xdata
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
lea ebx [ ebx ]
mov edx ecx
cmp ecx 0x20
jb r-xdata
mov al [ esi ]
mov [ edi ] al
dec ecx
add esi 0x1
add edi 0x1
test edi 0x3
jne r-xdata
cmp ecx 0x20
jb r-xdata
sub esi 0x80
sub edi 0x80
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu xmm2 [ esi + 0x20 ]
movdqu xmm3 [ esi + 0x30 ]
movdqu xmm4 [ esi + 0x40 ]
movdqu xmm5 [ esi + 0x50 ]
movdqu xmm6 [ esi + 0x60 ]
movdqu xmm7 [ esi + 0x70 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
movdqu [ edi + 0x20 ] xmm2
movdqu [ edi + 0x30 ] xmm3
movdqu [ edi + 0x40 ] xmm4
movdqu [ edi + 0x50 ] xmm5
movdqu [ edi + 0x60 ] xmm6
movdqu [ edi + 0x70 ] xmm7
sub ecx 0x80
test ecx 0xffffff80
jne r-xdata
mov edx ecx
shr ecx 0x2
and edx 0x3
sub esi 0x4
sub edi 0x4
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + r-xdata ]
mov al [ esi - 0x1 ]
mov [ edi - 0x1 ] al
dec esi
dec edi
sub edx 0x1
jne r-xdata
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
lea esi [ esi + 0x20 ]
lea edi [ edi + 0x20 ]
dec edx
jne r-xdata
shr ecx 0x2
[ edi ] [ esi ]
and edx 0x3
jmp [ edx * 4 + r-xdata ]
sub esi 0x20
sub edi 0x20
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
sub ecx 0x20
test ecx 0xffffffe0
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
lea esp [ esp ]
mov edi edi
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov edi edi
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + r-xdata ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_4099b4
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
ror eax cl
xor eax [ rw-data ]
pop ebp
retn
sub_4099e6
push 0xc
push r--data
call sub_41aa80
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push 0x2
call sub_40eabe
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
call sub_406b2d
test al al
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409af0
test esi esi
jne r-xdata
xor eax eax
inc eax
mov ecx rw-data
xchg [ ecx ] eax
mov [ ebp - 0x4 ] 0x1
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
push [ ebp + 0x8 ]
call sub_409b40
pop ecx
call sub_41aac9
retn
push [ ebp + 0x8 ]
call sub_409aff
cmp edi 0x1
jne r-xdata
mov ebx [ rw-data ]
mov edx ebx
and edx 0x1f
push 0x20
pop ecx
sub ecx edx
xor eax eax
ror eax cl
xor eax ebx
mov ecx [ rw-data ]
cmp ecx eax
je r-xdata
and [ ebp - 0x4 ] 0x0
test edi edi
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
xor ebx ecx
xor eax eax
push eax
push eax
push eax
mov ecx edx
ror ebx cl
mov ecx ebx
call [ r--data ]
call ebx
push r--data
push r--data
call sub_40db7a
pop ecx
pop ecx
test esi esi
jne r-xdata
push r--data
push r--data
call sub_40db7a
pop ecx
pop ecx
call sub_40d816
pop ecx
mov [ rw-data ] 0x1
sub_409aff
mov edi edi
push ebp
mov ebp esp
call sub_40ef9f
test al al
je r-xdata
push [ ebp + 0x8 ]
call sub_409b40
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
mov eax [ fs : 0x30 ]
mov eax [ eax + 0x68 ]
shr eax 0x8
test al 0x1
jne r-xdata
push [ ebp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
sub_409b40
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push r--data
push 0x0
call [ GetModuleHandleExW@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push esi
push r--data
push [ ebp - 0x8 ]
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405fe1
mov esp ebp
pop ebp
retn
push [ ebp - 0x8 ]
call [ FreeLibrary@IAT ]
pop esi
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
sub_409bed
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
cmp [ rw-data ] eax
jne sub_40de54
push [ ebp + 0x8 ]
call sub_4099b4
pop ecx
mov [ rw-data ] eax
pop ebp
retn
sub_409c6e
mov eax [ rw-data ]
push esi
push 0x3
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_40e014
push 0x0
mov [ rw-data ] eax
call sub_40df49
add esp 0xc
cmp [ rw-data ] 0x0
jne r-xdata
mov eax esi
mov [ rw-data ] eax
push edi
xor edi edi
mov esi rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_40e014
push 0x0
mov [ rw-data ] eax
call sub_40df49
add esp 0xc
cmp [ rw-data ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0xfffffffe
cmp eax 0xfffffffe
je r-xdata
or eax 0xffffffff
pop esi
retn
push 0x0
push 0xfa0
lea eax [ esi + 0x20 ]
push eax
call sub_40ee33
mov eax [ rw-data ]
mov edx edi
sar edx 0x6
mov [ eax + edi * 4 ] esi
mov eax edi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
mov eax [ eax + ecx + 0x18 ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add esi 0x38
inc edi
cmp esi rw-data
jne r-xdata
sub_409d48
push esi
call sub_40f903
call sub_40f7b6
xor esi esi
mov eax [ rw-data ]
push [ esi + eax ]
call sub_40f9e4
mov eax [ rw-data ]
pop ecx
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
add esi 0x4
cmp esi 0xc
jne r-xdata
push [ rw-data ]
call sub_40df49
and [ rw-data ] 0x0
pop ecx
pop esi
retn
sub_409dba
push 0x10
push r--data
call sub_406590
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
test edi edi
setne al
test eax eax
je r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
xor eax eax
cmp [ edi ] al
setne al
test eax eax
je r-xdata
call sub_4065d6
retn
cmp [ esi ] 0x0
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_40fc10
pop ecx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_40f7a3
mov [ eax ] 0x16
jmp r-xdata
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x4 ] 0x0
push [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_410117
add esp 0x10
mov esi eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409e64
mov eax esi
call sub_40f7a3
mov [ eax ] 0x18
jmp r-xdata
xor eax eax
jmp r-xdata
sub_409e92
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
push edi
or edi 0xffffffff
shr eax 0xd
test al 0x1
je r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
or eax 0xffffffff
jmp r-xdata
push esi
call sub_40fc6f
pop ecx
mov eax edi
pop edi
push esi
call sub_40f856
push esi
mov edi eax
call sub_40f9e4
push esi
call sub_4102e7
push eax
call sub_4101cc
add esp 0x10
test eax eax
jns r-xdata
pop esi
pop ebp
retn
cmp [ esi + 0x1c ] 0x0
je r-xdata
or edi 0xffffffff
jmp r-xdata
push [ esi + 0x1c ]
call sub_40df49
and [ esi + 0x1c ] 0x0
pop ecx
sub_409f08
push 0x10
push r--data
call sub_406590
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x20 ] esi
xor eax eax
test esi esi
setne al
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
shr eax 0xc
push esi
test al 0x1
je r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
and [ ebp - 0x1c ] 0x0
call sub_409d92
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_409e92
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409f7e
mov eax esi
call sub_40fc6f
pop ecx
jmp r-xdata
call sub_4065d6
retn
or eax 0xffffffff
jmp r-xdata
sub_409f88
push 0xc
push r--data
call sub_406590
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_409d92
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_40a809
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409fcd
mov eax esi
call sub_4065d6
retn 0xc
sub_409fd9
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_409f88
mov esp ebp
pop ebp
retn
sub_40a001
mov edi edi
push ebp
mov ebp esp
sub esp 0x484
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x18 ] 0x0
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x460 ] eax
jne r-xdata
test ebx ebx
je r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x484 ]
call sub_40a748
mov ecx [ ebp + 0x8 ]
lea edi [ ebp - 0x470 ]
xor eax eax
xor edx edx
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
mov edi [ ebp - 0x460 ]
and eax 0x2
mov [ ebp - 0x474 ] eax
or eax edx
mov [ ebp - 0x470 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x468 ] edx
jne r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn
mov [ ebp - 0x464 ] 0x1
mov [ ebp - 0x464 ] dl
test edi edi
jne r-xdata
lea ecx [ ebp - 0x41c ]
call sub_40a7cb
cmp [ ebp - 0x478 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
and eax 0x1
or eax ecx
je r-xdata
push [ ebp + 0x20 ]
lea eax [ ebp - 0x470 ]
mov [ ebp - 0x460 ] eax
lea eax [ ebp - 0x480 ]
push eax
push [ ebp + 0x18 ]
lea eax [ ebp - 0x460 ]
push [ ebp + 0xc ]
push ecx
push eax
lea ecx [ ebp - 0x45c ]
call sub_40a6de
lea ecx [ ebp - 0x45c ]
call sub_40abb5
mov esi eax
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov ecx [ ebp - 0x484 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0x474 ]
or eax ecx
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
or esi 0xffffffff
jmp r-xdata
test esi esi
jns r-xdata
mov [ edi + eax ] cl
test esi esi
js r-xdata
push 0xfffffffe
pop esi
mov eax [ ebp - 0x468 ]
cmp eax ebx
je r-xdata
mov [ edi ] cl
jmp r-xdata
cmp esi ebx
jbe r-xdata
mov [ edi + ebx - 0x1 ] cl
jmp r-xdata
jmp r-xdata
sub_40a17d
mov edi edi
push ebp
mov ebp esp
sub esp 0x484
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x18 ] 0x0
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x460 ] eax
jne r-xdata
test ebx ebx
je r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x484 ]
call sub_40a748
mov ecx [ ebp + 0x8 ]
lea edi [ ebp - 0x470 ]
xor eax eax
xor edx edx
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
mov edi [ ebp - 0x460 ]
and eax 0x2
mov [ ebp - 0x474 ] eax
or eax edx
mov [ ebp - 0x470 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x468 ] edx
jne r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn
mov [ ebp - 0x464 ] 0x1
mov [ ebp - 0x464 ] dl
test edi edi
jne r-xdata
lea ecx [ ebp - 0x41c ]
call sub_40a7cb
cmp [ ebp - 0x478 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x1
or eax 0x0
je r-xdata
push [ ebp + 0x20 ]
lea eax [ ebp - 0x470 ]
mov [ ebp - 0x460 ] eax
lea eax [ ebp - 0x480 ]
push eax
push [ ebp + 0x18 ]
lea eax [ ebp - 0x460 ]
push [ ebp + 0xc ]
push ecx
push eax
lea ecx [ ebp - 0x45c ]
call sub_40a713
lea ecx [ ebp - 0x45c ]
call sub_40acd1
mov esi eax
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov ecx [ ebp - 0x484 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0x474 ]
or eax 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
or esi 0xffffffff
jmp r-xdata
test esi esi
jns r-xdata
xor ecx ecx
mov [ edi + eax * 2 ] cx
test esi esi
js r-xdata
push 0xfffffffe
pop esi
mov eax [ ebp - 0x468 ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ edi ] ax
jmp r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
mov [ edi + ebx * 2 - 0x2 ] ax
jmp r-xdata
jmp r-xdata
sub_40a31a
mov edi edi
push ebp
mov ebp esp
push ecx
or eax 0xffffffff
xor edx edx
push esi
mov esi [ ebp + 0x8 ]
div esi
push edi
and eax 0xfffffffe
mov edi ecx
cmp eax 0x2
jae r-xdata
push ebx
xor ebx ebx
add esi esi
cmp [ edi + 0x404 ] ebx
jne r-xdata
call sub_40f7a3
mov [ eax ] 0xc
xor al al
jmp r-xdata
cmp esi [ edi + 0x400 ]
ja r-xdata
cmp esi 0x400
jbe r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_40df83
mov [ ebp - 0x4 ] eax
pop ecx
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
push eax
call sub_40df49
pop ecx
mov al bl
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ edi + 0x404 ]
call sub_40a7e5
mov eax [ ebp - 0x4 ]
mov bl 0x1
mov [ edi + 0x400 ] esi
pop ebx
sub_40a3a0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
dec eax
sub eax 0x1
je r-xdata
xor al al
pop ebp
retn
sub eax 0x1
je r-xdata
mov al 0x1
pop ebp
retn
sub eax 0x9
je r-xdata
cmp [ ebp + 0x14 ] 0xd
je r-xdata
mov al [ ebp + 0x10 ]
cmp al 0x63
je r-xdata
mov cl 0x1
cmp al 0x73
je r-xdata
xor cl cl
jmp r-xdata
xor eax eax
test cl cl
sete al
pop ebp
retn
sub_40a3e0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
dec eax
sub eax 0x1
je r-xdata
xor al al
pop ebp
retn
sub eax 0x1
je r-xdata
mov al 0x1
pop ebp
retn
sub eax 0x9
je r-xdata
cmp [ ebp + 0x14 ] 0xd
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
and eax 0x4
mov dl 0x1
or eax ecx
jne r-xdata
cmp [ ebp + 0x10 ] 0x63
je r-xdata
mov dl cl
mov cl 0x1
cmp [ ebp + 0x10 ] 0x73
jne r-xdata
xor eax eax
cmp dl cl
sete al
pop ebp
retn
sub_40a42f
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x404 ]
call sub_40a302
test edi edi
jne r-xdata
add eax edi
add eax esi
jmp r-xdata
pop edi
pop esi
retn
sub_40a44d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_40a302
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_40a4c2
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_40a302
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_41a9e0
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_40a54a
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push [ ebp + 0xc ]
call sub_40c47f
cmp [ edi ] 0xffffffff
je r-xdata
sub_40a576
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push [ ebp + 0xc ]
call sub_40c4bc
cmp [ edi ] 0xffffffff
je r-xdata
sub_40a5a2
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jle r-xdata
pop esi
pop ebp
retn
push ebx
movsx bx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
pop edi
pop ebx
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ebx
call sub_40c4fe
cmp [ edi ] 0xffffffff
je r-xdata
sub_40a5d3
mov edi edi
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x4 ] ecx
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x28 ] eax
mov [ ecx + 0x30 ] ax
mov [ ecx + 0x38 ] eax
mov [ ecx + 0x3c ] al
mov [ ecx + 0x440 ] eax
mov [ ecx + 0x444 ] eax
mov eax ecx
mov esp ebp
pop ebp
retn
sub_40a61a
mov edi edi
push ebp
mov ebp esp
push ecx
xor edx edx
mov [ ebp - 0x4 ] ecx
xor eax eax
mov [ ecx ] edx
mov [ ecx + 0x32 ] ax
mov eax ecx
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] edx
mov [ ecx + 0x10 ] edx
mov [ ecx + 0x14 ] edx
mov [ ecx + 0x18 ] edx
mov [ ecx + 0x1c ] edx
mov [ ecx + 0x20 ] edx
mov [ ecx + 0x24 ] edx
mov [ ecx + 0x28 ] edx
mov [ ecx + 0x30 ] dl
mov [ ecx + 0x38 ] edx
mov [ ecx + 0x3c ] dl
mov [ ecx + 0x440 ] edx
mov [ ecx + 0x444 ] edx
mov esp ebp
pop ebp
retn
sub_40a666
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40a5d3
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ esi + 0x448 ] eax
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_40a6a2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40a61a
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ esi + 0x448 ] eax
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_40a6de
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a666
and [ esi + 0x450 ] 0x0
call sub_40f7a3
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_40a713
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a6a2
and [ esi + 0x450 ] 0x0
call sub_40f7a3
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_40a748
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
mov [ edi + 0xc ] 0x0
test ecx ecx
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ ecx ]
mov [ edi + 0x4 ] eax
mov eax [ ecx + 0x4 ]
jmp r-xdata
push esi
call sub_40f3ce
lea edx [ edi + 0x4 ]
mov [ edi ] eax
push edx
lea esi [ edi + 0x8 ]
mov ecx [ eax + 0x4c ]
mov [ edx ] ecx
mov ecx [ eax + 0x48 ]
push eax
mov [ esi ] ecx
call sub_411623
push esi
push [ edi ]
call sub_411650
mov ecx [ edi ]
add esp 0x10
mov eax [ ecx + 0x350 ]
pop esi
test al 0x2
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x4 ] eax
mov eax [ rw-data ]
mov [ edi + 0x8 ] eax
jmp r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
or eax 0x2
mov [ ecx + 0x350 ] eax
mov [ edi + 0xc ] 0x1
sub_40a7e5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push [ esi ]
call sub_40df49
mov edx [ ebp + 0x8 ]
and [ esi ] 0x0
pop ecx
mov eax [ edx ]
mov [ esi ] eax
mov eax esi
and [ edx ] 0x0
pop esi
pop ebp
retn 0x4
sub_40a809
mov edi edi
push ebp
mov ebp esp
sub esp 0x478
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
mov eax [ esi ]
mov edi [ eax ]
push edi
call sub_410d7c
mov [ ebp - 0x464 ] al
mov eax [ esi + 0x4 ]
pop ecx
lea ecx [ ebp - 0x478 ]
push [ eax ]
call sub_40a748
mov eax [ esi ]
lea ecx [ ebp - 0x45c ]
mov eax [ eax ]
mov [ ebp - 0x460 ] eax
mov eax [ esi + 0x10 ]
push [ eax ]
lea eax [ ebp - 0x474 ]
push eax
mov eax [ esi + 0xc ]
push [ eax ]
mov eax [ esi + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x460 ]
push eax
call sub_40a6de
lea ecx [ ebp - 0x45c ]
call sub_40aa99
lea ecx [ ebp - 0x41c ]
mov esi eax
call sub_40a7cb
cmp [ ebp - 0x46c ] 0x0
je r-xdata
push edi
push [ ebp - 0x464 ]
call sub_410e31
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x478 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_40a8c6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
mov eax [ eax ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov bl [ eax ]
jmp r-xdata
mov al [ ecx ]
test al al
jne r-xdata
cmp al bl
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
inc ecx
pop ebx
pop ebp
retn
jmp r-xdata
mov al [ ecx ]
test al al
jne r-xdata
cmp al 0x65
je r-xdata
mov edx ecx
cmp al 0x45
je r-xdata
dec ecx
cmp [ ecx ] 0x30
je r-xdata
cmp [ ecx ] bl
jne r-xdata
inc ecx
mov al [ edx ]
inc ecx
inc edx
mov [ ecx ] al
test al al
jne r-xdata
dec ecx
sub_40a91d
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp al 0x5a
ja r-xdata
xor ecx ecx
movsx eax cl
movzx ecx [ eax + r--data ]
and ecx 0xf
jmp r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + ecx * 8 + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_40a94f
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp ax 0x5a
ja r-xdata
xor ecx ecx
movzx eax cx
movzx ecx [ eax + r--data ]
and ecx 0xf
jmp r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + ecx * 8 + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_40a983
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_411050
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_410ea2
test eax eax
movsx eax [ esi ]
push eax
call sub_411050
pop ecx
cmp eax 0x78
jne r-xdata
mov eax [ ebp + 0xc ]
mov cl [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
add esi 0x2
mov al [ esi ]
mov [ esi ] cl
mov cl al
mov al [ esi ]
inc esi
test al al
jne r-xdata
pop esi
pop ebp
retn
sub_40a9df
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
dec eax
push eax
call sub_41109b
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_40aa3b
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
sub eax 0x2
push eax
call sub_4110c7
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_40aa99
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_40c3dc
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax ]
mov [ esi + 0x31 ] al
test al al
jne r-xdata
inc [ esi + 0x10 ]
cmp [ esi + 0x18 ] ebx
jl r-xdata
inc [ esi + 0x10 ]
push [ esi + 0x1c ]
movzx eax [ esi + 0x31 ]
mov ecx esi
push eax
call sub_40a91d
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
cmp eax 0x7
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jmp [ eax * 4 + jump_table_40ab95 ]
mov ecx esi
call sub_40ae6b
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_40adf1
jmp r-xdata
mov ecx esi
call sub_40bb53
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_40aff9
jmp r-xdata
mov ecx esi
call sub_40b04a
jmp r-xdata
mov ecx esi
call sub_40b498
test al al
je r-xdata
sub_40abb5
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_40ea05
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax ]
mov [ esi + 0x31 ] al
test al al
jne r-xdata
inc [ esi + 0x10 ]
cmp [ esi + 0x18 ] ebx
jl r-xdata
inc [ esi + 0x10 ]
push [ esi + 0x1c ]
movzx eax [ esi + 0x31 ]
mov ecx esi
push eax
call sub_40a91d
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
cmp eax 0x7
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jmp [ eax * 4 + jump_table_40acb1 ]
mov ecx esi
call sub_40ae8a
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_40adf1
jmp r-xdata
mov ecx esi
call sub_40bb53
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_40aff9
jmp r-xdata
mov ecx esi
call sub_40b1b3
jmp r-xdata
mov ecx esi
call sub_40b6c7
test al al
je r-xdata
sub_40acd1
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_40ea05
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
movzx eax [ eax ]
mov [ esi + 0x32 ] ax
test ax ax
jne r-xdata
add [ esi + 0x10 ] 0x2
cmp [ esi + 0x18 ] ebx
jl r-xdata
add [ esi + 0x10 ] 0x2
push [ esi + 0x1c ]
movzx eax [ esi + 0x32 ]
mov ecx esi
push eax
call sub_40a94f
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
cmp eax 0x7
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jmp [ eax * 4 + jump_table_40add1 ]
mov ecx esi
call sub_40aea9
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_40ae2e
jmp r-xdata
mov ecx esi
call sub_40bb7e
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_40b021
jmp r-xdata
mov ecx esi
call sub_40b31c
jmp r-xdata
mov ecx esi
call sub_40b8f6
test al al
je r-xdata
sub_40adf1
movsx eax [ ecx + 0x31 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_40ae2e
movzx eax [ ecx + 0x32 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_40aec8
mov edi edi
push esi
push 0x0
mov esi ecx
call sub_40af37
test al al
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
movzx eax [ esi + 0x31 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_40c47f
mov al 0x1
pop esi
retn
pop esi
retn
sub_40aef2
mov edi edi
push esi
push 0x0
mov esi ecx
call sub_40af98
test al al
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
movzx eax [ esi + 0x31 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_40c4bc
mov al 0x1
pop esi
retn
pop esi
retn
sub_40af37
mov edi edi
push esi
mov esi ecx
push edi
mov edi 0x8000
mov eax [ esi + 0x8 ]
mov cl [ esi + 0x31 ]
mov [ esi + 0x3c ] 0x0
movzx edx cl
mov eax [ eax ]
mov eax [ eax ]
test [ eax + edx * 2 ] di
je r-xdata
mov al 0x1
lea eax [ esi + 0x18 ]
push eax
push ecx
lea ecx [ esi + 0x448 ]
call sub_40c47f
mov ecx [ esi + 0x10 ]
mov al [ ecx ]
mov [ esi + 0x31 ] al
lea eax [ ecx + 0x1 ]
cmp [ esi + 0x31 ] 0x0
mov [ esi + 0x10 ] eax
jne r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
xor al al
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_40af98
mov edi edi
push esi
mov esi ecx
push edi
mov edi 0x8000
mov eax [ esi + 0x8 ]
mov cl [ esi + 0x31 ]
mov [ esi + 0x3c ] 0x0
movzx edx cl
mov eax [ eax ]
mov eax [ eax ]
test [ eax + edx * 2 ] di
je r-xdata
mov al 0x1
lea eax [ esi + 0x18 ]
push eax
push ecx
lea ecx [ esi + 0x448 ]
call sub_40c4bc
mov ecx [ esi + 0x10 ]
mov al [ ecx ]
mov [ esi + 0x31 ] al
lea eax [ ecx + 0x1 ]
cmp [ esi + 0x31 ] 0x0
mov [ esi + 0x10 ] eax
jne r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
xor al al
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_40aff9
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_40a9df
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_40b021
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_40aa3b
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_40b04a
mov al [ ecx + 0x31 ]
cmp al 0x46
jne r-xdata
cmp al 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_40b498
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
xor al al
retn
movsx eax al
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
cmp eax 0x6c
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x6c
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
inc eax
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
mov al [ edx ]
cmp al 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp al 0x36
jne r-xdata
cmp [ edx + 0x1 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp al 0x64
je r-xdata
cmp [ edx + 0x1 ] 0x34
jne r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
cmp eax 0x68
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp al 0x69
je r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x68
jne r-xdata
cmp al 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
inc eax
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp al 0x75
je r-xdata
cmp al 0x78
je r-xdata
cmp al 0x58
jne r-xdata
sub_40b1b3
mov al [ ecx + 0x31 ]
cmp al 0x46
jne r-xdata
cmp al 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_40b6c7
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
xor al al
retn
movsx eax al
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
cmp eax 0x6c
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x6c
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
inc eax
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
mov al [ edx ]
cmp al 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp al 0x36
jne r-xdata
cmp [ edx + 0x1 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp al 0x64
je r-xdata
cmp [ edx + 0x1 ] 0x34
jne r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
cmp eax 0x68
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp al 0x69
je r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x68
jne r-xdata
cmp al 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
inc eax
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp al 0x75
je r-xdata
cmp al 0x78
je r-xdata
cmp al 0x58
jne r-xdata
sub_40b31c
movzx eax [ ecx + 0x32 ]
cmp eax 0x46
jne r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_40b8f6
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
xor al al
retn
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
push 0x6c
pop edx
cmp eax edx
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
add eax 0x2
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
movzx eax [ edx ]
cmp eax 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp eax 0x36
jne r-xdata
cmp [ edx + 0x2 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp eax 0x64
je r-xdata
cmp [ edx + 0x2 ] 0x34
jne r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
push 0x68
pop edx
cmp eax edx
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp eax 0x69
je r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
add eax 0x2
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp eax 0x75
je r-xdata
cmp eax 0x78
je r-xdata
cmp eax 0x58
jne r-xdata
sub_40b498
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
xor ecx ecx
movsx eax [ esi + 0x31 ]
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax 0x58
jg r-xdata
mov ecx esi
call sub_40c2b5
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_40c29d
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
xor al al
jmp r-xdata
push ecx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_40bccc
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_40bc06
jmp r-xdata
sub eax 0x7
je r-xdata
push ebx
cmp eax 0x41
je r-xdata
mov edx [ esi + 0x20 ]
xor eax eax
push edi
mov [ ebp - 0x4 ] ax
mov edi eax
mov [ ebp - 0x2 ] al
mov eax edx
shr eax 0x4
test bl al
je r-xdata
mov al bl
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ecx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_40c0c0
jmp r-xdata
cmp eax 0x43
je r-xdata
mov cl [ esi + 0x31 ]
cmp cl 0x78
je r-xdata
mov eax edx
shr eax 0x6
test bl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_40c20a
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ecx
mov ecx esi
call sub_40bf98
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test bl al
jne r-xdata
cmp cl 0x58
jne r-xdata
test bl dl
je r-xdata
mov [ ebp - 0x4 ] 0x2d
jmp r-xdata
mov ecx esi
call sub_40c27e
jmp r-xdata
cmp eax 0x47
jle r-xdata
cmp cl 0x61
je r-xdata
xor bl bl
mov eax edx
shr eax 0x1
test bl al
je r-xdata
mov [ ebp - 0x4 ] 0x2b
jmp r-xdata
mov edi ebx
cmp eax 0x53
jne r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x20
mov [ ebp + edi - 0x4 ] 0x30
cmp cl 0x58
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov ebx [ esi + 0x24 ]
sub ebx [ esi + 0x38 ]
sub ebx edi
test dl 0xc
jne r-xdata
test bl bl
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_40c71c
mov ecx [ esi + 0x20 ]
lea edi [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_40a54a
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_40c543
cmp [ edi ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
mov [ ebp + edi - 0x3 ] al
add edi 0x2
mov al 0x1
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_40a54a
add esp 0x10
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_40a54a
add esp 0x10
sub_40b6c7
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
xor ecx ecx
movsx eax [ esi + 0x31 ]
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax 0x58
jg r-xdata
mov ecx esi
call sub_40c2b5
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_40c29d
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
xor al al
jmp r-xdata
push ecx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_40bccc
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_40bc06
jmp r-xdata
sub eax 0x7
je r-xdata
push ebx
cmp eax 0x41
je r-xdata
mov edx [ esi + 0x20 ]
xor eax eax
push edi
mov [ ebp - 0x4 ] ax
mov edi eax
mov [ ebp - 0x2 ] al
mov eax edx
shr eax 0x4
test bl al
je r-xdata
mov al bl
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ecx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_40c0c0
jmp r-xdata
cmp eax 0x43
je r-xdata
mov cl [ esi + 0x31 ]
cmp cl 0x78
je r-xdata
mov eax edx
shr eax 0x6
test bl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_40c20a
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ecx
mov ecx esi
call sub_40bf98
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test bl al
jne r-xdata
cmp cl 0x58
jne r-xdata
test bl dl
je r-xdata
mov [ ebp - 0x4 ] 0x2d
jmp r-xdata
mov ecx esi
call sub_40c27e
jmp r-xdata
cmp eax 0x47
jle r-xdata
cmp cl 0x61
je r-xdata
xor bl bl
mov eax edx
shr eax 0x1
test bl al
je r-xdata
mov [ ebp - 0x4 ] 0x2b
jmp r-xdata
mov edi ebx
cmp eax 0x53
jne r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x20
mov [ ebp + edi - 0x4 ] 0x30
cmp cl 0x58
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov ebx [ esi + 0x24 ]
sub ebx [ esi + 0x38 ]
sub ebx edi
test dl 0xc
jne r-xdata
test bl bl
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_40c7a6
mov ecx [ esi + 0x20 ]
lea edi [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_40a576
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_40c5ea
cmp [ edi ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
mov [ ebp + edi - 0x3 ] al
add edi 0x2
mov al 0x1
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_40a576
add esp 0x10
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_40a576
add esp 0x10
sub_40b8f6
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
xor ebx ebx
push 0x41
pop edx
push 0x58
movzx eax [ esi + 0x32 ]
pop ecx
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_40c328
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_40c29d
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] bl
jne r-xdata
xor al al
jmp r-xdata
push ebx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_40be26
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_40bc69
jmp r-xdata
sub eax 0x7
je r-xdata
push 0x1
cmp eax edx
je r-xdata
mov al 0x1
mov edx [ esi + 0x20 ]
xor ecx ecx
push edi
mov eax edx
mov [ ebp - 0xc ] ebx
shr eax 0x4
inc ecx
mov [ ebp - 0x8 ] bx
push 0x20
pop edi
test cl al
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn
push ebx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_40c0c0
jmp r-xdata
cmp eax 0x43
je r-xdata
movzx ecx [ esi + 0x32 ]
cmp ecx 0x78
je r-xdata
mov eax edx
shr eax 0x6
test cl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_40c20a
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ebx
mov ecx esi
call sub_40c028
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x58
pop eax
cmp cx ax
jne r-xdata
test cl dl
je r-xdata
push 0x2d
mov ecx esi
call sub_40c27e
jmp r-xdata
cmp eax 0x47
jle r-xdata
xor ah ah
mov ah 0x1
jmp r-xdata
mov eax edx
shr eax 0x1
test cl al
je r-xdata
push 0x2b
jmp r-xdata
mov ebx ecx
cmp eax 0x53
jne r-xdata
mov al 0x1
push 0x41
pop edi
cmp cx di
je r-xdata
cmp ecx 0x61
je r-xdata
mov [ ebp - 0xc ] di
pop eax
mov [ ebp - 0xc ] ax
jmp r-xdata
push 0x58
pop eax
mov [ ebp + ebx * 2 - 0xc ] di
cmp cx ax
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
push 0x41
pop eax
cmp cx ax
je r-xdata
mov edi [ esi + 0x24 ]
sub edi [ esi + 0x38 ]
sub edi ebx
test dl 0xc
jne r-xdata
push 0x30
pop edi
test ah ah
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ ebp - 0xc ]
lea ecx [ esi + 0x448 ]
push eax
call sub_40c839
mov ecx [ esi + 0x20 ]
lea ebx [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_40a5a2
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_40c691
cmp [ ebx ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
cbw
mov [ ebp + ebx * 2 - 0xa ] ax
add ebx 0x2
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_40a5a2
add esp 0x10
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_40a5a2
add esp 0x10
sub_40bb53
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_40a9df
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_40bb7e
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_40aa3b
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_40bbaa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xb
ja r-xdata
xor eax eax
pop ebp
retn
jmp [ eax * 4 + jump_table_40bbd6 ]
push 0x4
xor eax eax
inc eax
pop ebp
retn
push 0x2
jmp r-xdata
push 0x8
jmp r-xdata
pop eax
pop ebp
retn
sub_40bc06
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_40a3a0
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_40bc69
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_40a3e0
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_40bccc
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
test eax eax
jns r-xdata
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_40a31a
test al al
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp al 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_40a302
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp al 0x47
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_40a302
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x31 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_40a42f
push eax
mov ecx edi
call sub_40a302
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_411f48
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
cmp al 0x47
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_40a983
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_40a8c6
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x31 ] 0x73
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_40be26
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov esi ecx
push 0x67
pop ecx
push 0x47
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
pop edx
test eax eax
jns r-xdata
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp eax 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_40a31a
test al al
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp ax cx
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp eax 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_40a302
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp ax dx
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_40a302
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x32 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_40a42f
push eax
mov ecx edi
call sub_40a302
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_411f48
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
movzx eax [ esi + 0x32 ]
push 0x67
pop ecx
cmp ax cx
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
push 0x47
pop ecx
cmp ax cx
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_40a983
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_40a8c6
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
push 0x73
pop eax
mov [ esi + 0x32 ] ax
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_40bf98
mov edi edi
push esi
mov esi ecx
push edi
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_40a3a0
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
je r-xdata
mov ecx [ edi + 0x404 ]
test ecx ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push ebx
mov ebx [ edi + 0x404 ]
movzx eax [ eax - 0x4 ]
test ebx ebx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov al [ eax - 0x4 ]
mov [ ecx ] al
mov [ esi + 0x38 ] 0x1
mov ecx edi
push eax
mov ecx edi
call sub_40a302
push eax
lea eax [ esi + 0x38 ]
push ebx
push eax
call sub_411328
add esp 0x10
pop ebx
test eax eax
je r-xdata
mov ebx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
pop esi
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_40c028
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ esi + 0x3c ] 0x1
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push [ esi + 0x2c ]
movzx ebx [ eax - 0x4 ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_40a3e0
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
jne r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx [ edi + 0x404 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] al
test ecx ecx
jne r-xdata
mov [ eax ] bx
mov eax edi
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_4110f3
add esp 0x10
test eax eax
jns r-xdata
mov ecx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_40c0c0
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_40bbaa
pop ecx
mov ebx eax
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x1
je r-xdata
movzx eax [ eax - 0x4 ]
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
cdq
mov ecx eax
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x4
je r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov ecx [ eax - 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x8
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
jmp r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
xor al al
jmp r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_40a44d
push edx
push ecx
mov ecx esi
call sub_40a4c2
jmp r-xdata
mov al 0x1
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_40c20a
mov edi edi
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
call sub_4120bb
test eax eax
jne r-xdata
push [ esi + 0x2c ]
call sub_40bbaa
pop ecx
sub eax 0x1
je r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
xor al al
jmp r-xdata
mov al [ esi + 0x18 ]
mov [ edi ] al
sub eax 0x1
je r-xdata
pop edi
pop esi
retn
mov ax [ esi + 0x18 ]
mov [ edi ] ax
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov al 0x1
mov eax [ esi + 0x18 ]
mov [ edi ] eax
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
cdq
mov [ edi ] eax
mov [ edi + 0x4 ] edx
jmp r-xdata
sub_40c2b5
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_40a3a0
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push edi
push [ esi + 0x34 ]
call sub_411345
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_41146c
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop ecx
pop ecx
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_40c328
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_40a3e0
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_40c39c
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_41146c
pop ecx
pop ecx
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_40c39c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
xor esi esi
mov edx [ edi + 0x34 ]
cmp [ ebp + 0x8 ] esi
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
pop ebx
movzx ecx al
mov ebx 0x8000
mov eax [ edi + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
test [ eax + ecx * 2 ] bx
je r-xdata
inc edx
inc esi
cmp esi [ ebp + 0x8 ]
jl r-xdata
inc edx
mov al [ edx ]
test al al
je r-xdata
sub_40c3fd
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
mov eax [ ecx + 0xc ]
shr eax 0xc
test al 0x1
jne r-xdata
mov al 0x1
push ecx
call sub_4102e7
mov edx eax
mov esi rw-data
pop ecx
cmp edx 0xffffffff
je r-xdata
mov eax esi
cmp edx 0xfffffffe
je r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
xor al al
jmp r-xdata
cmp edx 0xffffffff
je r-xdata
and eax 0x3f
mov ecx edx
imul eax eax 0x30
sar ecx 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
pop esi
pop ebp
retn
test [ esi + 0x2d ] 0x1
je r-xdata
cmp edx 0xfffffffe
je r-xdata
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov eax edx
and edx 0x3f
imul esi edx 0x30
sar eax 0x6
add esi [ eax * 4 + rw-data ]
sub_40c47f
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
push [ ecx ]
movsx eax [ ebp + 0x8 ]
push eax
call sub_412092
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
inc [ eax ]
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
jmp r-xdata
pop ebp
retn 0x8
sub_40c4bc
mov edi edi
push ebp
mov ebp esp
mov edx ecx
mov ecx [ edx ]
mov eax [ ecx + 0x8 ]
cmp eax [ ecx + 0x4 ]
mov eax [ ebp + 0xc ]
jne r-xdata
inc [ eax ]
mov eax [ edx ]
inc [ eax + 0x8 ]
mov eax [ edx ]
mov ecx [ eax ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
mov eax [ edx ]
inc [ eax ]
mov al 0x1
cmp [ ecx + 0xc ] 0x0
je r-xdata
or [ eax ] 0xffffffff
inc [ eax ]
jmp r-xdata
pop ebp
retn 0x8
mov eax [ edx ]
mov al [ eax + 0xc ]
jmp r-xdata
sub_40c4fe
mov edi edi
push ebp
mov ebp esp
mov edx ecx
mov ecx [ edx ]
mov eax [ ecx + 0x8 ]
cmp eax [ ecx + 0x4 ]
mov eax [ ebp + 0xc ]
jne r-xdata
inc [ eax ]
mov eax [ edx ]
inc [ eax + 0x8 ]
mov eax [ edx ]
mov ecx [ eax ]
mov ax [ ebp + 0x8 ]
mov [ ecx ] ax
mov eax [ edx ]
add [ eax ] 0x2
mov al 0x1
cmp [ ecx + 0xc ] 0x0
je r-xdata
or [ eax ] 0xffffffff
inc [ eax ]
jmp r-xdata
pop ebp
retn 0x8
mov eax [ edx ]
mov al [ eax + 0xc ]
jmp r-xdata
sub_40c543
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_40c71c
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov edi [ esi + 0x34 ]
xor ebx ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn 0x4
movzx eax [ edi ]
lea edi [ edi + 0x2 ]
and [ ebp - 0x10 ] 0x0
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_411328
add esp 0x10
test eax eax
jne r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x10 ] eax
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
lea ecx [ esi + 0x448 ]
call sub_40c71c
inc ebx
cmp ebx [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_40c5ea
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_40c7a6
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov edi [ esi + 0x34 ]
xor ebx ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn 0x4
movzx eax [ edi ]
lea edi [ edi + 0x2 ]
and [ ebp - 0x10 ] 0x0
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_411328
add esp 0x10
test eax eax
jne r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x10 ] eax
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
lea ecx [ esi + 0x448 ]
call sub_40c7a6
inc ebx
cmp ebx [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_40c691
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_40c839
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov ebx [ esi + 0x34 ]
xor edi edi
test eax eax
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x4 ] ax
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push ebx
push eax
call sub_4110f3
add esp 0x10
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x18 ]
push ecx
push [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
call sub_40c4fe
add ebx [ ebp - 0x8 ]
inc edi
cmp edi [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_40c71c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx ecx
mov eax [ ebx ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
add eax edi
mov [ ebp - 0x4 ] eax
mov ecx [ esi ]
and [ esi ] 0x0
mov [ ebp - 0x8 ] ecx
cmp edi eax
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
pop edi
pop esi
test ecx ecx
je r-xdata
inc edi
cmp edi [ ebp - 0x4 ]
jne r-xdata
cmp [ esi ] 0x2a
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ esi ] ecx
push eax
movzx eax [ edi ]
mov ecx ebx
push eax
call sub_40c47f
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x8 ]
push eax
push 0x3f
mov ecx ebx
call sub_40c47f
mov eax [ ebp + 0x10 ]
sub_40c7a6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov eax ecx
mov [ ebp - 0x8 ] eax
mov ecx [ edi ]
and [ edi ] 0x0
mov eax [ eax ]
mov [ ebp - 0x4 ] ecx
mov esi [ eax + 0x4 ]
cmp [ eax + 0x8 ] esi
jne r-xdata
sub esi [ eax + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp esi ebx
jb r-xdata
cmp [ eax + 0xc ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
push [ eax ]
call sub_406f00
mov ecx [ ebp - 0x8 ]
add esp 0xc
mov eax [ ecx ]
add [ eax ] esi
mov eax [ ecx ]
add [ eax + 0x8 ] esi
mov eax [ ecx ]
cmp [ eax + 0xc ] 0x0
mov eax [ ebp + 0x10 ]
je r-xdata
mov esi ebx
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
cmp esi ebx
je r-xdata
add [ eax ] ebx
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
add [ eax ] esi
or [ eax ] 0xffffffff
jmp r-xdata
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
test ecx ecx
je r-xdata
mov [ edi ] ecx
sub_40c839
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x14 ]
mov eax ecx
push edi
mov [ ebp - 0x8 ] eax
mov ecx [ ebx ]
and [ ebx ] 0x0
mov edx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edi [ edx + 0x4 ]
cmp [ edx + 0x8 ] edi
jne r-xdata
sub edi [ edx + 0x8 ]
mov eax [ ebp + 0xc ]
cmp edi eax
jb r-xdata
cmp [ edx + 0xc ] 0x0
je r-xdata
push esi
lea esi [ edi + edi ]
push esi
push [ ebp + 0x8 ]
push [ edx ]
call sub_406f00
mov ecx [ ebp - 0x8 ]
add esp 0xc
mov eax [ ecx ]
add [ eax ] esi
mov eax [ ecx ]
pop esi
add [ eax + 0x8 ] edi
mov eax [ ecx ]
cmp [ eax + 0xc ] 0x0
mov eax [ ebp + 0x10 ]
je r-xdata
mov edi eax
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
cmp edi [ ebp + 0xc ]
je r-xdata
mov ecx [ ebp + 0xc ]
add [ eax ] ecx
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
add [ eax ] edi
or [ eax ] 0xffffffff
jmp r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x10
test ecx ecx
je r-xdata
mov [ ebx ] ecx
sub_40c8d3
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x14 ] eax
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x2c ]
push eax
push edx
call sub_409fd9
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_40c94a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a001
add esp 0x1c
pop ebp
retn
sub_40c96e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a17d
add esp 0x1c
pop ebp
retn
sub_40c992
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
xor eax eax
jmp r-xdata
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
push ebx
push eax
call sub_40eddd
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
sub ecx 0xd53e8000
push 0x0
push 0x989680
sbb eax 0x19db1de
push eax
push ecx
call sub_41aae0
mov [ ebp - 0x4 ] ebx
pop ebx
cmp edx 0x7
jl r-xdata
pop esi
mov esp ebp
pop ebp
retn
imul ecx ecx 0x64
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] edx
inc eax
mov [ esi + 0x8 ] ecx
jg r-xdata
cmp eax 0x93406fff
ja r-xdata
sub_40ca11
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
push edi
lea edi [ ebp - 0x10 ]
stosd [ edi ]
push 0x1
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x10 ]
push eax
call sub_40c992
pop ecx
pop ecx
pop edi
cmp eax 0x1
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
or eax 0xffffffff
mov edx eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
sub_40ca53
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_40ca88
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
test esi esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x18 ]
mov ebx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_40f7a3
mov [ eax ] 0x16
cmp ebx 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div esi
cmp [ ebp + 0x14 ] eax
jbe r-xdata
test ecx ecx
je r-xdata
push ebx
push 0x0
push edi
call sub_407850
mov ecx [ ebp + 0x18 ]
add esp 0xc
lea eax [ ecx + 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
test eax 0x4c0
je r-xdata
or eax 0xffffffff
xor edx edx
div esi
cmp [ ebp + 0x14 ] eax
ja r-xdata
mov [ ebp - 0xc ] 0x1000
mov eax [ ecx + 0x18 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0x8 ] edx
jne r-xdata
imul esi [ ebp + 0x14 ]
mov edx ebx
mov [ ebp - 0x4 ] edi
mov edi esi
test esi esi
jmp r-xdata
mov eax [ ecx + 0xc ]
test eax 0x4c0
je r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
cmp edi [ ebp - 0xc ]
jb r-xdata
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ecx
call sub_412c01
pop ecx
mov ecx eax
cmp ecx 0xffffffff
je r-xdata
mov eax 0x7fffffff
cmp edi eax
jbe r-xdata
js r-xdata
sub esi edi
xor edx edx
mov eax esi
div [ ebp + 0x10 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
je r-xdata
mov eax edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x14 ] eax
jmp r-xdata
push 0x10
cmp edi eax
jae r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] cl
inc eax
mov ecx [ ebp + 0x18 ]
dec edi
mov [ ebp - 0x4 ] eax
dec edx
mov eax [ ecx + 0x18 ]
mov [ ebp - 0xc ] eax
cmp eax edx
ja r-xdata
xor edx edx
div [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
sub eax edx
mov edx [ ebp - 0x8 ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax edx
ja r-xdata
mov eax edi
mov [ ebp - 0x14 ] edi
call sub_40f7a3
mov [ eax ] 0x22
jmp r-xdata
push ebx
push 0x0
push [ ebp + 0x8 ]
call sub_407850
add esp 0xc
push eax
push [ ebp - 0x4 ]
push ecx
call sub_4102e7
pop ecx
push eax
call sub_4126cb
add esp 0xc
test eax eax
je r-xdata
push eax
push [ ecx ]
push edx
push [ ebp - 0x4 ]
call sub_413e9c
mov ecx [ ebp + 0x18 ]
add esp 0x10
mov eax [ ebp - 0x14 ]
sub edi eax
mov edx [ ebp - 0x8 ]
add [ ebp - 0x4 ] eax
sub [ ecx + 0x8 ] eax
add [ ecx ] eax
sub edx eax
jmp r-xdata
call sub_40f6e7
push 0x8
jmp r-xdata
js r-xdata
test edi edi
mov eax [ ebp - 0x10 ]
pop ecx
[ eax ] ecx
mov edx [ ebp - 0x8 ]
sub edi eax
add [ ebp - 0x4 ] eax
sub edx eax
mov ecx [ ebp + 0x18 ]
jmp r-xdata
sub_40cc71
push 0xc
push r--data
call sub_406590
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
jne r-xdata
and [ ebp - 0x1c ] 0x0
push esi
call sub_409d92
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ca88
add esp 0x14
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ccfc
mov eax edi
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_4065d6
retn
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_407850
add esp 0xc
sub_40cd10
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ esp + 0x4 ]
call sub_4130c5
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_412c38
sub_40cd50
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_413108
call sub_40cda8
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_412c20
sub_40cda8
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
pop edx
retn
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fptan
fwait
fnstsw ax
sahf
jpe r-xdata
fldcw [ r--data ]
fstp st0
fld [ r--data ]
mov eax 0x1
cmp [ rw-data ] 0x0
jne r-xdata
fld [ r--data ]
fxch st1
fstp st0
cmp [ esp ] 0x27f
je r-xdata
mov edx 0x20
lea ecx [ r--data ]
call sub_413227
fprem1
fwait
fnstsw ax
sahf
jpe r-xdata
fstp st1
fptan
fstp st0
jmp r-xdata
mov edx 0x20
lea ecx [ r--data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_413227
pop edx
retn
sub_40ce36
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_40f452
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov ecx edx
push ebx
xor ebx ebx
push edi
lea eax [ edx + 0x90 ]
cmp edx eax
je r-xdata
mov ecx ebx
mov edi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
mov edi [ ecx + 0x8 ]
test edi edi
jne r-xdata
test ecx ecx
je r-xdata
add ecx 0xc
cmp ecx eax
jne r-xdata
pop edi
pop ebx
cmp edi 0x5
jne r-xdata
cmp [ ecx ] edi
je r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ecx + 0x8 ] ebx
inc eax
jmp r-xdata
or eax 0xffffffff
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
cmp [ ecx + 0x4 ] 0x8
jne r-xdata
push [ ecx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx edi
call [ r--data ]
call edi
lea eax [ edx + 0x24 ]
lea edx [ eax + 0x6c ]
jmp r-xdata
cmp eax edx
jne r-xdata
mov [ eax + 0x8 ] ebx
add eax 0xc
mov ebx [ esi + 0x8 ]
mov eax 0xc0000091
cmp [ ecx ] eax
ja r-xdata
cmp [ ecx ] 0xc0000092
je r-xdata
je r-xdata
mov [ esi + 0x8 ] 0x8a
cmp [ ecx ] 0xc0000093
je r-xdata
mov [ esi + 0x8 ] 0x84
jmp r-xdata
cmp [ ecx ] 0xc000008d
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x85
jmp r-xdata
cmp [ ecx ] 0xc00002b4
je r-xdata
push [ esi + 0x8 ]
mov ecx edi
push 0x8
call [ r--data ]
call edi
pop ecx
mov [ esi + 0x8 ] ebx
jmp r-xdata
mov [ esi + 0x8 ] 0x82
jmp r-xdata
cmp [ ecx ] 0xc000008e
je r-xdata
mov [ esi + 0x8 ] 0x8e
jmp r-xdata
cmp [ ecx ] 0xc00002b5
jne r-xdata
mov [ esi + 0x8 ] 0x83
jmp r-xdata
cmp [ ecx ] 0xc000008f
je r-xdata
mov [ esi + 0x8 ] 0x8d
jmp r-xdata
mov [ esi + 0x8 ] 0x86
jmp r-xdata
cmp [ ecx ] 0xc0000090
jne r-xdata
mov [ esi + 0x8 ] 0x81
jmp r-xdata
sub_40cfa9
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x2
push esi
je r-xdata
push ebx
push edi
call sub_413beb
push 0x104
mov esi rw-data
xor edi edi
push esi
push edi
call [ GetModuleFileNameA@IAT ]
mov ebx [ rw-data ]
mov [ rw-data ] esi
test ebx ebx
je r-xdata
cmp [ ebp + 0x8 ] 0x1
je r-xdata
mov ebx esi
cmp [ ebx ] 0x0
jne r-xdata
call sub_40f7a3
push 0x16
pop esi
mov [ eax ] esi
call sub_40f6e7
mov eax esi
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push ebx
call sub_40d0cd
add esp 0x14
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
call sub_40f7a3
push 0xc
pop edi
mov [ eax ] edi
jmp r-xdata
lea eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] edi
push eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] edi
push eax
push edi
push edi
push ebx
call sub_40d0cd
push 0x1
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
call sub_40d242
mov esi eax
add esp 0x20
test esi esi
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push esi
call sub_413706
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ rw-data ] eax
mov eax esi
mov esi edi
mov [ rw-data ] eax
mov ebx edi
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax edx
cmp [ edx ] edi
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
push esi
call sub_40df49
pop ecx
pop edi
mov eax ebx
pop ebx
mov eax edi
mov [ rw-data ] ecx
mov [ ebp - 0x8 ] eax
mov ebx edi
mov [ rw-data ] edx
lea eax [ eax + 0x4 ]
inc ecx
cmp [ eax ] edi
jne r-xdata
push eax
call sub_40df49
pop ecx
mov [ ebp - 0x8 ] edi
sub_40d0cd
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
and [ ebx ] 0x0
mov edi [ ebp + 0x10 ]
mov [ eax ] 0x1
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
xor cl cl
mov [ ebp - 0x1 ] cl
mov [ eax ] edi
add eax 0x4
mov [ ebp + 0xc ] eax
inc [ ebx ]
test edi edi
je r-xdata
test cl cl
mov al 0x22
sete cl
inc esi
mov [ ebp - 0x1 ] cl
jmp r-xdata
mov al [ esi ]
inc esi
mov [ ebp - 0x2 ] al
movsx eax al
push eax
call sub_413f76
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
test cl cl
jne r-xdata
mov al [ ebp - 0x2 ]
test al al
je r-xdata
inc [ ebx ]
test edi edi
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x20
je r-xdata
dec esi
mov cl [ ebp - 0x1 ]
inc esi
mov al [ esi ]
mov [ edi ] al
inc edi
test edi edi
je r-xdata
cmp al 0x9
jne r-xdata
mov ecx [ ebp + 0xc ]
pop edi
pop esi
pop ebx
test ecx ecx
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov [ edi - 0x1 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ eax ]
mov esp ebp
pop ebp
retn
and [ ecx ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x14 ]
inc [ eax ]
mov [ ecx ] edi
add ecx 0x4
mov [ ebp + 0xc ] ecx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc eax
cmp [ esi ] 0x22
jne r-xdata
test eax eax
jne r-xdata
test al 0x1
jne r-xdata
dec eax
test edi edi
je r-xdata
mov al [ esi ]
test al al
je r-xdata
shr eax 0x1
jmp r-xdata
mov cl [ ebp - 0x1 ]
test cl cl
je r-xdata
inc [ ebx ]
mov [ edi ] 0x5c
inc edi
test edi edi
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
xor edx edx
test cl cl
sete [ ebp - 0x1 ]
lea ecx [ esi + 0x1 ]
cmp [ ecx ] 0x22
jne r-xdata
inc [ ebx ]
jmp r-xdata
mov [ edi ] 0x0
inc edi
test edx edx
je r-xdata
cmp al 0x20
je r-xdata
mov cl [ ebp - 0x1 ]
mov esi ecx
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
test edi edi
je r-xdata
cmp al 0x9
je r-xdata
xor edx edx
inc edx
xor eax eax
jmp r-xdata
movsx eax [ esi ]
push eax
call sub_413f76
pop ecx
test eax eax
je r-xdata
mov [ edi ] al
inc edi
inc [ ebx ]
inc esi
inc [ ebx ]
test edi edi
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
sub_40d242
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0x3fffffff
jb r-xdata
push edi
or edi 0xffffffff
mov ecx [ ebp + 0xc ]
xor edx edx
mov eax edi
div [ ebp + 0x10 ]
cmp ecx eax
jae r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
imul ecx [ ebp + 0x10 ]
shl esi 0x2
sub edi esi
cmp edi ecx
ja r-xdata
pop esi
pop ebp
retn
pop edi
lea eax [ ecx + esi ]
push 0x1
push eax
call sub_40e014
push 0x0
mov esi eax
call sub_40df49
add esp 0xc
mov eax esi
sub_40d2a2
cmp [ rw-data ] 0x0
je r-xdata
push esi
push edi
call sub_413beb
call sub_413fde
mov esi eax
test esi esi
jne r-xdata
xor eax eax
retn
push esi
call sub_40d2fb
pop ecx
test eax eax
jne r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
mov ecx rw-data
mov [ rw-data ] eax
call sub_40d988
xor edi edi
or edi 0xffffffff
jmp r-xdata
push esi
call sub_40df49
pop ecx
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_40df49
pop ecx
sub_40d2fb
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor edx edx
mov esi edi
mov al [ edi ]
jmp r-xdata
test al al
jne r-xdata
cmp al 0x3d
je r-xdata
lea eax [ edx + 0x1 ]
push 0x4
push eax
call sub_40e014
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
mov ecx esi
lea ebx [ ecx + 0x1 ]
inc edx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx ebx
inc esi
add esi ecx
mov al [ esi ]
cmp [ edi ] 0x0
jne r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
cmp [ edi ] 0x3d
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x8 ] eax
je r-xdata
push 0x0
call sub_40df49
pop ecx
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
add edi eax
push 0x1
push eax
call sub_40e014
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push ebx
call sub_40d3cc
push 0x0
call sub_40df49
pop ecx
pop ecx
push edi
push [ ebp - 0x8 ]
push esi
call sub_40deef
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40f6f7
int3
mov eax [ ebp - 0x4 ]
push 0x0
mov [ eax ] esi
add eax 0x4
mov [ ebp - 0x4 ] eax
call sub_40df49
mov eax [ ebp - 0x8 ]
pop ecx
sub_40d3cc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
push edi
mov edi esi
jmp r-xdata
test eax eax
jne r-xdata
push eax
call sub_40df49
lea edi [ edi + 0x4 ]
mov eax [ edi ]
pop ecx
push esi
call sub_40df49
pop ecx
pop edi
sub_40d3fb
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
lea edi [ esi + 0x4 ]
jmp r-xdata
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
push esi
call [ r--data ]
call [ ebp + 0x8 ]
pop ecx
add esi 0x4
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn 0x4
sub_40d471
push sub_40d43b
mov ecx rw-data
call sub_40d3fb
push sub_40d456
mov ecx rw-data
call sub_40d3fb
push [ rw-data ]
call sub_40d3cc
push [ rw-data ]
call sub_40d3cc
pop ecx
pop ecx
retn
sub_40d4ad
push 0xc
push r--data
call sub_406590
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_40eabe
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_40d6bf
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40d4f2
mov eax esi
call sub_4065d6
retn 0xc
sub_40d4fe
push 0xc
push r--data
call sub_406590
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_40eabe
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_40d59f
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40d543
mov eax esi
call sub_4065d6
retn 0xc
sub_40d54f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_40d4fe
mov esp ebp
pop ebp
retn
sub_40d577
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_40d4ad
mov esp ebp
pop ebp
retn
sub_40d59f
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax ecx
mov [ ebp - 0x18 ] eax
push ebx
mov eax [ eax ]
mov ebx [ eax ]
test ebx ebx
jne r-xdata
mov edx [ rw-data ]
push esi
push edi
mov edi [ ebx ]
mov esi edx
mov ebx [ ebx + 0x4 ]
and esi 0x1f
xor edi edx
mov [ ebp - 0x14 ] esi
mov ecx esi
xor ebx edx
ror edi cl
ror ebx cl
test edi edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop edi
xor eax eax
pop esi
cmp edi 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ebx
cmp edi 0xffffffff
je r-xdata
cmp [ ebx ] eax
je r-xdata
mov eax edx
xor edx edx
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
ror edx cl
mov ecx [ ebp - 0x18 ]
xor edx [ rw-data ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ eax ] edx
mov eax [ ecx ]
mov eax [ eax ]
mov [ eax + 0x4 ] edx
mov eax [ ecx ]
mov eax [ eax ]
mov [ eax + 0x8 ] edx
push edi
call sub_40df49
mov edx [ rw-data ]
pop ecx
sub ebx 0x4
cmp ebx edi
jb r-xdata
mov esi [ ebx ]
mov ecx [ ebp - 0x14 ]
xor esi edx
ror esi cl
mov ecx esi
mov [ ebx ] eax
call [ r--data ]
call esi
mov eax [ ebp - 0x18 ]
mov edx [ rw-data ]
mov esi edx
and esi 0x1f
mov [ ebp - 0x14 ] esi
mov eax [ eax ]
mov eax [ eax ]
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
xor ecx edx
mov [ ebp - 0x8 ] ecx
xor eax edx
mov ecx esi
ror [ ebp - 0x8 ] cl
ror eax cl
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0xc ] ecx
mov edi ecx
mov [ ebp - 0x10 ] eax
mov ebx eax
jmp r-xdata
push 0x20
pop ecx
cmp eax [ ebp - 0x10 ]
je r-xdata
push 0x20
pop ecx
sub ecx esi
xor eax eax
ror eax cl
xor eax edx
mov ecx [ ebp - 0x8 ]
sub_40d6bf
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax ecx
mov [ ebp - 0x8 ] eax
push esi
mov eax [ eax ]
mov esi [ eax ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov ecx eax
push ebx
mov ebx [ esi ]
and ecx 0x1f
push edi
mov edi [ esi + 0x4 ]
xor ebx eax
mov esi [ esi + 0x8 ]
xor edi eax
xor esi eax
ror edi cl
ror esi cl
ror ebx cl
cmp edi esi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push [ eax ]
call sub_4099b4
push ebx
mov [ edi ] eax
call sub_408ee9
mov ebx [ ebp - 0x8 ]
mov ecx [ ebx ]
mov ecx [ ecx ]
mov [ ecx ] eax
lea eax [ edi + 0x4 ]
push eax
call sub_408ee9
mov ecx [ ebx ]
push esi
mov ecx [ ecx ]
mov [ ecx + 0x4 ] eax
call sub_408ee9
mov ecx [ ebx ]
add esp 0x10
mov ecx [ ecx ]
mov [ ecx + 0x8 ] eax
xor eax eax
sub esi ebx
mov eax 0x200
sar esi 0x2
cmp esi eax
ja r-xdata
pop esi
mov esp ebp
pop ebp
retn
lea edi [ eax + esi ]
test edi edi
jne r-xdata
mov eax esi
cmp edi esi
jb r-xdata
push 0x20
pop edi
push 0x4
lea edi [ esi + 0x4 ]
push edi
push ebx
call sub_414061
push 0x0
mov [ ebp - 0x4 ] eax
call sub_40df49
mov ecx [ ebp - 0x4 ]
add esp 0x10
test ecx ecx
jne r-xdata
push 0x4
push edi
push ebx
call sub_414061
push 0x0
mov [ ebp - 0x4 ] eax
call sub_40df49
mov ecx [ ebp - 0x4 ]
add esp 0x10
test ecx ecx
jne r-xdata
lea eax [ ecx + esi * 4 ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
lea esi [ ecx + edi * 4 ]
mov eax [ rw-data ]
mov edi [ ebp - 0x4 ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
mov ecx edi
xor eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov eax esi
sub eax edi
add eax 0x3
shr eax 0x2
cmp esi edi
sbb edx edx
not edx
and edx eax
mov [ ebp - 0x4 ] edx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0xc ]
xor eax eax
pop edi
pop ebx
inc eax
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_40d816
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x2
call sub_40d54f
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_40d833
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn
sub_40d870
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x2
call sub_40d577
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_40d8cb
mov eax [ rw-data ]
push esi
push 0x20
and eax 0x1f
xor esi esi
pop ecx
sub ecx eax
ror esi cl
xor esi [ rw-data ]
push esi
call sub_40f658
push esi
call sub_40d9dd
push esi
call sub_4142c7
push esi
call sub_40dab5
push esi
call sub_409baa
add esp 0x14
mov al 0x1
pop esi
retn
sub_40d911
mov eax [ rw-data ]
or ecx 0xffffffff
push esi
[ eax ] ecx
jne r-xdata
push [ rw-data ]
call sub_40df49
push [ rw-data ]
xor esi esi
mov [ rw-data ] esi
call sub_40df49
push [ rw-data ]
mov [ rw-data ] esi
call sub_40df49
push [ rw-data ]
mov [ rw-data ] esi
call sub_40df49
add esp 0x10
mov [ rw-data ] esi
mov al 0x1
pop esi
retn
mov eax [ rw-data ]
mov esi rw-data
cmp eax esi
je r-xdata
push eax
call sub_40df49
pop ecx
mov [ rw-data ] esi
sub_40d988
mov edi edi
push ebp
mov ebp esp
lea eax [ ecx + 0x4 ]
mov edx eax
sub edx ecx
add edx 0x3
push esi
xor esi esi
shr edx 0x2
cmp eax ecx
sbb eax eax
not eax
and eax edx
je r-xdata
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
inc esi
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp esi eax
jne r-xdata
sub_40d9f1
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_40da35
mov esi eax
test esi esi
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn
sub_40da35
push 0xc
push r--data
call sub_406590
and [ ebp - 0x1c ] 0x0
push 0x0
call sub_40eabe
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx esi
and ecx 0x1f
xor esi [ rw-data ]
ror esi cl
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40da7e
mov eax esi
call sub_4065d6
retn
sub_40dac9
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ rw-data ]
mov ecx esi
xor esi [ rw-data ]
and ecx 0x1f
ror esi cl
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
pop ecx
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn
sub_40db27
mov edi edi
push ebx
push esi
call sub_413beb
mov esi [ rw-data ]
test esi esi
jne r-xdata
xor bl bl
mov esi rw-data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movsx eax al
push eax
call sub_413f76
pop ecx
test eax eax
je r-xdata
test bl bl
sete bl
mov eax esi
pop esi
pop ebx
retn
test bl bl
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
mov al [ esi ]
cmp al 0x20
jg r-xdata
cmp al 0x20
jg r-xdata
inc esi
sub_40db7a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
add eax 0x3
push edi
xor edi edi
shr eax 0x2
cmp [ ebp + 0xc ] esi
sbb ebx ebx
not ebx
and ebx eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
add esi 0x4
inc edi
cmp edi ebx
jne r-xdata
mov ecx eax
call [ r--data ]
call [ ebp - 0x8 ]
sub_40dbd6
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
jmp r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
xor eax eax
add esi 0x4
mov ecx edi
call [ r--data ]
call edi
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn
sub_40dc1b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
push 0x16
pop eax
pop ebp
retn
sub_40dc47
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x4000
je r-xdata
mov ecx rw-data
xchg [ ecx ] eax
xor eax eax
pop ebp
retn
cmp eax 0x8000
je r-xdata
cmp eax 0x10000
je r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
push 0x16
pop eax
pop ebp
retn
sub_40dc84
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi eax
and eax 0x3f
sar edi 0x6
imul edx eax 0x30
mov esi [ edi * 4 + rw-data ]
mov al [ esi + edx + 0x28 ]
mov bl [ esi + edx + 0x29 ]
movzx ecx al
and ecx 0x80
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x4000
je r-xdata
or al 0x80
mov [ esi + edx + 0x28 ] al
mov ecx [ edi * 4 + rw-data ]
mov [ ecx + edx + 0x29 ] 0x0
cmp ecx 0x8000
je r-xdata
test bl bl
jne r-xdata
mov eax 0x8000
jmp r-xdata
and al 0x7f
mov [ esi + edx + 0x28 ] al
jmp r-xdata
cmp ecx 0x10000
je r-xdata
xor eax eax
cmp bl 0x1
setne al
dec eax
and eax 0x30000
add eax 0x10000
mov eax 0x4000
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
or al 0x80
mov [ esi + edx + 0x28 ] al
mov eax [ edi * 4 + rw-data ]
mov [ eax + edx + 0x29 ] 0x2
jmp r-xdata
cmp ecx 0x20000
je r-xdata
cmp ecx 0x40000
jne r-xdata
or al 0x80
mov [ esi + edx + 0x28 ] al
mov eax [ edi * 4 + rw-data ]
mov [ eax + edx + 0x29 ] 0x1
jmp r-xdata
sub_40dd60
push 0x8
push r--data
call sub_406590
mov esi rw-data
cmp [ rw-data ] esi
je r-xdata
call sub_4065d6
retn
push 0x4
call sub_40eabe
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push rw-data
call sub_41506c
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40dda9
sub_40ddb2
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40f3ce
mov edx [ ebp + 0x8 ]
mov esi eax
push 0x0
pop eax
mov ecx [ esi + 0x350 ]
test cl 0x2
sete al
inc eax
cmp edx 0xffffffff
je r-xdata
or [ rw-data ] 0xffffffff
test edx edx
je r-xdata
pop esi
pop ebp
retn
cmp edx 0x1
je r-xdata
or ecx 0x2
cmp edx 0x2
je r-xdata
and ecx 0xfffffffd
jmp r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
or eax 0xffffffff
jmp r-xdata
mov [ esi + 0x350 ] ecx
jmp r-xdata
sub_40de1a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx rw-data
xchg [ ecx ] eax
pop ebp
retn
cmp eax 0x1
je r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
or eax 0xffffffff
pop ebp
retn
sub_40de54
push 0xc
push r--data
call sub_41aa80
call sub_40f3ce
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
call sub_40dfd1
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_40de90
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
and ecx 0xfff7ffff
and eax ecx
push esi
mov esi [ ebp + 0x8 ]
test eax 0xfcf0fce0
je r-xdata
push ecx
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_415245
call sub_415245
mov [ esi ] eax
jmp r-xdata
call sub_40f7a3
push 0x16
pop esi
mov [ eax ] esi
call sub_40f6e7
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_415245
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_40deef
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
je r-xdata
call sub_40f7a3
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push edi
mov edi edx
sub esi edx
mov [ edx ] 0x0
pop edi
test ecx ecx
jne r-xdata
sub ecx 0x1
jne r-xdata
xor esi esi
jmp r-xdata
mov [ edx ] cl
call sub_40f7a3
push 0x22
jmp r-xdata
mov al [ esi + edi ]
mov [ edi ] al
inc edi
test al al
je r-xdata
mov eax esi
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_40f6e7
sub_40df49
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_40f7a3
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40f72a
pop ecx
mov [ esi ] eax
pop esi
sub_40df83
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
call sub_40f7a3
mov [ eax ] 0xc
xor eax eax
test esi esi
jne r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
call sub_40de14
test eax eax
je r-xdata
jmp r-xdata
push esi
call sub_40d9f1
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
sub_40dfd1
call sub_4142b0
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_41430b
pop ecx
push 0x3
call sub_409bd7
int3
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push 0x1
push 0x40000015
push 0x3
call sub_40f51d
add esp 0xc
push 0x7
pop ecx
int 0x29
sub_40e014
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
imul esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0xc ]
jb r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
call sub_40f7a3
mov [ eax ] 0xc
xor eax eax
call sub_40de14
test eax eax
je r-xdata
jmp r-xdata
push esi
call sub_40d9f1
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
sub_40e071
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test al 0x4
je r-xdata
test al 0x1
je r-xdata
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
and eax 0x2
je r-xdata
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x80000000
ja r-xdata
cmp [ ebp + 0xc ] 0x7fffffff
ja r-xdata
sub_40e0a4
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
lea ecx [ ebp + 0xc ]
push ebx
push edi
call sub_40ea05
test al al
je r-xdata
xor ebx ebx
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ edx ] ecx
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x28 ]
call sub_40a748
mov eax [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp edi 0x2
jl r-xdata
mov bl [ eax ]
inc eax
mov [ ebp + 0xc ] eax
lea eax [ ebp - 0x24 ]
push eax
movzx eax bl
push 0x8
push eax
mov [ ebp - 0x4 ] bl
call sub_40ea4a
add esp 0xc
test eax eax
jne r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
cmp edi 0x24
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x18 ] al
setne al
mov [ ebp - 0x8 ] eax
cmp bl 0x2d
jne r-xdata
cmp bl 0x2b
jne r-xdata
or eax 0x2
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov esi [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
jmp r-xdata
mov al bl
sub al 0x30
cmp al 0x9
ja r-xdata
cmp edi 0x10
jne r-xdata
test edi edi
je r-xdata
mov al bl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx eax bl
add eax 0xffffffd0
jmp r-xdata
xor edx edx
or eax 0xffffffff
div edi
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov al bl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx eax bl
add eax 0xffffffa9
jmp r-xdata
test eax eax
je r-xdata
mov al bl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx ecx bl
add ecx 0xffffffd0
jmp r-xdata
or eax 0xffffffff
movsx eax bl
add eax 0xffffffc9
jmp r-xdata
mov al [ esi ]
inc esi
mov [ ebp - 0x10 ] al
mov [ ebp + 0xc ] esi
cmp al 0x78
je r-xdata
test edi edi
jne r-xdata
mov al bl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx ecx bl
add ecx 0xffffffa9
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
test edi edi
jne r-xdata
cmp al 0x58
je r-xdata
push 0xa
pop edi
jmp r-xdata
or ecx 0xffffffff
movsx ecx bl
add ecx 0xffffffc9
jmp r-xdata
push [ ebp - 0x4 ]
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
call sub_40e9b1
mov ebx [ ebp - 0x8 ]
test bl 0x8
jne r-xdata
cmp ecx edi
jae r-xdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
push 0x10
pop edi
test edi edi
jne r-xdata
mov esi [ ebp - 0xc ]
push esi
push ebx
call sub_40e071
pop ecx
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
xor ebx ebx
mov [ ebp + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
or edx 0x8
mov ebx [ ebp - 0x10 ]
cmp eax ebx
jb r-xdata
push [ ebp - 0x10 ]
lea ecx [ ebp + 0xc ]
call sub_40e9b1
mov esi [ ebp + 0xc ]
jmp r-xdata
push 0x8
pop edi
test bl 0x2
je r-xdata
call sub_40f7a3
mov [ eax ] 0x22
test bl 0x1
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
pop esi
je r-xdata
imul eax edi
add eax ecx
mov [ ebp - 0xc ] eax
jne r-xdata
mov ebx esi
neg esi
test bl 0x2
je r-xdata
or esi 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x28 ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
lea ecx [ ebx - 0x30 ]
cmp cl 0x9
ja r-xdata
or edx 0x4
jmp r-xdata
cmp ecx [ ebp - 0x14 ]
jbe r-xdata
mov ebx 0x7fffffff
jmp r-xdata
mov ebx 0x80000000
jmp r-xdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
jmp r-xdata
sub_40e2cc
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
lea ecx [ ebp + 0xc ]
push ebx
push edi
call sub_40ea05
test al al
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x14 ]
push 0x2
pop edi
test eax eax
je r-xdata
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ edx ] ecx
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_40a748
mov eax [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp eax edi
jl r-xdata
movzx esi [ eax ]
add eax edi
push 0x8
push esi
mov [ ebp + 0xc ] eax
call sub_4155e0
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
cmp eax 0x24
jle r-xdata
mov eax [ ebp + 0xc ]
xor ebx ebx
cmp [ ebp + 0x18 ] bl
setne bl
cmp si 0x2d
jne r-xdata
cmp si 0x2b
jne r-xdata
or ebx edi
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edi [ ebp + 0xc ]
movzx esi [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
jmp r-xdata
cmp si ax
jb r-xdata
cmp ecx edx
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x19
push 0x30
pop eax
push 0x10
pop edx
test ecx ecx
je r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
push 0x3a
pop eax
cmp si ax
jae r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov ecx eax
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
ja r-xdata
push 0x5a
pop eax
cmp si ax
jbe r-xdata
mov eax 0xff10
cmp si ax
jae r-xdata
movzx eax si
sub eax 0x30
jmp r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
push 0x3a
pop eax
cmp si ax
jae r-xdata
or eax 0xffffffff
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
movzx eax si
ja r-xdata
mov eax 0xff1a
cmp si ax
jae r-xdata
mov eax 0x660
cmp si ax
jb r-xdata
cmp eax 0xffffffff
jne r-xdata
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
ja r-xdata
push 0x5a
pop eax
cmp si ax
jbe r-xdata
mov eax 0xff10
cmp si ax
jae r-xdata
movzx eax si
sub eax 0x30
jmp r-xdata
movzx eax [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
cmp eax 0x78
je r-xdata
test ecx ecx
jne r-xdata
add eax 0xffffffc9
jmp r-xdata
sub eax 0x20
or eax 0xffffffff
movzx eax si
sub eax 0xff10
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
test eax eax
je r-xdata
or eax 0xffffffff
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
movzx eax si
ja r-xdata
mov eax 0xff1a
cmp si ax
jae r-xdata
mov eax 0x660
cmp si ax
jb r-xdata
cmp eax 0xffffffff
jne r-xdata
test ecx ecx
jne r-xdata
cmp eax 0x58
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
mov eax 0x6f0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x660
jmp r-xdata
push esi
lea ecx [ ebp + 0xc ]
call sub_40e9d9
test bl 0x8
jne r-xdata
cmp eax [ ebp + 0x14 ]
jae r-xdata
add eax 0xffffffc9
jmp r-xdata
sub eax 0x20
or eax 0xffffffff
movzx eax si
sub eax 0xff10
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
cmp eax 0xffffffff
je r-xdata
movzx esi [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
mov [ ebp + 0x14 ] edx
test ecx ecx
jne r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov esi [ ebp - 0x8 ]
push esi
push ebx
call sub_40e071
pop ecx
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0xc ]
xor ebx ebx
mov [ ebp + 0xc ] eax
jmp r-xdata
mov esi [ ebp - 0x8 ]
or ebx 0x8
cmp esi ecx
jb r-xdata
mov eax 0x6f0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x660
jmp r-xdata
push eax
lea ecx [ ebp + 0xc ]
call sub_40e9d9
mov edi [ ebp + 0xc ]
jmp r-xdata
mov [ ebp + 0x14 ] 0x8
mov eax 0x966
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x6f0
jmp r-xdata
test bl 0x2
je r-xdata
call sub_40f7a3
mov [ eax ] 0x22
test bl 0x1
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
pop esi
je r-xdata
imul esi [ ebp + 0x14 ]
add esi eax
mov [ ebp - 0x8 ] esi
jne r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov ebx esi
neg esi
test bl 0x2
je r-xdata
or esi 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
push 0x30
pop eax
cmp si ax
jb r-xdata
or ebx 0x4
jmp r-xdata
cmp eax edx
jbe r-xdata
mov eax 0x966
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x6f0
jmp r-xdata
mov eax 0x9e6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x966
jmp r-xdata
mov ebx 0x7fffffff
jmp r-xdata
mov ebx 0x80000000
jmp r-xdata
movzx esi [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x9e6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x966
jmp r-xdata
mov eax 0xa66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x9e6
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xa66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x9e6
jmp r-xdata
mov eax 0xae6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xa66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xae6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xa66
jmp r-xdata
mov eax 0xb66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xae6
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xb66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xae6
jmp r-xdata
mov eax 0xc66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xb66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xc66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xb66
jmp r-xdata
mov eax 0xce6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xc66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xce6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xc66
jmp r-xdata
mov eax 0xd66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xce6
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xd66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xce6
jmp r-xdata
mov eax 0xe50
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xd66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xe50
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xd66
jmp r-xdata
mov eax 0xed0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xe50
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xed0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xe50
jmp r-xdata
mov eax 0xf20
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xed0
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xf20
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xed0
jmp r-xdata
mov eax 0x1040
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xf20
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x1040
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xf20
jmp r-xdata
mov eax 0x17e0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x1040
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x17e0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x1040
jmp r-xdata
mov eax 0x1810
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x17e0
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x1810
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x17e0
jmp r-xdata
movzx eax si
sub eax 0x1810
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
movzx eax si
sub eax 0x1810
jmp r-xdata
sub_40e9b1
mov edi edi
push ebp
mov ebp esp
dec [ ecx ]
mov al [ ebp + 0x8 ]
mov ecx [ ecx ]
test al al
je r-xdata
pop ebp
retn 0x4
cmp [ ecx ] al
je r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
sub_40e9d9
mov edi edi
push ebp
mov ebp esp
add [ ecx ] 0xfffffffe
mov ax [ ebp + 0x8 ]
mov ecx [ ecx ]
test ax ax
je r-xdata
pop ebp
retn 0x4
cmp [ ecx ] ax
je r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
sub_40ea20
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_414941
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
mov eax [ eax ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and eax [ ebp + 0xc ]
pop ebp
retn
sub_40ea4a
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ea20
mov eax [ ecx ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41563f
jmp r-xdata
add esp 0xc
pop ebp
retn
sub_40ea7d
mov edi edi
push esi
push edi
mov edi rw-data
xor esi esi
push 0x0
call sub_40ead5
pop ecx
xor al al
inc [ rw-data ]
add esi 0x18
add edi 0x18
cmp esi 0x138
jb r-xdata
push 0x0
push 0xfa0
push edi
call sub_40ee33
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
pop edi
pop esi
retn
sub_40ead5
mov edi edi
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov al 0x1
pop esi
retn
imul eax esi 0x18
push edi
lea edi [ eax + rw-data ]
push edi
call [ DeleteCriticalSection@IAT ]
dec [ rw-data ]
sub edi 0x18
sub esi 0x1
jne r-xdata
pop edi
sub_40eb1d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
mov edx [ rw-data ]
or edi 0xffffffff
mov ecx edx
mov esi edx
and ecx 0x1f
xor esi eax
ror esi cl
cmp esi edi
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov esi [ ebp + 0x10 ]
cmp esi [ ebp + 0x14 ]
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
push [ esi ]
call sub_40ebb9
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax edx
push 0x20
and eax 0x1f
pop ecx
sub ecx eax
ror edi cl
xor edi edx
xchg [ ebx ] edi
push [ ebp + 0xc ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
add esi 0x4
cmp esi [ ebp + 0x14 ]
jne r-xdata
mov edx [ rw-data ]
push esi
call sub_408ee9
pop ecx
xchg [ ebx ] eax
jmp r-xdata
test eax eax
je r-xdata
mov edx [ rw-data ]
sub_40ebb9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push edi
lea edi [ eax * 4 + rw-data ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
push ebx
mov ebx [ eax * 4 + r--data ]
push esi
push 0x800
push 0x0
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
neg eax
sbb eax eax
and eax ecx
jmp r-xdata
mov eax esi
xchg [ edi ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
pop edi
pop ebp
retn
mov eax esi
push esi
call [ FreeLibrary@IAT ]
xor esi esi
push esi
push esi
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
jmp r-xdata
or eax 0xffffffff
xchg [ edi ] eax
xor eax eax
jmp r-xdata
test esi esi
jne r-xdata
pop esi
pop ebx
sub_40ec34
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x0
call sub_40eb1d
mov esi eax
add esp 0x10
test esi esi
je r-xdata
xor eax eax
inc eax
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn
sub_40ec82
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x3
call sub_40eb1d
mov esi eax
add esp 0x10
test esi esi
je r-xdata
call [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn 0x4
sub_40ecd8
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x4
call sub_40eb1d
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsFree@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn 0x4
sub_40ed2e
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x5
call sub_40eb1d
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsGetValue@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn 0x4
sub_40ed84
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x6
call sub_40eb1d
add esp 0x10
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsSetValue@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn 0x8
sub_40eddd
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0xf
call sub_40eb1d
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ GetSystemTimeAsFileTime@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn 0x4
sub_40ee33
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x14
call sub_40eb1d
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn 0xc
sub_40ee95
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x16
call sub_40eb1d
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_40ef1d
push eax
call [ LCMapStringW@IAT ]
push [ ebp + 0x28 ]
mov ecx esi
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn 0x24
sub_40ef1d
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x18
call sub_40eb1d
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0x8 ]
call sub_4157cd
pop ecx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn 0x8
sub_40ef79
mov eax [ rw-data ]
push edi
push 0x20
and eax 0x1f
mov edi rw-data
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
push 0x20
pop ecx
[ edi ]
mov al 0x1
pop edi
retn
sub_40ef9f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push esi
push r--data
push r--data
push r--data
push 0x8
call sub_40eb1d
mov esi eax
add esp 0x10
test esi esi
je r-xdata
xor eax eax
cmp ecx 0x1
sete al
jmp r-xdata
push 0x2
pop eax
mov ecx rw-data
xchg [ ecx ] eax
xor al al
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push 0x0
push eax
mov ecx esi
call [ r--data ]
call esi
cmp eax 0x7a
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405fe1
mov esp ebp
pop ebp
retn
xor ecx ecx
mov edx rw-data
inc ecx
xchg [ edx ] ecx
mov al 0x1
jmp r-xdata
pop esi
sub_40f026
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
push esi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jne r-xdata
cmp [ esi ] 0xffffffff
je r-xdata
cmp [ esi ] 0x0
je r-xdata
pop esi
and [ esi ] 0x0
push [ esi ]
call [ FreeLibrary@IAT ]
sub_40f05c
push 0x8
push r--data
call sub_406590
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_40eabe
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
push [ eax ]
mov eax [ ecx ]
push [ eax ]
call sub_40f383
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f0a0
call sub_4065d6
retn 0xc
sub_40f0ac
push 0x8
push r--data
call sub_406590
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_40eabe
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov ecx [ eax + 0x48 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f101
call sub_4065d6
retn 0xc
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
cmp ecx rw-data
je r-xdata
push ecx
call sub_40df49
pop ecx
sub_40f10d
push 0x8
push r--data
call sub_406590
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_40eabe
pop ecx
and [ ebp - 0x4 ] 0x0
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
push [ eax ]
call sub_40f383
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f14c
call sub_4065d6
retn 0xc
sub_40f158
push 0x8
push r--data
call sub_406590
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_40eabe
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
[ eax ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f194
call sub_4065d6
retn 0xc
sub_40f1a0
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_40f0ac
mov esp ebp
pop ebp
retn
sub_40f1c8
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_40f05c
mov esp ebp
pop ebp
retn
sub_40f1f0
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_40f10d
mov esp ebp
pop ebp
retn
sub_40f218
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_40f158
mov esp ebp
pop ebp
retn
sub_40f240
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
inc ecx
push 0x43
mov [ eax + 0x18 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] r--data
mov eax [ ebp + 0x8 ]
mov [ eax + 0x350 ] ecx
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax + 0x48 ] rw-data
mov eax [ ebp + 0x8 ]
mov [ eax + 0x6c ] cx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x172 ] cx
mov eax [ ebp + 0x8 ]
and [ eax + 0x34c ] 0x0
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x5
call sub_40f218
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x4
call sub_40f1c8
add esp 0x10
mov esp ebp
pop ebp
retn
sub_40f2b9
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn 0x4
push [ ebp + 0x8 ]
call sub_40f2da
push [ ebp + 0x8 ]
call sub_40df49
pop ecx
pop ecx
sub_40f2da
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp ecx r--data
je r-xdata
push [ eax + 0x3c ]
call sub_40df49
mov eax [ ebp + 0x8 ]
push [ eax + 0x30 ]
call sub_40df49
mov eax [ ebp + 0x8 ]
push [ eax + 0x34 ]
call sub_40df49
mov eax [ ebp + 0x8 ]
push [ eax + 0x38 ]
call sub_40df49
mov eax [ ebp + 0x8 ]
push [ eax + 0x28 ]
call sub_40df49
mov eax [ ebp + 0x8 ]
push [ eax + 0x2c ]
call sub_40df49
mov eax [ ebp + 0x8 ]
push [ eax + 0x40 ]
call sub_40df49
mov eax [ ebp + 0x8 ]
push [ eax + 0x44 ]
call sub_40df49
mov eax [ ebp + 0x8 ]
push [ eax + 0x360 ]
call sub_40df49
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x5
call sub_40f1a0
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x4
call sub_40f1f0
add esp 0x34
mov esp ebp
pop ebp
retn
push ecx
call sub_40df49
mov eax [ ebp + 0x8 ]
pop ecx
sub_40f383
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4c ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov [ esi + 0x4c ] eax
pop esi
test eax eax
je r-xdata
push [ esi + 0x4c ]
call sub_414f74
mov eax [ esi + 0x4c ]
pop ecx
cmp eax [ rw-data ]
je r-xdata
pop ebp
retn
push eax
call sub_414d2b
pop ecx
cmp eax rw-data
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
push eax
call sub_414da8
pop ecx
sub_40f3ce
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
mov esi eax
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push 0x364
push 0x1
call sub_40e014
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
push eax
call sub_40ed2e
mov edi eax
test edi edi
jne r-xdata
push edi
push [ rw-data ]
call sub_40ed84
test eax eax
jne r-xdata
push eax
push esi
call [ SetLastError@IAT ]
mov eax edi
pop edi
pop esi
retn
push rw-data
push edi
call sub_40f240
push 0x0
call sub_40df49
add esp 0xc
test edi edi
je r-xdata
push edi
jmp r-xdata
push esi
call [ SetLastError@IAT ]
call sub_40dfd1
call sub_40df49
pop ecx
jmp r-xdata
sub_40f452
mov edi edi
push ebx
push esi
push edi
call [ GetLastError@IAT ]
mov esi eax
xor ebx ebx
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push 0x364
push 0x1
call sub_40e014
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
push eax
call sub_40ed2e
mov edi eax
test edi edi
jne r-xdata
push edi
push [ rw-data ]
call sub_40ed84
test eax eax
jne r-xdata
push ebx
push esi
call [ SetLastError@IAT ]
mov ebx edi
push rw-data
push edi
call sub_40f240
push ebx
call sub_40df49
add esp 0xc
test edi edi
jne r-xdata
push edi
jmp r-xdata
push esi
call [ SetLastError@IAT ]
jmp r-xdata
call sub_40df49
pop ecx
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
retn
sub_40f4d7
push sub_40f2b9
call sub_40ec82
mov [ rw-data ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_40f452
test eax eax
jne r-xdata
xor al al
retn
mov al 0x1
retn
push eax
call sub_40f503
pop ecx
jmp r-xdata
sub_40f51d
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
push edi
je r-xdata
push 0x50
lea eax [ ebp - 0x320 ]
push 0x0
push eax
call sub_407850
push 0x2cc
lea eax [ ebp - 0x2d0 ]
push 0x0
push eax
call sub_407850
lea eax [ ebp - 0x320 ]
add esp 0x18
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x218 ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov eax [ eax - 0x4 ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x320 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x31c ] eax
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_406bbe
pop ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_405fe1
mov esp ebp
pop ebp
retn
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call sub_406bbe
pop ecx
sub_40f66c
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_40f452
test eax eax
je r-xdata
push [ ebp + 0x18 ]
mov esi [ rw-data ]
mov ecx esi
push [ ebp + 0x14 ]
xor esi [ rw-data ]
and ecx 0x1f
push [ ebp + 0x10 ]
ror esi cl
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov esi [ eax + 0x35c ]
test esi esi
je r-xdata
mov ecx esi
call [ r--data ]
call esi
mov ecx [ ebp - 0x4 ]
add esp 0x14
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn
call sub_40f6f7
int3
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
sub_40f6f7
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_40f51d
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
push 0x5
pop ecx
int 0x29
sub_40f72a
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x2d
jb r-xdata
cmp ecx [ eax * 8 + r--data ]
je r-xdata
lea eax [ ecx - 0x13 ]
cmp eax 0x11
ja r-xdata
lea eax [ ecx - 0xbc ]
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_40f76d
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40f790
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_40f72a
pop ecx
mov esi eax
call sub_40f7a3
mov [ eax ] esi
pop esi
pop ebp
retn
sub_40f7b6
push 0x10
push r--data
call sub_406590
and [ ebp - 0x1c ] 0x0
push 0x8
call sub_40eabe
pop ecx
and [ ebp - 0x4 ] 0x0
push 0x3
pop esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f84d
mov eax [ ebp - 0x1c ]
call sub_4065d6
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
mov eax [ eax + 0xc ]
shr eax 0xd
test al 0x1
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_40df49
pop ecx
mov eax [ rw-data ]
and [ eax + esi * 4 ] 0x0
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_409f08
pop ecx
cmp eax 0xffffffff
je r-xdata
inc [ ebp - 0x1c ]
sub_40f856
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
lea esi [ ecx + 0xc ]
mov eax [ esi ]
and al 0x3
cmp al 0x2
je r-xdata
mov eax [ esi ]
test al 0xc0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x4 ]
push edi
mov edi [ ecx ]
sub edi eax
mov [ ecx ] eax
and [ ecx + 0x8 ] 0x0
test edi edi
jle r-xdata
pop esi
pop ebp
retn
xor eax eax
push edi
push eax
push ecx
call sub_4102e7
pop ecx
push eax
call sub_41089d
add esp 0xc
cmp edi eax
je r-xdata
mov eax [ esi ]
shr eax 0x2
test al 0x1
je r-xdata
push 0x10
pop eax
[ esi ] eax
or eax 0xffffffff
jmp r-xdata
push 0xfffffffd
pop eax
[ esi ] eax
pop edi
sub_40f8bc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_40f856
pop ecx
test eax eax
je r-xdata
push esi
call sub_40f90c
pop ecx
jmp r-xdata
mov eax [ esi + 0xc ]
shr eax 0xb
test al 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_4102e7
push eax
call sub_4158b9
pop ecx
pop ecx
test eax eax
jne r-xdata
sub_40f90c
push 0x1c
push r--data
call sub_406590
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x24 ] 0x0
push 0x8
call sub_40eabe
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov eax [ rw-data ]
lea eax [ esi + eax * 4 ]
mov [ ebp - 0x2c ] eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f9db
cmp ebx 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov edi [ esi ]
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
call sub_4065d6
retn
mov eax [ ebp - 0x24 ]
add esi 0x4
jmp r-xdata
push edi
call sub_409d92
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0xc ]
shr eax 0xd
test al 0x1
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_40f9b1
mov eax [ ebp - 0x2c ]
cmp ebx 0x1
jne r-xdata
test ebx ebx
jne r-xdata
push edi
call sub_40f8bc
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ edi + 0xc ]
shr eax 0x1
test al 0x1
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push edi
call sub_40f8bc
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_40f9e4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0xc ]
mov eax [ edi ]
shr eax 0xd
test al 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ edi ]
shr eax 0x6
test al 0x1
je r-xdata
push [ esi + 0x4 ]
call sub_40df49
pop ecx
mov eax 0xfffffebf
[ edi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
mov [ esi + 0x8 ] eax
sub_40fa22
mov edi edi
push ebp
mov ebp esp
sub esp 0x48
lea eax [ ebp - 0x48 ]
push eax
call [ GetStartupInfoW@IAT ]
cmp [ ebp - 0x16 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
push ebx
push esi
mov esi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + esi ]
mov [ ebp - 0x4 ] eax
mov eax 0x2000
cmp esi eax
jl r-xdata
push esi
call sub_4145c2
mov eax [ rw-data ]
pop ecx
cmp esi eax
jle r-xdata
mov esi eax
push edi
xor edi edi
test esi esi
je r-xdata
mov esi eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x4 ]
inc edi
add eax 0x4
inc ebx
mov [ ebp - 0x4 ] eax
cmp edi esi
jne r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
mov dl [ ebx ]
test dl 0x1
je r-xdata
test dl 0x8
jne r-xdata
mov eax edi
mov ecx edi
and eax 0x3f
sar ecx 0x6
imul edx eax 0x30
mov eax [ ebp - 0x4 ]
add edx [ ecx * 4 + rw-data ]
mov eax [ eax ]
mov [ edx + 0x18 ] eax
mov al [ ebx ]
mov [ edx + 0x28 ] al
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
sub_40fad8
mov edi edi
push ebx
push esi
push edi
xor edi edi
mov eax edi
mov [ esi + 0x28 ] 0x81
sub eax 0x0
je r-xdata
cmp [ esi + 0x18 ] 0xfffffffe
je r-xdata
push 0xfffffff6
sub eax 0x1
je r-xdata
or [ esi + 0x28 ] 0x80
jmp r-xdata
xor eax eax
test ebx ebx
je r-xdata
push 0xfffffff5
jmp r-xdata
push 0xfffffff4
sub eax 0x1
jmp r-xdata
inc edi
cmp edi 0x3
jne r-xdata
or [ esi + 0x28 ] 0x40
mov [ esi + 0x18 ] 0xfffffffe
mov eax [ rw-data ]
test eax eax
je r-xdata
and eax 0xff
mov [ esi + 0x18 ] ebx
cmp eax 0x2
jne r-xdata
push ebx
call [ GetFileType@IAT ]
jmp r-xdata
pop eax
push eax
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov eax edi
mov ecx edi
and eax 0x3f
sar ecx 0x6
imul esi eax 0x30
add esi [ ecx * 4 + rw-data ]
cmp [ esi + 0x18 ] 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + edi * 4 ]
mov [ eax + 0x10 ] 0xfffffffe
cmp eax 0x3
jne r-xdata
or [ esi + 0x28 ] 0x40
jmp r-xdata
test eax eax
je r-xdata
or [ esi + 0x28 ] 0x8
jmp r-xdata
sub_40fb8e
push 0xc
push r--data
call sub_406590
push 0x7
call sub_40eabe
pop ecx
xor ebx ebx
mov [ ebp - 0x19 ] bl
mov [ ebp - 0x4 ] ebx
push ebx
call sub_4145c2
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fbdb
mov al bl
call sub_4065d6
retn
call sub_40fa22
call sub_40fad8
mov bl 0x1
mov [ ebp - 0x19 ] bl
sub_40fbe6
push esi
xor esi esi
add esi 0x4
cmp esi 0x200
jb r-xdata
push eax
call sub_41458d
and [ esi + rw-data ] 0x0
pop ecx
mov eax [ esi + rw-data ]
test eax eax
je r-xdata
mov al 0x1
pop esi
retn
sub_40fc10
push 0xc
push r--data
call sub_406590
xor edi edi
mov esi [ ebp + 0x8 ]
mov [ esi ] edi
push 0x8
call sub_40eabe
pop ecx
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x1c ]
push eax
call sub_40fcaa
pop ecx
mov eax [ eax ]
mov [ esi ] eax
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fc66
mov eax esi
call sub_4065d6
retn
mov [ eax + 0x8 ] edi
mov [ eax + 0x1c ] edi
mov [ eax ] edi
mov [ eax + 0x4 ] edi
or [ eax + 0x10 ] 0xffffffff
sub_40fc6f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x10 ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
add eax 0xc
xchg [ eax ] ecx
pop ebp
retn
sub_40fcaa
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ rw-data ]
push esi
push edi
mov edi [ rw-data ]
add edi 0xc
add ebx 0xfffffffd
lea ebx [ edi + ebx * 4 ]
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp edi ebx
jne r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
push 0x38
push 0x1
call sub_40e014
push 0x0
mov [ edi ] eax
call sub_40df49
mov eax [ edi ]
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
shr eax 0xd
test al 0x1
jne r-xdata
or [ eax + 0x10 ] 0xffffffff
mov eax [ edi ]
push 0x0
push 0xfa0
add eax 0x20
push eax
call sub_40ee33
mov esi [ edi ]
mov ecx 0x2000
lea eax [ esi + 0xc ]
[ eax ] ecx
push esi
call sub_409d92
pop ecx
jmp r-xdata
add edi 0x4
push esi
call sub_409d92
pop ecx
lea edx [ esi + 0xc ]
mov ebx 0x2000
mov eax [ edx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
jmp r-xdata
mov ecx eax
or ecx ebx
[ edx ] ecx
jne r-xdata
mov ebx [ ebp - 0x4 ]
shr eax 0xd
not al
test al 0x1
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
call sub_409da6
pop ecx
sub_40fd6d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
lea edi [ ebp - 0x10 ]
stosd [ edi ]
lea esi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov esi [ ebp + 0xc ]
mov [ ebx + 0x4 ] eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
xor ecx ecx
cmp al 0x61
je r-xdata
mov [ ebx ] 0x109
cmp al 0x72
je r-xdata
mov ch [ ebp - 0x1 ]
movsx eax al
cmp eax 0x53
jg r-xdata
mov [ ebx ] ecx
mov [ ebx + 0x4 ] 0x1
jmp r-xdata
cmp al 0x77
jne r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
sub eax 0x54
je r-xdata
je r-xdata
mov dl cl
mov [ ebp - 0x3 ] cl
mov ch cl
mov [ ebp - 0x4 ] cl
inc esi
mov [ ebp - 0x2 ] dl
mov [ ebp - 0x1 ] ch
mov cl 0x1
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
mov [ ebx ] 0x301
jmp r-xdata
test ch ch
jne r-xdata
push ebx
call sub_41003f
sub eax 0xe
je r-xdata
mov ch [ ebp - 0x1 ]
test dl dl
jne r-xdata
sub eax 0x20
je r-xdata
mov [ ebx + 0x4 ] 0x2
push 0x3
push r--data
push esi
call sub_415930
add esp 0xc
test eax eax
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
jmp r-xdata
push ebx
call sub_41005e
jmp r-xdata
sub eax 0x1
je r-xdata
xor cl cl
jmp r-xdata
or [ ebx ] 0x20
mov ch [ ebp - 0x1 ]
sub eax 0xb
je r-xdata
push 0x20
add esi 0x3
pop eax
jmp r-xdata
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
test ch ch
je r-xdata
mov dl [ ebp - 0x2 ]
pop ecx
mov cl al
lea eax [ ebp - 0x3 ]
push eax
push ebx
call sub_41007e
jmp r-xdata
sub eax 0xb
je r-xdata
xor eax eax
test cl cl
setne al
add esi eax
test cl cl
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_4100c2
sub eax 0x1
je r-xdata
cmp [ esi ] al
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
pop ecx
jmp r-xdata
lea eax [ ebp - 0x3 ]
push eax
push ebx
call sub_4100a0
jmp r-xdata
sub eax 0x6
jne r-xdata
mov ch 0x1
mov [ ebp - 0x1 ] ch
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
push ebx
call sub_4100f7
jmp r-xdata
push ebx
call sub_410024
jmp r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] al
je r-xdata
or [ ebx ] 0x80
mov cl 0x1
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_4159a8
add esp 0xc
test eax eax
jne r-xdata
mov ch [ ebp - 0x1 ]
test dl dl
jne r-xdata
push 0x8
push r--data
push esi
call sub_4159a8
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or [ ebx ] 0x40000
jmp r-xdata
or [ ebx ] 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_4159a8
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or [ ebx ] 0x20000
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
mov dl 0x1
mov [ ebp - 0x2 ] dl
mov cl dl
jmp r-xdata
add esi 0x7
or [ ebx ] 0x10000
jmp r-xdata
inc esi
jmp r-xdata
sub_40ff9f
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push edi
push [ ebp + 0xc ]
lea eax [ ebp - 0x1c ]
push eax
call sub_40fd6d
mov esi eax
lea edi [ ebp - 0x10 ]
pop ecx
pop ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebp - 0x8 ] 0x0
pop edi
pop esi
jne r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp - 0x4 ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
push eax
call sub_4160f6
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
add eax 0xc
mov ecx [ ebp - 0xc ]
[ eax ] ecx
mov eax [ ebp + 0x14 ]
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x14 ]
mov [ eax + 0x1c ] ecx
mov eax [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov eax [ ebp - 0x4 ]
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_410024
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
test al 0x40
je r-xdata
or eax 0x40
mov [ ecx ] eax
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_41003f
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx 0x1000
mov eax [ ecx ]
test edx eax
je r-xdata
or eax edx
mov [ ecx ] eax
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_41005e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
test eax 0xc000
je r-xdata
or eax 0x8000
mov [ ecx ] eax
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_41007e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x1
mov al 0x1
or [ ecx + 0x4 ] 0x800
pop ebp
retn
xor al al
pop ebp
retn
sub_4100a0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x1
mov al 0x1
and [ ecx + 0x4 ] 0xfffff7ff
pop ebp
retn
xor al al
pop ebp
retn
sub_4100c2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ eax ] 0x1
mov eax [ edx ]
test al 0x2
jne r-xdata
xor al al
pop ebp
retn
mov ecx [ edx + 0x4 ]
and eax 0xfffffffe
or eax 0x2
and ecx 0xfffffffc
or ecx 0x4
mov [ edx ] eax
mov [ edx + 0x4 ] ecx
mov al 0x1
pop ebp
retn
sub_4100f7
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
test eax 0xc000
je r-xdata
or eax 0x4000
mov [ ecx ] eax
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_410122
push 0xc
push r--data
call sub_406590
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_41465a
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov esi [ eax ]
mov edx esi
sar edx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
call sub_40f7a3
mov [ eax ] 0x9
or esi 0xffffffff
push esi
call sub_41024b
pop ecx
mov esi eax
jmp r-xdata
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410198
mov eax esi
call sub_4065d6
retn 0xc
sub_4101a4
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_410122
mov esp ebp
pop ebp
retn
sub_4101cc
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_40f790
and [ eax ] 0x0
call sub_40f7a3
mov [ eax ] 0x9
jmp r-xdata
call sub_40f790
and [ eax ] 0x0
call sub_40f7a3
mov [ eax ] 0x9
call sub_40f6e7
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax esi
mov edx esi
and eax 0x3f
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_4101a4
pop ecx
pop ecx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_41024b
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_4148d7
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ rw-data ]
cmp edi 0x1
jne r-xdata
xor esi esi
jmp r-xdata
cmp edi 0x2
jne r-xdata
test [ eax + 0x88 ] 0x1
jne r-xdata
push edi
call sub_414846
pop ecx
mov ecx edi
and edi 0x3f
sar ecx 0x6
imul edx edi 0x30
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edx + 0x28 ] 0x0
test esi esi
je r-xdata
push edi
call sub_4148d7
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x58 ] 0x1
je r-xdata
push 0x2
call sub_4148d7
push 0x1
mov esi eax
call sub_4148d7
pop ecx
pop ecx
cmp eax esi
je r-xdata
xor eax eax
push esi
call sub_40f76d
pop ecx
or eax 0xffffffff
jmp r-xdata
call [ GetLastError@IAT ]
mov esi eax
pop edi
pop esi
pop ebp
retn
sub_4102e7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
or eax 0xffffffff
pop ebp
retn
sub_41030d
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
push ebx
imul ebx eax 0x30
push esi
mov eax [ ecx * 4 + rw-data ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] ecx
mov eax [ eax + ebx + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
add eax edi
mov [ ebp - 0x24 ] eax
call [ GetConsoleCP@IAT ]
mov esi [ ebp + 0x8 ]
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn
mov ch [ edi ]
xor eax eax
mov [ ebp - 0x18 ] ax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x1b ] ch
mov edx [ eax * 4 + rw-data ]
mov cl [ edx + ebx + 0x2d ]
test cl 0x4
je r-xdata
call sub_414941
movzx ecx [ edi ]
mov edx 0x8000
test [ eax + ecx * 2 ] dx
je r-xdata
mov al [ edx + ebx + 0x2e ]
and cl 0xfb
mov [ ebp - 0xc ] al
lea eax [ ebp - 0xc ]
push 0x2
mov [ ebp - 0xb ] ch
mov [ edx + ebx + 0x2d ] cl
push eax
jmp r-xdata
push 0x1
push edi
cmp edi [ ebp - 0x24 ]
jae r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_4111ed
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor ecx ecx
lea eax [ ebp - 0x14 ]
push ecx
push ecx
push 0x5
push eax
push 0x1
lea eax [ ebp - 0x18 ]
inc edi
push eax
push ecx
push [ ebp - 0x38 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x34 ] eax
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
mov al [ edi ]
mov ecx [ edx * 4 + rw-data ]
mov [ ecx + ebx + 0x2e ] al
mov eax [ edx * 4 + rw-data ]
or [ eax + ebx + 0x2d ] 0x4
inc [ esi + 0x4 ]
jmp r-xdata
push 0x2
lea eax [ ebp - 0x18 ]
push edi
push eax
call sub_4111ed
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push 0x0
lea ecx [ ebp - 0x20 ]
push ecx
push eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x28 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc edi
jmp r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax [ esi + 0x8 ]
sub eax [ ebp - 0x30 ]
add eax edi
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x20 ] eax
jb r-xdata
cmp [ ebp - 0x1b ] 0xa
jne r-xdata
cmp edi [ ebp - 0x24 ]
jb r-xdata
push 0xd
pop eax
push 0x0
mov [ ebp - 0x1c ] ax
lea eax [ ebp - 0x20 ]
push eax
push 0x1
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x28 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x20 ] 0x1
jb r-xdata
inc [ esi + 0x8 ]
inc [ esi + 0x4 ]
sub_4104c0
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0xc ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
add eax edi
mov [ ebp - 0x4 ] eax
cmp edi eax
jae r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx ebx [ edi ]
push ebx
call sub_41664e
pop ecx
cmp ax bx
jne r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
add [ esi + 0x4 ] 0x2
cmp ebx 0xa
jne r-xdata
add edi 0x2
cmp edi [ ebp - 0x4 ]
jb r-xdata
push 0xd
pop ebx
push ebx
call sub_41664e
pop ecx
cmp ax bx
jne r-xdata
jmp r-xdata
inc [ esi + 0x4 ]
inc [ esi + 0x8 ]
sub_41052d
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_41643f
pop ecx
test eax eax
jne r-xdata
push edi
mov edi esi
and esi 0x3f
sar edi 0x6
imul esi esi 0x30
mov eax [ edi * 4 + rw-data ]
test [ eax + esi + 0x28 ] 0x80
je r-xdata
xor al al
jmp r-xdata
xor al al
jmp r-xdata
call sub_40f3ce
mov eax [ eax + 0x4c ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
pop edi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ edi * 4 + rw-data ]
push [ eax + esi + 0x18 ]
call [ GetConsoleMode@IAT ]
test eax eax
setne al
mov eax [ edi * 4 + rw-data ]
cmp [ eax + esi + 0x29 ] 0x0
jne r-xdata
sub_4105a3
mov edi edi
push ebp
mov ebp esp
mov eax 0x1410
call sub_41ac00
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
push ebx
mov ebx [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ eax + ecx + 0x18 ]
mov eax [ ebp + 0x14 ]
and [ esi ] 0x0
add eax ebx
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
mov [ ebp - 0x1410 ] ecx
mov [ ebp - 0x1408 ] eax
jmp r-xdata
cmp ebx eax
jb r-xdata
lea edi [ ebp - 0x1404 ]
jmp r-xdata
lea eax [ ebp - 0x1404 ]
sub edi eax
lea eax [ ebp - 0x140c ]
push 0x0
push eax
push edi
lea eax [ ebp - 0x1404 ]
push eax
push ecx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov al [ ebx ]
inc ebx
cmp al 0xa
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax [ ebp - 0x140c ]
add [ esi + 0x4 ] eax
cmp eax edi
jb r-xdata
mov [ edi ] al
lea eax [ ebp - 0x5 ]
inc edi
cmp edi eax
mov eax [ ebp - 0x1408 ]
jb r-xdata
inc [ esi + 0x8 ]
mov [ edi ] 0xd
inc edi
mov eax [ ebp - 0x1408 ]
mov ecx [ ebp - 0x1410 ]
cmp ebx eax
jae r-xdata
sub_410682
mov edi edi
push ebp
mov ebp esp
mov eax 0x1410
call sub_41ac00
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
push ebx
mov ebx [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ eax + ecx + 0x18 ]
mov eax [ ebp + 0x14 ]
add eax ebx
mov [ ebp - 0x1410 ] ecx
xor edx edx
mov [ ebp - 0x1408 ] eax
mov [ esi ] edx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
cmp ebx eax
jb r-xdata
lea edi [ ebp - 0x1404 ]
jmp r-xdata
lea eax [ ebp - 0x1404 ]
sub edi eax
lea eax [ ebp - 0x140c ]
push 0x0
push eax
and edi 0xfffffffe
lea eax [ ebp - 0x1404 ]
push edi
push eax
push ecx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx eax [ ebx ]
add ebx 0x2
cmp eax 0xa
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax [ ebp - 0x140c ]
add [ esi + 0x4 ] eax
cmp eax edi
jb r-xdata
mov [ edi ] ax
lea eax [ ebp - 0x6 ]
add edi 0x2
cmp edi eax
mov eax [ ebp - 0x1408 ]
jb r-xdata
add [ esi + 0x8 ] 0x2
push 0xd
pop edx
mov [ edi ] dx
add edi 0x2
mov eax [ ebp - 0x1408 ]
mov ecx [ ebp - 0x1410 ]
cmp ebx eax
jae r-xdata
sub_410770
mov edi edi
push ebp
mov ebp esp
mov eax 0x1418
call sub_41ac00
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
push ebx
push esi
mov eax [ eax * 4 + rw-data ]
xor ebx ebx
mov esi [ ebp + 0x8 ]
push edi
mov eax [ eax + ecx + 0x18 ]
mov ecx [ ebp + 0x10 ]
mov edi ecx
mov [ ebp - 0x1414 ] eax
mov eax [ ebp + 0x14 ]
add eax ecx
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x140c ] eax
mov [ esi + 0x8 ] ebx
cmp ecx eax
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x140c ]
lea eax [ ebp - 0x6b0 ]
push ebx
push ebx
push 0xd55
lea ecx [ ebp - 0x1408 ]
push ecx
lea ecx [ ebp - 0x6b0 ]
sub eax ecx
sar eax 0x1
push eax
mov eax ecx
push eax
push ebx
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1418 ] eax
test eax eax
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp ecx 0xa
jne r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
push 0x0
lea ecx [ ebp - 0x1410 ]
sub eax ebx
push ecx
push eax
lea eax [ ebp - 0x1408 ]
add eax ebx
push eax
push [ ebp - 0x1414 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov [ eax ] cx
add eax 0x2
lea ecx [ ebp - 0x8 ]
cmp eax ecx
jb r-xdata
push 0xd
pop edx
mov [ eax ] dx
add eax 0x2
add ebx [ ebp - 0x1410 ]
mov eax [ ebp - 0x1418 ]
cmp ebx eax
jb r-xdata
cmp edi esi
jae r-xdata
mov eax edi
sub eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
cmp edi [ ebp - 0x140c ]
jae r-xdata
xor ebx ebx
jmp r-xdata
sub_41089d
push 0x14
push r--data
call sub_406590
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_40f790
and [ eax ] 0x0
call sub_40f7a3
mov [ eax ] 0x9
jmp r-xdata
call sub_40f790
and [ eax ] 0x0
call sub_40f7a3
mov [ eax ] 0x9
call sub_40f6e7
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov [ ebp - 0x20 ] ecx
mov eax [ ebx * 4 + rw-data ]
movzx eax [ eax + ecx + 0x28 ]
and eax 0x1
je r-xdata
push esi
call sub_41465a
pop ecx
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
test [ eax + ecx + 0x28 ] 0x1
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_410988
add esp 0xc
mov edi eax
mov [ ebp - 0x1c ] edi
call sub_40f7a3
mov [ eax ] 0x9
call sub_40f790
and [ eax ] 0x0
jmp r-xdata
call sub_4065d6
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41095f
mov eax edi
jmp r-xdata
sub_410988
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x30 ] edi
test ecx ecx
jne r-xdata
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
mov eax esi
mov ebx esi
sar ebx 0x6
and eax 0x3f
imul edx eax 0x30
mov [ ebp - 0x1c ] ebx
mov eax [ ebx * 4 + rw-data ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x18 ] edx
mov bl [ eax + edx + 0x29 ]
cmp bl 0x2
je r-xdata
call sub_40f790
and [ eax ] edi
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn
mov eax ecx
not eax
test al 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x2c ]
call sub_40f790
and [ eax ] 0x0
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
jmp r-xdata
test [ eax + edx + 0x28 ] 0x20
je r-xdata
push esi
call sub_41052d
pop ecx
test al al
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_416633
add esp 0x10
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
test [ ecx + eax + 0x28 ] 0x80
je r-xdata
test bl bl
je r-xdata
pop ebx
mov eax [ ecx + eax + 0x18 ]
xor ecx ecx
push ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0x10 ]
push ecx
push [ ebp - 0x8 ]
push edi
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
movsx eax bl
sub eax 0x0
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_41030d
dec bl
cmp bl 0x1
ja r-xdata
lea esi [ ebp - 0x14 ]
call [ GetLastError@IAT ]
mov [ ebp - 0x14 ] eax
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_4105a3
jmp r-xdata
sub eax 0x1
je r-xdata
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x40
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push eax
call sub_4104c0
add esp 0xc
sub eax [ ebp - 0x20 ]
mov eax [ ebp - 0x28 ]
test eax eax
je r-xdata
add esp 0x10
jmp r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_410770
jmp r-xdata
sub eax 0x1
jne r-xdata
lea edi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
call sub_40f7a3
mov [ eax ] 0x1c
call sub_40f790
and [ eax ] 0x0
cmp [ edi ] 0x1a
jne r-xdata
mov edi [ ebp - 0x30 ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_410682
jmp r-xdata
xor eax eax
jmp r-xdata
push eax
call sub_40f76d
pop ecx
jmp r-xdata
call sub_40f7a3
mov [ eax ] 0x9
call sub_40f790
mov [ eax ] esi
jmp r-xdata
sub_410b94
mov edi edi
push ebp
mov ebp esp
push edi
push [ ebp + 0xc ]
call sub_4102e7
pop ecx
mov ecx [ ebp + 0xc ]
mov edi eax
mov ecx [ ecx + 0xc ]
test cl 0x6
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
call sub_40f7a3
mov [ eax ] 0x9
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
test al 0x1
je r-xdata
call sub_40f7a3
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop ebp
retn
mov eax [ ebp + 0xc ]
push ebx
push 0x2
pop ebx
add eax 0xc
[ eax ] ebx
mov eax [ ebp + 0xc ]
push 0xfffffff7
pop ecx
add eax 0xc
[ eax ] ecx
mov eax [ ebp + 0xc ]
and [ eax + 0x8 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
test eax 0x4c0
jne r-xdata
mov eax [ ebp + 0xc ]
and [ eax + 0x8 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
shr eax 0x3
test al 0x1
mov eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0xc ]
push [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push ebx
call sub_410ca5
pop ecx
pop ecx
test al al
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push 0x1
call sub_409d36
pop ecx
cmp esi eax
je r-xdata
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ eax ] ecx
mov eax [ ebp + 0xc ]
push 0xfffffffe
pop ecx
add eax 0xc
[ eax ] ecx
movzx eax bl
mov eax [ ebp + 0xc ]
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
or eax 0xffffffff
jmp r-xdata
push edi
call sub_41643f
pop ecx
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
push ebx
call sub_409d36
pop ecx
cmp esi eax
jne r-xdata
pop ebx
pop esi
push [ ebp + 0xc ]
call sub_416693
pop ecx
sub_410ca5
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
call sub_4102e7
pop ecx
mov ecx [ ebp + 0xc ]
mov edx eax
mov ecx [ ecx + 0xc ]
test cl 0xc0
je r-xdata
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push edx
call sub_41089d
add esp 0xc
dec eax
neg eax
sbb eax eax
inc eax
mov ecx [ ebp + 0xc ]
xor edi edi
mov eax [ ecx + 0x4 ]
mov esi [ ecx ]
sub esi eax
inc eax
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x18 ]
dec ecx
mov [ eax + 0x8 ] ecx
test esi esi
jle r-xdata
cmp edx 0xffffffff
je r-xdata
mov eax [ ebp + 0xc ]
push esi
push [ eax + 0x4 ]
push edx
call sub_41089d
add esp 0xc
mov edi eax
mov eax rw-data
cmp edx 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
xor eax eax
cmp edi esi
sete al
jmp r-xdata
push 0x2
push edi
push edi
push edx
call sub_416618
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
mov eax edx
mov ecx edx
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
mov al 0x1
jmp r-xdata
test [ eax + 0x28 ] 0x20
je r-xdata
sub_410d7c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4102e7
push eax
call sub_41643f
pop ecx
pop ecx
test eax eax
jne r-xdata
push ebx
push edi
push 0x1
call sub_409d36
pop ecx
push 0x2
pop ebx
cmp esi eax
jne r-xdata
xor al al
jmp r-xdata
push ebx
call sub_409d36
pop ecx
cmp esi eax
jne r-xdata
mov edi rw-data
jmp r-xdata
pop esi
pop ebp
retn
xor al al
mov edi rw-data
inc [ rw-data ]
lea ecx [ esi + 0xc ]
mov eax [ ecx ]
test eax 0x4c0
jne r-xdata
mov eax 0x282
[ ecx ] eax
mov eax [ edi ]
test eax eax
jne r-xdata
mov [ esi + 0x4 ] eax
mov eax [ edi ]
mov [ esi ] eax
mov [ esi + 0x8 ] 0x1000
mov [ esi + 0x18 ] 0x1000
push 0x1000
call sub_40df83
push 0x0
mov [ edi ] eax
call sub_40df49
mov eax [ edi ]
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
pop ebx
lea ecx [ esi + 0x14 ]
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] ecx
mov [ esi ] ecx
mov [ esi + 0x18 ] ebx
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_410e31
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
push edi
lea edi [ esi + 0xc ]
mov eax [ edi ]
shr eax 0x9
test al 0x1
je r-xdata
pop edi
pop esi
push esi
call sub_40f856
pop ecx
mov eax 0xfffffd7f
[ edi ] eax
xor eax eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
sub_410e6a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40a748
lea eax [ ebp - 0xc ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_40ea4a
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_410ea2
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_410e6a
pop ecx
pop ecx
pop ebp
retn
sub_410ecf
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
lea ecx [ ebp - 0x1c ]
push ebx
push [ ebp + 0x10 ]
call sub_40a748
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
xor eax eax
mov [ ebp - 0x4 ] ax
mov [ ebp - 0x2 ] al
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call sub_411019
pop ecx
pop ecx
test al al
je r-xdata
call sub_40f7a3
xor ecx ecx
mov [ eax ] 0x2a
xor eax eax
mov [ ebp - 0x4 ] bl
inc ecx
mov [ ebp - 0x3 ] al
mov eax ebx
lea ecx [ ebp - 0x18 ]
sar eax 0x8
mov [ ebp - 0xc ] eax
push ecx
movzx eax al
push eax
call sub_4166f0
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x94 ]
movzx ecx [ eax + ebx ]
je r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x10 ] al
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] al
xor eax eax
push 0x2
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] al
pop ecx
jmp r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x7 ]
shl edx 0x8
or edx eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
movzx eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
mov [ ebp - 0x8 ] ax
lea edx [ ebp - 0x8 ]
mov [ ebp - 0x6 ] al
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp + 0xc ]
push [ eax + 0xa8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_416946
add esp 0x24
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax edx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
jmp r-xdata
sub_411019
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_40ea4a
add esp 0xc
neg eax
sbb eax eax
neg eax
pop ebp
retn
sub_411050
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp eax 0x19
ja r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_411036
pop ecx
pop ecx
mov ecx eax
jmp r-xdata
mov eax ecx
pop ebp
retn
add ecx 0x20
sub_411080
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
test ecx ecx
je r-xdata
pop ebp
retn
mov [ ecx ] edx
sub_41109b
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_411080
add esp 0xc
push 0x0
call sub_40e0a4
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4110c7
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_411080
add esp 0xc
push 0x0
call sub_40e2cc
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4110f3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40a748
mov eax [ ebp - 0xc ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
movzx eax [ esi ]
push eax
call sub_4166f0
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
xor edi edi
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
inc edi
push edi
push esi
push 0x9
push [ eax + 0x8 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov edi [ ebp - 0xc ]
cmp [ edi + 0x4 ] 0x1
jle r-xdata
xor edi edi
inc edi
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_40f7a3
or edi 0xffffffff
mov [ eax ] 0x2a
cmp ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x4 ]
jl r-xdata
mov eax edi
pop edi
jmp r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
cmp [ esi + 0x1 ] 0x0
je r-xdata
jb r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push [ edi + 0x4 ]
push esi
push 0x9
push [ edi + 0x8 ]
call [ MultiByteToWideChar@IAT ]
mov edi [ ebp - 0xc ]
test eax eax
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ edi + 0x4 ]
jmp r-xdata
sub_411207
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push esi
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x14 ]
call sub_40a748
mov eax [ ebp - 0x10 ]
xor esi esi
cmp [ eax + 0xa8 ] esi
jne r-xdata
call sub_40f7a3
push 0x16
pop esi
mov [ eax ] esi
call sub_40f6e7
jmp r-xdata
xor eax eax
jmp r-xdata
and [ eax ] 0x0
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push ecx
push esi
push edi
push ebx
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push esi
push [ eax + 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov ecx eax
test ecx ecx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
mov eax esi
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp - 0x4 ] esi
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_40f7a3
push 0x2a
pop esi
mov [ eax ] esi
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x14 ]
and [ ecx + 0x350 ] 0xfffffffd
call sub_40f7a3
push 0x22
pop esi
mov [ eax ] esi
call sub_40f6e7
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] ecx
jmp r-xdata
mov [ eax ] 0x1
jmp r-xdata
mov [ ebx ] al
push edi
push esi
push ebx
call sub_407850
add esp 0xc
push edi
push esi
push ebx
call sub_407850
add esp 0xc
sub_411345
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
push esi
push edi
cmp eax 0x5
jl r-xdata
cmp eax 0x1
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edx esi
and edx 0x1f
push 0x20
pop eax
sub eax edx
neg edx
sbb edx edx
and edx eax
mov eax [ ebp + 0xc ]
cmp eax edx
jae r-xdata
mov edx [ ebp + 0x8 ]
mov ecx edx
mov eax [ ebp + 0xc ]
add eax edx
cmp edx eax
je r-xdata
mov esi [ ebp + 0x8 ]
mov edx esi
and edx 0xf
push 0x10
pop eax
sub eax edx
neg edx
sbb edx edx
and edx eax
mov eax [ ebp + 0xc ]
cmp eax edx
jae r-xdata
lea edi [ edx + esi ]
mov ecx esi
cmp esi edi
je r-xdata
mov edx eax
sub ecx edx
cmp [ ecx ] 0x0
je r-xdata
lea edi [ edx + esi ]
mov ecx esi
cmp esi edi
je r-xdata
mov edx eax
sub ecx esi
cmp ecx edx
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
inc ecx
cmp ecx eax
jne r-xdata
sub ecx esi
cmp ecx edx
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
pop edi
mov eax ecx
pop esi
pop ebp
retn
mov edi eax
add ecx esi
sub edi edx
mov eax edi
and eax 0x1f
sub edi eax
vxorps ymm1 ymm1 ymm1
add edi ecx
jmp r-xdata
inc ecx
cmp ecx edi
jne r-xdata
mov edi eax
add ecx esi
sub edi edx
pxor xmm1 xmm1
mov eax edi
and eax 0xf
sub edi eax
add edi ecx
jmp r-xdata
inc ecx
cmp ecx edi
jne r-xdata
cmp ecx edi
jne r-xdata
cmp ecx edi
jne r-xdata
vpcmpeqb ymm0 ymm1 [ ecx ]
vpmovmskb eax ymm0
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
add eax esi
jmp r-xdata
movaps xmm0 [ ecx ]
pcmpeqb xmm0 xmm1
pmovmskb eax xmm0
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
add eax esi
jmp r-xdata
add ecx 0x20
cmp ecx eax
jne r-xdata
add ecx 0x10
cmp ecx eax
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub ecx esi
vzeroupper
jmp r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub ecx esi
jmp r-xdata
inc ecx
inc ecx
sub_41146c
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
push esi
push edi
cmp eax 0x5
jl r-xdata
cmp eax 0x1
jl r-xdata
test cl 0x1
je r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
test cl 0x1
je r-xdata
mov esi ecx
and esi 0x1f
push 0x20
pop eax
sub eax esi
neg esi
sbb esi esi
and esi eax
mov eax [ ebp + 0xc ]
shr esi 0x1
cmp eax esi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
sub edx ecx
xor edi edi
mov esi ecx
and esi 0xf
push 0x10
pop eax
sub eax esi
neg esi
sbb esi esi
and esi eax
mov eax [ ebp + 0xc ]
shr esi 0x1
cmp eax esi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
lea edx [ ecx + esi * 2 ]
xor edi edi
mov [ ebp - 0x4 ] edx
mov edx ecx
cmp ecx [ ebp - 0x4 ]
je r-xdata
mov esi eax
xor edi edi
add edx 0x2
cmp edx eax
jne r-xdata
lea edx [ ecx + esi * 2 ]
xor edi edi
mov [ ebp - 0x4 ] edx
mov edx ecx
cmp ecx [ ebp - 0x4 ]
je r-xdata
mov esi eax
xor edi edi
sub edx ecx
sar edx 0x1
cmp edx esi
jne r-xdata
cmp [ edx ] di
je r-xdata
add edx 0x2
cmp edx eax
jne r-xdata
cmp [ edx ] di
je r-xdata
sub edx ecx
sar edx 0x1
cmp edx esi
jne r-xdata
cmp [ edx ] di
je r-xdata
add edx 0x2
cmp edx eax
jne r-xdata
pop edi
mov eax edx
pop esi
mov esp ebp
pop ebp
retn
lea edx [ ecx + edx * 2 ]
mov ecx eax
sub ecx esi
mov eax ecx
and eax 0x1f
sub ecx eax
vxorps ymm1 ymm1 ymm1
lea ecx [ edx + ecx * 2 ]
jmp r-xdata
add edx 0x2
cmp edx [ ebp - 0x4 ]
jne r-xdata
cmp [ edx ] di
je r-xdata
jmp r-xdata
lea edx [ ecx + edx * 2 ]
pxor xmm1 xmm1
mov ecx eax
sub ecx esi
mov eax ecx
and eax 0xf
sub ecx eax
lea ecx [ edx + ecx * 2 ]
jmp r-xdata
add edx 0x2
cmp edx [ ebp - 0x4 ]
jne r-xdata
cmp [ edx ] di
je r-xdata
jmp r-xdata
cmp edx ecx
jne r-xdata
cmp edx ecx
jne r-xdata
vpcmpeqw ymm0 ymm1 [ edx ]
vpmovmskb eax ymm0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea ecx [ eax + ecx * 2 ]
jmp r-xdata
movaps xmm0 [ edx ]
pcmpeqw xmm0 xmm1
pmovmskb eax xmm0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea ecx [ eax + ecx * 2 ]
jmp r-xdata
add edx 0x20
cmp edx ecx
jne r-xdata
add edx 0x10
cmp edx ecx
jne r-xdata
cmp [ edx ] di
je r-xdata
sub edx eax
sar edx 0x1
vzeroupper
jmp r-xdata
cmp [ edx ] di
je r-xdata
sub edx eax
jmp r-xdata
add edx 0x2
add edx 0x2
sar edx 0x1
sub_411623
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x350 ] eax
jne r-xdata
call sub_414ff5
mov [ esi ] eax
sub_411650
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x350 ] eax
jne r-xdata
call sub_413c09
mov [ esi ] eax
sub_41167d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x7ff
push ebx
push esi
xor edx edx
mov ebx [ eax ]
mov esi [ eax + 0x4 ]
mov eax esi
shr eax 0x14
and eax ecx
push edi
cmp eax ecx
jne r-xdata
xor eax eax
cmp edx edx
jne r-xdata
mov edi esi
mov eax ebx
and edi 0xfffff
or eax edi
jne r-xdata
mov ecx esi
mov eax edx
and ecx 0x80000000
or eax ecx
mov eax 0x80000
je r-xdata
inc eax
jmp r-xdata
and esi eax
or edx esi
je r-xdata
cmp ebx edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x3
jmp r-xdata
push 0x2
jmp r-xdata
cmp edi eax
jne r-xdata
pop eax
jmp r-xdata
push 0x4
sub_4116e9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov ecx [ eax + 0x4 ]
mov eax edx
and ecx 0x80000000
or eax ecx
je r-xdata
mov al dl
pop ebp
retn
inc edx
sub_411707
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
mov edi [ ebp + 0x1c ]
xor ebx ebx
test edi edi
jns r-xdata
mov esi [ ebp + 0xc ]
lea ecx [ ebp - 0x30 ]
push [ ebp + 0x28 ]
mov [ esi ] bl
call sub_40a748
lea eax [ edi + 0xb ]
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov edi ebx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov eax ecx
shr eax 0x14
and eax 0x7ff
cmp eax 0x7ff
jne r-xdata
call sub_40f7a3
push 0x22
pop edi
mov [ eax ] edi
call sub_40f6e7
jmp r-xdata
and ecx 0x80000000
mov eax ebx
or eax ecx
je r-xdata
cmp ebx ebx
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ecx [ edx + 0x4 ]
xor ebx ebx
cmp [ ebp + 0x20 ] bl
push 0x30
sete bl
mov [ ebp - 0xc ] 0x3ff
dec ebx
xor eax eax
and ebx 0xffffffe0
and ecx 0x7ff00000
add ebx 0x27
or eax ecx
mov [ ebp - 0x1c ] ebx
pop eax
jne r-xdata
mov [ esi ] 0x2d
inc esi
push ebx
push [ ebp + 0x24 ]
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
push edx
call sub_411a0a
mov edi eax
add esp 0x24
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x30 ]
and [ ecx + 0x350 ] 0xfffffffd
mov [ esi ] 0x31
inc esi
mov [ esi ] al
inc esi
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
and eax 0xfffff
or ecx eax
jne r-xdata
push 0x65
push esi
call sub_41ad60
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] bl
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ ecx ] al
mov [ ecx ] 0x0
jmp r-xdata
mov [ ebp - 0xc ] 0x3fe
jmp r-xdata
and [ ebp - 0xc ] ecx
jmp r-xdata
mov edi ebx
jmp r-xdata
cmp [ ebp + 0x20 ] bl
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] bl
and [ ebp - 0x4 ] 0x0
mov ecx 0xf0000
push 0x30
pop eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x10 ] ecx
cmp [ edx ] 0x0
jbe r-xdata
mov eax [ edx + 0x4 ]
and eax 0xfffff
mov [ ebp - 0x10 ] eax
ja r-xdata
mov ecx esi
inc esi
mov [ ebp - 0x18 ] ecx
test edi edi
jne r-xdata
test ax ax
js r-xdata
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp - 0x4 ]
and edx ecx
mov ecx [ ebp - 0x8 ]
and edx 0xfffff
movsx ecx cx
call sub_41ac30
push 0x30
pop ecx
add ax cx
movzx eax ax
cmp eax 0x39
jbe r-xdata
test edi edi
jle r-xdata
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp - 0x4 ]
and edx ecx
mov ecx [ ebp - 0x8 ]
and edx 0xfffff
movsx ecx cx
call sub_41ac30
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ esi ] al
inc esi
mov eax [ ebp - 0x4 ]
shrd eax ecx 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
shr ecx 0x4
sub eax 0x4
dec edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] eax
test ax ax
jns r-xdata
add eax ebx
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
push edi
push 0x30
pop eax
push eax
push esi
call sub_407850
add esp 0xc
add esi edi
push 0x30
lea eax [ esi - 0x1 ]
pop ebx
test edi edi
jle r-xdata
cmp [ ebp + 0x20 ] 0x0
mov cl 0x34
mov edx [ ebp + 0x8 ]
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edx ]
mov edx [ edx + 0x4 ]
call sub_41ac30
mov ecx eax
xor ebx ebx
and ecx 0x7ff
sub ecx [ ebp - 0xc ]
sbb ebx ebx
js r-xdata
mov esi eax
mov [ eax ] bl
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg ecx
adc ebx 0x0
neg ebx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
mov ebx [ ebp - 0x1c ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp esi edi
jne r-xdata
mov eax 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
test ecx ecx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
push 0x0
push 0xa
push ebx
push ecx
call sub_41aae0
add al 0x30
mov [ ebp - 0x1c ] edx
mov [ esi ] al
inc esi
test ebx ebx
jl r-xdata
push 0x0
push eax
push ebx
push ecx
call sub_41aae0
add al 0x30
mov [ ebp - 0x1c ] edx
mov [ esi ] al
inc esi
cmp esi edi
jne r-xdata
cmp ecx eax
jb r-xdata
mov edi esi
push 0x30
pop eax
mov [ esi ] al
test ebx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x30
pop eax
add cl al
xor edi edi
mov [ esi ] cl
mov [ esi + 0x1 ] 0x0
jg r-xdata
push 0x0
push 0x64
push ebx
push ecx
call sub_41aae0
add al 0x30
mov [ ebp - 0x1c ] edx
mov [ esi ] al
inc esi
test ebx ebx
jl r-xdata
cmp ecx 0xa
jb r-xdata
jg r-xdata
cmp ecx 0x64
jb r-xdata
sub_411a0a
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
push esi
mov esi [ ebp + 0x1c ]
push edi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
lea edi [ esi + 0x1 ]
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_416f2e
or ecx 0xffffffff
add esp 0x18
cmp [ ebp + 0x10 ] ecx
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push edi
mov edi [ ebp + 0xc ]
push ecx
xor ecx ecx
cmp [ ebp - 0xc ] 0x2d
sete cl
xor eax eax
test esi esi
setg al
add ecx edi
add eax ecx
push eax
call sub_416991
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
xor eax eax
cmp [ ebp - 0xc ] 0x2d
sete al
sub ecx eax
xor eax eax
test esi esi
setg al
sub ecx eax
push [ ebp + 0x28 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push [ ebp + 0x10 ]
push edi
call sub_411aa5
add esp 0x20
mov [ edi ] 0x0
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_411aa5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ ebp + 0x10 ]
test edi edi
jle r-xdata
xor eax eax
mov eax edi
jmp r-xdata
push ebx
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
call sub_40a748
mov dl [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
test dl dl
je r-xdata
call sub_40f7a3
push 0x22
pop esi
mov [ eax ] esi
call sub_40f6e7
mov eax esi
add eax 0x9
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax [ ebp + 0x1c ]
mov esi ebx
cmp [ eax ] 0x2d
jne r-xdata
mov ecx [ ebp + 0x1c ]
xor eax eax
test edi edi
setg al
push eax
xor eax eax
cmp [ ecx ] 0x2d
sete al
add eax ebx
push eax
push [ ebp + 0xc ]
push ebx
call sub_411f14
mov dl [ ebp + 0x20 ]
add esp 0x10
test edi edi
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
test dl dl
sete al
add eax edi
add esi eax
or eax 0xffffffff
cmp [ ebp + 0xc ] eax
je r-xdata
mov al [ esi + 0x1 ]
mov [ esi ] al
inc esi
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
push r--data
push eax
push esi
call sub_40deef
add esp 0xc
pop ebx
test eax eax
jne r-xdata
mov eax ebx
sub eax esi
add eax [ ebp + 0xc ]
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40f6f7
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x14 ] al
je r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ edx + 0x8 ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
cmp [ ebp + 0x18 ] 0x2
jne r-xdata
mov edx [ edx + 0x4 ]
sub edx 0x1
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
push 0x64
pop edi
cmp edx edi
jl r-xdata
neg edx
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x350 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_409440
add esp 0xc
push 0xa
pop edi
cmp edx edi
jl r-xdata
mov eax edx
cdq
idiv edi
add [ esi + 0x2 ] al
pop edi
pop esi
mov esp ebp
pop ebp
retn
add [ esi + 0x4 ] dl
mov eax edx
cdq
idiv edi
add [ esi + 0x3 ] al
sub_411bf0
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push esi
push edi
push [ ebp + 0x18 ]
lea edi [ ebp - 0xc ]
push [ ebp + 0x14 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0xc ]
mov edi [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_416f2e
or ecx 0xffffffff
add esp 0x18
cmp [ ebp + 0x10 ] ecx
je r-xdata
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
add eax edi
push eax
xor eax eax
cmp [ ebp - 0xc ] 0x2d
push ecx
sete al
add eax esi
push eax
call sub_416991
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
xor eax eax
cmp [ ebp - 0xc ] 0x2d
sete al
sub ecx eax
push [ ebp + 0x20 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
push edi
push [ ebp + 0x10 ]
push esi
call sub_411c7d
add esp 0x18
mov [ esi ] 0x0
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_411c7d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push edi
push [ ebp + 0x1c ]
call sub_40a748
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
dec ecx
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ edx ] 0x2d
mov esi ebx
jne r-xdata
cmp ecx edi
jne r-xdata
mov eax [ edx + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edx ] 0x2d
sete al
add eax ecx
mov [ eax + ebx ] 0x30
add esi eax
push 0x1
push esi
push [ ebp + 0xc ]
push ebx
call sub_411f14
add esp 0x10
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
push 0x1
push esi
push [ ebp + 0xc ]
push ebx
call sub_411f14
mov eax [ ebp - 0xc ]
add esp 0x10
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
jns r-xdata
test edi edi
jle r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
and [ eax + 0x350 ] 0xfffffffd
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov edi ecx
neg edi
mov eax ecx
neg eax
cmp eax edi
jge r-xdata
push edi
push esi
push [ ebp + 0xc ]
push ebx
call sub_411f14
push edi
push 0x30
push esi
call sub_407850
add esp 0x1c
sub_411d54
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x18 ]
xor eax eax
lea edi [ ebp - 0x10 ]
push [ ebp + 0x14 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x10 ]
mov edi [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_416f2e
mov eax [ ebp - 0xc ]
xor ecx ecx
mov ebx [ ebp + 0xc ]
add esp 0x18
cmp [ ebp - 0x10 ] 0x2d
sete cl
dec eax
mov [ ebp - 0x4 ] eax
or eax 0xffffffff
lea esi [ ecx + ebx ]
cmp [ ebp + 0x10 ] eax
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push edi
push eax
push esi
call sub_416991
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
sub eax ecx
mov eax [ ebp - 0xc ]
dec eax
cmp [ ebp - 0x4 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ ebx ] 0x0
jmp r-xdata
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push edi
push [ ebp + 0x10 ]
push ebx
call sub_411aa5
add esp 0x20
cmp eax edi
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test cl cl
je r-xdata
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push edi
push [ ebp + 0x10 ]
push ebx
call sub_411c7d
add esp 0x18
jmp r-xdata
mov al [ esi ]
inc esi
test al al
jne r-xdata
mov [ esi - 0x2 ] al
sub_411e1c
mov edi edi
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push ebx
mov bl [ ebp + 0xc ]
movzx eax bl
add eax 0x4
cmp edx eax
jae r-xdata
test bl bl
je r-xdata
push 0xc
mov [ ecx ] 0x0
pop eax
mov eax r--data
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x44 ] eax
xor ebx ebx
cmp [ ebp + 0x18 ] bl
mov [ ebp - 0x40 ] eax
mov eax r--data
mov [ ebp - 0x3c ] eax
setne bl
mov [ ebp - 0x38 ] eax
dec ebx
mov eax r--data
mov [ ebp - 0x1c ] r--data
mov [ ebp - 0x2c ] eax
and ebx 0x2
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi r--data
mov [ ebp - 0x14 ] r--data
push edi
lea edi [ eax * 4 - 0x4 ]
mov [ ebp - 0x34 ] esi
lea eax [ edi + ebx ]
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] r--data
mov esi [ ebp + eax * 4 - 0x44 ]
lea eax [ esi + 0x1 ]
mov [ ebp - 0x48 ] eax
mov [ ecx ] 0x2d
inc ecx
dec edx
mov [ ecx ] 0x0
mov al [ esi ]
inc esi
test al al
jne r-xdata
sub esi [ ebp - 0x48 ]
cmp esi edx
sbb eax eax
inc edi
add eax edi
add eax ebx
push [ ebp + eax * 4 - 0x44 ]
push edx
push ecx
call sub_40deef
add esp 0xc
pop edi
pop esi
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40f6f7
int3
sub_411f14
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
test edx edx
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0x10 ]
mov ecx esi
push edi
lea edi [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
lea eax [ ecx + 0x1 ]
push eax
lea eax [ esi + edx ]
push esi
push eax
call sub_409440
add esp 0xc
pop edi
pop esi
sub_411f48
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
call sub_40f7a3
push 0x16
pop esi
mov [ eax ] esi
call sub_40f6e7
mov eax esi
jmp r-xdata
call sub_40f7a3
push 0x16
pop esi
mov [ eax ] esi
call sub_40f6e7
mov eax esi
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
pop ebx
cmp [ ebp + 0x18 ] 0x0
ja r-xdata
mov esi [ ebp + 0x1c ]
cmp esi 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x1
cmp esi 0x45
je r-xdata
mov eax [ ebp + 0x24 ]
and eax 0x10
or eax 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_41167d
mov [ ebp - 0x8 ] eax
pop ecx
test eax eax
je r-xdata
cmp esi 0x46
je r-xdata
push 0x2
push 0x3
jmp r-xdata
push [ ebp - 0x4 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_4116e9
pop ecx
movzx eax al
push eax
push [ ebp - 0x8 ]
call sub_411e1c
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
cmp esi 0x47
jne r-xdata
sub esi 0x65
je r-xdata
pop eax
cmp esi 0x61
jg r-xdata
mov eax [ ebp + 0x24 ]
and eax 0x8
or eax 0x0
jne r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_411a0a
sub esi 0x1
je r-xdata
push [ ebp + 0x2c ]
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_411707
jmp r-xdata
sub esi 0x41
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_411bf0
add esp 0x1c
jmp r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_411d54
jmp r-xdata
add esp 0x24
sub esi 0x4
jmp r-xdata
push [ ebp + 0x2c ]
je r-xdata
sub_412092
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub [ edx + 0x8 ] 0x1
jns r-xdata
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] cl
inc [ edx ]
movzx eax cl
pop ebp
retn
push edx
push [ ebp + 0x8 ]
call sub_410d71
pop ecx
pop ecx
pop ebp
retn
sub_4120d0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
and eax 0x3f
mov edx [ ebp + 0xc ]
push ebx
sar ecx 0x6
push esi
push edi
imul edi eax 0x30
mov eax [ ecx * 4 + rw-data ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + edi + 0x18 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
and [ eax + edi + 0x28 ] 0xfb
cmp [ edx ] 0xa
jne r-xdata
sub esi edx
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ edx + 0x1 ]
or [ eax + edi + 0x28 ] 0x4
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + edi + 0x28 ]
test al 0x40
jne r-xdata
cmp cl 0xd
je r-xdata
lea eax [ edx + ecx ]
mov ebx edx
mov [ ebp - 0x8 ] eax
mov esi edx
cmp edx eax
jae r-xdata
mov cl [ ebx ]
mov [ esi ] cl
inc esi
or al 0x2
mov [ ecx + edi + 0x28 ] al
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp eax ecx
jae r-xdata
mov [ esi ] cl
inc esi
inc ebx
inc eax
jmp r-xdata
inc ebx
inc eax
push 0x0
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
push [ ebp - 0x14 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov [ esi ] 0xd
inc esi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov [ esi ] 0xd
inc esi
inc ebx
inc eax
jmp r-xdata
add ebx 0x2
mov [ esi ] 0xa
add eax 0x2
inc esi
jmp r-xdata
mov cl [ ebx ]
cmp cl 0x1a
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov eax [ ecx * 4 + rw-data ]
test [ eax + edi + 0x28 ] 0x48
je r-xdata
cmp ebx ecx
jb r-xdata
cmp [ ebp - 0x1 ] 0xa
jne r-xdata
mov dl [ ebp - 0x1 ]
cmp dl 0xa
jne r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_416633
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov edx [ ebp + 0xc ]
cmp esi edx
jne r-xdata
mov [ esi ] 0xd
mov eax [ ecx * 4 + rw-data ]
mov [ eax + edi + 0x2a ] dl
jmp r-xdata
mov [ esi ] dl
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ esi ] 0xa
inc esi
jmp r-xdata
mov eax [ ebp - 0xc ]
sub_412227
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
and eax 0x3f
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
sar ecx 0x6
imul edi eax 0x30
mov [ ebp - 0x8 ] ecx
push 0xa
mov eax [ ecx * 4 + rw-data ]
pop ebx
mov edx [ eax + edi + 0x18 ]
mov [ ebp - 0x14 ] edx
mov edx [ ebp + 0xc ]
test esi esi
je r-xdata
and [ eax + edi + 0x28 ] 0xfb
cmp [ edx ] bx
jne r-xdata
sub esi edx
and esi 0xfffffffe
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ edx + 0x2 ]
or [ eax + edi + 0x28 ] 0x4
jmp r-xdata
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + edi + 0x28 ]
test al 0x40
jne r-xdata
push 0xd
pop edx
cmp [ ebp - 0xc ] dx
mov edx [ ebp + 0xc ]
je r-xdata
lea eax [ edx + esi * 2 ]
mov ebx edx
mov [ ebp - 0x10 ] eax
mov esi edx
cmp edx eax
jae r-xdata
mov cx [ ebx ]
mov [ esi ] cx
add esi 0x2
or al 0x2
mov [ ecx + edi + 0x28 ] al
jmp r-xdata
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov ecx [ ebp - 0xc ]
add ebx 0x2
mov [ esi ] cx
add esi 0x2
add eax 0x2
jmp r-xdata
add eax 0x2
add ebx 0x2
push 0x0
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x14 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push 0xa
pop edx
cmp [ eax ] dx
mov edx [ ebp + 0xc ]
jne r-xdata
cmp ebx [ ebp - 0x10 ]
jb r-xdata
push 0xd
pop eax
mov [ esi ] ax
add esi 0x2
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0xd
pop edx
mov [ esi ] dx
add ebx 0x2
add esi 0x2
add eax 0x2
jmp r-xdata
push 0xa
pop ecx
add ebx 0x4
mov [ esi ] cx
add eax 0x4
add esi 0x2
jmp r-xdata
movzx ecx [ ebx ]
mov [ ebp - 0xc ] ecx
cmp ecx 0x1a
mov ecx [ ebp - 0x8 ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push 0xa
mov eax [ ecx * 4 + rw-data ]
test [ eax + edi + 0x28 ] 0x48
pop eax
je r-xdata
mov edx [ ebp + 0xc ]
cmp [ ebp - 0x4 ] ax
jne r-xdata
mov dx [ ebp - 0x4 ]
cmp dx ax
jne r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_416633
add esp 0x10
push 0xa
pop eax
cmp [ ebp - 0x4 ] ax
je r-xdata
mov edx [ ebp + 0xc ]
cmp esi edx
jne r-xdata
push 0xd
pop eax
mov [ esi ] ax
mov eax [ ecx * 4 + rw-data ]
push 0xa
mov [ eax + edi + 0x2a ] dl
mov eax [ ecx * 4 + rw-data ]
mov [ eax + edi + 0x2b ] dh
mov eax [ ecx * 4 + rw-data ]
pop edx
mov [ eax + edi + 0x2c ] dl
jmp r-xdata
mov [ esi ] ax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ esi ] ax
add esi 0x2
mov eax [ ebp - 0xc ]
jmp r-xdata
sub_4123e7
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
call sub_4120d0
mov ecx eax
add esp 0xc
test ecx ecx
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
and eax 0x3f
sar edx 0x6
push edi
imul edi eax 0x30
mov [ ebp - 0x4 ] edx
mov eax [ edx * 4 + rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ eax + edi + 0x29 ] 0x0
jne r-xdata
push esi
lea esi [ ebx - 0x1 ]
add esi ecx
mov al [ esi ]
test al al
js r-xdata
mov eax ecx
jmp r-xdata
xor edx edx
movzx eax al
inc edx
jmp r-xdata
inc esi
jmp r-xdata
pop edi
cmp [ eax + rw-data ] 0x0
je r-xdata
push [ ebp + 0x18 ]
sub esi ebx
push [ ebp + 0x14 ]
push esi
push ebx
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov edx eax
test edx edx
jne r-xdata
cmp edx 0x4
ja r-xdata
mov cl [ esi ]
movzx eax cl
movsx eax [ eax + rw-data ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp edx esi
mov ecx [ eax * 4 + rw-data ]
setne al
add al al
xor al [ ecx + edi + 0x2d ]
and al 0x2
xor [ ecx + edi + 0x2d ] al
lea eax [ edx + edx ]
call [ GetLastError@IAT ]
push eax
call sub_40f76d
pop ecx
cmp esi ebx
jb r-xdata
inc eax
cmp eax edx
jne r-xdata
call sub_40f7a3
mov [ eax ] 0x2a
jmp r-xdata
pop esi
dec esi
inc edx
movzx eax [ esi ]
mov eax [ ebp - 0x8 ]
test [ eax + edi + 0x28 ] 0x48
je r-xdata
add esi edx
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
neg edx
mov eax edx
push 0x1
cdq
push edx
push eax
push [ ebp + 0x8 ]
call sub_416633
add esp 0x10
inc esi
mov [ eax + edi + 0x2a ] cl
cmp edx 0x2
jb r-xdata
cmp edx 0x3
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov al [ esi ]
inc esi
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edi + 0x2b ] al
sub esi edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax * 4 + rw-data ]
mov al [ esi ]
inc esi
mov [ ecx + edi + 0x2c ] al
sub_412537
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi edi
lea edx [ edi + eax * 2 ]
mov eax edi
cmp edi edx
jae r-xdata
sub esi edi
and esi 0xfffffffe
pop edi
mov eax esi
pop esi
pop ebp
retn
lea ecx [ edi + 0x2 ]
push ebx
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul edx eax 0x30
mov ecx [ ecx * 4 + rw-data ]
or [ ecx + edx + 0x28 ] 0x2
cmp ebx 0xd
jne r-xdata
mov [ esi ] bx
add eax 0x2
add esi 0x2
add ecx 0x2
cmp ecx edx
jae r-xdata
movzx ebx [ eax ]
cmp ebx 0x1a
je r-xdata
jmp r-xdata
push 0xa
pop edi
cmp [ ecx ] di
mov edi [ ebp + 0xc ]
jne r-xdata
pop ebx
push 0xa
pop ebx
add eax 0x4
mov [ esi ] bx
add ecx 0x4
add esi 0x2
jmp r-xdata
cmp eax edx
jb r-xdata
sub_4125b8
push 0x14
push r--data
call sub_406590
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_40f790
and [ eax ] 0x0
call sub_40f7a3
mov [ eax ] 0x9
jmp r-xdata
call sub_40f790
and [ eax ] 0x0
call sub_40f7a3
mov [ eax ] 0x9
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov [ ebp - 0x20 ] ecx
mov eax [ ebx * 4 + rw-data ]
movzx eax [ eax + ecx + 0x28 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
add eax 0x1
jne r-xdata
push esi
call sub_41465a
pop ecx
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
test [ eax + ecx + 0x28 ] 0x1
jne r-xdata
call sub_40f790
and [ eax ] 0x0
call sub_40f7a3
mov [ eax ] 0x16
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4126cb
add esp 0xc
mov edi eax
mov [ ebp - 0x1c ] edi
call sub_40f7a3
mov [ eax ] 0x9
call sub_40f790
and [ eax ] 0x0
jmp r-xdata
call sub_40f6e7
call sub_4065d6
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4126a2
mov eax edi
jmp r-xdata
sub_4126cb
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_40f790
and [ eax ] 0x0
call sub_40f7a3
mov [ eax ] 0x9
jmp r-xdata
call sub_40f790
and [ eax ] 0x0
call sub_40f7a3
mov [ eax ] 0x9
cmp ebx [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax ebx
mov [ ebp - 0x14 ] 0x1
and eax 0x3f
mov edi ebx
sar edi 0x6
imul edx eax 0x30
mov [ ebp - 0x10 ] edi
mov eax [ edi * 4 + rw-data ]
mov [ ebp - 0x18 ] edx
mov cl [ edx + eax + 0x28 ]
mov [ ebp - 0x1 ] cl
test cl 0x1
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx 0x7fffffff
jbe r-xdata
test ecx ecx
je r-xdata
call sub_40f790
and [ eax ] 0x0
call sub_40f7a3
mov [ eax ] 0x16
jmp r-xdata
xor eax eax
jmp r-xdata
test [ ebp - 0x1 ] 0x2
jne r-xdata
call sub_40f6e7
pop edi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
push esi
mov esi [ edx + eax + 0x18 ]
mov al [ edx + eax + 0x29 ]
mov [ ebp - 0x1 ] al
mov [ ebp - 0x1c ] esi
xor esi esi
movsx eax al
sub eax 0x1
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax ecx
not eax
test dl al
jne r-xdata
sub eax 0x1
jne r-xdata
push 0x4
pop eax
shr ecx 0x1
mov [ ebp - 0xc ] eax
cmp ecx eax
jb r-xdata
call sub_40f790
and [ eax ] esi
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax ecx
not eax
test al 0x1
je r-xdata
push eax
call sub_40df83
push 0x0
mov esi eax
call sub_40df49
push 0x0
call sub_40df49
add esp 0xc
mov [ ebp - 0x8 ] esi
test esi esi
jne r-xdata
mov eax ecx
mov [ ebp - 0xc ] ecx
or edi 0xffffffff
mov ebx [ ebp - 0x10 ]
xor edi edi
mov [ ebp - 0x24 ] eax
mov ebx [ ebx * 4 + rw-data ]
mov [ ebp - 0x20 ] ebx
test [ edx + ebx + 0x28 ] 0x48
mov ebx [ ebp + 0x8 ]
je r-xdata
push [ ebp - 0x14 ]
push 0x0
push 0x0
push ebx
call sub_416633
mov ecx [ edi * 4 + rw-data ]
add esp 0x10
mov edi [ ebp - 0x18 ]
mov [ edi + ecx + 0x20 ] eax
mov eax esi
mov [ edi + ecx + 0x24 ] edx
mov edx edi
mov ecx [ ebp - 0xc ]
call sub_40f7a3
mov [ eax ] 0xc
call sub_40f790
mov [ eax ] 0x8
jmp r-xdata
push ebx
call sub_41643f
pop ecx
test eax eax
je r-xdata
mov ebx [ ebp - 0x20 ]
mov bl [ edx + ebx + 0x2a ]
mov [ ebp - 0x2 ] bl
cmp bl 0xa
mov ebx [ ebp + 0x8 ]
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x28 ] 0x80
je r-xdata
test ecx ecx
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop edi
cmp eax edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ ebp - 0x20 ] ecx
ja r-xdata
lea eax [ ebp - 0x28 ]
push eax
push [ ebp - 0x1c ]
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
mov bl [ ebp - 0x2 ]
mov edi [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
mov ebx [ ebp + 0x8 ]
dec ecx
cmp [ ebp - 0x1 ] 0x0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov eax [ eax * 4 + rw-data ]
mov [ edx + eax + 0x2a ] 0xa
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_40f7a3
mov [ eax ] 0x9
call sub_40f790
mov [ eax ] edi
jmp r-xdata
add edi [ ebp - 0x20 ]
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
mov al [ edx + eax + 0x2b ]
mov [ ebp - 0x2 ] al
cmp al 0xa
je r-xdata
push eax
call sub_40f76d
pop ecx
xor edi edi
jmp r-xdata
push esi
call sub_40df49
pop ecx
mov eax edi
pop esi
jmp r-xdata
cmp [ ebp - 0x1 ] 0x2
je r-xdata
push 0x0
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x1c ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push 0x0
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x1c ]
call [ ReadConsoleW@IAT ]
test eax eax
jne r-xdata
test ecx ecx
je r-xdata
shr edi 0x1
cmp [ ebp - 0x14 ] 0x0
push edi
push [ ebp - 0x24 ]
push ebx
je r-xdata
shr ecx 0x1
push ecx
push [ ebp + 0xc ]
push edi
push [ ebp - 0x8 ]
push ebx
call sub_4123e7
add esp 0x14
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x10 ]
lea edi [ edi + eax * 2 ]
jmp r-xdata
call [ GetLastError@IAT ]
mov eax [ ebp - 0x8 ]
mov bl [ ebp - 0x2 ]
push 0x2
pop edi
mov [ eax ] bl
inc eax
mov ebx [ ebp + 0x8 ]
dec ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov eax [ eax * 4 + rw-data ]
mov [ edx + eax + 0x2b ] 0xa
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x14 ]
jne r-xdata
call sub_412227
jmp r-xdata
call sub_412537
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov eax [ eax * 4 + rw-data ]
test [ edx + eax + 0x28 ] 0x80
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
mov al [ edx + eax + 0x2c ]
mov [ ebp - 0x2 ] al
cmp al 0xa
je r-xdata
add esp 0xc
jmp r-xdata
mov edi eax
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
mov bl [ ebp - 0x2 ]
push 0x3
pop edi
mov [ eax ] bl
inc eax
mov ebx [ ebp + 0x8 ]
dec ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov eax [ eax * 4 + rw-data ]
mov [ edx + eax + 0x2c ] 0xa
sub_412a80
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
push ebx
xor ebx ebx
shr eax 0xd
inc ebx
test bl al
je r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
or eax 0xffffffff
jmp r-xdata
or eax 0xffffffff
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
shr eax 0xc
test bl al
jne r-xdata
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
shr eax 0x1
test bl al
mov eax [ ebp + 0x8 ]
je r-xdata
add eax 0xc
[ eax ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
test eax 0x4c0
jne r-xdata
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ eax ] ecx
mov esi [ ebp + 0x8 ]
push [ esi + 0x18 ]
push [ esi + 0x4 ]
push esi
call sub_4102e7
pop ecx
push eax
call sub_4125b8
mov [ esi + 0x8 ] eax
add esp 0xc
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
push [ ebp + 0x8 ]
call sub_416693
pop ecx
xor ecx ecx
test edx edx
setne cl
add eax 0xc
lea ecx [ ecx * 8 + 0x8 ]
[ eax ] ecx
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x8 ] 0x0
cmp edx 0xffffffff
je r-xdata
mov eax [ eax + 0xc ]
test al 0x6
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x200
jne r-xdata
push [ ebp + 0x8 ]
call sub_4102e7
pop ecx
cmp eax 0xffffffff
je r-xdata
dec [ eax + 0x8 ]
mov ecx [ eax ]
mov dl [ ecx ]
inc ecx
mov [ eax ] ecx
movzx eax dl
jmp r-xdata
mov eax [ eax + 0xc ]
shr eax 0x6
test bl al
je r-xdata
mov eax rw-data
push [ ebp + 0x8 ]
call sub_4102e7
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
shr eax 0x8
test bl al
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x20
pop ecx
add eax 0xc
[ eax ] ecx
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_4102e7
mov edi eax
push esi
sar edi 0x6
call sub_4102e7
and eax 0x3f
imul eax eax 0x30
pop ecx
pop ecx
add eax [ edi * 4 + rw-data ]
pop edi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x1000
mov al [ eax + 0x28 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_412c3e
pextrw eax xmm0 0x3
and ax 0x7fff
sub ax 0x3820
cmp ax 0x8a8
ja r-xdata
jg r-xdata
unpcklpd xmm0 xmm0
movapd xmm1 [ r--data ]
mulpd xmm1 xmm0
cvtsd2si edx xmm1
movapd xmm2 [ r--data ]
addpd xmm1 xmm2
movapd xmm3 [ r--data ]
subpd xmm1 xmm2
movlpd xmm5 [ r--data ]
add edx 0x72900
movapd xmm4 [ r--data ]
mulpd xmm3 xmm1
and edx 0x1f
mulsd xmm5 xmm1
mov ecx edx
mulpd xmm4 xmm1
shl ecx 0x1
subpd xmm0 xmm3
mulpd xmm1 [ r--data ]
add edx ecx
shl ecx 0x2
add edx ecx
addsd xmm5 xmm0
movapd xmm2 xmm0
subpd xmm0 xmm4
movlpd xmm6 [ r--data ]
shl edx 0x4
lea eax [ r--data ]
andpd xmm5 [ r--data ]
movapd xmm3 xmm0
add eax edx
subpd xmm2 xmm0
unpckhpd xmm0 xmm0
divsd xmm6 xmm5
subpd xmm2 xmm4
movapd xmm7 [ eax + 0x10 ]
subsd xmm3 xmm5
mulpd xmm7 xmm0
subpd xmm2 xmm1
movapd xmm1 [ eax + 0x30 ]
mulpd xmm1 xmm0
movapd xmm4 [ eax + 0x60 ]
mulpd xmm4 xmm0
addsd xmm2 xmm3
movapd xmm3 xmm0
mulpd xmm0 xmm0
addpd xmm7 [ eax ]
addpd xmm1 [ eax + 0x20 ]
mulpd xmm1 xmm0
addpd xmm4 [ eax + 0x50 ]
addpd xmm7 xmm1
movapd xmm1 [ eax + 0x70 ]
mulpd xmm1 xmm0
mulpd xmm0 xmm0
addpd xmm4 xmm1
movapd xmm1 [ eax + 0x40 ]
mulpd xmm1 xmm0
addpd xmm7 xmm1
movapd xmm1 xmm3
mulpd xmm3 xmm0
mulsd xmm0 xmm0
mulpd xmm1 [ eax + 0x90 ]
mulpd xmm4 xmm3
movsd xmm3 xmm1
addpd xmm7 xmm4
movsd xmm4 xmm1
mulsd xmm0 xmm7
unpckhpd xmm7 xmm7
addsd xmm0 xmm7
unpckhpd xmm1 xmm1
addsd xmm3 xmm1
subsd xmm4 xmm3
addsd xmm1 xmm4
movsd xmm4 xmm2
movlpd xmm7 [ eax + 0x90 ]
unpckhpd xmm2 xmm2
addsd xmm7 [ eax + 0x98 ]
mulsd xmm7 xmm2
addsd xmm7 [ eax + 0x88 ]
addsd xmm7 xmm1
addsd xmm0 xmm7
movlpd xmm7 [ r--data ]
mulsd xmm4 xmm6
movlpd xmm2 [ eax + 0xa8 ]
andpd xmm2 xmm6
mulsd xmm5 xmm2
mulsd xmm6 [ eax + 0xa0 ]
subsd xmm7 xmm5
subsd xmm2 [ eax + 0x80 ]
subsd xmm7 xmm4
mulsd xmm7 xmm6
movsd xmm4 xmm3
subsd xmm3 xmm2
addsd xmm2 xmm3
subsd xmm4 xmm2
addsd xmm0 xmm4
subsd xmm0 xmm7
sub esp 0x10
addsd xmm0 xmm3
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
jmp r-xdata
sub esp 0x10
shr ax 0x4
cmp ax 0xc7e
jne r-xdata
lea edx [ esp + 0x4 ]
call sub_4130c5
movlpd xmm3 [ r--data ]
mulsd xmm3 xmm0
addsd xmm3 xmm0
mulsd xmm3 [ r--data ]
movlpd [ esp + 0x4 ] xmm3
fld [ esp + 0x4 ]
add esp 0x10
retn
movsd xmm3 xmm0
mulsd xmm3 [ r--data ]
sub_412e7b
jmp r-xdata
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx r--data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fwait
mov cl [ ebp - 0x9f ]
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_412ff4
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x1
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x0
jmp r-xdata
faddp st1
retn
sub_4130c5
mov eax [ edx + 0x4 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ edx + 0x4 ]
sub esp 0xa
or eax 0x7fff0000
mov [ esp + 0x6 ] eax
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
shld eax ecx 0xb
shl ecx 0xb
mov [ esp + 0x4 ] eax
mov [ esp ] ecx
fld [ esp ]
add esp 0xa
test eax 0x0
mov eax [ edx + 0x4 ]
retn
fld [ edx ]
retn
sub_413155
sub esp 0x8
fst [ esp ]
mov eax [ esp + 0x4 ]
add esp 0x8
and eax 0x7ff00000
jmp r-xdata
cmp eax 0x7ff00000
je r-xdata
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
mov eax 0x3
jbe r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
cmp edx 0x1d
je r-xdata
fmul [ r--data ]
jmp r-xdata
pop edx
retn
and ax 0x20
jne r-xdata
call sub_413210
pop edx
retn
call sub_413227
pop edx
retn
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
sub_413210
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_4182ca
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_413227
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_4182ca
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_413263
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x8 ]
jbe r-xdata
sbb eax eax
neg eax
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
sub_41327b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x20
push esi
test eax eax
jne r-xdata
mov esi [ ebp + 0x8 ]
xor ecx ecx
push ebx
push edi
mov [ eax ] ecx
mov edi ecx
mov ebx ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ecx
cmp [ esi ] ecx
je r-xdata
call sub_40f7a3
push 0x16
pop esi
mov [ eax ] esi
call sub_40f6e7
mov eax esi
jmp r-xdata
and [ ebp - 0x8 ] 0x0
mov eax ebx
sub eax edi
mov [ ebp - 0x4 ] ecx
mov edx eax
add eax 0x3
sar edx 0x2
inc edx
shr eax 0x2
cmp ebx edi
mov [ ebp - 0xc ] edx
sbb esi esi
not esi
and esi eax
je r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0x3f2a
push eax
push [ esi ]
mov [ ebp - 0x2 ] cl
call sub_418920
pop ecx
pop ecx
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
push 0x1
push [ ebp - 0x4 ]
push edx
call sub_40d242
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov edx edi
mov ebx ecx
lea ecx [ ebp - 0x20 ]
push ecx
push eax
push [ esi ]
call sub_4134a1
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push [ esi ]
call sub_41340b
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0xc ]
lea eax [ esi + eax * 4 ]
mov [ ebp - 0x10 ] eax
mov edx eax
mov [ ebp - 0xc ] edx
cmp edi ebx
je r-xdata
or edi 0xffffffff
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx [ ebp - 0x4 ]
inc ebx
mov eax [ ebp - 0x8 ]
add ebx ecx
add edx 0x4
inc eax
mov [ ebp - 0x8 ] eax
cmp eax esi
jne r-xdata
lea ecx [ ebp - 0x20 ]
call sub_413625
mov eax edi
pop edi
pop ebx
add esi 0x4
xor ecx ecx
cmp [ esi ] ecx
jne r-xdata
mov edi eax
test edi edi
jne r-xdata
mov eax [ ebp + 0xc ]
xor edi edi
mov [ eax ] esi
mov eax esi
sub eax edi
mov [ ebp - 0x14 ] eax
push 0x0
call sub_40df49
pop ecx
mov ecx [ edx ]
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp - 0x1c ]
mov ebx [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx [ ebp - 0x8 ]
lea eax [ ecx + 0x1 ]
push eax
push [ edi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
sub eax edx
add eax [ ebp - 0x4 ]
push eax
push edx
call sub_41890b
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40f6f7
int3
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov [ eax + edi ] edx
add edi 0x4
add edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
cmp edi ebx
jne r-xdata
mov ecx [ edi ]
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x8 ] eax
sub_41340b
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
or eax 0xffffffff
push edi
mov edi [ ebp + 0x10 ]
inc ecx
sub eax edi
mov [ ebp - 0x4 ] ecx
cmp ecx eax
jbe r-xdata
push ebx
push esi
lea ebx [ edi + 0x1 ]
add ebx ecx
push 0x1
push ebx
call sub_40e014
mov esi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push 0xc
pop eax
jmp r-xdata
push [ ebp - 0x4 ]
sub ebx edi
lea eax [ esi + edi ]
push [ ebp + 0x8 ]
push ebx
push eax
call sub_41890b
add esp 0x10
test eax eax
jne r-xdata
push edi
push [ ebp + 0xc ]
push ebx
push esi
call sub_41890b
add esp 0x10
test eax eax
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40f6f7
int3
mov ecx [ ebp + 0x14 ]
push esi
call sub_41364a
push 0x0
mov esi eax
call sub_40df49
pop ecx
mov eax esi
pop esi
pop ebx
sub_4134a1
mov edi edi
push ebp
mov ebp esp
sub esp 0x150
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov [ ebp - 0x148 ] esi
jmp r-xdata
cmp ecx ebx
jne r-xdata
mov al [ ecx ]
cmp al 0x2f
je r-xdata
mov dl [ ecx ]
cmp dl 0x3a
jne r-xdata
cmp al 0x5c
je r-xdata
xor edi edi
cmp dl 0x2f
je r-xdata
lea eax [ ebx + 0x1 ]
cmp ecx eax
je r-xdata
cmp al 0x3a
je r-xdata
xor eax eax
inc eax
cmp dl 0x5c
je r-xdata
push esi
xor edi edi
push edi
push edi
push ebx
call sub_41340b
add esp 0x10
jmp r-xdata
push ecx
push ebx
call sub_418960
pop ecx
pop ecx
mov ecx eax
mov ecx [ eax + 0x4 ]
sub ecx [ eax ]
sar ecx 0x2
mov [ ebp - 0x150 ] ecx
push eax
push edi
push edi
push ebx
call sub_41340b
add esp 0x10
cmp dl 0x3a
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn
push eax
push [ ebp - 0x14c ]
lea eax [ ebp - 0x118 ]
push ebx
push eax
call sub_41340b
add esp 0x10
test eax eax
jne r-xdata
mov cl [ ebp - 0x117 ]
test cl cl
je r-xdata
mov eax edi
push esi
call [ FindClose@IAT ]
mov eax edi
jmp r-xdata
mov edi eax
lea eax [ ebp - 0x144 ]
push eax
push esi
call [ FindNextFileA@IAT ]
test eax eax
mov eax [ ebp - 0x148 ]
jne r-xdata
cmp cl 0x2e
jne r-xdata
movzx eax al
sub ecx ebx
inc ecx
neg eax
push 0x140
sbb eax eax
and eax ecx
mov [ ebp - 0x14c ] eax
lea eax [ ebp - 0x144 ]
push edi
push eax
call sub_407850
add esp 0xc
lea eax [ ebp - 0x144 ]
push edi
push edi
push edi
push eax
push edi
push ebx
call [ FindFirstFileExA@IAT ]
mov esi eax
mov eax [ ebp - 0x148 ]
cmp esi 0xffffffff
jne r-xdata
cmp [ ebp - 0x118 ] 0x2e
jne r-xdata
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x150 ]
sub eax edx
sar eax 0x2
cmp ecx eax
je r-xdata
cmp [ ebp - 0x116 ] 0x0
je r-xdata
cmp esi 0xffffffff
je r-xdata
push sub_413263
sub eax ecx
push 0x4
push eax
lea eax [ edx + ecx * 4 ]
push eax
call sub_4184c0
add esp 0x10
jmp r-xdata
sub_413625
mov edi edi
push esi
push edi
mov edi ecx
mov esi [ edi ]
jmp r-xdata
cmp esi [ edi + 0x4 ]
jne r-xdata
push [ esi ]
call sub_40df49
pop ecx
add esi 0x4
push [ edi ]
call sub_40df49
pop ecx
pop edi
pop esi
retn
sub_41364a
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
call sub_41367f
mov edi eax
test edi edi
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
add [ esi + 0x4 ] 0x4
xor eax eax
push [ ebp + 0x8 ]
call sub_40df49
pop ecx
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_41367f
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x8 ]
cmp [ esi + 0x4 ] edi
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
sub edi [ esi ]
sar edi 0x2
cmp edi 0x7fffffff
ja r-xdata
push 0x4
push 0x4
call sub_40e014
push 0x0
mov [ esi ] eax
call sub_40df49
mov eax [ esi ]
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
retn
push 0xc
pop eax
jmp r-xdata
push ebx
push 0x4
lea ebx [ edi + edi ]
push ebx
push [ esi ]
call sub_414061
add esp 0xc
test eax eax
jne r-xdata
mov [ esi + 0x4 ] eax
add eax 0x10
mov [ esi + 0x8 ] eax
jmp r-xdata
mov [ esi ] eax
lea ecx [ eax + edi * 4 ]
lea eax [ eax + ebx * 4 ]
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] eax
xor esi esi
push 0xc
pop esi
jmp r-xdata
push 0x0
call sub_40df49
pop ecx
mov eax esi
pop ebx
sub_413711
push 0x8
push r--data
call sub_406590
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_40eabe
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_41377c
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413748
call sub_4065d6
retn 0xc
sub_413754
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_413711
mov esp ebp
pop ebp
retn
sub_41377c
mov edi edi
push esi
mov esi ecx
push 0xc
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x8 ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x21c ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
add eax 0xc
push eax
push 0xc
push rw-data
call sub_413e9c
mov eax [ esi ]
mov ecx 0x101
push ecx
mov eax [ eax ]
mov eax [ eax + 0x48 ]
add eax 0x18
push eax
push ecx
push rw-data
call sub_413e9c
mov eax [ esi ]
mov ecx 0x100
push ecx
mov eax [ eax ]
mov eax [ eax + 0x48 ]
add eax 0x119
push eax
push ecx
push rw-data
call sub_413e9c
mov eax [ rw-data ]
add esp 0x30
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
[ eax ]
pop esi
retn
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
push eax
call sub_40df49
pop ecx
sub_413840
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x3a4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0xd
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x1
je r-xdata
mov eax [ r--data ]
pop ebp
retn
xor eax eax
pop ebp
retn
sub_41387e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push 0x0
call sub_40a748
and [ rw-data ] 0x0
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ rw-data ] 0x1
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_4138f1
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x101
xor edi edi
lea esi [ ebx + 0x18 ]
push edi
push esi
call sub_407850
mov [ ebx + 0x4 ] edi
xor eax eax
mov [ ebx + 0x8 ] edi
add esp 0xc
mov [ ebx + 0x21c ] edi
mov ecx 0x101
lea edi [ ebx + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov edi rw-data
sub edi ebx
mov al [ edi + esi ]
mov [ esi ] al
inc esi
sub ecx 0x1
jne r-xdata
lea ecx [ ebx + 0x119 ]
mov edx 0x100
mov al [ ecx + edi ]
mov [ ecx ] al
inc ecx
sub edx 0x1
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_413956
mov edi edi
push ebp
mov ebp esp
sub esp 0x720
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x718 ]
push edi
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
xor ebx ebx
mov edi 0x100
test eax eax
je r-xdata
push 0xffffff9f
lea edx [ esi + 0x119 ]
mov ecx ebx
pop eax
sub eax edx
mov [ ebp - 0x720 ] eax
mov eax ebx
cmp [ ebp - 0x71c ] 0x19
ja r-xdata
or [ esi + ecx + 0x19 ] 0x10
lea eax [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x712 ]
lea ecx [ ebp - 0x712 ]
mov [ ebp - 0x104 ] 0x20
jmp r-xdata
mov [ edx ] bl
lea eax [ esi + ecx ]
or [ eax + 0x19 ] 0x20
lea eax [ ecx - 0x20 ]
mov [ edx ] al
jmp r-xdata
test al al
jne r-xdata
add edx ecx
add eax edx
mov [ ebp - 0x71c ] eax
add eax 0x20
cmp eax 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x720 ]
lea edx [ esi + 0x119 ]
inc ecx
cmp ecx edi
jb r-xdata
movzx edx [ ecx + 0x1 ]
movzx eax al
jmp r-xdata
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x704 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push ebx
call sub_414bee
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0x21c ]
push ebx
call sub_416946
add esp 0x40
lea eax [ ebp - 0x304 ]
push ebx
push [ esi + 0x4 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0x21c ]
push ebx
call sub_416946
add esp 0x24
mov ecx ebx
cmp eax edx
jbe r-xdata
test al 0x2
je r-xdata
or [ esi + ecx + 0x19 ] 0x10
mov al [ ebp + ecx - 0x204 ]
jmp r-xdata
cmp eax edi
jae r-xdata
add ecx 0x2
mov al [ ecx ]
mov [ esi + ecx + 0x119 ] bl
or [ esi + ecx + 0x19 ] 0x20
mov al [ ebp + ecx - 0x304 ]
mov [ esi + ecx + 0x119 ] al
jmp r-xdata
mov [ ebp + eax - 0x104 ] 0x20
inc eax
movzx eax [ ebp + ecx * 2 - 0x704 ]
test al 0x1
je r-xdata
jmp r-xdata
inc ecx
cmp ecx edi
jb r-xdata
sub_413aea
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
call sub_40f3ce
mov [ ebp - 0x4 ] eax
call sub_413c09
push [ ebp + 0x8 ]
call sub_41387e
pop ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov ecx [ ecx + 0x48 ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
push ebx
push esi
push edi
push 0x220
call sub_40df83
mov edi eax
or ebx 0xffffffff
pop ecx
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov esi ebx
mov esi [ ebp - 0x4 ]
mov ecx 0x88
mov esi [ esi + 0x48 ]
[ edi ] [ esi ]
mov edi eax
push edi
push [ ebp - 0xc ]
and [ edi ] 0x0
call sub_413cab
mov esi eax
pop ecx
pop ecx
cmp esi ebx
jne r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_40f7a3
mov [ eax ] 0x16
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
[ eax ] ebx
dec ebx
jne r-xdata
call sub_40dd55
mov [ edi ] 0x1
mov ecx edi
mov eax [ ebp - 0x4 ]
xor edi edi
mov [ eax + 0x48 ] ecx
mov eax [ ebp - 0x4 ]
test [ eax + 0x350 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] rw-data
je r-xdata
push edi
call sub_40df49
pop ecx
pop edi
mov eax esi
pop esi
pop ebx
test [ rw-data ] 0x1
jne r-xdata
push [ eax + 0x48 ]
call sub_40df49
pop ecx
lea eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x5
call sub_413754
cmp [ ebp + 0xc ] 0x0
pop ecx
pop ecx
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
jmp r-xdata
sub_413c09
push 0xc
push r--data
call sub_406590
xor esi esi
mov [ ebp - 0x1c ] esi
call sub_40f3ce
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x350 ] ecx
je r-xdata
push 0x5
call sub_40eabe
pop ecx
mov [ ebp - 0x4 ] esi
mov esi [ edi + 0x48 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x4c ] esi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413c9a
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x48 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x48 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
[ esi ]
or eax 0xffffffff
[ esi ] eax
jne r-xdata
mov eax esi
call sub_4065d6
retn
call sub_40dfd1
cmp esi rw-data
je r-xdata
push esi
call sub_40df49
pop ecx
sub_413cab
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
call sub_41387e
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push edi
xor edi edi
mov ecx edi
mov eax edi
mov [ ebp - 0x1c ] ecx
push esi
call sub_4138f1
pop ecx
xor eax eax
jmp r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_407850
add esp 0xc
imul eax [ ebp - 0x1c ] 0x30
mov [ ebp - 0x20 ] eax
lea eax [ eax + rw-data ]
mov [ ebp - 0x1c ] eax
inc ecx
add eax 0x30
mov [ ebp - 0x1c ] ecx
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn
inc edi
add eax 0x8
mov [ ebp - 0x1c ] eax
cmp edi 0x4
jb r-xdata
mov al [ ecx + 0x1 ]
test al al
je r-xdata
cmp [ eax + rw-data ] ebx
je r-xdata
cmp ebx 0xfde8
je r-xdata
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
push ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x1
call sub_413840
add esp 0x4
mov [ esi + 0x21c ] eax
mov eax [ ebp - 0x20 ]
lea ecx [ esi + 0xc ]
push 0x6
lea edx [ eax + rw-data ]
pop edi
mov eax [ ebp - 0x1c ]
movzx edx [ ecx ]
movzx eax al
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx 0xfde9
je r-xdata
mov ax [ edx ]
lea edx [ edx + 0x2 ]
mov [ ecx ] ax
lea ecx [ ecx + 0x2 ]
sub edi 0x1
jne r-xdata
push esi
call sub_413956
cmp edx eax
jbe r-xdata
pop edi
movzx eax bx
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edx 0x100
jae r-xdata
add ecx 0x2
cmp [ ecx ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov al [ edi + rw-data ]
or [ esi + edx + 0x19 ] al
inc edx
movzx eax [ ecx + 0x1 ]
cmp [ rw-data ] edi
je r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_407850
mov [ esi + 0x4 ] ebx
add esp 0xc
xor ebx ebx
mov [ esi + 0x21c ] edi
inc ebx
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
push esi
call sub_4138f1
jmp r-xdata
mov [ esi + 0x8 ] edi
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
pop ecx
xor eax eax
lea eax [ esi + 0x1a ]
mov ecx 0xfe
mov cl [ eax + 0x1 ]
test cl cl
je r-xdata
or [ eax ] 0x8
inc eax
sub ecx 0x1
jne r-xdata
push [ esi + 0x4 ]
call sub_413840
add esp 0x4
mov [ esi + 0x21c ] eax
mov [ esi + 0x8 ] ebx
jmp r-xdata
movzx edx cl
movzx ecx [ eax ]
jmp r-xdata
xor eax eax
lea edi [ esi + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp ecx edx
jbe r-xdata
or [ esi + ecx + 0x19 ] 0x4
inc ecx
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
sub_413e9c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_40f7a3
push 0x16
pop esi
mov [ eax ] esi
call sub_40f6e7
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push eax
call sub_407850
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_40f7a3
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_406f00
add esp 0xc
xor eax eax
jmp r-xdata
push 0x16
pop eax
call sub_40f7a3
push 0x22
pop esi
mov [ eax ] esi
call sub_40f6e7
mov eax esi
jmp r-xdata
pop edi
sub_413f1d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40a748
movzx esi [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
mov cl [ ebp + 0x14 ]
test [ eax + esi + 0x19 ] cl
jne r-xdata
xor edx edx
inc edx
xor edx edx
cmp [ ebp + 0x10 ] edx
je r-xdata
mov eax edx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax edx
mov eax [ ebp - 0xc ]
mov eax [ eax ]
movzx eax [ eax + esi * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
test eax eax
je r-xdata
sub_413fa7
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ edx ] di
je r-xdata
lea eax [ edx + 0x2 ]
pop edi
pop ebp
retn
push esi
mov ax [ ecx ]
add ecx 0x2
cmp ax di
jne r-xdata
sub ecx esi
sar ecx 0x1
lea edx [ edx + ecx * 2 ]
add edx 0x2
cmp [ edx ] di
jne r-xdata
mov ecx edx
lea esi [ ecx + 0x2 ]
pop esi
sub_413fde
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
call [ GetEnvironmentStringsW@IAT ]
mov esi eax
xor edi edi
test esi esi
je r-xdata
mov ebx edi
push esi
call sub_413fa7
pop ecx
push edi
push edi
push edi
mov ebx eax
push edi
sub ebx esi
sar ebx 0x1
push ebx
push esi
push edi
push edi
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push esi
call [ FreeEnvironmentStringsW@IAT ]
push eax
call sub_40df83
mov edi eax
pop ecx
test edi edi
je r-xdata
xor ebx ebx
xor eax eax
push eax
push eax
push [ ebp - 0x4 ]
push edi
push ebx
push esi
push eax
push eax
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov ebx edi
xor edi edi
jmp r-xdata
push edi
call sub_40df49
pop ecx
jmp r-xdata
sub_41406c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
test ebx ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0x10 ]
jae r-xdata
xor edi edi
push ebx
call sub_418a13
pop ecx
mov edi eax
jmp r-xdata
call sub_40f7a3
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
cmp edi esi
jae r-xdata
imul esi [ ebp + 0x10 ]
push esi
push ebx
call sub_418a46
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
pop esi
pop ebp
retn
sub esi edi
lea eax [ ebx + edi ]
push esi
push 0x0
push eax
call sub_407850
add esp 0xc
sub_4140f4
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi [ ebp + 0x8 ]
cmp edi [ ebp + 0xc ]
jne r-xdata
push esi
mov esi edi
push ebx
mov al 0x1
jmp r-xdata
add esi 0x8
cmp esi [ ebp + 0xc ]
jne r-xdata
mov ecx ebx
call [ r--data ]
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_405fe1
mov esp ebp
pop ebp
retn
mov ebx [ esi ]
test ebx ebx
je r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
cmp esi edi
je r-xdata
mov al 0x1
jmp r-xdata
xor al al
add esi 0xfffffffc
pop ebx
pop esi
sub esi 0x8
lea eax [ esi + 0x4 ]
cmp eax edi
jne r-xdata
mov ebx [ esi ]
test ebx ebx
je r-xdata
cmp [ esi - 0x4 ] 0x0
je r-xdata
push 0x0
mov ecx ebx
call [ r--data ]
call ebx
pop ecx
sub_414177
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0xc ]
cmp [ ebp + 0x8 ] esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn
add esi 0xfffffffc
push edi
sub esi 0x8
lea eax [ esi + 0x4 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
mov ecx edi
call [ r--data ]
call edi
pop ecx
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
sub_4141c4
push 0xc
push r--data
call sub_406590
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_40eabe
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx esi
and ecx 0x1f
xor esi [ rw-data ]
ror esi cl
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414212
mov eax esi
call sub_4065d6
retn 0xc
sub_41421e
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_4141c4
mov esp ebp
pop ebp
retn
sub_414246
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec eax
sub eax 0x1
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x9
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x6
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x1
je r-xdata
xor eax eax
pop ebp
retn
sub_414288
mov edi edi
push ebp
mov ebp esp
imul ecx [ r--data ] 0xc
mov eax [ ebp + 0xc ]
add ecx eax
cmp eax ecx
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
pop ebp
retn
add eax 0xc
cmp eax ecx
jne r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
sub_4142b0
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
push eax
push 0x3
call sub_41421e
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4142c7
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40d988
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40d988
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40d988
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40d988
pop ebp
retn
sub_41430b
push 0x2c
push r--data
call sub_41aa80
xor ebx ebx
mov [ ebp - 0x2c ] ebx
and [ ebp - 0x34 ] ebx
mov cl 0x1
mov [ ebp - 0x1d ] cl
mov esi [ ebp + 0x8 ]
push 0x8
pop edi
cmp esi edi
jg r-xdata
cmp esi 0xb
je r-xdata
je r-xdata
call sub_40f452
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
jne r-xdata
cmp esi 0xf
je r-xdata
lea eax [ esi - 0x1 ]
sub eax 0x1
je r-xdata
push [ ebx ]
push esi
call sub_414288
pop ecx
pop ecx
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push esi
call sub_414246
add esp 0x4
jmp r-xdata
cmp esi 0x14
jle r-xdata
dec eax
sub eax 0x1
je r-xdata
add eax 0x8
xor cl cl
mov [ ebp - 0x1d ] cl
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
jmp r-xdata
call sub_41aac9
retn
mov [ ebp - 0x28 ] eax
and [ ebp - 0x30 ] 0x0
test cl cl
je r-xdata
cmp esi 0x16
jg r-xdata
dec eax
sub eax 0x1
jne r-xdata
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x1e ] 0x0
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x28 ]
test cl cl
je r-xdata
push 0x3
call sub_40eabe
pop ecx
mov cl [ ebp - 0x1d ]
jmp r-xdata
mov edx [ eax ]
mov edx [ rw-data ]
mov ecx edx
and ecx 0x1f
xor edx [ eax ]
ror edx cl
mov cl [ ebp - 0x1d ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4144cb
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
test eax eax
jne r-xdata
mov eax edx
mov [ ebp - 0x24 ] eax
xor edx edx
cmp eax 0x1
sete dl
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x1e ] dl
test dl dl
jne r-xdata
xor eax eax
cmp esi edi
jne r-xdata
cmp esi edi
je r-xdata
test cl cl
je r-xdata
push esi
mov ecx [ ebp - 0x24 ]
call [ r--data ]
call [ ebp - 0x24 ]
call sub_40f3ce
push [ eax + 0x8 ]
push edi
mov ecx [ ebp - 0x24 ]
call [ r--data ]
call [ ebp - 0x24 ]
pop ecx
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x30 ] eax
and [ ebx + 0x4 ] 0x0
cmp esi edi
jne r-xdata
cmp esi 0xb
je r-xdata
push 0x3
call sub_409bd7
push 0x3
call sub_40eb06
pop ecx
mov eax [ ebp - 0x30 ]
mov [ ebx + 0x4 ] eax
cmp esi edi
jne r-xdata
cmp esi 0xb
je r-xdata
pop ecx
cmp esi edi
je r-xdata
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov ecx [ ebp - 0x28 ]
mov [ ecx ] eax
call sub_414302
mov eax [ eax ]
mov [ ebp - 0x34 ] eax
call sub_414302
mov [ eax ] 0x8c
cmp esi 0x4
jne r-xdata
call sub_40f3ce
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x8 ] ecx
cmp esi 0x4
jne r-xdata
imul eax [ r--data ] 0xc
add eax [ ebx ]
imul ecx [ r--data ] 0xc
add ecx eax
cmp esi edi
jne r-xdata
and [ eax + 0x8 ] 0x0
add eax 0xc
jmp r-xdata
mov [ ebp - 0x3c ] eax
cmp eax ecx
je r-xdata
sub_414513
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push edi
push 0x30
push 0x40
call sub_40e014
mov edi eax
xor ebx ebx
mov [ ebp - 0x8 ] edi
pop ecx
pop ecx
test edi edi
jne r-xdata
lea eax [ edi + 0xc00 ]
cmp edi eax
je r-xdata
mov edi ebx
jmp r-xdata
push ebx
call sub_40df49
pop ecx
mov eax edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea esi [ edi + 0x20 ]
mov edi eax
push ebx
push 0xfa0
lea eax [ esi - 0x20 ]
push eax
call sub_40ee33
or [ esi - 0x8 ] 0xffffffff
mov [ esi ] ebx
lea esi [ esi + 0x30 ]
mov [ esi - 0x2c ] ebx
lea eax [ esi - 0x20 ]
mov [ esi - 0x28 ] 0xa0a0000
mov [ esi - 0x24 ] 0xa
and [ esi - 0x23 ] 0xf8
mov [ esi - 0x22 ] bl
cmp eax edi
jne r-xdata
mov edi [ ebp - 0x8 ]
pop esi
sub_41458d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push ebx
lea ebx [ esi + 0xc00 ]
push edi
mov edi esi
cmp esi ebx
je r-xdata
push esi
call sub_40df49
pop ecx
pop edi
pop ebx
push edi
call [ DeleteCriticalSection@IAT ]
add edi 0x30
cmp edi ebx
jne r-xdata
sub_4145c2
push 0x14
push r--data
call sub_406590
cmp [ ebp + 0x8 ] 0x2000
sbb eax eax
neg eax
jne r-xdata
xor esi esi
mov [ ebp - 0x1c ] esi
push 0x7
call sub_40eabe
pop ecx
mov [ ebp - 0x4 ] esi
mov edi esi
mov eax [ rw-data ]
call sub_40f7a3
push 0x9
pop esi
mov [ eax ] esi
call sub_40f6e7
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414651
jmp r-xdata
cmp [ edi * 4 + rw-data ] esi
jne r-xdata
mov eax esi
call sub_4065d6
retn
inc edi
jmp r-xdata
call sub_414513
mov [ edi * 4 + rw-data ] eax
test eax eax
jne r-xdata
mov [ ebp - 0x20 ] edi
cmp [ ebp + 0x8 ] eax
jl r-xdata
mov eax [ rw-data ]
add eax 0x40
mov [ rw-data ] eax
push 0xc
pop esi
mov [ ebp - 0x1c ] esi
sub_41465a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_41467d
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
test esi esi
js r-xdata
call sub_40f7a3
mov [ eax ] 0x9
call sub_40f790
and [ eax ] 0x0
or eax 0xffffffff
cmp esi [ rw-data ]
jae r-xdata
mov eax esi
mov ebx esi
and eax 0x3f
sar ebx 0x6
imul ecx eax 0x30
mov eax [ ebx * 4 + rw-data ]
mov [ ebp - 0x4 ] ecx
cmp [ ecx + eax + 0x18 ] 0xffffffff
jne r-xdata
push edi
call sub_40da87
mov edi [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
mov eax [ ebx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax + 0x18 ] edi
xor eax eax
pop edi
jmp r-xdata
sub esi 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
push 0xfffffff6
sub esi 0x1
je r-xdata
push edi
push 0xfffffff5
jmp r-xdata
sub esi 0x1
jne r-xdata
call [ SetStdHandle@IAT ]
push edi
push 0xfffffff4
jmp r-xdata
sub_414711
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_414734
push 0x1c
push r--data
call sub_406590
push 0x7
call sub_40eabe
pop ecx
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41483d
mov eax edi
call sub_4065d6
retn
mov eax [ ebx * 4 + rw-data ]
mov [ ebp - 0x28 ] eax
test eax eax
jne r-xdata
lea ecx [ eax + 0xc00 ]
mov [ ebp - 0x20 ] ecx
mov esi eax
push 0x30
pop eax
call sub_414513
mov [ ebx * 4 + rw-data ] eax
test eax eax
je r-xdata
inc ebx
jmp r-xdata
test [ esi + 0x28 ] 0x1
jne r-xdata
add [ rw-data ] 0x40
mov edi ebx
shl edi 0x6
push edi
call sub_41465a
pop ecx
mov edx edi
sar edx 0x6
mov eax edi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
mov [ eax + ecx + 0x28 ] 0x1
mov [ ebp - 0x2c ] ebx
cmp ebx 0x80
jge r-xdata
add esi eax
jmp r-xdata
push esi
call [ EnterCriticalSection@IAT ]
test [ esi + 0x28 ] 0x1
je r-xdata
mov [ ebp - 0x24 ] esi
cmp esi ecx
je r-xdata
sub esi [ ebp - 0x28 ]
mov eax esi
cdq
push 0x30
pop ecx
idiv ecx
shl ebx 0x6
lea esi [ ebx + eax ]
mov edx esi
sar edx 0x6
mov ecx esi
and ecx 0x3f
imul ecx ecx 0x30
mov eax [ edx * 4 + rw-data ]
mov [ ecx + eax + 0x28 ] 0x1
mov eax [ edx * 4 + rw-data ]
mov [ ecx + eax + 0x18 ] edi
mov edi esi
jmp r-xdata
push esi
call [ LeaveCriticalSection@IAT ]
mov ecx [ ebp - 0x20 ]
push 0x30
pop eax
mov [ ebp - 0x1c ] edi
sub_414846
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
js r-xdata
call sub_40f7a3
mov [ eax ] 0x9
call sub_40f790
and [ eax ] 0x0
or eax 0xffffffff
cmp esi [ rw-data ]
jae r-xdata
mov eax esi
mov edi esi
and eax 0x3f
sar edi 0x6
imul ebx eax 0x30
mov eax [ edi * 4 + rw-data ]
test [ ebx + eax + 0x28 ] 0x1
je r-xdata
cmp [ ebx + eax + 0x18 ] 0xffffffff
je r-xdata
call sub_40da87
cmp eax 0x1
jne r-xdata
mov eax [ edi * 4 + rw-data ]
or [ ebx + eax + 0x18 ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub esi eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
push 0xfffffff6
sub esi 0x1
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
sub esi 0x1
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_4148d7
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_40f790
and [ eax ] 0x0
call sub_40f7a3
mov [ eax ] 0x9
jmp r-xdata
call sub_40f790
and [ eax ] 0x0
call sub_40f7a3
mov [ eax ] 0x9
call sub_40f6e7
cmp ecx [ rw-data ]
jae r-xdata
or eax 0xffffffff
pop ebp
retn
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
mov eax [ eax + ecx + 0x18 ]
pop ebp
retn
sub_414941
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_40f3ce
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_411623
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
mov eax [ eax ]
mov esp ebp
pop ebp
retn
sub_414967
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40df49
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40df49
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40df49
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40df49
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40df49
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40df49
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40df49
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40df49
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40df49
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40df49
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40df49
pop ecx
mov eax [ esi + 0x4c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40df49
pop ecx
push eax
call sub_40df49
pop ecx
sub_414a65
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40df49
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40df49
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40df49
pop ecx
mov eax [ esi + 0x34 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40df49
pop ecx
push eax
call sub_40df49
pop ecx
sub_414ace
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
lea eax [ esi + eax * 4 ]
mov ecx eax
sub ecx esi
add ecx 0x3
shr ecx 0x2
cmp eax esi
sbb ebx ebx
not ebx
and ebx ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push [ esi ]
call sub_40df49
inc edi
lea esi [ esi + 0x4 ]
pop ecx
cmp edi ebx
jne r-xdata
sub_414b0a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push 0x7
push esi
call sub_414ace
lea eax [ esi + 0x1c ]
push 0x7
push eax
call sub_414ace
lea eax [ esi + 0x38 ]
push 0xc
push eax
call sub_414ace
lea eax [ esi + 0x68 ]
push 0xc
push eax
call sub_414ace
lea eax [ esi + 0x98 ]
push 0x2
push eax
call sub_414ace
push [ esi + 0xa0 ]
call sub_40df49
push [ esi + 0xa4 ]
call sub_40df49
push [ esi + 0xa8 ]
call sub_40df49
lea eax [ esi + 0xb4 ]
push 0x7
push eax
call sub_414ace
lea eax [ esi + 0xd0 ]
push 0x7
push eax
call sub_414ace
add esp 0x44
lea eax [ esi + 0xec ]
push 0xc
push eax
call sub_414ace
lea eax [ esi + 0x11c ]
push 0xc
push eax
call sub_414ace
lea eax [ esi + 0x14c ]
push 0x2
push eax
call sub_414ace
push [ esi + 0x154 ]
call sub_40df49
push [ esi + 0x158 ]
call sub_40df49
push [ esi + 0x15c ]
call sub_40df49
push [ esi + 0x160 ]
call sub_40df49
add esp 0x28
sub_414bee
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_40a748
mov ecx [ ebp + 0x1c ]
test ecx ecx
jne r-xdata
xor eax eax
xor edi edi
cmp [ ebp + 0x20 ] eax
push edi
push edi
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov ecx eax
mov [ ebp + 0x1c ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea ebx [ eax + eax ]
lea ecx [ ebx + 0x8 ]
cmp ebx ecx
sbb eax eax
test ecx eax
je r-xdata
mov eax edi
lea esp [ ebp - 0x24 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405fe1
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
and [ eax + 0x350 ] 0xfffffffd
mov esi edi
lea ecx [ ebx + 0x8 ]
cmp ebx ecx
sbb eax eax
and eax ecx
lea ecx [ ebx + 0x8 ]
cmp eax 0x400
ja r-xdata
push esi
call sub_414d0b
pop ecx
push ebx
push edi
push esi
call sub_407850
add esp 0xc
push [ ebp - 0x8 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
cmp ebx ecx
sbb eax eax
and eax ecx
push eax
call sub_40df83
mov esi eax
pop ecx
test esi esi
je r-xdata
cmp ebx ecx
sbb eax eax
and eax ecx
call sub_41ac50
mov esi esp
test esi esi
je r-xdata
push [ ebp + 0x18 ]
push eax
push esi
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov edi eax
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_414d0b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_40df49
pop ecx
sub_414d2b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
[ eax + 0xc ]
mov ecx [ eax + 0x7c ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x84 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x80 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x8c ]
test ecx ecx
je r-xdata
[ ecx ]
push esi
push 0x6
lea ecx [ eax + 0x28 ]
pop esi
[ ecx ]
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov edx [ ecx ]
test edx edx
je r-xdata
add ecx 0x10
sub esi 0x1
jne r-xdata
mov edx [ ecx - 0x4 ]
test edx edx
je r-xdata
[ edx ]
cmp [ ecx - 0x8 ] rw-data
je r-xdata
push [ eax + 0x9c ]
call sub_414ef2
pop ecx
pop esi
pop ebp
retn
[ edx ]
sub_414da8
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8c ]
test eax eax
je r-xdata
cmp eax rw-data
je r-xdata
push [ esi + 0x9c ]
call sub_414f1b
pop ecx
push 0x6
pop eax
lea ebx [ esi + 0xa0 ]
mov [ ebp - 0x4 ] eax
lea edi [ esi + 0x28 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
cmp [ edi - 0xc ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi + 0x90 ]
sub eax 0xfe
push eax
call sub_40df49
mov eax [ esi + 0x94 ]
mov edi 0x80
sub eax edi
push eax
call sub_40df49
mov eax [ esi + 0x98 ]
sub eax edi
push eax
call sub_40df49
push [ esi + 0x8c ]
call sub_40df49
add esp 0x10
cmp [ eax ] 0x0
jne r-xdata
add ebx 0x4
add edi 0x10
sub eax 0x1
mov [ ebp - 0x4 ] eax
jne r-xdata
mov eax [ edi - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x84 ]
test eax eax
je r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_40df49
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_40df49
push [ ebx ]
call sub_40df49
pop ecx
pop ecx
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_40df49
pop ecx
push [ esi + 0x7c ]
call sub_40df49
push [ esi + 0x88 ]
call sub_40df49
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_40df49
push [ esi + 0x88 ]
call sub_414967
pop ecx
pop ecx
push eax
call sub_40df49
push [ esi + 0x88 ]
call sub_414a65
pop ecx
pop ecx
sub_414ef2
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x7fffffff
pop ebp
retn
cmp ecx r--data
je r-xdata
xor eax eax
inc eax
[ ecx + 0xb0 ] eax
inc eax
pop ebp
retn
sub_414f1b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
cmp esi r--data
je r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
jne r-xdata
push esi
call sub_414b0a
push esi
call sub_40df49
pop ecx
pop ecx
sub_414f4b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x7fffffff
pop ebp
retn
cmp ecx r--data
je r-xdata
or eax 0xffffffff
[ ecx + 0xb0 ] eax
dec eax
pop ebp
retn
sub_414f74
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
[ eax + 0xc ]
mov ecx [ eax + 0x7c ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x84 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x80 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x8c ]
test ecx ecx
je r-xdata
[ ecx ]
push esi
push 0x6
lea ecx [ eax + 0x28 ]
pop esi
[ ecx ]
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov edx [ ecx ]
test edx edx
je r-xdata
add ecx 0x10
sub esi 0x1
jne r-xdata
mov edx [ ecx - 0x4 ]
test edx edx
je r-xdata
[ edx ]
cmp [ ecx - 0x8 ] rw-data
je r-xdata
push [ eax + 0x9c ]
call sub_414f4b
pop ecx
pop esi
[ edx ]
sub_414ff5
push 0xc
push r--data
call sub_406590
and [ ebp - 0x1c ] 0x0
call sub_40f3ce
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x350 ] ecx
je r-xdata
push 0x4
call sub_40eabe
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
lea eax [ edi + 0x4c ]
push eax
call sub_41506c
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41505b
test esi esi
jne r-xdata
mov esi [ edi + 0x4c ]
test esi esi
jne r-xdata
mov eax esi
call sub_4065d6
retn
call sub_40dfd1
sub_41506c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edi [ eax ]
cmp edi esi
jne r-xdata
push esi
mov [ eax ] esi
call sub_414d2b
pop ecx
test edi edi
je r-xdata
mov eax esi
jmp r-xdata
push edi
call sub_414f74
cmp [ edi + 0xc ] 0x0
pop ecx
jne r-xdata
pop edi
pop esi
pop ebp
retn
cmp edi rw-data
je r-xdata
push edi
call sub_414da8
pop ecx
jmp r-xdata
sub_4150bc
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
push ebx
push esi
push edi
mov edi 0x200
test cl 0x8
je r-xdata
mov eax 0x80
test cl 0x4
je r-xdata
or eax edi
test cl 0x2
je r-xdata
or eax 0x400
test cl 0x1
je r-xdata
or eax 0x800
mov esi 0x100
test ecx 0x80000
je r-xdata
or eax 0x1000
mov edx ecx
mov ebx 0x300
and edx ebx
je r-xdata
or eax esi
mov edx 0x3000000
pop edi
and ecx edx
pop esi
pop ebx
cmp ecx 0x1000000
je r-xdata
cmp edx esi
je r-xdata
or eax 0x8040
cmp ecx 0x2000000
je r-xdata
or eax 0x2000
cmp edx edi
je r-xdata
or eax 0x40
pop ebp
retn
cmp ecx edx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp edx ebx
jne r-xdata
pop ebp
retn
or eax 0x8000
pop ebp
retn
or eax 0x6000
jmp r-xdata
sub_415167
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
fnstsw [ ebp - 0x4 ]
fnclex
cmp [ rw-data ] 0x1
jl r-xdata
mov cx [ ebp - 0x4 ]
xor eax eax
test cl 0x3f
je r-xdata
mov ax [ ebp - 0x4 ]
xor ecx ecx
mov edx ecx
push edi
mov edi 0x80000
test al 0x3f
je r-xdata
mov esp ebp
pop ebp
retn
test cl 0x1
je r-xdata
stmxcsr [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
and eax 0xffffffc0
mov [ ebp - 0xc ] eax
ldmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
test al 0x3f
je r-xdata
test al 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
or ecx edx
mov eax ecx
pop edi
jmp r-xdata
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop edx
test cl 0x8
je r-xdata
or eax 0x8
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or edx 0x8
test cl 0x10
je r-xdata
or eax 0x4
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or edx 0x4
test cl 0x20
je r-xdata
or eax 0x2
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or edx 0x2
test cl 0x2
je r-xdata
or eax 0x1
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or edx 0x1
or eax 0x80000
test al 0x2
je r-xdata
or ecx 0x1
or edx edi
or ecx edi
sub_415245
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
fwait
fnstcw [ ebp - 0x8 ]
mov ax [ ebp - 0x8 ]
xor ecx ecx
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
push ebx
push esi
movzx esi ax
mov ebx 0xc00
mov edx esi
push edi
mov edi 0x200
and edx ebx
je r-xdata
or ecx 0x80000
and esi 0x300
je r-xdata
cmp edx 0x400
je r-xdata
or ecx 0x20000
cmp esi edi
jne r-xdata
or ecx 0x100
cmp edx 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov esi edi
mov eax [ ebp + 0x8 ]
not esi
and esi ecx
and eax edi
or esi eax
cmp esi ecx
je r-xdata
or ecx 0x40000
mov edx 0x1000
test dx ax
je r-xdata
or ecx 0x10000
jmp r-xdata
or ecx edi
jmp r-xdata
cmp edx ebx
jne r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
push esi
call sub_415547
pop ecx
mov [ ebp - 0x4 ] ax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ax [ ebp - 0x4 ]
xor esi esi
test al 0x1
je r-xdata
or ecx 0x300
jmp r-xdata
mov eax esi
and edi 0x308031f
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
test al al
jns r-xdata
test al 0x4
je r-xdata
push 0x10
pop esi
test eax 0x200
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or esi 0x8
test eax 0x400
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or esi 0x4
test eax 0x800
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or esi 0x2
test edx eax
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or esi 0x1
test eax 0x100
je r-xdata
or ecx 0x1
movzx edx ax
mov ecx edx
and ecx ebx
je r-xdata
or esi 0x80000
mov edx eax
mov ebx 0x6000
and edx ebx
je r-xdata
or ecx 0x80000
and edx 0x300
je r-xdata
cmp ecx 0x400
je r-xdata
push 0x40
and eax 0x8040
pop ebx
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or esi 0x20000
cmp edx 0x200
jne r-xdata
or esi 0x100
cmp ecx 0x800
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or esi 0x40000
mov edx 0x1000
test dx ax
je r-xdata
or esi 0x10000
jmp r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
mov eax ecx
or ecx esi
xor eax esi
test eax 0x8031f
je r-xdata
push eax
call sub_4150bc
push eax
mov [ ebp - 0xc ] eax
call sub_418aaf
pop ecx
pop ecx
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
xor ecx ecx
test al al
jns r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx ebx
jne r-xdata
or esi 0x300
jmp r-xdata
mov eax ecx
jmp r-xdata
or ecx 0x80000000
test eax 0x200
je r-xdata
push 0x10
pop ecx
mov eax edi
and edi [ ebp + 0x8 ]
not eax
and eax ecx
or eax edi
cmp eax ecx
je r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax 0x400
je r-xdata
or ecx 0x8
test eax 0x800
je r-xdata
or ecx 0x4
test eax 0x1000
je r-xdata
or ecx 0x2
test eax 0x100
je r-xdata
or ecx 0x1
mov edx eax
mov edi 0x6000
and edx edi
je r-xdata
or ecx 0x80000
and eax 0x8040
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx edi
jne r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
sub_415547
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
test cl 0x8
je r-xdata
inc eax
test cl 0x4
je r-xdata
or eax 0x4
test cl 0x2
je r-xdata
or eax 0x8
test cl 0x1
je r-xdata
or eax 0x10
test ecx 0x80000
je r-xdata
or eax 0x20
push esi
mov edx ecx
mov esi 0x300
push edi
mov edi 0x200
and edx esi
je r-xdata
or eax 0x2
mov edx ecx
and edx 0x30000
je r-xdata
cmp edx 0x100
je r-xdata
or eax esi
cmp edx 0x10000
jne r-xdata
or eax 0x400
cmp edx edi
je r-xdata
pop ebp
retn
or eax 0x1000
pop edi
pop esi
test ecx 0x40000
je r-xdata
or eax edi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp edx esi
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_4155e0
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ax [ ebp + 0x8 ]
mov ecx 0xffff
cmp ax cx
jne r-xdata
mov ecx 0x100
cmp ax cx
jae r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ax
xor eax eax
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp - 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
movzx ecx ax
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
sub_41563f
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
call sub_40a748
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov eax ebx
lea ecx [ ebp - 0x1c ]
sar eax 0x8
mov [ ebp - 0x24 ] eax
push ecx
movzx eax al
push eax
call sub_4166f0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] bl
xor ecx ecx
mov [ ebp - 0xf ] al
inc ecx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x10 ] al
xor eax eax
push 0x2
mov [ ebp - 0xf ] bl
mov [ ebp - 0xe ] al
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0x14 ] 0x0
je r-xdata
movzx eax [ ebp - 0xc ]
cmp [ ebp - 0x14 ] al
je r-xdata
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ax
mov eax [ ebp - 0x1c ]
push 0x1
push [ eax + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x1c ]
push 0x1
push eax
call sub_414bee
add esp 0x1c
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x20 ]
and [ ecx + 0x350 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
and [ eax + 0x350 ] 0xfffffffd
sub_415711
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
xor edi edi
mov ebx 0xe3
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] ebx
mov edx eax
cmp ax bx
ja r-xdata
add esi 0x2
sub [ ebp - 0x4 ] 0x1
je r-xdata
cmp ax bx
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edi [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
movzx eax ax
movzx edx dx
sub edx eax
je r-xdata
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ esi ]
cmp ax di
jb r-xdata
mov eax [ ecx * 8 + r--data ]
test edx edx
jns r-xdata
cmp dx ax
je r-xdata
lea edi [ ecx + 0x1 ]
mov [ ebp - 0xc ] edi
lea ebx [ ecx - 0x1 ]
mov [ ebp - 0x8 ] ebx
jmp r-xdata
movzx eax [ ecx + esi ]
cmp ax di
jb r-xdata
lea eax [ ebx + edi ]
mov [ ebp - 0x4 ] 0x55
cdq
sub eax edx
mov ecx eax
sar ecx 0x1
push 0x41
pop edi
mov [ ebp - 0x10 ] ecx
mov esi [ ecx * 8 + r--data ]
mov ecx [ ebp + 0x8 ]
push 0x5a
sub ecx esi
pop ebx
or eax 0xffffffff
jmp r-xdata
cmp edi ebx
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4157cd
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call sub_415711
pop ecx
test eax eax
js r-xdata
cmp eax 0xe4
jae r-xdata
mov eax [ eax * 8 + r--data ]
pop ebp
retn
sub_4157f9
push 0xc
push r--data
call sub_406590
xor esi esi
mov [ ebp - 0x1c ] esi
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_41465a
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov edi [ eax ]
mov edx edi
sar edx 0x6
mov eax edi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
call sub_40f7a3
mov [ eax ] 0x9
or esi 0xffffffff
push edi
call sub_4148d7
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415885
mov eax esi
call sub_4065d6
retn 0xc
call sub_40f790
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
sub_415891
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_4157f9
mov esp ebp
pop ebp
retn
sub_4158b9
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_40f7a3
mov [ eax ] 0x9
jmp r-xdata
call sub_40f7a3
mov [ eax ] 0x9
call sub_40f6e7
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax esi
mov edx esi
and eax 0x3f
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_415891
pop ecx
pop ecx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_415930
push ebx
push esi
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
test ebx 0xffffffff
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub ecx edx
test edx 0x3
je r-xdata
lea eax [ edx + ecx ]
and eax 0xfff
cmp eax 0xffc
ja r-xdata
movzx eax [ edx + ecx ]
cmp al [ edx ]
jne r-xdata
mov eax [ edx + ecx ]
cmp eax [ edx ]
jne r-xdata
sbb eax eax
or eax 0x1
pop esi
pop ebx
retn
test eax eax
je r-xdata
sub ebx 0x4
jbe r-xdata
inc edx
sub ebx 0x1
jbe r-xdata
lea esi [ eax - 0x1010101 ]
add edx 0x4
not eax
and eax esi
test eax 0x80808080
je r-xdata
test dl 0x3
jne r-xdata
sub_4159a8
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
push esi
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415a14
add esp 0x10
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
mov eax 0x7fffffff
jmp r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_418be0
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
mov eax esi
jmp r-xdata
sub_415a14
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
push ebx
push esi
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40a748
mov edi [ ebp + 0x8 ]
mov esi 0x7fffffff
test edi edi
je r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx esi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0xc ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
sub edi ebx
push ecx
push ebx
push edi
call sub_418be0
add esp 0xc
mov esi eax
jmp r-xdata
sub esi eax
test esi esi
je r-xdata
cmp esi eax
je r-xdata
movzx eax [ edi + ebx ]
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_411036
lea ecx [ ebp - 0xc ]
mov esi eax
movzx eax [ ebx ]
push ecx
push eax
call sub_411036
add esp 0x10
inc ebx
sub [ ebp + 0x10 ] 0x1
je r-xdata
sub_415acb
push 0x10
push r--data
call sub_406590
xor eax eax
mov esi [ ebp + 0x18 ]
test esi esi
setne al
test eax eax
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
je r-xdata
call sub_40f7a3
push 0x16
pop esi
mov [ eax ] esi
call sub_40f6e7
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_4065d6
retn
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x20 ]
push eax
call sub_4160a5
add esp 0x1c
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415b6b
test edi edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
add eax 0x1
je r-xdata
mov eax edi
or [ esi ] 0xffffffff
sub_415b6b
cmp [ ebp - 0x20 ] 0x0
je r-xdata
retn
test edi edi
je r-xdata
push [ esi ]
call sub_414711
pop ecx
mov ecx [ esi ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
sub_415b97
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
and eax 0x3f
push ebx
push edi
mov edi [ ebp + 0x28 ]
xor ebx ebx
sar edx 0x6
imul ecx eax 0x30
mov [ edi ] bl
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x80
jne r-xdata
push esi
mov esi [ ebp + 0x24 ]
test esi 0x74000
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
and eax 0x74000
cmp eax 0x4000
je r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
push eax
call sub_40dc1b
pop ecx
test eax eax
jne r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov [ edi ] bl
cmp eax 0x10000
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40f6f7
int3
mov eax [ ebp - 0x4 ]
and eax 0x74000
jne r-xdata
xor eax eax
test [ ebp + 0xc ] 0x40
jne r-xdata
mov ecx 0x301
mov eax esi
and eax ecx
cmp eax ecx
jne r-xdata
cmp eax 0x14000
je r-xdata
or esi eax
jmp r-xdata
or esi 0x4000
mov eax [ ebp + 0x10 ]
mov edx 0xc0000000
and eax edx
mov ecx ebx
mov esi ebx
cmp eax 0x40000000
je r-xdata
test esi 0x70000
je r-xdata
mov [ edi ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
push eax
push [ ebp + 0x8 ]
call sub_4126cb
mov edx eax
add esp 0xc
test edx edx
jle r-xdata
cmp eax edx
jne r-xdata
cmp eax 0x40000
je r-xdata
xor esi esi
inc esi
cmp eax 0x4
jbe r-xdata
cmp edx 0xffffffff
je r-xdata
lea ecx [ esi - 0x1 ]
neg ecx
sbb ecx ecx
and esi ecx
mov [ edi ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
test esi esi
je r-xdata
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_416633
add esp 0x10
or eax edx
je r-xdata
cmp eax 0x5
je r-xdata
call sub_40f7a3
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp edx 0x2
je r-xdata
movsx eax [ edi ]
mov esi ebx
mov [ ebp - 0x4 ] ebx
sub eax 0x1
je r-xdata
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_416633
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
pop esi
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp edx 0x3
jne r-xdata
push 0x3
mov [ ebp - 0x4 ] 0xbfbbef
pop esi
sub eax 0x1
jne r-xdata
mov ecx [ ebp + 0x10 ]
shr ecx 0x1f
jmp r-xdata
cmp eax 0xfeff
jne r-xdata
call sub_40f7a3
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_416633
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp eax 0xbfbbef
jne r-xdata
mov eax esi
sub eax ebx
push eax
lea eax [ ebp - 0x4 ]
add eax ebx
push eax
push [ ebp + 0x8 ]
call sub_41089d
add esp 0xc
cmp eax 0xffffffff
je r-xdata
test esi esi
jle r-xdata
push 0x2
mov [ ebp - 0x4 ] 0xfeff
pop esi
jmp r-xdata
test ecx ecx
je r-xdata
push ebx
push ebx
push 0x2
push [ ebp + 0x8 ]
call sub_416633
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov [ edi ] 0x1
jmp r-xdata
add ebx eax
cmp esi ebx
jg r-xdata
mov [ edi ] 0x2
jmp r-xdata
jmp r-xdata
sub_415de4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x20 ]
or eax [ ebp + 0x24 ]
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0xc ]
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
pop ebp
retn
sub_415e09
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
jg r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp eax 0x600
je r-xdata
push 0x3
test eax eax
je r-xdata
push 0x5
jmp r-xdata
cmp eax edx
je r-xdata
cmp eax 0x100
je r-xdata
pop eax
pop ebp
retn
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
or eax 0xffffffff
pop ebp
retn
push 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp eax 0x300
jne r-xdata
push 0x2
jmp r-xdata
sub_415e79
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
push esi
mov esi [ ebp + 0x8 ]
and eax 0x3
push edi
mov edi 0x80000000
mov [ esi ] 0x0
sub eax 0x0
je r-xdata
mov eax edi
sub eax 0x1
je r-xdata
xor eax eax
sub eax ecx
je r-xdata
test ebx 0x70000
setne cl
test bl 0x8
setne al
and cl al
movzx eax cl
neg eax
sbb eax eax
and eax edi
add eax 0x40000000
jmp r-xdata
sub eax 0x1
je r-xdata
mov edi 0x8000
test edi ebx
jne r-xdata
or [ esi ] 0x10
xor eax eax
inc eax
jmp r-xdata
sub eax ecx
je r-xdata
push ebx
mov [ esi + 0x4 ] eax
call sub_415e09
pop ecx
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov eax 0xc0000000
jmp r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
or eax 0xffffffff
jmp r-xdata
mov ecx 0x100
test ecx ebx
je r-xdata
test ebx 0x74000
jne r-xdata
and [ esi + 0x14 ] 0x0
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0x80
test bl bl
jns r-xdata
push 0x2
sub eax ecx
je r-xdata
test bl 0x40
je r-xdata
mov eax [ rw-data ]
not eax
and eax [ ebp + 0x14 ]
test al al
js r-xdata
or [ esi ] 0x80
lea eax [ ebp - 0x4 ]
push eax
call sub_40dc1b
pop ecx
test eax eax
jne r-xdata
push 0x3
jmp r-xdata
sub eax 0x40
je r-xdata
test ebx 0x1000
je r-xdata
or [ esi + 0x14 ] 0x4000000
or [ esi + 0x4 ] 0x10000
or [ esi + 0xc ] 0x4
mov [ esi + 0x10 ] 0x1
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40f6f7
int3
cmp [ ebp - 0x4 ] edi
je r-xdata
pop eax
jmp r-xdata
xor eax eax
cmp [ esi + 0x4 ] edi
sete al
jmp r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
or eax 0xffffffff
jmp r-xdata
test ebx 0x2000
je r-xdata
or [ esi + 0x10 ] ecx
test bl 0x20
je r-xdata
or [ esi + 0x14 ] 0x2000000
test bl 0x10
je r-xdata
or [ esi + 0x14 ] 0x8000000
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
or [ esi + 0x14 ] 0x10000000
sub_415ff5
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
and eax 0x3f
mov edx esi
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
mov al [ eax + ecx + 0x28 ]
test al 0x48
je r-xdata
test al al
jns r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
push 0x2
push 0xffffffff
push 0xffffffff
push esi
call sub_416633
mov edi eax
mov ebx edx
mov ecx edi
add esp 0x10
and ecx ebx
cmp ecx 0xffffffff
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x4 ]
push 0x1
push eax
push esi
call sub_4126cb
add esp 0xc
test eax eax
jne r-xdata
call sub_40f790
cmp [ eax ] 0x83
jne r-xdata
xor eax eax
push eax
push eax
push eax
push esi
call sub_416633
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x4 ] 0x1a
jne r-xdata
call sub_40f7a3
mov eax [ eax ]
jmp r-xdata
xor eax eax
push ebx
push edi
push esi
call sub_418d08
add esp 0xc
cmp eax 0xffffffff
je r-xdata
pop edi
pop ebx
sub_4160a5
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
call sub_418c41
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp - 0x4 ]
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416116
push esi
mov edi eax
call sub_40df49
add esp 0x20
mov eax edi
pop edi
pop esi
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4160f6
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_415acb
add esp 0x18
pop ebp
retn
sub_416116
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x44 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call sub_415e79
add esp 0x10
lea edi [ ebp - 0x2c ]
mov esi eax
push 0x6
pop ecx
[ edi ] [ esi ]
or esi 0xffffffff
cmp [ ebp - 0x20 ] esi
jne r-xdata
call sub_414734
mov ebx [ ebp + 0xc ]
mov [ ebx ] eax
cmp eax esi
jne r-xdata
call sub_40f790
and [ eax ] 0x0
mov eax [ ebp + 0xc ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
lea esi [ ebp - 0x2c ]
and [ ebp - 0x10 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x14 ] 0xc
sub esp 0x18
mov [ eax ] ecx
mov eax [ ebp + 0x14 ]
shr eax 0x7
not eax
and eax ecx
push 0x6
pop ecx
mov [ ebp - 0xc ] eax
mov edi esp
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x10 ]
[ edi ] [ esi ]
call sub_415de4
mov edi eax
add esp 0x20
mov [ ebp - 0x8 ] edi
mov edx 0xc0000000
cmp edi 0xffffffff
jne r-xdata
call sub_40f790
and [ eax ] 0x0
mov [ ebx ] esi
call sub_40f7a3
mov [ eax ] 0x18
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov eax ecx
and eax edx
cmp eax edx
jne r-xdata
call sub_40f7a3
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_40f76d
pop ecx
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
push edi
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_40f76d
test [ ebp + 0x14 ] 0x1
je r-xdata
cmp eax 0x3
mov al [ ebp - 0x2c ]
jne r-xdata
mov al [ ebp - 0x2c ]
or al 0x40
jmp r-xdata
call sub_40f7a3
mov [ eax ] 0xd
jmp r-xdata
sub esp 0x18
lea eax [ ebp - 0x14 ]
and ecx 0x7fffffff
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x28 ] ecx
push 0x6
pop ecx
mov edi esp
push eax
push [ ebp + 0x10 ]
[ edi ] [ esi ]
call sub_415de4
mov edi eax
add esp 0x20
mov [ ebp - 0x8 ] edi
cmp edi 0xffffffff
jne r-xdata
push edi
push [ ebx ]
mov [ ebp - 0x1 ] al
call sub_41467d
mov dl [ ebp - 0x1 ]
pop ecx
pop ecx
mov ecx [ ebx ]
or dl 0x1
mov eax ecx
mov [ ebp - 0x1 ] dl
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov [ ebp - 0x2c ] dl
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x28 ] dl
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
test [ ebp + 0x14 ] 0x2
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x29 ] 0x0
je r-xdata
or al 0x8
lea eax [ ebp - 0x2 ]
mov [ ebp - 0x2 ] 0x0
push eax
push [ ebp + 0x14 ]
lea esi [ ebp - 0x2c ]
sub esp 0x18
push 0x6
pop ecx
mov edi esp
push [ ebx ]
[ edi ] [ esi ]
call sub_415b97
add esp 0x24
test eax eax
je r-xdata
push [ ebx ]
call sub_415ff5
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov eax [ ebx ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul edx eax 0x30
mov al [ ebp - 0x2 ]
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edx + 0x29 ] al
mov ecx [ ebx ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul edx ecx 0x30
mov ecx [ eax * 4 + rw-data ]
mov eax [ ebp + 0x14 ]
shr eax 0x10
xor al [ ecx + edx + 0x2d ]
and al 0x1
xor [ ecx + edx + 0x2d ] al
test [ ebp - 0x1 ] 0x48
jne r-xdata
mov esi eax
push [ ebx ]
call sub_41024b
pop ecx
mov eax esi
jmp r-xdata
mov esi [ ebp - 0x28 ]
mov ecx 0xc0000000
mov eax esi
and eax ecx
cmp eax ecx
jne r-xdata
test [ ebp + 0x14 ] 0x8
je r-xdata
xor eax eax
test [ ebp + 0x14 ] 0x1
je r-xdata
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
or [ eax + ecx + 0x28 ] 0x20
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
sub esp 0x18
lea eax [ ebp - 0x14 ]
and esi 0x7fffffff
mov [ ebp - 0x28 ] esi
lea esi [ ebp - 0x2c ]
push 0x6
pop ecx
mov edi esp
push eax
push [ ebp + 0x10 ]
[ edi ] [ esi ]
call sub_415de4
mov edx eax
add esp 0x20
cmp edx 0xffffffff
jne r-xdata
mov ecx [ ebx ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x18 ] edx
call [ GetLastError@IAT ]
push eax
call sub_40f76d
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
push [ ebx ]
call sub_414846
pop ecx
jmp r-xdata
pop ecx
jmp r-xdata
sub_41643f
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_40f7a3
mov [ eax ] 0x9
jmp r-xdata
call sub_40f7a3
mov [ eax ] 0x9
call sub_40f6e7
cmp ecx [ rw-data ]
jae r-xdata
xor eax eax
pop ebp
retn
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
movzx eax [ eax + ecx + 0x28 ]
and eax 0x40
pop ebp
retn
sub_416495
push 0x1c
push r--data
call sub_406590
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_40f790
and [ eax ] 0x0
call sub_40f7a3
mov [ eax ] 0x9
jmp r-xdata
call sub_40f790
and [ eax ] 0x0
call sub_40f7a3
mov [ eax ] 0x9
call sub_40f6e7
cmp edi [ rw-data ]
jae r-xdata
or esi 0xffffffff
mov edx esi
mov ecx edi
sar ecx 0x6
mov [ ebp - 0x1c ] ecx
mov eax edi
and eax 0x3f
imul edx eax 0x30
mov [ ebp - 0x20 ] edx
mov eax [ ecx * 4 + rw-data ]
movzx eax [ eax + edx + 0x28 ]
and eax 0x1
je r-xdata
push edi
call sub_41465a
pop ecx
or esi 0xffffffff
mov [ ebp - 0x2c ] esi
mov ebx esi
mov [ ebp - 0x28 ] ebx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
test [ eax + ecx + 0x28 ] 0x1
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_41659a
add esp 0x10
mov esi eax
mov [ ebp - 0x2c ] esi
mov ebx edx
mov [ ebp - 0x28 ] ebx
call sub_40f7a3
mov [ eax ] 0x9
call sub_40f790
and [ eax ] 0x0
jmp r-xdata
mov eax esi
call sub_4065d6
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41656d
mov edx ebx
jmp r-xdata
sub_41659a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_4148d7
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
call sub_40f7a3
mov [ eax ] 0x9
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
and eax edx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_40f76d
pop ecx
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax edi
mov edx edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx esi
and esi 0x3f
sar ecx 0x6
imul esi esi 0x30
mov ecx [ ecx * 4 + rw-data ]
and [ ecx + esi + 0x28 ] 0xfd
sub_41664e
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_418e99
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
jmp r-xdata
mov ax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_416693
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0x1000
push ebx
call sub_40df83
push 0x0
mov [ esi + 0x4 ] eax
call sub_40df49
cmp [ esi + 0x4 ] 0x0
lea eax [ esi + 0xc ]
pop ecx
pop ecx
je r-xdata
mov ecx 0x400
[ eax ] ecx
lea eax [ esi + 0x14 ]
mov [ esi + 0x18 ] 0x2
mov [ esi + 0x4 ] eax
push 0x40
pop ecx
[ eax ] ecx
mov [ esi + 0x18 ] ebx
jmp r-xdata
mov eax [ esi + 0x4 ]
and [ esi + 0x8 ] 0x0
mov [ esi ] eax
pop esi
pop ebx
pop ebp
retn
sub_4166f0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40a748
mov eax [ ebp - 0xc ]
movzx ecx [ ebp + 0x8 ]
mov eax [ eax ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_416729
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
test esi esi
jle r-xdata
mov edi [ ebp + 0x24 ]
test edi edi
jne r-xdata
push esi
push [ ebp + 0x14 ]
call sub_418ecf
pop ecx
cmp eax esi
pop ecx
lea esi [ eax + 0x1 ]
jl r-xdata
xor eax eax
cmp [ ebp + 0x28 ] eax
push 0x0
push 0x0
push esi
push [ ebp + 0x14 ]
setne al
lea eax [ eax * 8 + 0x1 ]
push eax
push edi
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov edi [ eax + 0x8 ]
mov [ ebp + 0x24 ] edi
mov esi eax
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405fe1
mov esp ebp
pop ebp
retn
lea edx [ eax + eax ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
xor ebx ebx
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
xor esi esi
push [ ebp - 0x8 ]
push ebx
push esi
push [ ebp + 0x14 ]
push 0x1
push edi
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_40df83
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_41ac50
mov ebx esp
test ebx ebx
je r-xdata
mov edi [ ebp - 0x8 ]
xor eax eax
push eax
push eax
push eax
push eax
push eax
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40ee95
mov esi eax
test esi esi
je r-xdata
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
test [ ebp + 0x10 ] 0x400
je r-xdata
test ebx ebx
je r-xdata
add ebx 0x8
jmp r-xdata
lea edx [ esi + esi ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
mov eax [ ebp + 0x20 ]
test eax eax
je r-xdata
xor edi edi
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_414d0b
pop ecx
mov eax esi
cmp esi eax
jg r-xdata
push edi
call sub_414d0b
pop ecx
push 0x0
push 0x0
push 0x0
push esi
push edi
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40ee95
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_40df83
mov edi eax
pop ecx
test edi edi
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_41ac50
mov edi esp
test edi edi
je r-xdata
xor ecx ecx
push ecx
push ecx
push ecx
push eax
push [ ebp + 0x1c ]
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40ee95
mov esi eax
test esi esi
jne r-xdata
xor eax eax
push eax
push eax
cmp [ ebp + 0x20 ] eax
jne r-xdata
mov [ edi ] 0xdddd
mov [ edi ] 0xcccc
jmp r-xdata
jmp r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
jmp r-xdata
push eax
push eax
test edi edi
je r-xdata
add edi 0x8
jmp r-xdata
push esi
push edi
push eax
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
call sub_414d0b
pop ecx
jmp r-xdata
sub_416946
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40a748
push [ ebp + 0x28 ]
lea eax [ ebp - 0xc ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_416729
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_416991
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_40f7a3
push 0x16
mov ecx [ ebp + 0x10 ]
mov [ edx ] 0x0
test ecx ecx
jle r-xdata
pop esi
pop ebp
retn
xor eax eax
mov eax ecx
jmp r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
call sub_40f7a3
push 0x22
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
push ebx
lea ebx [ edx + 0x1 ]
mov eax ebx
push edi
mov edi [ esi + 0x8 ]
mov [ edx ] 0x30
test ecx ecx
jle r-xdata
pop esi
mov [ eax ] esi
call sub_40f6e7
mov eax esi
jmp r-xdata
mov [ eax ] 0x0
test ecx ecx
js r-xdata
mov bl [ edi ]
test bl bl
je r-xdata
cmp [ edx ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
mov bl 0x30
inc edi
jmp r-xdata
mov ecx ebx
lea esi [ ecx + 0x1 ]
inc [ esi + 0x4 ]
jmp r-xdata
jmp r-xdata
lea ebx [ edx + 0x1 ]
mov [ eax ] bl
inc eax
dec ecx
test ecx ecx
jg r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx esi
lea eax [ ecx + 0x1 ]
push eax
push ebx
push edx
call sub_409440
add esp 0xc
pop edi
xor eax eax
pop ebx
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_416a4d
mov edi edi
push esi
mov esi ecx
push esi
call sub_418eeb
mov eax [ esi ]
and eax 0x1f
pop ecx
cmp al 0x1f
jne r-xdata
push esi
call sub_418f51
pop ecx
mov [ esi + 0x8 ] 0x1
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax esi
pop esi
retn
sub_416a80
mov edi edi
push ebp
mov ebp esp
sub esp 0x21c
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
test eax eax
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
mov ecx [ edi ]
test ecx ecx
jne r-xdata
xor edx edx
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea esi [ eax - 0x1 ]
lea eax [ ecx - 0x1 ]
mov [ ebp - 0xc ] esi
test eax eax
jne r-xdata
pop edi
xor eax eax
xor edx edx
pop ebx
mov esp ebp
pop ebp
retn
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x28 ] ecx
cmp ecx 0x1
jne r-xdata
pop esi
pop edi
xor eax eax
xor edx edx
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
lea ecx [ eax + 0x1 ]
sub edx eax
mov [ ebp - 0x38 ] ecx
mov ecx esi
cmp esi edx
jl r-xdata
test esi esi
jne r-xdata
mov esi [ ebx + 0x4 ]
lea ecx [ ebx + 0x4 ]
push eax
mov [ ebp - 0x21c ] eax
mov [ ebx ] eax
lea eax [ ebp - 0x218 ]
push eax
push 0x1cc
push ecx
call sub_413e9c
add esp 0x10
mov eax esi
xor edx edx
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov eax ecx
inc esi
sub eax edx
lea esi [ ebx + esi * 4 ]
lea edi [ edi + eax * 4 ]
add edi 0x4
xor edi edi
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] edi
cmp esi 0xffffffff
je r-xdata
mov esi [ ebx + 0x4 ]
lea eax [ ebp - 0x218 ]
push 0x0
push eax
lea edi [ ebx + 0x4 ]
mov [ ebp - 0x21c ] 0x0
push 0x1cc
push edi
mov [ ebx ] 0x0
call sub_413e9c
xor edx edx
mov eax esi
div [ ebp - 0x28 ]
add esp 0x10
xor ecx ecx
cmp ecx edx
mov [ edi ] edx
sbb ecx ecx
pop esi
neg ecx
xor edx edx
pop edi
mov [ ebx ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x38 ]
mov eax [ ebp + 0xc ]
mov esi [ eax + edi * 4 ]
mov eax [ eax + edi * 4 - 0x4 ]
mov [ ebp - 0x20 ] eax
bsr eax esi
mov [ ebp - 0x34 ] esi
je r-xdata
mov esi [ ebp + 0xc ]
mov eax ecx
sub eax edx
mov eax [ esi + eax * 4 + 0x4 ]
cmp eax [ ebx + ecx * 4 + 0x4 ]
jae r-xdata
dec ecx
sub edi 0x4
sub esi 0x4
cmp ecx edx
jge r-xdata
push 0x0
lea eax [ ebp - 0x218 ]
mov [ ebp - 0x21c ] 0x0
push eax
lea esi [ ebx + 0x4 ]
mov [ ebx ] 0x0
push 0x1cc
push esi
call sub_413e9c
mov eax [ ebp - 0x10 ]
add esp 0x10
mov edx [ ebp - 0x4 ]
xor ecx ecx
cmp ecx eax
mov [ esi ] edi
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x8 ]
sbb ecx ecx
neg ecx
pop esi
inc ecx
pop edi
mov [ ebx ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
inc esi
inc eax
mov [ ebp - 0x1c ] eax
lea esi [ ebx + esi * 4 ]
lea esp [ esp ]
mov ecx 0x20
mov ecx 0x1f
sub ecx eax
jmp r-xdata
test edx edx
jne r-xdata
mov eax [ edi ]
cmp eax [ esi ]
jne r-xdata
jmp r-xdata
push 0x0
push ecx
xor eax eax
or eax [ esi ]
push edi
push eax
call sub_41a9e0
mov [ ebp - 0x40 ] edx
lea esi [ esi - 0x4 ]
xor edx edx
mov [ ebp - 0x10 ] ebx
mov edi ecx
add edx eax
mov ecx [ ebp - 0x8 ]
adc ecx 0x0
mov [ ebp - 0x8 ] edx
sub [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x28 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x48 ] 0x0
add edx 0xffffffff
mov [ ebp - 0x1c ] edx
js r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x3c ]
shr eax cl
mov ecx [ ebp - 0x24 ]
shl [ ebp - 0x20 ] cl
shl esi cl
or esi eax
mov [ ebp - 0x34 ] esi
cmp edi 0x2
jbe r-xdata
mov eax 0x20
mov [ ebp - 0x24 ] ecx
sub eax ecx
mov [ ebp - 0x3c ] eax
test ecx ecx
je r-xdata
xor edi edi
lea ecx [ ebx + 0x4 ]
lea ecx [ ecx + edx * 4 ]
mov [ ebp - 0x10 ] ecx
lea eax [ edx + edi ]
lea ecx [ ebx - 0x4 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ecx + eax * 4 ]
mov [ ebp - 0x4c ] ecx
mov esi [ ebp + 0xc ]
mov ecx [ ebp - 0x3c ]
mov eax [ esi + edi * 4 - 0x8 ]
shr eax cl
or [ ebp - 0x20 ] eax
mov [ ebx ] edx
test edx edx
je r-xdata
lea ecx [ eax + 0x1 ]
lea ecx [ ebx + ecx * 4 ]
jmp r-xdata
xor eax eax
mov eax [ ecx + 0x8 ]
jmp r-xdata
mov edx esi
mov eax edi
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx ]
cmp [ ebx + ecx * 4 ] 0x0
jne r-xdata
mov [ ecx ] 0x0
lea ecx [ ecx + 0x4 ]
inc eax
cmp eax [ ebx ]
jb r-xdata
push 0x0
push [ ebp - 0x34 ]
push eax
push edx
call sub_41a9e0
mov [ ebp - 0x28 ] ebx
xor esi esi
mov ebx eax
mov [ ebp - 0x28 ] esi
mov eax edx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x18 ] eax
mov edi ecx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x40 ] eax
test eax eax
jne r-xdata
mov edi ecx
mov eax edx
mov ecx [ ebp - 0x3c ]
xor esi esi
mov edx [ ebp - 0x4 ]
shr edi cl
mov ecx [ ebp - 0x24 ]
call sub_41ac80
mov ecx [ ebp - 0x24 ]
or esi edx
or edi eax
mov eax esi
mov esi [ ebp - 0x14 ]
mov edx edi
shl esi cl
cmp [ ebp - 0x8 ] 0x3
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] esi
jb r-xdata
cmp [ ebp - 0x24 ] 0x0
mov edx [ ecx + 0x4 ]
mov ecx [ ecx ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] ecx
jbe r-xdata
add ecx 0xffffffff
mov [ ebx ] ecx
jne r-xdata
push 0x0
push [ ebp - 0x34 ]
add ebx 0x1
adc eax 0xffffffff
push eax
push ebx
call sub_41abc0
add edi eax
adc esi edx
or ebx 0xffffffff
xor eax eax
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x40 ] eax
cmp ebx 0xffffffff
jbe r-xdata
mov eax [ ebp - 0x38 ]
add eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x3c ]
mov eax [ ebx + eax * 4 - 0x8 ]
shr eax cl
or esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] esi
test eax eax
jne r-xdata
jb r-xdata
test esi esi
ja r-xdata
mov ecx [ ebp - 0x38 ]
xor edi edi
xor esi esi
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
push eax
push ebx
xor ecx ecx
mov esi edi
or ecx [ ebp - 0x14 ]
push 0x0
push [ ebp - 0x20 ]
mov [ ebp - 0x4 ] ecx
call sub_41abc0
cmp edx esi
jb r-xdata
cmp edi 0xffffffff
ja r-xdata
xor eax eax
cmp eax esi
ja r-xdata
mov eax [ ebp + 0xc ]
mov ebx [ ebp - 0x10 ]
add eax 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] ecx
mov esi [ ebp - 0x48 ]
xor eax eax
mov edx [ ebp - 0x1c ]
add eax ebx
mov ecx [ ebp - 0x4c ]
mov edi eax
mov eax [ ebp - 0x8 ]
adc esi 0x0
sub [ ebp - 0x10 ] 0x4
dec edx
mov ebx [ ebp + 0x8 ]
sub ecx 0x4
dec eax
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x8 ] eax
test edx edx
jns r-xdata
mov eax [ ebp - 0x18 ]
ja r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0xc ] eax
jb r-xdata
sub eax ecx
mov [ ebx ] eax
add ebx 0x4
mov eax [ ebp - 0x14 ]
add eax 0x4
sub [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] eax
jne r-xdata
add edi 0x1
adc esi esi
cmp eax [ ebp - 0xc ]
ja r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
add ebx 0xffffffff
mov [ ebp - 0x44 ] ebx
adc eax 0xffffffff
add edi [ ebp - 0x34 ]
mov [ ebp - 0x18 ] eax
adc [ ebp - 0x28 ] 0x0
mov [ ebp - 0x40 ] eax
jne r-xdata
cmp eax [ ebp - 0x4 ]
jbe r-xdata
test ecx ecx
je r-xdata
cmp [ ebp - 0x30 ] edi
jae r-xdata
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x40 ]
mul [ ebp - 0x28 ]
mov ecx eax
mov eax [ ebp - 0x44 ]
mul [ ebp - 0x28 ]
add edx ecx
add edi eax
mov eax [ ebx ]
mov ecx edi
adc esi edx
mov edi esi
xor esi esi
cmp eax ecx
jae r-xdata
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0xc ]
inc edx
mov eax edx
cmp eax [ ebx ]
jae r-xdata
mov [ ebp - 0x4 ] ebx
cmp edi 0xffffffff
jbe r-xdata
add ebx 0xffffffff
adc [ ebp - 0x18 ] 0xffffffff
mov esi [ ebp + 0xc ]
mov edi ecx
mov edx [ ebp - 0x10 ]
add esi 0x4
mov ebx eax
lea esp [ esp ]
jmp r-xdata
mov ecx [ edx ]
lea esi [ esi + 0x4 ]
xor eax eax
lea edx [ edx + 0x4 ]
add ecx [ esi - 0x4 ]
adc eax eax
add ecx ebx
mov [ edx - 0x4 ] ecx
adc eax 0x0
mov ebx eax
sub edi 0x1
jne r-xdata
mov ebx [ ebp - 0x4 ]
sub_416f2e
mov edi edi
push ebp
mov ebp esp
sub esp 0x964
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x18 ]
lea ecx [ ebp - 0x794 ]
push esi
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x780 ] edi
mov [ ebp - 0x77c ] ebx
call sub_416a4d
mov esi [ ebp + 0xc ]
xor eax eax
mov ecx esi
and ecx 0x80000000
or eax ecx
mov al 0x2d
jne r-xdata
movsx eax al
mov ecx esi
mov [ edi ] eax
and ecx 0x7ff00000
xor eax eax
mov [ edi + 0x8 ] ebx
or eax ecx
mov edi [ ebp + 0x8 ]
jne r-xdata
add al 0xf3
lea eax [ ebp + 0x8 ]
push eax
call sub_41167d
pop ecx
test eax eax
je r-xdata
mov ecx esi
mov eax edi
and ecx 0xfffff
or eax ecx
jne r-xdata
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x780 ]
mov [ ecx + 0x4 ] 0x1
mov eax [ ebp - 0x780 ]
push r--data
and [ eax + 0x4 ] 0x0
jmp r-xdata
push r--data
sub eax 0x1
je r-xdata
push [ ebp + 0x1c ]
push ebx
call sub_40deef
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40f6f7
int3
cmp [ ebp - 0x78c ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
push r--data
jmp r-xdata
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405fe1
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x794 ]
push eax
call sub_418f08
pop ecx
push r--data
jmp r-xdata
sub eax 0x1
je r-xdata
push r--data
jmp r-xdata
mov eax [ ebp + 0x10 ]
and esi 0x7fffffff
and [ ebp - 0x784 ] 0x0
inc eax
mov [ ebp + 0x8 ] edi
mov [ ebp + 0xc ] esi
fld [ ebp + 0x8 ]
fst [ ebp - 0x768 ]
mov edi [ ebp - 0x764 ]
mov ecx edi
mov [ ebp - 0x778 ] eax
shr ecx 0x14
mov eax ecx
and eax 0x7ff
or eax 0x0
jne r-xdata
xor dl dl
mov esi 0x100000
xor eax eax
mov dl 0x1
xor esi esi
jmp r-xdata
xor eax eax
mov [ ebp - 0x76c ] eax
cmp eax 0x80000000
jne r-xdata
mov ebx [ ebp - 0x768 ]
and edi 0xfffff
add ebx eax
adc edi esi
xor eax eax
test dl dl
setne al
and ecx 0x7ff
inc eax
lea esi [ ecx - 0x434 ]
add esi eax
mov [ ebp - 0x74c ] esi
call sub_418fe0
push ecx
push ecx
fstp [ esp ]
call sub_4190f0
pop ecx
pop ecx
call sub_41aca0
mov [ ebp - 0x76c ] eax
cmp eax 0x7fffffff
je r-xdata
cmp esi 0xfffffc02
je r-xdata
and [ ebp - 0x570 ] 0x0
push 0x2
pop esi
mov [ ebp - 0x56c ] 0x100000
mov [ ebp - 0x574 ] esi
cmp ebx esi
jne r-xdata
mov [ ebp - 0x1d0 ] ebx
xor ebx ebx
test edi edi
mov [ ebp - 0x1cc ] edi
setne bl
inc ebx
mov [ ebp - 0x1d4 ] ebx
test esi esi
js r-xdata
mov eax [ ebp + ebx * 4 - 0x1d4 ]
and [ ebp - 0x764 ] 0x0
bsr eax eax
je r-xdata
and [ ebp - 0x570 ] 0x0
push 0x2
pop ecx
mov [ ebp - 0x56c ] 0x100000
mov [ ebp - 0x574 ] ecx
cmp ebx ecx
jne r-xdata
mov eax [ ebp - 0x74c ]
xor edx edx
inc eax
mov edi eax
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov [ ebp - 0x750 ] eax
xor eax eax
shr edi 0x5
inc eax
mov [ ebp - 0x74c ] edi
mov [ ebp - 0x770 ] ecx
call sub_41ac80
mov ecx [ ebp + ebx * 4 - 0x1d4 ]
dec eax
and [ ebp - 0x764 ] 0x0
bsr ecx ecx
mov [ ebp - 0x758 ] eax
not eax
mov [ ebp - 0x774 ] eax
je r-xdata
xor ecx ecx
xor ecx ecx
lea ecx [ eax + 0x1 ]
jmp r-xdata
xor edx edx
xor ecx ecx
inc ecx
jmp r-xdata
add ecx 0x4
cmp ecx 0x8
jne r-xdata
xor al al
test al al
je r-xdata
push 0x20
pop eax
sub eax ecx
cmp eax 0x1
setb al
cmp ebx 0x73
mov [ ebp - 0x745 ] al
seta cl
cmp ebx 0x73
jne r-xdata
add edx 0x4
cmp edx 0x8
jne r-xdata
xor al al
test al al
je r-xdata
push 0x20
pop eax
sub eax ecx
lea edx [ ebx + edi ]
cmp [ ebp - 0x750 ] eax
mov [ ebp - 0x760 ] edx
seta al
cmp edx 0x73
mov [ ebp - 0x745 ] al
seta cl
cmp edx 0x73
jne r-xdata
mov eax [ ebp + ecx - 0x570 ]
cmp eax [ ebp + ecx - 0x1d0 ]
jne r-xdata
mov eax [ ebp - 0x74c ]
xor edx edx
add eax 0x2
mov esi eax
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov [ ebp - 0x75c ] eax
xor eax eax
shr esi 0x5
inc eax
mov [ ebp - 0x750 ] esi
mov [ ebp - 0x770 ] ecx
call sub_41ac80
and [ ebp - 0x764 ] 0x0
dec eax
bsr ecx edi
mov [ ebp - 0x758 ] eax
not eax
mov [ ebp - 0x774 ] eax
je r-xdata
and [ ebp - 0x574 ] 0x0
lea eax [ ebp - 0x570 ]
and [ ebp - 0x1d4 ] 0x0
push 0x0
push eax
lea eax [ ebp - 0x1d0 ]
push 0x1cc
push eax
call sub_413e9c
add esp 0x10
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + edx - 0x570 ]
cmp eax [ ebp + edx - 0x1d0 ]
jne r-xdata
and [ ebp - 0x764 ] 0x0
bsr eax edi
je r-xdata
xor eax eax
mov ebx 0x1cc
push eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_413e9c
add esp 0x10
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
xor ecx ecx
inc ecx
jmp r-xdata
neg eax
div ecx
mov [ ebp - 0x754 ] eax
mov ecx edx
mov [ ebp - 0x758 ] ecx
test eax eax
je r-xdata
div ecx
mov [ ebp - 0x770 ] eax
mov ecx edx
mov [ ebp - 0x764 ] ecx
test eax eax
je r-xdata
push 0x72
pop ecx
cmp ebx ecx
jae r-xdata
test cl cl
jne r-xdata
xor edx edx
lea edx [ eax + 0x1 ]
jmp r-xdata
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_413e9c
add esp 0x10
jmp r-xdata
push 0x72
pop ecx
cmp edx ecx
jb r-xdata
test cl cl
jne r-xdata
xor al al
test al al
je r-xdata
push 0x20
pop eax
sub eax ecx
lea edx [ esi + 0x2 ]
cmp [ ebp - 0x75c ] eax
mov [ ebp - 0x754 ] edx
seta al
cmp edx 0x73
mov [ ebp - 0x745 ] al
seta cl
cmp edx 0x73
jne r-xdata
test ecx ecx
je r-xdata
cmp eax 0x26
jbe r-xdata
test ecx ecx
je r-xdata
cmp eax 0x26
jbe r-xdata
cmp ecx 0xffffffff
je r-xdata
mov ecx ebx
and [ ebp - 0x750 ] 0x0
mov edx [ edi ]
mov [ ebp - 0x750 ] edx
jmp r-xdata
push 0x20
pop eax
sub eax edx
mov esi ecx
cmp eax ecx
lea eax [ ebp - 0x1c8 ]
mov [ ebp - 0x754 ] eax
mov edi eax
setb [ ebp - 0x745 ]
mov eax [ ebp - 0x76c ]
xor edx edx
push 0xa
pop ecx
mov [ ebp - 0x774 ] ecx
test eax eax
js r-xdata
mov eax edx
mov [ ebp - 0x754 ] eax
cmp edx 0xffffffff
je r-xdata
mov edx ecx
mov [ ebp - 0x760 ] ecx
xor eax eax
mov ebx 0x1cc
push eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_413e9c
add esp 0x10
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
mov edi [ ebp - 0x77c ]
mov esi edi
mov ecx [ ebp - 0x1d4 ]
mov [ ebp - 0x74c ] esi
test ecx ecx
je r-xdata
mov eax [ ecx * 4 + r--data ]
mov [ ebp - 0x764 ] eax
test eax eax
je r-xdata
movzx ecx [ eax * 4 + r--data ]
movzx esi [ eax * 4 + r--data ]
mov edi ecx
mov [ ebp - 0x74c ] eax
shl edi 0x2
push edi
lea eax [ ecx + esi ]
mov [ ebp - 0x574 ] eax
lea eax [ ebp - 0x570 ]
push 0x0
push eax
call sub_407850
mov eax esi
shl eax 0x2
push eax
mov eax [ ebp - 0x74c ]
movzx eax [ eax * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x570 ]
add eax edi
push eax
call sub_406f00
mov ecx [ ebp - 0x574 ]
add esp 0x18
mov [ ebp - 0x760 ] ecx
cmp ecx 0x1
ja r-xdata
push 0x26
pop eax
mov edi [ ecx * 4 + r--data ]
test edi edi
jne r-xdata
movzx ecx [ eax * 4 + r--data ]
movzx esi [ eax * 4 + r--data ]
mov edi ecx
mov [ ebp - 0x75c ] eax
shl edi 0x2
push edi
lea eax [ ecx + esi ]
mov [ ebp - 0x574 ] eax
lea eax [ ebp - 0x570 ]
push 0x0
push eax
call sub_407850
mov eax esi
shl eax 0x2
push eax
mov eax [ ebp - 0x75c ]
movzx eax [ eax * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x570 ]
add eax edi
push eax
call sub_406f00
mov ecx [ ebp - 0x574 ]
add esp 0x18
mov [ ebp - 0x760 ] ecx
cmp ecx 0x1
ja r-xdata
push 0x26
pop eax
cmp [ ebp - 0x745 ] 0x0
je r-xdata
lea edi [ ebp - 0x1d0 ]
mov esi ecx
lea edi [ edi + ecx * 4 ]
mov [ ebp - 0x754 ] edi
xor edx edx
mov edx [ edi - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
test edi edi
je r-xdata
mov esi edx
lea ecx [ ebp - 0x1d0 ]
mov edx [ ebp - 0x74c ]
sub esi edx
lea ecx [ ecx + esi * 4 ]
mov [ ebp - 0x75c ] ecx
push 0x72
pop ecx
cmp edx ecx
jb r-xdata
test cl cl
jne r-xdata
lea eax [ ebp - 0x3a4 ]
push eax
lea eax [ ebp - 0x1d4 ]
push eax
call sub_416a80
pop ecx
pop ecx
push 0xa
pop edx
cmp eax edx
jne r-xdata
xor esi esi
xor edi edi
xor eax eax
push eax
mov [ ebp - 0x1d4 ] eax
mov [ ebp - 0x964 ] eax
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x1d4 ] 0x1
ja r-xdata
mov edi [ ebp - 0x570 ]
test edi edi
jne r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
jmp r-xdata
cmp [ ebp - 0x3a4 ] 0x1
ja r-xdata
mov edi [ ebp - 0x570 ]
test edi edi
jne r-xdata
mov [ ebp - 0x1d4 ] ecx
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
and [ ebp - 0x750 ] 0x0
mov edx [ edi ]
mov [ ebp - 0x750 ] edx
jmp r-xdata
xor eax eax
cmp [ ebp - 0x745 ] al
setne al
add eax ecx
sub ecx [ ebp - 0x74c ]
mov edi ecx
mov [ ebp - 0x1d4 ] eax
shr edi 0x5
lea eax [ ebp - 0x570 ]
mov esi edi
mov [ ebp - 0x758 ] ecx
shl esi 0x2
push esi
push 0x0
push eax
call sub_407850
mov ecx [ ebp - 0x758 ]
xor eax eax
inc eax
and ecx 0x1f
shl eax cl
mov [ ebp + esi - 0x570 ] eax
lea eax [ edi + 0x1 ]
jmp r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
mov eax [ ebp - 0x750 ]
sub edi 0x4
shl eax 0x2
shr edx 0x1e
xor edx eax
mov eax [ ebp - 0x754 ]
dec esi
mov [ eax ] edx
sub eax 0x4
mov [ ebp - 0x754 ] eax
cmp esi 0xffffffff
je r-xdata
cmp [ ebp - 0x745 ] 0x0
mov ebx 0x1cc
je r-xdata
mov ecx edi
xor eax eax
lea edi [ ebp - 0x1d0 ]
[ edi ]
mov edx [ ebp - 0x760 ]
mov edi [ ebp - 0x74c ]
push 0x2
pop esi
cmp esi ebx
jae r-xdata
mov ecx edx
mov [ ebp - 0x760 ] ecx
cmp edx 0xffffffff
je r-xdata
mov edx ecx
mov [ ebp - 0x754 ] ecx
test eax eax
jne r-xdata
inc [ ebp - 0x76c ]
lea esi [ edi + 0x1 ]
mov eax [ ebp - 0x3a4 ]
mov [ edi ] 0x31
mov [ ebp - 0x74c ] esi
test eax eax
je r-xdata
mov eax [ ebp + edi * 4 - 0x1d0 ]
push 0xa
pop edx
mul edx
add eax esi
mov [ ebp + edi * 4 - 0x1d0 ] eax
adc edx 0x0
inc edi
mov esi edx
cmp edi ecx
jne r-xdata
mov [ ebp - 0x764 ] esi
test esi esi
mov esi [ ebp - 0x74c ]
je r-xdata
mov ecx [ ebp - 0x1d4 ]
test ecx ecx
je r-xdata
cmp ecx [ ebp - 0x1d4 ]
lea edi [ ebp - 0x570 ]
setb al
test al al
jne r-xdata
mov edi [ ebp - 0x1d0 ]
mov eax ecx
shl eax 0x2
push eax
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x1d4 ] ecx
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_413e9c
add esp 0x10
test edi edi
je r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
push eax
lea eax [ ebp - 0x960 ]
jmp r-xdata
mov eax [ ebp - 0x3a4 ]
mov [ ebp - 0x764 ] eax
test eax eax
je r-xdata
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x3a0 ]
jmp r-xdata
cmp ecx [ ebp - 0x3a4 ]
lea edi [ ebp - 0x570 ]
setb al
test al al
jne r-xdata
mov edi [ ebp - 0x3a0 ]
mov eax ecx
shl eax 0x2
push eax
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x3a4 ] ecx
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_413e9c
add esp 0x10
test edi edi
jne r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x744 ] eax
mov [ ebp - 0x3a4 ] eax
jmp r-xdata
xor edi edi
lea eax [ ebp - 0x570 ]
inc edi
sub edi esi
mov ebx edi
shr ebx 0x5
mov esi ebx
shl esi 0x2
push esi
push 0x0
push eax
call sub_407850
xor eax eax
and edi 0x1f
inc eax
mov ecx edi
shl eax cl
mov [ ebp + esi - 0x570 ] eax
lea eax [ ebx + 0x1 ]
xor edx edx
mov edx [ edi - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
mov [ ebp - 0x574 ] eax
mov ebx 0x1cc
mov [ ebp - 0x3a4 ] eax
shl eax 0x2
push eax
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_413e9c
add esp 0x1c
cmp esi ebx
jae r-xdata
mov [ ebp - 0x1d4 ] edx
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
xor edi edi
mov edi [ ecx ]
jmp r-xdata
test esi esi
je r-xdata
mov esi edx
lea eax [ ebp - 0x1d0 ]
mov edx [ ebp - 0x750 ]
sub esi edx
lea eax [ eax + esi * 4 ]
mov [ ebp - 0x74c ] eax
add al 0x30
lea esi [ edi + 0x1 ]
mov [ edi ] al
mov [ ebp - 0x74c ] esi
mov eax [ ebp - 0x76c ]
dec eax
jmp r-xdata
mov eax [ ebp - 0x76c ]
xor edi edi
mov esi eax
xor ecx ecx
mov edi esi
mov ecx [ ebp - 0x1d4 ]
cmp ecx 0x73
jae r-xdata
xor edi edi
xor esi esi
lea edx [ ebp - 0x1d0 ]
jmp r-xdata
lea edi [ ebp - 0x1d0 ]
lea edx [ ebp - 0x570 ]
cmp edi 0x1
je r-xdata
mov al 0x1
cmp [ ebp - 0x1d4 ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_413e9c
add esp 0x10
xor esi esi
xor ecx ecx
push ebx
push eax
call sub_413e9c
add esp 0x10
lea edx [ ebp - 0x3a0 ]
jmp r-xdata
lea edi [ ebp - 0x3a0 ]
lea edx [ ebp - 0x570 ]
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
lea eax [ ebp - 0x570 ]
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x3a4 ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x740 ]
mov esi [ ebp - 0x74c ]
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
mov eax [ ebp - 0x750 ]
sub edi 0x4
add eax eax
shr edx 0x1f
xor edx eax
mov eax [ ebp - 0x754 ]
dec esi
mov [ eax ] edx
sub eax 0x4
mov [ ebp - 0x754 ] eax
cmp esi 0xffffffff
je r-xdata
and [ ebp - 0x56c ] 0x0
xor eax eax
inc eax
mov [ ebp - 0x570 ] esi
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x3a4 ] eax
push 0x4
jmp r-xdata
xor eax eax
mov eax [ ecx - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
cmp [ ebp - 0x745 ] 0x0
mov ebx 0x1cc
je r-xdata
mov ecx esi
lea edi [ ebp - 0x1d0 ]
xor eax eax
[ edi ]
mov edx [ ebp - 0x754 ]
mov esi [ ebp - 0x750 ]
cmp esi ebx
jae r-xdata
mov eax [ ebp + 0x1c ]
dec eax
cmp eax ecx
jb r-xdata
cmp ecx 0x7fffffff
ja r-xdata
mov ecx [ ebp - 0x780 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x778 ]
test eax eax
js r-xdata
mov eax [ ebp + ecx * 4 - 0x3a0 ]
mul edx
push 0xa
add eax edi
mov [ ebp + ecx * 4 - 0x3a0 ] eax
adc edx 0x0
inc ecx
mov edi edx
pop edx
cmp ecx esi
jne r-xdata
mov esi [ ebp - 0x74c ]
test edi edi
je r-xdata
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_413e9c
add esp 0x10
mov eax edx
mov [ ebp + ecx * 4 - 0x1d0 ] eax
inc [ ebp - 0x1d4 ]
jmp r-xdata
mul [ ebp + esi * 4 - 0x1d0 ]
add eax edi
mov [ ebp + esi * 4 - 0x1d0 ] eax
mov eax [ ebp - 0x764 ]
adc edx 0x0
inc esi
mov edi edx
cmp esi ecx
jne r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x770 ] edx
test al al
jne r-xdata
mov [ ebp - 0x750 ] ecx
test al al
je r-xdata
mov ecx [ ebp - 0x1d4 ]
cmp [ ebp - 0x1d4 ] 0x0
je r-xdata
and [ ebp - 0x964 ] 0x0
and [ ebp - 0x1d4 ] 0x0
push 0x0
jmp r-xdata
mov eax [ ebp - 0x754 ]
sub eax [ ebp - 0x74c ]
mov [ ebp - 0x754 ] eax
jne r-xdata
mov eax [ ebp - 0x1d4 ]
xor ecx ecx
mov [ ebp - 0x764 ] eax
xor esi esi
mov eax edi
mul [ ebp + ecx * 4 - 0x3a0 ]
add eax esi
mov [ ebp + ecx * 4 - 0x3a0 ] eax
adc edx 0x0
inc ecx
mov esi edx
cmp ecx [ ebp - 0x764 ]
jne r-xdata
test esi esi
je r-xdata
mov [ ebp - 0x750 ] edx
test al al
jne r-xdata
mov [ ebp - 0x754 ] ecx
test al al
je r-xdata
mov ecx [ ebp - 0x3a4 ]
cmp [ ebp - 0x3a4 ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_413e9c
add esp 0x10
and [ ebp - 0x964 ] 0x0
and [ ebp - 0x3a4 ] 0x0
push 0x0
mov eax [ ebp - 0x770 ]
sub eax [ ebp - 0x75c ]
mov [ ebp - 0x770 ] eax
jne r-xdata
mov eax [ ebp - 0x3a4 ]
xor ecx ecx
mov [ ebp - 0x758 ] eax
xor esi esi
cmp esi ebx
jae r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
and edi [ ebp - 0x758 ]
and eax [ ebp - 0x774 ]
mov ecx [ ebp - 0x750 ]
shl edi cl
mov ecx [ ebp - 0x770 ]
shr eax cl
mov ecx [ ebp - 0x75c ]
or edi eax
mov eax [ ebp - 0x754 ]
sub ecx 0x4
mov [ ebp - 0x75c ] ecx
mov [ ebp + eax * 4 - 0x1d0 ] edi
dec eax
dec esi
mov [ ebp - 0x754 ] eax
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x1d4 ] edx
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
xor edi edi
mov edi [ eax ]
jmp r-xdata
add eax [ ebp - 0x77c ]
mov [ ebp - 0x778 ] eax
cmp esi eax
je r-xdata
mov eax ecx
add ecx eax
mov eax [ ebp - 0x3a4 ]
cmp eax 0x73
jae r-xdata
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
xor edx edx
xor esi esi
mov [ ebp - 0x744 ] edx
test ecx ecx
je r-xdata
mov eax [ ebp - 0x1d4 ]
mov [ ebp - 0x760 ] eax
mov eax [ ebp - 0x1d4 ]
xor ecx ecx
mov [ ebp - 0x764 ] eax
xor esi esi
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
mov ecx [ ebp - 0x758 ]
mov eax edi
mul [ ebp + esi * 4 - 0x1d0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x1d0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x764 ]
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x3a4 ]
cmp eax 0x73
jae r-xdata
xor edx edx
xor esi esi
mov [ ebp - 0x744 ] edx
test ecx ecx
je r-xdata
mov eax [ ebp - 0x3a4 ]
mov [ ebp - 0x760 ] eax
mov eax [ ebp - 0x3a4 ]
xor ecx ecx
mov [ ebp - 0x758 ] eax
xor esi esi
mov ecx [ ebp - 0x764 ]
mov eax edi
mul [ ebp + esi * 4 - 0x3a0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x3a0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x758 ]
jne r-xdata
jmp r-xdata
cmp eax edx
jb r-xdata
and [ ebp - 0x56c ] 0x0
xor ecx ecx
push 0x4
pop eax
inc ecx
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x574 ] ecx
mov [ ebp - 0x3a4 ] ecx
push eax
xor eax eax
mov eax [ ebp - 0x74c ]
mov eax [ eax - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1d4 ]
test eax eax
je r-xdata
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x3a4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_413e9c
add esp 0x10
jmp r-xdata
mov [ ebp + eax * 4 - 0x3a0 ] edi
inc [ ebp - 0x3a4 ]
jmp r-xdata
mov [ ebp + eax * 4 - 0x1d0 ] edi
inc [ ebp - 0x1d4 ]
jmp r-xdata
mov eax edx
mov [ ebp - 0x1d4 ] edx
shl eax 0x2
push eax
lea eax [ ebp - 0x740 ]
lea eax [ ebp - 0x740 ]
sub edi eax
mov [ ebp - 0x784 ] edi
mov eax edi
mul [ ebp + esi * 4 - 0x1d0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x1d0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x764 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
mov [ ebp + eax * 4 - 0x3a0 ] esi
inc [ ebp - 0x3a4 ]
jmp r-xdata
mov eax edx
mov [ ebp - 0x3a4 ] edx
shl eax 0x2
lea eax [ ebp - 0x740 ]
sub edi eax
mov [ ebp - 0x784 ] edi
mov eax edi
mul [ ebp + esi * 4 - 0x3a0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x3a0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x758 ]
jne r-xdata
test ecx ecx
je r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
and eax [ ebp - 0x774 ]
and edi [ ebp - 0x758 ]
mov ecx [ ebp - 0x770 ]
shr eax cl
mov ecx [ ebp - 0x75c ]
shl edi cl
mov ecx [ ebp - 0x760 ]
or eax edi
mov [ ebp + ecx * 4 - 0x1d0 ] eax
dec ecx
mov eax [ ebp - 0x74c ]
dec esi
sub eax 0x4
mov [ ebp - 0x760 ] ecx
mov [ ebp - 0x74c ] eax
cmp ecx 0xffffffff
je r-xdata
xor edi edi
mov esi eax
xor ecx ecx
xor eax eax
xor edi edi
mov ecx esi
mov [ ebp - 0x75c ] eax
cmp [ ebp - 0x760 ] eax
je r-xdata
cmp esi edx
jne r-xdata
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_413e9c
add esp 0x10
xor al al
jmp r-xdata
mov [ ebp + eax * 4 - 0x1d0 ] ecx
inc [ ebp - 0x1d4 ]
jmp r-xdata
xor eax eax
xor edi edi
mov ecx esi
mov [ ebp - 0x74c ] eax
cmp [ ebp - 0x760 ] eax
je r-xdata
cmp esi edx
jne r-xdata
mov eax [ ebp - 0x3a4 ]
cmp eax 0x73
jb r-xdata
cmp ecx edx
jb r-xdata
mov eax [ ebp + ecx * 4 - 0x1d0 ]
mov edx 0x3b9aca00
mul edx
add eax edi
mov [ ebp + ecx * 4 - 0x1d0 ] eax
adc edx 0x0
inc ecx
mov edi edx
cmp ecx esi
jne r-xdata
mov esi [ ebp - 0x74c ]
test edi edi
je r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
inc esi
cmp esi ecx
jne r-xdata
and [ ebp + esi * 4 - 0x740 ] eax
lea edx [ esi + 0x1 ]
mov [ ebp - 0x744 ] edx
jmp r-xdata
test al al
je r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
inc esi
cmp esi ecx
jne r-xdata
and [ ebp + esi * 4 - 0x740 ] eax
lea edx [ esi + 0x1 ]
mov [ ebp - 0x744 ] edx
jmp r-xdata
mov [ ebp + eax * 4 - 0x3a0 ] ecx
inc [ ebp - 0x3a4 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
lea eax [ ebp - 0x570 ]
jmp r-xdata
lea eax [ ebp - 0x3a4 ]
push eax
lea eax [ ebp - 0x1d4 ]
push eax
call sub_416a80
pop ecx
pop ecx
mov ecx [ ebp - 0x778 ]
push 0x8
pop edi
sub ecx esi
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
mov edi [ ebp - 0x784 ]
mov ecx [ ebp - 0x750 ]
test edi edi
je r-xdata
cmp ecx edx
jne r-xdata
lea eax [ edi + esi * 4 ]
mov eax [ ebp + eax - 0x740 ]
mov [ ebp - 0x764 ] eax
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
lea eax [ ebp - 0x960 ]
mov edi [ ebp - 0x784 ]
mov ecx [ ebp - 0x754 ]
test edi edi
je r-xdata
cmp ecx edx
jne r-xdata
lea eax [ edi + esi * 4 ]
mov eax [ ebp + eax - 0x740 ]
mov [ ebp - 0x758 ] eax
test eax eax
jne r-xdata
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_413e9c
add esp 0x10
xor al al
jmp r-xdata
dec edi
cmp edi 0xffffffff
jne r-xdata
mov [ edi + esi ] dl
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_413e9c
add esp 0x10
mov [ ebp + eax * 4 - 0x1d0 ] edi
inc [ ebp - 0x1d4 ]
jmp r-xdata
cmp ecx 0x73
je r-xdata
mov edx [ ebp - 0x770 ]
mov eax [ edx + eax * 4 ]
mul [ ebp - 0x764 ]
add eax edi
adc edx 0x0
add [ ebp + ecx * 4 - 0x740 ] eax
mov eax [ ebp - 0x75c ]
adc edx 0x0
inc eax
inc ecx
mov [ ebp - 0x75c ] eax
mov edi edx
mov edx [ ebp - 0x744 ]
cmp eax [ ebp - 0x760 ]
jne r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
inc eax
add eax esi
mov [ ebp - 0x744 ] eax
mov eax [ ebp - 0x75c ]
test al al
je r-xdata
cmp ecx 0x73
je r-xdata
mov edx [ ebp - 0x750 ]
mov eax [ edx + eax * 4 ]
mul [ ebp - 0x758 ]
add eax edi
adc edx 0x0
add [ ebp + ecx * 4 - 0x740 ] eax
mov eax [ ebp - 0x74c ]
adc edx 0x0
inc eax
inc ecx
mov [ ebp - 0x74c ] eax
mov edi edx
mov edx [ ebp - 0x744 ]
cmp eax [ ebp - 0x760 ]
jne r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
inc eax
add eax esi
mov [ ebp - 0x744 ] eax
mov eax [ ebp - 0x74c ]
xor edx edx
div [ ebp - 0x774 ]
add dl 0x30
cmp ecx edi
jb r-xdata
cmp ecx 0x9
jbe r-xdata
cmp ecx edx
jne r-xdata
cmp ecx edx
jne r-xdata
add esi ecx
mov [ ebp - 0x74c ] esi
cmp esi [ ebp - 0x778 ]
jne r-xdata
push 0x9
pop ecx
mov eax edi
xor edi edi
add [ ebp + ecx * 4 - 0x740 ] eax
mov edx [ ebp - 0x744 ]
adc edi edi
inc ecx
jmp r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x744 ] eax
mov eax edi
xor edi edi
add [ ebp + ecx * 4 - 0x740 ] eax
mov edx [ ebp - 0x744 ]
adc edi edi
inc ecx
jmp r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x744 ] eax
sub_4182ca
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x10 ]
push esi
mov esi [ ebx + 0xc ]
push edi
movzx ecx [ eax ]
mov [ ebp - 0x84 ] ecx
mov eax [ esi ]
sub eax 0x1
je r-xdata
push 0x8
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x84 ]
mov ecx [ ebx + 0x8 ]
cmp ecx 0x10
je r-xdata
push 0x4
jmp r-xdata
sub eax 0x1
je r-xdata
push [ esi ]
call sub_419803
pop ecx
call sub_40da9c
test al al
je r-xdata
mov eax [ ebp - 0x40 ]
fld [ esi + 0x10 ]
and eax 0xffffffe3
or eax 0x3
fstp [ ebp - 0x50 ]
mov [ ebp - 0x40 ] eax
cmp ecx 0x16
je r-xdata
pop edi
push ecx
lea eax [ esi + 0x18 ]
push eax
push edi
call sub_41930f
add esp 0xc
test eax eax
jne r-xdata
push 0x11
jmp r-xdata
sub eax 0x1
je r-xdata
push esi
call sub_40dac9
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x1d
je r-xdata
push 0x12
jmp r-xdata
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
and [ ebp - 0x40 ] 0xfffffffe
jmp r-xdata
sub eax 0x3
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
lea eax [ esi + 0x8 ]
push eax
push ecx
push edi
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_4194ef
add esp 0x18
push 0xffff
push ecx
call sub_418b38
cmp [ esi ] 0x8
pop ecx
pop ecx
je r-xdata
push 0x10
jmp r-xdata
sub_4183e0
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp ebx ecx
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_405fe1
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
push esi
push edi
lea edx [ ecx + eax ]
mov esi eax
mov edx ebx
cmp edi ebx
je r-xdata
jmp r-xdata
sub ebx eax
lea edx [ ecx + eax ]
cmp ebx ecx
ja r-xdata
test eax eax
je r-xdata
mov ecx [ ebp + 0x14 ]
push edi
push esi
call [ r--data ]
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jle r-xdata
mov esi edx
mov edi ecx
cmp esi ebx
ja r-xdata
pop edi
pop esi
sub edi ebx
mov eax [ ebp + 0x10 ]
add esi eax
cmp esi ebx
jbe r-xdata
mov edi esi
mov al [ edx ]
lea edx [ edx + 0x1 ]
mov cl [ edi + edx - 0x1 ]
mov [ edi + edx - 0x1 ] al
mov [ edx - 0x1 ] cl
sub esi 0x1
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
sub_418480
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
cmp edi eax
je r-xdata
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
pop esi
sub edi eax
lea ebx [ ebx ]
mov cl [ eax ]
lea eax [ eax + 0x1 ]
mov dl [ edi + eax - 0x1 ]
mov [ edi + eax - 0x1 ] cl
mov [ eax - 0x1 ] dl
sub esi 0x1
jne r-xdata
sub_4184c0
mov edi edi
push ebp
mov ebp esp
sub esp 0x11c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ebp - 0x104 ] ecx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x100 ] esi
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xfc ] edi
test ecx ecx
jne r-xdata
test edi edi
je r-xdata
test edx edx
je r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_405fe1
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
mov [ ebp - 0x108 ] 0x0
cmp edx 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn
dec edx
imul edx edi
push ebx
add edx ecx
shr ebx 0x1
imul ebx edi
add ebx ecx
push ebx
push ecx
mov ecx esi
mov [ ebp - 0x110 ] ebx
call [ r--data ]
call esi
add esp 0x8
test eax eax
jle r-xdata
push esi
push edi
push [ ebp - 0xf8 ]
push ecx
call sub_4183e0
add esp 0x10
jmp r-xdata
push [ ebp - 0xf8 ]
mov ecx esi
push [ ebp - 0x104 ]
call [ r--data ]
call esi
add esp 0x8
test eax eax
jle r-xdata
push edi
push ebx
push [ ebp - 0x104 ]
call sub_418480
add esp 0xc
mov eax [ ebp - 0x108 ]
sub eax 0x1
mov [ ebp - 0x108 ] eax
js r-xdata
push [ ebp - 0xf8 ]
mov ecx esi
push ebx
call [ r--data ]
call esi
add esp 0x8
test eax eax
jle r-xdata
push edi
push [ ebp - 0xf8 ]
push [ ebp - 0x104 ]
call sub_418480
add esp 0xc
pop ebx
mov ecx [ ebp + eax * 4 - 0xf4 ]
mov edx [ ebp + eax * 4 - 0x7c ]
mov [ ebp - 0x104 ] ecx
jmp r-xdata
mov eax [ ebp - 0xf8 ]
mov edi eax
mov esi [ ebp - 0x104 ]
mov edx [ ebp - 0xfc ]
mov [ ebp - 0x114 ] eax
nop
push edi
push [ ebp - 0xf8 ]
push ebx
call sub_418480
add esp 0xc
mov [ ebp - 0xf8 ] edx
mov edi [ ebp - 0x100 ]
add esi edx
mov [ ebp - 0x10c ] esi
cmp esi ebx
jae r-xdata
mov edi [ ebp - 0x114 ]
mov [ ebp - 0x10c ] esi
push ebx
push esi
mov ecx edi
call [ r--data ]
call edi
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
mov eax [ ebp - 0xf8 ]
jle r-xdata
mov eax [ ebp - 0xf8 ]
mov ecx [ ebp - 0x100 ]
push ebx
push esi
call [ r--data ]
call [ ebp - 0x100 ]
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
jle r-xdata
mov edx [ ebp - 0xfc ]
sub edi edx
cmp edi ebx
jbe r-xdata
add esi edx
cmp esi eax
ja r-xdata
cmp ebx esi
ja r-xdata
mov esi [ ebp - 0x10c ]
mov [ ebp - 0x114 ] edi
cmp edi esi
jb r-xdata
push ebx
push edi
mov ecx esi
call [ r--data ]
call esi
add esp 0x8
test eax eax
jg r-xdata
mov esi [ ebp - 0x100 ]
jmp r-xdata
add edi edx
cmp ebx edi
jae r-xdata
mov [ ebp - 0x118 ] edx
mov [ ebp - 0x11c ] edi
cmp esi edi
je r-xdata
mov edx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
lea esp [ esp ]
mov eax [ ebp - 0xf8 ]
cmp ebx edi
jne r-xdata
mov ebx esi
mov edx edi
mov esi [ ebp - 0x118 ]
sub ebx edi
mov esi [ ebp - 0x10c ]
push ebx
push edi
mov ecx esi
call [ r--data ]
call esi
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x100 ]
push ebx
push edi
call [ r--data ]
call [ ebp - 0x100 ]
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
je r-xdata
cmp ebx esi
jbe r-xdata
mov ebx esi
mov [ ebp - 0x110 ] ebx
jmp r-xdata
mov al [ edx ]
lea edx [ edx + 0x1 ]
mov cl [ ebx + edx - 0x1 ]
mov [ ebx + edx - 0x1 ] al
mov [ edx - 0x1 ] cl
sub esi 0x1
jne r-xdata
mov esi [ ebp - 0x10c ]
mov ebx [ ebp - 0x110 ]
mov edx [ ebp - 0xfc ]
cmp esi edx
jae r-xdata
cmp ebx edi
jae r-xdata
sub edi edx
cmp edi [ ebp - 0x104 ]
jbe r-xdata
sub edi edx
cmp edi ebx
jbe r-xdata
cmp ebx edi
jb r-xdata
mov ecx [ ebp - 0x104 ]
mov esi [ ebp - 0x100 ]
cmp ecx edi
jae r-xdata
mov eax [ ebp - 0x108 ]
mov [ ebp + eax * 4 - 0xf4 ] esi
mov [ ebp + eax * 4 - 0x7c ] edx
inc eax
mov [ ebp - 0x108 ] eax
mov edi [ ebp - 0xfc ]
cmp esi edx
jae r-xdata
mov eax [ ebp - 0x108 ]
mov [ ebp + eax * 4 - 0xf4 ] ebx
mov [ ebp + eax * 4 - 0x7c ] edi
inc eax
mov [ ebp - 0x108 ] eax
mov edx [ ebp - 0xf8 ]
mov eax edi
mov ebx [ ebp - 0x104 ]
mov ecx edx
sub ecx esi
sub eax ebx
cmp eax ecx
jl r-xdata
mov edi [ ebp - 0xfc ]
mov edx edi
mov edi [ ebp - 0xfc ]
jmp r-xdata
mov esi [ ebp - 0x100 ]
jmp r-xdata
mov ecx esi
mov esi [ ebp - 0x100 ]
mov [ ebp - 0x104 ] ecx
jmp r-xdata
mov eax edx
xor edx edx
sub eax ecx
div edi
lea ebx [ eax + 0x1 ]
cmp ebx 0x8
ja r-xdata
sub_41885a
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_40f7a3
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
mov [ ecx ] dl
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebx
sub esi ecx
mov ebx eax
push edi
mov edi ecx
cmp edx 0xffffffff
jne r-xdata
mov [ ecx ] 0x0
mov al [ esi + edi ]
mov [ edi ] al
inc edi
test al al
je r-xdata
mov al [ esi + edi ]
mov [ edi ] al
inc edi
test al al
je r-xdata
test edx edx
mov edx [ ebp + 0x14 ]
jne r-xdata
sub ebx 0x1
je r-xdata
pop edi
test ebx ebx
pop ebx
jne r-xdata
sub ebx 0x1
jne r-xdata
mov [ edi ] 0x0
sub edx 0x1
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
jmp r-xdata
mov [ ecx ] 0x0
call sub_40f7a3
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ ecx + eax - 0x1 ] 0x0
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_40f6e7
mov eax esi
sub_418920
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_418977
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] esi
jb r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
jmp r-xdata
mov esp ebp
pop ebp
retn
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_40a748
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
dec esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea ecx [ esi - 0x1 ]
pop esi
mov eax esi
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax esi
sub eax ecx
and eax 0x1
sub esi eax
movzx eax [ ecx ]
test [ eax + edx + 0x19 ] 0x4
jne r-xdata
dec ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
sub_418a13
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
or eax 0xffffffff
pop ebp
retn
sub_418a46
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_40df83
pop ecx
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
push edi
call sub_40df49
pop ecx
jmp r-xdata
pop edi
pop ebp
retn
push esi
push edi
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
test eax eax
je r-xdata
call sub_40f7a3
mov [ eax ] 0xc
xor eax eax
call sub_40de14
test eax eax
je r-xdata
jmp r-xdata
push esi
call sub_40d9f1
pop ecx
test eax eax
je r-xdata
pop esi
sub_418aaf
push 0x8
push r--data
call sub_406590
cmp [ rw-data ] 0x1
jl r-xdata
call sub_4065d6
retn
mov eax [ ebp + 0x8 ]
test al 0x40
je r-xdata
and eax 0xffffffbf
mov [ ebp + 0x8 ] eax
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_418b38
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
not ecx
and cx [ ebp - 0x4 ]
and eax [ ebp + 0xc ]
or cx ax
mov [ ebp - 0x8 ] cx
fldcw [ ebp - 0x8 ]
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_418b64
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ r--data ]
fistp [ ebp - 0x4 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ r--data ]
fstp [ ebp - 0xc ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ r--data ]
fstp [ ebp - 0xc ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
mov esp ebp
pop ebp
retn
fldpi
fstp [ ebp - 0xc ]
fwait
sub_418be0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_418c41
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
xor eax eax
jmp r-xdata
push ebx
push edi
call sub_40ec34
neg eax
sbb ebx ebx
xor edi edi
push edi
push edi
push 0xffffffff
push [ ebp + 0x8 ]
inc ebx
mov [ esi ] edi
push edi
push ebx
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
add eax eax
push eax
call sub_40df83
mov esi eax
pop ecx
test esi esi
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_40f76d
xor eax eax
jmp r-xdata
pop esi
push esi
call sub_40df49
mov eax edi
push [ ebp - 0x4 ]
push esi
push 0xffffffff
push [ ebp + 0x8 ]
push edi
push ebx
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
pop ecx
pop edi
pop ebx
mov ecx [ ebp + 0xc ]
mov eax esi
mov esi edi
xor edi edi
inc edi
mov [ ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_40f76d
pop ecx
jmp r-xdata
sub_418d08
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push 0x1
push esi
push esi
push edi
call sub_416633
mov ecx eax
mov [ ebp - 0x10 ] eax
and ecx edx
mov [ ebp - 0xc ] edx
add esp 0x10
cmp ecx 0xffffffff
jne r-xdata
push 0x2
push esi
push esi
push edi
call sub_416633
mov ecx eax
add esp 0x10
and ecx edx
cmp ecx 0xffffffff
je r-xdata
call sub_40f7a3
mov eax [ eax ]
jmp r-xdata
push ebx
mov ebx [ ebp + 0xc ]
sub ebx eax
mov eax [ ebp + 0x10 ]
sbb eax edx
mov [ ebp - 0x4 ] eax
js r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp eax esi
jg r-xdata
jg r-xdata
push esi
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push edi
call sub_416633
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
jl r-xdata
push 0x1
push 0x1000
call sub_40e014
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
cmp ebx esi
jbe r-xdata
xor eax eax
call sub_40f7a3
mov eax [ eax ]
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_416633
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp ebx esi
jae r-xdata
push 0x8000
push edi
call sub_40dc84
pop ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_40f7a3
mov [ eax ] 0xc
jmp r-xdata
pop ebx
push edi
call sub_4148d7
pop ecx
push eax
call [ SetEndOfFile@IAT ]
test eax eax
jne r-xdata
mov eax ebx
jg r-xdata
call sub_40f7a3
push esi
mov edi [ eax ]
call sub_40df49
pop ecx
mov eax edi
jmp r-xdata
call sub_40f7a3
mov [ eax ] 0xd
call sub_40f790
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
jmp r-xdata
call sub_40f790
cmp [ eax ] 0x5
jne r-xdata
cdq
sub ebx eax
mov eax [ ebp - 0x4 ]
sbb eax edx
mov [ ebp - 0x4 ] eax
test eax eax
jg r-xdata
mov eax 0x1000
jmp r-xdata
cmp ebx 0x1000
jb r-xdata
call sub_40f7a3
mov [ eax ] 0xd
jl r-xdata
push eax
push esi
push edi
call sub_410988
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push edi
call sub_40dc84
push esi
call sub_40df49
add esp 0xc
xor esi esi
test ebx ebx
jne r-xdata
test eax eax
jl r-xdata
sub_418ecf
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx ] al
je r-xdata
pop ebp
retn
cmp eax [ ebp + 0xc ]
je r-xdata
inc eax
cmp [ eax + ecx ] 0x0
jne r-xdata
sub_418eeb
mov edi edi
push ebp
mov ebp esp
push esi
call sub_419b77
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_419bba
mov [ esi + 0x4 ] eax
xor eax eax
pop esi
pop ebp
retn
sub_418f08
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
push [ esi ]
call sub_419c62
push [ esi + 0x4 ]
call sub_419ce2
lea eax [ ebp - 0x8 ]
push eax
call sub_418eeb
mov eax [ esi ]
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
inc eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
xor eax eax
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_418f51
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
push eax
call sub_418eeb
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ecx ] edx
or edx 0x1f
push eax
mov [ ebp - 0x8 ] edx
call sub_418f08
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
call sub_415167
xor eax eax
mov esp ebp
pop ebp
retn
sub_418fa0
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ esp + 0x4 ]
call sub_4130c5
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_419d88
sub_418fe0
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_413108
call sub_419038
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_419d70
sub_419038
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
mov eax [ esp + 0xc ]
cmp [ esp ] 0x27f
je r-xdata
call sub_4130ac
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
test eax 0x7ff00000
je r-xdata
fldcw [ r--data ]
cmp [ rw-data ] 0x0
jne r-xdata
and eax 0x80000000
je r-xdata
test eax 0xfffff
jne r-xdata
test eax 0x80000000
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
lea ecx [ r--data ]
mov edx 0x1b
call sub_413227
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
jmp r-xdata
test eax 0x80000000
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fldlg2
fxch st1
fyl2x
pop edx
retn
fldcw [ esp ]
lea ecx [ r--data ]
mov edx 0x1b
jmp r-xdata
jmp r-xdata
fstp st0
fld [ r--data ]
mov eax 0x2
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_413227
pop edx
retn
sub_4190f0
cmp [ rw-data ] 0x0
je r-xdata
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi 0xffff
push esi
push 0x1b3f
call sub_418b38
fld [ ebp + 0x8 ]
mov ebx eax
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov eax 0x7ff0
and ecx eax
push ecx
push ecx
fstp [ esp ]
cmp cx ax
jne r-xdata
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
call sub_41a7be
fst [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0x8
fucom st1
fnstsw ax
test ah 0x44
jpe r-xdata
call sub_41a5cb
dec eax
pop ecx
pop ecx
cmp eax 0x2
ja r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
test bl 0x20
jne r-xdata
push esi
fstp st1
push ebx
fstp st0
call sub_418b38
fld [ ebp - 0x8 ]
pop ecx
pop ecx
jmp r-xdata
fld [ ebp + 0x8 ]
fld [ r--data ]
push ebx
sub esp 0x10
fadd st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0xc
push 0x8
jmp r-xdata
push esi
push ebx
call sub_418b38
fld [ ebp + 0x8 ]
pop ecx
pop ecx
jmp r-xdata
jmp r-xdata
push ebx
sub esp 0x10
fxch st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0xc
push 0x10
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_419241
add esp 0x1c
movq xmm0 [ esp + 0x4 ]
movapd xmm2 [ r--data ]
movapd xmm1 xmm0
movapd xmm7 xmm0
psrlq xmm0 0x34
movd eax xmm0
andpd xmm0 [ r--data ]
psubd xmm2 xmm0
psrlq xmm1 xmm2
test eax 0x800
je r-xdata
movq xmm0 [ esp + 0x4 ]
psllq xmm1 xmm2
movapd xmm3 xmm0
cmppd xmm0 xmm1 0x6
cmp eax 0x3ff
jl r-xdata
cmp eax 0xbff
jl r-xdata
cmppd xmm3 [ r--data ] 0x6
andpd xmm3 [ r--data ]
movq [ esp + 0x4 ] xmm3
fld [ esp + 0x4 ]
retn
cmp eax 0x432
jg r-xdata
fld [ r--data ]
retn
psllq xmm1 xmm2
cmp eax 0xc32
jg r-xdata
ucomisd xmm7 xmm7
jpo r-xdata
andpd xmm0 [ r--data ]
addsd xmm1 xmm0
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
fld [ esp + 0x4 ]
retn
mov edx 0x3ec
sub esp 0x10
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x14
mov [ esp + 0x8 ] edx
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_41a1f7
add esp 0x10
sub_41920d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test al 0x20
je r-xdata
test al 0x8
je r-xdata
push 0x5
jmp r-xdata
test al 0x4
je r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
test al 0x1
je r-xdata
push 0x2
jmp r-xdata
movzx eax al
and eax 0x2
add eax eax
pop ebp
retn
push 0x3
sub_419241
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebx + 0x20 ]
lea eax [ ebx + 0x18 ]
push edi
push esi
push eax
push [ ebx + 0x8 ]
call sub_41930f
add esp 0xc
test eax eax
jne r-xdata
push [ ebx + 0x8 ]
call sub_41920d
pop ecx
mov edi eax
call sub_40da9c
test al al
je r-xdata
and [ ebp - 0x40 ] 0xfffffffe
push eax
lea eax [ ebx + 0x18 ]
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x20 ]
push [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_419512
mov esi [ ebx + 0x20 ]
add esp 0x1c
push edi
call sub_419803
mov [ esp ] 0xffff
push esi
call sub_418b38
fld [ ebx + 0x18 ]
pop ecx
pop ecx
test edi edi
je r-xdata
fld [ ebx + 0x18 ]
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push edi
call sub_419832
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_41930f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ebx
and esi 0x1f
test bl 0x8
je r-xdata
mov eax ebx
and eax [ ebp + 0x10 ]
test al 0x4
je r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
test bl 0x1
je r-xdata
push 0x4
call sub_418b64
pop ecx
and esi 0xfffffffb
jmp r-xdata
push 0x1
call sub_418b64
pop ecx
and esi 0xfffffff7
jmp r-xdata
test bl 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
test bl 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_418b64
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
mov esp ebp
pop ebp
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
push edi
xor edi edi
test bl 0x10
je r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_418b64
pop ecx
and esi 0xffffffef
mov ecx [ ebp + 0xc ]
fld [ ecx ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
inc edi
fld [ r--data ]
fld [ r--data ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
xor edi edi
inc edi
fld [ ecx ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_41a4c8
mov eax [ ebp - 0x4 ]
add esp 0xc
add eax 0xfffffa00
mov [ ebp - 0x4 ] eax
fst [ ebp - 0x10 ]
fldz
cmp eax 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ r--data ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and esi 0xfffffffd
push 0x10
call sub_418b64
pop ecx
fcompp
xor edx edx
fnstsw ax
test ah 0x41
jne r-xdata
xor edi edi
fmulp st1
inc edi
jmp r-xdata
fld [ r--data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
fld [ r--data ]
test ah 0x5
jpo r-xdata
mov eax [ ebp - 0xa ]
mov ecx 0xfffffc03
and eax 0xf
or eax 0x10
mov [ ebp - 0xa ] ax
mov eax [ ebp - 0x4 ]
cmp eax ecx
jge r-xdata
inc edx
mov eax [ ebp + 0xc ]
fstp [ eax ]
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0x10 ]
test edx edx
je r-xdata
sub ecx eax
mov eax [ ebp - 0x10 ]
test edi edi
pop edi
je r-xdata
fchs
shr eax 0x1
test [ ebp - 0xc ] 0x1
mov [ ebp - 0x10 ] eax
je r-xdata
test edi edi
jne r-xdata
shr [ ebp - 0xc ] 0x1
sub ecx 0x1
jne r-xdata
or eax 0x80000000
mov [ ebp - 0x10 ] eax
inc edi
test [ ebp - 0x10 ] 0x1
je r-xdata
sub_4194ef
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419512
add esp 0x1c
pop ebp
retn
sub_419512
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
xor ebx ebx
inc ebx
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push edi
mov edi 0xc000000d
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0x10 ]
test cl 0x10
je r-xdata
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc000008f
or [ eax + 0x4 ] ebx
test cl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000093
or [ eax + 0x4 ] 0x2
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000091
or [ eax + 0x4 ] 0x4
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc000008e
or [ eax + 0x4 ] 0x8
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
shl eax 0x4
not eax
xor eax [ ecx + 0x8 ]
and eax 0x10
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
add eax eax
not eax
xor eax [ ecx + 0x8 ]
and eax 0x8
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
shr eax 0x1
not eax
xor eax [ ecx + 0x8 ]
and eax 0x4
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
shr eax 0x3
not eax
xor eax [ ecx + 0x8 ]
and eax 0x2
xor [ ecx + 0x8 ] eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
shr eax 0x5
not eax
xor eax [ ecx + 0x8 ]
and eax ebx
xor [ ecx + 0x8 ] eax
call sub_418bbf
mov edx eax
test dl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000090
or [ eax + 0x4 ] 0x10
test dl 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test dl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x8
test dl 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x4
test dl 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffeb
or eax 0x8
cmp eax 0x200
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffd
or eax ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x20 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x20 ] eax
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov ecx [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
mov eax [ ecx + 0x60 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x60 ] eax
mov eax [ ebp + 0x8 ]
fld [ ebx ]
fstp [ eax + 0x50 ]
mov eax [ ebp + 0x8 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
and [ eax + 0x60 ] 0xffffffe1
mov eax [ ebp + 0x8 ]
fld [ ebx ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffe7
or eax 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffe
or eax 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_418b25
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
push edi
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] 0x1
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
mov edx 0xfffff3ff
and eax 0x3
sub eax 0x0
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
sub eax 0x1
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
sub eax 0x1
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
sub eax 0x1
je r-xdata
fld [ ecx + 0x50 ]
fstp [ ebx ]
fld [ ecx + 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
sub eax 0x1
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
sub eax 0x1
jne r-xdata
pop edi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] 0x0
pop esi
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax 0x0
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_419803
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x1
je r-xdata
call sub_40f7a3
mov [ eax ] 0x21
add eax 0xfffffffe
cmp eax 0x1
ja r-xdata
pop ebp
retn
call sub_40f7a3
mov [ eax ] 0x22
pop ebp
retn
sub_419832
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub esp 0x20
xor ecx ecx
mov eax ecx
mov ecx [ eax * 8 + r--data ]
inc eax
cmp eax 0x1d
jl r-xdata
push 0xffff
push [ ebp + 0x28 ]
call sub_418b38
push [ ebp + 0x8 ]
call sub_419803
fld [ ebp + 0x20 ]
add esp 0xc
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x20 ]
push 0xffff
push [ ebp + 0x28 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] eax
call sub_418b38
lea eax [ ebp - 0x20 ]
push eax
call sub_40dac9
add esp 0xc
test eax eax
jne r-xdata
cmp [ eax * 8 + r--data ] edx
je r-xdata
jmp r-xdata
fld [ ebp - 0x8 ]
pop esi
jmp r-xdata
push esi
call sub_419803
pop ecx
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
sub_4198d4
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0x7e80
je r-xdata
mov eax ecx
pop ebp
retn
test dl dl
jns r-xdata
push edi
mov edi 0x200
test edi edx
je r-xdata
push 0x10
pop ecx
test edx 0x400
je r-xdata
or ecx 0x8
test edx 0x800
je r-xdata
or ecx 0x4
test edx 0x1000
je r-xdata
or ecx 0x2
push esi
mov esi 0x6000
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x1
test edx 0x4000
je r-xdata
or ecx 0x300
jmp r-xdata
test edx 0x2000
je r-xdata
or ecx 0x100
jmp r-xdata
pop edi
or ecx edi
sub_419951
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0xc3d
je r-xdata
mov eax ecx
pop ebp
retn
test dl 0x1
je r-xdata
test dl 0x4
je r-xdata
push 0x10
pop ecx
test dl 0x8
je r-xdata
or ecx 0x8
test dl 0x10
je r-xdata
or ecx 0x4
test dl 0x20
je r-xdata
or ecx 0x2
push esi
mov esi 0xc00
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x1
test edx 0x800
je r-xdata
or ecx 0x300
jmp r-xdata
test edx 0x400
je r-xdata
or ecx 0x100
jmp r-xdata
or ecx 0x200
sub_4199c4
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0x31f
je r-xdata
mov eax ecx
pop ebp
retn
test dl 0x10
je r-xdata
test dl 0x8
je r-xdata
inc ecx
test dl 0x4
je r-xdata
or ecx 0x4
test dl 0x2
je r-xdata
or ecx 0x8
test dl 0x1
je r-xdata
or ecx 0x10
push esi
mov esi 0x300
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x20
test edx 0x200
je r-xdata
or ecx 0xc00
jmp r-xdata
test edx 0x100
je r-xdata
or ecx 0x400
jmp r-xdata
or ecx 0x800
sub_419a35
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0x31f
je r-xdata
mov eax ecx
pop ebp
retn
test dl 0x10
je r-xdata
push edi
mov edi 0x200
test dl 0x8
je r-xdata
mov ecx 0x80
test dl 0x4
je r-xdata
or ecx edi
test dl 0x2
je r-xdata
or ecx 0x400
test dl 0x1
je r-xdata
or ecx 0x800
push esi
mov esi 0x300
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x1000
test edi edx
je r-xdata
or ecx 0x6000
jmp r-xdata
test edx 0x100
je r-xdata
or ecx 0x2000
jmp r-xdata
pop edi
or ecx 0x4000
sub_419ab5
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test dl 0x1f
je r-xdata
mov eax ecx
pop ebp
retn
push esi
mov esi 0x10000010
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
mov esi 0x8000008
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
inc ecx
mov esi 0x4000004
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
or ecx 0x4
mov esi 0x2000002
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x8
mov eax 0x1000001
and edx eax
cmp edx eax
jne r-xdata
or ecx 0x10
or ecx 0x20
sub_419b16
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test dl 0x1f
je r-xdata
mov eax ecx
pop ebp
retn
push esi
mov esi 0x100010
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
mov esi 0x80008
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
inc ecx
mov esi 0x40004
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
or ecx 0x4
mov esi 0x20002
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x8
mov eax 0x10001
and edx eax
cmp edx eax
jne r-xdata
or ecx 0x10
or ecx 0x20
sub_419b77
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
xor eax eax
and [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ax
fnstcw [ ebp - 0x4 ]
cmp [ rw-data ] 0x1
jl r-xdata
movzx eax [ ebp - 0x4 ]
push esi
push eax
call sub_419951
push [ ebp - 0x8 ]
mov esi eax
call sub_4198d4
pop ecx
or eax esi
pop ecx
and eax 0x31f
pop esi
mov esp ebp
pop ebp
retn
stmxcsr [ ebp - 0x8 ]
sub_419bba
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
xor eax eax
xor ecx ecx
mov [ ebp - 0x4 ] ax
mov [ ebp - 0x8 ] ecx
fnstsw [ ebp - 0x4 ]
cmp [ rw-data ] 0x1
jl r-xdata
movzx edx [ ebp - 0x4 ]
mov eax ecx
test dl 0x3d
je r-xdata
stmxcsr [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
test dl 0x3d
je r-xdata
test dl 0x1
je r-xdata
or eax ecx
and eax 0x1f1f001f
mov esp ebp
pop ebp
retn
test dl 0x1
je r-xdata
test dl 0x4
je r-xdata
mov eax 0x100010
test dl 0x4
je r-xdata
mov ecx 0x10000010
test dl 0x8
je r-xdata
or eax 0x80008
test dl 0x8
je r-xdata
or ecx 0x8000008
test dl 0x10
je r-xdata
or eax 0x40004
test dl 0x10
je r-xdata
or ecx 0x4000004
test dl 0x20
je r-xdata
or eax 0x20002
test dl 0x20
je r-xdata
or ecx 0x2000002
or eax 0x10001
or ecx 0x1000001
sub_419c62
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
fnstenv [ ebp - 0x20 ]
mov ebx 0x31f
push ebx
call sub_4199c4
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x20 ]
call sub_4199c4
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x20 ] esi
fldenv [ ebp - 0x20 ]
cmp [ rw-data ] 0x1
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] edi
stmxcsr [ ebp - 0x4 ]
push ebx
call sub_419a35
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x4 ]
call sub_419a35
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x4 ] esi
ldmxcsr [ ebp - 0x4 ]
sub_419ce2
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
fnstenv [ ebp - 0x20 ]
mov ebx 0x1f1f001f
push ebx
call sub_419b16
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x1c ]
call sub_419b16
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x1c ] esi
fldenv [ ebp - 0x20 ]
cmp [ rw-data ] 0x1
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] edi
stmxcsr [ ebp - 0x4 ]
push ebx
call sub_419ab5
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x4 ]
call sub_419ab5
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x4 ] esi
ldmxcsr [ ebp - 0x4 ]
sub_419d8e
mov edx 0x0
movlpd xmm0 [ esp + 0x4 ]
movapd xmm1 [ r--data ]
cmpsd xmm1 xmm0 0x0
pextrw eax xmm1 0x0
cmp eax 0x0
ja r-xdata
sub ecx 0x3fe
add ecx edx
cvtsi2sd xmm6 ecx
unpcklpd xmm6 xmm6
shl ecx 0xa
add eax ecx
mov ecx 0x10
mov edx 0x0
cmp eax 0x0
cmove edx ecx
movapd xmm1 [ r--data ]
movapd xmm3 xmm0
movapd xmm2 [ r--data ]
mulpd xmm1 xmm0
mulpd xmm3 xmm3
addpd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm3
movapd xmm5 [ r--data ]
mulpd xmm6 xmm5
movapd xmm5 [ edx + r--data ]
andpd xmm4 xmm5
addpd xmm7 xmm6
addpd xmm7 xmm4
mulpd xmm1 xmm0
mulsd xmm3 xmm0
addpd xmm1 xmm2
movapd xmm2 [ r--data ]
mulpd xmm2 xmm0
movapd xmm6 xmm7
unpckhpd xmm6 xmm6
mulpd xmm1 xmm3
sub esp 0x10
movapd xmm0 xmm1
addpd xmm1 xmm2
unpckhpd xmm0 xmm0
addsd xmm0 xmm1
addsd xmm0 xmm6
addsd xmm0 xmm7
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movlpd xmm2 [ r--data ]
divsd xmm2 xmm0
movlpd xmm1 [ r--data ]
mov edx 0x8
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
sub esp 0x1c
movlpd [ esp + 0x10 ] xmm1
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
add edx 0x10
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_41a1f7
fld [ esp + 0x10 ]
add esp 0x1c
retn
movlpd xmm1 [ r--data ]
mulsd xmm0 xmm1
mov edx 0xffffffcc
jmp r-xdata
cmp ecx 0x7fe
ja r-xdata
movapd xmm5 xmm0
unpcklpd xmm0 xmm0
psrlq xmm5 0x34
pextrw ecx xmm5 0x0
movapd xmm1 [ r--data ]
movapd xmm2 [ r--data ]
movapd xmm3 [ r--data ]
movapd xmm4 [ r--data ]
movapd xmm6 [ r--data ]
andpd xmm0 xmm1
orpd xmm0 xmm3
addpd xmm4 xmm0
pextrw eax xmm4 0x0
and eax 0x7f0
movapd xmm4 [ eax + r--data ]
movapd xmm7 [ eax + r--data ]
andpd xmm6 xmm0
subpd xmm0 xmm6
mulpd xmm6 xmm4
subpd xmm6 xmm2
addsd xmm7 xmm6
mulpd xmm0 xmm4
movapd xmm4 xmm0
addpd xmm0 xmm6
and ecx 0xfff
sub ecx 0x1
cmp ecx 0x7fd
ja r-xdata
add ecx 0x1
and ecx 0x7ff
cmp ecx 0x7ff
jae r-xdata
movlpd xmm0 [ esp + 0x4 ]
movapd xmm1 [ r--data ]
movapd xmm2 [ r--data ]
andpd xmm0 xmm1
orpd xmm0 xmm2
cmpsd xmm2 xmm0 0x0
pextrw eax xmm2 0x0
cmp eax 0x0
je r-xdata
movlpd xmm2 [ esp + 0x4 ]
movlpd xmm0 [ esp + 0x4 ]
movd eax xmm2
psrlq xmm2 0x20
movd ecx xmm2
and ecx 0xfffff
or eax ecx
cmp eax 0x0
je r-xdata
xorpd xmm1 xmm1
divsd xmm1 xmm1
mov edx 0x9
mov edx 0x3e9
jmp r-xdata
fld [ r--data ]
retn
mov edx 0x3e9
jmp r-xdata
sub_419ffb
jmp r-xdata
mov [ ebp - 0x90 ] 0xfe
or ch ch
jne r-xdata
call sub_41a191
or eax eax
je r-xdata
fxch st1
jmp sub_413033
xor ch ch
cmp eax 0x2
je r-xdata
call sub_41a14e
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
fxch st1
fabs
jmp r-xdata
not ch
test dl 0x40
jne r-xdata
fld1
fdivrp st1
fyl2x
jmp r-xdata
or ch ch
je r-xdata
fscale
jmp sub_412f78
fchs
sub_41a011
mov [ ebp - 0x90 ] 0xfe
xor ch ch
fldl2e
fmulp st1
call sub_41a14e
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
test dl 0x40
jne r-xdata
fld1
fdivrp st1
or ch ch
je r-xdata
fscale
jmp sub_412f78
fchs
sub_41a0bd
call sub_41a191
fstp st0
fstp st0
or cl cl
jne r-xdata
mov [ ebp - 0x90 ] 0x2
fld [ r--data ]
cmp eax 0x1
jne r-xdata
fldz
cmp eax 0x1
jne r-xdata
retn
or ch ch
je r-xdata
or ch ch
je r-xdata
fchs
jmp r-xdata
fchs
sub_41a14e
fld st0
fabs
fld [ r--data ]
fcompp
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x41
jne r-xdata
pop eax
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x1
jne r-xdata
fld st0
frndint
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
mov dl [ ebp - 0x9f ]
fxch st1
fsub st1
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fabs
f2xm1
retn
mov [ ebp - 0x90 ] 0x4
jmp sub_412f86
fstp st0
fld [ r--data ]
or ch ch
je r-xdata
retn
fchs
sub_41a191
fld st0
frndint
fcomp st1
fwait
fnstsw ax
sahf
jne r-xdata
mov eax 0x0
jmp r-xdata
fld st0
fmul [ r--data ]
fld st0
frndint
fcompp
fwait
fnstsw ax
sahf
je r-xdata
retn
mov eax 0x2
jmp r-xdata
mov eax 0x1
sub_41a1c5
push esi
sub esp 0x74
mov esi esp
push esi
sub esp 0x8
fstp [ esp ]
sub esp 0x8
fstp [ esp ]
fwait
fnsave [ esi + 0x8 ]
call sub_41a693
add esp 0x14
frstor [ esi + 0x8 ]
fld [ esi ]
add esp 0x74
pop esi
test eax eax
je r-xdata
retn
jmp sub_413046
sub_41a1f7
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
push esi
push edi
je r-xdata
mov edi sub_40dac9
push [ rw-data ]
call [ DecodePointer@IAT ]
mov edi eax
jmp r-xdata
sub eax 0x1b
je r-xdata
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax 0x1a
jg r-xdata
mov [ ebp - 0x24 ] 0x2
sub eax 0x1
je r-xdata
fld1
cmp eax 0xe
jg r-xdata
fld [ ebp - 0xc ]
fstp [ esi ]
call sub_40f7a3
mov [ eax ] 0x22
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x15
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_405fe1
mov esp ebp
pop ebp
retn
sub eax 0xf
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx edi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x24 ] 0x1
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fld [ eax ]
lea eax [ ebp - 0x24 ]
fstp [ ebp - 0x14 ]
fld [ esi ]
push eax
fstp [ ebp - 0xc ]
call [ r--data ]
call edi
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x24 ] 0x3
mov [ ebp - 0x20 ] r--data
jmp r-xdata
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_40f7a3
mov [ eax ] 0x21
jmp r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx edi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x24 ] 0x4
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fld [ eax ]
lea eax [ ebp - 0x24 ]
fstp [ ebp - 0x14 ]
fld [ esi ]
push eax
fstp [ ebp - 0xc ]
call [ r--data ]
call edi
pop ecx
jmp r-xdata
mov [ ebp - 0x24 ] 0x3
jmp r-xdata
sub eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx edi
mov esi [ ebp + 0x10 ]
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fld [ eax ]
lea eax [ ebp - 0x24 ]
fstp [ ebp - 0x14 ]
fld [ esi ]
push eax
fstp [ ebp - 0xc ]
call [ r--data ]
call edi
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x1
je r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x3ab
je r-xdata
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
fld [ eax ]
jmp r-xdata
sub eax 0x1
jne r-xdata
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x1
jne r-xdata
mov eax [ ebp + 0x10 ]
fstp [ eax ]
jmp r-xdata
mov [ ebp - 0x20 ] r--data
sub_41a4c8
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fldz
fucom st1
fnstsw ax
push edi
test ah 0x44
jpe r-xdata
push esi
mov si [ ebp + 0xe ]
movzx eax si
test eax 0x7ff0
jne r-xdata
fstp st1
xor edi edi
jmp r-xdata
push 0x0
push ecx
fstp st0
push ecx
fstp [ esp ]
call sub_41a59c
movzx edi si
add esp 0xc
shr edi 0x4
and edi 0x7ff
sub edi 0x3fe
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
test ecx 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
pop edi
pop ebp
retn
fcompp
mov edi 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
test edx edx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
mov ecx 0xffef
and si cx
mov [ ebp + 0xe ] si
test eax eax
je r-xdata
add ecx ecx
mov [ ebp + 0xc ] ecx
test edx edx
jns r-xdata
test [ ebp + 0xe ] 0x10
jne r-xdata
fld [ ebp + 0x8 ]
push 0x0
push ecx
push ecx
fstp [ esp ]
call sub_41a59c
add esp 0xc
jmp r-xdata
mov eax 0x8000
or si ax
mov [ ebp + 0xe ] si
add edx edx
dec edi
test [ ebp + 0xe ] 0x10
je r-xdata
or ecx 0x1
mov [ ebp + 0xc ] ecx
pop esi
mov si [ ebp + 0xe ]
mov [ ebp + 0x8 ] edx
sub_41a59c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x10 ]
movzx eax [ ebp + 0xe ]
fld [ ebp + 0x8 ]
and eax 0x800f
fstp [ ebp - 0x8 ]
lea ecx [ ecx + 0x3fe ]
shl ecx 0x4
or ecx eax
mov [ ebp - 0x2 ] cx
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_41a5cb
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x7ff00000
mov eax [ ebp + 0x8 ]
jne r-xdata
cmp [ ebp + 0xc ] 0xfff00000
jne r-xdata
test eax eax
jne r-xdata
mov cx [ ebp + 0xe ]
mov edx 0x7ff8
and cx dx
cmp cx dx
jne r-xdata
test eax eax
jne r-xdata
inc eax
pop ebp
retn
mov edx 0x7ff0
cmp cx dx
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
xor eax eax
pop ebp
retn
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
pop eax
pop ebp
retn
push 0x4
jmp r-xdata
test eax eax
je r-xdata
sub_41a629
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_41a7d4
pop ecx
pop ecx
test al 0x90
jne r-xdata
xor eax eax
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_41a7be
fld [ ebp + 0x8 ]
fucom st1
fnstsw ax
pop ecx
pop ecx
fstp st1
test ah 0x44
jpe r-xdata
fstp st0
fmul [ r--data ]
push ecx
push ecx
fst [ ebp - 0x8 ]
fstp [ esp ]
call sub_41a7be
fld [ ebp - 0x8 ]
fucompp
fnstsw ax
pop ecx
pop ecx
test ah 0x44
jpe r-xdata
xor eax eax
inc eax
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_41a693
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
mov ecx 0x7ff00000
fabs
mov eax 0xfff00000
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp + 0x14 ] eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
fstp st0
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
cmp [ ebp + 0xc ] eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
fcom st1
fnstsw ax
fstp st1
test ah 0x41
mov eax [ ebp + 0x18 ]
jne r-xdata
fstp st1
fstp st0
fld [ r--data ]
jmp r-xdata
xor eax eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
fldz
fld [ ebp + 0x10 ]
fcom st1
fnstsw ax
test ah 0x41
je r-xdata
fcom st1
fnstsw ax
fstp st1
test ah 0x41
mov eax [ ebp + 0x18 ]
jne r-xdata
fstp st1
fstp st0
fldz
jmp r-xdata
fstp [ eax ]
fstp st0
fldz
jmp r-xdata
mov eax [ ebp + 0x18 ]
fld [ ebp + 0x10 ]
push ecx
push ecx
fstp [ esp ]
call sub_41a629
fldz
fld [ ebp + 0x10 ]
pop ecx
pop ecx
fcom st1
mov ecx eax
fnstsw ax
test ah 0x41
jne r-xdata
fcomp st1
fnstsw ax
test ah 0x5
mov eax [ ebp + 0x18 ]
jpo r-xdata
fstp st0
fld [ r--data ]
jmp r-xdata
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld [ r--data ]
cmp ecx 0x1
jne r-xdata
fstp st0
fld1
jmp r-xdata
fstp st0
fld1
cmp ecx 0x1
jne r-xdata
fchs
jmp r-xdata
fstp st0
fld [ r--data ]
jmp r-xdata
sub_41a7d4
mov edi edi
push ebp
mov ebp esp
mov cx [ ebp + 0xe ]
mov edx 0x7ff0
mov ax cx
and ax dx
cmp ax dx
jne r-xdata
movzx ecx cx
and ecx 0x8000
test ax ax
jne r-xdata
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_41a5cb
pop ecx
pop ecx
sub eax 0x1
je r-xdata
fld [ ebp + 0x8 ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax 0x200
pop ebp
retn
sub eax 0x1
je r-xdata
neg ecx
sbb ecx ecx
and ecx 0xffffff08
lea eax [ ecx + 0x100 ]
pop ebp
retn
neg ecx
sbb ecx ecx
and ecx 0xffffffe0
lea eax [ ecx + 0x40 ]
pop ebp
retn
neg ecx
sbb ecx ecx
and ecx 0xffffff90
lea eax [ ecx + 0x80 ]
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x4
sub eax 0x1
je r-xdata
push 0x2
jmp r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
sub_41a890
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push ebx
push esi
push edi
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
movzx ebx [ ecx + 0x6 ]
add eax 0x18
add eax ecx
test ebx ebx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx ebx
jb r-xdata
mov ecx [ eax + 0x8 ]
add ecx esi
cmp edi ecx
jb r-xdata
mov esi [ eax + 0xc ]
cmp edi esi
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41a8e0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_4079f0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_41a9a0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_41a890
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a9a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x5a4d
cmp [ eax ] cx
je r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
xor eax eax
cmp [ ecx ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov edx 0x10b
cmp [ ecx + 0x18 ] dx
sete al
sub_41a9e0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_41aa80
push sub_4079f0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax

sub_41aae0
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_41abc0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_41ac00
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax

cmp ecx eax
r-xdata
sub_41ac30
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_41ac80
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_41aca0
cmp [ rw-data ] 0x0
je r-xdata
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_41ad60
push ebp
mov ebp esp
push edi
cmp [ rw-data ] 0x1
jb r-xdata
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov edi [ ebp + 0x8 ]
ja r-xdata
mov eax edi
xor eax eax
jmp r-xdata
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
movzx edx [ ebp + 0xc ]
mov eax edx
shl edx 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov ecx 0xf
and ecx edi
or eax 0xffffffff
shl eax cl
sub edi ecx
xor edx edx
cld
pop edi
leave
retn
mov eax 0xfffffff0
and eax edi
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax ]
mov ecx 0xf
and ecx edi
mov edx 0xffffffff
shl edx cl
pmovmskb edi xmm0
and edi edx
jne r-xdata
xor eax eax
test edi 0xf
je r-xdata
push ebx
pmovmskb ebx xmm1
and ebx eax
shl ecx 0x1
xor eax eax
sub eax ecx
and ecx eax
dec ecx
and ecx ebx
pop ebx
bsr eax ecx
add eax edi
test ecx ecx
cmove eax edx
pop edi
leave
retn
pmovmskb ecx xmm1
and ecx eax
bsr eax ecx
add eax edi
test ecx ecx
cmovne edx eax
or eax 0xffffffff
add edi 0x10
jmp r-xdata
bsf edx edi
add eax edx
jmp r-xdata
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax + 0x10 ]
add eax 0x10
pmovmskb edi xmm0
test edi edi
je r-xdata
movd xmm0 edx
movzx ecx [ edi ]
cmp ecx edx
cmove eax edi
test ecx ecx
je r-xdata
movdqu xmm1 [ edi ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
pop edi
leave
retn
add edi 0x10
pcmpistri xmm0 [ edi - 0x10 ] 0x40
lea ecx [ edi + ecx - 0x10 ]
cmovb eax ecx
jne r-xdata
inc edi
test edi 0xf
jne r-xdata
sub_41aea0
cmp [ rw-data ] 0x1
jb r-xdata
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
movzx eax [ esp + 0x8 ]
mov edx eax
shl eax 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov edx [ esp + 0x4 ]
mov ecx 0xf
or eax 0xffffffff
and ecx edx
shl eax cl
sub edx ecx
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
bsf eax ecx
add eax edx
movd edx xmm3
xor ecx ecx
cmp dl [ eax ]
cmovne eax ecx
retn
or eax 0xffffffff
add edx 0x10
jmp r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
movdqu xmm1 [ edx ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
por xmm2 xmm1
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_40125f
mov eax 0xbb8
cdq
idiv [ rw-data ]
mov [ rw-data ] eax
retn
sub_401271
mov ecx rw-data
call sub_40573c
push sub_41b0a6
call sub_406335
pop ecx
retn
sub_401287
mov ecx rw-data
call sub_404586
push sub_41b0b0
call sub_406335
pop ecx
retn
sub_40129d
mov ecx rw-data
call sub_401eb8
push sub_41b0ba
call sub_406335
pop ecx
retn
sub_4012b3
push rw-data
mov ecx rw-data
call sub_4012d0
push sub_41b0c4
call sub_406335
pop ecx
retn
sub_4017e5
mov [ ecx ] r--data
retn
sub_401c12
mov [ ecx + 0x108 ] 0x1
mov eax ecx
mov [ ecx + 0x10c ] 0x1
retn
sub_401d00
mov eax rw-data
retn
sub_401d7a
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_401d29
add esp 0x14
pop ebp
retn
sub_401fd1
push [ ecx + 0x4 ]
mov [ ecx ] r--data
call GdipDisposeImage
retn
sub_401fe0
push [ ecx ]
call GdipDeleteGraphics
retn
sub_401fe8
push [ ecx + 0x8c ]
mov [ ecx ] r--data
call GdiplusShutdown
retn
sub_4029ca
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push 0x7fffffff
push [ ebp + 0x8 ]
call sub_4029e8
add esp 0x14
pop ebp
retn
sub_403222
xor eax eax
inc eax
retn
sub_40328c
xor eax eax
inc eax
retn 0x4
sub_40337f
push ebx
sub esp 0x14
call sub_40338d
mov ecx 0xc281e579
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_4033a0
jmp [ 0x70246c83 ]
jl 0xffffffffebc13b15
sub_40338d
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_4033a0
jmp [ 0x70246c83 ]
jl 0xffffffffebc13b15
sub_4033c9
push ebp
push edx
push edi
push ebx
call sub_4033d8
jne 0xffffffffa3a51a4b
sub_4033fc
jmp [ esp + 0xa8 ]
sub_403450
jmp [ esp + 0x2c ]
sub_40354c
add esp 0x68
retn
sub_4037e9
add esp 0x68
retn
sub_4039ab
push ebx
push esp
push eax
push esp
push edx
call sub_403ab7
jae 0xffffffffccc34913
add [ eax ] al
add [ ecx - 0x7edb8a1d ] al
iretd
sub_404025
add esp 0x80
retn
sub_40427f
push ebp
pushfd
push edi
pushfd
call sub_40425c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
sub_4042dc
ja r-xdata
pop eax
pop edx
add esp 0x4
jae r-xdata
xor edx 0xd1e8509c
sub esp 0x18
call sub_4041ad
add edx 0x79810f59
add eax 0xff0e830f
sub_40436c
push ebx
sub esp 0x14
call sub_40437a
mov ecx 0xc281e579
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_40438d
jmp [ 0x70246c83 ]
jl 0xffffffffebc14b02
sub_40437a
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_40438d
jmp [ 0x70246c83 ]
jl 0xffffffffebc14b02
sub_4043b6
push ebp
push edx
push edi
push ebx
call sub_4043c5
jne 0xffffffffa3a52a38
sub_4043e9
jmp [ esp + 0xa8 ]
sub_40443d
jmp [ esp + 0x2c ]
sub_404586
movsd xmm0 [ r--data ]
mov eax ecx
mov [ ecx ] r--data
movsd [ ecx + 0x48 ] xmm0
retn
sub_40459c
mov [ ecx ] r--data
retn
sub_405774
mov [ ecx ] r--data
retn
sub_405b6d
push ebp
mov ebp esp
push 0x3e8
lea eax [ ecx + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_406f00
add esp 0xc
pop ebp
retn 0x4
sub_405df6
push esi
mov esi ecx
push 0x3e8
push 0x0
lea eax [ esi + 0xc ]
push eax
call sub_407850
add esp 0xc
mov ecx esi
pop esi
jmp sub_405e14
sub_405fd3
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call j_sub_40df49#2
pop ecx
pop ebp
retn
sub_406017
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx

sub_40602c
mov ecx [ ebp - 0x10 ]
xor ecx ebp
sub_405fe1
sub_406017
sub_406290
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_4062b5
push ebp
mov ebp esp
call sub_4069d3
test eax eax
je r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
mov ecx rw-data
xchg [ ecx ] eax
sub_406335
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4062fa
neg eax
pop ecx
sbb eax eax
neg eax
dec eax
pop ebp
retn
sub_40634a
push ebp
mov ebp esp
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push [ ebp + 0x8 ]
call [ UnhandledExceptionFilter@IAT ]
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop ebp
retn
sub_40646d
push ebp
mov ebp esp
push 0x8
call sub_406479
pop ebp
retn
sub_40657c
push ebp
mov ebp esp
pop ebp
jmp sub_406549
j_sub_40df49
jmp j_sub_40df49#2
sub_4065d6
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx

sub_4067dc
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
push ecx
push eax
call sub_40ce36
pop ecx
pop ecx
retn
_start
call sub_406ce3
jmp sub_4066a9
j_sub_40df49#2
jmp j_sub_40df49#3
sub_4069cf
xor eax eax
inc eax
retn
sub_4069d3
xor eax eax
cmp [ rw-data ] eax
setne al
retn
sub_406b71
push sub_406b7d
call [ SetUnhandledExceptionFilter@IAT ]
retn
j_sub_406db5
jmp [ r--data ]
sub_406bcc
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_406c32
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_406be7
and [ ecx + 0x4 ] 0x0
mov eax ecx
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0x4 ] r--data
mov [ ecx ] r--data
retn
sub_406bff
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_406c32
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_406c1a
and [ ecx + 0x4 ] 0x0
mov eax ecx
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0x4 ] r--data
mov [ ecx ] r--data
retn
sub_406c5e
lea eax [ ecx + 0x4 ]
mov [ ecx ] r--data
push eax
call sub_407d90
pop ecx
retn
sub_406c9c
push ebp
mov ebp esp
sub esp 0xc
lea ecx [ ebp - 0xc ]
call sub_406be7
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_407daf
int3
sub_406cb9
push ebp
mov ebp esp
sub esp 0xc
lea ecx [ ebp - 0xc ]
call sub_406c1a
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_407daf
int3
sub_406d7f
xor eax eax
retn
sub_406d82
mov eax 0x4000
retn
sub_406d88
push rw-data
call [ InitializeSListHead@IAT ]
retn
sub_406d94
push 0x30000
push 0x10000
push 0x0
call sub_40de90
add esp 0xc
test eax eax
jne r-xdata
push 0x7
call sub_4069df
int3
retn
sub_406db5
retn
sub_406db6
mov eax rw-data
retn
sub_406dbc
call sub_401d00
mov ecx [ eax + 0x4 ]
or [ eax ] 0x4
mov [ eax + 0x4 ] ecx
call sub_406db6
mov ecx [ eax + 0x4 ]
or [ eax ] 0x2
mov [ eax + 0x4 ] ecx
retn
sub_406dd9
xor eax eax
cmp [ rw-data ] eax
sete al
retn
sub_406de5
mov eax rw-data
retn
sub_406deb
mov eax rw-data
retn
GdipAlloc
jmp [ GdipAlloc@IAT ]
GdipFree
jmp [ GdipFree@IAT ]
GdiplusStartup
jmp [ GdiplusStartup@IAT ]
GdiplusShutdown
jmp [ GdiplusShutdown@IAT ]
GdipCloneBrush
jmp [ GdipCloneBrush@IAT ]
GdipDeleteBrush
jmp [ GdipDeleteBrush@IAT ]
GdipCreateSolidFill
jmp [ GdipCreateSolidFill@IAT ]
GdipCreatePen1
jmp [ GdipCreatePen1@IAT ]
GdipClonePen
jmp [ GdipClonePen@IAT ]
GdipDeletePen
jmp [ GdipDeletePen@IAT ]
GdipLoadImageFromFile
jmp [ GdipLoadImageFromFile@IAT ]
GdipLoadImageFromFileICM
jmp [ GdipLoadImageFromFileICM@IAT ]
GdipCloneImage
jmp [ GdipCloneImage@IAT ]
GdipDisposeImage
jmp [ GdipDisposeImage@IAT ]
GdipGetImageGraphicsContext
jmp [ GdipGetImageGraphicsContext@IAT ]
GdipGetImageWidth
jmp [ GdipGetImageWidth@IAT ]
GdipGetImageHeight
jmp [ GdipGetImageHeight@IAT ]
GdipCreateBitmapFromScan0
jmp [ GdipCreateBitmapFromScan0@IAT ]
GdipCreateFromHDC
jmp [ GdipCreateFromHDC@IAT ]
GdipDeleteGraphics
jmp [ GdipDeleteGraphics@IAT ]
GdipDrawRectangleI
jmp [ GdipDrawRectangleI@IAT ]
GdipGraphicsClear
jmp [ GdipGraphicsClear@IAT ]
GdipDrawImageRect
jmp [ GdipDrawImageRect@IAT ]
GdipDrawImageRectI
jmp [ GdipDrawImageRectI@IAT ]
GdipCreateFontFamilyFromName
jmp [ GdipCreateFontFamilyFromName@IAT ]
GdipDeleteFontFamily
jmp [ GdipDeleteFontFamily@IAT ]
GdipCreateFont
jmp [ GdipCreateFont@IAT ]
GdipDeleteFont
jmp [ GdipDeleteFont@IAT ]
GdipDrawString
jmp [ GdipDrawString@IAT ]
gluPerspective
jmp [ gluPerspective@IAT ]
sub_407d0e
xor eax eax
push eax
push eax
push eax
push rw-data
call sub_401000
add esp 0x10
retn
sub_407d21
push rw-data
call sub_401088
pop ecx
retn
sub_407e59
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn 0x4
cmp eax rw-data
je r-xdata
push eax
call sub_40df49
pop ecx
sub_407f48
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov al 0x1
retn
push eax
call sub_409167
or [ rw-data ] 0xffffffff
pop ecx
sub_40801c
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_408025
mov esp [ ebp - 0x18 ]
call sub_40de54
sub_408050
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_406c32
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40806b
and [ ecx + 0x4 ] 0x0
mov eax ecx
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0x4 ] r--data
mov [ ecx ] r--data
retn
sub_40810d
push [ ebp - 0x14 ]
call sub_4082f4
pop ecx
retn
sub_40823f
push 0x4
mov eax sub_41b08b
call sub_4060a8
call sub_407e75
cmp [ eax + 0x1c ] 0x0
jne r-xdata
call sub_40de54
and [ ebp - 0x4 ] 0x0
call sub_409417
sub_408946
xor eax eax
inc eax
retn
sub_40894a
mov esp [ ebp - 0x18 ]
call sub_40de54
sub_408a71
xor eax eax
inc eax
retn
sub_408b40
push [ ebp - 0x14 ]
call sub_408a85
pop ecx
retn
sub_408b7e
call sub_407e75
cmp [ eax + 0x18 ] 0x0
jle r-xdata
retn
call sub_407e75
dec [ eax + 0x18 ]
sub_408e35
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_4093f5
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_408e67
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_408d20
add esp 0xc
pop ebp
retn 0x8
sub_4092b4
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_4093c9
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_409300
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_409414
call eax
retn
sub_409417
push esi
call sub_407e75
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
call sub_40de54
mov ecx esi
call j_sub_406db5
call esi
sub_4099d3
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0xe06d7363
sete al
pop ebp
retn
sub_409ae5
mov esp [ ebp - 0x18 ]
call sub_40de54
sub_409af0
push 0x2
call sub_40eb06
pop ecx
retn
sub_409baa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_409bb9
push 0x1
push 0x2
push 0x0
call sub_4099e6
add esp 0xc
retn
sub_409bc8
push 0x1
push 0x0
push 0x0
call sub_4099e6
add esp 0xc
retn
sub_409bd7
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x2
push [ ebp + 0x8 ]
call sub_4099e6
add esp 0xc
pop ebp
retn
sub_409c25
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_4099e6
add esp 0xc
pop ebp
retn
sub_409c3b
call sub_40f3ce
imul ecx [ eax + 0x18 ] 0x343fd
add ecx 0x269ec3
mov [ eax + 0x18 ] ecx
shr ecx 0x10
and ecx 0x7fff
mov eax ecx
retn
sub_409c5c
mov edi edi
push ebp
mov ebp esp
call sub_40f3ce
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x18 ] ecx
pop ebp
retn
sub_409da6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_409e64
test esi esi
jne r-xdata
push [ ebp - 0x1c ]
call sub_409da6
pop ecx
retn
push [ ebp - 0x1c ]
call sub_40fc6f
pop ecx
sub_409e7b
mov edi edi
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_409dba
add esp 0xc
pop ebp
retn
sub_409f7e
push [ ebp - 0x20 ]
call sub_409da6
pop ecx
retn
sub_409fcd
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_409da6
pop ecx
retn
sub_40a7cb
mov edi edi
push esi
mov esi ecx
push [ esi + 0x404 ]
call sub_40df49
and [ esi + 0x404 ] 0x0
pop ecx
pop esi
retn
sub_40ae6b
call sub_40aec8
test al al
jne r-xdata
mov al 0x1
retn
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
xor al al
retn
sub_40ae8a
call sub_40aef2
test al al
jne r-xdata
mov al 0x1
retn
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
xor al al
retn
sub_40aea9
call sub_40af1c
test al al
jne r-xdata
mov al 0x1
retn
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
xor al al
retn
sub_40af1c
lea edx [ ecx + 0x18 ]
mov [ ecx + 0x3c ] 0x1
push edx
movzx edx [ ecx + 0x32 ]
add ecx 0x448
push edx
call sub_40c4fe
mov al 0x1
retn
sub_40c27e
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_40c0c0
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_40c29d
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_40c0c0
retn
sub_40c3dc
mov eax [ ecx ]
test eax eax
jne r-xdata
push eax
call sub_40c3fd
pop ecx
retn
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
xor al al
retn
sub_40ca6e
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40df83
sub_40ca79
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cdq
xor eax edx
sub eax edx
pop ebp
retn
sub_40cc54
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_40cc71
add esp 0x14
pop ebp
retn
sub_40ccfc
push esi
call sub_409da6
pop ecx
retn
sub_40d297
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40cfa9
sub_40d43b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
pop ebp
retn
push eax
call sub_40d3cc
pop ecx
sub_40d456
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
pop ebp
retn
push eax
call sub_40d3cc
pop ecx
j_sub_40d2a2
jmp sub_40d2a2
sub_40d4f2
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_40eb06
pop ecx
retn
sub_40d543
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_40eb06
pop ecx
retn
sub_40d800
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push rw-data
call sub_40d870
pop ecx
pop ecx
pop ebp
retn
sub_40d894
push rw-data
mov ecx rw-data
call sub_40d988
mov al 0x1
retn
sub_40d8a6
push rw-data
call sub_40d833
mov [ esp ] rw-data
call sub_40d833
pop ecx
mov al 0x1
retn
sub_40d8c0
mov al 0x1
retn
sub_40d8c3
call sub_40d471
mov al 0x1
retn
sub_40d908
push 0x0
call sub_407b78
pop ecx
retn
sub_40d9b9
push r--data
push r--data
call sub_4140f4
pop ecx
pop ecx
retn
sub_40d9cb
push r--data
push r--data
call sub_414177
pop ecx
pop ecx
retn
sub_40d9dd
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40d988
pop ebp
retn
sub_40da7e
push 0x0
call sub_40eb06
pop ecx
retn
sub_40da87
mov eax [ rw-data ]
retn
sub_40da8d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40da9c
mov eax [ rw-data ]
mov ecx eax
xor eax [ rw-data ]
and ecx 0x1f
ror eax cl
neg eax
sbb eax eax
neg eax
retn
sub_40dab5
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40d988
pop ebp
retn
sub_40db12
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4099b4
pop ecx
mov [ rw-data ] eax
pop ebp
retn
sub_40dd55
xor eax eax
mov ecx rw-data
inc eax
xchg [ ecx ] eax
retn
sub_40dda9
push 0x4
call sub_40eb06
pop ecx
retn
sub_40de14
mov eax [ rw-data ]
retn
sub_40de49
mov eax rw-data
retn
j_sub_40df49#3
jmp sub_40df49
sub_40de7c
xor eax eax
inc eax
retn
sub_40ea05
cmp [ ecx ] 0x0
jne r-xdata
mov al 0x1
retn
call sub_40f7a3
mov [ eax ] 0x16
call sub_40f6e7
xor al al
retn
sub_40eabe
mov edi edi
push ebp
mov ebp esp
imul eax [ ebp + 0x8 ] 0x18
add eax rw-data
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_40eb06
mov edi edi
push ebp
mov ebp esp
imul eax [ ebp + 0x8 ] 0x18
add eax rw-data
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_40f0a0
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_40eb06
pop ecx
retn
sub_40f101
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_40eb06
pop ecx
retn
sub_40f14c
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_40eb06
pop ecx
retn
sub_40f194
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_40eb06
pop ecx
retn
sub_40f503
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov al 0x1
retn
push eax
call sub_40ecd8
or [ rw-data ] 0xffffffff
sub_40f658
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40d988
pop ebp
retn
sub_40f84d
push 0x8
call sub_40eb06
pop ecx
retn
sub_40f903
push 0x1
call sub_40f90c
pop ecx
retn
sub_40f9b1
push [ ebp - 0x28 ]
call sub_409da6
pop ecx
retn
sub_40f9db
push 0x8
call sub_40eb06
pop ecx
retn
sub_40fbdb
push 0x7
call sub_40eb06
pop ecx
retn
sub_40fc66
push 0x8
call sub_40eb06
pop ecx
retn
sub_410117
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40ff9f
sub_410198
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_414711
pop ecx
retn
sub_41095f
push esi
call sub_414711
pop ecx
retn
sub_410d71
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_410b94
sub_4111ed
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4110f3
add esp 0x10
pop ebp
retn
sub_411328
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411207
add esp 0x14
pop ebp
retn
sub_4120bb
mov ecx [ rw-data ]
xor eax eax
or ecx 0x1
cmp [ rw-data ] ecx
sete al
retn
sub_4126a2
push esi
call sub_414711
pop ecx
retn
sub_412c01
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_412a80
sub_412c0c
push 0xa
call IsProcessorFeaturePresent
mov [ rw-data ] eax
xor eax eax
retn
sub_412c20
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_412c3e
leave
retn
sub_412c38
movlpd xmm0 [ esp + 0x4 ]
sub_412f78
fxch st1
fstp st0
retn
sub_412f86
fstp st0
fldz
retn
sub_412f8b
fstp st0
fstp st0
fldz
test ch ch
je r-xdata
retn
fchs
sub_412f98
fstp st0
fstp st0
fld1
retn
sub_412f9f
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x0
fadd [ r--data ]
retn
mov [ ebp - 0x90 ] 0x0
retn
sub_412fca
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x0
mov [ ebp - 0x90 ] 0x0
jmp r-xdata
faddp st1
retn
sub_413033
fstp st0
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_413046
mov [ ebp - 0x90 ] 0x1
or cl cl
retn
sub_413050
fstp st0
fstp st0
fld [ r--data ]
or ch ch
je r-xdata
or cl cl
je r-xdata
fchs
retn
fld [ r--data ]
fmulp st1
sub_41306d
or cl cl
je r-xdata
retn
fchs
sub_413080
fld st0
frndint
fsubr st1
fxch st1
fchs
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_413095
mov edx [ esp + 0x4 ]
and edx 0x300
or edx 0x7f
mov [ esp + 0x6 ] dx
fldcw [ esp + 0x6 ]
retn
sub_4130ac
test eax 0x80000
je r-xdata
fadd [ r--data ]
mov eax 0x0
retn
mov eax 0x0
retn
sub_413108
mov eax [ esp + 0x8 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ esp + 0x8 ]
retn
retn
sub_413706
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41327b
sub_413748
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_40eb06
pop ecx
retn
sub_413beb
cmp [ rw-data ] 0x0
jne r-xdata
mov al 0x1
retn
push 0x1
push 0xfffffffd
call sub_413aea
pop ecx
pop ecx
mov [ rw-data ] 0x1
sub_413c9a
push 0x5
call sub_40eb06
pop ecx
retn
sub_413f76
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_413f1d
add esp 0x10
pop ebp
retn
sub_413f8e
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call [ GetCommandLineW@IAT ]
mov [ rw-data ] eax
mov al 0x1
retn
sub_414061
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41406c
sub_4140d9
call [ GetProcessHeap@IAT ]
test eax eax
mov [ rw-data ] eax
setne al
retn
sub_4140ea
and [ rw-data ] 0x0
mov al 0x1
retn
sub_414212
mov ecx [ ebp + 0x10 ]
push [ ecx ]
call sub_40eb06
pop ecx
retn
sub_4144cb
cmp [ ebp - 0x1d ] 0x0
je r-xdata
retn
push 0x3
call sub_40eb06
pop ecx
sub_414651
push 0x7
call sub_40eb06
pop ecx
retn
sub_41483d
push 0x7
call sub_40eb06
pop ecx
retn
sub_41505b
push 0x4
call sub_40eb06
pop ecx
retn
sub_415885
mov ecx [ ebp + 0x10 ]
push [ ecx ]
call sub_414711
pop ecx
retn
sub_41656d
push edi
call sub_414711
pop ecx
retn
sub_416618
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416495
add esp 0x10
pop ebp
retn
sub_41890b
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41885a
sub_418960
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418977
add esp 0xc
pop ebp
retn
sub_418a04
call sub_413beb
xor ecx ecx
test al al
sete cl
mov eax ecx
retn
sub_418ade
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
cmp [ eax ] 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp [ eax ] 0xc000001d
je r-xdata
xor eax eax
retn
sub_418b25
mov edi edi
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_418bbf
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_418e99
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_418eb8
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_419d70
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_419d8e
leave
retn
sub_419d88
movlpd xmm0 [ esp + 0x4 ]
j_sub_412f98#2
jmp sub_412f98
sub_41a068
fstp st0
fstp st0
fld [ r--data ]
mov [ ebp - 0x90 ] 0x2
retn
sub_41a094
mov [ ebp - 0x90 ] 0x2
fstp st0
fld [ r--data ]
retn
sub_41a0a4
or cl cl
jne r-xdata
jmp r-xdata
retn
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_41a0a9
fldlg2
jmp r-xdata
fxch st1
or cl cl
jne r-xdata
jmp sub_413033
fyl2x
retn
sub_41a0ad
fldln2
fxch st1
or cl cl
jne r-xdata
jmp sub_413033
fyl2x
retn
j_sub_412f98
jmp sub_412f98
sub_41a0f9
fstp st0
jmp r-xdata
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_41a12f
fstp st0
fstp st0
fld [ r--data ]
mov [ ebp - 0x90 ] 0x3
retn
sub_41a141
or cl cl
jne r-xdata
jmp sub_412f86
fstp st0
fld [ r--data ]
retn
sub_41a7be
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
frndint
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
SystemFunction036
jmp [ SystemFunction036@IAT ]
sub_41a969
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_41aac9
mov ecx [ ebp - 0x1c ]
xor ecx ebp
sub_405fe1
sub_4065d6
sub_41ac50
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_41ac00
sub_41ac66
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_41ac00
sub_41afcb
lea ecx [ ebp - 0x34 ]
jmp sub_401fd1
sub_41afd3
lea ecx [ ebp - 0x1c ]
jmp sub_401fe0
sub_41afdb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_405fe1
mov eax r--data
jmp sub_407814
sub_41aff6
lea ecx [ ebp - 0x38 ]
jmp sub_401fd1
sub_41affe
lea ecx [ ebp - 0x28 ]
jmp sub_401fe0
sub_41b006
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_405fe1
mov eax r--data
jmp sub_407814
sub_41b021
push 0x214
push [ ebp - 0x1c ]
call sub_405fd3
pop ecx
pop ecx
retn
sub_41b031
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_405fe1
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_405fe1
mov eax r--data
jmp sub_407814
sub_41b056
push 0x8
push [ ebp - 0x48 ]
call sub_405fd3
pop ecx
pop ecx
retn
sub_41b063
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_405fe1
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_405fe1
mov eax r--data
jmp sub_407814
sub_41b08b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_405fe1
mov eax r--data
jmp sub_407814
sub_41b0a6
mov ecx rw-data
jmp sub_405774
sub_41b0b0
mov ecx rw-data
jmp sub_40459c
sub_41b0ba
mov ecx rw-data
jmp sub_401fe8
sub_41b0c4
mov ecx rw-data
jmp sub_4017e5
