sub_401062
push ecx
mov al [ esp + 0x3 ]
push esi
push edi
mov edi rw-data
push 0x0
mov ecx edi
mov [ rw-data ] al
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
mov esi rw-data
push esi
call strlen
pop ecx
push eax
push esi
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
pop edi
pop esi
pop ecx
retn
sub_4010b1
push ebp
mov ebp esp
sub esp 0x2f8
push ebx
push esi
lea eax [ ebp - 0x30 ]
push edi
push eax
call sub_4013ff
pop ecx
xor ebx ebx
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
mov edi rw-data
push [ ecx ]
mov ecx edi
push ebx
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
push 0x1
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
mov esi rw-data
push rw-data
push esi
call [ std::operator!=@IAT ]
pop ecx
test al al
pop ecx
je r-xdata
push rw-data
push [ std::cout@IAT ]
call [ std::operator<<@IAT ]
push eax
call [ std::endl@IAT ]
add esp 0xc
push rw-data
lea eax [ ebp - 0x30 ]
push esi
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
add esp 0xc
push [ ecx ]
mov ecx edi
push ebx
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
push 0x1
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
push esi
push [ std::cout@IAT ]
call ??6std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
push eax
call [ std::endl@IAT ]
mov eax [ rw-data ]
add esp 0xc
cmp eax ebx
jne r-xdata
mov edi [ sprintf@IAT ]
push eax
push rw-data
push rw-data
call edi
add esp 0xc
mov esi rw-data
push esi
push 0x104
call [ GetTempPathA@IAT ]
push esi
push [ std::cout@IAT ]
call [ std::operator<<@IAT ]
push eax
call [ std::endl@IAT ]
add esp 0xc
push esi
push rw-data
push rw-data
call edi
add esp 0xc
push esi
push rw-data
push rw-data
call edi
push esi
call sub_4015b2
add esp 0x10
test eax eax
je r-xdata
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Nullstr::_C::~_C@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x10
push ebx
push 0x80
push 0x2
push ebx
push ebx
mov edi rw-data
push 0x40000000
push edi
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
lea eax [ ebp - 0x178 ]
push 0x104
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x178 ]
push rw-data
push eax
call [ fopen@IAT ]
pop ecx
cmp eax ebx
pop ecx
mov [ ebp - 0x20 ] eax
je r-xdata
mov esi 0x180
lea eax [ ebp - 0x2f8 ]
push esi
push ebx
push eax
call memset
push ebx
push 0x2b0
push [ ebp - 0x20 ]
call [ fseek@IAT ]
push [ ebp - 0x20 ]
lea eax [ ebp - 0x2f8 ]
push esi
push 0x1
push eax
call [ fread@IAT ]
lea eax [ ebp - 0x2f8 ]
push esi
push eax
push rw-data
call memcpy
add esp 0x34
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x1c ] ebx
push ebx
push eax
push 0x5000
push rw-data
push [ ebp - 0x4 ]
call [ WriteFile@IAT ]
push [ ebp - 0x4 ]
test eax eax
jne r-xdata
mov esi [ CloseHandle@IAT ]
call esi
push ebx
push 0x80
push 0x2
push ebx
push ebx
push 0x40000000
push rw-data
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
call [ CloseHandle@IAT ]
jmp r-xdata
push rw-data
push [ std::cout@IAT ]
call [ std::operator<<@IAT ]
push eax
call [ std::endl@IAT ]
add esp 0xc
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x1c ] ebx
push ebx
push eax
push 0xca00
push rw-data
push [ ebp - 0x4 ]
call [ WriteFile@IAT ]
push [ ebp - 0x4 ]
test eax eax
jne r-xdata
call esi
push rw-data
push edi
call sub_4014bb
mov esi [ LoadLibraryA@IAT ]
pop ecx
pop ecx
push rw-data
call esi
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] 0x53
push ecx
push eax
mov [ ebp - 0x17 ] 0x65
mov [ ebp - 0x16 ] 0x74
mov [ ebp - 0x15 ] 0x46
mov [ ebp - 0x14 ] 0x69
mov [ ebp - 0x13 ] 0x6c
mov [ ebp - 0x12 ] 0x65
mov [ ebp - 0x11 ] 0x41
mov [ ebp - 0x10 ] 0x74
mov [ ebp - 0xf ] 0x74
mov [ ebp - 0xe ] 0x72
mov [ ebp - 0xd ] 0x69
mov [ ebp - 0xc ] 0x62
mov [ ebp - 0xb ] 0x75
mov [ ebp - 0xa ] 0x74
mov [ ebp - 0x9 ] 0x65
mov [ ebp - 0x8 ] 0x73
mov [ ebp - 0x7 ] 0x41
mov [ ebp - 0x6 ] bl
call [ GetProcAddress@IAT ]
mov ecx [ rw-data ]
cmp ecx ebx
jne r-xdata
call esi
jmp r-xdata
push 0x2
push ecx
call eax
call sub_401a4b
test eax eax
jne r-xdata
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Nullstr::_C::~_C@IAT ]
push 0x10
lea edi [ ebp - 0x70 ]
pop ecx
push 0x1
[ edi ]
pop eax
mov [ ebp - 0x74 ] 0x44
push rw-data
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] ax
call esi
push rw-data
push eax
call [ GetProcAddress@IAT ]
lea ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x74 ]
push ecx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push rw-data
call eax
jmp r-xdata
sub_4013ff
push ebp
mov ebp esp
sub esp 0x20c
push esi
push edi
mov esi 0x104
xor edi edi
push esi
lea eax [ ebp - 0x20c ]
push edi
push eax
mov [ ebp - 0x4 ] edi
call memset
push esi
lea eax [ ebp - 0x108 ]
push edi
push eax
call memset
add esp 0x18
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
push eax
push 0x7
push edi
call [ SHGetSpecialFolderLocation@IAT ]
cmp [ ebp - 0x4 ] edi
je r-xdata
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call [ sprintf@IAT ]
pop ecx
pop ecx
lea eax [ ebp - 0x108 ]
push eax
push [ ebp - 0x4 ]
call [ SHGetPathFromIDListA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x20c ]
push esi
push eax
lea eax [ ebp - 0x108 ]
push eax
call [ GetShortPathNameA@IAT ]
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov al [ ebp + 0xb ]
push edi
mov ecx esi
mov [ esi ] al
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
lea eax [ ebp - 0x108 ]
push eax
call strlen
pop ecx
push eax
lea eax [ ebp - 0x108 ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
mov eax esi
pop edi
pop esi
leave
retn
sub_4014bb
push ebp
mov ebp esp
sub esp 0x210
push esi
push 0x0
call [ CoInitialize@IAT ]
mov esi [ Sleep@IAT ]
push 0x64
call esi
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
push 0x352
push eax
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jge r-xdata
pop esi
leave
retn
lea eax [ ebp - 0x210 ]
push 0x104
push eax
push 0xffffffff
push [ ebp + 0xc ]
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
push 0x64
call esi
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x210 ]
push 0x1
push edx
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
push rw-data
push [ std::cout@IAT ]
call [ std::operator<<@IAT ]
push eax
call [ std::endl@IAT ]
mov eax [ ebp - 0x8 ]
add esp 0xc
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
call [ CoUninitialize@IAT ]
push 0x1
pop eax
sub_401590
xor edx edx
cmp [ esp + 0x8 ] edx
jle r-xdata
retn
mov eax [ esp + 0x4 ]
lea ecx [ edx + eax ]
mov al [ edx + eax ]
test al al
je r-xdata
inc edx
cmp edx [ esp + 0x8 ]
jl r-xdata
xor al 0x3e
mov [ ecx ] al
sub_4015b2
push ebp
mov ebp esp
sub esp 0x42c
push ebx
mov ebx [ sprintf@IAT ]
push esi
push edi
push rw-data
lea eax [ ebp - 0x1a4 ]
xor esi esi
push rw-data
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x1c ] esi
call ebx
add esp 0xc
mov edi 0x80
lea eax [ ebp - 0x1a4 ]
push esi
push edi
push 0x2
push esi
push 0x3
push 0xc0000000
push eax
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
xor eax eax
push eax
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x42c ]
push 0x104
push eax
push esi
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x42c ]
push rw-data
push eax
call [ fopen@IAT ]
pop ecx
cmp eax esi
pop ecx
mov [ ebp - 0x4 ] eax
je r-xdata
push edi
lea eax [ ebp - 0x224 ]
push esi
push eax
call memset
push esi
mov esi [ fseek@IAT ]
push 0x2b0
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x224 ]
push edi
mov edi [ fread@IAT ]
push 0x1
push eax
call edi
lea eax [ ebp - 0x224 ]
push 0x80
push eax
call sub_401590
lea eax [ ebp - 0x224 ]
push eax
call strlen
add esp 0x34
test eax eax
jbe r-xdata
push 0x104
lea eax [ ebp - 0x328 ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x224 ]
push eax
lea eax [ ebp - 0x328 ]
push rw-data
push eax
call ebx
push 0x0
push 0x330
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x18 ]
push 0x2
push 0x1
push eax
call edi
add esp 0x28
cmp [ ebp - 0x18 ] 0x0
jle r-xdata
push 0x0
push 0x332
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x2
push 0x1
push eax
call edi
add esp 0x1c
cmp [ ebp - 0xc ] 0x0
jl r-xdata
push 0x0
push 0x334
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push 0x1
push 0x1
push eax
call edi
add esp 0x1c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push 0x0
push 0x399
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x20 ]
push 0x1
push 0x1
push eax
call edi
add esp 0x1c
mov esi [ WritePrivateProfileStringA@IAT ]
lea eax [ ebp - 0x1a4 ]
mov edi rw-data
push eax
lea eax [ ebp - 0x328 ]
push eax
push rw-data
push edi
call esi
push 0x4
lea eax [ ebp - 0x8 ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x8 ]
push [ ebp - 0x18 ]
push rw-data
push eax
call ebx
add esp 0xc
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push rw-data
push edi
call esi
push 0x4
lea eax [ ebp - 0x8 ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x8 ]
push [ ebp - 0xc ]
push rw-data
push eax
call ebx
add esp 0xc
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push rw-data
push edi
call esi
cmp [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x1a4 ]
push eax
je r-xdata
push 0x20
lea eax [ ebp - 0x40 ]
push 0x0
push eax
call memset
push 0x0
push 0x335
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x40 ]
push 0x20
push 0x1
push eax
call edi
lea eax [ ebp - 0x40 ]
push 0x20
push eax
call sub_401590
lea eax [ ebp - 0x40 ]
push eax
call strlen
add esp 0x34
test eax eax
jbe r-xdata
push rw-data
push rw-data
push rw-data
push rw-data
mov edi rw-data
push rw-data
push edi
call esi
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
push rw-data
push edi
call esi
push 0x4
lea eax [ ebp - 0x8 ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x8 ]
push [ ebp - 0x14 ]
push rw-data
push eax
call ebx
add esp 0xc
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push rw-data
push edi
call esi
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0xa0 ]
push eax
push rw-data
push edi
call esi
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
push rw-data
push edi
call esi
push 0x4
lea eax [ ebp - 0x8 ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x8 ]
push [ ebp - 0x1c ]
push rw-data
push eax
call ebx
add esp 0xc
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push rw-data
push edi
jmp r-xdata
push 0x20
lea eax [ ebp - 0x80 ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x80 ]
push rw-data
push eax
call ebx
push 0x0
push 0x355
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x14 ]
push 0x2
push 0x1
push eax
call edi
add esp 0x28
cmp [ ebp - 0x14 ] 0x0
jle r-xdata
push rw-data
push rw-data
jmp r-xdata
call esi
cmp [ ebp - 0x20 ] 0x0
lea eax [ ebp - 0x1a4 ]
push eax
je r-xdata
push 0x20
lea eax [ ebp - 0x40 ]
push 0x0
push eax
call memset
push 0x0
push 0x357
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x40 ]
push 0x20
push 0x1
push eax
call edi
lea eax [ ebp - 0x40 ]
push 0x20
push eax
call sub_401590
push 0x20
lea eax [ ebp - 0xa0 ]
push 0x0
push eax
call memset
add esp 0x3c
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0xa0 ]
push rw-data
push eax
call ebx
push 0x20
lea eax [ ebp - 0x40 ]
push 0x0
push eax
call memset
push 0x0
push 0x377
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x40 ]
push 0x20
push 0x1
push eax
call edi
lea eax [ ebp - 0x40 ]
push 0x20
push eax
call sub_401590
push 0x20
lea eax [ ebp - 0x60 ]
push 0x0
push eax
call memset
add esp 0x48
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x60 ]
push rw-data
push eax
call ebx
push 0x0
push 0x397
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x1c ]
push 0x2
push 0x1
push eax
call edi
add esp 0x28
cmp [ ebp - 0x1c ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn
push rw-data
push rw-data
call esi
push 0x1
pop eax
jmp r-xdata
sub_401a4b
push ebp
mov ebp esp
sub esp 0x244
push esi
push edi
lea eax [ ebp - 0x244 ]
push rw-data
push eax
call [ sprintf@IAT ]
pop ecx
lea eax [ ebp - 0x140 ]
pop ecx
push eax
lea eax [ ebp - 0x244 ]
push eax
call [ FindFirstFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor eax eax
mov esi [ _stricmp@IAT ]
lea eax [ ebp - 0x140 ]
push eax
push edi
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x114 ]
push rw-data
push eax
call esi
pop ecx
test eax eax
pop ecx
je r-xdata
push edi
call [ FindClose@IAT ]
jmp r-xdata
test [ ebp - 0x140 ] 0x10
je r-xdata
lea eax [ ebp - 0x114 ]
push rw-data
push eax
call esi
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x114 ]
push rw-data
push eax
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
leave
retn
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_401ce1
cmp [ rw-data ] ebx
jne r-xdata
call sub_401ccc
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_401cde
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_4010b1
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_401000
call ??0Init@ios_base@std@@QAE@XZ
jmp sub_401015
??0Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::Init@IAT ]
sub_401015
push ??1Init@ios_base@std@@QAE@XZ
call sub_401b32
pop ecx
retn
??1Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::~Init@IAT ]
sub_40102c
call ??0_Winit@std@@QAE@XZ
jmp sub_401041
??0_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::_Winit@IAT ]
sub_401041
push ??1_Winit@std@@QAE@XZ
call sub_401b32
pop ecx
retn
??1_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::~_Winit@IAT ]
sub_401058
call sub_401062
jmp sub_401097
sub_401097
push sub_4010a3
call sub_401b32
pop ecx
retn
sub_4010a3
push 0x1
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
retn
??6std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
jmp [ std::operator<<@IAT ]
??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
jmp [ std::operator&@IAT ]
sub_401b06
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_401b32
push [ esp + 0x4 ]
call sub_401b06
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
strlen
jmp [ strlen@IAT ]
memcpy
jmp [ memcpy@IAT ]
memset
jmp [ memset@IAT ]
strcmp
jmp [ strcmp@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_401ccc
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_401cde
xor eax eax
retn
sub_401ce1
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
