sub_40125f
adc [ edx - 0x5c7ffff0 ] 0xa
add [ eax - 0x7ffff6aa ] al
or eax [ eax ]
sub ah 0x13
add [ eax - 0x7fffec11 ] al
jae rwxdata
and [ eax + 0x15 ] 0x0
or [ ebx + 0xd ] 0x0
cmp [ edi ] 0xb
add [ eax - 0x7ffff4c2 ] al
aaa
adc [ eax ] al
sub ch 0xf
add [ eax - 0x7fffeb8b ] al
mov [ 0x59800014 ] al
add [ eax - 0x7fffef31 ] al
push ss
or eax 0x13948000
add [ eax - 0x7ffffc31 ] al
pushad
adc eax 0xd4b8000
add [ eax - 0x7ffff4c1 ] al
or eax [ eax ]
xor [ edi ] 0x10
add [ eax - 0x7ffff013 ] al
jne rwxdata
add [ eax ] al
add [ edi + ebp * 2 + 0x63 ] cl
popad
insb
and [ ecx + 0x70 ] al
jo rwxdata
add [ eax ] al
xchg [ ebx ] ch
add [ eax - 0x5fffff95 ] dl
imul eax [ eax ] 0x0
lodsb [ esi ]
imul eax [ eax ] 0x0
shr [ ebx ] 0x0
shr [ ebx ] 0x1
add al ah
imul eax [ eax ] 0x0
out dx al
imul eax [ eax ] 0x0
add [ eax + eax ] ch
adc al 0x6c
add [ eax ] al
imul eax [ es : eax ] 0x0
mov dl 0x6c
add [ eax ] al
cmp ch [ ebx ]
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 2 ] dh
add [ esp + ebp * 2 ] ah
add [ esp + ebp * 2 + 0x6c840000 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov bl 0x48
inc eax
add [ eax + 0x37 ] ah
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7ffffce4 ] al
mov [ 0x2a800002 ] al
add al [ eax ]
adc [ ecx ] 0x2
add [ eax - 0x7ffffe92 ] al
daa
add eax [ eax ]
cmp [ esi + 0x43800009 ] 0xa
add [ eax - 0x7ffff5be ] al
jo rwxdata
or al [ eax ]
add [ ecx + 0x54800006 ] 0x11
add [ eax - 0x7fffeeb5 ] al
sbb al 0x3
add [ eax - 0x7ffffd5e ] al
sub al [ edx ]
add [ eax - 0x7ffffdef ] al
outsb
add [ eax ] eax
and [ edi ] 0x3
add [ eax - 0x7ffff642 ] al
inc ebx
or al [ eax ]
add [ edx + 0xa ] 0x0
xor [ eax + 0x17 ] 0x0
add [ ebp + 0x8 ] 0x0
add [ ebx + 0x10 ] 0x0
add [ eax - 0x7fffeb5e ] al
pop ecx
in eax dx
out dx al
cmp al 0xa8
sub dl [ edi ]
imul edi [ edx + 0x61 ] 0x472d6472
outsb
jb rwxdata
add [ eax ] al
inc esp
imul eax [ eax ] 0x0
push edx
imul eax [ eax ] 0x0
push 0x7000006b
imul eax [ eax ] 0x0
jle rwxdata
adc [ eax ] eax
adc [ edx ] 0x11
add [ eax - 0x7fffece4 ] al
sub [ esi ] al
add [ eax - 0x7fffedfe ] al
add al 0x12
add [ eax - 0x7ffff92e ] al
pop es
adc al [ eax ]
adc [ eax + 0x800004 ] 0x0
and cl 0x19
add [ eax - 0x7fffee97 ] al
test [ eax + eax ] dl
sub ah 0x11
add [ eax - 0x7fffeeee ] al
sbb al 0x13
add [ eax - 0x7ffff9d8 ] al
add dl [ edx ]
add [ eax - 0x7fffedfc ] al
rol [ esi ] cl
add [ eax - 0x7fffedf9 ] al
nop
add al 0x0
add [ eax ] 0x0
add [ eax - 0x7ffff7bb ] al
inc ebx
adc [ eax ] al
dec ecx
jns rwxdata
push ecx
push 0x12
adc dl [ ebx ]
push es
insb
loop rwxdata
je rwxdata
push 0xede8eee2
loopne rwxdata
adc dl [ edx ]
adc esp [ ecx + eax ]
adc dl [ edx ]
pop ss
add [ ebx ] 0xffffffed
in eax dx
adc [ ecx + esi ] dl
pop ss
cmp al 0x92
imul ebp ebp 0x7ee5e0ed
adc bh [ ebx - 0x1215fb11 ]
in eax dx
in eax dx
loopne rwxdata
and [ fs : ecx + 0x70 ] al
jo rwxdata
in eax dx
in eax dx
loop rwxdata
imul esp [ eax - 0x6 ] 0x4
test al 0x64
in eax dx
out dx eax
in al dx
loop rwxdata
jle rwxdata
jns rwxdata
imul esp [ ebx + 0x61 ] 0x6e6f6974
jae rwxdata
jle rwxdata
aas
scasd [ edi ]
in eax dx
in eax dx
jmp rwxdata
in eax dx
sbb [ ecx + 0x17 ] bh
mov ebx 0xedea04ef
xor ebx [ edi + 0x10982112 ]
mov eax 0xf7b8bdbd
lahf
sub eax 0x17b9d868
xor eax 0x9f3f1798
mov ebx 0x9fe482ed
in eax dx
cmp [ eax + 0x1299f06c ] edx
insd
fidivr [ edx + edx + 0x7f109831 ]
aam 0xbb
pop ss
add [ ebx + 0x43 ] al
jb rwxdata
call 0xfffffffff028d289
jmp 0xffffffffefa0801d
mov esp 0xedeab6b8
in eax dx
jns rwxdata
in eax dx
pop edi
shl [ edx + 0x4eededed ] cl
adc ch ch
xchg esi ebp
cmp [ ebp + 0x2662ad31 ] 0xa8
in eax dx
out dx eax
out 0xff al
imul esp [ ebp + 0x3f ] 0xffffffaf
adc dh [ ecx ]
cwde
adc [ edi - 0x2c ] bh
mov ebx 0x129f3317
and [ eax - 0x424247f0 ] ebx
mov eax 0x682d9ff7
fdivr [ ecx + 0x17983517 ]
arpl [ edi + 0x64 ] bp
imul ebp [ ebp + 0x44 ] 0x636f
add [ ebx + 0x43 ] al
jb rwxdata
0x6e15ec9f 0xbd0f
mov ebp 0x6fefe8ed
jpo rwxdata
aas
lahf
mov ebp 0x2d9ff7b8
push 0x3517b9d8
cwde
pop ss
arpl [ edi + 0x64 ] bp
imul ebp [ ebp + 0x56 ] 0x776569
add al ch
out dx eax
0x262fe9ed 0xede8
in al dx
adc eax 0x12bd0f6e
mov ebp 0x1267aa0c
xchg edi edi
test edx edi
xchg esp ebp
sub bh 0xea
in eax dx
dec eax
jpo rwxdata
in eax dx
test eax ebp
xchg [ ebp + 0x16e9efe8 ] edi
imul esp [ eax - 0x11 ] 0xffffffe8
in al dx
cld
add edx ebp
lahf
or eax 0xe8ef64a8
in eax dx
xor [ esi + 0x10 ] bh
0x590ceded 0xed17
call 0xffffffff87a11417
0x7948eded 0xed17
sub_4013f1
in eax dx
push 0xede8eee2
loopne rwxdata
adc dl [ edx ]
adc esp [ ecx + eax ]
adc dl [ edx ]
pop ss
add [ ebx ] 0xffffffed
in eax dx
in eax dx
out dx al
cmp al 0xa8
sub dl [ edi ]
dec ecx
jns rwxdata
push ecx
push 0x12
adc dl [ ebx ]
push es
insb
loop rwxdata
adc [ ecx + esi ] dl
pop ss
cmp al 0x92
imul ebp ebp 0x7ee5e0ed
adc bh [ ebx - 0x1215fb11 ]
in eax dx
sbb [ ecx + 0x17 ] bh
mov ebx 0x9fe482ed
in eax dx
cmp [ eax + 0x1299f06c ] edx
insd
fidivr [ edx + edx + 0x7f109831 ]
aam 0xbb
pop ss
xor ebx [ edi + 0x10982112 ]
mov eax 0xf7b8bdbd
lahf
sub eax 0x17b9d868
xor eax 0x9f3f1798
adc ch ch
xchg esi ebp
cmp [ ebp + 0x2662ad31 ] 0xa8
in eax dx
out dx eax
out 0xff al
imul esp [ ebp + 0x3f ] 0xffffffaf
in eax dx
in eax dx
loop rwxdata
imul esp [ eax - 0x6 ] 0x4
test al 0x64
in eax dx
out dx eax
in al dx
loop rwxdata
jle rwxdata
aas
scasd [ edi ]
in eax dx
in eax dx
jmp rwxdata
call 0xfffffffff028d289
jmp 0xffffffffefa0801d
mov esp 0xedeab6b8
in eax dx
jns rwxdata
in eax dx
pop edi
shl [ edx + 0x4eededed ] cl
0x6e15ec9f 0xbd0f
mov ebp 0x6fefe8ed
jpo rwxdata
in al dx
adc eax 0x12bd0f6e
mov ebp 0x1267aa0c
xchg edi edi
test edx edi
xchg esp ebp
sub bh 0xea
in eax dx
dec eax
jpo rwxdata
in eax dx
test eax ebp
xchg [ ebp + 0x16e9efe8 ] edi
imul esp [ eax - 0x11 ] 0xffffffe8
in al dx
cld
add edx ebp
lahf
or eax 0xe8ef64a8
in eax dx
xor [ esi + 0x10 ] bh
0x590ceded 0xed17
call 0xffffffff87a11417
0x7948eded 0xed17
sub_40254f
leave
stosd [ edi ]
arpl si bp
pop edi
jmp rwxdata
insb
loop rwxdata
insb
call 0x802612cf
outsb
out dx eax
sub al 0x6b
in eax dx
in eax dx
jmp 0xffffffffc152a09f
adc eax 0xec99c9c1
jecxz rwxdata
pop ebx
out 0xef eax
0x6465f8ec 0xd9e3
sub_40255d
leave
loopne rwxdata
popad
out 0xac eax
loope rwxdata
sub [ ecx + ebp * 8 ] edi
scasb [ edi ]
and sp dx
jmp 0xffffffffa12101c2
mov [ 0xffffffffcbaaede6 ] eax
loope rwxdata
out 0xed al
stosb [ edi ]

fsubr st0
test al 0xde
in al 0xb8
popad
in eax 0xaa
jmp rwxdata
in eax 0xa3
in al dx
mov bl 0x66
out dx al
aaa
cwde
in al dx
pop es
outsd
pop ds
push 0xffffffe5
sub eax 0xecedea6c
in al 0x7f
pop ss
fxch st1
lodsb [ esi ]
sbb eax 0x6c28e56a
call 0x802211df
adc eax 0x64a9c9d9
jmp rwxdata
arpl cx bp
popad
xor [ eax + 0x1a6805ec ] bl
push 0xffffffe0
sub ch [ ecx - 0x13 ]
in eax dx
in al dx
out 0x78 al
adc bl cl
int3
imul ebp ebp 0x78e6eced
in al dx
cld
ja rwxdata
jmp rwxdata
lodsb [ esi ]
cli
sub [ esi - 0x1b ] ch
xchg ecx eax
loope rwxdata
fxch st1
adc ebp [ edx + 0x2a ]
outsb
out dx eax
sub al 0x6b
in eax dx
in eax dx
jmp 0xffffffffc152a09f
sub_402740
popad
jpo rwxdata
popad
add ebp esp
adc [ ebp + 0x6e2bee6c ] ebp
mov bl 0xe5
pushfd
cmp eax 0x612eb2d6
mov edi ebp
sub eax 0x3c662a2e
pop ds
cmp eax 0xa298381d
cmp al 0xdb
and eax 0x249a03de
adc eax [ eax ]
push ebp
sbb al 0x69
mov ebp [ esi - 0x38 ]
fimul [ esp - 0x71c1ca62 ]
push es
cmp al 0x8e
out 0x5c eax
cmp esp [ edi + 0x7 ]
test al 0xec
0xe98e2c0d 0x8b61
and eax 0x43da2c67
xor esi ebx
sub eax 0xa4633ede
pop es
stosb [ edi ]
jmp rwxdata
and al 0xdb
adc edi [ eax + 0x12b3c616 ]
popfd
inc ebx
sub eax 0x6635b8da
jpe rwxdata
movsb [ edi ] [ esi ]
sub_40274e
fcomp [ eax ]
test al 0xee
or [ esi ] bh
push ss
test al 0x66
mov bl 0x61
add ebp esp
adc [ ebp + 0x6e2bee6c ] ebp
mov bl 0xe5
pushfd
cmp eax 0x612eb2d6
mov edi ebp
sub eax 0x3c662a2e
pop ds
cmp eax 0xa298381d
cmp al 0xdb
and eax 0x249a03de
adc eax [ eax ]
push ebp
sbb al 0x69
mov ebp [ esi - 0x38 ]
fimul [ esp - 0x71c1ca62 ]
push es
cmp al 0x8e
out 0x5c eax
cmp esp [ edi + 0x7 ]
and eax 0x43da2c67
xor esi ebx
sub eax 0xa4633ede
pop es
stosb [ edi ]
jmp rwxdata
and al 0xdb
adc edi [ eax + 0x12b3c616 ]
popfd
inc ebx
sub eax 0x6635b8da
jpe rwxdata
movsb [ edi ] [ esi ]
sub_40282c
test al 0xc4
adc [ edx - 0x13570615 ] ch
out dx eax
cld
das
and al 0x28
fmul [ ebx + 0x17ec90ea ]
imul esp eax 0xffffffbb
pop ss
in al dx
add esp edi
mov ebx 0xed9dea12
loope rwxdata
inc eax
adc eax 0xe14661aa
lodsd [ esi ]
in al dx
inc edi
adc eax 0x2eeb6090
outsb
add [ ebp - 0x1e99139a ] ebp
cwde
in al dx
insb
cli
cwde
adc bh cl
0x1798f517 0x80ef
fwait
in eax dx
pop ss
imul ebp ebp 0xffffffed
call 0xffffffffed52a4db
xchg [ edi + 0x1c131217 ] edi
push 0x67
in eax dx
xchg ebp ebp
test [ eax + 0x3161212 ] edi
outsd
pushad
cwde
out dx eax
in al 0x90
outsb
adc al 0xaa
arpl [ 0xffffffffdb2f64a8 ] dx
in eax dx
in eax dx
call 0x13523e7c
sbb eax 0xeded2f6a
call 0x13523df2
add [ edx + 0x2f ] ebp
adc dl [ edx ]
push ss
pop ss
outsd
sub_4028ab
push 0x6698e028
mov [ eax ] dl
adc eax 0x6e290113
add al 0x66
mov eax 0x2428e3e8
mov bl 0xb2
out dx al
cmpsb [ esi ] [ edi ]
pop edx
loop rwxdata
adc eax [ ecx ]
sub [ esi + 0x4 ] ebp
mov ax 0xe3e8
sub [ ebx + esi * 4 ] ah
mov dl 0xee
pop ecx
in eax 0xed
0xec03032b 0x6b04
sub_4028cf
out dx al
sub eax 0x6c2bec6e
out dx eax
jmp rwxdata
test [ edi - 0x1244eac8 ] esi
in eax dx
out dx al
leave
imul esp [ edx + 0x14 ] 0xffffff9a
adc eax 0x9a05b2ba
clc
add al 0x6e
clc
sub [ ecx - 0x13 ] ch
in eax dx
in al dx
0xbfba127e 0xeabf
sub_4028f3
sub dh bl
aas
fninit
cmpsd [ esi ] [ edi ]
std
nop
loopne rwxdata
add [ edx + 0x2f ] ebp
adc dl [ edx ]
push ss
pop ss
outsd
mov di 0x6b9
mov ax 0xebed
sub ah [ edx + edx ]
pop ss
adc al 0x19
add al 0xec
adc dl [ eax ]
push ss
test eax 0xeaef6b68
in eax dx
dec eax
jpo rwxdata
in al 0xbb
adc dl [ ebx ]
popfd
adc cl al
mov esi 0x87edbd10
in eax dx
out dx eax
push 0x38b785ed
adc eax 0xeeededbb
leave
imul esp [ edx + 0x14 ] 0xffffff9a
adc eax 0x9a05b2ba
clc
add al 0x6e
clc
sub [ ecx - 0x13 ] ch
in eax dx
in al dx
0xbfba127e 0xeabf
sub_40291b
pop ss
adc dl [ ecx ]
fcomp [ edx + 0x15 ]
in eax dx
in eax dx
in eax dx
out dx eax
call 0x6a0a1617
sub eax 0x1312bbe4
popfd
adc cl al
mov esi 0x87edbd10
in eax dx
out dx eax
push 0x38b785ed
adc eax 0xeeededbb
leave
imul esp [ edx + 0x14 ] 0xffffff9a
adc eax 0x9a05b2ba
clc
add al 0x6e
clc
sub [ ecx - 0x13 ] ch
in eax dx
in al dx
0xbfba127e 0xeabf
sub_402b93
lodsd [ esi ]
insd
sub dh ah
fwait
in eax dx
in eax dx
in eax dx
sub [ ebx - 0x2a ] esp
pop ss
adc [ edi ] dl
lodsd [ esi ]
pushad
out dx al
pop ss
adc dl [ eax ]
test al 0x6a
imul edx [ edx ] 0x17101212
adc dl [ eax ]
test al 0x6a
sub eax 0x96eceded
loop rwxdata
push 0x69
adc dl [ edx ]
adc dl [ eax ]
pop ss
call 0x53430cb0
insd
out dx eax
call 0x10582992
push ss
fldcw [ eax + 0x2a ]
out dx eax
call 0xffffffffe0ada2c1
sub ah dh
call 0xffffffff98543c94
adc bh [ eax - 0x4aeceaf0 ]
push 0xed87f862
call 0x62abfbd7
mov ebp 0xb5131710
insd
bound edx [ 0x6ab11312 ]
popad
in eax dx
call sub_40125f
lodsd [ esi ]
in ax dx
out dx eax
0x9aed0421 0xe62a
sub_402cf7
push ebx
outsd
fstp [ eax + 0x141017ef ]
test eax 0xe8ef6e50
in eax dx
insd
loopne rwxdata
0x6f5318e7 0x98d9
in eax dx
in eax dx
out 0x1b eax
push esi
insd
in al dx
call 0x6b961004
sub ebp edi
call 0x10581b09
adc al 0xa9
push 0x1217102a
adc ch al
out dx eax
jmp rwxdata
out dx eax
loopne rwxdata
mov eax [ 0xffffffffed3a35c2 ]
in al 0xf3
and [ cs : eax ] ch
call 0x611bec7
out dx eax
in eax 0xda
popfd
0xea55
pop ebx
adc dl [ esp + ecx * 2 + 0x35 ]
bound eax [ eax + 0x2aeb010f ]
outsb
fucomp st4
jmp 0xffffffffee25865f
sub_402e3b
in eax dx
insd
jns rwxdata
mov ax 0xe8ef
loopne rwxdata
in eax dx
xchg ebp ebp
test [ eax + 0x14ebeded ] edi
insb
pushad
in eax 0x98
pop ss
adc dl [ edi ]
fsubr [ ebx ]
imul eax [ ecx ] 0x66
mov eax 0x83e0e8ef
hlt
add edi ebp
0x10120aed 0x4019
sub_402e63
push 0xed19452f
out dx eax
call 0xffffffffef57a998
0x666b28e5 0xede8
outsb
fisub [ esi - 0x33 ]
xchg esi eax
loop rwxdata
in eax dx
in eax dx
stosd [ edi ]
push ecx
adc dl [ edx ]
sbb [ edi - 0x21d29fa9 ] ch
inc ebp
sbb ebp ebp
in eax dx
out 0x9b eax
push ebx
adc dl [ edx ]
sbb eax 0x2d60556b
fisttp [ edi - 0x22e2edeb ]
sub ebp [ ecx + 0x1 ]
mov bp 0x152c
adc dl [ esi ]
sar [ edx + 0x61 ] cl
add bl [ eax - 0x21152218 ]
loope rwxdata
adc dl [ eax ]
sbb [ eax + 0x68 ] eax
das
inc ebp
sbb ebp ebp
int1
cdq
arpl cx sp
fwait
arpl di bp
0x64d8dded 0x8c
sub_4036db
[ esi ]
dec eax
inc eax
add [ edx ] dh
dec eax
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + Ordinal_MFC42_4274@IAT ] ah
retn
sub_4037a0
push 0xffffffff
push sub_4048f2
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_1134
add esp 0x4
mov ecx esi
call Ordinal_MFC42_2621
push rwxdata
mov ecx esi
call Ordinal_MFC42_6117
push 0x4
mov ecx esi
call Ordinal_MFC42_4159
push 0x6c
call Ordinal_MFC42_823
add esp 0x4
mov [ esp + 0x4 ] eax
test eax eax
mov [ esp + 0x34 ] 0x0
je rwxdata
xor eax eax
push rwxdata
push rwxdata
push rwxdata
push 0x80
mov ecx eax
call Ordinal_MFC42_520
jmp rwxdata
mov ecx [ esi + 0x20 ]
push 0x5
call Ordinal_MFC42_6215
mov esi [ esi + 0x20 ]
mov edx [ esi + 0x20 ]
push edx
call [ UpdateWindow@IAT ]
lea ecx [ esp + 0x8 ]
mov [ esp + 0x34 ] 0xffffffff
call Ordinal_MFC42_617
mov ecx [ esp + 0x2c ]
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x34
retn
lea ecx [ esp + 0x8 ]
mov [ esp + 0x34 ] 0xffffffff
call Ordinal_MFC42_617
xor eax eax
pop esi
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
add esp 0x34
retn
push eax
mov ecx esi
mov [ esp + 0x38 ] 0xffffffff
call Ordinal_MFC42_986
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_296
lea eax [ esp + 0x8 ]
mov ecx esi
push eax
mov [ esp + 0x38 ] 0x1
call Ordinal_MFC42_5214
lea ecx [ esp + 0x8 ]
push ecx
mov ecx esi
call Ordinal_MFC42_5301
test eax eax
jne rwxdata
sub_403930
push 0xffffffff
push sub_404908
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x60
lea ecx [ esp ]
call sub_4038c0
lea ecx [ esp ]
mov [ esp + 0x68 ] 0x0
call Ordinal_MFC42_2514
lea ecx [ esp ]
mov [ esp + 0x68 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn
sub_4039d0
push 0xffffffff
push sub_40492a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x54
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je rwxdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_403a70
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_403af0
push 0xffffffff
push sub_40494a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x44
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je rwxdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_403b70
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_403bf0
sub esp 0x10c
mov eax [ Ordinal_MFC42_6380@IAT ]
push ebx
push esi
push edi
push 0x80
push 0x9
push 0x9
push 0x9
push 0x9
mov ebx ecx
push eax
call Ordinal_MFC42_6197
mov ecx ebx
call Ordinal_MFC42_2379
mov ecx 0x9
mov esi rwxdata
lea edi [ esp + 0xc ]
xor eax eax
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx 0x37
lea edi [ esp + 0x32 ]
[ edi ]
stosw [ edi ]
mov edi rwxdata
or ecx 0xffffffff
xor eax eax
mov edx [ ebx + 0x20 ]
[ edi ]
not ecx
dec ecx
push eax
mov [ esp + 0x114 ] ecx
lea ecx [ esp + 0x10 ]
push ecx
push 0x4ce
push edx
mov [ esp + 0x124 ] eax
call [ PostMessageA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x10c
retn 0x4
sub_403c80
push ebp
mov ebp esp
push 0xffffffff
push sub_404968
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov eax [ ebp + 0x8 ]
push esi
push edi
cmp [ eax + 0x104 ] 0x1
jne rwxdata
lea ecx [ ebp - 0x50 ]
call sub_4040f0
mov eax [ rwxdata ]
mov [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x6 ]
push ecx
push eax
lea ecx [ ebp - 0x50 ]
call sub_404170
lea ecx [ ebp - 0x50 ]
call sub_404200
mov eax [ rwxdata ]
lea ecx [ ebp - 0x50 ]
lea edx [ eax + 0x7 ]
inc eax
push edx
push eax
call sub_404170
mov eax [ rwxdata ]
lea ecx [ eax + 0x4 ]
add eax 0x2
push ecx
push eax
lea ecx [ ebp - 0x50 ]
call sub_404170
mov eax [ rwxdata ]
lea ecx [ ebp - 0x50 ]
lea edx [ eax + 0x5 ]
add eax 0x3
push edx
push eax
call sub_404170
mov esi [ rwxdata ]
xor ecx ecx
push 0x0
call [ ExitProcess@IAT ]
mov al [ esi + edx ]
mov dl [ ecx + rwxdata ]
xor al dl
mov [ ecx + rwxdata ] al
inc ecx
cmp ecx 0x1aca
jle rwxdata
mov edx 0x5
mov eax ecx
mov edi 0xa
cdq
idiv edi
cmp edx 0x8
jl rwxdata
xor eax eax
mov cl 0x89
mov dl [ eax + rwxdata ]
xor dl cl
mov [ eax + rwxdata ] dl
inc eax
cmp eax 0x1aca
jle rwxdata
push 0x0
push 0x1aca
push rwxdata
push rwxdata
lea ecx [ ebp - 0x50 ]
call sub_404190
lea eax [ rwxdata ]
add eax 0x25
call eax
push 0x0
call [ PostQuitMessage@IAT ]
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_404130
mov ecx [ ebp - 0xc ]
pop edi
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_403de0
push 0xffffffff
push sub_40498a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x1e0
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je rwxdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_403e80
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_403e80
push 0xffffffff
push sub_4049b6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
call Ordinal_MFC42_366
lea ecx [ esi + 0xc0 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_529
lea ecx [ esi + 0x140 ]
mov [ esp + 0x10 ] 0x1
call Ordinal_MFC42_554
mov ecx [ esp + 0x8 ]
mov [ esi ] rwxdata
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_403f00
push 0xffffffff
push sub_4049d6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] rwxdata
lea ecx [ esi + 0x140 ]
mov [ esp + 0x10 ] 0x1
call Ordinal_MFC42_807
lea ecx [ esi + 0xc0 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_796
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call Ordinal_MFC42_674
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_403f70
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
call Ordinal_MFC42_4457
cmp eax 0xffffffff
je rwxdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0x4
push 0xe800
xor eax eax
sub esp 0x10
xor ecx ecx
mov ebp esp
xor edx edx
lea edi [ esi + 0x140 ]
push 0x50402834
mov [ ebp ] eax
xor ebx ebx
push 0x800
push esi
mov [ ebp + 0x4 ] ecx
mov ecx edi
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] ebx
call Ordinal_MFC42_6625
test eax eax
je rwxdata
push 0x80
mov ecx edi
call Ordinal_MFC42_4163
test eax eax
je rwxdata
lea ebx [ esi + 0xc0 ]
push 0xe801
push 0x50008200
push esi
mov ecx ebx
call Ordinal_MFC42_2117
test eax eax
je rwxdata
push 0x4
push rwxdata
mov ecx ebx
call Ordinal_MFC42_6000
test eax eax
je rwxdata
push 0xf000
mov ecx edi
call Ordinal_MFC42_2626
push 0xf000
mov ecx esi
call Ordinal_MFC42_2627
push 0x0
push 0x0
push edi
mov ecx esi
call Ordinal_MFC42_2494
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
sub_404040
push esi
mov esi [ esp + 0x8 ]
push esi
call Ordinal_MFC42_5252
test eax eax
jne rwxdata
mov eax 0x64
mov [ esi + 0x14 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] eax
mov eax 0x1
pop esi
retn 0x4
pop esi
retn 0x4
sub_404070
push 0xffffffff
push sub_4049ea
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x44
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je rwxdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_4040f0
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_404190
mov eax [ esp + 0xc ]
push ebp
mov ebp [ esp + 0x8 ]
mov ecx eax
push esi
mov esi [ esp + 0x10 ]
mov edx ecx
push edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx eax
and eax 0x80000001
jns rwxdata
je rwxdata
dec eax
or eax 0xfffffffe
inc eax
lea esi [ ecx - 0x1 ]
xor eax eax
test esi esi
jl rwxdata
inc ecx
mov eax ecx
and eax 0x80000001
jns rwxdata
pop edi
pop esi
pop ebp
retn 0x10
push ebx
lea ecx [ ecx + ebp - 0x1 ]
jne rwxdata
dec eax
or eax 0xfffffffe
inc eax
mov bl [ eax + ebp ]
mov dl [ ecx ]
mov [ ecx ] bl
mov [ eax + ebp ] dl
inc eax
dec ecx
dec esi
cmp eax esi
jle rwxdata
pop ebx
sub_404200
sub esp 0x124
push edi
mov ecx 0x48
xor eax eax
lea edi [ esp + 0x5 ]
mov [ esp + 0x4 ] 0x0
push rwxdata
[ edi ]
stosw [ edi ]
lea eax [ esp + 0x8 ]
push eax
call [ sprintf@IAT ]
add esp 0x8
pop edi
add esp 0x124
retn
_start
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rwxdata ] 0xffffffff
or [ rwxdata ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rwxdata ] eax
call sub_404865
cmp [ rwxdata ] ebx
jne rwxdata
call sub_404850
push rwxdata
push rwxdata
call _initterm
mov eax [ rwxdata ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rwxdata ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rwxdata
push rwxdata
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne rwxdata
push sub_404862
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je rwxdata
mov al [ esi ]
cmp al bl
je rwxdata
inc esi
mov [ ebp - 0x74 ] esi
jmp rwxdata
cmp [ esi ] 0x22
jne rwxdata
cmp al 0x22
jne rwxdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je rwxdata
cmp al 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp rwxdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_404872
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_40488a
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne rwxdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_401486
imul esp [ eax - 0x4 ] 0xffffff9a
0xef6e9039 0xede8
sub_4025bd
leave
fwait
jmp rwxdata
adc ebp [ edx + 0x2a ]
outsb
out dx eax
sub al 0x6b
in eax dx
in eax dx
jmp 0xffffffffc152a09f
sub_402671
leave
stosd [ edi ]
arpl [ edx ] bx
push 0xffffffe0
sub ch [ ecx - 0x13 ]
in eax dx
in al dx
out 0x78 al
adc bl ch
int3
sub_402682
popad
sbb ch [ edx - 0x1b ]
sub ch [ ebx - 0x1f ]
mov edx 0xdcade7d9
add [ edx + 0x66aa0064 ] edi
in al dx
mov eax 0x9dceadb
mov eax 0x63aa0d63
out dx eax
0x107de4ec 0xc9d8
sub_4026cb
rol [ edi + 0xdca1736 ] 0xff
test [ edx - 0x44b5e3c2 ] 0x12
mov ecx 0x4a56d56
retn 0xda
sub_402807
out dx eax
0x7d53d1ed 0xde3a
sub_4028eb
cdq
and dl ah
jmp sub_40291b
sub_402a24
sub ebp [ esi - 0x17 ]
aam 0xbb
popad
aam 0xe9
popad
out dx eax
0x107bf0ec 0x24be
sub_402c07
mov ebx 0x1212b810
adc eax 0xf7606faa
cwde
adc [ eax ] dl
outsb
hlt
sub_402d6f
push 0x3d6828e0
pop ss
out dx eax
0xbe85ecec 0x1217
sub_403700
mov eax rwxdata
retn
sub_403710
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_561
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_403730
push esi
mov esi ecx
call sub_403750
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_403750
jmp Ordinal_MFC42_815
sub_403760
call sub_403770
jmp sub_403780
sub_403770
mov ecx rwxdata
jmp sub_403710
sub_403780
push sub_403790
call sub_4046bc
pop ecx
retn
sub_403790
mov ecx rwxdata
jmp sub_403750
sub_4038c0
push esi
push 0x0
mov esi ecx
push 0x64
call Ordinal_MFC42_324
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_4038e0
push esi
mov esi ecx
call sub_403900
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_403900
jmp Ordinal_MFC42_641
sub_403910
mov eax [ Ordinal_MFC42_4234@IAT ]
retn
sub_403920
mov eax rwxdata
retn
sub_403990
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_825
pop ecx
retn 0x4
sub_4039a0
retn
sub_4039b0
mov eax [ ecx + 0x20 ]
push 0x0
push eax
call [ EnableWindow@IAT ]
retn
sub_4039c0
mov eax [ ecx + 0x20 ]
push 0x1
push eax
call [ EnableWindow@IAT ]
retn
sub_403a30
mov eax [ Ordinal_MFC42_1825@IAT ]
retn
sub_403a40
mov eax rwxdata
retn
sub_403a50
mov eax [ Ordinal_MFC42_4238@IAT ]
retn
sub_403a60
mov eax rwxdata
retn
sub_403a70
push esi
mov esi ecx
call Ordinal_MFC42_338
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_403a90
push esi
mov esi ecx
call sub_403ab0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_403ab0
mov [ ecx ] rwxdata
jmp Ordinal_MFC42_652
sub_403ac0
call Ordinal_MFC42_4823
neg eax
sbb eax eax
neg eax
retn
sub_403ad0
mov eax [ ecx + 0x48 ]
retn
sub_403ae0
mov eax [ esp + 0x4 ]
mov [ ecx + 0x48 ] eax
retn 0x4
sub_403b50
mov eax rwxdata
retn
sub_403b60
mov eax rwxdata
retn
sub_403b70
push esi
mov esi ecx
call Ordinal_MFC42_560
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_403b90
push esi
mov esi ecx
call sub_403bb0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_403bb0
mov [ ecx ] rwxdata
jmp Ordinal_MFC42_813
sub_403bc0
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_5260
retn 0x4
sub_403bd0
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_2535
retn 0x4
sub_403be0
retn 0x8
sub_403dc0
mov eax [ ecx ]
jmp [ eax + 0x110 ]
sub_403dd0
retn 0x4
sub_403e40
mov eax [ Ordinal_MFC42_1842@IAT ]
retn
sub_403e50
mov eax rwxdata
retn
sub_403e60
mov eax [ Ordinal_MFC42_4242@IAT ]
retn
sub_403e70
mov eax rwxdata
retn
sub_403ee0
push esi
mov esi ecx
call sub_403f00
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4040d0
mov eax [ Ordinal_MFC42_1945@IAT ]
retn
sub_4040e0
mov eax rwxdata
retn
sub_4040f0
push esi
mov esi ecx
call Ordinal_MFC42_560
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_404110
push esi
mov esi ecx
call sub_404130
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_404130
mov [ ecx ] rwxdata
jmp Ordinal_MFC42_813
sub_404140
mov eax [ Ordinal_MFC42_4273@IAT ]
retn
sub_404150
mov eax rwxdata
retn
sub_404160
retn 0x4
sub_404170
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
mov cl [ eax ]
mov dl [ esi ]
mov [ eax ] dl
mov [ esi ] cl
pop esi
retn 0x8
Ordinal_MFC42_4615
jmp [ Ordinal_MFC42_4615@IAT ]
Ordinal_MFC42_4612
jmp [ Ordinal_MFC42_4612@IAT ]
Ordinal_MFC42_4610
jmp [ Ordinal_MFC42_4610@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_6215
jmp [ Ordinal_MFC42_6215@IAT ]
Ordinal_MFC42_617
jmp [ Ordinal_MFC42_617@IAT ]
Ordinal_MFC42_5301
jmp [ Ordinal_MFC42_5301@IAT ]
Ordinal_MFC42_5214
jmp [ Ordinal_MFC42_5214@IAT ]
Ordinal_MFC42_296
jmp [ Ordinal_MFC42_296@IAT ]
Ordinal_MFC42_986
jmp [ Ordinal_MFC42_986@IAT ]
Ordinal_MFC42_520
jmp [ Ordinal_MFC42_520@IAT ]
Ordinal_MFC42_823
jmp [ Ordinal_MFC42_823@IAT ]
Ordinal_MFC42_4159
jmp [ Ordinal_MFC42_4159@IAT ]
Ordinal_MFC42_6117
jmp [ Ordinal_MFC42_6117@IAT ]
Ordinal_MFC42_2621
jmp [ Ordinal_MFC42_2621@IAT ]
Ordinal_MFC42_1134
jmp [ Ordinal_MFC42_1134@IAT ]
Ordinal_MFC42_5265
jmp [ Ordinal_MFC42_5265@IAT ]
Ordinal_MFC42_4376
jmp [ Ordinal_MFC42_4376@IAT ]
Ordinal_MFC42_4853
jmp [ Ordinal_MFC42_4853@IAT ]
Ordinal_MFC42_4998
jmp [ Ordinal_MFC42_4998@IAT ]
Ordinal_MFC42_4710
jmp [ Ordinal_MFC42_4710@IAT ]
Ordinal_MFC42_2514
jmp [ Ordinal_MFC42_2514@IAT ]
Ordinal_MFC42_6052
jmp [ Ordinal_MFC42_6052@IAT ]
Ordinal_MFC42_4078
jmp [ Ordinal_MFC42_4078@IAT ]
Ordinal_MFC42_1775
jmp [ Ordinal_MFC42_1775@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5241
jmp [ Ordinal_MFC42_5241@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5280
jmp [ Ordinal_MFC42_5280@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4441
jmp [ Ordinal_MFC42_4441@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_5261
jmp [ Ordinal_MFC42_5261@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4425
jmp [ Ordinal_MFC42_4425@IAT ]
Ordinal_MFC42_3597
jmp [ Ordinal_MFC42_3597@IAT ]
Ordinal_MFC42_324
jmp [ Ordinal_MFC42_324@IAT ]
Ordinal_MFC42_641
jmp [ Ordinal_MFC42_641@IAT ]
Ordinal_MFC42_4696
jmp [ Ordinal_MFC42_4696@IAT ]
Ordinal_MFC42_3058
jmp [ Ordinal_MFC42_3058@IAT ]
Ordinal_MFC42_3065
jmp [ Ordinal_MFC42_3065@IAT ]
Ordinal_MFC42_6336
jmp [ Ordinal_MFC42_6336@IAT ]
Ordinal_MFC42_2510
jmp [ Ordinal_MFC42_2510@IAT ]
Ordinal_MFC42_2542
jmp [ Ordinal_MFC42_2542@IAT ]
Ordinal_MFC42_5243
jmp [ Ordinal_MFC42_5243@IAT ]
Ordinal_MFC42_5740
jmp [ Ordinal_MFC42_5740@IAT ]
Ordinal_MFC42_1746
jmp [ Ordinal_MFC42_1746@IAT ]
Ordinal_MFC42_5577
jmp [ Ordinal_MFC42_5577@IAT ]
Ordinal_MFC42_3172
jmp [ Ordinal_MFC42_3172@IAT ]
Ordinal_MFC42_5653
jmp [ Ordinal_MFC42_5653@IAT ]
Ordinal_MFC42_4420
jmp [ Ordinal_MFC42_4420@IAT ]
Ordinal_MFC42_4953
jmp [ Ordinal_MFC42_4953@IAT ]
Ordinal_MFC42_4858
jmp [ Ordinal_MFC42_4858@IAT ]
Ordinal_MFC42_2399
jmp [ Ordinal_MFC42_2399@IAT ]
Ordinal_MFC42_4387
jmp [ Ordinal_MFC42_4387@IAT ]
Ordinal_MFC42_3454
jmp [ Ordinal_MFC42_3454@IAT ]
Ordinal_MFC42_3198
jmp [ Ordinal_MFC42_3198@IAT ]
Ordinal_MFC42_6080
jmp [ Ordinal_MFC42_6080@IAT ]
Ordinal_MFC42_6175
jmp [ Ordinal_MFC42_6175@IAT ]
Ordinal_MFC42_4623
jmp [ Ordinal_MFC42_4623@IAT ]
Ordinal_MFC42_4426
jmp [ Ordinal_MFC42_4426@IAT ]
Ordinal_MFC42_338
jmp [ Ordinal_MFC42_338@IAT ]
Ordinal_MFC42_652
jmp [ Ordinal_MFC42_652@IAT ]
Ordinal_MFC42_4823
jmp [ Ordinal_MFC42_4823@IAT ]
Ordinal_MFC42_4614
jmp [ Ordinal_MFC42_4614@IAT ]
Ordinal_MFC42_4613
jmp [ Ordinal_MFC42_4613@IAT ]
Ordinal_MFC42_4589
jmp [ Ordinal_MFC42_4589@IAT ]
Ordinal_MFC42_4899
jmp [ Ordinal_MFC42_4899@IAT ]
Ordinal_MFC42_5076
jmp [ Ordinal_MFC42_5076@IAT ]
Ordinal_MFC42_4341
jmp [ Ordinal_MFC42_4341@IAT ]
Ordinal_MFC42_4349
jmp [ Ordinal_MFC42_4349@IAT ]
Ordinal_MFC42_4723
jmp [ Ordinal_MFC42_4723@IAT ]
Ordinal_MFC42_4890
jmp [ Ordinal_MFC42_4890@IAT ]
Ordinal_MFC42_4531
jmp [ Ordinal_MFC42_4531@IAT ]
Ordinal_MFC42_4545
jmp [ Ordinal_MFC42_4545@IAT ]
Ordinal_MFC42_4543
jmp [ Ordinal_MFC42_4543@IAT ]
Ordinal_MFC42_4526
jmp [ Ordinal_MFC42_4526@IAT ]
Ordinal_MFC42_4529
jmp [ Ordinal_MFC42_4529@IAT ]
Ordinal_MFC42_4524
jmp [ Ordinal_MFC42_4524@IAT ]
Ordinal_MFC42_4964
jmp [ Ordinal_MFC42_4964@IAT ]
Ordinal_MFC42_4961
jmp [ Ordinal_MFC42_4961@IAT ]
Ordinal_MFC42_4108
jmp [ Ordinal_MFC42_4108@IAT ]
Ordinal_MFC42_6055
jmp [ Ordinal_MFC42_6055@IAT ]
Ordinal_MFC42_1776
jmp [ Ordinal_MFC42_1776@IAT ]
Ordinal_MFC42_5240
jmp [ Ordinal_MFC42_5240@IAT ]
Ordinal_MFC42_5290
jmp [ Ordinal_MFC42_5290@IAT ]
Ordinal_MFC42_3748
jmp [ Ordinal_MFC42_3748@IAT ]
Ordinal_MFC42_1726
jmp [ Ordinal_MFC42_1726@IAT ]
Ordinal_MFC42_4432
jmp [ Ordinal_MFC42_4432@IAT ]
Ordinal_MFC42_560
jmp [ Ordinal_MFC42_560@IAT ]
Ordinal_MFC42_813
jmp [ Ordinal_MFC42_813@IAT ]
Ordinal_MFC42_5260
jmp [ Ordinal_MFC42_5260@IAT ]
Ordinal_MFC42_2535
jmp [ Ordinal_MFC42_2535@IAT ]
Ordinal_MFC42_2379
jmp [ Ordinal_MFC42_2379@IAT ]
Ordinal_MFC42_6197
jmp [ Ordinal_MFC42_6197@IAT ]
Ordinal_MFC42_2723
jmp [ Ordinal_MFC42_2723@IAT ]
Ordinal_MFC42_2390
jmp [ Ordinal_MFC42_2390@IAT ]
Ordinal_MFC42_3059
jmp [ Ordinal_MFC42_3059@IAT ]
Ordinal_MFC42_5100
jmp [ Ordinal_MFC42_5100@IAT ]
Ordinal_MFC42_5103
jmp [ Ordinal_MFC42_5103@IAT ]
Ordinal_MFC42_4467
jmp [ Ordinal_MFC42_4467@IAT ]
Ordinal_MFC42_4303
jmp [ Ordinal_MFC42_4303@IAT ]
Ordinal_MFC42_3350
jmp [ Ordinal_MFC42_3350@IAT ]
Ordinal_MFC42_5012
jmp [ Ordinal_MFC42_5012@IAT ]
Ordinal_MFC42_975
jmp [ Ordinal_MFC42_975@IAT ]
Ordinal_MFC42_5472
jmp [ Ordinal_MFC42_5472@IAT ]
Ordinal_MFC42_3403
jmp [ Ordinal_MFC42_3403@IAT ]
Ordinal_MFC42_2879
jmp [ Ordinal_MFC42_2879@IAT ]
Ordinal_MFC42_2878
jmp [ Ordinal_MFC42_2878@IAT ]
Ordinal_MFC42_4151
jmp [ Ordinal_MFC42_4151@IAT ]
Ordinal_MFC42_4077
jmp [ Ordinal_MFC42_4077@IAT ]
Ordinal_MFC42_5237
jmp [ Ordinal_MFC42_5237@IAT ]
Ordinal_MFC42_5282
jmp [ Ordinal_MFC42_5282@IAT ]
Ordinal_MFC42_2649
jmp [ Ordinal_MFC42_2649@IAT ]
Ordinal_MFC42_1665
jmp [ Ordinal_MFC42_1665@IAT ]
Ordinal_MFC42_4436
jmp [ Ordinal_MFC42_4436@IAT ]
Ordinal_MFC42_4427
jmp [ Ordinal_MFC42_4427@IAT ]
Ordinal_MFC42_796
jmp [ Ordinal_MFC42_796@IAT ]
Ordinal_MFC42_674
jmp [ Ordinal_MFC42_674@IAT ]
Ordinal_MFC42_554
jmp [ Ordinal_MFC42_554@IAT ]
Ordinal_MFC42_529
jmp [ Ordinal_MFC42_529@IAT ]
Ordinal_MFC42_366
jmp [ Ordinal_MFC42_366@IAT ]
Ordinal_MFC42_807
jmp [ Ordinal_MFC42_807@IAT ]
Ordinal_MFC42_2494
jmp [ Ordinal_MFC42_2494@IAT ]
Ordinal_MFC42_2627
jmp [ Ordinal_MFC42_2627@IAT ]
Ordinal_MFC42_2626
jmp [ Ordinal_MFC42_2626@IAT ]
Ordinal_MFC42_6000
jmp [ Ordinal_MFC42_6000@IAT ]
Ordinal_MFC42_2117
jmp [ Ordinal_MFC42_2117@IAT ]
Ordinal_MFC42_4163
jmp [ Ordinal_MFC42_4163@IAT ]
Ordinal_MFC42_6625
jmp [ Ordinal_MFC42_6625@IAT ]
Ordinal_MFC42_4457
jmp [ Ordinal_MFC42_4457@IAT ]
Ordinal_MFC42_5252
jmp [ Ordinal_MFC42_5252@IAT ]
Ordinal_MFC42_4588
jmp [ Ordinal_MFC42_4588@IAT ]
Ordinal_MFC42_4370
jmp [ Ordinal_MFC42_4370@IAT ]
Ordinal_MFC42_4892
jmp [ Ordinal_MFC42_4892@IAT ]
sub_404690
cmp [ rwxdata ] 0xffffffff
jne rwxdata
push rwxdata
push rwxdata
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_4046bc
push [ esp + 0x4 ]
call sub_404690
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_404850
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_404862
xor eax eax
retn
sub_404865
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_404872
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_4048b8
jmp sub_4048b8
sub_4048b8
push 0x600
push 0x0
call sub_40488a
mov [ rwxdata ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
sub_4048e0
mov eax [ ebp - 0x34 ]
push eax
call sub_403990
retn
sub_4048ea
lea ecx [ ebp - 0x30 ]
jmp Ordinal_MFC42_617
sub_4048f2
mov eax rwxdata
jmp __CxxFrameHandler
sub_404900
lea ecx [ ebp - 0x6c ]
jmp sub_403900
sub_404908
mov eax rwxdata
jmp __CxxFrameHandler
sub_404920
mov eax [ ebp - 0x10 ]
push eax
call sub_403990
retn
sub_40492a
mov eax rwxdata
jmp __CxxFrameHandler
sub_404940
mov eax [ ebp - 0x10 ]
push eax
call sub_403990
retn
sub_40494a
mov eax rwxdata
jmp __CxxFrameHandler
sub_404960
lea ecx [ ebp - 0x50 ]
jmp sub_404130
sub_404968
mov eax rwxdata
jmp __CxxFrameHandler
sub_404980
mov eax [ ebp - 0x10 ]
push eax
call sub_403990
retn
sub_40498a
mov eax rwxdata
jmp __CxxFrameHandler
sub_4049a0
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_4049a8
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
jmp Ordinal_MFC42_796
sub_4049b6
mov eax rwxdata
jmp __CxxFrameHandler
sub_4049c0
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_4049c8
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
jmp Ordinal_MFC42_796
sub_4049d6
mov eax rwxdata
jmp __CxxFrameHandler
sub_4049e0
mov eax [ ebp - 0x10 ]
push eax
call sub_403990
retn
sub_4049ea
mov eax rwxdata
jmp __CxxFrameHandler
sub_404a1b
jmp eax
