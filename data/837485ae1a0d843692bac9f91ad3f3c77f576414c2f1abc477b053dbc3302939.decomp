sub_401000
push ecx
push ebx
push esi
mov esi [ esp + 0x14 ]
mov ecx 0x3
mov eax esi
xor ebx ebx
cdq
idiv ecx
cmp edx ebx
jne r-xdata
cmp edx 0x1
jne r-xdata
mov eax esi
jmp r-xdata
cmp edx 0x2
lea eax [ esi + 0x1 ]
je r-xdata
lea eax [ esi + 0x2 ]
jmp r-xdata
lea ecx [ eax * 4 ]
mov eax 0x55555556
imul ecx
mov ecx [ esp + 0x1c ]
mov eax edx
shr eax 0x1f
add edx eax
dec ecx
cmp ecx edx
jge r-xdata
mov eax [ esp + 0x8 ]
push ebp
lea edx [ esi + 0x1 ]
push edi
push edx
mov [ esp + 0x14 ] esi
mov [ esp + 0x28 ] ebx
call ??2@YAPAXI@Z
mov ecx esi
mov esi [ esp + 0x1c ]
mov ebp eax
mov eax ecx
mov edi ebp
add esp 0x4
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x1c ]
mov esi [ esp + 0x20 ]
cmp ecx 0x3
mov [ ecx + ebp ] 0x0
jl r-xdata
pop esi
xor eax eax
pop ebx
pop ecx
retn
mov eax [ esp + 0x10 ]
cmp eax 0x2
jne r-xdata
mov eax 0xaaaaaaab
mul ecx
shr edx 0x1
lea eax [ edx + edx * 2 ]
sub ecx eax
mov [ esp + 0x10 ] ecx
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x24 ]
mov cl [ eax + ebp ]
lea edi [ eax + ebp + 0x1 ]
sar ecx 0x2
and ecx 0x3f
mov dl [ ecx + rw-data ]
mov [ ebx + esi ] dl
mov al [ eax + ebp ]
mov cl [ edi ]
and eax 0x3
sar ecx 0x4
shl eax 0x4
and ecx 0xf
or eax ecx
mov dl [ eax + rw-data ]
mov [ ebx + esi + 0x1 ] dl
mov al [ edi ]
and eax 0xf
mov cl [ eax * 4 + rw-data ]
mov [ ebx + esi + 0x2 ] cl
mov [ ebx + esi + 0x3 ] 0x3d
jmp r-xdata
mov edi [ esp + 0x24 ]
add ebx 0x4
mov cl [ edi + ebp ]
add edi 0x3
sar ecx 0x2
and ecx 0x3f
mov [ esp + 0x24 ] edi
mov al [ ecx + rw-data ]
mov [ esi + ebx - 0x4 ] al
mov cl [ edi + ebp - 0x3 ]
mov al [ edi + ebp - 0x2 ]
and ecx 0x3
sar eax 0x4
shl ecx 0x4
and eax 0xf
or ecx eax
mov cl [ ecx + rw-data ]
mov [ esi + ebx - 0x3 ] cl
mov al [ edi + ebp - 0x1 ]
mov cl [ edi + ebp - 0x2 ]
sar eax 0x6
and ecx 0xf
and eax 0x3
shl ecx 0x2
or eax ecx
mov al [ eax + rw-data ]
mov [ esi + ebx - 0x2 ] al
mov cl [ edi + ebp - 0x1 ]
and ecx 0x3f
dec edx
mov al [ ecx + rw-data ]
mov [ esi + ebx - 0x1 ] al
jne r-xdata
push ebp
mov [ ebx + esi ] 0x0
call ??3@YAXPAX@Z
add esp 0x4
mov eax ebx
pop edi
pop ebp
pop esi
pop ebx
pop ecx
retn
mov eax [ esp + 0x24 ]
mov dl [ eax + ebp ]
sar edx 0x2
and edx 0x3f
mov cl [ edx + rw-data ]
mov [ ebx + esi ] cl
mov dl [ eax + ebp ]
and edx 0x3
shl edx 0x4
mov al [ edx + rw-data ]
mov [ ebx + esi + 0x1 ] al
mov al 0x3d
mov [ ebx + esi + 0x2 ] al
mov [ ebx + esi + 0x3 ] al
add ebx 0x4
sub_4011d0
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi ecx
mov eax edi
and eax 0x80000003
jns r-xdata
je r-xdata
dec eax
or eax 0xfffffffc
inc eax
push rw-data
push esi
xor ebx ebx
call [ strstr@IAT ]
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
push 0x3d
push esi
call [ strchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov ebx 0x2
jmp r-xdata
lea eax [ edi + edi * 2 ]
cdq
and edx 0x3
add eax edx
mov ecx eax
mov eax [ esp + 0x18 ]
sar ecx 0x2
sub ecx ebx
cmp eax ecx
jge r-xdata
mov ebx 0x1
sub edi ebx
push ebp
mov [ esp + 0x14 ] edi
push eax
xor edi edi
xor ebx ebx
call ??2@YAPAXI@Z
mov ebp eax
mov eax [ esp + 0x18 ]
add esp 0x4
cmp eax 0x4
jl r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
cmp eax 0x3
jne r-xdata
mov ecx eax
shr ecx 0x2
mov [ esp + 0x1c ] ecx
neg ecx
lea edx [ eax + ecx * 4 ]
mov [ esp + 0x14 ] edx
cmp eax 0x2
jne r-xdata
movsx eax [ edi + esi ]
push eax
push rw-data
call [ strchr@IAT ]
mov ecx rw-data
sub al cl
shl al 0x2
mov [ ebx + ebp ] al
movsx edx [ edi + esi + 0x1 ]
push edx
push ecx
call [ strchr@IAT ]
mov dl [ ebx + ebp ]
sub eax rw-data
mov ecx eax
sar ecx 0x4
or dl cl
shl al 0x4
mov [ ebx + ebp ] dl
mov [ ebx + ebp + 0x1 ] al
movsx edx [ edi + esi + 0x2 ]
push edx
push rw-data
call [ strchr@IAT ]
mov cl [ ebx + ebp + 0x1 ]
sub eax rw-data
sar eax 0x2
or cl al
add esp 0x18
mov [ ebx + ebp + 0x1 ] cl
add ebx 0x2
jmp r-xdata
movsx eax [ esi + edi ]
push eax
push rw-data
call [ strchr@IAT ]
mov ecx rw-data
sub al cl
shl al 0x2
mov [ ebx + ebp ] al
movsx edx [ esi + edi + 0x1 ]
push edx
push ecx
call [ strchr@IAT ]
mov dl [ ebx + ebp ]
sub eax rw-data
mov ecx eax
sar ecx 0x4
or dl cl
shl al 0x4
mov [ ebx + ebp ] dl
mov [ ebx + ebp + 0x1 ] al
movsx edx [ esi + edi + 0x2 ]
push edx
push rw-data
call [ strchr@IAT ]
mov dl [ ebx + ebp + 0x1 ]
sub eax rw-data
mov ecx eax
sar ecx 0x2
or dl cl
shl al 0x6
mov [ ebx + ebp + 0x1 ] dl
mov [ ebx + ebp + 0x2 ] al
movsx edx [ esi + edi + 0x3 ]
push edx
push rw-data
call [ strchr@IAT ]
mov cl [ ebx + ebp + 0x2 ]
sub eax rw-data
or cl al
mov eax [ esp + 0x3c ]
mov [ ebx + ebp + 0x2 ] cl
add esp 0x20
add edi 0x4
add ebx 0x3
dec eax
mov [ esp + 0x1c ] eax
jne r-xdata
mov eax [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
mov ecx ebx
mov eax ecx
mov esi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push ebp
and ecx 0x3
[ edi ] [ esi ]
call ??3@YAXPAX@Z
add esp 0x4
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
movsx eax [ edi + esi ]
push eax
push rw-data
call [ strchr@IAT ]
mov ecx rw-data
sub al cl
shl al 0x2
mov [ ebx + ebp ] al
movsx edx [ edi + esi + 0x1 ]
push edx
push ecx
call [ strchr@IAT ]
mov cl [ ebx + ebp ]
sub eax rw-data
sar eax 0x4
or cl al
add esp 0x10
mov [ ebx + ebp ] cl
inc ebx
sub_401410
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
lea ebx [ eax + 0x1 ]
push ebx
call [ malloc@IAT ]
mov ecx ebx
mov esi eax
mov edx ecx
xor eax eax
mov edi esi
push ebx
shr ecx 0x2
[ edi ]
mov ecx edx
push esi
and ecx 0x3
[ edi ]
mov eax [ esp + 0x1c ]
push eax
call sub_4022d0
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ esp + 0x1c ]
mov ebx [ esp + 0x18 ]
push ecx
push ebx
push esi
call sub_4011d0
mov edi eax
push esi
mov [ edi + ebx ] 0x0
call [ free@IAT ]
add esp 0x10
mov eax edi
pop edi
pop esi
pop ebx
retn
pop edi
pop esi
pop ebx
retn
sub_401480
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push esi
push edi
lea ebx [ ebp + 0x1 ]
push ebx
call [ malloc@IAT ]
mov ecx ebx
mov esi eax
mov edx ecx
xor eax eax
mov edi esi
push ebx
shr ecx 0x2
[ edi ]
mov ecx edx
push esi
and ecx 0x3
[ edi ]
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
push eax
push ecx
call sub_401000
add esp 0x14
test eax eax
jne r-xdata
mov ebx [ esp + 0x1c ]
push ebp
push ebx
push esi
call sub_4021f0
mov edi eax
push esi
mov [ edi + ebx ] 0x0
call [ free@IAT ]
add esp 0x10
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
pop edi
pop esi
pop ebp
pop ebx
retn
sub_4015c0
push 0xffffffff
push sub_402868
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x70
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_1134
add esp 0x4
mov ecx esi
call Ordinal_MFC42_2621
push 0x0
lea ecx [ esp + 0x8 ]
call sub_4016c0
lea eax [ esp + 0x4 ]
lea ecx [ esp + 0x4 ]
mov [ esp + 0x7c ] 0x0
mov [ esi + 0x20 ] eax
call Ordinal_MFC42_2514
lea ecx [ esp + 0x68 ]
mov [ esp + 0x7c ] 0x2
call Ordinal_MFC42_800
lea ecx [ esp + 0x64 ]
mov [ esp + 0x7c ] 0x1
call Ordinal_MFC42_800
lea ecx [ esp + 0x4 ]
mov [ esp + 0x7c ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x74 ]
xor eax eax
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x7c
retn
sub_401660
push 0xffffffff
push sub_402893
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x64 ]
mov [ esp + 0x10 ] 0x1
call Ordinal_MFC42_800
lea ecx [ esi + 0x60 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_800
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4016c0
push 0xffffffff
push sub_4028be
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push ebx
push esi
push edi
mov esi ecx
push eax
push 0x66
mov [ esp + 0x14 ] esi
call Ordinal_MFC42_324
lea edi [ esi + 0x60 ]
mov [ esp + 0x18 ] 0x0
mov ecx edi
call Ordinal_MFC42_540
lea ebx [ esi + 0x64 ]
mov [ esp + 0x18 ] 0x1
mov ecx ebx
call Ordinal_MFC42_540
push rw-data
mov ecx edi
mov [ esp + 0x1c ] 0x2
mov [ esi ] r--data
call Ordinal_MFC42_860
push rw-data
mov ecx ebx
call Ordinal_MFC42_860
mov [ esi + 0x68 ] 0xffffffff
call Ordinal_MFC42_1168
push 0x80
push 0xe
push 0x80
call Ordinal_MFC42_1146
push eax
call [ LoadIconA@IAT ]
mov ecx [ esp + 0x10 ]
mov [ esi + 0x6c ] eax
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_4017b0
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x60 ]
push eax
push 0x3e8
push edi
call Ordinal_MFC42_2370
lea ecx [ esi + 0x64 ]
push ecx
push 0x3ec
push edi
call Ordinal_MFC42_2370
add esi 0x68
push esi
push 0x3e9
push edi
call Ordinal_MFC42_2358
pop edi
pop esi
retn 0x4
sub_401810
push esi
push edi
mov esi ecx
call Ordinal_MFC42_4710
mov eax [ esi + 0x6c ]
mov ecx [ esi + 0x20 ]
mov edi [ SendMessageA@IAT ]
push eax
push 0x1
push 0x80
push ecx
call edi
mov edx [ esi + 0x6c ]
mov eax [ esi + 0x20 ]
push edx
push 0x0
push 0x80
push eax
call edi
pop edi
mov eax 0x1
pop esi
retn
sub_401850
sub esp 0x64
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push eax
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov ecx esi
call Ordinal_MFC42_2379
pop esi
add esp 0x64
retn
push ebx
push edi
push esi
lea ecx [ esp + 0x20 ]
call Ordinal_MFC42_470
mov edi [ esp + 0x20 ]
lea eax [ esp + 0x1c ]
mov ecx [ esi + 0x20 ]
push 0x0
neg eax
sbb eax eax
and eax edi
push eax
push 0x27
push ecx
call [ SendMessageA@IAT ]
mov edi [ GetSystemMetrics@IAT ]
push 0xb
call edi
push 0xc
mov ebx eax
call edi
mov edi eax
mov eax [ esi + 0x20 ]
lea edx [ esp + 0xc ]
push edx
push eax
call [ GetClientRect@IAT ]
mov ecx [ esi + 0x6c ]
mov eax [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x14 ]
sub eax ecx
sub eax edi
inc eax
cdq
sub eax edx
mov edx [ esp + 0x10 ]
sar eax 0x1
push eax
mov eax [ esp + 0x1c ]
sub eax edx
sub eax ebx
inc eax
cdq
sub eax edx
mov edx [ esp + 0x28 ]
sar eax 0x1
push eax
push edx
call [ DrawIcon@IAT ]
lea ecx [ esp + 0x1c ]
call Ordinal_MFC42_755
pop edi
pop ebx
pop esi
add esp 0x64
retn
sub_401920
push 0xffffffff
push sub_4028f1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x210
push esi
mov esi ecx
push 0x1
call Ordinal_MFC42_6334
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ esp + 0xc ] ecx
lea ecx [ esp + 0x8 ]
push 0x0
push ecx
push 0x1
mov [ esp + 0x14 ] eax
mov ax [ rw-data ]
push 0x0
push 0x0
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0x28 ] edx
mov [ esp + 0x2c ] ax
call Ordinal_MFC42_355
lea ecx [ esp + 0x18 ]
mov [ esp + 0x21c ] 0x0
call Ordinal_MFC42_2515
cmp eax 0x1
jne r-xdata
push 0x0
mov ecx esi
call Ordinal_MFC42_6334
lea ecx [ esp + 0xc8 ]
mov [ esp + 0x21c ] 0x2
call Ordinal_MFC42_800
lea ecx [ esp + 0x18 ]
mov [ esp + 0x21c ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x214 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x21c
retn
lea edx [ esp + 0x4 ]
lea ecx [ esp + 0x18 ]
push edx
call Ordinal_MFC42_3499
push eax
lea ecx [ esi + 0x60 ]
mov [ esp + 0x220 ] 0x1
call Ordinal_MFC42_858
lea ecx [ esp + 0x4 ]
mov [ esp + 0x21c ] 0x0
call Ordinal_MFC42_800
sub_401a30
push 0xffffffff
push sub_402908
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0xb0 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_800
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401a80
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_402948
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov edi 0x1
mov esi ecx
push edi
call Ordinal_MFC42_6334
mov eax [ esi + 0x68 ]
or ebx 0xffffffff
test eax eax
jne r-xdata
cmp [ esi + 0x68 ] edi
jne r-xdata
push ecx
lea eax [ esi + 0x60 ]
mov ecx esp
mov [ esp + 0x10 ] esp
push eax
call Ordinal_MFC42_535
lea ecx [ esp + 0x10 ]
push ecx
call sub_401c30
add esp 0x8
push eax
lea ecx [ esi + 0x64 ]
mov [ esp + 0x24 ] 0x0
call Ordinal_MFC42_858
lea ecx [ esp + 0xc ]
mov [ esp + 0x20 ] ebx
call Ordinal_MFC42_800
cmp [ esi + 0x68 ] 0x2
jne r-xdata
push ecx
lea edx [ esi + 0x60 ]
mov ecx esp
mov [ esp + 0x10 ] esp
push edx
call Ordinal_MFC42_535
call sub_401e60
add esp 0x4
cmp eax edi
jne r-xdata
push 0x0
mov ecx esi
call Ordinal_MFC42_6334
mov ecx [ esp + 0x18 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x18
retn
mov eax [ esi + 0x64 ]
lea edi [ esi + 0x64 ]
mov ecx [ eax - 0x8 ]
test ecx ecx
jne r-xdata
cmp eax 0x2
jne r-xdata
push rw-data
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_537
push eax
lea ecx [ esi + 0x64 ]
mov [ esp + 0x24 ] edi
call Ordinal_MFC42_858
mov [ esp + 0x20 ] ebx
lea ecx [ esp + 0xc ]
jmp r-xdata
push ecx
mov ecx esp
mov [ esp + 0x10 ] esp
push edi
call Ordinal_MFC42_535
push ecx
lea edx [ esi + 0x60 ]
mov ecx esp
mov [ esp + 0x1c ] esp
push edx
mov [ esp + 0x2c ] 0x3
call Ordinal_MFC42_535
mov [ esp + 0x28 ] ebx
call sub_401fb0
add esp 0x8
lea ecx [ esp + 0x10 ]
push rw-data
call Ordinal_MFC42_537
push eax
mov ecx edi
mov [ esp + 0x24 ] 0x4
call Ordinal_MFC42_858
lea ecx [ esp + 0x10 ]
mov [ esp + 0x20 ] ebx
call Ordinal_MFC42_800
push 0x0
push rw-data
push rw-data
mov ecx esi
call Ordinal_MFC42_4224
jmp r-xdata
mov [ esi + 0x68 ] 0x0
push rw-data
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_537
push eax
lea ecx [ esi + 0x64 ]
mov [ esp + 0x24 ] 0x2
call Ordinal_MFC42_858
mov [ esp + 0x20 ] ebx
lea ecx [ esp + 0xc ]
call Ordinal_MFC42_800
mov [ esi + 0x68 ] 0x0
sub_401c30
push 0xffffffff
push sub_40298d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x3d8
push ebx
push ebp
push esi
push edi
mov [ esp + 0x14 ] 0x0
mov ebx 0x1
push rw-data
lea ecx [ esp + 0x14 ]
mov [ esp + 0x3f4 ] ebx
call Ordinal_MFC42_537
mov eax [ esp + 0x3fc ]
lea ecx [ esp + 0x3fc ]
mov [ esp + 0x3f0 ] 0x2
mov eax [ eax - 0x8 ]
push eax
call Ordinal_MFC42_2915
mov edi eax
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x2e4 ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x2e8 ]
push ecx
call [ fopen@IAT ]
mov ebp eax
add esp 0x8
test ebp ebp
jne r-xdata
mov edi [ fseek@IAT ]
push 0x2
push 0xfffffffa
push ebp
call edi
push ebp
push 0x4
lea eax [ esp + 0x2c ]
push ebx
push eax
call [ fread@IAT ]
mov esi [ esp + 0x34 ]
mov ecx [ esp + 0x35 ]
mov edx [ esp + 0x36 ]
and esi 0xff
mov eax [ esp + 0x37 ]
and ecx 0xff
shl esi 0x8
add esi ecx
and edx 0xff
shl esi 0x8
add esi edx
push 0x2
shl esi 0x8
and eax 0xff
push 0x0
push ebp
add esi eax
call edi
push ebp
call [ ftell@IAT ]
mov ecx 0xfffffff6
push 0x0
mov ebx eax
sub ecx esi
push esi
push ebp
add ebx ecx
call edi
push ebp
push 0x4
lea edx [ esp + 0x60 ]
push 0x1
push edx
call [ fread@IAT ]
mov esi [ fclose@IAT ]
lea ecx [ esp + 0x68 ]
mov eax rw-data
add esp 0x48
mov edx [ ecx ]
cmp edx [ eax ]
jne r-xdata
mov esi [ esp + 0x3f8 ]
lea edx [ esp + 0x10 ]
push edx
mov ecx esi
call Ordinal_MFC42_535
mov [ esp + 0x14 ] ebx
jmp r-xdata
push ebp
call esi
mov esi [ esp + 0x3fc ]
add esp 0x4
lea edx [ esp + 0x10 ]
mov ecx esi
push edx
call Ordinal_MFC42_535
mov [ esp + 0x14 ] 0x1
mov ecx 0x64
xor eax eax
lea edi [ esp + 0x20 ]
cmp ebx 0x190
[ edi ]
stosb [ edi ]
ja r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x3f0 ] 0x1
call Ordinal_MFC42_800
lea ecx [ esp + 0x3fc ]
mov [ esp + 0x3f0 ] 0x0
call Ordinal_MFC42_800
mov ecx [ esp + 0x3e8 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x3e4
retn
push ebp
push ebx
lea eax [ esp + 0x28 ]
push 0x1
push eax
call [ fread@IAT ]
push ebp
call esi
add esp 0x14
xor eax eax
test ebx ebx
jle r-xdata
lea edx [ esp + 0x1b4 ]
push 0x12d
push edx
lea eax [ esp + 0x28 ]
push ebx
push eax
call sub_401410
add esp 0x10
lea ecx [ esp + 0x1b4 ]
mov [ esp + eax + 0x1b4 ] 0x0
push ecx
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_860
mov cl [ esp + eax + 0x20 ]
inc eax
not cl
mov [ esp + eax + 0x1f ] cl
cmp eax ebx
jl r-xdata
sub_401e60
push 0xffffffff
push sub_4029b8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
push ebp
push esi
push edi
mov eax [ esp + 0x3c ]
push 0x0
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0x3c ] 0x0
call Ordinal_MFC42_353
lea ecx [ esp + 0xc ]
mov [ esp + 0x34 ] 0x1
call Ordinal_MFC42_3318
mov ebp eax
push ebp
call [ malloc@IAT ]
add esp 0x4
mov esi eax
lea ecx [ esp + 0xc ]
push ebp
push esi
call Ordinal_MFC42_5442
lea ecx [ esp + 0xc ]
call Ordinal_MFC42_1979
lea eax [ ebp - 0x4 ]
xor edi edi
test eax eax
jl r-xdata
push esi
call [ free@IAT ]
add esp 0x4
lea ecx [ esp + 0xc ]
mov [ esp + 0x34 ] 0x0
call Ordinal_MFC42_665
lea ecx [ esp + 0x3c ]
mov [ esp + 0x34 ] 0xffffffff
call Ordinal_MFC42_800
pop edi
pop esi
mov eax 0x1
pop ebp
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
add esp 0x2c
retn
mov ecx rw-data
lea edx [ edi + esi ]
mov edx [ edi + esi ]
mov ebp [ ecx ]
cmp edx ebp
je r-xdata
mov eax [ esp + 0x3c ]
push 0x1001
push eax
lea ecx [ esp + 0x24 ]
call Ordinal_MFC42_353
push edi
push esi
lea ecx [ esp + 0x24 ]
mov [ esp + 0x3c ] 0x2
call Ordinal_MFC42_6385
lea ecx [ esp + 0x1c ]
call Ordinal_MFC42_2803
lea ecx [ esp + 0x1c ]
call Ordinal_MFC42_1979
push esi
call [ free@IAT ]
add esp 0x4
lea ecx [ esp + 0x1c ]
mov [ esp + 0x34 ] 0x1
call Ordinal_MFC42_665
lea ecx [ esp + 0xc ]
mov [ esp + 0x34 ] 0x0
call Ordinal_MFC42_665
lea ecx [ esp + 0x3c ]
mov [ esp + 0x34 ] 0xffffffff
call Ordinal_MFC42_800
mov ecx [ esp + 0x2c ]
pop edi
pop esi
mov eax 0x2
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x2c
retn
inc edi
cmp edi eax
jle r-xdata
sub_401fb0
push 0xffffffff
push sub_4029f6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2f4
push ebx
push ebp
push esi
push edi
mov eax [ esp + 0x314 ]
mov esi 0x1
push 0x0
push eax
lea ecx [ esp + 0x38 ]
mov [ esp + 0x314 ] esi
call Ordinal_MFC42_353
lea ecx [ esp + 0x30 ]
mov [ esp + 0x30c ] 0x2
call Ordinal_MFC42_3318
mov ebx eax
push ebx
call [ malloc@IAT ]
add esp 0x4
mov ebp eax
lea ecx [ esp + 0x30 ]
push ebx
push ebp
call Ordinal_MFC42_5442
lea ecx [ ebx - 0x4 ]
xor eax eax
test ecx ecx
mov [ esp + 0x18 ] esi
mov [ esp + 0x14 ] eax
jl r-xdata
lea ecx [ esp + 0x30 ]
call Ordinal_MFC42_1979
mov eax [ esp + 0x318 ]
lea ecx [ esp + 0x318 ]
mov eax [ eax - 0x8 ]
push eax
mov [ esp + 0x30 ] eax
call Ordinal_MFC42_2915
mov esi eax
mov eax [ esp + 0x2c ]
mov ecx eax
lea edi [ esp + 0x1d4 ]
mov edx ecx
push 0x191
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x1d8 ]
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x44 ]
push ecx
push eax
push edx
call sub_401480
mov esi eax
add esp 0x10
xor eax eax
test esi esi
jle r-xdata
mov edx rw-data
lea esi [ eax + ebp ]
mov esi [ eax + ebp ]
mov edi [ edx ]
cmp esi edi
je r-xdata
mov edx [ esp + 0x314 ]
push 0x1001
push edx
lea ecx [ esp + 0x24 ]
call Ordinal_MFC42_353
mov eax [ esp + 0x18 ]
mov [ esp + 0x30c ] 0x3
test eax eax
jne r-xdata
mov cl [ esp + eax + 0x40 ]
inc eax
not cl
mov [ esp + eax + 0x3f ] cl
cmp eax esi
jl r-xdata
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] 0x0
inc eax
cmp eax ecx
jle r-xdata
push ebx
push ebp
lea ecx [ esp + 0x24 ]
call Ordinal_MFC42_6385
lea ecx [ esp + 0x1c ]
call Ordinal_MFC42_2803
mov ecx ebx
mov eax ebx
sar ecx 0x10
mov edx ebx
mov [ esp + 0x11 ] cl
sar eax 0x18
sar edx 0x8
push 0x4
push rw-data
lea ecx [ esp + 0x24 ]
mov [ esp + 0x18 ] al
mov [ esp + 0x1a ] dl
mov [ esp + 0x1b ] bl
call Ordinal_MFC42_6385
lea eax [ esp + 0x40 ]
push esi
push eax
lea ecx [ esp + 0x24 ]
call Ordinal_MFC42_6385
lea ecx [ esp + 0x10 ]
push 0x4
push ecx
lea ecx [ esp + 0x24 ]
call Ordinal_MFC42_6385
push 0x2
push rw-data
lea ecx [ esp + 0x24 ]
call Ordinal_MFC42_6385
lea ecx [ esp + 0x1c ]
call Ordinal_MFC42_2803
lea ecx [ esp + 0x1c ]
call Ordinal_MFC42_1979
push ebp
call [ free@IAT ]
add esp 0x4
lea ecx [ esp + 0x1c ]
mov [ esp + 0x30c ] 0x2
call Ordinal_MFC42_665
lea ecx [ esp + 0x30 ]
mov [ esp + 0x30c ] 0x1
call Ordinal_MFC42_665
lea ecx [ esp + 0x314 ]
mov [ esp + 0x30c ] 0x0
call Ordinal_MFC42_800
lea ecx [ esp + 0x318 ]
mov [ esp + 0x30c ] 0xffffffff
call Ordinal_MFC42_800
mov ecx [ esp + 0x304 ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x300
retn
mov ebx [ esp + 0x14 ]
mov [ esp + 0x14 ] eax
jmp r-xdata
sub_4021f0
mov edx [ esp + 0x4 ]
sub esp 0x8
or ecx 0xffffffff
xor eax eax
push edi
mov edi edx
[ edi ]
mov eax [ esp + 0x18 ]
not ecx
dec ecx
dec eax
cmp eax ecx
jge r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov [ esp + 0x4 ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi edx
mov [ esp + 0x18 ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
xor edi edi
test ecx ecx
mov [ esp + 0x8 ] ecx
jle r-xdata
xor eax eax
pop edi
add esp 0x8
retn
mov edx [ esp + 0x14 ]
mov eax edi
mov [ edi + edx ] 0x0
pop edi
add esp 0x8
retn
mov ecx [ esp + 0x14 ]
mov eax edx
push ebx
sub eax ecx
push ebp
mov ebp [ strchr@IAT ]
push esi
mov [ esp + 0x1c ] eax
jmp r-xdata
mov ecx [ esp + 0x20 ]
lea ebx [ edi + ecx ]
movsx edx [ eax + ebx ]
push edx
push rw-data
call ebp
mov esi eax
mov eax edi
cdq
idiv [ esp + 0x2c ]
sub esi rw-data
movsx eax [ edx + rw-data ]
push eax
push rw-data
call ebp
sub esi rw-data
add esp 0x10
add eax esi
cdq
idiv [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
inc edi
cmp edi eax
mov cl [ edx + rw-data ]
mov [ ebx ] cl
jl r-xdata
mov eax [ esp + 0x1c ]
pop esi
pop ebp
pop ebx
sub_4022d0
push ecx
mov edx [ esp + 0x8 ]
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
mov eax [ esp + 0x14 ]
not ecx
dec ecx
dec eax
cmp eax ecx
jge r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push ebp
[ edi ]
not ecx
dec ecx
mov edi rw-data
mov ebp ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi edx
mov [ esp + 0x18 ] ecx
or ecx 0xffffffff
[ edi ]
not ecx
push esi
dec ecx
xor esi esi
mov [ esp + 0xc ] ecx
test ecx ecx
jle r-xdata
xor eax eax
pop edi
pop ecx
retn
mov eax [ esp + 0x18 ]
mov [ esi + eax ] 0x0
mov eax esi
pop esi
pop ebp
pop edi
pop ecx
retn
mov ecx [ esp + 0x18 ]
mov eax edx
sub eax ecx
push ebx
mov [ esp + 0x18 ] eax
jmp r-xdata
mov ecx [ esp + 0x1c ]
lea ebx [ esi + ecx ]
movsx edx [ eax + ebx ]
push edx
push rw-data
call [ strchr@IAT ]
mov edi eax
mov eax esi
cdq
idiv [ esp + 0x28 ]
sub edi rw-data
movsx eax [ edx + rw-data ]
push eax
push rw-data
call [ strchr@IAT ]
lea ecx [ edi + ebp + rw-data ]
add esp 0x10
sub ecx eax
mov eax ecx
cdq
idiv ebp
mov eax [ esp + 0x10 ]
inc esi
cmp esi eax
mov dl [ edx + rw-data ]
mov [ ebx ] dl
jl r-xdata
mov eax [ esp + 0x18 ]
pop ebx
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_402585
cmp [ rw-data ] ebx
jne r-xdata
call sub_402570
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_402582
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_4027e4
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_4027fc
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne r-xdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_4014f0
mov eax [ Ordinal_MFC42_4274@IAT ]
retn
sub_401500
mov eax r--data
retn
sub_401510
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_561
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_401530
retn 0x4
sub_401540
retn
sub_401550
push esi
mov esi ecx
call sub_401570
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_401570
jmp Ordinal_MFC42_815
sub_401580
call sub_401590
jmp sub_4015a0
sub_401590
mov ecx rw-data
jmp sub_401510
sub_4015a0
push sub_4015b0
call sub_4023e8
pop ecx
retn
sub_4015b0
mov ecx rw-data
jmp sub_401570
sub_401770
mov eax [ ecx + 0x20 ]
push 0x0
push eax
call [ EnableWindow@IAT ]
retn
sub_401780
mov eax [ ecx + 0x20 ]
push 0x1
push eax
call [ EnableWindow@IAT ]
retn
sub_401790
push esi
mov esi ecx
call sub_401660
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_4017f0
mov eax [ Ordinal_MFC42_4234@IAT ]
retn
sub_401800
mov eax r--data
retn
sub_401910
mov eax [ ecx + 0x6c ]
retn
sub_401a20
jmp Ordinal_MFC42_641
sub_401c20
jmp Ordinal_MFC42_4376
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
sub_4023bc
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_4023e8
push [ esp + 0x4 ]
call sub_4023bc
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_402570
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_402582
xor eax eax
retn
sub_402585
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
Ordinal_MFC42_4673
jmp [ Ordinal_MFC42_4673@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_641
jmp [ Ordinal_MFC42_641@IAT ]
Ordinal_MFC42_800
jmp [ Ordinal_MFC42_800@IAT ]
Ordinal_MFC42_2514
jmp [ Ordinal_MFC42_2514@IAT ]
Ordinal_MFC42_2621
jmp [ Ordinal_MFC42_2621@IAT ]
Ordinal_MFC42_1134
jmp [ Ordinal_MFC42_1134@IAT ]
Ordinal_MFC42_5265
jmp [ Ordinal_MFC42_5265@IAT ]
Ordinal_MFC42_4998
jmp [ Ordinal_MFC42_4998@IAT ]
Ordinal_MFC42_6052
jmp [ Ordinal_MFC42_6052@IAT ]
Ordinal_MFC42_4078
jmp [ Ordinal_MFC42_4078@IAT ]
Ordinal_MFC42_1775
jmp [ Ordinal_MFC42_1775@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5241
jmp [ Ordinal_MFC42_5241@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5280
jmp [ Ordinal_MFC42_5280@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4441
jmp [ Ordinal_MFC42_4441@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_5261
jmp [ Ordinal_MFC42_5261@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4425
jmp [ Ordinal_MFC42_4425@IAT ]
Ordinal_MFC42_3597
jmp [ Ordinal_MFC42_3597@IAT ]
Ordinal_MFC42_1146
jmp [ Ordinal_MFC42_1146@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
Ordinal_MFC42_860
jmp [ Ordinal_MFC42_860@IAT ]
Ordinal_MFC42_540
jmp [ Ordinal_MFC42_540@IAT ]
Ordinal_MFC42_324
jmp [ Ordinal_MFC42_324@IAT ]
Ordinal_MFC42_2358
jmp [ Ordinal_MFC42_2358@IAT ]
Ordinal_MFC42_2370
jmp [ Ordinal_MFC42_2370@IAT ]
Ordinal_MFC42_4710
jmp [ Ordinal_MFC42_4710@IAT ]
Ordinal_MFC42_2379
jmp [ Ordinal_MFC42_2379@IAT ]
Ordinal_MFC42_755
jmp [ Ordinal_MFC42_755@IAT ]
Ordinal_MFC42_470
jmp [ Ordinal_MFC42_470@IAT ]
Ordinal_MFC42_858
jmp [ Ordinal_MFC42_858@IAT ]
Ordinal_MFC42_3499
jmp [ Ordinal_MFC42_3499@IAT ]
Ordinal_MFC42_2515
jmp [ Ordinal_MFC42_2515@IAT ]
Ordinal_MFC42_355
jmp [ Ordinal_MFC42_355@IAT ]
Ordinal_MFC42_6334
jmp [ Ordinal_MFC42_6334@IAT ]
Ordinal_MFC42_4224
jmp [ Ordinal_MFC42_4224@IAT ]
Ordinal_MFC42_537
jmp [ Ordinal_MFC42_537@IAT ]
Ordinal_MFC42_535
jmp [ Ordinal_MFC42_535@IAT ]
Ordinal_MFC42_4376
jmp [ Ordinal_MFC42_4376@IAT ]
Ordinal_MFC42_2915
jmp [ Ordinal_MFC42_2915@IAT ]
Ordinal_MFC42_2803
jmp [ Ordinal_MFC42_2803@IAT ]
Ordinal_MFC42_6385
jmp [ Ordinal_MFC42_6385@IAT ]
Ordinal_MFC42_665
jmp [ Ordinal_MFC42_665@IAT ]
Ordinal_MFC42_1979
jmp [ Ordinal_MFC42_1979@IAT ]
Ordinal_MFC42_5442
jmp [ Ordinal_MFC42_5442@IAT ]
Ordinal_MFC42_3318
jmp [ Ordinal_MFC42_3318@IAT ]
Ordinal_MFC42_353
jmp [ Ordinal_MFC42_353@IAT ]
sub_4027e4
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_40282a
jmp sub_40282a
sub_40282a
push 0x600
push 0x0
call sub_4027fc
mov [ rw-data ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
sub_402850
lea ecx [ ebp - 0x7c ]
jmp sub_401660
sub_402858
lea ecx [ ebp - 0x7c ]
jmp Ordinal_MFC42_641
sub_402860
lea ecx [ ebp - 0x1c ]
jmp Ordinal_MFC42_800
sub_402868
mov eax r--data
jmp __CxxFrameHandler
sub_402880
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_641
sub_402888
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp Ordinal_MFC42_800
sub_402893
mov eax r--data
jmp __CxxFrameHandler
sub_4028a0
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_641
sub_4028a8
mov ecx [ ebp - 0x10 ]
add ecx 0x60
jmp Ordinal_MFC42_800
sub_4028b3
mov ecx [ ebp - 0x10 ]
add ecx 0x64
jmp Ordinal_MFC42_800
sub_4028be
mov eax r--data
jmp __CxxFrameHandler
sub_4028d0
lea ecx [ ebp - 0x208 ]
jmp sub_401a30
sub_4028db
lea ecx [ ebp - 0x21c ]
jmp Ordinal_MFC42_800
sub_4028e6
lea ecx [ ebp - 0x208 ]
jmp sub_401a20
sub_4028f1
mov eax r--data
jmp __CxxFrameHandler
sub_402900
mov ecx [ ebp - 0x10 ]
jmp sub_401a20
sub_402908
mov eax r--data
jmp __CxxFrameHandler
sub_402920
lea ecx [ ebp - 0x18 ]
jmp Ordinal_MFC42_800
sub_402928
lea ecx [ ebp - 0x18 ]
jmp Ordinal_MFC42_800
sub_402930
lea ecx [ ebp - 0x18 ]
jmp Ordinal_MFC42_800
sub_402938
mov ecx [ ebp - 0x18 ]
jmp Ordinal_MFC42_800
sub_402940
lea ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_800
sub_402948
mov eax r--data
jmp __CxxFrameHandler
sub_402960
lea ecx [ ebp + 0x8 ]
jmp Ordinal_MFC42_800
sub_402968
lea ecx [ ebp - 0x3e4 ]
jmp Ordinal_MFC42_800
sub_402973
mov eax [ ebp - 0x3e0 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x4 ]
jmp Ordinal_MFC42_800
sub_40298d
mov eax r--data
jmp __CxxFrameHandler
sub_4029a0
lea ecx [ ebp + 0x4 ]
jmp Ordinal_MFC42_800
sub_4029a8
lea ecx [ ebp - 0x2c ]
jmp Ordinal_MFC42_665
sub_4029b0
lea ecx [ ebp - 0x1c ]
jmp Ordinal_MFC42_665
sub_4029b8
mov eax r--data
jmp __CxxFrameHandler
sub_4029d0
lea ecx [ ebp + 0x8 ]
jmp Ordinal_MFC42_800
sub_4029d8
lea ecx [ ebp + 0x4 ]
jmp Ordinal_MFC42_800
sub_4029e0
lea ecx [ ebp - 0x2e0 ]
jmp Ordinal_MFC42_665
sub_4029eb
lea ecx [ ebp - 0x2f4 ]
jmp Ordinal_MFC42_665
sub_4029f6
mov eax r--data
jmp __CxxFrameHandler
