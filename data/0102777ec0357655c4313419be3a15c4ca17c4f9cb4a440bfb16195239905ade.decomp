sub_10001000
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_10030c20
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov esi [ rw-data ]
mov [ ebp - 0x4 ] 0x0
push 0x8007
call [ SetErrorMode@IAT ]
mov ecx esi
call sub_100011b0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
DllMain
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x3
ja r-xdata
call sub_10001000
jmp [ eax * 4 + jump_table_100010b4 ]
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax 0x1
pop ebp
retn 0xc
mov eax 0x1
pop ebp
retn 0xc
__Reserved06
push esi
mov esi [ rw-data ]
push 0x8
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor eax eax
pop esi
retn
mov [ eax + 0x4 ] esi
mov [ eax ] r--data
pop esi
retn
sub_100011b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003da13
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ ebp - 0xb4 ] ebx
call sub_1002a3b0
mov edi eax
mov [ ebp - 0xbc ] eax
call sub_100014c0
push 0x4
call sub_1002e957
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
mov [ ebp - 0xb0 ] edi
mov [ eax ] r--data
mov [ ebp - 0xb0 ] eax
jmp r-xdata
xor esi esi
mov [ eax ] r--data
mov esi eax
jmp r-xdata
push 0x4
call sub_1002e957
add esp 0x4
cmp eax edi
je r-xdata
mov [ ebp - 0xb8 ] edi
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] edi
mov [ ebp - 0xb8 ] eax
jmp r-xdata
push 0x14
call sub_1002e957
add esp 0x4
cmp eax edi
je r-xdata
xor ebx ebx
mov esi eax
call sub_1002c340
mov ebx eax
jmp r-xdata
push 0x14
call sub_1002e957
add esp 0x4
cmp eax edi
je r-xdata
push 0x4
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp - 0xb0 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov edi eax
push 0x8
call sub_1002e957
add esp 0x4
cmp eax edi
je r-xdata
xor esi esi
mov [ eax ] r--data
mov esi eax
jmp r-xdata
xor eax eax
mov edx [ ebp - 0xb4 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] edx
jmp r-xdata
push 0x8
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
lea esi [ ebp - 0xac ]
call sub_10013220
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10013df0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ ebp - 0x90 ] esi
mov ecx [ ebp - 0xbc ]
mov edx [ ebp - 0xb0 ]
push ecx
mov ecx [ ebp - 0xb8 ]
push ebx
mov ebx [ ebp - 0xb4 ]
push edi
push esi
push edx
lea esi [ ebp - 0xac ]
call sub_100139b0
xor esi esi
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] esi
call sub_100132c0
mov [ ebp - 0xac ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x90 ]
cmp ecx esi
je r-xdata
sub_10001380
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1002e3fa
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_100013b0
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov ecx [ rw-data ]
push ebx
push esi
sub eax ecx
push edi
sar eax 0x2
xor edi edi
cmp eax edi
jbe r-xdata
push 0x4
call sub_1002e957
mov esi eax
add esp 0x4
cmp esi edi
je r-xdata
xor esi esi
cmp eax edi
jbe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x8 ]
mov [ esi ] r--data
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ebx
mov ecx esi
call edx
push 0x10
mov [ ebp - 0x4 ] eax
call sub_1002e957
add esp 0x4
cmp eax edi
je r-xdata
mov ebx [ CloseHandle@IAT ]
lea esp [ esp ]
xor ebx ebx
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov ebx eax
jmp r-xdata
mov eax [ ecx + esi * 4 ]
push eax
call ebx
mov edx [ rw-data ]
mov ecx [ rw-data ]
sub edx ecx
inc esi
sar edx 0x2
cmp esi edx
jb r-xdata
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
push edi
mov ecx esi
call edx
test eax eax
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
test eax eax
je r-xdata
test ebx ebx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
inc edi
call edx
cmp edi eax
jb r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ eax ]
mov edx [ edx + 0x8 ]
push ecx
mov ecx [ ebp - 0x4 ]
push ebx
push ecx
mov ecx eax
call edx
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
call edx
sub_100014c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b058
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ edi ]
mov edx [ eax + 0xc ]
xor ebx ebx
mov ecx edi
mov [ ebp - 0x10 ] ebx
call edx
mov esi eax
mov eax [ edi ]
mov edx [ eax + 0x10 ]
mov ecx edi
call edx
push eax
push esi
call sub_1002e28b
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0x10 ] 0x1
push 0x4
call sub_1002e957
mov esi eax
add esp 0x4
cmp esi ebx
je r-xdata
mov eax [ ebp - 0x28 ]
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x48 ]
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx edi
call edx
mov esi eax
cmp esi rw-data
je r-xdata
mov [ esi ] r--data
mov eax [ esi ]
mov edx [ eax + 0xc ]
push edi
mov ecx esi
call edx
push 0x10
mov [ ebp - 0x18 ] eax
call sub_1002e957
add esp 0x4
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call sub_1002e8fb
add esp 0x4
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov eax [ esi ]
mov [ rw-data ] eax
mov ecx [ esi + 0x4 ]
mov [ rw-data ] ecx
mov edx [ esi + 0x8 ]
mov [ rw-data ] edx
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
push eax
call sub_1002e8fb
add esp 0x4
mov [ ebp - 0x14 ] ebx
mov [ eax ] r--data
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax [ esi ]
mov edx [ eax + 0x8 ]
push ebx
mov ecx esi
call edx
test eax eax
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
xor ebx ebx
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
inc ebx
call edx
cmp ebx eax
jb r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ eax ]
mov edx [ edx + 0x4 ]
push 0x1
push edi
push ecx
mov ecx [ ebp - 0x18 ]
push ecx
mov ecx eax
call edx
test eax eax
je r-xdata
mov [ ebp - 0x10 ] 0x1
sub_10001660
push esi
mov esi eax
mov edx [ esi ]
mov eax [ esi + 0x4 ]
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_1003621d
pop esi
retn
push edi
mov edx ecx
shr edx 0x1
mov edi 0x3fffffff
sub edi edx
cmp edi ecx
pop edi
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
call sub_100016b0
mov ecx eax
cmp ecx eax
jae r-xdata
sub_100016b0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x3fffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x2
cmp eax ecx
jae r-xdata
push r--data
call sub_1003621d
pop ebp
retn 0x4
push ebx
push edi
call sub_10001730
mov ecx [ esi + 0x4 ]
mov ebx eax
mov eax [ esi ]
sub ecx eax
sar ecx 0x2
add ecx ecx
add ecx ecx
push ecx
push eax
push ebx
call sub_1002e460
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
add esp 0xc
sar edi 0x2
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ebx + edi * 4 ]
lea eax [ ebx + edx * 4 ]
pop edi
mov [ esi ] ebx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ecx
pop ebx
push eax
call sub_1002e8fb
add esp 0x4
sub_10001730
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x3fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_1002e39e
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_10030edf
lea eax [ ecx * 4 ]
push eax
call sub_1002e957
add esp 0x4
test eax eax
jne r-xdata
sub_100017b0
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi [ ebp + 0x10 ]
push esi
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx + 0x4 ]
lea edx [ ebp - 0x4 ]
push edx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ ecx ]
mov eax [ eax + 0xc ]
push edx
call eax
test eax eax
jne r-xdata
mov ecx [ esi ]
mov edx [ ebp - 0x4 ]
push ebx
push edi
xor eax eax
mov [ ebp + 0x10 ] ecx
mov [ ebp + 0x8 ] edx
call sub_1002bff0
mov edi eax
mov eax 0x1
call sub_1002bff0
push edi
mov ebx eax
call [ GetModuleHandleA@IAT ]
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn 0xc
push ebx
push eax
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
push 0x0
call eax
mov ebx eax
xor ebx ebx
jmp r-xdata
mov eax [ esi ]
add eax 0x4
push eax
call sub_1002e957
mov edi [ ebp + 0xc ]
mov [ edi ] eax
xor eax eax
add esp 0x4
cmp [ esi ] eax
jbe r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_1002e8fb
mov ecx [ edi ]
add esp 0x4
pop edi
mov [ ecx ] ebx
add [ esi ] 0x4
pop ebx
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0xc
lea ebx [ ebx ]
mov edx [ ebp - 0x8 ]
mov ecx eax
and ecx 0x3
mov cl [ ecx + edx + 0x8 ]
mov edx [ ebp - 0x4 ]
xor cl [ eax + edx ]
mov edx [ edi ]
mov [ edx + eax + 0x4 ] cl
inc eax
cmp eax [ esi ]
jb r-xdata
sub_10001890
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a678
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10001900
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx ecx
mov [ ebp - 0x4 ] ebx
cmp esi 0x4
jae r-xdata
push edi
add esi 0xfffffffc
push esi
call sub_1002e957
mov edi eax
add esp 0x4
xor eax eax
test esi esi
je r-xdata
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor eax eax
call sub_1002bff0
mov ebx eax
mov eax 0x1
call sub_1002bff0
push ebx
mov [ ebp + 0xc ] eax
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
mov ecx eax
and ecx 0x3
mov dl [ ecx + ebx + 0x8 ]
mov ecx [ ebp + 0x8 ]
xor dl [ ecx + eax + 0x4 ]
inc eax
mov [ eax + edi - 0x1 ] dl
cmp eax esi
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp eax [ ecx ]
je r-xdata
mov edx [ ebp + 0xc ]
push edx
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push esi
push edi
call edx
push edi
mov esi eax
call sub_1002e8fb
add esp 0x4
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
call sub_1002e8fb
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
push edi
push 0x0
call eax
sub_100019d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c82e
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x50
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
push r--data
lea edi [ esi + 0x4 ]
mov [ ebp - 0x4 ] 0x1
push edi
mov [ esi ] r--data
call sub_100033c0
mov [ ebp - 0x4 ] 0x2
call sub_10002cb0
mov [ edi + 0x20 ] 0x1
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10001bf0
test eax eax
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
sub_10001ab0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c82e
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x50
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
lea edi [ esi + 0x4 ]
mov [ ebp - 0x4 ] 0x1
push edi
mov [ esi ] r--data
call sub_100033c0
mov [ ebp - 0x4 ] 0x2
call sub_10002cb0
mov [ edi + 0x20 ] 0x1
mov eax esi
sub_10001b50
push ebp
mov ebp esp
push 0xffffffff
push sub_1003cf1b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0xc
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push 0x4
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
jmp r-xdata
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
mov [ esi ] r--data
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10001bf0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov [ ebp - 0x24 ] eax
push edi
mov eax 0x2
mov ebx ecx
mov esi edx
call sub_1002bff0
mov edi eax
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp esi eax
jb r-xdata
sub esp 0x1c
mov ecx esp
xor edi edi
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] edi
mov eax ebx
mov [ ebp - 0x28 ] esp
mov [ ecx ] 0x0
call sub_10002640
mov ecx [ ebp - 0x24 ]
add ecx 0x4
push ecx
mov edx edi
lea ecx [ ebp - 0x20 ]
call sub_10002d60
xor edx edx
cmp [ ebp - 0x10 ] edx
sete dl
cmp [ ebp - 0xc ] 0x10
mov esi edx
jb r-xdata
mov eax edi
lea edx [ eax + 0x1 ]
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x20 ]
push eax
call sub_1002e8fb
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push edi
push ebx
call sub_1002eb4c
add esp 0xc
test eax eax
jne r-xdata
mov eax edi
lea edx [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
add ebx eax
mov eax edi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
sub esi eax
sub_10001ce0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c068
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
push 0x0
push 0x0
lea eax [ ebp - 0x2c ]
push eax
add ecx 0x4
call sub_10003780
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov [ edi ] eax
inc eax
push eax
call sub_1002eb41
mov edx [ ebp - 0x2c ]
mov [ esi ] eax
mov esi 0x10
add esp 0x4
cmp [ ebp - 0x18 ] esi
jae r-xdata
mov ecx eax
lea ebx [ ebx ]
lea edx [ ebp - 0x2c ]
mov al [ edx ]
mov [ ecx ] al
inc edx
inc ecx
test al al
jne r-xdata
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
sub_10001d90
push ebp
mov ebp esp
sub esp 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_10002030
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x8
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
mov [ eax + 0x4 ] esi
mov [ eax ] r--data
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10001de0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c7e1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x30 ] eax
lea eax [ ebx + 0x3 ]
mov esi ecx
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x3c ] ebx
call sub_1002bff0
push 0x24
mov [ ebp - 0x38 ] eax
mov [ edi + 0x4 ] ebx
call sub_1002e957
add esp 0x4
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x34 ]
push ecx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x34 ] ebx
call sub_1002e39e
push r--data
lea edx [ ebp - 0x4c ]
push edx
mov [ ebp - 0x4c ] r--data
call sub_10030edf
int3
mov [ edi ] eax
mov [ eax ] eax
mov eax [ edi ]
mov [ eax + 0x4 ] eax
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x1c ] 0x10
lea eax [ esi + 0x8 ]
mov [ ebp - 0x3c ] 0x1
jb r-xdata
mov ecx eax
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] 0x0
lea esi [ ecx + 0x1 ]
mov edi edi
mov eax [ eax ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
mov esi ecx
lea ecx [ ebp - 0x2c ]
call sub_10002640
mov [ ebp - 0x4 ] 0x1
mov esi [ edi ]
mov edx [ esi + 0x4 ]
lea ecx [ ebp - 0x2c ]
push ecx
push edx
push esi
call sub_10002bc0
mov ecx [ edi + 0x4 ]
mov edx 0x9249248
sub edx ecx
cmp edx 0x1
jae r-xdata
inc ecx
mov [ edi + 0x4 ] ecx
mov [ esi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_1003621d
mov ebx [ ebp - 0x30 ]
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1002e8fb
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x38 ]
push ecx
push ebx
call sub_1002ec10
xor ecx ecx
add esp 0x8
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x2c ] cl
cmp eax ecx
je r-xdata
mov eax ebx
lea esi [ eax + 0x1 ]
lea esp [ esp ]
mov esi eax
sub esi ebx
mov eax ebx
lea ecx [ ebp - 0x2c ]
call sub_10002640
mov [ ebp - 0x4 ] 0x2
mov esi [ edi ]
mov eax [ esi + 0x4 ]
lea edx [ ebp - 0x2c ]
push edx
push eax
push esi
call sub_10002bc0
mov ecx [ edi + 0x4 ]
mov edx 0x9249248
sub edx ecx
cmp edx 0x1
jb r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
mov esi eax
mov eax ebx
lea ecx [ ebp - 0x2c ]
call sub_10002640
mov [ ebp - 0x4 ] 0x3
mov esi [ edi ]
mov edx [ esi + 0x4 ]
lea ecx [ ebp - 0x2c ]
push ecx
push edx
push esi
call sub_100028c0
mov ecx [ edi + 0x4 ]
mov edx 0x9249248
sub edx ecx
cmp edx 0x1
jb r-xdata
inc ecx
mov [ edi + 0x4 ] ecx
mov [ esi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
inc ecx
mov [ edi + 0x4 ] ecx
mov [ esi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ebx [ ebp - 0x30 ]
inc ebx
jmp r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1002e8fb
add esp 0x4
mov eax ebx
lea edx [ eax + 0x1 ]
mov eax [ ebp - 0x2c ]
push eax
call sub_1002e8fb
add esp 0x4
cmp [ ebx ] 0x0
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
add ebx eax
sub_10002030
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
push eax
lea edi [ ebp - 0xc ]
mov ebx ecx
call sub_10001de0
mov eax [ ebp - 0xc ]
mov edi [ eax ]
add ebx 0x4
mov esi 0xf
cmp edi eax
je r-xdata
cmp [ ebp - 0x8 ] 0x1
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov [ ecx ] edx
mov eax [ edi ]
mov ecx [ edi + 0x4 ]
mov [ eax + 0x4 ] ecx
cmp [ edi + 0x1c ] 0x10
jb r-xdata
mov eax [ eax ]
add eax 0x8
cmp [ eax + 0x14 ] 0x10
jb r-xdata
lea esp [ esp ]
mov [ edi + 0x1c ] esi
mov [ edi + 0x18 ] 0x0
push edi
mov [ edi + 0x8 ] 0x0
call sub_1002e8fb
mov eax [ ebp - 0xc ]
add esp 0x4
dec [ ebp - 0x8 ]
mov edx [ edi + 0x8 ]
push edx
call sub_1002e8fb
add esp 0x4
push eax
call sub_100022d0
mov esi [ ebp + 0x8 ]
mov [ esi ] ebx
lea ebx [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
call sub_10002870
mov eax [ ebp - 0xc ]
push eax
call sub_1002e8fb
add esp 0x4
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax ]
push eax
call sub_100022d0
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ eax ]
mov esi [ ebp + 0x8 ]
xor eax eax
lea ebx [ ebp - 0xc ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
call sub_10002870
mov edx [ ebp - 0xc ]
push edx
call sub_1002e8fb
add esp 0x4
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xc ]
mov edi [ eax ]
cmp edi eax
je r-xdata
cmp [ ebp - 0x8 ] 0x1
ja r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
mov [ eax ] ecx
mov edx [ edi ]
mov eax [ edi + 0x4 ]
mov [ edx + 0x4 ] eax
cmp [ edi + 0x1c ] 0x10
jb r-xdata
mov eax [ eax ]
add eax 0x8
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov [ edi + 0x1c ] esi
mov [ edi + 0x18 ] 0x0
push edi
mov [ edi + 0x8 ] 0x0
call sub_1002e8fb
mov eax [ ebp - 0xc ]
add esp 0x4
dec [ ebp - 0x8 ]
mov ecx [ edi + 0x8 ]
push ecx
call sub_1002e8fb
add esp 0x4
sub_10002170
push ebp
mov ebp esp
sub esp 0x8
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_10002030
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
add eax 0x4
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov [ ebp + 0x8 ] eax
mov edx [ eax ]
mov [ ebp + 0x8 ] edx
jmp r-xdata
pop edi
pop ebx
mov eax [ ecx + 0x40 ]
push esi
mov esi [ eax ]
push ebx
mov ebx [ ecx + 0x44 ]
push edi
xor edi edi
test ebx ebx
je r-xdata
add eax 0xc
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov ecx edi
mov ecx eax
mov eax [ ebp + 0x8 ]
lea ecx [ ecx ]
mov eax [ eax ]
dec ecx
mov eax [ eax ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
test edi edi
je r-xdata
inc edi
cmp edi ebx
jb r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov edi [ ebp - 0x8 ]
cmp esi [ edi + 0x40 ]
je r-xdata
mov eax edi
lea ecx [ ecx ]
mov eax esi
test edi edi
je r-xdata
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
pop esi
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov [ ecx ] edx
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
mov [ eax + 0x4 ] ecx
lea ecx [ esi + 0x8 ]
call sub_100034d0
push esi
call sub_1002e8fb
add esp 0x4
dec [ edi + 0x44 ]
dec eax
mov esi [ esi ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_10002260
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b028
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] 0x0
call sub_100034d0
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_100022d0
push ebp
mov ebp esp
push esi
xor esi esi
push edi
cmp [ ebx + 0x44 ] esi
jbe r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x4
lea esp [ esp ]
lea edi [ eax + 0x8 ]
cmp [ edi + 0x18 ] 0x10
lea eax [ edi + 0x4 ]
jb r-xdata
mov ecx esi
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
push eax
call sub_1002eafa
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax ]
dec ecx
mov eax [ eax ]
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
inc esi
cmp esi [ ebx + 0x44 ]
jb r-xdata
mov eax [ ebx + 0x40 ]
mov eax [ eax ]
test esi esi
je r-xdata
sub_10002330
push ebp
mov ebp esp
push esi
push 0x8
mov esi ecx
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov ecx [ esi + 0x44 ]
mov ecx [ ecx ]
test edx edx
je r-xdata
add ecx 0x8
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
pop esi
pop ebp
retn 0x4
dec edx
mov ecx [ ecx ]
jne r-xdata
sub_10002370
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov eax [ edi + 0x44 ]
mov esi [ eax ]
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
cmp esi [ edi + 0x44 ]
je r-xdata
dec eax
mov esi [ esi ]
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov [ ecx ] edx
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
mov [ eax + 0x4 ] ecx
lea ecx [ esi + 0x8 ]
call sub_100034d0
push esi
call sub_1002e8fb
add esp 0x4
dec [ edi + 0x48 ]
sub_100023c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d2b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov eax [ ebx ]
mov edi [ ebp + 0x8 ]
mov edx [ eax + 0x10 ]
push edi
call edx
mov esi eax
test esi esi
je r-xdata
push edi
lea edi [ ebp - 0x18 ]
mov ecx ebx
call sub_10001de0
xor esi esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
cmp edi eax
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov ecx esi
call edx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x1
lea edi [ ebx + 0x4 ]
jbe r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
mov [ eax ] ecx
mov edx [ edi ]
mov eax [ edi + 0x4 ]
mov [ edx + 0x4 ] eax
cmp [ edi + 0x1c ] 0x10
jb r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi 0x10
lea ecx [ ecx ]
mov [ edi + 0x1c ] 0xf
mov [ edi + 0x18 ] esi
push edi
mov [ edi + 0x8 ] 0x0
call sub_1002e8fb
mov eax [ ebp - 0x18 ]
add esp 0x4
dec [ ebp - 0x14 ]
mov ecx [ edi + 0x8 ]
push ecx
call sub_1002e8fb
add esp 0x4
mov ebx eax
call sub_100035a0
push 0x8
mov esi eax
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
mov eax [ eax ]
push eax
mov ebx edi
call sub_100022d0
test eax eax
jne r-xdata
mov eax [ eax ]
xor esi esi
mov [ eax + 0x4 ] esi
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov edi eax
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
cmp ebx eax
je r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ edx ]
add eax 0x8
cmp [ eax + 0x14 ] esi
jb r-xdata
lea ebx [ ebp - 0x18 ]
call sub_10002870
mov edx [ ebp - 0x18 ]
push edx
call sub_1002e8fb
add esp 0x4
cmp [ ebp - 0x14 ] 0x1
ja r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ ebx ]
mov [ eax ] ecx
mov edx [ ebx ]
mov eax [ ebx + 0x4 ]
mov [ edx + 0x4 ] eax
cmp [ ebx + 0x1c ] esi
jb r-xdata
mov ebx eax
call sub_100035a0
mov eax [ eax ]
mov eax [ eax ]
add eax 0x8
mov esi 0x10
cmp [ eax + 0x14 ] esi
jb r-xdata
jmp r-xdata
mov [ ebx + 0x1c ] 0xf
mov [ ebx + 0x18 ] 0x0
push ebx
mov [ ebx + 0x8 ] 0x0
call sub_1002e8fb
mov eax [ ebp - 0x18 ]
add esp 0x4
dec [ ebp - 0x14 ]
mov ecx [ ebx + 0x8 ]
push ecx
call sub_1002e8fb
add esp 0x4
mov eax [ eax ]
add eax 0x8
cmp [ eax + 0x14 ] esi
jb r-xdata
sub_100025d0
cmp esi edi
je r-xdata
mov eax esi
retn
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edi + 0x14 ] 0x10
jae r-xdata
mov eax [ esi ]
push eax
call sub_1002e8fb
add esp 0x4
mov edx [ edi ]
mov [ esi ] edx
mov [ edi ] 0x0
mov ecx [ edi + 0x10 ]
inc ecx
push ecx
push edi
push esi
call sub_1002e460
add esp 0xc
jmp r-xdata
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov ecx [ edi + 0x14 ]
mov [ esi + 0x14 ] ecx
mov [ edi + 0x10 ] 0x0
mov [ edi + 0x14 ] 0x0
sub_10002640
push ebx
mov ebx eax
push edi
mov edi ecx
test ebx ebx
je r-xdata
cmp esi 0xfffffffe
jbe r-xdata
mov ecx [ edi + 0x14 ]
cmp ecx 0x10
jb r-xdata
mov eax [ edi + 0x14 ]
cmp eax esi
jae r-xdata
push r--data
call sub_1003621d
mov eax edi
mov eax [ edi ]
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ edi + 0x10 ]
push eax
push esi
push edi
call sub_10002a00
test esi esi
je r-xdata
cmp ecx 0x10
jb r-xdata
cmp ebx eax
jb r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov [ edi + 0x10 ] esi
cmp eax 0x10
jb r-xdata
mov eax edi
pop edi
pop ebx
retn
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax edi
pop edi
mov [ eax ] 0x0
pop ebx
retn
mov eax [ edi ]
mov [ eax ] 0x0
mov eax edi
pop edi
pop ebx
retn
cmp ecx 0x10
jb r-xdata
mov edx [ edi + 0x10 ]
add edx eax
cmp edx ebx
jbe r-xdata
mov eax edi
mov [ eax + esi ] 0x0
mov eax [ edi ]
mov [ eax + esi ] 0x0
mov eax edi
pop edi
pop ebx
retn
push esi
push ebx
push eax
call sub_10033950
add esp 0xc
cmp [ edi + 0x14 ] 0x10
mov [ edi + 0x10 ] esi
jb r-xdata
mov eax edi
sub ebx eax
push edi
mov ecx esi
call sub_10002780
pop edi
pop ebx
retn
mov eax [ edi ]
sub ebx eax
push edi
mov ecx esi
call sub_10002780
pop edi
pop ebx
retn
sub_10002710
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov [ ebp + 0x8 ] eax
cmp esi [ edi ]
je r-xdata
mov [ ebx ] eax
mov eax ebx
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ esi ]
mov eax [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
cmp [ esi + 0x1c ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x1c ] 0xf
mov [ esi + 0x18 ] eax
push esi
mov [ esi + 0x8 ] al
call sub_1002e8fb
mov edx [ ebp + 0x8 ]
add esp 0x4
dec [ edi + 0x4 ]
mov [ ebx ] edx
mov eax ebx
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x8 ]
push ecx
call sub_1002e8fb
add esp 0x4
sub_10002780
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
cmp eax ebx
jae r-xdata
sub eax ebx
push esi
mov esi eax
cmp ecx esi
jae r-xdata
push r--data
call sub_1003626a
cmp edi edx
jne r-xdata
mov esi ecx
mov eax edi
call sub_10002820
test al al
je r-xdata
lea ecx [ esi + ebx ]
or eax 0xffffffff
mov esi edi
call sub_10002990
mov eax ebx
xor ecx ecx
call sub_10002990
mov eax edi
pop esi
pop ebp
retn 0x4
mov eax edi
pop esi
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov eax 0x10
cmp [ ecx + 0x14 ] eax
jb r-xdata
cmp [ edi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax edi
mov [ eax + esi ] 0x0
mov eax [ edi ]
mov [ eax + esi ] 0x0
mov eax edi
pop esi
pop ebp
retn 0x4
push esi
add ecx ebx
push ecx
push eax
call sub_10033950
add esp 0xc
cmp [ edi + 0x14 ] 0x10
mov [ edi + 0x10 ] esi
jb r-xdata
sub_10002820
cmp esi 0xfffffffe
jbe r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx esi
jae r-xdata
push r--data
call sub_1003621d
test esi esi
jne r-xdata
mov ecx [ eax + 0x10 ]
push ecx
push esi
push eax
call sub_10002a00
xor edx edx
cmp edx esi
sbb eax eax
neg eax
retn
xor edx edx
cmp edx esi
sbb eax eax
neg eax
retn
mov [ eax + 0x10 ] esi
cmp ecx 0x10
jb r-xdata
mov [ eax ] 0x0
mov eax [ eax ]
sub_10002870
mov eax [ ebx ]
push esi
mov esi [ eax ]
mov [ eax ] eax
mov eax [ ebx ]
mov [ eax + 0x4 ] eax
mov [ ebx + 0x4 ] 0x0
cmp esi [ ebx ]
je r-xdata
pop esi
retn
push edi
mov [ esi + 0x1c ] 0xf
mov [ esi + 0x18 ] 0x0
push esi
mov [ esi + 0x8 ] 0x0
call sub_1002e8fb
add esp 0x4
mov esi edi
cmp edi [ ebx ]
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
call sub_1002e8fb
add esp 0x4
cmp [ esi + 0x1c ] 0x10
mov edi [ esi ]
jb r-xdata
pop edi
sub_100028c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b855
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x24
call sub_1002e957
mov esi eax
xor eax eax
add esp 0x4
mov [ ebp - 0x14 ] esi
cmp esi eax
je r-xdata
lea edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x20 ]
mov [ ebp + 0x8 ] eax
call sub_1002e39e
push r--data
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x20 ] r--data
call sub_10030edf
int3
mov edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ esi ] ecx
mov [ esi + 0x4 ] edx
lea edi [ esi + 0x8 ]
mov [ ebp - 0x4 ] 0x1
cmp edi eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] 0xf
mov [ edi ] al
mov eax [ ebp + 0x10 ]
push eax
or ecx 0xffffffff
xor ebx ebx
call sub_10002780
sub_10002990
push edi
mov edi eax
mov eax [ esi + 0x10 ]
cmp eax ecx
jae r-xdata
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_1003626a
test edi edi
je r-xdata
mov edi eax
mov eax esi
pop edi
retn
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x10
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
mov ecx esi
mov [ ecx + eax ] 0x0
mov ecx [ esi ]
mov [ ecx + eax ] 0x0
mov eax esi
pop edi
retn
sub eax edi
add ebx ecx
push eax
add ebx edi
add edx ecx
push ebx
push edx
call sub_1002e460
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
sub_10002a00
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b000
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi eax
or esi 0xf
cmp esi 0xfffffffe
jbe r-xdata
mov ebx [ edi + 0x14 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov esi eax
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
cmp ecx eax
jbe r-xdata
mov eax 0xfffffffe
sub eax ecx
lea esi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov [ ebp + 0xc ] eax
jmp r-xdata
cmp ecx 0xffffffff
ja r-xdata
mov esi 0xfffffffe
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x0
call sub_1002e39e
push r--data
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x24 ] r--data
call sub_10030edf
mov eax [ ebp + 0xc ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x2
call sub_10002b70
mov [ ebp + 0xc ] eax
mov eax r-xdata
retn
push ecx
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] 0x0
mov [ edi ] eax
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ebx
cmp esi 0x10
jb r-xdata
mov ecx [ edi ]
push ecx
call sub_1002e8fb
add esp 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov [ edi + ebx ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi eax
push ebx
push eax
mov eax [ ebp + 0xc ]
push eax
call sub_10033950
add esp 0xc
sub_10002b34
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push 0x0
mov [ esi ] 0x0
call sub_10030edf
int3
mov edx [ esi ]
push edx
call sub_1002e8fb
add esp 0x4
sub_10002b70
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0xffffffff
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_1002e39e
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_10030edf
push ecx
call sub_1002e957
add esp 0x4
test eax eax
jne r-xdata
sub_10002bc0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c045
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x24
call sub_1002e957
mov ebx eax
xor eax eax
add esp 0x4
mov [ ebp - 0x14 ] ebx
cmp ebx eax
je r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x20 ]
mov [ ebp + 0x8 ] eax
call sub_1002e39e
push r--data
lea edx [ ebp - 0x20 ]
push edx
mov [ ebp - 0x20 ] r--data
call sub_10030edf
int3
mov edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebx ] ecx
mov [ ebx + 0x4 ] edx
lea esi [ ebx + 0x8 ]
mov [ ebp - 0x4 ] 0x1
cmp esi eax
je r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi [ ebp + 0x10 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov [ esi ] al
call sub_100025d0
sub_10002c80
push ebx
push edi
mov edi ecx
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
push eax
or ecx 0xffffffff
xor ebx ebx
mov [ edi ] 0x0
call sub_10002780
mov eax edi
pop edi
pop ebx
retn
sub_10002cb0
mov eax [ edi + 0x40 ]
push esi
mov esi [ eax ]
mov [ eax ] eax
mov eax [ edi + 0x40 ]
mov [ eax + 0x4 ] eax
mov [ edi + 0x44 ] 0x0
cmp esi [ edi + 0x40 ]
je r-xdata
lea ecx [ edi + 0x24 ]
xor esi esi
mov eax r--data
call sub_10002640
mov [ edi + 0x20 ] esi
pop esi
retn
push ebx
jmp r-xdata
mov ebx [ esi ]
lea ecx [ esi + 0x8 ]
call sub_100034d0
push esi
call sub_1002e8fb
add esp 0x4
mov esi ebx
cmp ebx [ edi + 0x40 ]
jne r-xdata
pop ebx
sub_10002d00
mov ecx eax
push esi
lea esi [ ecx + 0x1 ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
mov esi ecx
lea ecx [ edi + 0x24 ]
call sub_10002640
mov eax [ edi + 0x40 ]
mov esi [ eax ]
mov [ eax ] eax
mov eax [ edi + 0x40 ]
mov [ eax + 0x4 ] eax
xor eax eax
mov [ edi + 0x44 ] eax
cmp esi [ edi + 0x40 ]
je r-xdata
mov [ edi + 0x20 ] eax
pop esi
retn
push ebx
mov ebx [ esi ]
lea ecx [ esi + 0x8 ]
call sub_100034d0
push esi
call sub_1002e8fb
add esp 0x4
mov esi ebx
cmp ebx [ edi + 0x40 ]
jne r-xdata
pop ebx
mov [ edi + 0x20 ] 0x0
pop esi
retn
sub_10002d60
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c010
mov eax [ fs : 0x0 ]
push eax
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x64 ] edx
mov [ ebp - 0x5c ] ebx
lea eax [ ebx + 0xa ]
mov [ ebp - 0x4 ] ebx
call sub_1002bff0
mov [ ebp - 0x54 ] eax
lea eax [ ebx + 0xb ]
call sub_1002bff0
mov [ ebp - 0x70 ] eax
lea eax [ ebx + 0x6 ]
call sub_1002bff0
mov [ ebp - 0x74 ] eax
lea eax [ ebx + 0x8 ]
call sub_1002bff0
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x9 ]
call sub_1002bff0
cmp [ ebp + 0x20 ] 0x10
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0xc ]
jae r-xdata
call sub_10003670
mov edi 0xf
mov ecx eax
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
lea esi [ ecx + 0x1 ]
lea ebx [ ebx ]
lea eax [ ebp + 0xc ]
mov dl [ ecx ]
inc ecx
cmp dl bl
jne r-xdata
sub ecx esi
mov esi ecx
lea ecx [ ebp - 0x48 ]
call sub_10002640
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
push eax
or ecx 0xffffffff
xor ebx ebx
lea edi [ ebp - 0x2c ]
call sub_10002780
lea eax [ ebx + 0x9 ]
mov [ ebp - 0x4 ] 0x2
call sub_1002bff0
mov edi [ ebp - 0x18 ]
mov edx [ ebp - 0x2c ]
cmp edi 0x10
jae r-xdata
mov al [ eax ]
xor ecx ecx
cmp [ edx ] al
jne r-xdata
lea edx [ ebp - 0x2c ]
mov esi [ ebp - 0x64 ]
add esi esi
xor ebx ebx
cmp esi ecx
sete bl
mov [ ebp - 0x4 ] 0x1
cmp edi 0x10
jb r-xdata
inc ecx
cmp [ ecx + edx ] al
je r-xdata
test ebx ebx
jne r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
mov eax [ ebp - 0x48 ]
or edi 0xffffffff
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x6c ] 0x0
jae r-xdata
mov esi [ ebp - 0x60 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
lea edi [ ebp - 0x48 ]
mov [ esi ] bl
call sub_100025d0
mov edi 0x10
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov cl [ eax + esi ]
mov edx [ ebp - 0x54 ]
lea ebx [ eax + esi ]
mov [ ebp - 0x4c ] ebx
cmp cl [ edx ]
jne r-xdata
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp + 0x20 ] edi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1002e8fb
add esp 0x4
mov eax ebx
mov [ ebp - 0x50 ] 0x0
lea edx [ eax + 0x1 ]
mov ecx [ ebp - 0x68 ]
mov cl [ ecx ]
mov eax 0x1
cmp [ ebx + 0x1 ] cl
jne r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
call sub_1002e8fb
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
je r-xdata
mov ecx [ ebp - 0x58 ]
lea edi [ eax - 0x1 ]
add ecx 0x4
xor esi esi
mov eax r--data
mov [ ebp - 0x6c ] 0x1
call sub_10002640
inc eax
cmp [ eax + ebx ] cl
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x20
mov edi [ ebp - 0x60 ]
mov ebx 0xf
mov [ edi + 0x14 ] ebx
mov [ edi + 0x10 ] 0x0
xor esi esi
mov eax r--data
mov ecx edi
mov [ edi ] 0x0
call sub_10002640
mov esi 0x10
cmp [ ebp - 0x34 ] esi
jb r-xdata
or eax 0xffffffff
mov esi ebx
sub eax ebx
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
cmp [ ebp + 0x20 ] esi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1002e8fb
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax ebx
push eax
push edx
push esi
call sub_1002eb4c
add esp 0xc
test eax eax
jne r-xdata
mov eax edi
mov eax [ ebp + 0xc ]
push eax
call sub_1002e8fb
add esp 0x4
mov esi [ ebp - 0x74 ]
mov eax esi
lea edx [ eax + 0x1 ]
nop
cmp [ ebp - 0x6c ] eax
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push esi
mov esi [ ebp - 0x54 ]
push esi
call sub_1002eb4c
add esp 0xc
test eax eax
je r-xdata
mov esi [ ebp - 0x50 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
call sub_10002640
mov ebx [ ebp - 0x58 ]
add ebx 0x4
lea edi [ ebp - 0x2c ]
mov esi ebx
mov [ ebp - 0x4 ] 0x3
call sub_100025d0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ebx [ ebp - 0x50 ]
lea eax [ edi + 0x1 ]
cmp eax ebx
jne r-xdata
mov ebx [ ebp - 0x5c ]
mov eax ebx
lea edx [ eax + 0x1 ]
mov ecx [ ebp - 0x50 ]
xor edi edi
cmp ecx edi
jbe r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1002e8fb
add esp 0x4
mov edx [ ebp - 0x4c ]
mov esi ebx
lea eax [ edx + edi + 0x1 ]
sub esi edi
dec esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x5c ] eax
call sub_10002640
mov esi [ ebp - 0x58 ]
add esi 0x24
lea edi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x5
call sub_100025d0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
cmp [ esi ] 0x0
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push ebx
push esi
call sub_1002eb4c
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp - 0x68 ]
mov al [ eax ]
mov edx [ ebp - 0x4c ]
mov [ ebp - 0x6c ] 0x1
mov edi ecx
cmp [ edx + ecx + 0x1 ] al
jne r-xdata
mov esi [ ebp - 0x54 ]
add esi [ ebp - 0x78 ]
cmp esi edi
jbe r-xdata
mov edi [ ebp - 0x58 ]
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1002e8fb
add esp 0x4
mov eax [ ebp - 0x4c ]
inc ebx
inc esi
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x54 ] esi
lea edx [ eax + 0x1 ]
mov ecx [ ebp - 0x64 ]
mov edx [ ebp - 0x4c ]
inc ecx
push 0x0
push ecx
sub esp 0x1c
lea edi [ ebx + edx ]
mov ecx esp
mov ebx 0xf
mov edx edi
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] 0x0
mov [ ebp - 0x5c ] esp
mov [ ecx ] 0x0
lea esi [ edx + 0x1 ]
cmp [ esi ] 0x0
jne r-xdata
mov ecx edx
lea esp [ esp ]
lea ecx [ ecx ]
mov edx [ ebp - 0x4c ]
xor eax eax
mov [ edi + 0x20 ] eax
lea edi [ ebx + edx ]
mov ebx [ ebp - 0x60 ]
mov ecx edi
mov [ ebx + 0x14 ] 0xf
mov [ ebx + 0x10 ] eax
mov [ ebx ] al
lea edx [ ecx + 0x1 ]
lea ecx [ ecx ]
cmp [ edi + 0x34 ] 0x0
jbe r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
cmp ebx eax
jb r-xdata
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub edx esi
mov esi edx
mov eax edi
call sub_10002640
mov esi [ ebp - 0x60 ]
mov ecx [ ebp - 0x58 ]
push esi
call sub_10003b50
mov edi 0x10
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov ebx [ ebp - 0x50 ]
inc edi
cmp [ ecx + edi + 0x1 ] al
je r-xdata
dec esi
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] 0x0
call sub_10002640
lea eax [ ebp - 0x2c ]
cmp ebx eax
je r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
mov esi ecx
mov eax edi
mov ecx ebx
call sub_10002640
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov edx [ ebp - 0x70 ]
mov eax edx
lea ebx [ eax + 0x1 ]
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
cmp [ ebp + 0x20 ] edi
jb r-xdata
mov eax [ ebp - 0x48 ]
push eax
call sub_1002e8fb
add esp 0x4
mov eax [ ebp - 0x4c ]
mov cl [ esi + eax ]
mov edx [ ebp - 0x68 ]
cmp cl [ edx ]
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
cmp [ ebx + 0x14 ] 0x10
jb r-xdata
cmp [ ebp + 0x20 ] 0x10
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
jb r-xdata
mov eax [ ebp - 0x48 ]
push eax
call sub_1002e8fb
add esp 0x4
mov ecx [ ebp - 0x70 ]
push ecx
push esi
call sub_1002ec10
add esp 0x8
test eax eax
je r-xdata
mov esi [ esi ]
mov ecx [ ebp + 0xc ]
push ecx
call sub_1002e8fb
add esp 0x4
mov eax esi
jmp r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1002e8fb
add esp 0x4
mov [ ebx + 0x14 ] 0xf
mov [ ebx + 0x10 ] edi
mov [ ebx ] 0x0
cmp [ ebp - 0x18 ] 0x10
jae r-xdata
mov eax [ ebx ]
push eax
call sub_1002e8fb
add esp 0x4
mov eax ebx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push ecx
call sub_1002e8fb
add esp 0x4
mov edx [ ebp - 0x64 ]
mov ebx [ ebp - 0x5c ]
push 0x1
inc edx
push edx
sub esp 0x1c
mov ecx esp
mov eax ebx
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
mov [ ebp - 0x74 ] esp
mov [ ecx ] 0x0
lea esi [ eax + 0x1 ]
lea ebx [ ebx ]
mov edx [ ebp - 0x2c ]
mov [ ebx ] edx
mov [ ebp - 0x2c ] edi
mov eax [ ebp - 0x1c ]
inc eax
push eax
lea ecx [ ebp - 0x2c ]
push ecx
push ebx
call sub_1002e460
add esp 0xc
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
mov esi eax
mov eax ebx
call sub_10002640
mov esi [ ebp - 0x60 ]
push esi
mov ecx edi
call sub_10003b50
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x14 ] ecx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
cmp [ ebp + 0x20 ] 0x10
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
jb r-xdata
mov eax [ ebp - 0x48 ]
push eax
call sub_1002e8fb
add esp 0x4
mov ecx [ ebp + 0xc ]
push ecx
call sub_1002e8fb
add esp 0x4
mov eax esi
jmp r-xdata
sub_100033c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003bfc3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ edi ] r--data
mov eax 0xf
xor esi esi
mov [ edi + 0x18 ] eax
mov [ edi + 0x14 ] esi
mov [ edi + 0x4 ] 0x0
mov [ ebp - 0x4 ] esi
mov [ edi + 0x38 ] eax
mov [ edi + 0x34 ] esi
mov [ edi + 0x24 ] 0x0
mov [ ebp - 0x4 ] 0x1
push 0x54
mov [ edi + 0x44 ] esi
call sub_1002e957
add esp 0x4
cmp eax esi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] esi
call sub_1002e39e
push r--data
lea ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x1c ] r--data
call sub_10030edf
int3
mov [ edi + 0x40 ] eax
mov [ eax ] eax
mov eax [ edi + 0x40 ]
mov [ eax + 0x4 ] eax
mov edx [ ebp + 0xc ]
mov eax edx
mov [ ebp - 0x4 ] 0x2
lea esi [ eax + 0x1 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
mov esi eax
mov eax edx
lea ecx [ edi + 0x4 ]
call sub_10002640
mov [ edi + 0x20 ] 0x0
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_100034a0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100034d0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_100034d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003afde
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
xor ecx ecx
mov [ ebp - 0x4 ] ecx
lea edi [ esi + 0x40 ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x4 ] 0x2
mov eax [ edi ]
mov ebx [ eax ]
mov [ eax ] eax
mov eax [ edi ]
mov [ eax + 0x4 ] eax
mov [ edi + 0x4 ] ecx
cmp ebx [ edi ]
je r-xdata
mov ecx [ edi ]
push ecx
call sub_1002e8fb
add esp 0x4
cmp [ esi + 0x38 ] 0x10
jb r-xdata
mov eax [ ebx ]
lea ecx [ ebx + 0x8 ]
mov [ ebp - 0x10 ] eax
call sub_100034d0
push ebx
call sub_1002e8fb
mov ebx [ ebp - 0x10 ]
add esp 0x4
cmp ebx [ edi ]
jne r-xdata
xor edi edi
mov ebx 0xf
mov [ esi + 0x38 ] ebx
mov [ esi + 0x34 ] edi
mov [ esi + 0x24 ] 0x0
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov edx [ esi + 0x24 ]
push edx
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x18 ] ebx
mov [ esi + 0x14 ] edi
mov [ esi + 0x4 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x4 ]
push eax
call sub_1002e8fb
add esp 0x4
sub_100035a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c788
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea ecx [ edi + 0x24 ]
xor esi esi
mov eax r--data
call sub_10002640
push ebx
lea eax [ ebp - 0x5c ]
push eax
mov [ edi + 0x20 ] 0x1
call sub_100033c0
mov [ ebp - 0x4 ] esi
mov esi [ edi + 0x40 ]
mov ecx [ esi + 0x4 ]
push eax
push ecx
push esi
call sub_100042a0
mov ecx [ edi + 0x44 ]
mov edx 0x35e50d6
sub edx ecx
cmp edx 0x1
jae r-xdata
inc ecx
mov [ edi + 0x44 ] ecx
mov [ esi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_100034d0
mov ecx [ edi + 0x44 ]
dec ecx
mov eax [ edi + 0x40 ]
mov eax [ eax ]
je r-xdata
push r--data
call sub_1003621d
add eax 0x8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
lea esp [ esp ]
dec ecx
mov eax [ eax ]
jne r-xdata
sub_10003670
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
push edi
mov eax 0x8
call sub_1002bff0
mov ebx eax
mov eax 0x6
call sub_1002bff0
mov edi eax
mov eax 0x9
call sub_1002bff0
mov [ ebp - 0x4 ] eax
mov edi edi
mov ecx esi
cmp esi eax
je r-xdata
push edi
push esi
call sub_1002ec10
add esp 0x8
test eax eax
je r-xdata
lea esi [ eax + 0x1 ]
mov al [ esi ]
cmp al [ edi ]
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
mov cl [ esi ]
mov eax esi
test cl cl
je r-xdata
push ebx
push esi
call sub_1002ec10
add esp 0x8
test eax eax
jne r-xdata
inc esi
jmp r-xdata
mov eax esi
inc ecx
cmp ecx eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
lea esp [ esp ]
cmp [ ecx ] dl
jne r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
cmp cl dl
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10003710
push ebp
mov ebp esp
push ecx
cmp [ eax + 0x20 ] 0x0
jne r-xdata
push ebx
push esi
push edi
mov edi [ eax + 0x44 ]
xor esi esi
test edi edi
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ eax + 0x40 ]
mov ebx [ eax ]
add eax 0xc
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov ecx esi
lea esp [ esp ]
lea edx [ eax + 0x1 ]
mov eax [ eax ]
dec ecx
mov eax [ eax ]
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
inc esi
cmp esi edi
jb r-xdata
mov eax ebx
test esi esi
je r-xdata
sub_10003780
push ebp
mov ebp esp
push 0xffffffff
push sub_1003bf79
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x3c ] eax
lea eax [ esi + 0x4 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x4c ] esi
call sub_1002bff0
mov [ ebp - 0x40 ] eax
lea eax [ esi + 0x5 ]
call sub_1002bff0
mov ebx eax
lea eax [ esi + 0x6 ]
call sub_1002bff0
mov [ ebp - 0x34 ] eax
lea eax [ esi + 0x7 ]
call sub_1002bff0
mov [ ebp - 0x44 ] eax
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] esi
mov eax r--data
mov ecx edi
mov [ edi ] 0x0
call sub_10002640
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4c ] 0x1
cmp [ ecx + 0x20 ] esi
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx ecx
mov esi [ edx + 0x18 ]
cmp esi 0x10
jb r-xdata
mov esi [ ebp - 0x30 ]
mov eax esi
call sub_10003710
test eax eax
je r-xdata
mov eax ecx
add eax 0x4
cmp [ eax + 0x14 ] 0x10
jb r-xdata
lea eax [ edx + 0x4 ]
mov eax [ edx + 0x4 ]
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
mov [ ebp - 0x38 ] 0x0
jbe r-xdata
xor edx edx
mov [ ebp - 0x38 ] edx
cmp [ esi + 0x44 ] edx
jbe r-xdata
mov ecx eax
lea esi [ ecx + 0x1 ]
mov eax [ eax ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax [ ebp - 0x34 ]
je r-xdata
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x34 ] ecx
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x3c ]
inc ecx
mov [ ebp - 0x34 ] ecx
mov eax [ ebp - 0x3c ]
inc eax
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
push ecx
mov ecx edi
call sub_10003f80
mov eax ebx
lea ecx [ eax + 0x1 ]
lea esp [ esp ]
mov eax edx
add eax 0x24
cmp [ eax + 0x14 ] 0x10
jb r-xdata
cmp esi 0x10
jb r-xdata
mov ebx [ ebp - 0x40 ]
add eax 0x8
cmp [ ebp - 0x3c ] 0x0
mov [ ebp - 0x48 ] eax
jle r-xdata
dec ecx
mov eax [ eax ]
jne r-xdata
mov eax [ esi + 0x40 ]
mov eax [ eax ]
test edx edx
je r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
mov eax ebx
mov ecx edi
call sub_10003f80
mov edx [ ebp - 0x34 ]
mov eax edx
lea ebx [ eax + 0x1 ]
jmp r-xdata
mov ecx eax
lea esi [ ecx + 0x1 ]
mov eax [ eax ]
lea eax [ edx + 0x4 ]
mov eax [ edx + 0x4 ]
jmp r-xdata
mov eax ebx
lea edx [ eax + 0x1 ]
mov esi [ ebp - 0x3c ]
lea esp [ esp ]
add eax 0x8
mov [ ebp - 0x44 ] eax
test edx edx
jne r-xdata
mov ecx edx
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
push ecx
mov ecx edi
call sub_10003f80
jmp r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
push ecx
mov ecx edi
call sub_10003f80
mov eax ebx
lea ecx [ eax + 0x1 ]
mov ecx eax
lea esi [ ecx + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
mov eax ebx
mov ecx edi
call sub_10003f80
mov esi [ ebp - 0x44 ]
mov eax esi
lea ecx [ eax + 0x1 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
mov eax ebx
mov ecx edi
call sub_10003f80
dec esi
jne r-xdata
cmp [ ebp - 0x3c ] 0x0
mov ebx [ ebp - 0x40 ]
jle r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
dec ecx
mov eax [ eax ]
jne r-xdata
sub eax ebx
push eax
mov eax edx
mov ecx edi
call sub_10003f80
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
mov eax ebx
mov ecx edi
call sub_10003f80
mov eax [ ebp - 0x30 ]
add eax 0x24
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov eax ebx
lea edx [ eax + 0x1 ]
mov eax ebx
lea edx [ eax + 0x1 ]
mov esi [ ebp - 0x3c ]
mov ecx [ ebp - 0x34 ]
push 0x0
push ecx
mov ecx [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
push edx
call sub_10003780
push 0x0
push eax
or eax 0xffffffff
mov [ ebp - 0x4 ] 0x1
call sub_10003ee0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ecx eax
lea esi [ ecx + 0x1 ]
mov edi edi
mov eax [ eax ]
sub eax ecx
push eax
mov eax esi
mov ecx edi
call sub_10003f80
mov esi [ ebp - 0x48 ]
mov eax esi
call sub_10003710
push eax
mov eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx esi
call sub_10003780
push 0x0
push eax
or eax 0xffffffff
mov [ ebp - 0x4 ] 0x2
call sub_10003ee0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
mov eax ebx
mov ecx edi
call sub_10003f80
mov esi [ ebp - 0x30 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
mov eax ebx
mov ecx edi
call sub_10003f80
dec esi
jne r-xdata
mov eax [ esi + 0x44 ]
mov ebx [ ebp - 0x38 ]
dec eax
cmp ebx eax
je r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1002e8fb
add esp 0x4
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
push ecx
mov ecx edi
call sub_10003f80
jmp r-xdata
mov ebx [ ebp - 0x30 ]
mov eax [ ebx + 0x44 ]
mov esi [ ebp - 0x38 ]
dec eax
cmp esi eax
je r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1002e8fb
add esp 0x4
mov eax ebx
lea edx [ eax + 0x1 ]
inc ebx
mov [ ebp - 0x38 ] ebx
cmp ebx [ esi + 0x44 ]
jb r-xdata
push 0x1
mov eax r--data
mov ecx edi
call sub_10003f80
inc esi
mov [ ebp - 0x38 ] esi
cmp esi [ ebx + 0x44 ]
jb r-xdata
push 0x1
mov eax r--data
mov ecx edi
call sub_10003f80
mov edx [ ebp - 0x38 ]
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov ecx [ ebp - 0x38 ]
mov eax [ edx + 0x40 ]
mov eax [ eax ]
test ecx ecx
je r-xdata
sub_10003b50
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d280
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi ecx
xor ebx ebx
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_10002cb0
cmp [ ebp + 0x20 ] 0x10
mov eax [ ebp + 0xc ]
mov [ edi + 0x20 ] 0x1
jae r-xdata
call sub_10003670
mov ecx eax
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
lea esi [ ecx + 0x1 ]
lea ecx [ ecx ]
lea eax [ ebp + 0xc ]
mov dl [ ecx ]
inc ecx
cmp dl bl
jne r-xdata
sub ecx esi
mov esi ecx
lea ecx [ ebp - 0x2c ]
call sub_10002640
mov ecx [ ebp + 0x28 ]
lea edx [ ecx + ecx ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x50 ] edx
mov esi [ ebp + 0x28 ]
cmp [ ebp - 0x4c ] 0x0
jg r-xdata
xor ebx ebx
cmp [ ebp - 0x18 ] esi
jb r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] esi
jae r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1002e8fb
add esp 0x4
xor ebx ebx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ edi + 0x14 ] esi
jae r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1002e8fb
add esp 0x4
sub esp 0x1c
mov edi esp
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x60 ] esp
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
push eax
or ecx 0xffffffff
xor ebx ebx
mov [ edi ] 0x0
call sub_10002780
mov ecx [ ebp - 0x5c ]
push ecx
mov edx esi
lea ecx [ ebp - 0x48 ]
call sub_10002d60
mov edi eax
lea edx [ ebp - 0x2c ]
lea esi [ ebx + 0x10 ]
cmp edx edi
je r-xdata
call sub_10003670
mov ecx eax
lea esi [ ecx + 0x1 ]
lea eax [ ebp - 0x2c ]
mov edx [ edi ]
mov [ ebp - 0x2c ] edx
mov [ edi ] ebx
mov eax [ edi + 0x10 ]
inc eax
push eax
lea ecx [ ebp - 0x2c ]
push edi
push ecx
call sub_1002e460
add esp 0xc
jmp r-xdata
mov dl [ ecx ]
inc ecx
cmp dl bl
jne r-xdata
sub ecx esi
mov esi ecx
lea ecx [ ebp - 0x2c ]
call sub_10002640
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
push eax
or ecx 0xffffffff
xor ebx ebx
lea edi [ ebp - 0x48 ]
mov [ ebp - 0x34 ] 0xf
call sub_10002780
lea eax [ ebx + 0x9 ]
mov [ ebp - 0x4 ] 0x3
call sub_1002bff0
mov edi [ ebp - 0x34 ]
mov edx [ ebp - 0x48 ]
cmp edi 0x10
jae r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ edi + 0x10 ]
mov [ ebp - 0x1c ] eax
mov ecx [ edi + 0x14 ]
mov [ ebp - 0x18 ] ecx
mov [ edi + 0x10 ] ebx
mov [ edi + 0x14 ] ebx
jmp r-xdata
mov al [ eax ]
xor ebx ebx
xor ecx ecx
cmp [ edx ] al
jne r-xdata
lea edx [ ebp - 0x48 ]
xor edx edx
cmp [ ebp - 0x50 ] ecx
mov [ ebp - 0x4 ] 0x1
sete dl
mov esi edx
cmp edi 0x10
jb r-xdata
lea esp [ esp ]
cmp esi ebx
je r-xdata
mov eax [ ebp - 0x48 ]
push eax
call sub_1002e8fb
add esp 0x4
inc ecx
cmp [ ecx + edx ] al
je r-xdata
mov esi [ ebp - 0x54 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
lea edi [ ebp - 0x2c ]
mov [ esi ] bl
call sub_100025d0
mov edi 0x10
cmp [ ebp - 0x18 ] edi
jb r-xdata
inc [ ebp - 0x4c ]
jmp r-xdata
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp + 0x20 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
mov edi [ ebp - 0x58 ]
mov ebx r--data
call sub_100035a0
cmp [ ebp + 0x2c ] 0x0
mov [ ebp - 0x5c ] eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x28
mov edx [ ebp + 0xc ]
push edx
call sub_1002e8fb
add esp 0x4
sub_10003dc0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a818
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov eax [ edi ]
mov esi [ eax ]
mov [ eax ] eax
mov eax [ edi ]
mov [ eax + 0x4 ] eax
mov [ edi + 0x4 ] ecx
cmp esi [ edi ]
je r-xdata
mov eax [ edi ]
push eax
call sub_1002e8fb
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
nop
mov ebx [ esi ]
lea ecx [ esi + 0x8 ]
call sub_100034d0
push esi
call sub_1002e8fb
add esp 0x4
mov esi ebx
cmp ebx [ edi ]
jne r-xdata
sub_10003e40
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov [ ebp + 0x8 ] eax
cmp esi [ edi ]
je r-xdata
mov [ ebx ] eax
mov eax ebx
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ esi ]
mov eax [ esi + 0x4 ]
lea ecx [ esi + 0x8 ]
mov [ edx + 0x4 ] eax
call sub_100034d0
push esi
call sub_1002e8fb
mov ecx [ ebp + 0x8 ]
add esp 0x4
dec [ edi + 0x4 ]
mov [ ebx ] ecx
mov eax ebx
pop esi
pop ebp
retn 0x4
sub_10003e90
mov eax [ edi ]
push esi
mov esi [ eax ]
mov [ eax ] eax
mov eax [ edi ]
mov [ eax + 0x4 ] eax
mov [ edi + 0x4 ] 0x0
cmp esi [ edi ]
je r-xdata
pop esi
retn
push ebx
jmp r-xdata
mov ebx [ esi ]
lea ecx [ esi + 0x8 ]
call sub_100034d0
push esi
call sub_1002e8fb
add esp 0x4
mov esi ebx
cmp ebx [ edi ]
jne r-xdata
pop ebx
sub_10003ee0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax ecx
jae r-xdata
sub eax ecx
cmp eax ebx
jae r-xdata
push r--data
call sub_1003626a
mov eax [ edi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_1003621d
mov eax edi
pop ebx
pop ebp
retn 0x8
push esi
lea esi [ eax + ebx ]
mov eax edi
call sub_10002820
test al al
je r-xdata
pop esi
mov ecx [ ebp + 0x8 ]
mov eax 0x10
cmp [ ecx + 0x14 ] eax
jb r-xdata
cmp [ edi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax edi
mov [ eax + esi ] 0x0
mov eax [ edi ]
mov [ eax + esi ] 0x0
pop esi
mov eax edi
pop ebx
pop ebp
retn 0x8
add ecx [ ebp + 0xc ]
push ebx
push ecx
mov ecx [ edi + 0x10 ]
add ecx eax
push ecx
call sub_10033950
add esp 0xc
cmp [ edi + 0x14 ] 0x10
mov [ edi + 0x10 ] esi
jb r-xdata
sub_10003f80
push ebp
mov ebp esp
push ebx
mov ebx eax
push edi
mov edi ecx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
mov esi [ edi + 0x10 ]
or ecx 0xffffffff
sub ecx esi
cmp ecx eax
ja r-xdata
mov ecx [ edi + 0x14 ]
cmp ecx 0x10
jb r-xdata
test eax eax
je r-xdata
push r--data
call sub_1003621d
mov eax edi
mov eax [ edi ]
jmp r-xdata
pop esi
mov eax edi
pop edi
pop ebx
pop ebp
retn 0x4
add esi eax
mov eax edi
call sub_10002820
test al al
je r-xdata
cmp ecx 0x10
jb r-xdata
cmp ebx eax
jb r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp ecx 0x10
jb r-xdata
mov edx [ edi + 0x10 ]
add edx eax
cmp edx ebx
jbe r-xdata
mov eax edi
mov [ eax + esi ] 0x0
mov eax [ edi ]
mov [ eax + esi ] 0x0
pop esi
mov eax edi
pop edi
pop ebx
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov ecx [ edi + 0x10 ]
push edx
add ecx eax
push ebx
push ecx
call sub_10033950
add esp 0xc
cmp [ edi + 0x14 ] 0x10
mov [ edi + 0x10 ] esi
jb r-xdata
mov eax edi
sub ebx eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
call sub_10003ee0
pop edi
pop ebx
pop ebp
retn 0x4
mov eax [ edi ]
sub ebx eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
call sub_10003ee0
pop edi
pop ebx
pop ebp
retn 0x4
sub_10004060
push ebp
mov ebp esp
push 0xffffffff
push sub_1003bf26
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0x8 ]
lea edi [ esi + 0x4 ]
mov [ esi ] r--data
add eax 0x4
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
push eax
or ecx 0xffffffff
xor ebx ebx
mov [ edi ] 0x0
call sub_10002780
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edx [ eax + 0x20 ]
lea edi [ esi + 0x24 ]
mov [ esi + 0x20 ] edx
mov [ edi + 0x10 ] ecx
mov [ edi + 0x14 ] 0xf
add eax 0x24
mov [ edi ] cl
push eax
or ecx 0xffffffff
call sub_10002780
mov eax [ ebp + 0x8 ]
add eax 0x40
push eax
lea ecx [ esi + 0x40 ]
push ecx
mov [ ebp - 0x4 ] 0x1
call sub_10004110
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10004110
push ebp
mov ebp esp
push 0xffffffff
push sub_1003bee8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
xor edi edi
push 0x54
mov [ esi + 0x4 ] edi
call sub_1002e957
add esp 0x4
cmp eax edi
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x14 ] edi
call sub_1002e39e
push r--data
lea edx [ ebp - 0x20 ]
push edx
mov [ ebp - 0x20 ] r--data
call sub_10030edf
int3
mov [ esi ] eax
mov [ eax ] eax
mov eax [ esi ]
mov [ eax + 0x4 ] eax
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov ecx [ eax ]
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov edi [ ebp + 0x8 ]
mov edx [ eax ]
push edi
push eax
push edx
push ecx
push esi
call sub_100041d0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_100041d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003bec0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp eax [ ebp + 0x14 ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ ebp + 0xc ]
add eax 0x8
push eax
mov eax [ ecx + 0x4 ]
lea esi [ ecx + 0x4 ]
push eax
push ecx
call sub_100042a0
mov ecx [ edi + 0x4 ]
mov edx 0x35e50d6
sub edx ecx
cmp edx 0x1
jae r-xdata
inc ecx
mov [ edi + 0x4 ] ecx
mov [ esi ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
push r--data
call sub_1003621d
sub_10004257
mov esi [ ebp - 0x14 ]
cmp esi [ ebp + 0x10 ]
je r-xdata
push 0x0
push 0x0
call sub_10030edf
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
lea ebx [ ebp + 0x8 ]
call sub_10003e40
mov esi [ esi ]
cmp esi [ ebp + 0x10 ]
jne r-xdata
sub_100042a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003afa5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x54
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
test esi esi
je r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x20 ]
mov [ ebp + 0x8 ] 0x0
call sub_1002e39e
push r--data
lea edx [ ebp - 0x20 ]
push edx
mov [ ebp - 0x20 ] r--data
call sub_10030edf
int3
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] ecx
mov [ esi ] eax
lea ecx [ esi + 0x8 ]
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
push edx
call sub_10004060
sub_10004360
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_100043b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov edx eax
push esi
lea esi [ edx + 0x1 ]
lea ecx [ ecx ]
mov bl [ edx ]
inc edx
test bl bl
jne r-xdata
mov ecx [ ecx + 0x4 ]
sub edx esi
add ecx 0x4
mov esi edx
call sub_10002640
pop esi
pop ebx
pop ebp
retn 0x4
sub_10004420
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b0fb
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x8
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ edi + 0x4 ]
mov ebx r--data
call sub_100035a0
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
mov eax esi
sub_10004490
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
mov [ eax ] 0x0
push esi
mov esi ecx
mov [ ebx ] 0x0
mov edx [ esi ]
mov eax [ edx + 0x44 ]
call eax
test eax eax
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
mov esi [ esi + 0x4 ]
add esi 0x24
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax 0xc
call sub_1002bff0
lea edx [ eax + 0x1 ]
mov esi [ esi ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push edi
lea edi [ eax + esi ]
mov eax edi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov esi eax
mov eax 0xd
call sub_1002bff0
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
sub esi eax
mov eax esi
test al 0x1
jne r-xdata
pop edi
shr eax 0x1
push eax
mov [ ebx ] eax
call sub_1002eb41
mov ecx [ ebp + 0x8 ]
xor esi esi
add esp 0x4
mov [ ecx ] eax
cmp [ ebx ] esi
jbe r-xdata
lea ecx [ ecx ]
mov al [ edi + esi * 2 + 0x1 ]
lea edx [ eax - 0x30 ]
cmp dl 0x9
ja r-xdata
lea edx [ eax - 0x61 ]
cmp dl 0x5
ja r-xdata
lea edx [ eax - 0x61 ]
cmp dl 0x5
ja r-xdata
mov al dl
jmp r-xdata
lea ecx [ eax - 0x41 ]
cmp cl 0x5
ja r-xdata
sub al 0x57
mov cl al
jmp r-xdata
lea edx [ eax - 0x41 ]
cmp dl 0x5
ja r-xdata
sub al 0x57
jmp r-xdata
shl cl 0x4
or cl al
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov [ esi + edx ] cl
inc esi
cmp esi [ ebx ]
jb r-xdata
xor cl cl
sub al 0x37
mov cl al
jmp r-xdata
xor al al
sub al 0x37
jmp r-xdata
mov al [ edi + esi * 2 ]
lea ecx [ eax - 0x30 ]
cmp cl 0x9
jbe r-xdata
sub_100045a0
push esi
push edi
mov edi [ ecx + 0x4 ]
add edi 0x24
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov eax edi
lea edx [ eax + 0x1 ]
mov edi [ edi ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
call sub_1002eb41
mov esi eax
add esp 0x4
mov ecx edi
sub esi edi
mov edi edi
mov dl [ ecx ]
mov [ esi + ecx ] dl
inc ecx
test dl dl
jne r-xdata
pop edi
pop esi
retn
sub_100045e0
push ebp
mov ebp esp
sub esp 0x874
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov eax 0xe
mov esi ecx
call sub_1002bff0
mov ecx [ ebp + 0x8 ]
push ecx
push eax
lea edx [ ebp - 0x874 ]
push edx
call sub_1002ec96
mov edi [ esi + 0x4 ]
add esp 0xc
lea eax [ ebp - 0x874 ]
call sub_10002d00
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
sub_10004640
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x4 ]
push ebx
mov ebx [ eax + 0x44 ]
push esi
push edi
xor edi edi
test ebx ebx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x40 ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test edi edi
je r-xdata
lea esi [ eax + 0x8 ]
cmp [ esi + 0x18 ] 0x10
lea eax [ esi + 0x4 ]
jb r-xdata
mov ecx edi
lea esp [ esp ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax ]
dec ecx
mov eax [ eax ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
push 0x8
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
inc edi
cmp edi ebx
jb r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
pop edi
mov [ eax + 0x4 ] esi
pop esi
mov [ eax ] r--data
pop ebx
mov esp ebp
pop ebp
retn 0x4
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_10004700
push ebp
mov ebp esp
push esi
push 0x8
mov esi ecx
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x40 ]
mov ecx [ edx ]
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
add ecx 0x8
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
pop esi
pop ebp
retn 0x4
dec edx
mov ecx [ ecx ]
jne r-xdata
sub_10004740
push ebp
mov ebp esp
sub esp 0x8
mov eax 0xc
mov [ ebp - 0x4 ] ecx
call sub_1002bff0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
push ebx
sub eax edx
push esi
mov esi eax
push edi
mov eax 0xd
call sub_1002bff0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ ebp + 0xc ]
sub eax edx
lea eax [ eax + edi * 2 ]
lea ecx [ eax + esi + 0x1 ]
push ecx
call sub_1002eb41
mov ebx eax
add esp 0x4
mov eax 0xc
mov [ ebp - 0x8 ] ebx
call sub_1002bff0
mov edx ebx
sub edx eax
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
mov eax ebx
lea edx [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
xor ecx ecx
lea esi [ eax + ebx ]
test edi edi
je r-xdata
mov eax 0xd
call sub_1002bff0
sub esi eax
mov edi [ ebp + 0x8 ]
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x4 ]
mov eax ebx
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
lea edx [ eax - 0xa ]
cmp dl 0x5
ja r-xdata
add al 0x30
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov esi eax
lea ecx [ edi + 0x24 ]
mov eax ebx
call sub_10002640
mov eax [ edi + 0x40 ]
mov esi [ eax ]
mov [ eax ] eax
mov eax [ edi + 0x40 ]
mov [ eax + 0x4 ] eax
mov [ edi + 0x44 ] 0x0
cmp esi [ edi + 0x40 ]
je r-xdata
xor al al
add al 0x57
jmp r-xdata
mov [ esi ] al
mov al [ ecx + edi ]
and al 0xf
cmp al 0x9
ja r-xdata
push ebx
mov [ edi + 0x20 ] 0x0
call sub_1002ee65
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi edi
lea edx [ eax - 0xa ]
cmp dl 0x5
ja r-xdata
add al 0x30
jmp r-xdata
mov ebx [ esi ]
lea ecx [ esi + 0x8 ]
call sub_100034d0
push esi
call sub_1002e8fb
add esp 0x4
mov esi ebx
cmp ebx [ edi + 0x40 ]
jne r-xdata
mov ebx [ ebp - 0x8 ]
xor al al
add al 0x57
jmp r-xdata
mov [ esi + 0x1 ] al
inc ecx
add esi 0x2
cmp ecx [ ebp + 0xc ]
jb r-xdata
mov al [ ecx + edi ]
sar al 0x4
and al 0xf
cmp al 0x9
ja r-xdata
sub_100048c0
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x4 ]
push ebx
add eax 0x24
cmp [ eax + 0x14 ] 0x10
push esi
push edi
jb r-xdata
mov [ ebp - 0x4 ] eax
mov edi eax
mov edi [ eax ]
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov ebx eax
mov eax 0xc
call sub_1002bff0
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov eax edi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov esi eax
mov eax 0xd
call sub_1002bff0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
add eax esi
cmp ebx eax
jae r-xdata
mov eax 0xc
call sub_1002bff0
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov esi eax
mov eax 0xc
call sub_1002bff0
push esi
push eax
push edi
call sub_1002edfc
add esp 0xc
test eax eax
jne r-xdata
mov eax 0xd
call sub_1002bff0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov ebx eax
mov eax edi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov esi eax
mov eax 0xd
call sub_1002bff0
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov edi eax
mov eax 0xd
call sub_1002bff0
push ebx
sub esi edi
add esi [ ebp - 0x4 ]
push eax
push esi
call sub_1002edfc
add esp 0xc
neg eax
pop edi
sbb eax eax
pop esi
inc eax
pop ebx
mov esp ebp
pop ebp
retn
sub_100049e0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ecx + 0x4 ]
mov eax [ edi + 0x40 ]
mov esi [ eax ]
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
cmp esi [ edi + 0x40 ]
je r-xdata
dec eax
mov esi [ esi ]
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov [ ecx ] edx
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
mov [ eax + 0x4 ] ecx
lea ecx [ esi + 0x8 ]
call sub_100034d0
push esi
call sub_1002e8fb
add esp 0x4
dec [ edi + 0x44 ]
sub_10004a30
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10004a60
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
push eax
mov eax [ esi + 0xc ]
push ecx
push edx
call eax
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
sub_10004a90
push ebx
push esi
push edi
push 0x10
call sub_1002e957
xor esi esi
add esp 0x4
cmp eax esi
je r-xdata
mov eax 0xf
call sub_1002bff0
mov edi eax
mov eax 0x1
call sub_1002bff0
push edi
mov ebx eax
call [ LoadLibraryA@IAT ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] esi
mov [ eax ] r--data
mov esi eax
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
pop edi
pop esi
xor eax eax
pop ebx
retn
push ebx
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
retn
sub_10004b10
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov [ esi ] r--data
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0x8 ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10004b50
push ebx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
push esi
push edi
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
lea esi [ ebx + 0x4 ]
call sub_10009ff0
test eax eax
je r-xdata
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0xc ]
mov esi [ ebx + 0x8 ]
lea ecx [ ebx + 0x4 ]
call edx
push eax
push esi
push 0x10001
call [ CertCreateCertificateContext@IAT ]
mov [ ebx + 0x1c ] eax
test eax eax
jne r-xdata
lea esi [ ebx + 0x4 ]
call sub_10009ff0
test eax eax
je r-xdata
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov esi ebx
call sub_10004d20
cmp [ ebx + 0x1c ] 0x0
je r-xdata
lea esi [ ebx + 0x4 ]
call sub_10009ff0
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
call sub_10004c80
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
sub_10004be0
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push eax
call [ CertFreeCertificateContext@IAT ]
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] r--data
je r-xdata
push 0x0
push eax
call [ CertCloseStore@IAT ]
mov [ esi + 0x4 ] r--data
mov [ esi ] r--data
pop esi
retn
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x8 ] 0x0
sub_10004c50
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10004be0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10004c80
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebx + 0x4 ]
push esi
push edi
mov edi [ ebx + 0x8 ]
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ edx + 0xc ]
push 0x0
push 0x0
lea ecx [ ebx + 0x4 ]
mov [ ebp - 0x4 ] 0x0
call eax
push eax
push edi
call [ CryptStringToBinaryA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push eax
call sub_1002e957
mov ecx [ ebx + 0x8 ]
add esp 0x4
push 0x0
push 0x0
lea edx [ ebp - 0x4 ]
push edx
mov edi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0xc ]
push edi
mov [ ebp - 0x8 ] ecx
push 0x0
lea ecx [ ebx + 0x4 ]
call edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call [ CryptStringToBinaryA@IAT ]
test eax eax
je r-xdata
push edi
call sub_1002e8fb
add esp 0x4
mov ecx [ ebp - 0x4 ]
push ecx
push edi
push 0x10001
call [ CertCreateCertificateContext@IAT ]
mov [ ebx + 0x1c ] eax
sub_10004d20
push ebp
mov ebp esp
sub esp 0x8
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ edx + 0xc ]
call eax
push 0x0
push r--data
lea ecx [ ebp - 0x8 ]
push ecx
mov [ ebp - 0x8 ] eax
call [ PFXImportCertStore@IAT ]
mov [ esi + 0x20 ] eax
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
push 0x0
push eax
call [ CertEnumCertificatesInStore@IAT ]
mov [ esi + 0x1c ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x20 ]
push eax
push edx
call [ CertCloseStore@IAT ]
mov [ esi + 0x20 ] 0x0
sub_10004d80
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0xc
push ebx
mov ebx [ ebp + 0xc ]
push edi
push ebx
mov [ ebp + 0xc ] ebx
call sub_1002e957
mov edi eax
mov eax [ ebp + 0x8 ]
push ebx
push eax
push edi
call sub_10033950
mov eax [ ebp + 0xc ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
add esp 0x10
push eax
mov eax [ esi + 0x14 ]
neg eax
lea ecx [ ebp + 0xc ]
push ecx
sbb eax eax
and eax [ ebp + 0x10 ]
push edi
push eax
mov ecx esi
call edx
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp + 0xc ]
mov edx [ ecx ]
mov edx [ edx + 0xc ]
push eax
push edi
call edx
cmp [ ebp + 0xc ] eax
cmp [ ebp + 0xc ] ebx
jbe r-xdata
push edi
call sub_1002e8fb
add esp 0x4
pop edi
pop ebx
mov [ esi + 0x8 ] 0x0
push edi
call sub_1002e8fb
mov eax [ ebp + 0xc ]
push eax
call sub_1002e957
mov ecx [ ebp + 0x8 ]
push ebx
mov edi eax
push ecx
push edi
call sub_10033950
mov eax [ ebp + 0xc ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
add esp 0x14
push eax
mov eax [ esi + 0x14 ]
neg eax
lea ecx [ ebp - 0x4 ]
push ecx
sbb eax eax
and eax [ ebp + 0x10 ]
push edi
push eax
mov ecx esi
mov [ ebp - 0x4 ] ebx
call edx
test eax eax
je r-xdata
call [ GetLastError@IAT ]
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0xc ]
push edx
push edi
call eax
cmp [ ebp - 0x4 ] eax
jmp r-xdata
je r-xdata
sub_10004e70
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push edx
mov edx [ ecx + 0x10 ]
push eax
mov eax [ ecx + 0x14 ]
mov ecx [ ecx + 0xc ]
neg eax
sbb eax eax
and eax [ ebp + 0x8 ]
push edx
push eax
push 0x0
push ecx
call [ CryptEncrypt@IAT ]
pop ebp
retn 0x10
sub_10004eb0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push eax
mov eax [ ecx + 0x10 ]
push edx
mov edx [ ecx + 0x14 ]
neg edx
push eax
mov eax [ ecx + 0xc ]
sbb edx edx
and edx [ ebp + 0x8 ]
push edx
push 0x0
push eax
call [ CryptDecrypt@IAT ]
pop ebp
retn 0x10
sub_10004ee0
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
pop esi
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0xc ]
push 0x0
push eax
push ecx
push edx
call [ CryptHashData@IAT ]
test eax eax
jne r-xdata
mov [ esi + 0x8 ] eax
sub_10004f10
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10004f50
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x1
jb r-xdata
push esi
push 0x24
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0xc
xor esi esi
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] 0x0
mov [ eax + 0x18 ] 0x1
mov [ eax + 0x14 ] 0x1
mov [ eax + 0x1c ] 0x0
mov [ eax + 0x20 ] 0x0
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0xc
mov eax esi
call sub_10004b50
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0xc
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
sub_10004fe0
push esi
push 0xc
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor esi esi
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x0
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov eax esi
pop esi
retn
mov eax esi
call sub_10005230
test eax eax
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
sub_10005050
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push edi
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
push 0x10
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor eax eax
pop edi
pop ebp
retn 0x4
push 0x10
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x18
mov [ eax + 0xc ] 0x6610
jmp r-xdata
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x1
mov [ eax + 0xc ] 0x6801
jmp r-xdata
call sub_100064e0
test eax eax
je r-xdata
mov edi eax
test edi edi
je r-xdata
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
mov eax edi
pop edi
pop ebp
retn 0x4
sub_100050f0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x1
jb r-xdata
mov edx [ ebp + 0x10 ]
cmp edx 0xc
jb r-xdata
xor eax eax
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
cmp [ ecx ] 0x31415352
jne r-xdata
mov eax [ ecx + 0x4 ]
shr eax 0x3
push esi
lea esi [ eax + 0xc ]
cmp edx esi
pop esi
jb r-xdata
mov edx [ ecx + 0x8 ]
push edx
push eax
add ecx 0xc
push ecx
call sub_100061c0
add esp 0xc
pop ebp
retn 0xc
sub_10005140
push ebp
mov ebp esp
push esi
push 0x8
call sub_1002e957
mov esi eax
add esp 0x4
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov [ esi ] r--data
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
call [ GetTickCount@IAT ]
mov [ esi + 0x4 ] eax
sub_10005190
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx [ CryptGetHashParam@IAT ]
push edi
push 0x0
mov edi ecx
mov edx [ edi + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
push 0x4
push edx
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x8 ] 0x0
call ebx
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push esi
push eax
call sub_1002e957
mov esi eax
add esp 0x4
test esi esi
je r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
pop esi
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov ecx [ ebp - 0x8 ]
push 0x0
lea edx [ ebp - 0x4 ]
push edx
push esi
push 0x2
push eax
mov [ ebp - 0x4 ] ecx
call ebx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov edx [ ecx ]
mov edx [ edx + 0xc ]
push eax
push esi
call edx
xor ecx ecx
cmp [ ebp - 0x4 ] eax
pop esi
sete cl
pop edi
pop ebx
mov eax ecx
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10005230
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
push esi
lea esi [ ebx + 0x4 ]
je r-xdata
push edi
mov edi [ CryptAcquireContextW@IAT ]
push 0xf0000040
push 0x1
push 0x0
push 0x0
push esi
call edi
test eax eax
jne r-xdata
pop esi
mov eax 0x1
pop ebx
retn
mov eax [ esi ]
add ebx 0x8
push ebx
push 0x0
push 0x0
push 0x8004
push eax
call [ CryptCreateHash@IAT ]
neg eax
pop edi
sbb eax eax
pop esi
neg eax
pop ebx
retn
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
push 0xf0000048
push 0x1
push 0x0
push 0x0
push esi
call edi
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_100052b0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003be98
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
mov ecx [ ecx + 0x8 ]
xor eax eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] 0x1
mov [ esp + 0x4 ] r--data
mov [ esp + 0x10 ] ecx
mov edx [ ebp + 0x8 ]
mov [ esp + 0x20 ] eax
mov eax [ ebp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
call sub_1000ae20
mov eax [ esp + 0x10 ]
add esp 0x4
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_10005330
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call [ CryptDestroyHash@IAT ]
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
push 0x0
push eax
call [ CryptReleaseContext@IAT ]
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10005380
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a7f0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
mov [ ebp - 0x44 ] r--data
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] 0x1
mov [ ebp - 0x4 ] esi
lea eax [ ebp - 0x44 ]
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] 0xffffffff
mov [ ebp - 0x4 ] 0x1
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
lea eax [ ebp - 0x2c ]
push eax
call edx
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push edi
push esi
push esi
push 0x8004
push eax
call [ CryptCreateHash@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x44 ] r--data
cmp [ ebp - 0x34 ] esi
je r-xdata
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x2c ] r--data
call sub_1000a130
mov eax [ edi ]
push esi
lea ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x18 ] 0x4
call [ CryptGetHashParam@IAT ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x38 ] esi
jne r-xdata
mov edx [ edi ]
push edx
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x3c ]
jne r-xdata
mov eax [ ebp - 0x40 ]
cmp eax esi
je r-xdata
cmp [ ebp - 0x30 ] esi
jne r-xdata
mov edx [ ebp - 0x40 ]
mov eax [ edi ]
push esi
push edx
push 0x2
push eax
call [ CryptSetHashParam@IAT ]
test eax eax
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x2c ] r--data
call sub_1000a130
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
call [ GetLastError@IAT ]
mov ecx [ edi ]
push ecx
jmp r-xdata
call [ CryptDestroyHash@IAT ]
sub_10005510
push ebx
push esi
push edi
push 0x8
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor esi esi
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x0
mov esi eax
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
retn
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
mov ebx [ CryptAcquireContextW@IAT ]
push 0xf0000040
push 0x1
push 0x0
push 0x0
lea edi [ esi + 0x4 ]
push edi
call ebx
test eax eax
jne r-xdata
push 0xf0000048
push 0x1
push 0x0
push 0x0
push edi
call ebx
test eax eax
je r-xdata
test esi esi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
sub_10005590
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003c758
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
xor esi esi
mov ebx 0x1
mov [ esp + 0x54 ] r--data
mov [ esp + 0x58 ] esi
mov [ esp + 0x5c ] esi
mov [ esp + 0x68 ] esi
mov [ esp + 0x64 ] esi
mov [ esp + 0x60 ] ebx
mov [ esp + 0x78 ] esi
lea eax [ esp + 0x54 ]
mov [ esp + 0x2c ] r--data
mov [ esp + 0x30 ] eax
mov [ esp + 0x38 ] esi
mov [ esp + 0x34 ] esi
mov [ esp + 0x3c ] 0xffffffff
lea ecx [ esp + 0x2c ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] esi
mov [ esp + 0x28 ] ebx
mov [ esp + 0x14 ] r--data
push edx
mov edx [ ebp + 0x8 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x7c ] 0x2
call sub_1000ae20
add esp 0x4
push edi
mov [ esp + 0x7c ] bl
call [ CryptDestroyKey@IAT ]
cmp [ esp + 0x1c ] esi
jne r-xdata
mov ecx [ esp + 0x5c ]
lea eax [ esp + 0x54 ]
mov [ esp + 0x40 ] r--data
mov [ esp + 0x44 ] eax
mov [ esp + 0x4c ] esi
mov [ esp + 0x48 ] esi
mov [ esp + 0x50 ] ecx
mov eax [ ebp + 0xc ]
lea edx [ esp + 0x40 ]
mov [ esp + 0x10 ] edx
mov [ esp + 0x14 ] r--data
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] ebx
push ebx
lea ecx [ esp + 0x18 ]
lea edx [ esp + 0x14 ]
mov [ esp + 0x7c ] 0x4
call sub_1000ae20
add esp 0x4
mov [ esp + 0x40 ] r--data
mov [ esp + 0x2c ] r--data
mov [ esp + 0x54 ] r--data
cmp [ esp + 0x64 ] esi
je r-xdata
mov [ esp + 0x2c ] r--data
mov [ esp + 0x54 ] r--data
cmp [ esp + 0x64 ] esi
je r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esp + 0x60 ] esi
jne r-xdata
xor eax eax
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esp + 0x60 ] esi
jne r-xdata
mov eax [ esp + 0x58 ]
cmp eax esi
je r-xdata
cmp [ esp + 0x68 ] esi
jne r-xdata
mov eax [ esp + 0x58 ]
cmp eax esi
je r-xdata
cmp [ esp + 0x68 ] esi
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
push eax
call sub_1002e8fb
add esp 0x4
sub_10005740
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
push 0x0
push eax
call [ CryptReleaseContext@IAT ]
mov [ esi + 0x4 ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10005780
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax + 0x8 ]
lea ecx [ eax + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push edi
call edx
mov edi [ ebp + 0xc ]
mov ecx [ edi + 0x4 ]
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0x0
push eax
push esi
push ecx
call [ CryptImportKey@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push eax
push edi
push ecx
call sub_10005a70
pop edi
pop esi
pop ebp
retn 0xc
pop edi
pop esi
pop ebp
retn 0xc
sub_100057d0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ebx ecx
push 0x31415352
mov ecx esi
call edx
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax + 0xc ]
lea ecx [ esi + 0x4 ]
push edi
mov edi [ esi + 0x8 ]
call edx
mov edx [ ebx + 0x4 ]
lea ecx [ ebp + 0x8 ]
push ecx
push 0x0
push 0x0
push eax
push edi
push edx
call [ CryptImportKey@IAT ]
test eax eax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push eax
push ecx
call sub_10005590
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_10005840
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003af80
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
xor ebx ebx
cmp eax ebx
je r-xdata
xor eax eax
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
lea ecx [ esp + 0x18 ]
push ecx
push ebx
push 0x40
push eax
mov [ esp + 0x28 ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x38 ] ebx
call [ CryptAcquireCertificatePrivateKey@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ ebp + 0xc ]
push edx
lea edi [ esp + 0x18 ]
mov [ esp + 0x18 ] ebx
call sub_10005380
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
test al 0x1
je r-xdata
call [ GetLastError@IAT ]
cmp [ esp + 0x20 ] ebx
je r-xdata
mov edx [ esp + 0x14 ]
mov edi [ CryptSignHashW@IAT ]
lea ecx [ esp + 0x1c ]
push ecx
push ebx
push ebx
push ebx
push eax
push edx
mov [ esp + 0x34 ] ebx
call edi
test eax eax
je r-xdata
test al 0x2
je r-xdata
mov eax [ esp + 0x10 ]
push ebx
push eax
call [ CryptReleaseContext@IAT ]
jmp r-xdata
call [ GetLastError@IAT ]
cmp [ esp + 0x20 ] ebx
je r-xdata
mov eax [ esp + 0x1c ]
cmp eax ebx
je r-xdata
mov eax 0x2
mov [ esp + 0x18 ] eax
mov edx [ esp + 0x14 ]
push edx
call [ CryptDestroyHash@IAT ]
mov ecx [ esp + 0x10 ]
push ebx
push ecx
call [ CryptReleaseContext@IAT ]
push eax
call sub_1002e957
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
add esp 0x4
mov esi eax
lea eax [ esp + 0x1c ]
push eax
push esi
push ebx
push ebx
push ecx
push edx
call edi
mov edi eax
cmp [ esp + 0x20 ] ebx
je r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call [ CryptDestroyHash@IAT ]
cmp edi ebx
jne r-xdata
mov eax [ esp + 0x10 ]
push ebx
push eax
call [ CryptReleaseContext@IAT ]
mov edx [ esp + 0x1c ]
mov [ esp + 0x3c ] r--data
mov [ esp + 0x40 ] esi
mov [ esp + 0x44 ] edx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x4c ] 0x1
lea esi [ esp + 0x3c ]
mov [ esp + 0x60 ] ebx
call sub_10009ff0
test eax eax
jne r-xdata
push esi
call sub_1002e8fb
add esp 0x4
jmp r-xdata
mov ecx [ esp + 0x44 ]
lea eax [ esp + 0x3c ]
mov [ esp + 0x28 ] r--data
mov [ esp + 0x2c ] eax
mov [ esp + 0x34 ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x38 ] ecx
mov eax [ ebp + 0x10 ]
lea edx [ esp + 0x28 ]
mov [ esp + 0x60 ] 0x1
mov [ esp + 0x24 ] edx
push eax
mov ecx 0x1
lea edx [ esp + 0x28 ]
call sub_1000ad60
add esp 0x4
mov [ esp + 0x28 ] r--data
lea ecx [ esp + 0x3c ]
test eax eax
je r-xdata
mov ecx esi
call sub_1000a130
jmp r-xdata
call sub_1000a130
mov eax 0x1
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_10005a70
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003af50
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
xor esi esi
mov edi r--data
mov ebx 0x1
mov [ esp + 0x3c ] edi
mov [ esp + 0x40 ] esi
mov [ esp + 0x44 ] esi
mov [ esp + 0x50 ] esi
mov [ esp + 0x4c ] esi
mov [ esp + 0x48 ] ebx
mov [ esp + 0x60 ] esi
lea eax [ esp + 0x3c ]
mov [ esp + 0x28 ] r--data
mov [ esp + 0x2c ] eax
mov [ esp + 0x34 ] esi
mov [ esp + 0x30 ] esi
mov [ esp + 0x38 ] 0xffffffff
lea ecx [ esp + 0x28 ]
mov [ esp + 0x14 ] r--data
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] ebx
push ebx
lea ecx [ esp + 0x18 ]
lea edx [ ebp + 0x10 ]
mov [ esp + 0x64 ] 0x2
call sub_1000ae20
add esp 0x4
mov [ esp + 0x60 ] bl
cmp [ esp + 0x1c ] esi
jne r-xdata
mov ebx [ esp + 0x44 ]
lea eax [ esp + 0x3c ]
mov [ esp + 0x14 ] r--data
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] esi
mov [ esp + 0x24 ] ebx
mov [ esp + 0x60 ] 0x3
push ebx
mov [ esp + 0x24 ] esi
call sub_1002e957
add esp 0x4
mov edi eax
push ebx
push edi
lea ecx [ esp + 0x1c ]
call sub_1000ab90
cmp ebx eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call [ CryptDestroyKey@IAT ]
mov [ esp + 0x28 ] r--data
mov [ esp + 0x3c ] edi
cmp [ esp + 0x4c ] esi
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
push esi
push esi
push eax
mov eax [ edx + 0x10 ]
call eax
push eax
push edi
push ebx
call [ CryptVerifySignatureW@IAT ]
mov ebx eax
cmp ebx esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call [ CryptDestroyKey@IAT ]
lea ecx [ esp + 0x3c ]
mov [ esp + 0x28 ] r--data
call sub_1000a130
xor eax eax
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
xor eax eax
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
cmp [ esp + 0x48 ] esi
jne r-xdata
push edi
call sub_1002e8fb
mov ecx [ ebp + 0x8 ]
add esp 0x4
push ecx
call [ CryptDestroyKey@IAT ]
lea ecx [ esp + 0x3c ]
mov [ esp + 0x28 ] r--data
call sub_1000a130
mov eax ebx
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
call [ GetLastError@IAT ]
mov eax [ esp + 0x40 ]
cmp eax esi
je r-xdata
cmp [ esp + 0x50 ] esi
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
sub_10005c40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
sub esp 0xc
test eax eax
jne r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
lea ecx [ ebp + 0x8 ]
push ecx
push 0x0
push 0x40
push eax
mov [ ebp + 0x8 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
call [ CryptAcquireCertificatePrivateKey@IAT ]
test eax eax
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
push esi
lea edx [ ebp - 0xc ]
push edx
push eax
push ecx
call [ CryptGetUserKey@IAT ]
mov esi [ CryptReleaseContext@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
push edi
mov edi [ ebp - 0xc ]
push eax
push ecx
call sub_10005cf0
cmp [ ebp - 0x4 ] 0x0
pop edi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp + 0x8 ]
push 0x0
push edx
call esi
mov edx [ ebp + 0x8 ]
push 0x0
push edx
call esi
sub_10005cf0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003c758
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
xor esi esi
mov ebx 0x1
mov [ esp + 0x54 ] r--data
mov [ esp + 0x58 ] esi
mov [ esp + 0x5c ] esi
mov [ esp + 0x68 ] esi
mov [ esp + 0x64 ] esi
mov [ esp + 0x60 ] ebx
mov [ esp + 0x78 ] esi
lea eax [ esp + 0x54 ]
mov [ esp + 0x2c ] r--data
mov [ esp + 0x30 ] eax
mov [ esp + 0x38 ] esi
mov [ esp + 0x34 ] esi
mov [ esp + 0x3c ] 0xffffffff
lea ecx [ esp + 0x2c ]
mov [ esp + 0x14 ] r--data
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] ebx
push edx
mov edx [ ebp + 0x8 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x7c ] 0x2
call sub_1000ae20
add esp 0x4
mov [ esp + 0x78 ] bl
cmp [ esp + 0x1c ] esi
jne r-xdata
mov ecx [ esp + 0x5c ]
lea eax [ esp + 0x54 ]
mov [ esp + 0x40 ] r--data
mov [ esp + 0x44 ] eax
mov [ esp + 0x4c ] esi
mov [ esp + 0x48 ] esi
mov [ esp + 0x50 ] ecx
mov eax [ ebp + 0xc ]
lea edx [ esp + 0x40 ]
mov [ esp + 0x10 ] edx
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] esi
mov [ esp + 0x28 ] ebx
mov [ esp + 0x14 ] r--data
push ebx
lea ecx [ esp + 0x18 ]
lea edx [ esp + 0x14 ]
mov [ esp + 0x7c ] 0x4
call sub_1000ae20
add esp 0x4
push edi
call [ CryptDestroyKey@IAT ]
mov [ esp + 0x40 ] r--data
mov [ esp + 0x2c ] r--data
mov [ esp + 0x54 ] r--data
cmp [ esp + 0x64 ] esi
je r-xdata
push edi
call [ CryptDestroyKey@IAT ]
mov [ esp + 0x2c ] r--data
mov [ esp + 0x54 ] r--data
cmp [ esp + 0x64 ] esi
je r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esp + 0x60 ] esi
jne r-xdata
xor eax eax
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esp + 0x60 ] esi
jne r-xdata
mov eax [ esp + 0x58 ]
cmp eax esi
je r-xdata
cmp [ esp + 0x68 ] esi
jne r-xdata
mov eax [ esp + 0x58 ]
cmp eax esi
je r-xdata
cmp [ esp + 0x68 ] esi
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
push eax
call sub_1002e8fb
add esp 0x4
sub_10005ea0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ecx + 0x4 ]
lea edx [ ebp + 0x8 ]
push edx
add eax 0x38
push eax
push 0x10001
push ecx
call [ CryptImportPublicKeyInfo@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0x10
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0x10 ]
push eax
call sub_10005590
pop edi
pop ebp
retn 0x10
sub_10005ef0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x1c ]
test ecx ecx
jne r-xdata
mov ecx [ ecx + 0xc ]
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
lea edx [ ebp + 0x8 ]
push edx
add ecx 0x38
push ecx
push 0x10001
push eax
call [ CryptImportPublicKeyInfo@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push edx
push esi
push eax
call sub_10005a70
pop esi
pop ebp
retn 0xc
pop esi
pop ebp
retn 0xc
sub_10005f60
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] r--data
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x4 ] r--data
mov [ esi ] r--data
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x8 ] 0x0
sub_10005fc0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003af08
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x58 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx + 0x20 ]
mov eax [ edx + 0xc ]
lea ecx [ ebx + 0x4 ]
add edi 0x14
call eax
cmp eax edi
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov eax 0x1
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x24 ]
add edx edx
add edx edx
add edx edx
mov [ esp + 0x60 ] edx
xor edx edx
lea ecx [ ebx + 0x4 ]
mov [ esp + 0x24 ] 0x206
mov [ esp + 0x28 ] 0xa400
mov [ esp + 0x5c ] 0x31415352
mov [ esp + 0x64 ] eax
mov [ esp + 0x10 ] r--data
mov [ esp + 0x14 ] ecx
mov [ esp + 0x1c ] edx
mov [ esp + 0x18 ] edx
mov [ esp + 0x20 ] edi
mov eax 0x8
mov [ esp + 0x78 ] edx
cmp edi eax
jae r-xdata
mov [ ebx + 0x10 ] 0x1
mov eax [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
push eax
call sub_1002e957
add esp 0x4
mov [ ebx + 0x8 ] eax
test eax eax
je r-xdata
mov esi [ ecx ]
push edx
push eax
mov eax [ esi + 0x8 ]
lea edx [ esp + 0x2c ]
push edx
call eax
mov edx [ esp + 0x18 ]
add edx eax
mov [ esp + 0x18 ] edx
cmp eax 0x8
jne r-xdata
mov eax edi
xor eax eax
jmp r-xdata
mov ecx [ ebx + 0xc ]
push ecx
push edi
push eax
call sub_10033950
add esp 0xc
mov [ ebx + 0x14 ] 0x1
mov ecx [ esp + 0x20 ]
lea esi [ edx + 0xc ]
mov eax 0xc
cmp esi ecx
jbe r-xdata
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x58 ]
xor ecx esp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
add edx [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
mov esi [ ecx ]
push edx
push eax
mov eax [ esi + 0x8 ]
lea edx [ esp + 0x64 ]
push edx
call eax
add [ esp + 0x18 ] eax
cmp eax 0xc
jne r-xdata
sub ecx edx
mov eax ecx
mov eax [ ebx + 0x20 ]
mov ebx [ ebx + 0x1c ]
mov [ esp + 0x38 ] eax
xor eax eax
mov [ esp + 0x30 ] r--data
mov [ esp + 0x34 ] ebx
mov [ esp + 0x44 ] eax
mov [ esp + 0x40 ] eax
mov [ esp + 0x3c ] 0x1
lea esi [ esp + 0x30 ]
mov [ esp + 0x78 ] 0x1
call sub_10009ff0
mov ecx esi
test eax eax
jne r-xdata
mov edx [ esp + 0x38 ]
xor eax eax
mov [ esp + 0x48 ] r--data
mov [ esp + 0x4c ] ecx
mov [ esp + 0x54 ] eax
mov [ esp + 0x50 ] eax
mov [ esp + 0x58 ] edx
lea ecx [ esp + 0x10 ]
lea eax [ esp + 0x48 ]
push ecx
mov [ esp + 0x7c ] 0x2
mov ecx 0x1
lea edx [ esp + 0x30 ]
mov [ esp + 0x30 ] eax
call sub_1000ad60
add esp 0x4
mov [ esp + 0x48 ] r--data
lea ecx [ esp + 0x30 ]
test eax eax
je r-xdata
call sub_1000a130
call sub_1000a130
sub_100061c0
push ebp
mov ebp esp
push esi
push edi
push 0x28
call sub_1002e957
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
xor esi esi
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x18 ] edi
mov [ eax + 0x14 ] edi
mov [ eax + 0x10 ] 0x1
mov [ eax + 0x1c ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] ecx
mov esi eax
jmp r-xdata
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
mov ecx esi
call sub_10005fc0
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
sub_10006240
push esi
push 0x14
mov esi ecx
call sub_1002e957
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
xor eax eax
pop esi
retn
add esi 0x4
mov [ eax + 0x4 ] esi
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] 0x14
pop esi
retn
sub_10006280
push ebp
mov ebp esp
push 0xffffffff
push sub_1003aecb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
push 0x18
call sub_1002e957
mov esi eax
xor edi edi
add esp 0x4
cmp esi edi
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
add eax 0x60
mov [ esi + 0x4 ] eax
mov eax 0x1
mov [ esi ] r--data
mov [ esi + 0x8 ] 0xc
mov [ esi + 0xc ] edi
mov [ esi + 0x14 ] eax
mov [ esi + 0x10 ] eax
call sub_10009ff0
mov ecx esi
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
call edx
mov [ ebp - 0x30 ] r--data
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] 0xffffffff
mov [ ebp - 0x4 ] edi
mov eax [ ebx + 0x8 ]
mov edi [ eax + 0x64 ]
push 0x14
shr edi 0x3
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor eax eax
add ebx 0x4
mov [ eax ] r--data
mov [ eax + 0x4 ] ebx
mov [ eax + 0xc ] 0x0
mov [ eax + 0x8 ] 0x14
mov [ eax + 0x10 ] edi
jmp r-xdata
push 0x18
call sub_1002e957
mov edi eax
add esp 0x4
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] 0x2
cmp edi ebx
je r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
mov ecx [ ebp - 0x10 ]
cmp ecx ebx
je r-xdata
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x1c ] r--data
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x1
push 0x1
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000ae20
xor ebx ebx
add esp 0x4
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] ebx
jne r-xdata
xor edi edi
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx + 0xc ]
mov ecx esi
call eax
mov [ edi + 0xc ] eax
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebx
mov [ edi + 0x10 ] ebx
mov [ edi ] r--data
mov [ edi + 0x14 ] esi
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
jmp r-xdata
mov eax [ edx ]
push 0x1
call eax
sub_10006420
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push edi
mov edi ecx
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
push eax
call sub_1002e957
mov ebx [ esi ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0x10 ]
add esp 0x4
mov ecx esi
call eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebx + 0x14 ]
push eax
push ecx
mov ecx esi
call edx
mov ebx eax
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
cmp eax ebx
je r-xdata
mov eax [ edi + 0xc ]
mov edx [ esi ]
mov [ ebp - 0x4 ] eax
mov eax [ edx + 0x10 ]
mov ecx esi
call eax
mov edi eax
lea ebx [ edi + 0xc ]
push ebx
mov [ ebp - 0xc ] 0x208
call sub_1002e957
mov edx [ ebp - 0xc ]
mov esi eax
mov eax [ ebp - 0x4 ]
push edi
mov [ esi + 0x8 ] edi
mov edi [ ebp + 0x8 ]
lea ecx [ esi + 0xc ]
push edi
push ecx
mov [ esi ] edx
mov [ esi + 0x4 ] eax
call sub_10033950
push 0x8
push ebx
push esi
call sub_10006da0
push esi
mov ebx eax
call sub_1002e8fb
push edi
call sub_1002e8fb
add esp 0x24
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_100064e0
cmp [ edi + 0x4 ] 0x0
push esi
lea esi [ edi + 0x4 ]
je r-xdata
mov eax [ edi + 0x8 ]
push ebx
mov ebx [ CryptAcquireContextW@IAT ]
push 0xf0000040
push eax
push 0x0
push 0x0
push esi
call ebx
test eax eax
jne r-xdata
mov eax 0x1
pop esi
retn
pop ebx
mov eax 0x1
pop esi
retn
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
mov ecx [ edi + 0x8 ]
push 0xf0000048
push ecx
push 0x0
push 0x0
push esi
call ebx
test eax eax
jne r-xdata
pop ebx
pop esi
retn
sub_10006540
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0xc ]
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ecx + 0x4 ]
push 0x1
push edx
push eax
call [ CryptGenKey@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
push esi
call sub_10006670
mov ecx [ ebp - 0x4 ]
push ecx
mov esi eax
call [ CryptDestroyKey@IAT ]
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov esp ebp
pop ebp
retn
sub_10006580
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003c708
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi [ ebp + 0x8 ]
mov ecx [ edi + 0xc ]
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push ecx
mov ecx esi
call edx
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax + 0xc ]
lea ecx [ esi + 0x4 ]
call edx
mov esi [ esi + 0x8 ]
mov edx [ edi + 0x4 ]
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
push 0x0
push eax
push esi
push edx
call [ CryptImportKey@IAT ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov [ esp + 0x18 ] eax
mov eax 0x1
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x28 ] eax
mov [ esp + 0x14 ] r--data
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x3c ] 0x0
call sub_1000ae20
mov eax [ esp + 0x14 ]
add esp 0x4
push eax
call [ CryptDestroyKey@IAT ]
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_10006670
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ CryptExportKey@IAT ]
push edi
mov edi eax
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x0
push 0x8
push 0x0
push edi
mov [ ebp - 0x4 ] 0x0
call ebx
test eax eax
je r-xdata
call [ GetLastError@IAT ]
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push esi
push eax
call sub_1002e957
add esp 0x4
lea ecx [ ebp - 0x4 ]
push ecx
mov esi eax
push esi
push 0x0
push 0x8
push 0x0
push edi
call ebx
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
push 0x8
push edx
push esi
call sub_10006da0
push esi
mov edi eax
call sub_1002e8fb
add esp 0x10
pop esi
mov eax edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push esi
call sub_1002e8fb
add esp 0x4
pop esi
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub_10006700
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
push 0x0
push eax
call [ CryptReleaseContext@IAT ]
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10006740
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push edi
mov edi ecx
mov ecx [ edi + 0xc ]
push ecx
mov ecx esi
call edx
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
mov edx [ eax + 0xc ]
lea ecx [ esi + 0x4 ]
call edx
mov esi [ esi + 0x8 ]
mov edx [ edi + 0x4 ]
lea ecx [ ebp + 0x8 ]
push ecx
push 0x0
push 0x0
push eax
push esi
push edx
call [ CryptImportKey@IAT ]
test eax eax
je r-xdata
push 0x24
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor esi esi
mov ecx [ ebp + 0x8 ]
mov esi eax
call sub_10006920
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_10006970
test eax eax
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
sub_100067d0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
push eax
mov [ esi ] r--data
call [ CryptDestroyKey@IAT ]
mov [ esi + 0x1c ] 0x0
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] r--data
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x4 ] r--data
mov [ esi ] r--data
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x8 ] 0x0
sub_10006840
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003c6e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x48 ]
mov [ fs : 0x0 ] eax
mov edi ecx
xor ebx ebx
cmp [ edi + 0x20 ] ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx [ eax + 0xc ]
lea esi [ edi + 0x4 ]
mov ecx esi
call edx
mov [ esp + 0x18 ] r--data
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] eax
mov ecx [ ebp + 0x8 ]
mov [ esp + 0x50 ] ebx
mov edi [ edi + 0x1c ]
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] eax
mov eax 0x1
mov [ esp + 0x30 ] ecx
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] edi
mov [ esp + 0x3c ] ebx
mov [ esp + 0x40 ] eax
mov [ esp + 0x2c ] r--data
push eax
lea ecx [ esp + 0x30 ]
lea edx [ esp + 0x18 ]
mov [ esp + 0x54 ] al
call sub_1000ae20
mov eax [ esp + 0x38 ]
add esp 0x4
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebx + 0x1 ]
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10006920
push ebp
mov ebp esp
push ecx
xor edx edx
mov [ esi ] r--data
push edx
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] edx
mov [ esi + 0x18 ] edx
mov [ esi + 0x14 ] edx
lea eax [ esi + 0x20 ]
mov [ esi + 0x4 ] r--data
mov [ esi + 0x10 ] 0x1
mov [ eax ] edx
lea edx [ ebp - 0x4 ]
push edx
push eax
push 0x8
push ecx
mov [ esi + 0x1c ] ecx
mov [ ebp - 0x4 ] 0x4
call [ CryptGetKeyParam@IAT ]
mov eax esi
mov esp ebp
pop ebp
retn
sub_10006970
cmp [ esi + 0x10 ] 0x0
je r-xdata
cmp [ esi + 0x18 ] 0x0
push edi
je r-xdata
mov eax 0x1
retn
mov [ esi + 0x10 ] 0x1
mov eax 0x1
pop edi
retn
mov eax [ esi + 0xc ]
mov edi [ esi + 0x8 ]
push eax
call sub_1002e957
add esp 0x4
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
xor eax eax
pop edi
retn
mov ecx [ esi + 0xc ]
push ecx
push edi
push eax
call sub_10033950
add esp 0xc
mov [ esi + 0x14 ] 0x1
sub_100069c0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003c6a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x48 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x10 ] esi
xor eax eax
cmp [ esi + 0x20 ] eax
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
mov ecx ebx
call eax
mov edx [ ebx ]
mov eax [ edx + 0x10 ]
mov ecx ebx
add esi 0x4
call eax
mov edx [ esi ]
mov edi eax
mov eax [ edx + 0xc ]
mov ecx esi
call eax
mov ecx [ esp + 0x10 ]
add edi eax
xor edx edx
mov eax edi
div [ ecx + 0x20 ]
mov ecx esi
sub edi edx
mov edx [ esi ]
mov eax [ edx + 0xc ]
mov [ esp + 0x14 ] edi
call eax
cmp edi eax
jbe r-xdata
mov esi [ esi + 0x1c ]
mov ecx [ ebp + 0xc ]
mov [ esp + 0x30 ] ecx
mov [ esp + 0x34 ] 0x1
mov [ esp + 0x38 ] esi
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] eax
mov [ esp + 0x2c ] r--data
push 0x1
lea ecx [ esp + 0x30 ]
lea edx [ ebp + 0x8 ]
mov [ esp + 0x54 ] eax
call sub_1000ae20
mov eax [ esp + 0x38 ]
add esp 0x4
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test edi edi
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0xc ]
mov ecx esi
call eax
mov edx [ esi ]
sub edi eax
mov eax [ edx + 0xc ]
mov ecx esi
call eax
mov [ esp + 0x18 ] r--data
mov [ esp + 0x1c ] esi
mov [ esp + 0x24 ] eax
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x28 ] edi
lea ecx [ esp + 0x18 ]
push ecx
mov eax edi
mov [ esp + 0x54 ] 0x1
call sub_1000adc0
add esp 0x4
test eax eax
jne r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x10 ]
mov ecx ebx
call eax
mov edx [ ebx ]
mov edi eax
mov eax [ edx + 0xc ]
mov ecx ebx
call eax
cmp eax edi
jae r-xdata
mov edx [ esi ]
mov eax [ edx + 0xc ]
mov ecx esi
call eax
xor edi edi
mov [ esp + 0x18 ] r--data
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] edi
mov [ esp + 0x28 ] edi
mov [ esp + 0x24 ] eax
mov edx [ esp + 0x10 ]
mov [ esp + 0x50 ] 0x2
mov eax [ edx + 0x1c ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x14 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esp + 0x30 ] ecx
mov [ esp + 0x34 ] 0x1
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] edi
mov [ esp + 0x40 ] edi
mov [ esp + 0x2c ] r--data
push 0x1
lea ecx [ esp + 0x30 ]
lea edx [ esp + 0x18 ]
mov [ esp + 0x54 ] 0x3
call sub_1000ae20
add esp 0x4
mov [ esp + 0x50 ] 0x2
cmp [ esp + 0x34 ] edi
je r-xdata
mov [ esp + 0x50 ] 0xffffffff
mov edi [ esp + 0x14 ]
xor eax eax
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax 0x1
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esi ]
mov eax [ edx + 0xc ]
mov ecx esi
call eax
mov [ esp + 0x2c ] r--data
mov [ esp + 0x30 ] esi
mov [ esp + 0x38 ] eax
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x3c ] 0xffffffff
mov [ esp + 0x50 ] 0x4
mov edx [ ebx ]
mov eax [ edx + 0x10 ]
mov ecx ebx
call eax
mov edx [ ebx ]
mov esi eax
mov eax [ edx + 0xc ]
mov ecx ebx
call eax
sub esi eax
lea ecx [ esp + 0x2c ]
push ecx
mov eax esi
call sub_1000adc0
add esp 0x4
test eax eax
je r-xdata
call sub_1000a040
mov [ esp + 0x50 ] 0xffffffff
sub_10006c30
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] r--data
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x4 ] r--data
mov [ esi ] r--data
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x8 ] 0x0
sub_10006c90
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x10 ] 0x0
push edi
jne r-xdata
mov edx esi
cmp [ edx + 0x1c ] 0x8
jne r-xdata
cmp [ esi + 0x18 ] 0x0
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
mov edx [ eax + 0xc ]
lea ecx [ esi + 0x4 ]
call edx
cmp eax 0xc
sbb eax eax
pop edi
inc eax
pop esi
pop ebp
retn 0x4
mov [ esi + 0x10 ] 0x1
mov eax [ esi + 0xc ]
mov edi [ esi + 0x8 ]
push eax
call sub_1002e957
add esp 0x4
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
push ecx
push edi
push eax
call sub_10033950
add esp 0xc
mov [ esi + 0x14 ] 0x1
sub_10006d00
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
push edi
mov edi [ eax + 0x8 ]
push 0x14
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
retn
add esi 0x4
mov [ eax + 0xc ] edi
pop edi
mov [ eax + 0x4 ] esi
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x10 ] 0xc
pop esi
retn
sub_10006d60
push esi
push 0x14
mov esi ecx
call sub_1002e957
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
xor eax eax
pop esi
retn
add esi 0x4
mov [ eax + 0x4 ] esi
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] 0x8
pop esi
retn
sub_10006da0
push ebp
mov ebp esp
push esi
push 0x20
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor esi esi
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] r--data
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] 0x0
mov [ eax + 0x18 ] 0x1
mov [ eax + 0x14 ] 0x1
mov [ eax + 0x1c ] ecx
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push esi
call sub_10006c90
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
sub_10006e10
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov eax [ edi ]
mov edx [ eax + 0x4 ]
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x10 ]
mov ecx edi
call edx
lea ebx [ eax + 0x5 ]
push ebx
mov [ ebp - 0x4 ] eax
call sub_1002e957
mov esi eax
add esp 0x4
test esi esi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov eax [ edi ]
mov edx [ eax + 0x14 ]
push ecx
push esi
mov ecx edi
call edx
mov ecx [ ebp - 0x4 ]
cmp ecx eax
je r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov dl [ edi + 0x4 ]
mov [ esi + ecx ] eax
mov [ esi + ecx + 0x4 ] dl
xor ecx ecx
lea eax [ ebx + ebx + 0x1 ]
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1002e957
mov edi eax
add esp 0x4
test edi edi
je r-xdata
push esi
call sub_1002e8fb
add esp 0x4
xor eax eax
test ebx ebx
je r-xdata
push esi
call sub_1002e8fb
add esp 0x4
xor edx edx
mov [ edi + ebx * 4 ] dx
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
nop
mov cl [ eax + esi ]
sar cl 0x4
and cl 0xf
mov dl 0x9
cmp dl cl
sbb dl dl
and dl 0x27
add dl 0x30
add dl cl
movzx ecx dl
mov [ edi + eax * 4 ] cx
mov cl [ eax + esi ]
and cl 0xf
mov dl 0x9
cmp dl cl
sbb dl dl
and dl 0x27
add dl 0x30
add dl cl
movzx ecx dl
mov [ edi + eax * 4 + 0x2 ] cx
inc eax
cmp eax ebx
jb r-xdata
sub_10006f20
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax ecx
mov ecx [ eax + 0xc ]
cmp edx 0x1
jne r-xdata
cmp edx 0x2
jne r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ ecx ]
mov edx [ ebp + 0xc ]
mov eax [ eax + 0x30 ]
push edx
call eax
pop ebp
retn 0x8
mov eax [ ecx ]
mov edx [ ebp + 0xc ]
mov eax [ eax + 0x30 ]
push edx
call eax
pop ebp
retn 0x8
mov ecx [ eax + 0x10 ]
sub_10006f60
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx [ eax + 0x10 ]
mov ecx ebx
call edx
cmp eax 0x20
ja r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x4 ]
push esi
push edi
mov ecx ebx
call edx
xor esi esi
lea edi [ ebp - 0x24 ]
mov edi edi
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
inc esi
add edi eax
cmp esi 0x8
jb r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x14 ]
push 0x4
push edi
mov ecx ebx
call edx
cmp eax 0x4
jne r-xdata
cmp [ ebp - 0x8 ] 0x59843204
je r-xdata
xor esi esi
xor edi edi
mov [ ebp - 0x28 ] 0x20
xor eax eax
add esi [ ebp + eax * 4 - 0x24 ]
add edi [ ebp + eax * 4 - 0x20 ]
add eax 0x2
cmp eax 0x6
jb r-xdata
cmp eax 0x7
jae r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x10 ]
mov ecx ebx
call edx
add edi esi
add edi [ ebp - 0x28 ]
xor ecx ecx
cmp eax edi
sete cl
pop edi
pop esi
mov eax ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov eax [ ebp + eax * 4 - 0x24 ]
add eax 0x20
mov [ ebp - 0x28 ] eax
sub_10007030
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ ebp - 0x28 ] ebx
mov esi edx
mov [ ebp - 0x44 ] 0xbd
mov [ ebp - 0x2c ] 0x1eb477
mov [ ebp - 0x34 ] 0x1f6c62
mov [ ebp - 0x3c ] 0x3b0
mov [ ebp - 0x40 ] 0x14c53
mov [ ebp - 0x38 ] 0x17ced
mov [ ebp - 0x30 ] 0x43818
lea ecx [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax ecx
mov ecx esi
sar eax 0x1
lea edi [ ecx + 0x2 ]
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx edi
sar ecx 0x1
lea eax [ ecx + eax + 0x2 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1002e957
mov edx [ ebx + 0x4 ]
add esp 0x4
mov edi eax
movzx ecx [ edx ]
mov [ edi ] cx
add edx 0x2
add edi 0x2
test cx cx
jne r-xdata
lea edi [ eax - 0x2 ]
lea ebx [ ebx ]
mov cx [ edi + 0x2 ]
add edi 0x2
test cx cx
jne r-xdata
mov ecx [ r--data ]
mov [ edi ] ecx
mov ecx esi
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx esi
mov edx ecx
lea edi [ eax - 0x2 ]
jmp r-xdata
mov cx [ edi + 0x2 ]
add edi 0x2
test cx cx
jne r-xdata
mov ecx edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call sub_1000a930
mov [ ebx + 0x20 ] eax
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov edx [ eax ]
mov edx [ edx + 0x4 ]
push 0x0
push 0x20
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx eax
call edx
cmp eax 0x20
jne r-xdata
lea edx [ eax - 0x1f ]
xor eax eax
xor edx edx
inc eax
cmp eax 0x20
jb r-xdata
mov [ ebp - 0x8 ] ecx
mov ecx [ ebx + 0x20 ]
push 0x0
mov [ ebp - 0x24 ] 0x43818
mov [ ebp - 0x20 ] 0x17ced
mov [ ebp - 0x1c ] 0x14c53
mov [ ebp - 0x18 ] 0x3b0
mov [ ebp - 0x14 ] 0x1f6c62
mov [ ebp - 0x10 ] 0x1eb477
mov [ ebp - 0xc ] 0xbd
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
push 0x20
lea eax [ ebp - 0x24 ]
push eax
call edx
cmp eax 0x20
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x38 ] edx
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x3c ] edx
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x2c ] edx
mov [ ebx + 0x28 ] eax
cmp eax ecx
je r-xdata
cmp [ ebp + eax - 0x24 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x44 ]
add eax [ ebp - 0x2c ]
mov edx [ ebp - 0x30 ]
add eax [ ebp - 0x34 ]
mov edi [ ebp - 0x28 ]
add eax [ ebp - 0x3c ]
mov esi [ edi + 0x20 ]
add eax [ ebp - 0x38 ]
add eax [ ebp - 0x40 ]
lea ebx [ eax + edx + 0x20 ]
call sub_1000a680
test eax eax
je r-xdata
mov ecx 0x59843204
mov [ ebx + 0x28 ] ecx
test edx edx
jne r-xdata
mov esi [ ebp - 0x30 ]
push 0x20
add esi 0x20
call sub_1002e957
mov ecx eax
xor ebx ebx
add esp 0x4
cmp ecx ebx
je r-xdata
xor ecx ecx
mov eax [ edi + 0x4 ]
mov [ ebp - 0x28 ] eax
mov eax [ edi + 0x20 ]
mov [ ecx ] r--data
mov [ ecx + 0x8 ] eax
mov eax 0xf0f0f0f1
mul [ ebp - 0x38 ]
shr edx 0x5
mov [ ecx + 0x10 ] edx
mov edx [ ebp - 0x28 ]
mov [ ecx + 0x4 ] r--data
mov [ ecx + 0xc ] esi
mov [ ecx + 0x14 ] 0x9
mov [ ecx + 0x1c ] edx
mov [ ecx + 0x18 ] ecx
jmp r-xdata
xor ecx ecx
mov eax [ edi + 0x4 ]
mov [ ebp - 0x28 ] eax
mov eax [ edi + 0x20 ]
mov [ ecx ] r--data
mov [ ecx + 0x8 ] eax
mov eax 0xf0f0f0f1
mul [ ebp - 0x40 ]
shr edx 0x5
mov [ ecx + 0x10 ] edx
mov edx [ ebp - 0x28 ]
mov [ ecx + 0x4 ] r--data
mov [ ecx + 0xc ] esi
mov [ ecx + 0x14 ] 0x9
mov [ ecx + 0x1c ] edx
mov [ ecx + 0x18 ] ecx
jmp r-xdata
add esi [ ebp - 0x38 ]
push 0x20
mov [ edi + 0x8 ] ecx
call sub_1002e957
mov ecx eax
add esp 0x4
cmp ecx ebx
je r-xdata
xor ecx ecx
mov eax [ edi + 0x4 ]
mov [ ebp - 0x28 ] eax
mov eax [ edi + 0x20 ]
mov [ ecx ] r--data
mov [ ecx + 0x8 ] eax
mov eax 0xf0f0f0f1
mul [ ebp - 0x3c ]
shr edx 0x5
mov [ ecx + 0x10 ] edx
mov edx [ ebp - 0x28 ]
mov [ ecx + 0x4 ] r--data
mov [ ecx + 0xc ] esi
mov [ ecx + 0x14 ] 0x9
mov [ ecx + 0x1c ] edx
mov [ ecx + 0x18 ] ecx
jmp r-xdata
add esi [ ebp - 0x40 ]
push 0x20
mov [ edi + 0xc ] ecx
call sub_1002e957
mov ecx eax
add esp 0x4
cmp ecx ebx
je r-xdata
xor ecx ecx
mov eax [ edi + 0x20 ]
mov [ ecx + 0x4 ] eax
mov eax 0x51eb851f
mul [ ebp - 0x34 ]
shr edx 0x3
mov [ ecx ] r--data
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x8 ] esi
mov [ ecx + 0x10 ] ebx
mov [ ecx + 0xc ] edx
jmp r-xdata
add esi [ ebp - 0x3c ]
push 0x18
mov [ edi + 0x10 ] ecx
call sub_1002e957
mov ecx eax
add esp 0x4
cmp ecx ebx
je r-xdata
xor ecx ecx
mov eax [ edi + 0x20 ]
mov [ ecx + 0x4 ] eax
mov eax 0x51eb851f
mul [ ebp - 0x2c ]
shr edx 0x3
mov [ ecx ] r--data
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x8 ] esi
mov [ ecx + 0x10 ] ebx
mov [ ecx + 0xc ] edx
jmp r-xdata
add esi [ ebp - 0x34 ]
push 0x18
mov [ edi + 0x14 ] ecx
call sub_1002e957
mov ecx eax
add esp 0x4
cmp ecx ebx
je r-xdata
xor ecx ecx
mov eax [ edi + 0x20 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x2c ]
add eax esi
mov [ ecx + 0x8 ] eax
mov eax 0x51eb851f
mul [ ebp - 0x44 ]
shr edx 0x3
mov [ ecx ] r--data
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] ebx
mov [ ecx + 0xc ] edx
jmp r-xdata
push 0x18
mov [ edi + 0x18 ] ecx
call sub_1002e957
mov ecx eax
add esp 0x4
cmp ecx ebx
je r-xdata
cmp [ edi + 0xc ] ebx
je r-xdata
mov edx [ ebp - 0x30 ]
mov [ edi + 0x1c ] ecx
mov [ edi + 0x24 ] edx
cmp [ edi + 0x8 ] ebx
je r-xdata
cmp [ edi + 0x10 ] ebx
je r-xdata
cmp [ edi + 0x14 ] ebx
je r-xdata
cmp [ edi + 0x18 ] ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_1002e0f2
mov esp ebp
pop ebp
retn
sub_10007440
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ecx + 0xc ]
push esi
push edi
cmp dl 0x1
jne r-xdata
cmp dl 0x2
jne r-xdata
mov eax [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov edi [ ebp + 0x8 ]
mov esi [ eax ]
push ecx
sub esp 0xc
mov ecx esp
mov [ ecx ] edi
mov edi [ ebp + 0xc ]
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edx
mov edx [ esi + 0x38 ]
mov ecx eax
call edx
pop edi
pop esi
pop ebp
retn 0x10
mov eax [ ecx + 0x10 ]
sub_10007490
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ecx + 0xc ]
push esi
push edi
cmp dl 0x1
jne r-xdata
cmp dl 0x2
jne r-xdata
mov eax [ ecx + 0x8 ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ eax ]
sub esp 0xc
mov ecx esp
mov [ ecx ] edi
mov edi [ ebp + 0xc ]
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edx
mov ecx eax
mov eax [ esi + 0xc ]
call eax
pop edi
pop esi
pop ebp
retn 0xc
mov eax [ ecx + 0x10 ]
sub_100074d0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax ecx
mov ecx [ eax + 0xc ]
cmp edx 0x1
jne r-xdata
cmp edx 0x2
jne r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ ecx ]
mov edx [ ebp + 0xc ]
mov eax [ eax + 0x18 ]
push edx
call eax
pop ebp
retn 0x8
mov eax [ ecx ]
mov edx [ ebp + 0xc ]
mov eax [ eax + 0x18 ]
push edx
call eax
pop ebp
retn 0x8
mov ecx [ eax + 0x10 ]
sub_10007510
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax ecx
mov ecx [ eax + 0xc ]
cmp edx 0x1
jne r-xdata
cmp edx 0x2
jne r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0x10 ]
mov eax [ ecx ]
mov eax [ eax + 0x20 ]
push edx
mov edx [ ebp + 0xc ]
push edx
call eax
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
mov eax [ ecx ]
mov eax [ eax + 0x20 ]
push edx
mov edx [ ebp + 0xc ]
push edx
call eax
pop ebp
retn 0xc
mov ecx [ eax + 0x10 ]
sub_10007560
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10007590
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10007590
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a7b8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
je r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x4 ] edi
mov ecx [ esi + 0x18 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x14 ] edi
mov ecx [ esi + 0x1c ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x18 ] edi
mov ecx [ esi + 0x8 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x1c ] edi
mov ecx [ esi + 0xc ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x8 ] edi
mov ecx [ esi + 0x10 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0xc ] edi
mov ecx [ esi + 0x20 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x10 ] edi
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x20 ] edi
sub_10007670
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ecx + 0xc ]
push esi
push edi
cmp dl 0x1
jne r-xdata
cmp dl 0x2
jne r-xdata
mov eax [ ecx + 0x8 ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ eax ]
sub esp 0xc
mov ecx esp
mov [ ecx ] edi
mov edi [ ebp + 0xc ]
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edx
mov ecx eax
mov eax [ esi + 0x28 ]
call eax
pop edi
pop esi
pop ebp
retn 0xc
mov eax [ ecx + 0x10 ]
sub_100076b0
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ecx + 0xc ]
push esi
push edi
cmp dl 0x1
jne r-xdata
cmp dl 0x2
jne r-xdata
mov eax [ ecx + 0x8 ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ eax ]
sub esp 0xc
mov ecx esp
mov [ ecx ] edi
mov edi [ ebp + 0xc ]
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edx
mov ecx eax
mov eax [ esi + 0x14 ]
call eax
pop edi
pop esi
pop ebp
retn 0xc
mov eax [ ecx + 0x10 ]
sub_100076f0
push ebp
mov ebp esp
mov edx [ ecx + 0x18 ]
sub esp 0xc
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov edi [ ecx + 0xc ]
cmp bl 0x1
jne r-xdata
cmp bl 0x2
jne r-xdata
mov edi [ ecx + 0x8 ]
mov edx [ ecx + 0x14 ]
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
xor eax eax
mov [ esi ] eax
sub esp 0xc
mov [ esi + 0x4 ] eax
mov eax esp
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ebx
push edx
lea ebx [ ebp - 0xc ]
call sub_100098d0
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov edi [ ecx + 0x10 ]
mov edx [ ecx + 0x1c ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov edx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
mov ecx edi
mov [ eax + 0x8 ] edx
call sub_10009050
test eax eax
je r-xdata
mov [ esi ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp + 0xc ]
mov edx [ edi ]
mov edx [ edx + 0x8 ]
push 0xffffffff
sub esp 0xc
mov eax esp
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x8 ] ecx
mov ecx edi
call edx
test eax eax
jne r-xdata
mov [ esi ] 0x2
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ esi + 0x4 ] eax
pop edi
mov [ esi ] 0x0
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ esi ] 0x3
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_100077e0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax ecx
mov ecx [ eax + 0xc ]
cmp edx 0x1
jne r-xdata
cmp edx 0x2
jne r-xdata
mov ecx [ eax + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0x24 ]
call edx
pop ebp
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0x24 ]
call edx
pop ebp
retn 0x4
mov ecx [ eax + 0x10 ]
sub_10007820
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ecx + 0xc ]
push esi
push edi
cmp dl 0x1
jne r-xdata
cmp dl 0x2
jne r-xdata
mov eax [ ecx + 0x8 ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ eax ]
push 0xffffffff
sub esp 0xc
mov ecx esp
mov [ ecx ] edi
mov edi [ ebp + 0xc ]
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edx
mov ecx eax
mov eax [ esi + 0x10 ]
call eax
pop edi
pop esi
pop ebp
retn 0xc
mov eax [ ecx + 0x10 ]
sub_10007870
push esi
push 0x14
mov esi ecx
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor eax eax
pop esi
retn
mov ecx [ esi + 0x24 ]
mov esi [ esi + 0x20 ]
mov [ eax + 0x4 ] esi
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x10 ] 0x20
mov [ eax + 0xc ] ecx
pop esi
retn
sub_100078b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b830
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ecx + 0x24 ]
mov ecx [ ecx + 0x20 ]
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x20 ] 0x20
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x24 ] eax
lea ecx [ ebp - 0x2c ]
mov eax 0x1
mov [ ebp - 0x18 ] r--data
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] eax
push eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] al
call sub_1000ae20
mov eax [ ebp - 0x10 ]
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_10007940
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ecx + 0xc ]
push esi
push edi
cmp dl 0x1
jne r-xdata
cmp dl 0x2
jne r-xdata
mov eax [ ecx + 0x8 ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ eax ]
sub esp 0xc
mov ecx esp
mov [ ecx ] edi
mov edi [ ebp + 0xc ]
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edx
mov ecx eax
mov eax [ esi + 0x2c ]
call eax
pop edi
pop esi
pop ebp
retn 0xc
mov eax [ ecx + 0x10 ]
sub_10007980
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ecx + 0xc ]
push esi
push edi
cmp dl 0x1
jne r-xdata
cmp dl 0x2
jne r-xdata
mov eax [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov edi [ ebp + 0x8 ]
mov esi [ eax ]
push ecx
sub esp 0xc
mov ecx esp
mov [ ecx ] edi
mov edi [ ebp + 0xc ]
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edx
mov edx [ esi + 0x34 ]
mov ecx eax
call edx
pop edi
pop esi
pop ebp
retn 0x10
mov eax [ ecx + 0x10 ]
sub_100079d0
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ecx + 0xc ]
push edi
mov edi [ ecx + 0x18 ]
cmp dl 0x1
jne r-xdata
cmp dl 0x2
jne r-xdata
mov esi [ ecx + 0x8 ]
mov edi [ ecx + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
sub esp 0xc
mov eax esp
mov [ eax ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
call sub_10009cf0
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0x1c ]
sub esp 0xc
mov edi eax
mov eax esp
mov [ eax ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx esi
call edx
test edi edi
jne r-xdata
mov esi [ ecx + 0x10 ]
mov edi [ ecx + 0x1c ]
pop edi
xor eax eax
pop esi
pop ebp
retn 0xc
test eax eax
je r-xdata
lea eax [ edi + 0x1 ]
pop edi
pop esi
pop ebp
retn 0xc
sub_10007a50
push ebx
push esi
push edi
mov edi ecx
xor esi esi
lea eax [ edi + 0x8 ]
lea ebx [ ebx ]
mov ecx [ edi + 0x4 ]
mov eax [ edi + esi * 4 + 0x8 ]
mov edx [ ecx ]
mov edx [ edx + 0x14 ]
push eax
push esi
call edx
mov ecx [ edi + 0x4 ]
mov edx [ edi + esi * 4 + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x28 ]
push edx
push esi
call eax
add [ edi + 0x20 ] eax
inc [ edi + esi * 4 + 0x8 ]
xor eax eax
lea ecx [ edi + 0x8 ]
lea ecx [ ecx ]
inc esi
add eax 0x4
cmp esi 0x3
jb r-xdata
xor eax eax
mov [ edi + 0x24 ] eax
pop edi
pop esi
pop ebx
retn
inc eax
add ecx 0x4
cmp eax 0x3
jb r-xdata
mov ecx [ eax ]
cmp ecx [ eax + 0xc ]
jb r-xdata
xor eax eax
lea ecx [ edi + 0x8 ]
mov edx [ ecx ]
cmp edx [ ecx + 0xc ]
jb r-xdata
mov eax 0x1
mov [ edi + 0x24 ] eax
pop edi
pop esi
pop ebx
retn
inc eax
add ecx 0x4
cmp eax 0x3
jb r-xdata
mov edx [ ecx ]
cmp edx [ ecx + 0xc ]
jb r-xdata
mov eax 0x1
mov [ edi + 0x24 ] eax
pop edi
pop esi
pop ebx
retn
sub_10007af0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a788
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ esi ] r--data
mov [ esi + 0x4 ] edx
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
xor ecx ecx
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] ecx
mov [ esi + 0x1c ] ecx
lea ebx [ esi + 0x14 ]
jmp r-xdata
mov eax [ edx ]
mov ecx edx
mov edx [ eax + 0x18 ]
push edi
call edx
mov [ ebx ] eax
inc edi
add ebx 0x4
cmp edi 0x3
jb r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_10007ba0
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov edx [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x14 ]
push esi
add ecx 0x4
mov [ eax + 0x8 ] edx
call sub_100076f0
mov eax esi
pop esi
pop ebp
retn 0x10
sub_10007bd0
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ecx + 0x10 ]
push esi
push edi
cmp dl 0x1
jne r-xdata
cmp dl 0x2
jne r-xdata
mov eax [ ecx + 0xc ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ eax ]
push 0xffffffff
sub esp 0xc
mov ecx esp
mov [ ecx ] edi
mov edi [ ebp + 0xc ]
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edx
mov ecx eax
mov eax [ esi + 0x10 ]
call eax
pop edi
pop esi
pop ebp
retn 0xc
mov eax [ ecx + 0x14 ]
sub_10007c20
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ecx + 0x10 ]
push esi
push edi
cmp dl 0x1
jne r-xdata
cmp dl 0x2
jne r-xdata
mov eax [ ecx + 0xc ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ eax ]
sub esp 0xc
mov ecx esp
mov [ ecx ] edi
mov edi [ ebp + 0xc ]
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edx
mov ecx eax
mov eax [ esi + 0xc ]
call eax
pop edi
pop esi
pop ebp
retn 0xc
mov eax [ ecx + 0x14 ]
sub_10007c60
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ecx + 0x10 ]
push esi
push edi
cmp dl 0x1
jne r-xdata
cmp dl 0x2
jne r-xdata
mov eax [ ecx + 0xc ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ eax ]
sub esp 0xc
mov ecx esp
mov [ ecx ] edi
mov edi [ ebp + 0xc ]
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edx
mov ecx eax
mov eax [ esi + 0x14 ]
call eax
pop edi
pop esi
pop ebp
retn 0xc
mov eax [ ecx + 0x14 ]
sub_10007ca0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax ecx
mov ecx [ eax + 0x10 ]
cmp edx 0x1
jne r-xdata
cmp edx 0x2
jne r-xdata
mov ecx [ eax + 0xc ]
mov eax [ ecx ]
mov edx [ ebp + 0xc ]
mov eax [ eax + 0x18 ]
push edx
call eax
pop ebp
retn 0x8
mov eax [ ecx ]
mov edx [ ebp + 0xc ]
mov eax [ eax + 0x18 ]
push edx
call eax
pop ebp
retn 0x8
mov ecx [ eax + 0x14 ]
sub_10007ce0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax ecx
mov ecx [ eax + 0x10 ]
cmp edx 0x1
jne r-xdata
cmp edx 0x2
jne r-xdata
mov ecx [ eax + 0xc ]
mov eax [ ecx ]
mov edx [ eax + 0x24 ]
call edx
pop ebp
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0x24 ]
call edx
pop ebp
retn 0x4
mov ecx [ eax + 0x14 ]
sub_10007d20
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax ecx
mov ecx [ eax + 0x10 ]
cmp edx 0x1
jne r-xdata
cmp edx 0x2
jne r-xdata
mov ecx [ eax + 0xc ]
mov edx [ ebp + 0x10 ]
mov eax [ ecx ]
mov eax [ eax + 0x20 ]
push edx
mov edx [ ebp + 0xc ]
push edx
call eax
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
mov eax [ ecx ]
mov eax [ eax + 0x20 ]
push edx
mov edx [ ebp + 0xc ]
push edx
call eax
pop ebp
retn 0xc
mov ecx [ eax + 0x14 ]
sub_10007d70
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ecx + 0x10 ]
push esi
push edi
cmp dl 0x1
jne r-xdata
cmp dl 0x2
jne r-xdata
mov eax [ ecx + 0xc ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ eax ]
sub esp 0xc
mov ecx esp
mov [ ecx ] edi
mov edi [ ebp + 0xc ]
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edx
mov ecx eax
mov eax [ esi + 0x28 ]
call eax
pop edi
pop esi
pop ebp
retn 0xc
mov eax [ ecx + 0x14 ]
sub_10007db0
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ecx + 0x10 ]
push esi
push edi
cmp dl 0x1
jne r-xdata
cmp dl 0x2
jne r-xdata
mov eax [ ecx + 0xc ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ eax ]
sub esp 0xc
mov ecx esp
mov [ ecx ] edi
mov edi [ ebp + 0xc ]
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edx
mov ecx eax
mov eax [ esi + 0x2c ]
call eax
pop edi
pop esi
pop ebp
retn 0xc
mov eax [ ecx + 0x14 ]
sub_10007df0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax ecx
mov ecx [ eax + 0x10 ]
cmp edx 0x1
jne r-xdata
cmp edx 0x2
jne r-xdata
mov ecx [ eax + 0xc ]
mov eax [ ecx ]
mov edx [ ebp + 0xc ]
mov eax [ eax + 0x30 ]
push edx
call eax
pop ebp
retn 0x8
mov eax [ ecx ]
mov edx [ ebp + 0xc ]
mov eax [ eax + 0x30 ]
push edx
call eax
pop ebp
retn 0x8
mov ecx [ eax + 0x14 ]
sub_10007e30
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ecx + 0x10 ]
push esi
push edi
cmp dl 0x1
jne r-xdata
cmp dl 0x2
jne r-xdata
mov eax [ ecx + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov edi [ ebp + 0x8 ]
mov esi [ eax ]
push ecx
sub esp 0xc
mov ecx esp
mov [ ecx ] edi
mov edi [ ebp + 0xc ]
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edx
mov edx [ esi + 0x34 ]
mov ecx eax
call edx
pop edi
pop esi
pop ebp
retn 0x10
mov eax [ ecx + 0x14 ]
sub_10007e80
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ecx + 0x10 ]
push esi
push edi
cmp dl 0x1
jne r-xdata
cmp dl 0x2
jne r-xdata
mov eax [ ecx + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov edi [ ebp + 0x8 ]
mov esi [ eax ]
push ecx
sub esp 0xc
mov ecx esp
mov [ ecx ] edi
mov edi [ ebp + 0xc ]
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] edx
mov edx [ esi + 0x38 ]
mov ecx eax
call edx
pop edi
pop esi
pop ebp
retn 0x10
mov eax [ ecx + 0x14 ]
sub_10007ed0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x10 ]
add ecx 0x4
mov [ eax + 0x8 ] edx
call sub_100079d0
pop ebp
retn 0xc
sub_10007f00
push esi
push 0x14
mov esi ecx
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor eax eax
pop esi
retn
mov ecx [ esi + 0x28 ]
mov esi [ esi + 0x24 ]
mov [ eax + 0x4 ] esi
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x10 ] 0x20
mov [ eax + 0xc ] ecx
pop esi
retn
sub_10007f40
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b830
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ecx + 0x28 ]
mov ecx [ ecx + 0x24 ]
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x20 ] 0x20
mov [ ebp - 0x1c ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x2c ]
mov eax 0x1
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x18 ] r--data
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] eax
push eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] al
call sub_1000ae20
mov eax [ ebp - 0x10 ]
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_10007fe0
push esi
push edi
mov edi ecx
mov eax [ edi + 0x28 ]
mov esi 0x40000
cmp eax 0x2818
jbe r-xdata
xor esi esi
cmp eax 0x42818
jae r-xdata
pop edi
xor eax eax
pop esi
retn
mov ecx [ edi + 0x24 ]
pop edi
mov [ eax + 0x10 ] esi
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0xc ] 0x2838
mov [ eax + 0x8 ] 0x0
pop esi
retn
push 0x14
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
lea esi [ eax - 0x2818 ]
jmp r-xdata
sub_10008040
push esi
push edi
mov edi ecx
mov eax [ edi + 0x28 ]
mov esi 0x1000
cmp eax 0x42818
jbe r-xdata
xor esi esi
cmp eax 0x43818
jae r-xdata
pop edi
xor eax eax
pop esi
retn
mov ecx [ edi + 0x24 ]
pop edi
mov [ eax + 0x10 ] esi
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0xc ] 0x42838
mov [ eax + 0x8 ] 0x0
pop esi
retn
push 0x14
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
lea esi [ eax - 0x42818 ]
jmp r-xdata
sub_100080a0
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x28 ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi 0x1
cmp ebx eax
jae r-xdata
xor edi edi
lea ecx [ ebx + 0x1 ]
cmp ecx eax
jbe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
mov [ esi + 0x4 ] eax
mov al [ ebp + 0xc ]
add ebx 0x20
mov [ esi ] r--data
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] 0x0
mov [ esi + 0x10 ] edi
mov edx [ esi ]
mov edx [ edx + 0xc ]
mov [ ebp + 0xf ] al
push 0x1
lea eax [ ebp + 0xf ]
push eax
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
push 0x14
call sub_1002e957
mov esi eax
add esp 0x4
test esi esi
je r-xdata
sub eax ebx
mov edi eax
jmp r-xdata
sub_10008120
push ebp
mov ebp esp
push ebx
push esi
movzx esi [ ebp + 0x8 ]
shl esi 0xb
mov ebx ecx
mov eax [ ebx + 0x28 ]
add esi 0x18
push edi
mov edi 0x800
cmp esi eax
jae r-xdata
xor edi edi
lea ecx [ esi + 0x800 ]
cmp ecx eax
jbe r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov ecx [ ebx + 0x24 ]
add esi 0x20
mov [ eax + 0xc ] edi
pop edi
mov [ eax + 0x10 ] esi
pop esi
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebx
pop ebp
retn 0x4
push 0x14
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
sub eax esi
mov edi eax
jmp r-xdata
sub_10008190
push esi
push edi
mov edi ecx
mov eax [ edi + 0x28 ]
mov esi 0x1000
cmp eax 0x1818
jbe r-xdata
xor esi esi
cmp eax 0x2818
jae r-xdata
pop edi
xor eax eax
pop esi
retn
mov ecx [ edi + 0x24 ]
pop edi
mov [ eax + 0xc ] esi
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x10 ] 0x1838
pop esi
retn
push 0x14
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
lea esi [ eax - 0x1818 ]
jmp r-xdata
sub_100081f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003acf8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0x0
call sub_10007590
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10008260
push esi
push edi
mov edi ecx
mov eax [ edi + 0x28 ]
mov esi 0x1000
cmp eax 0x1818
jbe r-xdata
xor esi esi
cmp eax 0x2818
jae r-xdata
pop edi
xor eax eax
pop esi
retn
mov ecx [ edi + 0x24 ]
pop edi
mov [ eax + 0x10 ] esi
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0xc ] 0x1838
mov [ eax + 0x8 ] 0x0
pop esi
retn
push 0x14
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
lea esi [ eax - 0x1818 ]
jmp r-xdata
sub_100082c0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ecx + 0x28 ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] 0x0
mov edi 0x1
cmp ebx eax
jae r-xdata
xor edi edi
lea ecx [ ebx + 0x1 ]
cmp ecx eax
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x24 ]
add ebx 0x20
mov [ esi ] r--data
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x0
mov [ esi + 0x10 ] ebx
mov [ esi + 0xc ] edi
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push 0x1
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
push 0x14
call sub_1002e957
mov esi eax
add esp 0x4
test esi esi
je r-xdata
sub eax ebx
mov edi eax
jmp r-xdata
sub_10008350
push ebp
mov ebp esp
push ebx
push esi
movzx esi [ ebp + 0x8 ]
shl esi 0xb
mov ebx ecx
mov eax [ ebx + 0x28 ]
add esi 0x18
push edi
mov edi 0x800
cmp esi eax
jae r-xdata
xor edi edi
lea ecx [ esi + 0x800 ]
cmp ecx eax
jbe r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov ecx [ ebx + 0x24 ]
add esi 0x20
mov [ eax + 0x10 ] edi
pop edi
mov [ eax + 0xc ] esi
pop esi
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebx
pop ebp
retn 0x4
push 0x14
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
sub eax esi
mov edi eax
jmp r-xdata
sub_100083c0
push esi
push edi
mov edi ecx
mov eax [ edi + 0x28 ]
mov esi 0x40000
cmp eax 0x2818
jbe r-xdata
xor esi esi
cmp eax 0x42818
jae r-xdata
pop edi
xor eax eax
pop esi
retn
mov ecx [ edi + 0x24 ]
pop edi
mov [ eax + 0xc ] esi
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x10 ] 0x2838
pop esi
retn
push 0x14
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
lea esi [ eax - 0x2818 ]
jmp r-xdata
sub_10008420
push esi
push edi
mov edi ecx
mov eax [ edi + 0x28 ]
mov esi 0x1000
cmp eax 0x42818
jbe r-xdata
xor esi esi
cmp eax 0x43818
jae r-xdata
pop edi
xor eax eax
pop esi
retn
mov ecx [ edi + 0x24 ]
pop edi
mov [ eax + 0xc ] esi
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x10 ] 0x42838
pop esi
retn
push 0x14
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
lea esi [ eax - 0x42818 ]
jmp r-xdata
sub_10008590
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_100085c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c1cb
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x28
call sub_1002e957
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
push ecx
push eax
call sub_10007af0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_10008630
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b0fb
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x30
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor esi esi
mov edi [ ebp + 0x8 ]
call sub_10008820
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] ebx
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
jmp r-xdata
cmp esi ebx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10007030
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
sub_10008700
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
call sub_10008870
push 0x10
mov edi eax
call sub_1002e957
xor ebx ebx
add esp 0x4
cmp eax ebx
je r-xdata
xor esi esi
mov [ eax ] r--data
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] 0xffffffff
mov esi eax
jmp r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
push 0x1
push edi
mov ecx 0x1
call sub_1000a2f0
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_100087a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi ecx
call sub_10008870
push 0x10
mov ebx eax
call sub_1002e957
xor esi esi
add esp 0x4
cmp eax esi
je r-xdata
push 0x1
push ebx
mov ecx 0x1
call sub_1000a2f0
test eax eax
jne r-xdata
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov [ eax ] r--data
mov [ eax + 0xc ] 0xffffffff
mov esi eax
test esi esi
je r-xdata
test esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ edi ]
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push ecx
push edx
mov ecx edi
call eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
jmp r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
sub_10008820
mov eax edi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
push esi
neg ecx
or ecx eax
push ecx
call sub_1002e957
mov esi eax
add esp 0x4
mov ecx edi
sub esi edi
movzx edx [ ecx ]
mov [ esi + ecx ] dx
add ecx 0x2
test dx dx
jne r-xdata
pop esi
retn
sub_10008870
push esi
push edi
mov edi eax
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
mov edx eax
mov eax ebx
lea esi [ eax + 0x2 ]
lea ecx [ ecx ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
lea eax [ eax + edx + 0x2 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1002e957
mov esi eax
add esp 0x4
mov ecx edi
sub esi edi
movzx edx [ ecx ]
mov [ esi + ecx ] dx
add ecx 0x2
test dx dx
jne r-xdata
lea edi [ eax - 0x2 ]
mov cx [ edi + 0x2 ]
add edi 0x2
test cx cx
jne r-xdata
mov ecx [ r--data ]
mov [ edi ] ecx
mov ecx ebx
mov esi ebx
lea esp [ esp ]
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx esi
mov edx ecx
lea edi [ eax - 0x2 ]
mov cx [ edi + 0x2 ]
add edi 0x2
test cx cx
jne r-xdata
mov ecx edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_10008920
push ebp
mov ebp esp
push 0xffffffff
push sub_1003aa1b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
sub esp 0xc
mov eax esp
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov ecx esi
call sub_10009050
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov edx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
mov eax esi
call sub_100091c0
mov edi eax
call sub_1000a4e0
mov edi eax
test edi edi
je r-xdata
push 0x18
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0xc ]
mov ecx edi
call edx
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x14 ] edi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_10008a00
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003b7f0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov esi ecx
mov ecx [ ebp + 0xc ]
sub esp 0xc
mov eax esp
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
lea edi [ esi + 0x4 ]
mov [ esp + 0x1c ] esi
mov [ esp + 0x24 ] ecx
mov [ esp + 0x28 ] edx
mov [ eax + 0x8 ] edx
call sub_10009cf0
cmp eax 0x2
je r-xdata
xor eax eax
cmp eax 0x1
jne r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
push 0x1
sub esp 0xc
mov eax esp
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
mov eax esi
call sub_100091c0
push eax
call sub_1000a460
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
xor eax eax
xor edi edi
mov [ esp + 0x54 ] eax
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] al
lea eax [ esp + 0x54 ]
mov [ esp + 0x28 ] r--data
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x9
mov [ esp + 0x3c ] edi
mov [ esp + 0x38 ] edi
mov [ esp + 0x34 ] 0x1
lea esi [ esp + 0x28 ]
mov [ esp + 0x70 ] edi
call sub_10009ff0
mov ecx esi
test eax eax
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x14 ]
mov ecx edi
call edx
push 0x18
call sub_1002e957
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esi ]
mov edx [ edx + 0x1c ]
sub esp 0xc
mov eax esp
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x28 ]
mov [ eax + 0x8 ] ecx
mov ecx esi
call edx
jmp r-xdata
mov [ esp + 0x40 ] r--data
mov [ esp + 0x44 ] ecx
mov [ esp + 0x48 ] edi
mov [ esp + 0x50 ] edi
mov [ esp + 0x4c ] 0x9
lea edx [ esp + 0x40 ]
push edx
mov [ esp + 0x74 ] 0x1
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
sub esp 0xc
mov eax esp
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x20 ]
xor edi edi
add ecx 0x4
mov [ eax + 0x8 ] edx
call sub_10009ee0
mov [ esp + 0x40 ] r--data
lea ecx [ esp + 0x28 ]
test eax eax
jne r-xdata
call sub_1000a130
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] edi
mov [ eax + 0x10 ] ecx
mov [ eax ] r--data
mov [ eax + 0x14 ] edi
jmp r-xdata
mov [ esp + 0x70 ] 0xffffffff
call sub_1000a130
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x50 ]
xor ecx esp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x10
sub_10008be0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003b7b0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
mov edx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov ebx ecx
mov ecx [ ebp + 0x8 ]
sub esp 0xc
mov eax esp
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] esi
mov eax ebx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] edx
mov [ esp + 0x28 ] esi
call sub_100091c0
mov edi eax
call sub_1000a4e0
mov esi eax
xor edi edi
cmp esi edi
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov ecx esi
call edx
mov [ esp + 0x3c ] eax
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
xor eax eax
mov [ esp + 0x54 ] eax
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] al
mov eax [ esp + 0x3c ]
mov [ esp + 0x55 ] eax
lea ecx [ esp + 0x54 ]
mov eax 0x9
mov [ esp + 0x54 ] 0xff
mov [ esp + 0x24 ] r--data
mov [ esp + 0x28 ] ecx
mov [ esp + 0x2c ] eax
mov [ esp + 0x38 ] edi
mov [ esp + 0x34 ] edi
mov [ esp + 0x30 ] 0x1
mov [ esp + 0x70 ] edi
lea edx [ esp + 0x24 ]
mov [ esp + 0x40 ] r--data
mov [ esp + 0x44 ] edx
mov [ esp + 0x48 ] edi
mov [ esp + 0x50 ] edi
mov [ esp + 0x4c ] eax
mov [ esp + 0x70 ] 0x1
mov esi [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
lea eax [ esp + 0x40 ]
push eax
sub esp 0xc
mov eax esp
mov [ eax ] esi
mov [ eax + 0x4 ] ecx
lea ecx [ ebx + 0x4 ]
xor edi edi
mov [ eax + 0x8 ] edx
call sub_10009ee0
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ ebx ]
mov edx [ edx + 0x1c ]
sub esp 0xc
mov eax esp
mov [ eax ] ecx
mov ecx [ esp + 0x24 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x28 ]
mov [ eax + 0x8 ] ecx
mov ecx ebx
call edx
xor eax eax
jmp r-xdata
mov [ esp + 0x40 ] r--data
mov [ esp + 0x24 ] r--data
cmp [ esp + 0x34 ] edi
je r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ ebx ]
mov edx [ edx + 0x1c ]
sub esp 0xc
mov eax esp
mov [ eax ] esi
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x28 ]
mov [ eax + 0x8 ] ecx
mov ecx ebx
call edx
mov [ esp + 0x40 ] r--data
mov [ esp + 0x24 ] r--data
cmp [ esp + 0x34 ] edi
je r-xdata
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x50 ]
xor ecx esp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0xc
mov eax 0x1
cmp [ esp + 0x30 ] edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esp + 0x30 ] edi
jne r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
cmp [ esp + 0x38 ] edi
jne r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
cmp [ esp + 0x38 ] edi
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
push eax
call sub_1002e8fb
add esp 0x4
sub_10008de0
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
push edi
mov esi ecx
mov ecx [ ebp + 0x8 ]
sub esp 0xc
mov eax esp
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov eax esi
call sub_100091c0
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edi eax
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov edx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
mov eax esi
call sub_100091c0
push 0x10
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor esi esi
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x0
mov [ eax + 0xc ] 0xffffffff
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
push 0x1
push edi
xor ecx ecx
call sub_1000a2f0
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
retn 0xc
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
pop edi
pop esi
pop ebp
retn 0xc
sub_10008ea0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003be73
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx [ ebp + 0x8 ]
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x10 ]
mov [ eax + 0x8 ] edx
call sub_10009050
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push 0x18
call sub_1002e957
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
xor esi esi
mov [ eax ] r--data
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0x14 ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0xc ] 0x1
mov esi eax
jmp r-xdata
mov [ ebp - 0x28 ] r--data
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x18 ] 0xffffffff
mov [ ebp - 0x4 ] edi
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov ebx [ ebp + 0x8 ]
lea ecx [ ebp - 0x28 ]
push ecx
call sub_1000adc0
add esp 0x4
test eax eax
jne r-xdata
cmp esi edi
call sub_10009ff0
test eax eax
jne r-xdata
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x18 ]
lea edi [ edx + 0x4 ]
mov eax 0x4
cmp edi ecx
jbe r-xdata
cmp esi edi
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
add edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x24 ]
mov edi [ ecx ]
push edx
push eax
mov eax [ edi + 0x8 ]
lea edx [ ebp + 0xc ]
push edx
call eax
add [ ebp - 0x20 ] eax
cmp eax 0x4
je r-xdata
sub ecx edx
mov eax ecx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
mov cl [ ebp + 0x10 ]
push 0x1
lea edx [ ebp - 0xd ]
mov [ ebp - 0xd ] cl
push edx
lea ecx [ ebp - 0x28 ]
call sub_1000aa80
cmp eax 0x1
je r-xdata
test esi esi
jmp r-xdata
push 0x18
call sub_1002e957
mov ebx eax
add esp 0x4
mov [ ebp - 0x14 ] ebx
xor edi edi
mov [ ebp - 0x4 ] 0x1
cmp ebx edi
je r-xdata
test esi esi
jmp r-xdata
je r-xdata
xor ebx ebx
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov ecx esi
call edx
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x10 ] edi
mov [ ebx + 0xc ] eax
mov [ ebx ] r--data
mov [ ebx + 0x14 ] esi
jmp r-xdata
je r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_10009050
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0xc ]
sub esp 0xc
mov eax esp
mov [ ebp - 0x20 ] esi
mov [ eax ] edi
add esi 0x4
mov [ eax + 0x4 ] ecx
push esi
lea ebx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] edx
mov [ eax + 0x8 ] edx
call sub_100098d0
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
sub esp 0xc
mov eax esp
mov [ eax ] edi
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
mov eax esi
call sub_10009b90
mov esi eax
test esi esi
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push 0x9
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx esi
call edx
cmp eax 0x9
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
je r-xdata
call edx
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
sub esp 0xc
mov eax esp
mov [ eax ] edi
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
mov eax [ ebp - 0x20 ]
push eax
lea ebx [ ebp - 0x10 ]
call sub_100096e0
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0xc
call edx
sub_10009120
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
push ebx
push esi
xor eax eax
push edi
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov esi ecx
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x1c ]
push ecx
push edx
lea eax [ esi + 0x4 ]
push eax
call sub_10009a70
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
mov edi [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
sub esp 0xc
mov eax esp
mov [ eax ] edi
mov [ eax + 0x4 ] ecx
push esi
lea ebx [ ebp - 0x10 ]
mov [ eax + 0x8 ] edx
call sub_100096e0
test eax eax
jne r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ esi ]
mov edx [ edx + 0x1c ]
sub esp 0xc
mov eax esp
mov [ eax ] edi
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x14 ]
mov [ eax + 0x8 ] ecx
mov ecx esi
call edx
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
sub_100091c0
push ebp
mov ebp esp
sub esp 0x8
mov cl [ ebp + 0x10 ]
push ebx
push esi
mov esi eax
mov eax [ ebp + 0xc ]
lea edx [ ebp - 0x8 ]
push edi
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push edx
mov [ ebp - 0x4 ] cl
call sub_10006e10
mov edi eax
mov eax [ esi + 0x1c ]
add esp 0x4
mov [ ebp - 0x8 ] edi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
mov edx eax
mov eax edi
lea edi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
lea eax [ eax + edx + 0x2 ]
xor ecx ecx
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1002e957
mov ecx [ esi + 0x1c ]
mov ebx eax
add esp 0x4
mov edx ebx
lea ebx [ ebx ]
movzx eax [ ecx ]
mov [ edx ] ax
add ecx 0x2
add edx 0x2
test ax ax
jne r-xdata
lea edi [ ebx - 0x2 ]
mov ax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
mov eax [ r--data ]
mov [ edi ] eax
mov eax [ ebp - 0x8 ]
mov edx eax
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
lea edi [ ebx - 0x2 ]
mov cx [ edi + 0x2 ]
add edi 0x2
test cx cx
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx edx
push ecx
call sub_1002e8fb
add esp 0x4
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_100092c0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi + 0x4 ] r--data
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_100092f0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003ac50
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
lea eax [ ebp + 0x14 ]
mov [ esp + 0x28 ] eax
xor ebx ebx
mov edx 0x4
mov eax 0x1
mov [ esp + 0x24 ] r--data
mov [ esp + 0x2c ] edx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x30 ] eax
mov [ esp + 0x48 ] ebx
lea esi [ esp + 0x24 ]
mov [ esp + 0x10 ] r--data
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x1c ] edx
mov [ esp + 0x48 ] al
lea edx [ esp + 0x10 ]
push edx
mov edx [ ebp + 0x8 ]
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x10 ]
add ecx 0x4
lea edi [ ebx + 0x5 ]
mov [ eax + 0x8 ] edx
call sub_10009ee0
mov esi eax
neg esi
sbb esi esi
inc esi
mov [ esp + 0x10 ] r--data
mov [ esp + 0x24 ] r--data
cmp [ esp + 0x34 ] ebx
je r-xdata
mov eax esi
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ esp + 0x30 ] ebx
jne r-xdata
mov eax [ esp + 0x28 ]
cmp eax ebx
je r-xdata
cmp [ esp + 0x38 ] ebx
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
sub_100093f0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
lea eax [ ebp - 0x10 ]
push eax
mov ebx ecx
mov ecx [ ebp + 0x8 ]
push esi
push ecx
lea edx [ ebx + 0x4 ]
push edx
call sub_10009a70
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esi ]
mov edx [ esi + 0x4 ]
sub esp 0xc
mov eax esp
mov [ eax ] ecx
mov ecx [ esi + 0x8 ]
push ebx
mov [ eax + 0x4 ] edx
lea ebx [ ebp - 0x10 ]
mov [ eax + 0x8 ] ecx
call sub_100096e0
test eax eax
jne r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x8
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
sub_10009490
push ebp
mov ebp esp
sub esp 0x404
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
lea eax [ ecx + 0x4 ]
call sub_10009b90
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x10
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push 0x5
lea ecx [ ebp - 0x404 ]
push ecx
mov ecx esi
call edx
cmp eax 0x5
mov eax [ esi ]
mov ecx esi
je r-xdata
mov edx [ eax + 0x14 ]
push 0x4
push ebx
call edx
cmp eax 0x4
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
jne r-xdata
mov edx [ eax ]
push 0x1
call edx
call edx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x10
sub_10009540
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x10 ]
lea esi [ ecx + 0x4 ]
mov [ eax + 0x8 ] edx
call sub_10009db0
neg eax
sbb eax eax
inc eax
pop esi
pop ebp
retn 0xc
sub_10009570
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
mov esi ecx
mov ecx [ ebp + 0x8 ]
sub esp 0xc
mov eax esp
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov ecx esi
call sub_10009050
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
xor edi edi
push edi
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov edx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
mov eax esi
call sub_100091c0
push eax
call sub_1000a460
mov esi eax
add esp 0x8
cmp esi edi
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
push 0x18
call sub_1002e957
add esp 0x4
cmp eax edi
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0xc ]
mov ebx [ edi ]
mov ecx esi
call eax
mov edx [ ebx + 0x8 ]
push eax
mov ecx edi
call edx
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov ecx [ ebp + 0x14 ]
mov [ eax + 0xc ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0x4 ] esi
mov [ eax + 0x10 ] ecx
mov [ eax ] r--data
mov [ eax + 0x14 ] esi
mov edi eax
sub_10009620
push ebp
mov ebp esp
sub esp 0xc
mov edx [ ebp + 0x8 ]
push esi
xor eax eax
mov esi ecx
push edi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax + 0x20 ]
lea ecx [ ebp - 0xc ]
push ecx
push edx
mov ecx esi
xor edi edi
call eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ esi ]
mov edx [ edx + 0x2c ]
sub esp 0xc
mov eax esp
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x8 ] ecx
mov ecx esi
call edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0xc ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
mov edi eax
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
sub_100096b0
push ebp
mov ebp esp
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
sub esp 0xc
mov eax esp
mov [ eax ] esi
mov esi [ ebp + 0xc ]
mov [ eax + 0x4 ] esi
mov esi [ ebp + 0x10 ]
mov [ eax + 0x8 ] esi
mov eax [ edx + 0x1c ]
call eax
pop esi
pop ebp
retn 0xc
sub_100096e0
push ebp
mov ebp esp
cmp [ ebx ] 0xff
push esi
push edi
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
sub esp 0xc
mov eax esp
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
call sub_100091c0
mov edi eax
call sub_1000a4e0
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edi
pop esi
pop ebp
retn 0x10
mov edx [ esi ]
mov eax [ edx + 0xc ]
mov edi [ ebx + 0x1 ]
mov ecx esi
call eax
mov edx [ esi ]
xor ecx ecx
cmp eax edi
mov eax [ edx ]
sete cl
push 0x1
mov edi ecx
mov ecx esi
call eax
mov eax edi
pop edi
pop esi
pop ebp
retn 0x10
sub_10009750
cmp ecx 0x14
jb r-xdata
xor eax eax
test ecx ecx
je r-xdata
mov ecx 0x14
mov eax 0x1
retn
cmp [ eax + edx ] 0x0
jne r-xdata
xor eax eax
retn
inc eax
cmp eax ecx
jb r-xdata
sub_10009780
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0x10 ]
add esi 0x19
push esi
call sub_1002e957
push esi
mov ebx eax
push 0x0
push ebx
call sub_10032e00
mov eax [ ebp + 0x1c ]
inc eax
add esp 0x10
mov [ ebp - 0x4 ] eax
cmp eax [ edi + 0xc ]
jb r-xdata
cmp [ edi + 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ edi + 0x4 ]
imul eax esi
add eax [ edi + 0x8 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x8 ]
push esi
push ebx
call eax
cmp esi eax
je r-xdata
mov ecx [ edi + 0x4 ]
imul eax esi
add eax [ edi + 0x8 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
push esi
push ebx
call eax
push ebx
cmp esi eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push ecx
push edx
push ebx
call sub_10033950
mov eax [ ebp + 0x14 ]
mov cl [ ebp + 0x18 ]
mov [ ebx + 0x14 ] eax
mov eax esi
imul eax [ ebp + 0x1c ]
mov [ ebx + 0x18 ] cl
add eax [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
add esp 0xc
push eax
push esi
push ebx
call edx
push ebx
cmp esi eax
jne r-xdata
push ebx
call sub_1002e8fb
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea edi [ ebp - 0x10 ]
call sub_10009c10
test eax eax
je r-xdata
call sub_1002e8fb
add esp 0x4
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x18
push esi
push 0x0
push ebx
call sub_10032e00
mov edi [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
add esp 0xc
mov ecx esi
cmp esi 0x14
jb r-xdata
mov edx [ ebp - 0x10 ]
xor eax eax
test ecx ecx
je r-xdata
mov ecx 0x14
test edx edx
je r-xdata
cmp [ eax + ebx ] 0x0
jne r-xdata
mov eax [ edx ]
mov ecx edx
mov edx [ eax ]
push 0x1
call edx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x14 ]
mov edi [ ecx ]
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x8 ]
mov [ eax + 0x8 ] edx
mov eax [ edi + 0x4 ]
call eax
mov edx [ ebp - 0x10 ]
inc eax
cmp eax ecx
jb r-xdata
jmp r-xdata
sub_100098d0
push ebp
mov ebp esp
sub esp 0x18
mov ecx [ ebp + 0xc ]
or eax 0xffffffff
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push esi
mov [ ebx ] 0x2
call edx
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov esi eax
mov [ ebp - 0x18 ] esi
cmp esi 0x14
ja r-xdata
mov eax ebx
pop esi
mov esp ebp
pop ebp
retn 0x10
push edi
push esi
call sub_1002e957
mov ecx [ ebp + 0xc ]
add esp 0x4
mov edi eax
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
push esi
push edi
mov [ ebp - 0x8 ] edi
call edx
cmp esi eax
je r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0x10 ]
add esi 0x19
push esi
call sub_1002e957
mov [ ebp - 0xc ] eax
xor eax eax
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] eax
cmp [ edi + 0xc ] eax
jbe r-xdata
push edi
call sub_1002e8fb
add esp 0x4
pop edi
mov eax ebx
pop esi
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x8 ]
push ecx
call sub_1002e8fb
mov edx [ ebp - 0xc ]
push edx
call sub_1002e8fb
add esp 0x8
cmp [ ebx + 0x8 ] 0xffffffff
je r-xdata
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop edi
mov [ ebx ] 0x1
mov edx [ edi + 0x8 ]
add edx [ ebp - 0x10 ]
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
mov edi [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
push edx
push esi
push edi
call eax
cmp esi eax
mov eax [ ebp - 0x8 ]
jne r-xdata
push eax
call sub_1002e8fb
push edi
call sub_1002e8fb
add esp 0x8
pop edi
mov eax ebx
pop esi
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp - 0x18 ]
push edx
call sub_10009b20
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
call sub_1002e8fb
mov edx edi
push edx
call sub_1002e8fb
mov eax [ ebp - 0x4 ]
add esp 0x8
pop edi
mov [ ebx + 0x4 ] eax
mov [ ebx ] 0x0
mov eax ebx
pop esi
mov esp ebp
pop ebp
retn 0x10
mov edi [ ebx + 0x8 ]
cmp edi 0xffffffff
je r-xdata
mov edx [ ebp - 0xc ]
mov ecx esi
call sub_10009750
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
add [ ebp - 0x10 ] esi
inc eax
mov [ ebp - 0x4 ] eax
cmp eax [ edx + 0xc ]
jb r-xdata
mov eax [ ebp - 0x4 ]
cmp edi 0xffffffff
je r-xdata
mov edi edx
mov [ ebx + 0x8 ] eax
test eax eax
je r-xdata
lea ecx [ eax - 0x1 ]
cmp edi ecx
jne r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
sub_10009a70
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
push ebx
push esi
xor eax eax
mov [ ecx ] eax
push edi
mov edi [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov esi [ edi + 0x10 ]
add esi 0x19
push esi
call sub_1002e957
mov ecx [ edi + 0x4 ]
mov edx esi
imul edx [ ebp + 0xc ]
add edx [ edi + 0x8 ]
add esp 0x4
mov ebx eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push edx
push esi
push ebx
call eax
cmp esi eax
jne r-xdata
push ebx
call sub_1002e8fb
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x10
cmp esi 0x14
jb r-xdata
xor eax eax
test esi esi
je r-xdata
mov esi 0x14
cmp [ eax + ebx ] 0x0
jne r-xdata
mov edi [ ebp + 0x10 ]
push ebx
call sub_10009c10
test eax eax
je r-xdata
inc eax
cmp eax esi
jb r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x10 ]
mov eax 0x9
cmp ecx eax
jae r-xdata
push eax
mov eax [ ebp + 0x14 ]
lea edx [ ebx + 0x19 ]
push edx
push eax
call sub_10033950
push ebx
call sub_1002e8fb
add esp 0x10
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x10
mov eax ecx
sub_10009b20
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx edi
cmp esi 0x4
jb r-xdata
test esi esi
je r-xdata
lea ecx [ ecx ]
mov eax [ edi + 0x14 ]
mov cl [ edi + 0x18 ]
cmp [ ebp + 0x8 ] eax
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
xor eax eax
pop esi
pop ebp
retn
sub esi 0x4
add eax 0x4
add ecx 0x4
cmp esi 0x4
jae r-xdata
xor eax eax
cmp [ ebp + 0xc ] cl
pop esi
sete al
pop ebp
retn
cmp esi 0x1
jbe r-xdata
mov edx [ ecx ]
cmp edx [ eax ]
jne r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
cmp esi 0x2
jbe r-xdata
mov al [ eax + 0x2 ]
cmp al [ ecx + 0x2 ]
je r-xdata
sub_10009b90
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
sub esp 0xc
mov esi eax
mov eax esp
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
push esi
lea ebx [ ebp - 0xc ]
mov [ eax + 0x8 ] ecx
call sub_100098d0
cmp [ ebp - 0xc ] 0x0
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
push 0x14
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0x10 ]
mov edi [ esi + 0x8 ]
mov esi [ esi + 0x4 ]
lea edx [ ecx + 0x19 ]
imul edx [ ebp - 0x8 ]
lea edx [ edx + edi + 0x19 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x10 ] edx
mov [ eax + 0xc ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_10009c10
push ebp
mov ebp esp
push ebx
xor eax eax
mov [ edi ] eax
push esi
mov [ edi + 0x4 ] eax
push 0x18
xor ebx ebx
mov [ edi + 0x8 ] eax
call sub_1002e957
add esp 0x4
cmp eax ebx
je r-xdata
xor esi esi
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx 0x1
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x14
mov [ eax + 0xc ] ebx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x10 ] ecx
mov esi eax
jmp r-xdata
push 0x18
call sub_1002e957
add esp 0x4
cmp eax ebx
je r-xdata
cmp [ esi + 0x14 ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
xor eax eax
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ebx
mov [ eax + 0x10 ] ebx
mov [ eax + 0xc ] 0x14
mov [ eax ] r--data
mov [ eax + 0x14 ] esi
jmp r-xdata
mov [ esi + 0xc ] 0x1
mov edx [ esi + 0x8 ]
mov ebx [ esi + 0x4 ]
push edx
call sub_1002e957
add esp 0x4
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
mov [ edi + 0x4 ] ecx
mov dl [ eax + 0x18 ]
pop esi
mov [ edi + 0x8 ] dl
mov eax 0x1
pop ebx
pop ebp
retn 0x4
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov ecx [ esi + 0x8 ]
push ecx
push ebx
push eax
call sub_10033950
add esp 0xc
mov [ esi + 0x10 ] 0x1
xor ebx ebx
sub_10009cf0
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
push esi
sub esp 0xc
mov eax esp
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
push edi
lea ebx [ ebp - 0xc ]
mov [ eax + 0x8 ] ecx
call sub_100098d0
mov eax [ ebp - 0xc ]
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
mov eax 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax 0x2
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
mov esi eax
push esi
call sub_1002e957
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
add esp 0x4
mov ebx eax
mov eax [ edx + 0x14 ]
push esi
push ebx
call eax
cmp esi eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push ecx
push edx
push eax
push esi
push ebx
push edi
call sub_10009780
push ebx
mov esi eax
call sub_1002e8fb
add esp 0x4
mov eax esi
neg eax
sbb eax eax
and eax 0xfffffffe
pop esi
add eax 0x2
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ebx
call sub_1002e8fb
add esp 0x4
sub_10009db0
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
push edi
sub esp 0xc
mov eax esp
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
push esi
lea ebx [ ebp - 0x1c ]
mov [ eax + 0x8 ] ecx
call sub_100098d0
mov eax [ ebp - 0x1c ]
cmp eax 0x1
jne r-xdata
test eax eax
jne r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax 0x2
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ebx [ esi + 0x10 ]
add ebx 0x19
push ebx
call sub_1002e957
push ebx
mov edi eax
push 0x0
push edi
mov [ ebp - 0x4 ] edi
call sub_10032e00
add esp 0x10
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ esi + 0x4 ]
imul eax ebx
add eax [ esi + 0x8 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x8 ]
push ebx
push edi
call eax
sub ebx eax
neg ebx
sbb ebx ebx
push edi
and ebx 0x2
call sub_1002e8fb
add esp 0x4
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x18 ]
mov ecx [ esi + 0x4 ]
imul eax ebx
add eax [ esi + 0x8 ]
mov edx [ ecx ]
mov edx [ edx + 0x4 ]
push eax
push ebx
push edi
call edx
push edi
cmp ebx eax
je r-xdata
lea edi [ ebp - 0x10 ]
call sub_10009c10
test eax eax
je r-xdata
call sub_1002e8fb
add esp 0x4
mov eax [ ebp - 0x4 ]
push ebx
push 0x0
push eax
call sub_10032e00
mov edi [ ebp - 0x4 ]
add esp 0xc
mov edx [ ebp - 0x4 ]
mov ecx ebx
call sub_10009750
mov edx [ ebp - 0x10 ]
test eax eax
jne r-xdata
test edx edx
je r-xdata
mov ecx [ esi + 0x14 ]
mov edi [ ecx ]
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x8 ]
mov [ eax + 0x8 ] edx
mov eax [ edi + 0x4 ]
call eax
mov edx [ ebp - 0x10 ]
mov eax [ edx ]
mov ecx edx
mov edx [ eax ]
push 0x1
call edx
sub_10009ee0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003ae90
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
sub esp 0xc
mov eax esp
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
push esi
lea ebx [ ebp - 0x24 ]
mov [ eax + 0x8 ] ecx
call sub_100098d0
mov ecx [ ebp - 0x24 ]
cmp ecx 0x1
jne r-xdata
xor eax eax
cmp ecx eax
jne r-xdata
mov eax ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x10 ]
cmp ecx edi
jbe r-xdata
xor ebx ebx
mov ebx ecx
sub ebx edi
jmp r-xdata
mov edx [ esi + 0x8 ]
mov esi [ esi + 0x4 ]
add ecx 0x19
imul ecx [ ebp - 0x20 ]
add ecx 0x19
add edx ecx
add edx edi
mov [ ebp - 0x38 ] r--data
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x38 ]
mov [ ebp - 0x18 ] r--data
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] 0x1
push 0x1
lea ecx [ ebp - 0x18 ]
lea edx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000ae20
mov eax [ ebp - 0x10 ]
add esp 0x4
neg eax
sbb eax eax
and eax 0xfffffffe
add eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_10009ff0
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x0
push edi
je r-xdata
mov eax 0x1
retn
mov [ esi + 0xc ] 0x1
mov eax 0x1
pop edi
retn
mov eax [ esi + 0x8 ]
mov edi [ esi + 0x4 ]
push eax
call sub_1002e957
add esp 0x4
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
xor eax eax
pop edi
retn
mov ecx [ esi + 0x8 ]
push ecx
push edi
push eax
call sub_10033950
add esp 0xc
mov [ esi + 0x10 ] 0x1
sub_1000a040
push edi
xor edi edi
cmp [ esi + 0x10 ] edi
je r-xdata
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0xc ] 0x1
pop edi
retn
cmp [ esi + 0xc ] edi
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x4 ] edi
sub_1000a080
push ebp
mov ebp esp
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov eax [ ecx + 0x8 ]
mov edx [ ebp + 0x10 ]
cmp edx eax
jae r-xdata
xor eax eax
pop ebp
retn 0xc
push esi
mov esi [ ebp + 0xc ]
push edi
lea edi [ esi + edx ]
cmp edi eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
mov ecx [ ebp + 0x8 ]
push esi
add eax edx
push eax
push ecx
call sub_10033950
add esp 0xc
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
sub eax edx
mov esi eax
sub_1000a0d0
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
mov [ esi ] r--data
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esi + 0x14 ] 0x0
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x4 ] 0x0
sub_1000a130
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
mov [ esi ] r--data
je r-xdata
mov [ esi ] r--data
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esi + 0x14 ] 0x0
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x4 ] 0x0
sub_1000a170
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
push ebx
push edi
mov edi [ ebp + 0xc ]
lea ebx [ edi + eax ]
mov eax [ esi + 0x8 ]
cmp ebx eax
jbe r-xdata
xor eax eax
pop esi
pop ebp
retn 0xc
cmp [ esi + 0x10 ] 0x0
jne r-xdata
push ebx
call sub_1002e957
push ebx
mov edi eax
push 0x0
push edi
call sub_10032e00
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
push ecx
push edx
push edi
call sub_10033950
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push eax
push ecx
lea eax [ edi + edx ]
push eax
call sub_10033950
add esp 0x28
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
add ecx [ ebp + 0x10 ]
push edi
push eax
push ecx
call sub_10033950
add esp 0xc
mov eax edi
pop edi
pop ebx
pop esi
pop ebp
retn 0xc
mov ebx [ esi + 0x4 ]
push eax
call sub_1002e957
add esp 0x4
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] edi
pop edi
mov [ esi + 0x8 ] ebx
pop ebx
mov [ esi + 0x10 ] 0x1
pop esi
pop ebp
retn 0xc
mov ecx [ esi + 0x4 ]
push ecx
call sub_1002e8fb
add esp 0x4
pop edi
pop ebx
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ esi + 0x8 ]
push edx
push ebx
push eax
call sub_10033950
add esp 0xc
mov [ esi + 0x10 ] 0x1
sub_1000a250
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x10 ] edi
je r-xdata
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] edi
mov eax 0x1
pop edi
mov [ esi + 0xc ] eax
pop esi
retn
cmp [ esi + 0xc ] edi
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x4 ] edi
sub_1000a290
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x8 ] 0x0
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
push eax
call [ CloseHandle@IAT ]
mov [ esi + 0x4 ] 0x0
sub_1000a2f0
push ebp
mov ebp esp
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push edi
mov edi ecx
test eax eax
je r-xdata
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0x0
mov [ esi + 0x8 ] eax
mov ecx 0x80000000
je r-xdata
xor edx edx
test edi edi
setne dl
push 0x0
push 0x0
add edx 0x3
push edx
push 0x0
push 0x3
push ecx
push eax
call [ CreateFileW@IAT ]
mov [ esi + 0x4 ] eax
cmp eax 0xffffffff
jne r-xdata
mov ecx 0xc0000000
mov edi [ esi + 0x8 ]
mov eax edi
lea edx [ eax + 0x2 ]
call [ GetLastError@IAT ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
cmp eax 0x2
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
pop edi
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x8
cmp [ edi + 0x2 ] 0x3a
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x58
lea eax [ ebp - 0x5c ]
push 0x0
push eax
mov [ ebp - 0x64 ] 0x0
mov [ ebp - 0x60 ] 0x0
call sub_10032e00
mov cx [ edi ]
add esp 0xc
push 0x0
push 0x0
mov [ ebp - 0x5c ] cx
mov dx [ edi + 0x2 ]
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x5c ]
push ecx
mov [ ebp - 0x5a ] dx
call [ GetDiskFreeSpaceExW@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp eax 0xf7e446d
jbe r-xdata
mov [ esi + 0xc ] 0x0
add eax 0xf081bb93
mov [ esi + 0xc ] eax
jmp r-xdata
sub_1000a400
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ CloseHandle@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
push 0x0
push 0x4000000
push 0x2
push 0x0
push 0x1
push 0xc0000000
push eax
call [ CreateFileW@IAT ]
mov [ esi + 0x4 ] eax
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
je r-xdata
push eax
call edi
mov [ esi + 0x4 ] 0x0
pop edi
mov eax 0x1
pop esi
retn
push eax
call edi
mov [ esi + 0x4 ] 0x0
sub_1000a460
push ebp
mov ebp esp
push esi
push 0x10
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor esi esi
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x0
mov [ eax + 0xc ] 0xffffffff
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push 0x1
push eax
call sub_1000a2f0
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
sub_1000a4c0
push ebp
mov ebp esp
sub esp 0x8
mov ecx [ ecx + 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ecx
call [ GetFileSizeEx@IAT ]
neg eax
sbb eax eax
and eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_1000a4e0
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push 0x10
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor esi esi
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x0
mov [ eax + 0xc ] 0xffffffff
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
push 0x0
push 0x0
push 0x3
push 0x0
push 0x3
push 0x80000000
push edi
mov [ esi + 0x8 ] edi
call [ CreateFileW@IAT ]
mov [ esi + 0x4 ] eax
cmp eax 0xffffffff
jne r-xdata
test edi edi
je r-xdata
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
mov ecx [ ebp - 0x4 ]
mov eax esi
xor ecx ebp
pop esi
call sub_1002e0f2
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
sub_1000a580
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
push 0x0
push 0x0
push 0x2
push 0x0
push 0x1
push 0xc0000000
push eax
call [ CreateFileW@IAT ]
xor ecx ecx
cmp eax 0xffffffff
setne cl
mov [ esi + 0x4 ] eax
pop esi
mov eax ecx
retn
cmp eax 0xffffffff
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ esi + 0x4 ] 0x0
sub_1000a5d0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
lea ecx [ edi + eax ]
cmp ecx [ esi + 0xc ]
jb r-xdata
mov edx [ esi + 0x4 ]
push 0x0
push 0x0
push eax
push edx
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
push 0x0
lea eax [ ebp + 0xc ]
push eax
push edi
push ecx
push edx
mov [ ebp + 0xc ] 0x0
call [ WriteFile@IAT ]
neg eax
sbb eax eax
and eax [ ebp + 0xc ]
pop edi
pop esi
pop ebp
retn 0xc
sub_1000a630
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
push 0x0
push 0x0
mov esi ecx
mov ecx [ esi + 0x4 ]
push eax
push ecx
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push 0x0
lea edx [ ebp + 0x10 ]
push edx
mov edx [ esi + 0x4 ]
push eax
push ecx
push edx
mov [ ebp + 0x10 ] 0x0
call [ ReadFile@IAT ]
neg eax
sbb eax eax
and eax [ ebp + 0x10 ]
pop esi
pop ebp
retn 0xc
xor eax eax
pop esi
pop ebp
retn 0xc
sub_1000a680
push ebp
mov ebp esp
mov eax [ esi + 0x10 ]
sub esp 0x8
push edi
push 0x0
push eax
call [ GetFileSize@IAT ]
mov edi eax
cmp edi ebx
jae r-xdata
mov eax [ esi + 0xc ]
xor edi edi
mov [ esi + 0x8 ] ebx
cmp eax edi
je r-xdata
push 0xfa46d
call sub_1002e957
push 0xfa46d
push 0x0
push eax
mov [ ebp - 0x4 ] eax
call sub_10032e00
add esp 0x10
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
push eax
call [ UnmapViewOfFile@IAT ]
mov [ esi + 0xc ] edi
mov eax [ ebp - 0x4 ]
push 0x0
lea edx [ ebp - 0x8 ]
push edx
push ecx
mov ecx [ esi + 0x10 ]
push eax
push ecx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov ecx eax
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x10 ]
push edi
push ecx
push edi
push 0x4
push edi
push edx
call [ CreateFileMappingW@IAT ]
mov [ esi + 0x14 ] eax
cmp eax edi
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ esi + 0x14 ] edi
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
mov edx [ esi + 0x10 ]
push 0x0
push edx
call [ GetFileSize@IAT ]
mov edi eax
cmp edi ebx
jb r-xdata
mov ecx [ esi + 0x8 ]
push ecx
push edi
push edi
push 0xf001f
push eax
call [ MapViewOfFile@IAT ]
xor edx edx
cmp eax edi
setne dl
mov [ esi + 0xc ] eax
pop edi
mov eax edx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x10 ]
push 0x2
push 0x0
push 0x0
push ecx
call [ SetFilePointer@IAT ]
mov eax ebx
mov ecx 0xfa46d
sub eax edi
cmp eax ecx
jae r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_1002e8fb
add esp 0x4
sub_1000a780
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x10 ]
push 0x0
push eax
push 0x0
push 0x4
push 0x0
push ecx
call [ CreateFileMappingW@IAT ]
mov [ esi + 0x14 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x8 ]
push edx
push 0x0
push 0x0
push 0xf001f
push eax
call [ MapViewOfFile@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ esi + 0xc ] eax
mov eax ecx
retn
retn
sub_1000a7c0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
xor edi edi
cmp eax edi
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0xc ]
mov [ esi + 0x4 ] edi
cmp eax edi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x14 ]
push ebx
mov ebx [ CloseHandle@IAT ]
cmp eax edi
je r-xdata
push eax
call [ UnmapViewOfFile@IAT ]
mov [ esi + 0xc ] edi
mov eax [ esi + 0x10 ]
cmp eax edi
je r-xdata
push eax
call ebx
mov [ esi + 0x14 ] edi
mov eax [ esi + 0x4 ]
pop ebx
cmp eax edi
je r-xdata
push eax
call ebx
mov [ esi + 0x10 ] edi
mov eax [ ebp - 0x4 ]
push edi
push eax
call sub_1000a460
mov esi eax
add esp 0x8
cmp esi edi
je r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x4 ] edi
mov edx [ esi ]
mov eax [ edx + 0x10 ]
mov ecx esi
call eax
mov edx [ esi ]
mov edi eax
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1000a860
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push edi
xor edi edi
mov [ esi ] r--data
cmp eax edi
je r-xdata
mov eax [ esi + 0x14 ]
push ebx
mov ebx [ CloseHandle@IAT ]
cmp eax edi
je r-xdata
push eax
call [ UnmapViewOfFile@IAT ]
mov [ esi + 0xc ] edi
mov eax [ esi + 0x10 ]
cmp eax edi
je r-xdata
push eax
call ebx
mov [ esi + 0x14 ] edi
mov eax [ esi + 0x4 ]
pop ebx
cmp eax edi
je r-xdata
push eax
call ebx
mov [ esi + 0x10 ] edi
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x4 ] edi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1000a8e0
push ebp
mov ebp esp
push edi
mov edi ecx
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x10 ]
cmp ecx eax
jbe r-xdata
push esi
mov esi [ ebp + 0xc ]
lea edx [ esi + ecx ]
cmp edx eax
jbe r-xdata
xor eax eax
pop edi
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov edx [ edi + 0xc ]
push esi
push eax
add edx ecx
push edx
call sub_10033950
mov eax [ edi + 0xc ]
add esp 0xc
push 0x0
push eax
call [ FlushViewOfFile@IAT ]
mov eax esi
pop esi
pop edi
pop ebp
retn 0xc
sub eax ecx
mov esi eax
sub_1000a930
push ebx
push esi
push edi
push 0x18
mov ebx eax
call sub_1002e957
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
xor esi esi
mov [ eax ] r--data
mov [ eax + 0x4 ] edi
mov [ eax + 0x14 ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov esi eax
jmp r-xdata
mov ebx 0x20
call sub_1000a680
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ esi + 0x10 ] edi
push edi
push edi
push 0x4
push edi
push 0x1
push 0xc0000000
push ebx
mov [ esi + 0x4 ] ebx
call [ CreateFileW@IAT ]
mov [ esi + 0x10 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
pop edi
pop esi
xor eax eax
pop ebx
retn
cmp [ esi + 0x14 ] edi
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
retn
cmp [ esi + 0xc ] edi
jne r-xdata
call sub_1000a780
test eax eax
je r-xdata
sub_1000a9c0
push ebp
mov ebp esp
mov eax 0x1004
call sub_10035c20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
push 0x1000
lea eax [ ebp - 0x1004 ]
push 0x0
push eax
mov esi ecx
call sub_10032e00
xor edi edi
add esp 0xc
cmp [ esi + 0x8 ] edi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax 0x1
pop esi
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov edx [ edx + 0x8 ]
push edi
push 0x1000
lea eax [ ebp - 0x1004 ]
push eax
mov ecx esi
call edx
add edi eax
cmp edi [ esi + 0x8 ]
jb r-xdata
sub_1000aa30
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov edx [ ebp + 0x10 ]
cmp edx eax
jbe r-xdata
push esi
mov esi [ ebp + 0xc ]
push edi
lea edi [ esi + edx ]
cmp edi eax
jbe r-xdata
xor eax eax
pop ebp
retn 0xc
mov eax [ ecx + 0xc ]
mov ecx [ ebp + 0x8 ]
push esi
add eax edx
push eax
push ecx
call sub_10033950
add esp 0xc
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
sub eax edx
mov esi eax
sub_1000aa80
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov edx [ esi + 0x8 ]
mov eax [ esi + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
lea ecx [ edx + edi ]
cmp ecx eax
jbe r-xdata
mov ebx [ esi + 0xc ]
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
add ebx edx
mov edx [ ebp + 0x8 ]
push ebx
push edi
push edx
call eax
add [ esi + 0x8 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub eax edx
mov edi eax
sub_1000aac0
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push edi
mov edi [ esi + 0xc ]
call edx
mov ecx [ esi + 0x10 ]
add ecx edi
cmp ecx eax
jbe r-xdata
mov eax edi
pop edi
pop esi
retn
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
call eax
sub eax [ esi + 0x10 ]
pop edi
pop esi
retn
sub_1000ab10
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov edx [ esi + 0x8 ]
mov eax [ esi + 0xc ]
push edi
mov edi [ ebp + 0xc ]
lea ecx [ edx + edi ]
cmp ecx eax
jbe r-xdata
mov ebx [ esi + 0x10 ]
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add ebx edx
mov edx [ ebp + 0x8 ]
push ebx
push edi
push edx
call eax
add [ esi + 0x8 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub eax edx
mov edi eax
sub_1000ab90
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
mov edx [ ebx + 0x10 ]
push esi
lea esi [ eax + ecx ]
push edi
cmp esi edx
jbe r-xdata
mov esi [ ebx + 0x8 ]
mov edi [ ebp + 0x8 ]
sub esi eax
lea eax [ esi + edx ]
mov edx eax
sub edx ecx
mov ecx [ ebx + 0x4 ]
mov esi [ ecx ]
sub eax edx
push edx
push eax
mov eax [ esi + 0x4 ]
push edi
call eax
mov edx eax
xor ecx ecx
shr edx 0x1
mov [ ebp + 0x8 ] eax
je r-xdata
mov ecx edx
sub ecx eax
add [ ebx + 0xc ] eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
lea esi [ eax + edi - 0x1 ]
lea esp [ esp ]
movzx eax [ ecx + edi ]
mov [ ebp + 0xf ] al
movzx eax [ esi ]
mov [ ecx + edi ] al
movzx eax [ ebp + 0xf ]
mov [ esi ] al
inc ecx
dec esi
cmp ecx edx
jb r-xdata
mov eax [ ebp + 0x8 ]
sub_1000ac20
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a9b8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x14 ]
test ecx ecx
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1000ac90
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a678
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x14 ]
test ecx ecx
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1000ad00
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
pop esi
pop ebp
retn 0xc
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push edi
mov edi [ ebp + 0xc ]
push edi
push edx
call eax
cmp edi eax
pop edi
je r-xdata
mov [ esi + 0x8 ] 0x0
sub_1000ad30
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1000ad60
push ebp
mov ebp esp
push 0xffffffff
push sub_1003ae58
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] r--data
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x1
push ecx
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x0
call sub_1000ae20
mov eax [ ebp - 0x10 ]
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_1000adc0
push ebp
mov ebp esp
push esi
push edi
mov edi eax
push edi
call sub_1002e957
add esp 0x4
mov esi eax
mov eax [ ebx ]
mov edx [ eax + 0x14 ]
push edi
push esi
mov ecx ebx
call edx
mov edi eax
test edi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push edi
push esi
call edx
xor ecx ecx
cmp edi eax
sete cl
push esi
mov edi ecx
call sub_1002e8fb
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebp
retn
push esi
call sub_1002e8fb
add esp 0x4
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_1000ae20
push ebp
mov ebp esp
mov eax 0x1010
call sub_10035c20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
xor esi esi
mov ebx edx
xor edi edi
mov [ ebp - 0x1010 ] ebx
mov [ ebp - 0x100c ] ecx
cmp [ ebp + 0x8 ] esi
jbe r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push 0x1
push 0x0
push 0x0
call edx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov ecx [ ebx + esi * 4 ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
inc esi
add edi eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x1008 ] 0x0
mov ecx [ ebp - 0x100c ]
mov eax [ ebp - 0x1008 ]
inc eax
mov [ ebp - 0x1008 ] eax
cmp eax [ ebp + 0x8 ]
jb r-xdata
lea ebx [ ebx ]
mov eax [ ebp - 0x1008 ]
mov esi [ ebx + eax * 4 ]
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
xor edi edi
call eax
mov edx [ esi ]
mov eax [ edx + 0x10 ]
mov ecx esi
call eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx + 0x10 ]
mov ecx esi
call eax
sub eax edi
mov eax 0x1000
jmp r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
dec eax
cmp [ ebp - 0x1008 ] eax
jne r-xdata
mov edx [ esi ]
mov edx [ edx + 0x14 ]
push eax
lea eax [ ebp - 0x1004 ]
push eax
mov ecx esi
call edx
mov ebx eax
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
add edi ebx
call edx
cmp edi eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x10 ]
mov ecx esi
call eax
sub eax edi
cmp eax 0x1000
jbe r-xdata
mov ebx [ ebp - 0x1010 ]
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x100c ]
mov edx [ ecx ]
mov edx [ edx + 0x4 ]
push eax
push ebx
lea eax [ ebp - 0x1004 ]
push eax
call edx
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
cmp edi eax
jb r-xdata
sub_1000af70
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
xor ecx ecx
mov [ esi + 0x4 ] cx
pop esi
retn
mov eax [ esi + 0x4 ]
push eax
call sub_1002e8fb
add esp 0x4
sub_1000afc0
push esi
push edi
mov edi ecx
xor ecx ecx
mov eax 0x26d
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1002eb41
push 0x26d
mov esi eax
push 0x0
push esi
call sub_10032e00
add esp 0x10
mov eax 0x8
call sub_1002c070
cmp [ edi + 0x18 ] 0x8
lea ecx [ edi + 0x4 ]
jb r-xdata
push esi
push 0x0
push eax
push ecx
call [ GetTempFileNameW@IAT ]
pop edi
mov eax esi
pop esi
retn
mov ecx [ ecx ]
sub_1000b020
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x18 ] 0x8
jb r-xdata
xor ecx ecx
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] cx
je r-xdata
mov eax [ esi + 0x4 ]
push eax
call sub_1002e8fb
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1000b070
push ebp
mov ebp esp
push 0xffffffff
push sub_1003de98
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x44 ] eax
mov [ eax + 0x4 ] ecx
mov eax 0x10
mov ebx edx
call sub_1002bff0
mov [ ebp - 0x3c ] eax
mov eax 0x11
call sub_1002bff0
mov edi eax
mov [ ebp - 0x40 ] edi
lea ecx [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov edx [ ebx ]
sub eax ecx
mov esi eax
mov eax [ edx + 0x10 ]
mov ecx ebx
call eax
lea ecx [ eax + esi + 0x1 ]
push ecx
call sub_1002eb41
mov [ ebp - 0x30 ] eax
mov eax edi
add esp 0x4
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov edx [ ebx ]
mov esi eax
mov eax [ edx + 0x10 ]
mov ecx ebx
call eax
mov edi [ ebp - 0x30 ]
lea ecx [ eax + esi + 0x1 ]
push ecx
push 0x0
push edi
call sub_10032e00
mov esi [ ebx ]
mov edx [ esi + 0x10 ]
add esp 0xc
mov ecx ebx
call edx
push eax
mov eax [ esi + 0x14 ]
push edi
mov ecx ebx
call eax
mov edx [ ebx ]
mov esi eax
mov eax [ edx + 0x10 ]
mov ecx ebx
call eax
cmp eax esi
jne r-xdata
push edi
call sub_1002ee65
jmp r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x10 ]
mov ecx ebx
mov [ ebp - 0x34 ] 0x0
call eax
test eax eax
je r-xdata
add esp 0x4
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
je r-xdata
mov edi [ ebp - 0x34 ]
add edi [ ebp - 0x30 ]
mov [ ebp - 0x38 ] edi
jne r-xdata
mov eax [ ebp - 0x34 ]
add eax [ ebp - 0x30 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebx ]
mov edx [ eax + 0x10 ]
sub edi [ ebp - 0x30 ]
mov ecx ebx
call edx
cmp edi eax
jae r-xdata
mov edi [ ebp - 0x30 ]
mov edx [ ebx ]
mov eax [ edx + 0x10 ]
inc [ ebp - 0x34 ]
mov ecx ebx
call eax
cmp [ ebp - 0x34 ] eax
jb r-xdata
mov eax edi
inc edx
lea esi [ eax + 0x1 ]
mov edx [ ebp - 0x30 ]
push edx
call sub_1002ee65
jmp r-xdata
lea ebx [ ebx ]
mov edi [ ebp - 0x3c ]
mov eax edi
xor edx edx
lea esi [ eax + 0x1 ]
lea ebx [ ebx ]
mov edi [ ebp - 0x30 ]
push edi
call sub_1002ee65
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
cmp edx eax
jb r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
je r-xdata
mov ecx [ ebp - 0x38 ]
mov al [ ecx + edx ]
cmp al [ edx + edi ]
jne r-xdata
mov ecx [ ebp - 0x30 ]
add ecx edi
jne r-xdata
mov eax [ ebp - 0x30 ]
lea esi [ edi + eax ]
mov cl [ esi + edx ]
mov esi [ ebp - 0x40 ]
cmp cl [ edx + esi ]
jne r-xdata
mov ebx [ ebp - 0x3c ]
mov eax ebx
lea esi [ eax + 0x1 ]
mov edx [ ebx ]
mov eax [ edx + 0x10 ]
mov ecx ebx
inc edi
call eax
cmp edi eax
jb r-xdata
mov eax esi
inc edx
lea esi [ eax + 0x1 ]
lea ebx [ ebx ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov edi [ ebp - 0x38 ]
sub eax esi
sub ecx eax
mov eax ebx
sub ecx edi
lea esi [ eax + 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x40 ]
xor edx edx
lea esi [ eax + 0x1 ]
mov edx [ ebp - 0x30 ]
push edx
call sub_1002ee65
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
cmp edx eax
jb r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
mov esi ecx
mov ebx 0xf
add eax edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] dl
call sub_10002640
mov eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_1002ee65
sub esp 0x18
mov edi esp
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x38 ] esp
mov [ edi + 0x14 ] ebx
push ecx
mov [ edi + 0x10 ] 0x0
or ecx 0xffffffff
xor ebx ebx
mov [ edi ] 0x0
call sub_10002780
mov edx [ ebp - 0x44 ]
push edx
call sub_1000b440
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x2c ]
push eax
call sub_1002e8fb
sub_1000b310
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov ebx eax
push edi
mov esi ecx
cmp ebx 0x4
jbe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
call eax
xor ecx ecx
test ebx ebx
je r-xdata
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x20 ]
call eax
mov edi eax
mov edx [ edi ]
add ebx 0xfffffffc
lea eax [ esi + 0x4 ]
push ebx
mov [ ebp - 0x4 ] eax
push eax
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0xc ]
mov ecx edi
call eax
mov ecx [ esi ]
mov edx [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edx ]
mov [ ebp - 0x8 ] ecx
push 0x1
mov ecx edi
call eax
mov ecx [ ebp - 0x8 ]
cmp [ ebp - 0xc ] ecx
jne r-xdata
lea esp [ esp ]
cmp ebx 0x4
jb r-xdata
xor [ ecx + esi ] al
inc ecx
cmp ecx ebx
jb r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
add eax eax
add eax eax
mov [ ebp - 0x10 ] eax
add eax 0x4
cmp ebx eax
jb r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x20 ]
call eax
mov edi eax
test edi edi
je r-xdata
mov edx [ ebp - 0x8 ]
xor eax eax
test edx edx
je r-xdata
push edi
call sub_10026120
mov edx [ edi ]
add esp 0x4
mov [ ebp - 0xc ] eax
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
mov edi [ ebp - 0xc ]
add esi 0x8
lea esp [ esp ]
mov eax [ ebp - 0x10 ]
lea ecx [ eax + 0x5 ]
cmp ebx ecx
jb r-xdata
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov esi [ ebp + 0x8 ]
sub ebx eax
sub ebx 0x5
push ebx
mov bl [ eax + ecx + 0x4 ]
lea edx [ eax + ecx + 0x5 ]
push edx
call sub_1000bac0
inc eax
add esi 0x4
cmp eax edx
jb r-xdata
mov ecx [ esi ]
cmp edi ecx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1000b440
push ebp
mov ebp esp
push 0xffffffff
push sub_1003de68
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x1c ]
inc ecx
push ecx
call sub_1002eb41
mov edx [ ebp + 0x1c ]
add esp 0x4
inc edx
push edx
mov ebx eax
push 0x0
push ebx
mov [ ebp - 0x10 ] ebx
call sub_10032e00
xor eax eax
add esp 0xc
cmp [ ebp + 0x1c ] eax
jbe r-xdata
mov eax ebx
lea edx [ eax + 0x1 ]
mov ecx [ ebp + 0x20 ]
mov esi [ ebp + 0xc ]
mov edx ebx
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
shr eax 0x1
mov edi eax
lea esi [ edi + 0x1 ]
push esi
call sub_1002eb41
add esp 0x4
push esi
mov ebx eax
push 0x0
push ebx
call sub_10032e00
add esp 0xc
xor esi esi
test edi edi
je r-xdata
cmp [ edi + eax ] 0x41
jl r-xdata
lea edi [ ebp + 0xc ]
mov edx [ ebp - 0x10 ]
push edx
call sub_1002ee65
mov eax [ ebp - 0x14 ]
add esp 0x4
push eax
mov eax edi
mov ecx ebx
call sub_1000b310
push ebx
call sub_1002ee65
add esp 0x4
cmp [ ebp + 0x20 ] 0x10
jb r-xdata
mov edx [ ebp - 0x10 ]
mov al [ edx + esi * 2 ]
lea ecx [ eax - 0x41 ]
cmp cl 0x5
ja r-xdata
mov edi esi
cmp ecx 0x10
jae r-xdata
mov edi esi
cmp ecx 0x10
jae r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ecx [ ebp + 0xc ]
push ecx
call sub_1002e8fb
add esp 0x4
lea ecx [ eax - 0x30 ]
mov al 0x9
cmp al cl
sbb al al
not al
and al cl
sub al 0x37
jmp r-xdata
cmp [ edi + eax ] 0x61
jl r-xdata
lea edi [ ebp + 0xc ]
cmp [ edi + eax ] 0x46
jle r-xdata
lea edi [ ebp + 0xc ]
lea edx [ ecx - 0x30 ]
mov cl 0x9
cmp cl dl
sbb cl cl
not cl
and cl dl
sub cl 0x37
jmp r-xdata
mov cl [ edx + esi * 2 + 0x1 ]
lea edx [ ecx - 0x41 ]
cmp dl 0x5
ja r-xdata
mov edi esi
cmp ecx 0x10
jae r-xdata
mov edi esi
cmp ecx 0x10
jae r-xdata
cmp ecx 0x10
jae r-xdata
shl al 0x4
or al cl
mov [ ebx + esi ] al
inc esi
cmp esi edi
jb r-xdata
cmp [ edi + eax ] 0x30
jl r-xdata
lea edi [ ebp + 0xc ]
cmp [ edi + eax ] 0x66
jg r-xdata
lea edi [ ebp + 0xc ]
mov cl [ esi + eax ]
lea esi [ ebp + 0xc ]
inc eax
cmp eax [ ebp + 0x1c ]
jb r-xdata
mov edi esi
cmp ecx 0x10
jae r-xdata
cmp ecx 0x10
mov ecx esi
jae r-xdata
mov edi esi
cmp ecx 0x10
jae r-xdata
cmp [ edi + eax ] 0x39
jg r-xdata
lea edi [ ebp + 0xc ]
mov cl [ ecx + eax ]
sub cl 0x20
jmp r-xdata
lea ecx [ ebp + 0xc ]
mov [ edx ] cl
mov ecx [ ebp + 0x20 ]
mov esi [ ebp + 0xc ]
inc edx
sub_1000b610
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c658
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
cmp [ ebp + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x58 ] ecx
mov cl [ ecx ]
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4d ] cl
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x8
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x2c ]
mov eax [ edx + 0x4 ]
add ecx 0x2c
call eax
xor ebx ebx
xor ecx ecx
mov [ ebp - 0x4c ] cx
mov ecx eax
mov [ ebp - 0x38 ] 0x7
mov [ ebp - 0x3c ] ebx
lea esi [ ecx + 0x2 ]
jmp r-xdata
mov dx [ ecx ]
add ecx 0x2
cmp dx bx
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
lea ecx [ ebp - 0x4c ]
call sub_1000bc70
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x38 ] 0x8
mov eax [ ebp - 0x4c ]
jae r-xdata
mov edi r--data
xor edx edx
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] dx
mov ecx eax
mov [ ebp - 0x4 ] 0x1
lea esi [ ecx + 0x2 ]
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov dx [ ecx ]
add ecx 0x2
cmp dx bx
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
lea ecx [ ebp - 0x2c ]
call sub_1000bc70
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x2
call sub_1000afc0
mov esi eax
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax esi
lea ecx [ ebp - 0x4c ]
call sub_1000bc70
push 0x1
push esi
call sub_1000a460
mov esi eax
add esp 0x8
cmp esi ebx
jne r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp - 0x58 ]
mov eax [ esi ]
mov edx [ eax + 0x8 ]
push ebx
dec edi
inc ecx
push edi
push ecx
mov ecx esi
call edx
cmp edi eax
mov eax [ esi ]
mov ecx esi
je r-xdata
mov [ ebp - 0x30 ] edi
mov edx [ eax ]
push 0x1
call edx
mov eax [ ebp - 0x3c ]
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1002eb41
mov edi 0x8
add esp 0x4
mov esi eax
mov eax [ ebp - 0x4c ]
cmp [ ebp - 0x38 ] edi
jae r-xdata
mov edx [ eax + 0x10 ]
call edx
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
mov [ ebp - 0x30 ] r--data
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] cx
cmp [ ebp - 0x38 ] esi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1002e8fb
add esp 0x4
mov edx esi
sub edx eax
lea eax [ ebp - 0x4c ]
mov esi 0x8
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
cmp cx bx
jne r-xdata
push 0x20
call sub_1002e957
add esp 0x4
cmp eax ebx
je r-xdata
call sub_1002e8fb
add esp 0x4
xor eax eax
movzx ecx [ ebp - 0x4d ]
xor edx edx
cmp ecx 0x1
sete dl
mov [ eax + 0xc ] ebx
mov [ eax ] r--data
mov [ eax + 0x1c ] esi
mov [ eax + 0x18 ] ecx
mov [ eax + 0x4 ] edx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] edx
jmp r-xdata
xor edx edx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] dx
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
mov ecx [ ebp - 0x54 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + 0x1c ] eax
mov ecx [ ecx + 0x24 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov [ ebp - 0x30 ] r--data
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov eax [ ebp - 0x4c ]
push eax
sub_1000b890
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c618
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x50 ] ecx
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x2c ]
mov eax [ edx + 0x4 ]
add ecx 0x2c
call eax
xor ebx ebx
xor ecx ecx
mov [ ebp - 0x4c ] cx
mov edi 0x7
mov ecx eax
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] ebx
lea esi [ ecx + 0x2 ]
mov dx [ ecx ]
add ecx 0x2
cmp dx bx
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
lea ecx [ ebp - 0x4c ]
call sub_1000bc70
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x38 ] 0x8
mov eax [ ebp - 0x4c ]
jae r-xdata
xor edx edx
mov [ ebp - 0x30 ] r--data
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] dx
mov ecx eax
mov [ ebp - 0x4 ] 0x1
lea esi [ ecx + 0x2 ]
lea ebx [ ebx ]
lea eax [ ebp - 0x4c ]
mov dx [ ecx ]
add ecx 0x2
cmp dx bx
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
lea ecx [ ebp - 0x2c ]
call sub_1000bc70
xor ecx ecx
mov eax 0x26d
mov edx 0x2
mul edx
seto cl
mov [ ebp - 0x4 ] 0x2
neg ecx
or ecx eax
push ecx
call sub_1002eb41
push 0x26d
mov edi eax
push ebx
push edi
call sub_10032e00
add esp 0x10
mov eax 0x8
call sub_1002c070
cmp [ ebp - 0x18 ] 0x8
mov ecx [ ebp - 0x2c ]
jae r-xdata
push edi
push ebx
push eax
push ecx
call [ GetTempFileNameW@IAT ]
mov eax edi
lea edx [ eax + 0x2 ]
lea ecx [ ecx ]
lea ecx [ ebp - 0x2c ]
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax edi
lea ecx [ ebp - 0x4c ]
call sub_1000bc70
push 0x10
call sub_1002e957
add esp 0x4
cmp eax ebx
je r-xdata
xor esi esi
mov [ eax ] r--data
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] 0xffffffff
mov esi eax
jmp r-xdata
cmp esi ebx
jne r-xdata
cmp esi ebx
je r-xdata
push 0x1
push edi
mov ecx 0x1
call sub_1000a2f0
test eax eax
jne r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp - 0x50 ]
mov eax [ esi ]
mov edx [ eax + 0x8 ]
push ebx
push edi
push ecx
mov ecx esi
call edx
cmp edi eax
mov eax [ esi ]
mov ecx esi
je r-xdata
mov esi 0x8
jmp r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
mov esi 0x8
jmp r-xdata
mov edx [ eax ]
push 0x1
call edx
mov eax [ ebp - 0x4c ]
mov esi 0x8
cmp [ ebp - 0x38 ] esi
jae r-xdata
mov edx [ eax + 0x10 ]
call edx
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
mov esi 0x8
jmp r-xdata
mov [ ebp - 0x30 ] r--data
cmp [ ebp - 0x18 ] esi
jb r-xdata
push eax
call [ LoadLibraryW@IAT ]
lea eax [ ebp - 0x4c ]
xor ecx ecx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] cx
cmp [ ebp - 0x38 ] esi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1002e8fb
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x4c ]
push edx
call sub_1002e8fb
add esp 0x4
sub_1000bac0
push ebp
mov ebp esp
push ecx
push edi
mov eax 0x12
call sub_1002bff0
mov edi eax
cmp bl [ edi ]
jne r-xdata
cmp bl [ edi + 0x1 ]
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push esi
call sub_1000b890
cmp bl [ edi + 0x2 ]
jne r-xdata
push 0x18
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
cmp bl [ edi + 0x3 ]
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push esi
call sub_1000b610
xor eax eax
mov ecx 0x1
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x0
mov [ eax + 0x10 ] ecx
jmp r-xdata
pop edi
pop ecx
pop ebp
retn 0x8
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x18 ]
mov edx [ ebp + 0xc ]
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
push edx
mov edx [ ebp + 0x8 ]
push edx
call eax
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x1c ] eax
mov ecx [ ecx + 0x24 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
sub_1000bb90
push ebp
mov ebp esp
mov ecx eax
push esi
lea esi [ ecx + 0x2 ]
lea esp [ esp ]
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
mov ecx [ ebp + 0x8 ]
call sub_1000bc70
pop esi
pop ebp
retn 0x4
sub_1000bbc0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ecx + 0x10 ]
cmp esi ebx
jae r-xdata
sub esi ebx
cmp eax esi
jae r-xdata
push r--data
call sub_1003626a
cmp edi ecx
jne r-xdata
mov esi eax
mov eax edi
call sub_1000be00
test al al
je r-xdata
lea ecx [ esi + ebx ]
or eax 0xffffffff
mov esi edi
call sub_1000bd80
mov eax ebx
xor ecx ecx
call sub_1000bd80
pop esi
mov eax edi
pop ebx
pop ebp
retn 0x8
pop esi
mov eax edi
pop ebx
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov eax 0x8
cmp [ ecx + 0x14 ] eax
jb r-xdata
cmp [ edi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax edi
xor edx edx
mov [ ebx + eax ] dx
mov eax [ edi ]
xor edx edx
mov [ ebx + eax ] dx
pop esi
mov eax edi
pop ebx
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
lea ebx [ esi + esi ]
push ebx
lea ecx [ ecx + edx * 2 ]
push ecx
push eax
call sub_10033950
add esp 0xc
cmp [ edi + 0x14 ] 0x8
mov [ edi + 0x10 ] esi
jb r-xdata
sub_1000bc70
push ebp
mov ebp esp
push esi
mov esi eax
push edi
mov edi ecx
test esi esi
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x7ffffffe
jbe r-xdata
mov ecx [ edi + 0x14 ]
cmp ecx 0x8
jb r-xdata
mov eax [ edi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_1003621d
mov eax edi
mov eax [ edi ]
jmp r-xdata
test ebx ebx
jne r-xdata
mov ecx [ edi + 0x10 ]
push ecx
push ebx
push edi
call sub_1000be50
test ebx ebx
je r-xdata
cmp ecx 0x8
jb r-xdata
cmp esi eax
jb r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov [ edi + 0x10 ] ebx
cmp eax 0x8
jb r-xdata
pop ebx
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
pop ebx
mov eax edi
xor edx edx
pop edi
mov [ eax ] dx
pop esi
pop ebp
retn 0x4
mov eax [ edi ]
xor edx edx
pop ebx
mov [ eax ] dx
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
cmp ecx 0x8
jb r-xdata
mov edx [ edi + 0x10 ]
lea eax [ eax + edx * 2 ]
cmp eax esi
jbe r-xdata
mov eax edi
xor ecx ecx
mov [ ebx + eax ] cx
mov eax [ edi ]
xor ecx ecx
mov [ ebx + eax ] cx
pop ebx
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
add ebx ebx
push ebx
push esi
push eax
call sub_10033950
mov eax [ ebp + 0x8 ]
add esp 0xc
cmp [ edi + 0x14 ] 0x8
mov [ edi + 0x10 ] eax
jb r-xdata
mov eax edi
sub esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
push esi
push edi
call sub_1000bbc0
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ edi ]
sub esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
push esi
push edi
call sub_1000bbc0
pop edi
pop esi
pop ebp
retn 0x4
sub_1000bd80
push edi
mov edi eax
mov eax [ esi + 0x10 ]
cmp eax ecx
jae r-xdata
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_1003626a
test edi edi
je r-xdata
mov edi eax
mov eax esi
pop edi
retn
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x8
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
mov ecx esi
xor edx edx
mov [ ecx + eax * 2 ] dx
mov ecx [ esi ]
xor edx edx
mov [ ecx + eax * 2 ] dx
mov eax esi
pop edi
retn
sub eax edi
add eax eax
push eax
lea eax [ ecx + edi ]
lea eax [ ebx + eax * 2 ]
push eax
lea ecx [ edx + ecx * 2 ]
push ecx
call sub_1002e460
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
sub_1000be00
cmp esi 0x7ffffffe
jbe r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx esi
jae r-xdata
push r--data
call sub_1003621d
test esi esi
jne r-xdata
mov ecx [ eax + 0x10 ]
push ecx
push esi
push eax
call sub_1000be50
xor eax eax
cmp eax esi
sbb eax eax
neg eax
retn
xor eax eax
cmp eax esi
sbb eax eax
neg eax
retn
mov [ eax + 0x10 ] esi
cmp ecx 0x8
jb r-xdata
xor edx edx
mov [ eax ] dx
mov eax [ eax ]
sub_1000be50
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b780
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi eax
or esi 0x7
cmp esi 0x7ffffffe
jbe r-xdata
mov ebx [ edi + 0x14 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov esi eax
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
cmp ecx eax
jbe r-xdata
mov eax 0x7ffffffe
sub eax ecx
lea esi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov ebx eax
jmp r-xdata
cmp ecx 0x7fffffff
ja r-xdata
mov esi 0x7ffffffe
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
lea edx [ ebp - 0x14 ]
push edx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x14 ] 0x0
call sub_1002e39e
push r--data
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x20 ] r--data
call sub_10030edf
mov eax [ ebp + 0xc ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x10 ] esp
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x2
call sub_1000bfc0
mov [ ebp - 0x14 ] eax
mov eax r-xdata
retn
add ecx ecx
push ecx
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov [ edi ] ebx
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ecx
cmp esi 0x8
jb r-xdata
mov edx [ edi ]
push edx
call sub_1002e8fb
mov ecx [ ebp + 0x10 ]
add esp 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
xor edx edx
mov [ edi + ecx * 2 ] dx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi ebx
add ecx ecx
push ecx
push eax
push ebx
call sub_10033950
mov ecx [ ebp + 0x10 ]
add esp 0xc
sub_1000bf8f
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
push ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
push ecx
mov [ esi ] cx
call sub_10030edf
int3
mov eax [ esi ]
push eax
call sub_1002e8fb
add esp 0x4
sub_1000bfc0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x7fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_1002e39e
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_10030edf
lea eax [ ecx + ecx ]
push eax
call sub_1002e957
add esp 0x4
test eax eax
jne r-xdata
sub_1000c010
push esi
mov esi eax
push edi
cmp esi 0x4
jb r-xdata
test esi esi
je r-xdata
lea esp [ esp ]
pop edi
xor eax eax
pop esi
retn
movzx eax [ edx ]
movzx edi [ ecx ]
sub eax edi
jne r-xdata
sub esi 0x4
add ecx 0x4
add edx 0x4
cmp esi 0x4
jae r-xdata
sar eax 0x1f
pop edi
or eax 0x1
pop esi
retn
cmp esi 0x1
jbe r-xdata
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
movzx eax [ edx + 0x1 ]
movzx edi [ ecx + 0x1 ]
sub eax edi
jne r-xdata
cmp esi 0x2
jbe r-xdata
movzx eax [ edx + 0x2 ]
movzx edi [ ecx + 0x2 ]
sub eax edi
jne r-xdata
cmp esi 0x3
jbe r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
sub_1000c090
push ebp
mov ebp esp
push 0xffffffff
push sub_1003be38
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x58 ]
call edx
mov esi eax
mov eax [ edi + 0x14 ]
push eax
call sub_1002eb41
mov ecx [ edi + 0x14 ]
push ecx
mov ebx eax
push 0x0
push ebx
call sub_10032e00
mov edx [ esi ]
mov eax [ edx + 0xc ]
add esp 0x10
push 0x0
push ebx
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
push ebx
call sub_1002ee65
mov ecx [ edi + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x58 ]
add esp 0x4
call eax
mov edi [ edi + 0x8 ]
mov esi [ edi ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x34 ] edi
cmp esi edi
je r-xdata
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
push eax
or ecx 0xffffffff
xor ebx ebx
lea edi [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
call sub_10002780
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov edx [ eax ]
mov ecx eax
mov eax [ edx ]
push 0x1
call eax
mov edi [ ebp - 0x1c ]
mov ecx [ ebp - 0x30 ]
mov edx [ ecx ]
inc edi
push edi
push eax
mov eax [ edx + 0xc ]
call eax
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax edi
mov esi [ esi ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp esi [ ebp - 0x34 ]
jne r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
mov eax [ ebp - 0x30 ]
sub_1000c1c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003be08
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x4 ] 0x0
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov edi [ edi + 0x8 ]
mov ebx [ edi ]
mov [ ebp - 0x10 ] edi
cmp ebx edi
je r-xdata
call sub_1000c2b0
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
mov edi [ ebp + 0x18 ]
lea esp [ esp ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov ecx [ ebp + 0x8 ]
push ecx
call sub_1002e8fb
add esp 0x4
lea ecx [ ebx + 0x8 ]
mov ecx [ ebx + 0x8 ]
jmp r-xdata
cmp [ ebp + 0x1c ] 0x10
mov edx [ ebp + 0x8 ]
jae r-xdata
mov eax esi
mov eax edi
cmp edi esi
jb r-xdata
call sub_1000c010
test eax eax
jne r-xdata
lea edx [ ebp + 0x8 ]
mov ebx [ ebx ]
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp edi esi
jb r-xdata
cmp [ ebx + 0x1c ] 0x10
mov esi [ ebx + 0x18 ]
jb r-xdata
cmp edi esi
setne al
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov eax [ ebp + 0x8 ]
push eax
call sub_1002e8fb
add esp 0x4
sub_1000c2b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003be38
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x54 ]
call edx
mov esi eax
mov [ edi + 0x18 ] 0x0
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
mov [ ebp - 0x38 ] esi
call edx
lea ebx [ edi + 0x8 ]
mov [ edi + 0x14 ] eax
call sub_10002870
mov eax [ edi + 0x14 ]
inc eax
push eax
call sub_1002eb41
mov ebx [ esi ]
mov edx [ ebx + 0x10 ]
add esp 0x4
mov ecx esi
mov [ ebp - 0x30 ] eax
call edx
mov edx [ ebx + 0x14 ]
push eax
mov eax [ ebp - 0x30 ]
push eax
mov ecx esi
call edx
mov ebx eax
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
cmp eax ebx
mov ebx [ ebp - 0x30 ]
jne r-xdata
push ebx
call sub_1002ee65
mov edx [ esi ]
mov eax [ edx ]
add esp 0x4
push 0x1
mov ecx esi
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x14 ]
mov [ ebx + eax ] 0x0
mov eax ebx
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x34 ] ecx
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax [ ebp - 0x34 ]
je r-xdata
mov eax ebx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
mov esi eax
mov eax ebx
lea ecx [ ebp - 0x2c ]
call sub_10002640
mov [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x8 ]
mov eax [ esi + 0x4 ]
lea edx [ ebp - 0x2c ]
push edx
push eax
push esi
call sub_100028c0
mov ecx [ edi + 0xc ]
mov edx 0x9249248
sub edx ecx
cmp edx 0x1
jb r-xdata
push r--data
call sub_1003621d
inc ecx
mov [ edi + 0xc ] ecx
mov [ esi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1c ]
inc eax
add [ edi + 0x18 ] eax
mov eax ebx
lea esi [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x10
lea ebx [ ebx + eax + 0x1 ]
jb r-xdata
mov eax ebx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
jne r-xdata
mov ebx [ ebp - 0x30 ]
mov esi [ ebp - 0x38 ]
sub_1000c460
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
lea ebx [ esi + 0x8 ]
mov [ esi ] r--data
call sub_10002870
mov eax [ ebx ]
push eax
call sub_1002e8fb
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1000c4a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c5d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x18 ] ebx
je r-xdata
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] ebx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x1c
mov eax [ ebp + 0x8 ]
push eax
call sub_1002e8fb
add esp 0x4
mov ecx [ esi + 0x18 ]
mov edx [ ebp + 0x18 ]
lea eax [ edx + ecx + 0x1 ]
cmp eax [ esi + 0x14 ]
jbe r-xdata
mov edi esi
call sub_1000c2b0
mov edi [ esi + 0x8 ]
mov ecx [ edi + 0x4 ]
lea eax [ ebp + 0x8 ]
push eax
push ecx
push edi
call sub_100028c0
mov ecx [ esi + 0xc ]
mov edx 0x9249248
sub edx ecx
cmp edx 0x1
jae r-xdata
jmp r-xdata
inc ecx
mov [ esi + 0xc ] ecx
mov [ edi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
mov edx [ ebp + 0x18 ]
inc edx
add [ esi + 0x18 ] edx
mov ecx esi
call sub_1000c090
push r--data
call sub_1003621d
cmp [ esi + 0xc ] ebx
jbe r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
add eax 0x8
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
push eax
or ecx 0xffffffff
xor ebx ebx
lea edi [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
call sub_10002780
or edx 0xffffffff
sub edx [ ebp - 0x1c ]
add [ esi + 0x18 ] edx
mov eax [ esi + 0x8 ]
mov edi [ eax ]
cmp edi eax
je r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
mov [ eax ] ecx
mov edx [ edi ]
mov eax [ edi + 0x4 ]
mov [ edx + 0x4 ] eax
cmp [ edi + 0x1c ] 0x10
jb r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ ebp + 0x18 ]
lea edx [ ecx + eax + 0x1 ]
cmp edx [ esi + 0x14 ]
ja r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1002e8fb
add esp 0x4
xor eax eax
mov [ edi + 0x1c ] 0xf
mov [ edi + 0x18 ] eax
push edi
mov [ edi + 0x8 ] al
call sub_1002e8fb
add esp 0x4
dec [ esi + 0xc ]
mov ecx [ edi + 0x8 ]
push ecx
call sub_1002e8fb
add esp 0x4
xor ebx ebx
sub_1000c630
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1000c660
push ebp
mov ebp esp
push 0xffffffff
push sub_1003bdde
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ edi ] r--data
mov [ edi + 0x18 ] ebx
mov [ edi + 0x1c ] ebx
mov [ edi + 0x20 ] ebx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x1
push 0x1c
mov [ edi + 0x2c ] eax
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x2
cmp esi ebx
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x28 ]
mov [ esi ] r--data
push 0x24
mov [ ebp + 0xc ] edx
mov [ esi + 0xc ] ebx
call sub_1002e957
add esp 0x4
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ebx
call sub_1002e39e
push r--data
lea edx [ ebp - 0x20 ]
push edx
mov [ ebp - 0x20 ] r--data
call sub_10030edf
mov [ esi + 0x8 ] eax
mov [ eax ] eax
mov eax [ esi + 0x8 ]
mov [ eax + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] eax
jmp r-xdata
mov [ edi + 0x28 ] esi
mov [ edi + 0x10 ] ebx
mov [ edi + 0x14 ] ebx
mov [ edi + 0x8 ] 0xd4344880
mov [ edi + 0xc ] 0x6
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_1000c750
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a763
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x28 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x18 ] 0x0
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x20 ] 0x0
mov [ esi ] r--data
je r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1000c7f0
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
lea eax [ ebp - 0x14 ]
push eax
mov esi ecx
call [ GetLocalTime@IAT ]
lea ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
call [ SystemTimeToFileTime@IAT ]
test eax eax
je r-xdata
xor edi edi
xor edx edx
mov edx [ ebp - 0x18 ]
mov edi [ ebp - 0x1c ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_1002e0f2
mov esp ebp
pop ebp
retn
jl r-xdata
mov ecx [ esi + 0x10 ]
add ecx [ esi + 0x8 ]
mov eax [ esi + 0x14 ]
adc eax [ esi + 0xc ]
cmp eax edx
jg r-xdata
pop edi
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
cmp ecx edi
jae r-xdata
sub_1000c870
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
mov ecx [ esi + 0x1c ]
push edi
mov edi [ esi + 0x18 ]
cmp edi ecx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
call [ GetLocalTime@IAT ]
lea ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
call [ SystemTimeToFileTime@IAT ]
test eax eax
je r-xdata
mov eax ecx
sub eax ecx
push ebx
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push ecx
push edi
call sub_1002e460
add esp 0xc
add ebx edi
mov [ esi + 0x1c ] ebx
pop ebx
xor eax eax
xor ecx ecx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov ecx [ ebp - 0x4 ]
pop edi
mov [ esi + 0x10 ] eax
xor ecx ebp
pop esi
call sub_1002e0f2
mov esp ebp
pop ebp
retn
sub_1000c8f0
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax 0x13
mov [ ebp - 0x278 ] 0x0
call sub_1002bff0
mov ecx [ ebp + 0x8 ]
push ecx
push eax
lea edx [ ebp - 0x274 ]
push r--data
push edx
call sub_1002ec96
lea eax [ ebp - 0x274 ]
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
add esp 0x10
mov [ edi ] 0x0
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push esi
mov esi eax
lea eax [ ebp - 0x274 ]
mov ecx edi
call sub_10002640
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax edi
pop esi
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
sub_1000c980
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
lea eax [ ebp - 0x14 ]
push eax
mov esi ecx
mov [ ebp - 0x18 ] ebx
call [ GetLocalTime@IAT ]
lea ecx [ ebp - 0x20 ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
call [ SystemTimeToFileTime@IAT ]
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x1c ]
jmp r-xdata
mov eax [ esi + 0x1c ]
lea ecx [ ebp - 0x18 ]
cmp ecx eax
jae r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
sub esp 0x1c
mov edi esp
mov [ ebp - 0x1c ] esp
push ebx
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] ecx
call sub_1000c8f0
mov ecx [ esi + 0x28 ]
call sub_1000c1c0
test eax eax
je r-xdata
cmp eax [ esi + 0x20 ]
jne r-xdata
mov ecx [ esi + 0x18 ]
lea edx [ ebp - 0x18 ]
cmp ecx edx
ja r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
lea eax [ esi + 0x18 ]
call sub_10001660
mov edi edx
sub edi ecx
sar edi 0x2
cmp eax [ esi + 0x20 ]
jne r-xdata
add [ esi + 0x1c ] 0x4
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
mov [ eax ] ebx
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
lea eax [ esi + 0x18 ]
call sub_10001660
mov ecx [ esi + 0x18 ]
mov edx [ ecx + edi * 4 ]
mov [ eax ] edx
jmp r-xdata
sub_1000ca90
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003ae28
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
xor ebx ebx
xor esi esi
xor edx edx
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] ebx
lea eax [ ecx + 0x18 ]
mov [ esp + 0x38 ] ebx
mov edi [ eax ]
mov ecx [ ecx + 0x1c ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] ecx
cmp edi ecx
je r-xdata
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x1c ]
call sub_1000ccc0
test esi esi
je r-xdata
mov edi edi
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
add edi 0x4
mov [ esp + 0x10 ] edi
cmp edi [ esp + 0x14 ]
jne r-xdata
cmp edi edx
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp [ edi ] eax
je r-xdata
cmp edx ebx
jne r-xdata
cmp esi edi
ja r-xdata
test edx edx
je r-xdata
mov eax edx
sub eax esi
sar eax 0x2
cmp eax 0x3ffffffe
ja r-xdata
sub edi esi
sar edi 0x2
cmp edx ebx
jne r-xdata
add edx 0x4
mov [ esp + 0x20 ] edx
mov eax [ edi ]
mov [ edx ] eax
push r--data
call sub_1003621d
mov ecx ebx
sub ecx esi
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
test edx edx
je r-xdata
mov eax edx
sub eax esi
sar eax 0x2
cmp eax 0x3ffffffe
ja r-xdata
mov edx ecx
shr edx 0x1
mov esi 0x3fffffff
sub esi edx
cmp esi ecx
jae r-xdata
mov edi [ esp + 0x10 ]
jmp r-xdata
mov ecx [ esi + edi * 4 ]
mov [ edx ] ecx
mov ecx ebx
sub ecx esi
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x1
mov esi 0x3fffffff
sub esi edx
cmp esi ecx
jae r-xdata
push ecx
lea esi [ esp + 0x20 ]
call sub_100016b0
mov ebx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
mov esi [ esp + 0x1c ]
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
lea esi [ esp + 0x20 ]
call sub_100016b0
mov ebx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
mov esi [ esp + 0x1c ]
mov ecx eax
cmp ecx eax
jae r-xdata
sub_1000cc20
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003df68
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x20 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov esi [ ebp + 0xc ]
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
mov [ esp + 0x14 ] r--data
lea eax [ esp + 0x14 ]
mov [ esp + 0x28 ] 0x0
mov ecx [ ebx + 0x2c ]
push eax
mov edx esi
call sub_1000b070
mov ecx [ ebp + 0x8 ]
sub esp 0x1c
mov edi esp
mov [ esp + 0x2c ] esp
push ecx
call sub_1000c8f0
mov esi [ ebx + 0x28 ]
call sub_1000c4a0
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x18 ]
push eax
mov ecx ebx
call edx
mov eax 0x1
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_1000ccc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov esi ecx
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x4 ]
mov eax [ ebx ]
mov edx ecx
sub edx eax
sar edx 0x2
push edi
mov edi [ esi ]
mov [ ebp - 0x4 ] edx
test edx edx
jne r-xdata
mov edx [ esi + 0x4 ]
sub edx edi
sar edx 0x2
cmp [ ebp - 0x4 ] edx
ja r-xdata
mov ecx [ esi + 0x4 ]
cmp edi ecx
je r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x2
cmp [ ebp - 0x4 ] ecx
ja r-xdata
sub ecx eax
sar ecx 0x2
add ecx ecx
add ecx ecx
push ecx
push eax
push edi
call sub_1002e460
mov eax [ ebx + 0x4 ]
sub eax [ ebx ]
mov ecx [ esi ]
add esp 0xc
sar eax 0x2
lea edx [ ecx + eax * 4 ]
pop edi
mov [ esi + 0x4 ] edx
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pop edi
mov eax ecx
sub eax ecx
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push ecx
push edi
call sub_1002e460
add esp 0xc
add ebx edi
pop edi
mov [ esi + 0x4 ] ebx
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
test eax eax
je r-xdata
lea edi [ eax + edx * 4 ]
mov edx edi
sub edx eax
sar edx 0x2
add edx edx
add edx edx
push edx
push eax
mov eax [ esi ]
push eax
call sub_1002e460
mov eax [ ebx + 0x4 ]
mov ecx [ esi + 0x4 ]
sub eax edi
sar eax 0x2
lea ebx [ eax * 4 ]
push ebx
push edi
push ecx
call sub_1002e460
add esp 0x18
add eax ebx
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x4 ]
sub edi [ ebx ]
sar edi 0x2
call sub_1000cde0
test al al
je r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov eax [ esi ]
mov ecx [ ebx ]
push eax
mov eax [ ebx + 0x4 ]
call sub_1000ce20
mov [ esi + 0x4 ] eax
sub_1000cde0
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi eax
jne r-xdata
cmp edi 0x3fffffff
jbe r-xdata
xor al al
retn
mov ecx edi
call sub_10001730
mov [ esi ] eax
mov [ esi + 0x4 ] eax
lea eax [ eax + edi * 4 ]
mov [ esi + 0x8 ] eax
mov al 0x1
retn
push r--data
call sub_1003621d
sub_1000ce20
push ebp
mov ebp esp
sub eax ecx
push esi
sar eax 0x2
lea esi [ eax * 4 ]
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_1002e460
add esp 0xc
add eax esi
pop esi
pop ebp
retn 0x4
sub_1000ce50
push ebp
mov ebp esp
push 0xffffffff
push sub_1003bd98
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x34 ] 0x0
call edx
inc eax
push eax
call sub_1002eb41
mov edi eax
mov eax [ esi ]
mov edx [ eax + 0x10 ]
add esp 0x4
mov ecx esi
call edx
inc eax
push eax
push 0x0
push edi
call sub_10032e00
mov eax [ esi ]
mov [ ebp - 0x30 ] eax
mov eax [ eax + 0x10 ]
add esp 0xc
mov ecx esi
call eax
mov edx [ ebp - 0x30 ]
push eax
mov eax [ edx + 0x14 ]
push edi
mov ecx esi
call eax
mov edx [ esi ]
mov edx [ edx + 0x10 ]
mov ecx esi
mov [ ebp - 0x30 ] eax
call edx
cmp eax [ ebp - 0x30 ]
jne r-xdata
push edi
call sub_1002ee65
mov [ ebx + 0x14 ] 0xf
mov [ ebx + 0x10 ] 0x0
add esp 0x4
xor esi esi
mov eax r--data
mov ecx ebx
mov [ ebx ] 0x0
call sub_10002640
mov eax 0x15
call sub_1002bff0
mov esi eax
mov eax 0x16
call sub_1002bff0
push esi
push edi
mov [ ebp - 0x30 ] eax
call sub_1002ec10
mov esi eax
add esp 0x8
mov [ ebp - 0x34 ] esi
test esi esi
je r-xdata
mov eax [ ebp - 0x30 ]
push eax
push esi
call sub_1002ec10
add esp 0x8
test eax eax
je r-xdata
sub eax esi
mov esi eax
mov eax [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
call sub_10002640
xor esi esi
push edi
mov [ ebp - 0x4 ] esi
call sub_1002ee65
mov [ ebx + 0x10 ] esi
mov [ ebx + 0x14 ] 0xf
add esp 0x4
lea edi [ ebp - 0x2c ]
mov esi ebx
mov [ ebx ] 0x0
call sub_100025d0
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
jmp r-xdata
sub_1000cfc0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b761
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
mov ecx [ esi + 0x48 ]
xor ebx ebx
cmp ecx ebx
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call [ DeleteCriticalSection@IAT ]
cmp [ esi + 0x90 ] 0x10
jb r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x48 ] ebx
mov [ esi + 0x90 ] 0xf
mov [ esi + 0x8c ] ebx
mov [ esi + 0x7c ] bl
cmp [ esi + 0x68 ] 0x10
jb r-xdata
mov ecx [ esi + 0x7c ]
push ecx
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x64 ] ebx
mov [ esi + 0x68 ] 0xf
mov [ esi + 0x54 ] bl
lea ebx [ esi + 0x4 ]
call sub_10002870
mov eax [ ebx ]
push eax
call sub_1002e8fb
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi + 0x54 ]
push edx
call sub_1002e8fb
add esp 0x4
sub_1000d080
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1000cfc0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1000d0e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d239
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov edi ecx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] ebx
push 0x24
mov [ esi + 0x4 ] ebx
call sub_1002e957
add esp 0x4
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x1c ] ebx
call sub_1002e39e
push r--data
lea ecx [ ebp - 0x28 ]
push ecx
mov [ ebp - 0x28 ] r--data
call sub_10030edf
int3
mov [ esi ] eax
mov [ eax ] eax
mov eax [ esi ]
mov [ eax + 0x4 ] eax
lea eax [ edi + 0x10 ]
mov [ ebp - 0x4 ] ebx
push eax
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x1c ] eax
call [ EnterCriticalSection@IAT ]
add edi 0x4
cmp esi edi
je r-xdata
cmp [ esi + 0x4 ] ebx
jbe r-xdata
mov eax [ edi ]
mov [ ebp - 0x14 ] eax
mov eax [ eax ]
mov ebx esi
mov [ ebp - 0x18 ] eax
call sub_10002870
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x14 ]
mov eax [ esi ]
mov eax [ eax ]
push ecx
mov ecx [ ebp - 0x18 ]
push edx
push ecx
push eax
push esi
call sub_1000de50
xor ebx ebx
mov edx [ ebp - 0x1c ]
push edx
call [ LeaveCriticalSection@IAT ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx edi
call sub_10002870
sub_1000d1d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003bd69
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov ebx [ ebp + 0x8 ]
lea edi [ ebx + 0x8 ]
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] eax
mov [ edi ] al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x28 ]
push eax
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x14 ] eax
call [ EnterCriticalSection@IAT ]
mov eax [ esi + 0x74 ]
mov [ ebx ] eax
mov ecx [ esi + 0x78 ]
mov [ ebx + 0x4 ] ecx
lea edx [ esi + 0x7c ]
push edx
or ecx 0xffffffff
xor ebx ebx
call sub_10002780
mov edi [ ebp + 0x8 ]
mov eax [ esi + 0x98 ]
mov [ edi + 0x24 ] eax
cmp [ edi ] ebx
je r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
call [ LeaveCriticalSection@IAT ]
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ esi + 0x74 ] eax
mov [ esi + 0x78 ] eax
mov [ esi + 0x7c ] eax
mov [ esi + 0x80 ] eax
mov [ esi + 0x84 ] eax
mov [ esi + 0x88 ] eax
mov [ esi + 0x8c ] eax
mov [ esi + 0x90 ] eax
mov [ esi + 0x94 ] eax
mov [ esi + 0x98 ] eax
sub_1000d2b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003bd28
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi ecx
mov edi [ esi ]
mov edx [ edi + 0xc ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x2d ] 0x0
call edx
mov edx [ edi + 0x8 ]
push eax
push 0x1
lea eax [ ebp - 0x2d ]
push eax
mov ecx esi
call edx
test eax eax
jne r-xdata
mov esi [ esi + 0x4 ]
mov eax 0x17
call sub_1002bff0
push eax
push esi
call sub_1002ec10
add esp 0x8
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x18
call sub_1002bff0
mov edi eax
mov eax 0x16
mov [ ebp - 0x38 ] edi
call sub_1002bff0
push edi
push esi
mov [ ebp - 0x3c ] eax
call sub_1002ec10
mov edi eax
add esp 0x8
test edi edi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
mov eax 0x1
mov eax [ ebp - 0x3c ]
push eax
push edi
call sub_1002ec10
mov ebx eax
mov esi ebx
add esp 0x8
sub esi edi
mov eax edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
call sub_10002640
mov edi [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov esi [ eax ]
mov edx [ esi + 0x4 ]
lea ecx [ ebp - 0x2c ]
push ecx
push edx
push esi
call sub_100028c0
mov ecx [ edi + 0x4 ]
mov edx 0x9249248
sub edx ecx
cmp edx 0x1
jb r-xdata
push r--data
call sub_1003621d
inc ecx
mov [ edi + 0x4 ] ecx
mov [ esi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
mov eax [ ebp - 0x38 ]
push eax
inc ebx
push ebx
call sub_1002ec10
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x10
mov edi eax
jb r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
sub_1000d420
push ebp
mov ebp esp
sub esp 0x8
xor eax eax
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push edx
mov edx [ ebp + 0x8 ]
push edx
call eax
test eax eax
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ esi ]
mov edx [ edx + 0xc ]
push eax
push ecx
mov ecx esi
call edx
mov eax [ ebp - 0x4 ]
push eax
call sub_1002ee65
add esp 0x4
mov eax 0x1
mov esp ebp
pop ebp
retn 0x4
sub_1000d480
push ebp
mov ebp esp
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
push ebx
push esi
lea ebx [ edi + 0x28 ]
push ebx
call [ EnterCriticalSection@IAT ]
mov edx [ ebp + 0x8 ]
xor eax eax
mov [ edi + 0x74 ] eax
mov [ edi + 0x78 ] eax
mov [ edi + 0x7c ] eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
mov [ edi + 0x88 ] eax
mov [ edi + 0x8c ] eax
mov [ edi + 0x90 ] eax
mov [ edi + 0x94 ] eax
mov [ edi + 0x98 ] eax
mov eax edx
lea esi [ eax + 0x1 ]
lea esp [ esp ]
xor eax eax
pop ebp
retn 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
mov esi eax
lea ecx [ edi + 0x7c ]
mov eax edx
call sub_10002640
push 0x0
push 0x0
push edi
push sub_1000dcc0
push 0x0
push 0x0
call [ CreateThread@IAT ]
push ebx
mov [ edi + 0x44 ] eax
call [ LeaveCriticalSection@IAT ]
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x4
sub_1000d520
push ebp
mov ebp esp
push 0xffffffff
push sub_1003bcf9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] esi
push eax
mov ebx ecx
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] esi
call [ GetSystemTime@IAT ]
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] esi
mov eax r--data
mov ecx edi
mov [ edi ] 0x0
call sub_10002640
mov [ ebp - 0x4 ] esi
movzx ecx [ ebp - 0x1a ]
mov eax ecx
cdq
mov esi 0x5
idiv esi
movzx esi [ ebx + 0x70 ]
movzx eax [ ebp - 0x1e ]
mov ebx [ ebx + 0x50 ]
mov [ ebp - 0x2c ] 0x1
sub esi edx
mov edx eax
shl edx 0x4
sub edx eax
movzx eax [ ebp - 0x20 ]
add esi ecx
lea ecx [ esi + edx * 2 ]
mov edx [ ebx ]
add eax ecx
push eax
mov eax [ edx + 0x24 ]
mov ecx ebx
call eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x28 ] 0x0
jmp r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x4 ]
call eax
mov ecx eax
mov eax 0x4ec4ec4f
mul ecx
mov eax [ edi + 0x10 ]
shr edx 0x3
imul edx edx 0x1a
sub ecx edx
mov ebx ecx
or ecx 0xffffffff
sub ecx eax
cmp ecx 0x1
jbe r-xdata
push r--data
call sub_1003621d
lea esi [ eax + 0x1 ]
cmp esi 0xfffffffe
ja r-xdata
mov ecx [ edi + 0x14 ]
cmp ecx esi
jae r-xdata
test esi esi
jne r-xdata
push eax
push esi
push edi
call sub_10002a00
jmp r-xdata
setne al
test al al
je r-xdata
mov [ edi + 0x10 ] esi
cmp ecx 0x10
jb r-xdata
test esi esi
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
cmp eax 0xa
jl r-xdata
mov ecx [ edi + 0x10 ]
mov edx 0x10
add bl 0x61
cmp [ edi + 0x14 ] edx
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x24 ]
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov [ eax ] 0x0
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov [ eax + ecx ] bl
mov [ edi + 0x10 ] esi
cmp [ edi + 0x14 ] edx
jb r-xdata
mov [ eax + esi ] 0x0
sub_1000d6a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c5b1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi [ ebp + 0x8 ]
mov [ edi ] r--data
xor ebx ebx
push 0x24
mov [ edi + 0x8 ] ebx
call sub_1002e957
add esp 0x4
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] ebx
call sub_1002e39e
push r--data
lea ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x1c ] r--data
call sub_10030edf
int3
mov [ edi + 0x4 ] eax
mov [ eax ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov [ ebp - 0x4 ] ebx
xor eax eax
mov ecx 0xf
mov [ edi + 0x68 ] ecx
mov [ edi + 0x64 ] eax
mov [ edi + 0x54 ] al
mov [ edi + 0x90 ] ecx
mov [ edi + 0x8c ] eax
mov [ edi + 0x7c ] al
mov [ ebp - 0x4 ] 0x2
mov [ edi + 0x40 ] eax
mov [ edi + 0x44 ] eax
lea eax [ edi + 0x10 ]
push eax
call [ InitializeCriticalSection@IAT ]
lea ecx [ edi + 0x28 ]
push ecx
call [ InitializeCriticalSection@IAT ]
mov [ edi + 0x48 ] esi
mov edx [ esi ]
mov eax [ edx + 0xc ]
push ebx
mov ecx esi
call eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ edi + 0x50 ] ecx
mov ecx [ ebp + 0x14 ]
mov [ edi + 0x4c ] eax
mov eax ecx
mov [ edi + 0x70 ] edx
lea esi [ eax + 0x1 ]
lea esp [ esp ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
mov esi eax
mov eax ecx
lea ecx [ edi + 0x54 ]
call sub_10002640
xor eax eax
mov [ edi + 0x74 ] eax
mov [ edi + 0x78 ] eax
mov [ edi + 0x7c ] eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
mov [ edi + 0x88 ] eax
mov [ edi + 0x8c ] eax
mov [ edi + 0x90 ] eax
mov [ edi + 0x94 ] eax
mov [ edi + 0x98 ] eax
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_1000d7f0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003c568
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x68 ] 0x10
lea eax [ esi + 0x54 ]
jb r-xdata
push eax
mov ecx esi
call sub_1000d8c0
test eax eax
jne r-xdata
mov eax [ eax ]
mov ecx [ esi + 0x40 ]
add esi 0x40
push ecx
call [ CloseHandle@IAT ]
push 0x0
push esi
call [ InterlockedExchange@IAT ]
xor eax eax
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x1c ]
xor ecx esp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
lea edi [ esp + 0xc ]
mov ecx esi
call sub_1000d520
mov [ esp + 0x38 ] 0x0
cmp [ esp + 0x20 ] 0x10
mov eax [ esp + 0xc ]
jae r-xdata
push eax
mov ecx esi
call sub_1000d8c0
cmp [ esp + 0x20 ] 0x10
jb r-xdata
mov eax edi
mov eax [ esp + 0xc ]
push eax
call sub_1002e8fb
add esp 0x4
sub_1000d8c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c530
mov eax [ fs : 0x0 ]
push eax
sub esp 0x78
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi ecx
mov ecx [ esi + 0x4c ]
mov edx [ ecx ]
mov [ ebp - 0x5c ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x60 ] esi
call eax
mov ecx [ esi + 0x4c ]
mov edx [ ecx ]
mov ebx eax
mov eax [ edx + 0x8 ]
call eax
mov edi eax
xor eax eax
cmp ebx eax
je r-xdata
cmp edi eax
je r-xdata
cmp edi eax
je r-xdata
xor eax eax
mov eax [ edi ]
mov ecx edi
mov eax [ ebx ]
mov ecx ebx
jmp r-xdata
mov [ ebp - 0x54 ] r--data
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x48 ] 0x1
lea esi [ ebp - 0x54 ]
mov [ ebp - 0x4 ] eax
call sub_10009ff0
test eax eax
jne r-xdata
mov edx [ eax ]
push 0x1
call edx
xor esi esi
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x74 ] r--data
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x64 ] 0xffffffff
lea eax [ esi + 0x14 ]
mov [ ebp - 0x4 ] 0x1
call sub_1002bff0
mov ecx eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0xf
mov [ ebp - 0x30 ] 0x0
lea esi [ ecx + 0x1 ]
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
mov ecx esi
call sub_1000a130
jmp r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
mov esi ecx
lea ecx [ ebp - 0x30 ]
call sub_10002640
mov edx [ ebp - 0x5c ]
mov eax edx
mov [ ebp - 0x4 ] 0x2
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
mov eax edx
lea ecx [ ebp - 0x30 ]
call sub_10003f80
cmp [ ebp - 0x1c ] 0x10
mov eax [ ebp - 0x30 ]
jae r-xdata
mov edx [ edi ]
push eax
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
push edi
lea esi [ ebp - 0x74 ]
mov ecx ebx
call sub_1000d420
mov edx [ ebx ]
test eax eax
mov eax [ edx ]
push 0x1
mov ecx ebx
jne r-xdata
lea eax [ ebp - 0x30 ]
call eax
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
xor esi esi
push 0x24
mov [ ebp - 0x38 ] esi
call sub_1002e957
add esp 0x4
cmp eax esi
je r-xdata
call eax
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
lea ecx [ ebp - 0x58 ]
push ecx
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x58 ] esi
call sub_1002e39e
push r--data
lea edx [ ebp - 0x80 ]
push edx
mov [ ebp - 0x80 ] r--data
call sub_10030edf
mov [ eax ] eax
mov [ ebp - 0x3c ] eax
mov [ eax + 0x4 ] eax
lea ecx [ ebp - 0x3c ]
push ecx
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x3
call sub_1000d2b0
test eax eax
jne r-xdata
mov edi [ ebp - 0x60 ]
lea esi [ edi + 0x10 ]
push esi
call [ EnterCriticalSection@IAT ]
lea ecx [ edi + 0x4 ]
lea eax [ ebp - 0x3c ]
call sub_1000de20
push esi
call [ LeaveCriticalSection@IAT ]
lea ebx [ ebp - 0x3c ]
call sub_10002870
mov eax [ ebp - 0x3c ]
push eax
call sub_1002e8fb
add esp 0x4
lea esi [ ebp - 0x30 ]
call sub_10002580
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x74 ] r--data
call sub_1000a130
mov eax 0x1
jmp r-xdata
lea ebx [ ebp - 0x3c ]
call sub_10002870
mov edx [ ebp - 0x3c ]
push edx
call sub_1002e8fb
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
lea esi [ ebp - 0x30 ]
call sub_10002580
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x74 ] r--data
call sub_1000a130
jmp r-xdata
sub_1000db30
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b723
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x4c ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov ecx [ esi + 0x4c ]
mov ebx eax
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] ebx
call edx
xor esi esi
mov edi eax
cmp ebx esi
je r-xdata
cmp edi esi
je r-xdata
cmp edi esi
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi ]
mov ecx edi
mov eax [ ebx ]
mov ecx ebx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ edi ]
mov edx [ eax + 0x8 ]
push ecx
mov ecx edi
call edx
push 0x18
call sub_1002e957
add esp 0x4
cmp eax esi
je r-xdata
mov edx [ eax ]
push 0x1
call edx
xor ebx ebx
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov [ eax + 0x14 ] esi
mov [ eax + 0x10 ] esi
mov [ eax + 0xc ] 0x1
mov ebx eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x14 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
push edi
lea esi [ ebp - 0x24 ]
mov [ ebp - 0x4 ] eax
call sub_1000d420
mov ecx [ ebp - 0x10 ]
test eax eax
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
je r-xdata
mov ecx [ ebp - 0x10 ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
mov esi ebx
call sub_10009ff0
test eax eax
jne r-xdata
call edx
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
test ebx ebx
je r-xdata
call edx
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
push 0x18
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp + 0x8 ] esi
xor edi edi
mov [ ebp - 0x4 ] 0x1
cmp esi edi
je r-xdata
xor esi esi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx ]
mov edx [ eax + 0xc ]
mov ecx ebx
call edx
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] edi
mov [ esi + 0x10 ] edi
mov [ esi ] r--data
mov [ esi + 0x14 ] ebx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1000dcc0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c4e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x2c ] al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x28 ]
push eax
mov [ ebp - 0x54 ] eax
call [ EnterCriticalSection@IAT ]
lea eax [ esi + 0x7c ]
push eax
or ecx 0xffffffff
xor ebx ebx
lea edi [ ebp - 0x2c ]
call sub_10002780
mov ecx [ ebp - 0x54 ]
push ecx
call [ LeaveCriticalSection@IAT ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push eax
mov ecx esi
call sub_1000db30
mov edi eax
mov [ ebp - 0x4c ] edi
test edi edi
je r-xdata
mov eax edi
mov ebx [ ebp - 0x54 ]
push ebx
call [ EnterCriticalSection@IAT ]
xor eax eax
test edi edi
sete al
push ebx
mov [ esi + 0x74 ] 0x1
mov [ esi + 0x98 ] edi
mov [ esi + 0x78 ] eax
call [ LeaveCriticalSection@IAT ]
mov ecx [ esi + 0x44 ]
add esi 0x44
push ecx
call [ CloseHandle@IAT ]
push 0x0
push esi
call [ InterlockedExchange@IAT ]
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ecx edi
lea ebx [ ebp - 0x48 ]
call sub_1000ce50
mov edi eax
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_100025d0
xor ebx ebx
mov [ ebp - 0x4 ] bl
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x2c ]
push edx
call sub_1002e8fb
add esp 0x4
mov ecx [ ebp - 0x4c ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
cmp [ ebp - 0x1c ] ebx
jbe r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1002e8fb
add esp 0x4
mov edi ebx
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x50 ]
push eax
call sub_1000db30
mov [ ebp - 0x4c ] eax
mov edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov esi [ ebp - 0x50 ]
sub_1000de20
push ebp
mov ebp esp
push ecx
push ebx
mov ebx ecx
cmp ebx eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov esi [ eax ]
push edi
mov edi [ esi ]
call sub_10002870
mov ecx [ ebp - 0x4 ]
mov eax [ ebx ]
mov eax [ eax ]
push ecx
push esi
push edi
push eax
push ebx
call sub_1000de50
pop edi
pop esi
sub_1000de50
push ebp
mov ebp esp
push 0xffffffff
push sub_1003bcc0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp eax [ ebp + 0x14 ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ ebp + 0xc ]
add eax 0x8
push eax
mov eax [ ecx + 0x4 ]
lea esi [ ecx + 0x4 ]
push eax
push ecx
call sub_100028c0
mov ecx [ edi + 0x4 ]
mov edx 0x9249248
sub edx ecx
cmp edx 0x1
jae r-xdata
inc ecx
mov [ edi + 0x4 ] ecx
mov [ esi ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
push r--data
call sub_1003621d
sub_1000ded7
mov esi [ ebp - 0x14 ]
cmp esi [ ebp + 0x10 ]
je r-xdata
push 0x0
push 0x0
call sub_10030edf
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
lea ebx [ ebp + 0x8 ]
call sub_10002710
mov esi [ esi ]
cmp esi [ ebp + 0x10 ]
jne r-xdata
sub_1000df20
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1000df70
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
xor ebx ebx
lea ebx [ ebx ]
inc ebx
cmp ebx 0x3
jb r-xdata
mov eax [ esi ]
mov edx [ eax + 0x1c ]
lea ecx [ ebp - 0xc ]
push ecx
push edi
push ebx
mov ecx esi
call edx
test eax eax
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x18 ]
push ebx
mov ecx esi
xor edi edi
call edx
test eax eax
je r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov edx [ eax + 0x18 ]
push ebx
mov ecx esi
inc edi
call edx
cmp edi eax
jb r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ esi ]
mov edx [ edx + 0x34 ]
sub esp 0xc
mov eax esp
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x8 ] ecx
mov ecx esi
call edx
mov ecx [ ebp - 0xc ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
sub_1000dff0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003d9c8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x88
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x80 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x98 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
push 0x4
mov [ esp + 0x20 ] ebx
call sub_1002e957
xor esi esi
add esp 0x4
cmp eax esi
je r-xdata
xor edi edi
mov [ eax ] r--data
mov edi eax
jmp r-xdata
mov [ esp + 0x14 ] esi
mov eax esi
mov [ eax ] r--data
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] esi
mov [ eax + 0x10 ] esi
mov [ esp + 0x14 ] eax
jmp r-xdata
push 0x14
call sub_1002e957
add esp 0x4
cmp eax esi
je r-xdata
xor edi edi
mov [ eax ] r--data
mov edi eax
jmp r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x4 ]
call eax
push 0x4
mov [ esp + 0x1c ] eax
call sub_1002e957
add esp 0x4
cmp eax esi
je r-xdata
mov [ esp + 0x10 ] esi
mov [ eax ] r--data
mov [ esp + 0x10 ] eax
jmp r-xdata
push 0x4
call sub_1002e957
add esp 0x4
cmp eax esi
je r-xdata
mov dx [ ecx ]
add ecx 0x2
cmp dx si
jne r-xdata
sub ecx ebx
sar ecx 0x1
push ecx
lea ecx [ esp + 0x2c ]
call sub_1000bc70
mov ecx [ esp + 0x84 ]
mov esi [ ecx ]
mov edx [ esi + 0x10 ]
call edx
mov ecx [ esp + 0x84 ]
push eax
mov eax [ esi + 0x38 ]
call eax
cmp [ esp + 0x3c ] 0x8
jb r-xdata
mov ebx [ ebx + 0x14 ]
call sub_1002a3b0
mov ecx [ esp + 0x1c ]
mov ecx [ ecx + 0x14 ]
mov edx 0x7
mov [ esp + 0x3c ] edx
mov [ esp + 0x58 ] edx
mov [ esp + 0x74 ] edx
xor edx edx
xor ebx ebx
mov [ esp + 0x60 ] dx
mov edx [ esp + 0x18 ]
mov [ esp + 0x7c ] ecx
mov ecx [ esp + 0x10 ]
mov [ esp + 0x24 ] r--data
mov [ esp + 0x38 ] esi
mov [ esp + 0x28 ] bx
mov [ esp + 0x54 ] esi
mov [ esp + 0x44 ] bx
mov [ esp + 0x70 ] esi
mov [ esp + 0x80 ] ecx
mov [ esp + 0x84 ] eax
mov [ esp + 0x88 ] edx
mov [ esp + 0xa0 ] esi
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x4 ]
call eax
mov ecx eax
lea ebx [ ecx + 0x2 ]
lea edx [ esp + 0x28 ]
mov [ esp + 0x10 ] edx
mov ecx [ esp + 0x28 ]
mov [ esp + 0x10 ] ecx
jmp r-xdata
mov edx [ eax + 0x10 ]
push esi
call edx
mov ebx eax
mov eax [ ebx ]
mov edx [ eax + 0x8 ]
mov ecx ebx
call edx
test eax eax
jne r-xdata
mov edx [ eax ]
push 0x1
call edx
mov ecx [ esp + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ esp + 0x24 ]
call sub_10013f00
mov edx [ edi ]
mov edx [ edx + 0x4 ]
push eax
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x14 ]
push eax
mov ecx edi
call edx
mov esi eax
mov eax [ edi ]
mov ecx edi
test esi esi
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
call edx
mov ebx [ esp + 0x1c ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
nop
mov ecx [ esp + 0x14 ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
cmp [ ebx + 0x10 ] 0x0
je r-xdata
call sub_1000df70
mov eax [ ebx ]
mov edx [ eax + 0x4 ]
mov ecx ebx
call edx
mov eax [ ebx ]
mov edx [ eax + 0x8 ]
mov ecx ebx
call edx
test eax eax
je r-xdata
lea ecx [ esp + 0x24 ]
mov [ esp + 0xa0 ] 0xffffffff
call sub_10013df0
mov ecx [ esp + 0x98 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x80 ]
xor ecx esp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x44 ]
push 0x1
push 0x1
mov ecx esi
call edx
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
mov ecx [ esp + 0x18 ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x20 ]
mov eax [ edi ]
mov edx [ esp + 0x10 ]
mov eax [ eax + 0xc ]
push ecx
push edx
mov ecx edi
call eax
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
sub_1000e2c0
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov ecx edi
pop edi
jmp sub_1000dff0
push ebx
mov ebx [ edi + 0x14 ]
push esi
call sub_1002a3b0
mov esi eax
push esi
call sub_100013b0
add esp 0x4
test esi esi
je r-xdata
pop esi
pop ebx
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
sub_1000e300
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov [ esi ] r--data
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
push eax
call sub_1002ee65
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1000e340
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
push edi
je r-xdata
mov ecx esi
call sub_1000dff0
mov esi [ esi + 0x1c ]
mov eax 0x2d
call sub_1002bff0
push esi
mov edi eax
call [ LoadLibraryW@IAT ]
mov esi eax
push edi
push esi
call [ GetProcAddress@IAT ]
push 0x0
push esi
push esi
call eax
pop edi
pop esi
retn
push ebx
mov ebx [ esi + 0x14 ]
call sub_1002a3b0
mov edi eax
push edi
call sub_100013b0
add esp 0x4
pop ebx
test edi edi
je r-xdata
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
sub_1000e3a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push edi
mov edi ecx
cmp [ edi + 0x18 ] 0x0
mov ecx [ eax + 0x94 ]
mov [ edi + 0x14 ] ecx
jne r-xdata
pop edi
pop ebp
retn 0x4
mov ecx [ eax + 0x28 ]
mov edx [ ecx ]
mov eax [ edx + 0x50 ]
push esi
push 0x2
call eax
mov ecx [ edi + 0x1c ]
mov esi eax
mov eax ecx
lea edi [ eax + 0x2 ]
nop
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
mov edx [ esi ]
mov edx [ edx + 0xc ]
sub eax edi
sar eax 0x1
add eax eax
push eax
push ecx
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
pop esi
sub_1000e400
push esi
push 0x8
mov esi ecx
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor eax eax
pop esi
retn
mov ecx [ esi + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
pop esi
retn
sub_1000e430
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_1000e470
cmp [ esi + 0x8 ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
cmp eax [ ebp + 0x8 ]
je r-xdata
mov eax 0x1
pop esi
pop ebp
retn 0x4
sub_1000e470
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebx + 0xc ]
test ecx ecx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x5c ]
push edi
call edx
mov edi eax
mov [ ebp - 0x14 ] edi
test edi edi
je r-xdata
push ebx
call sub_1000e820
mov [ ebx + 0x8 ] eax
pop edi
mov eax [ edi ]
mov edx [ eax + 0x14 ]
push 0x4
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx edi
call edx
cmp eax 0x4
jne r-xdata
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x10 ]
mov ecx edi
call edx
mov ecx [ ebp - 0x4 ]
cmp ecx eax
ja r-xdata
test ecx ecx
je r-xdata
push esi
push ecx
call sub_1002eb41
mov ecx [ ebp - 0x4 ]
add esp 0x4
mov esi eax
mov eax [ edi ]
mov edx [ eax + 0x14 ]
push ecx
push esi
mov ecx edi
mov [ ebp - 0x18 ] esi
call edx
cmp [ ebp - 0x4 ] eax
jne r-xdata
push esi
call sub_1002ee65
add esp 0x4
pop esi
call sub_10001b30
mov ebx eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
push ecx
call sub_10001b50
mov edi eax
mov eax [ ebp - 0x4 ]
mov edx [ edi ]
mov edx [ edx + 0x4 ]
add esp 0x4
push eax
push esi
mov ecx edi
call edx
mov esi eax
xor eax eax
cmp esi eax
je r-xdata
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
mov eax [ eax + 0xc ]
lea edx [ ebp - 0xc ]
push edx
push esi
mov ecx ebx
call eax
test eax eax
je r-xdata
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
mov edi [ ebp - 0x14 ]
mov esi [ ebp - 0x18 ]
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
call edx
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
push 0x168
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
push 0x0
push edx
call sub_1000f1c0
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edx [ ebp - 0xc ]
push edx
call sub_1002ee65
add esp 0x4
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
push eax
push ecx
push edx
call sub_1000f020
test eax eax
je r-xdata
sub_1000e600
push esi
mov esi ecx
push esi
call sub_1000e470
cmp [ esi + 0x8 ] 0x0
je r-xdata
xor eax eax
pop esi
retn
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
pop esi
jmp edx
sub_1000e620
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a9b8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x4 ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1000e6a0
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x0
mov esi ecx
call sub_1002ee70
push 0x168
mov edi eax
call sub_1002e957
add esp 0x8
test eax eax
je r-xdata
xor edi edi
mov ecx [ esi + 0x4 ]
push edi
push ecx
call sub_1000f1c0
mov edi eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ esi + 0x8 ] edi
test ecx ecx
je r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push edx
push eax
push edi
call sub_1000f020
test eax eax
jne r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
pop edi
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
push 0x4
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp - 0x4 ]
mov edi eax
mov [ eax ] r--data
mov [ ebp - 0x4 ] edi
jmp r-xdata
test ebx ebx
je r-xdata
lea ecx [ ebp + 0xc ]
push ecx
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] eax
mov eax [ ebx ]
mov eax [ eax + 0xc ]
lea edx [ ebp + 0x8 ]
push edx
push edi
mov ecx ebx
call eax
test eax eax
je r-xdata
mov ecx [ esi + 0x10 ]
push ebx
push ecx
call sub_10001b50
mov ecx [ ebp + 0x8 ]
mov edx [ edi ]
mov edx [ edx + 0x4 ]
add esp 0x4
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
push ecx
mov ecx edi
call edx
mov edi eax
xor eax eax
cmp edi eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
pop ebx
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
mov eax [ edx + 0x60 ]
call eax
mov esi eax
mov edx [ esi ]
mov edx [ edx + 0xc ]
push 0x4
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
call edx
mov ecx [ ebp + 0xc ]
mov eax [ esi ]
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push ecx
push edx
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
mov ecx [ ebp + 0x8 ]
push ecx
call sub_1002ee65
add esp 0x4
sub_1000e820
push ebp
mov ebp esp
push esi
push edi
push 0x168
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor esi esi
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
push 0x0
push edx
call sub_1000f1c0
mov esi eax
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push edx
push esi
call sub_1000f020
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov edx [ rw-data ]
mov eax edx
lea edi [ eax + 0x1 ]
sub_1000e870
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1000e8f0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
lea esi [ eax * 8 ]
sub esi eax
mov eax [ ecx + 0x64 ]
push edi
mov edi [ ebp + 0x8 ]
xor edx edx
lea eax [ eax + esi * 4 ]
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] edx
push eax
or ecx 0xffffffff
xor ebx ebx
mov [ ebp - 0x4 ] edx
mov [ edi ] dl
call sub_10002780
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_1000e9a0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
lea esi [ eax * 8 ]
sub esi eax
mov eax [ ecx + 0x74 ]
push edi
mov edi [ ebp + 0x8 ]
xor edx edx
lea eax [ eax + esi * 4 ]
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] edx
push eax
or ecx 0xffffffff
xor ebx ebx
mov [ ebp - 0x4 ] edx
mov [ edi ] dl
call sub_10002780
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_1000e9f0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
lea esi [ eax * 8 ]
sub esi eax
mov eax [ ecx + 0x84 ]
push edi
mov edi [ ebp + 0x8 ]
xor edx edx
lea eax [ eax + esi * 4 ]
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] edx
push eax
or ecx 0xffffffff
xor ebx ebx
mov [ ebp - 0x4 ] edx
mov [ edi ] dl
call sub_10002780
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_1000ea80
push ebp
mov ebp esp
push ecx
xor eax eax
push edi
mov edi [ ebp + 0x8 ]
push eax
mov [ edi + 0x10 ] eax
add ecx 0x114
mov [ ebp - 0x4 ] eax
xor edx edx
mov [ edi + 0x14 ] 0x7
push ecx
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov eax edi
pop edi
mov esp ebp
pop ebp
retn 0x4
sub_1000eac0
push ebp
mov ebp esp
push ecx
xor eax eax
push edi
mov edi [ ebp + 0x8 ]
push eax
mov [ edi + 0x10 ] eax
add ecx 0x130
mov [ ebp - 0x4 ] eax
xor edx edx
mov [ edi + 0x14 ] 0x7
push ecx
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov eax edi
pop edi
mov esp ebp
pop ebp
retn 0x4
sub_1000eb00
push ebp
mov ebp esp
push ecx
xor eax eax
push edi
mov edi [ ebp + 0x8 ]
push eax
mov [ edi + 0x10 ] eax
add ecx 0x14c
mov [ ebp - 0x4 ] eax
xor edx edx
mov [ edi + 0x14 ] 0x7
push ecx
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov eax edi
pop edi
mov esp ebp
pop ebp
retn 0x4
sub_1000eb40
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c4a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx ecx
mov edx [ ebx ]
mov [ ebp - 0x40 ] eax
mov eax [ edx + 0x28 ]
mov [ ebp - 0x3c ] ebx
call eax
mov edx [ ebx ]
mov ecx ebx
test eax eax
jne r-xdata
mov eax [ edx + 0x2c ]
xor edi edi
mov [ ebp - 0x30 ] edi
call eax
test eax eax
je r-xdata
mov eax [ edx ]
push 0x1
call eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
mov eax 0x1
mov edx [ ebx ]
mov eax [ edx + 0x30 ]
push edi
mov ecx ebx
call eax
mov esi eax
mov [ ebp - 0x34 ] esi
test esi esi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebx ]
mov eax [ edx + 0x2c ]
inc edi
mov ecx ebx
mov [ ebp - 0x30 ] edi
call eax
cmp edi eax
jb r-xdata
mov edx [ esi ]
mov eax [ edx + 0x2c ]
mov ecx esi
call eax
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x30 ]
push 0x0
mov ecx esi
call eax
mov [ ebp - 0x38 ] eax
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x18 ]
call eax
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov edi [ ebp - 0x30 ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov esi eax
mov eax edi
lea ecx [ ebp - 0x2c ]
call sub_10002640
mov ebx [ ebp - 0x40 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
call sub_1000fc60
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
xor eax eax
push edi
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x2c ] al
call sub_1002ee65
mov esi [ ebp - 0x34 ]
mov ebx [ ebp - 0x3c ]
add esp 0x4
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
sub_1000ecc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
push 0x168
mov [ ebp - 0x4 ] edi
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor esi esi
mov ecx [ edi + 0x8 ]
mov edx [ edi + 0x4 ]
push ecx
push edx
call sub_1000f1c0
mov esi eax
jmp r-xdata
mov eax [ edi + 0xc ]
add edi 0x10
push edi
lea edi [ esi + 0x10 ]
or ecx 0xffffffff
xor ebx ebx
mov [ esi + 0xc ] eax
call sub_10002780
mov ecx [ ebp - 0x4 ]
add ecx 0x2c
push ecx
lea edi [ esi + 0x2c ]
or ecx 0xffffffff
call sub_10002780
mov edx [ ebp - 0x4 ]
add edx 0x48
push edx
lea edi [ esi + 0x48 ]
or ecx 0xffffffff
call sub_10002780
mov edi [ ebp - 0x4 ]
lea eax [ edi + 0x64 ]
lea ecx [ esi + 0x64 ]
call sub_1000fd40
lea eax [ edi + 0x74 ]
lea ecx [ esi + 0x74 ]
call sub_1000fd40
lea eax [ edi + 0x84 ]
lea ecx [ esi + 0x84 ]
call sub_1000fd40
mov eax [ edi + 0x94 ]
mov [ esi + 0x94 ] eax
mov ecx [ edi + 0x98 ]
add edi 0x9c
mov [ esi + 0x98 ] ecx
push edi
lea edi [ esi + 0x9c ]
or ecx 0xffffffff
call sub_10002780
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xb8 ]
add eax 0xbc
push eax
lea edi [ esi + 0xbc ]
or ecx 0xffffffff
mov [ esi + 0xb8 ] edx
call sub_10002780
mov eax [ ebp - 0x4 ]
add eax 0xd8
push eax
lea edi [ esi + 0xd8 ]
or ecx 0xffffffff
call sub_10002780
mov ecx [ ebp - 0x4 ]
add ecx 0xf4
push ecx
lea edi [ esi + 0xf4 ]
or ecx 0xffffffff
call sub_10002780
mov ebx [ ebp - 0x4 ]
mov edx [ ebx + 0x110 ]
push 0x0
lea eax [ ebx + 0x114 ]
push eax
lea edi [ esi + 0x114 ]
or eax 0xffffffff
mov [ esi + 0x110 ] edx
call sub_1000bbc0
push 0x0
lea ecx [ ebx + 0x130 ]
push ecx
lea edi [ esi + 0x130 ]
or eax 0xffffffff
call sub_1000bbc0
push 0x0
add ebx 0x14c
push ebx
lea edi [ esi + 0x14c ]
or eax 0xffffffff
call sub_1000bbc0
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1000ee40
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d1f8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0x4 ] 0x0
cmp [ ecx + 0x40 ] 0x10
mov edx [ ecx + 0x3c ]
lea eax [ ecx + 0x2c ]
jb r-xdata
push edx
push eax
lea ecx [ ebp - 0x10 ]
call sub_10010380
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov eax [ eax ]
sub_1000eea0
push esi
push 0x24
mov esi ecx
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor esi esi
cmp [ esi + 0xd0 ] 0x10
mov edx [ esi + 0xcc ]
lea ecx [ esi + 0xbc ]
jb r-xdata
test esi esi
je r-xdata
mov eax esi
pop esi
retn
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] 0x0
mov [ eax + 0x18 ] 0x1
mov [ eax + 0x14 ] 0x1
mov [ eax + 0x1c ] 0x0
mov [ eax + 0x20 ] 0x0
mov esi eax
jmp r-xdata
mov ecx [ ecx ]
xor eax eax
pop esi
retn
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
mov eax esi
call sub_10004b50
test eax eax
je r-xdata
sub_1000ef30
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d1f8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0x4 ] 0x0
cmp [ ecx + 0x24 ] 0x10
mov edx [ ecx + 0x20 ]
lea eax [ ecx + 0x10 ]
jb r-xdata
push edx
push eax
lea ecx [ ebp - 0x10 ]
call sub_10010380
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov eax [ eax ]
sub_1000ef90
push ebp
mov ebp esp
mov eax [ ebx ]
mov edx [ eax + 0x18 ]
push edi
mov ecx ebx
call edx
mov edi eax
test edi edi
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
call edx
xor eax eax
pop edi
pop ebp
retn 0x4
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax edx
push esi
mov esi eax
mov eax edi
call sub_10002640
push edi
call sub_1002ee65
mov eax [ ebx ]
mov edx [ eax ]
add esp 0x4
push 0x1
mov ecx ebx
call edx
pop esi
mov eax 0x1
pop edi
pop ebp
retn 0x4
sub_1000f020
push ebp
mov ebp esp
push esi
push edi
push 0x4
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor esi esi
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ebx
mov edx edi
call sub_1000f7a0
mov edx [ edi ]
mov ebx eax
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
mov eax ebx
pop ebx
pop edi
pop esi
pop ebp
retn 0xc
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
pop edi
xor eax eax
pop esi
pop ebp
retn 0xc
mov ecx [ ebp + 0x10 ]
mov eax [ esi ]
mov edx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push ecx
push edx
mov ecx esi
call eax
mov edi eax
test edi edi
jne r-xdata
sub_1000f0a0
push ebp
mov ebp esp
mov eax [ esi ]
mov edx [ eax + 0x20 ]
mov ecx esi
call edx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
mov eax 0x1
pop ebp
retn 0x4
sub_1000f0d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003be38
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov edx [ edx + 0x10 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x30 ]
xor edi edi
push ecx
mov ecx ebx
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x34 ] edi
call edx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
xor eax eax
mov esi [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] 0x0
call sub_10002640
mov esi [ ebp - 0x38 ]
mov [ ebp - 0x4 ] edi
lea edi [ ebp - 0x2c ]
call sub_100025d0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
call eax
mov ecx [ ebp - 0x30 ]
push ecx
call sub_1002ee65
add esp 0x4
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1002e8fb
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
sub_1000f1c0
push ebp
mov ebp esp
push esi
mov [ eax ] r--data
xor ecx ecx
mov [ eax + 0x20 ] ecx
mov edx 0xf
mov [ eax + 0x24 ] edx
mov [ eax + 0x10 ] cl
mov [ eax + 0x40 ] edx
mov [ eax + 0x3c ] ecx
mov [ eax + 0x2c ] cl
mov [ eax + 0x5c ] edx
mov [ eax + 0x58 ] ecx
mov [ eax + 0x48 ] cl
mov [ eax + 0x64 ] ecx
mov [ eax + 0x68 ] ecx
mov [ eax + 0x6c ] ecx
mov [ eax + 0x74 ] ecx
mov [ eax + 0x78 ] ecx
mov [ eax + 0x7c ] ecx
mov [ eax + 0x84 ] ecx
mov [ eax + 0x88 ] ecx
mov [ eax + 0x8c ] ecx
mov [ eax + 0xb0 ] edx
mov [ eax + 0xac ] ecx
mov [ eax + 0x9c ] cl
mov [ eax + 0xd0 ] edx
mov [ eax + 0xcc ] ecx
mov [ eax + 0xbc ] cl
mov [ eax + 0xec ] edx
mov [ eax + 0xe8 ] ecx
mov [ eax + 0xd8 ] cl
mov [ eax + 0x108 ] edx
mov [ eax + 0x104 ] ecx
mov [ eax + 0xf4 ] cl
mov [ eax + 0x124 ] ecx
mov edx 0x7
mov [ eax + 0x128 ] edx
xor esi esi
mov [ eax + 0x114 ] si
mov [ eax + 0x144 ] edx
mov [ eax + 0x140 ] ecx
mov [ eax + 0x130 ] si
mov [ eax + 0x160 ] edx
mov [ eax + 0x15c ] ecx
xor edx edx
mov [ eax + 0x14c ] dx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ecx
mov [ eax + 0x94 ] ecx
mov [ eax + 0x98 ] ecx
mov [ eax + 0xb8 ] ecx
mov [ eax + 0x110 ] ecx
pop esi
pop ebp
retn 0x8
sub_1000f2d0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1000f300
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1000f300
push ebx
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x160 ] 0x8
push edi
jb r-xdata
xor ebx ebx
mov edi 0x7
xor ecx ecx
mov [ esi + 0x160 ] edi
mov [ esi + 0x15c ] ebx
mov [ esi + 0x14c ] cx
cmp [ esi + 0x144 ] 0x8
jb r-xdata
mov eax [ esi + 0x14c ]
push eax
call sub_1002e8fb
add esp 0x4
xor eax eax
mov [ esi + 0x144 ] edi
mov [ esi + 0x140 ] ebx
mov [ esi + 0x130 ] ax
cmp [ esi + 0x128 ] 0x8
jb r-xdata
mov edx [ esi + 0x130 ]
push edx
call sub_1002e8fb
add esp 0x4
xor edx edx
mov [ esi + 0x128 ] edi
mov [ esi + 0x124 ] ebx
mov [ esi + 0x114 ] dx
cmp [ esi + 0x108 ] 0x10
jb r-xdata
mov ecx [ esi + 0x114 ]
push ecx
call sub_1002e8fb
add esp 0x4
mov edi 0xf
mov [ esi + 0x108 ] edi
mov [ esi + 0x104 ] ebx
mov [ esi + 0xf4 ] bl
cmp [ esi + 0xec ] 0x10
jb r-xdata
mov eax [ esi + 0xf4 ]
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0xec ] edi
mov [ esi + 0xe8 ] ebx
mov [ esi + 0xd8 ] bl
cmp [ esi + 0xd0 ] 0x10
jb r-xdata
mov ecx [ esi + 0xd8 ]
push ecx
call sub_1002e8fb
add esp 0x4
mov [ esi + 0xd0 ] edi
mov [ esi + 0xcc ] ebx
mov [ esi + 0xbc ] bl
cmp [ esi + 0xb0 ] 0x10
jb r-xdata
mov edx [ esi + 0xbc ]
push edx
call sub_1002e8fb
add esp 0x4
mov [ esi + 0xb0 ] edi
mov [ esi + 0xac ] ebx
mov [ esi + 0x9c ] bl
mov eax [ esi + 0x84 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x9c ]
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x84 ] ebx
mov [ esi + 0x88 ] ebx
mov [ esi + 0x8c ] ebx
mov eax [ esi + 0x74 ]
cmp eax ebx
je r-xdata
mov edi [ esi + 0x88 ]
call sub_1000ff40
mov ecx [ esi + 0x84 ]
push ecx
call sub_1002e8fb
add esp 0x4
mov edi 0xf
mov [ esi + 0x74 ] ebx
mov [ esi + 0x78 ] ebx
mov [ esi + 0x7c ] ebx
mov eax [ esi + 0x64 ]
cmp eax ebx
je r-xdata
mov edi [ esi + 0x78 ]
call sub_1000ff40
mov edx [ esi + 0x74 ]
push edx
call sub_1002e8fb
add esp 0x4
mov edi 0xf
mov [ esi + 0x64 ] ebx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x6c ] ebx
cmp [ esi + 0x5c ] 0x10
jb r-xdata
mov edi [ esi + 0x68 ]
call sub_1000ff40
mov eax [ esi + 0x64 ]
push eax
call sub_1002e8fb
add esp 0x4
mov edi 0xf
mov [ esi + 0x5c ] edi
mov [ esi + 0x58 ] ebx
mov [ esi + 0x48 ] bl
cmp [ esi + 0x40 ] 0x10
jb r-xdata
mov ecx [ esi + 0x48 ]
push ecx
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x40 ] edi
mov [ esi + 0x3c ] ebx
mov [ esi + 0x2c ] bl
cmp [ esi + 0x24 ] 0x10
jb r-xdata
mov edx [ esi + 0x2c ]
push edx
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x24 ] edi
mov [ esi + 0x20 ] ebx
mov [ esi + 0x10 ] bl
pop edi
mov [ esi ] r--data
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
push eax
call sub_1002e8fb
add esp 0x4
sub_1000f530
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
mov edx [ eax + 0x18 ]
push edi
mov ecx esi
call edx
mov edi eax
test edi edi
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
pop edi
xor eax eax
pop esi
pop ebp
retn 0x8
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1002eb41
mov esi eax
mov eax edi
add esp 0x4
lea ecx [ eax + 0x1 ]
lea ebx [ ebx ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
inc eax
push eax
push 0x0
push esi
call sub_10032e00
mov eax edi
add esp 0xc
lea edx [ eax + 0x1 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov edx eax
mov eax edi
push ebx
lea ebx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
inc edx
push edx
push esi
sub eax ebx
inc eax
push eax
push edi
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov eax esi
lea edx [ eax + 0x2 ]
pop ebx
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax edx
sar eax 0x1
push eax
mov eax esi
call sub_1000bc70
push esi
call sub_1002ee65
push edi
call sub_1002ee65
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
mov edx [ eax ]
add esp 0x8
push 0x1
call edx
pop edi
mov eax 0x1
pop esi
pop ebp
retn 0x8
sub_1000f630
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b0fb
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x18
call sub_1002e957
xor ebx ebx
add esp 0x4
cmp eax ebx
je r-xdata
xor esi esi
cmp [ esi + 0xec ] 0x10
mov edx [ esi + 0xe8 ]
lea ecx [ esi + 0xd8 ]
jb r-xdata
push 0x18
call sub_1002e957
mov edi eax
add esp 0x4
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] ebx
cmp edi ebx
je r-xdata
cmp [ esi + 0x14 ] ebx
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx 0x1
mov [ eax ] r--data
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ebx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x10 ] ecx
mov esi eax
jmp r-xdata
mov ecx [ ecx ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx + 0xc ]
mov ecx esi
call eax
mov [ edi + 0xc ] eax
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ebx
mov [ edi + 0x10 ] ebx
mov [ edi ] r--data
mov [ edi + 0x14 ] esi
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ esi + 0xc ] 0x1
mov eax [ esi + 0x8 ]
mov edi [ esi + 0x4 ]
push eax
call sub_1002e957
add esp 0x4
mov [ esi + 0x4 ] eax
cmp eax ebx
je r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
mov ecx [ esi + 0x8 ]
push ecx
push edi
push eax
call sub_10033950
add esp 0xc
mov [ esi + 0x10 ] 0x1
sub_1000f740
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d1f8
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0x4 ] 0x0
cmp [ ecx + 0x5c ] 0x10
mov edx [ ecx + 0x58 ]
lea eax [ ecx + 0x48 ]
jb r-xdata
push edx
push eax
lea ecx [ ebp - 0x10 ]
call sub_10010380
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov eax [ eax ]
sub_1000f7a0
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov eax 0x1a
mov [ ebp - 0x4 ] esi
mov [ ebp - 0xc ] edi
call sub_1002bff0
mov edx [ edi ]
push eax
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebx ]
mov eax [ edx + 0x20 ]
mov ecx ebx
call eax
mov [ esi + 0x8 ] eax
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
mov eax 0x1b
call sub_1002bff0
mov edx [ edi ]
push eax
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x20 ]
mov ecx ebx
call eax
mov [ esi + 0xc ] eax
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
mov eax 0x1c
call sub_1002bff0
mov edx [ edi ]
push eax
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
test eax eax
je r-xdata
lea ecx [ esi + 0x10 ]
xor esi esi
mov eax r--data
call sub_10002640
mov esi [ ebp - 0x4 ]
lea ecx [ esi + 0x10 ]
push ecx
mov ebx eax
call sub_1000f0d0
test eax eax
jne r-xdata
lea ecx [ esi + 0x2c ]
xor esi esi
mov eax r--data
call sub_10002640
mov esi [ ebp - 0x4 ]
lea ecx [ esi + 0x2c ]
push ecx
mov ebx eax
call sub_1000f0d0
test eax eax
jne r-xdata
mov eax 0x1d
call sub_1002bff0
mov edx [ edi ]
push eax
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
test eax eax
je r-xdata
lea ecx [ esi + 0x48 ]
xor esi esi
mov eax r--data
call sub_10002640
mov esi [ ebp - 0x4 ]
lea ecx [ esi + 0x48 ]
push ecx
mov ebx eax
call sub_1000f0d0
test eax eax
jne r-xdata
mov eax 0x1e
call sub_1002bff0
mov edx [ edi ]
push eax
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov edx [ eax + 0x10 ]
push ecx
mov ecx edi
call edx
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
push edx
push eax
call sub_100101a0
mov edi [ ebx + 0x4 ]
add esp 0x8
mov esi eax
call sub_1000ff40
mov edi [ ebp - 0xc ]
mov [ ebx + 0x4 ] esi
mov esi [ ebp - 0x4 ]
mov eax 0x1f
call sub_1002bff0
mov ecx [ esi + 0x64 ]
lea ebx [ esi + 0x64 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
cmp ecx eax
je r-xdata
push ebx
mov ecx eax
call sub_1000eb40
test eax eax
je r-xdata
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
je r-xdata
mov eax 0x20
call sub_1002bff0
add esi 0x74
mov ebx eax
call sub_1000fec0
mov edx [ edi ]
mov eax [ edx + 0x10 ]
push ebx
mov ecx edi
call eax
test eax eax
je r-xdata
push esi
mov ecx eax
call sub_1000eb40
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
sub ecx [ esi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
je r-xdata
mov eax 0x21
call sub_1002bff0
mov esi [ ebp - 0x4 ]
add esi 0x84
mov ebx eax
call sub_1000fec0
mov edx [ edi ]
mov eax [ edx + 0x10 ]
push ebx
mov ecx edi
call eax
test eax eax
je r-xdata
push esi
mov ecx eax
call sub_1000eb40
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
sub ecx [ esi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
je r-xdata
mov eax 0x22
call sub_1002bff0
mov edx [ edi ]
push eax
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
lea ecx [ ebx + 0x94 ]
push ecx
mov esi eax
call sub_1000f0a0
test eax eax
je r-xdata
mov eax 0x23
call sub_1002bff0
mov edx [ edi ]
push eax
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
test eax eax
je r-xdata
lea ecx [ ebx + 0x98 ]
push ecx
mov esi eax
call sub_1000f0a0
test eax eax
je r-xdata
mov eax 0x24
call sub_1002bff0
mov edx [ edi ]
push eax
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
test eax eax
je r-xdata
add ebx 0x9c
push ebx
mov ebx eax
call sub_1000ef90
test eax eax
je r-xdata
mov eax 0x25
call sub_1002bff0
mov edx [ edi ]
push eax
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
mov esi eax
call sub_1000f0a0
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov esi [ ebp - 0x4 ]
mov eax 0x26
mov [ esi + 0xb8 ] edx
call sub_1002bff0
mov edx [ edi ]
push eax
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
test eax eax
je r-xdata
lea ecx [ esi + 0xbc ]
push ecx
mov ebx eax
call sub_1000f0d0
test eax eax
je r-xdata
mov eax 0x27
call sub_1002bff0
mov edx [ edi ]
push eax
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
test eax eax
je r-xdata
lea ecx [ esi + 0xd8 ]
push ecx
mov ebx eax
call sub_1000f0d0
test eax eax
je r-xdata
mov eax 0x28
call sub_1002bff0
mov edx [ edi ]
push eax
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
test eax eax
je r-xdata
lea ecx [ esi + 0xf4 ]
push ecx
mov ebx eax
call sub_1000f0d0
test eax eax
je r-xdata
mov eax 0x29
call sub_1002bff0
mov edx [ edi ]
push eax
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
test eax eax
je r-xdata
add esi 0x110
push esi
mov esi eax
call sub_1000f0a0
test eax eax
je r-xdata
mov eax 0x2a
call sub_1002bff0
mov edx [ edi ]
push eax
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
mov esi [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ esi + 0x114 ]
push edx
mov eax r--data
call sub_1000bb90
push eax
lea ecx [ esi + 0x114 ]
push ecx
call sub_1000f530
test eax eax
jne r-xdata
lea edx [ esi + 0x130 ]
push edx
mov eax r--data
call sub_1000bb90
push eax
lea ecx [ esi + 0x130 ]
push ecx
call sub_1000f530
test eax eax
jne r-xdata
mov eax 0x2b
call sub_1002bff0
mov edx [ edi ]
push eax
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
test eax eax
je r-xdata
add esi 0x14c
push esi
mov eax r--data
call sub_1000bb90
push eax
lea ecx [ esi + 0x14c ]
push ecx
call sub_1000f530
test eax eax
jne r-xdata
mov eax 0x2c
call sub_1002bff0
mov edx [ edi ]
push eax
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
sub_1000fc60
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c47a
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ ebx + 0x4 ]
cmp edi ecx
jae r-xdata
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov eax [ ebx ]
cmp eax edi
ja r-xdata
mov esi [ ebx + 0x4 ]
mov [ ebp - 0x4 ] 0x1
xor eax eax
mov ecx ebx
call sub_1000ff80
sub edi eax
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ ebx + 0x8 ]
jne r-xdata
add [ ebx + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov [ esi ] al
call sub_100025d0
mov ecx [ ebx ]
lea eax [ esi * 8 ]
sub eax esi
mov esi [ ebx + 0x4 ]
lea edi [ ecx + eax * 4 ]
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx ebx
call sub_1000ff80
cmp esi eax
je r-xdata
sub_1000fd10
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push edi
mov edi [ esi + 0x4 ]
call sub_1000ff40
mov eax [ esi ]
push eax
call sub_1002e8fb
add esp 0x4
pop edi
sub_1000fd40
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov ebx eax
mov esi ecx
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x92492493
imul ecx
add edx ecx
mov ecx [ esi ]
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
push edi
mov [ ebp - 0x4 ] eax
jne r-xdata
mov edi [ esi + 0x4 ]
sub edi ecx
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
cmp [ ebp - 0x4 ] edi
ja r-xdata
mov eax [ esi + 0x4 ]
cmp ecx eax
je r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
mov [ ebp - 0x8 ] edx
mov eax 0x92492493
imul edx
add edx [ ebp - 0x8 ]
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x4 ] eax
ja r-xdata
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
call sub_10010170
mov edi [ esi + 0x4 ]
add esp 0x4
call sub_1000ff40
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov edx [ esi ]
lea ecx [ eax * 8 ]
sub ecx eax
lea eax [ edx + ecx * 4 ]
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pop edi
mov edx [ ebp - 0x8 ]
push edx
push eax
call sub_100101a0
mov edi [ esi + 0x4 ]
add esp 0x8
mov ebx eax
call sub_1000ff40
pop edi
mov [ esi + 0x4 ] ebx
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ ebx ]
lea edx [ edi * 8 ]
sub edx edi
lea edi [ eax + edx * 4 ]
push edi
call sub_10010170
mov ecx [ ebp - 0x8 ]
mov eax [ esi + 0x4 ]
mov ebx [ ebx + 0x4 ]
push ecx
push eax
push ebx
mov ecx edi
call sub_10010220
add esp 0x10
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
call sub_1000fef0
test al al
je r-xdata
mov edi [ esi + 0x4 ]
mov eax ecx
call sub_1000ff40
mov edx [ esi ]
push edx
call sub_1002e8fb
add esp 0x4
mov edi [ ebp - 0x8 ]
mov eax [ esi ]
mov edx [ ebx + 0x4 ]
mov ecx [ ebx ]
push edi
push eax
push edx
call sub_10010220
add esp 0xc
mov [ esi + 0x4 ] eax
sub_1000fec0
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
cmp ecx eax
je r-xdata
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
push ebx
push edi
push edx
push eax
call sub_100101a0
mov edi [ esi + 0x4 ]
add esp 0x8
mov ebx eax
call sub_1000ff40
pop edi
mov [ esi + 0x4 ] ebx
pop ebx
sub_1000fef0
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi eax
jne r-xdata
cmp edi 0x9249249
jbe r-xdata
xor al al
retn
mov ecx edi
call sub_10010110
lea ecx [ edi * 8 ]
sub ecx edi
lea edx [ eax + ecx * 4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edx
mov al 0x1
retn
push r--data
call sub_1003621d
sub_1000ff40
push esi
mov esi eax
cmp esi edi
je r-xdata
pop esi
retn
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_1002e8fb
add esp 0x4
sub_1000ff80
push ebx
mov ebx [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
sub esi ebx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
push edi
cmp esi 0x9249248
jbe r-xdata
mov edi [ ecx + 0x8 ]
sub edi ebx
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
inc esi
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_1003621d
pop edi
pop esi
pop ebx
retn
mov edx eax
shr edx 0x1
mov edi 0x9249249
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_10010000
mov eax esi
cmp eax esi
jae r-xdata
sub_10010000
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c450
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp edi 0x9249249
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax edi
jae r-xdata
push r--data
call sub_1003621d
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_10010110
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edi [ esi + 0x4 ]
mov edx [ esi ]
push ecx
push edi
mov ecx eax
mov [ ebp - 0x14 ] eax
call sub_100102c0
mov edi [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ebx edx
shr ebx 0x1f
add esp 0x8
add ebx edx
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax * 8 ]
sub ecx eax
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 4 ]
lea ecx [ ebx * 8 ]
sub ecx ebx
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
mov edi [ esi + 0x4 ]
mov eax [ esi ]
call sub_1000ff40
mov edx [ esi ]
push edx
call sub_1002e8fb
add esp 0x4
sub_10010110
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x9249249
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_1002e39e
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_10030edf
lea eax [ ecx * 8 ]
sub eax ecx
add eax eax
add eax eax
push eax
call sub_1002e957
add esp 0x4
test eax eax
jne r-xdata
sub_10010170
push ebp
mov ebp esp
push esi
mov esi eax
push edi
mov edi ecx
cmp esi [ ebp + 0x8 ]
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
push ebx
nop
push esi
or ecx 0xffffffff
xor ebx ebx
call sub_10002780
add esi 0x1c
add edi 0x1c
cmp esi [ ebp + 0x8 ]
jne r-xdata
pop ebx
sub_100101a0
push ebp
mov ebp esp
push edi
mov edi ecx
cmp eax [ ebp + 0x8 ]
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
lea esi [ eax + 0x14 ]
xor ebx ebx
add esi 0x1c
lea ecx [ esi - 0x14 ]
add edi 0x1c
cmp ecx [ ebp + 0x8 ]
jne r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
lea eax [ esi - 0x14 ]
cmp edi eax
je r-xdata
pop esi
pop ebx
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] ebx
mov [ edi ] bl
cmp [ esi ] 0x10
jae r-xdata
mov ecx [ edi ]
push ecx
call sub_1002e8fb
add esp 0x4
mov ecx [ esi - 0x14 ]
mov [ edi ] ecx
mov [ esi - 0x14 ] ebx
mov edx [ esi - 0x4 ]
inc edx
push edx
lea eax [ esi - 0x14 ]
push eax
push edi
call sub_1002e460
add esp 0xc
jmp r-xdata
mov edx [ esi - 0x4 ]
mov [ edi + 0x10 ] edx
mov eax [ esi ]
mov [ edi + 0x14 ] eax
mov [ esi - 0x4 ] ebx
mov [ esi ] ebx
sub_10010220
push ebp
mov ebp esp
push 0xffffffff
push sub_1003bca5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0xc ]
mov esi ecx
xor eax eax
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] eax
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x1
cmp edi eax
je r-xdata
add edi 0x1c
mov [ ebp - 0x4 ] al
mov [ ebp + 0xc ] edi
add esi 0x1c
jmp r-xdata
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] eax
push esi
or ecx 0xffffffff
xor ebx ebx
mov [ edi ] al
call sub_10002780
xor eax eax
cmp esi [ ebp + 0x8 ]
je r-xdata
sub_1001028c
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_10030edf
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_10002580
add esi 0x1c
cmp esi edi
jne r-xdata
sub_100102c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c435
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea edi [ edx + 0x14 ]
xor ebx ebx
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp esi ebx
je r-xdata
add esi 0x1c
add edi 0x1c
jmp r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
cmp esi eax
je r-xdata
lea eax [ edi - 0x14 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
cmp [ edi ] 0x10
jae r-xdata
mov eax [ esi ]
push eax
call sub_1002e8fb
add esp 0x4
mov ecx [ edi - 0x14 ]
mov [ esi ] ecx
mov [ edi - 0x14 ] ebx
mov eax [ edi - 0x4 ]
inc eax
push eax
lea eax [ edi - 0x14 ]
push eax
push esi
call sub_1002e460
add esp 0xc
jmp r-xdata
mov edx [ edi - 0x4 ]
mov [ esi + 0x10 ] edx
mov eax [ edi ]
mov [ esi + 0x14 ] eax
mov [ edi - 0x4 ] ebx
mov [ edi ] ebx
sub_10010380
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003d1c3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x28 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov [ esp + 0x14 ] ecx
test eax eax
je r-xdata
xor eax eax
movsx edx [ edi ]
dec edx
cmp edx 0x3
ja r-xdata
jmp [ edx * 4 + jump_table_10010574 ]
cmp eax 0x6
jne r-xdata
cmp eax 0x6
jne r-xdata
cmp eax 0x3
jb r-xdata
cmp eax 0xa
jb r-xdata
mov esi [ edi + 0x2 ]
push 0xc
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
mov ebx [ edi + 0x2 ]
push 0x20
call sub_1002e957
mov esi eax
add esp 0x4
test esi esi
je r-xdata
movzx ecx [ edi + 0x1 ]
lea edx [ ecx + 0x3 ]
cmp eax edx
jne r-xdata
mov edx [ edi + 0x6 ]
mov esi [ edi + 0x2 ]
mov [ esp + 0x18 ] edx
lea edx [ edx + esi + 0xa ]
cmp eax edx
jne r-xdata
movsx ecx [ edi + 0x1 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
jmp r-xdata
xor esi esi
mov eax esi
jmp r-xdata
movsx eax [ edi + 0x1 ]
mov ecx 0x1
mov [ esi ] r--data
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0x0
call sub_10023160
mov eax esi
jmp r-xdata
add edi 0x3
shr ecx 0x1
push edi
lea esi [ esp + 0x20 ]
call sub_10010590
push 0x20
mov [ esp + 0x4c ] 0x0
call sub_1002e957
add esp 0x4
mov [ esp + 0x14 ] eax
mov [ esp + 0x48 ] 0x1
test eax eax
je r-xdata
push esi
lea eax [ edi + 0xa ]
push eax
call sub_10010380
mov ecx [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x18 ]
lea edx [ edi + esi + 0xa ]
push edx
mov ebx eax
call sub_10010380
mov esi eax
test ebx ebx
jne r-xdata
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x28 ]
xor ecx esp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x8
lea esi [ esp + 0x1c ]
xor edi edi
call sub_1000bb60
mov eax edi
jmp r-xdata
cmp [ esp + 0x30 ] 0x8
mov ecx [ esp + 0x1c ]
jae r-xdata
test esi esi
jne r-xdata
test esi esi
je r-xdata
push ecx
mov ebx eax
call sub_10023340
lea esi [ esp + 0x1c ]
mov edi eax
call sub_1000bb60
mov eax edi
jmp r-xdata
mov ecx esi
push 0x10
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx ]
push 0x1
mov ecx ebx
jmp r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
movsx ecx [ edi + 0x1 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] ecx
jmp r-xdata
mov edx [ eax ]
call edx
sub_10010590
push ebp
mov ebp esp
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov eax [ ebp + 0x8 ]
push ecx
mov ecx esi
call sub_1000bc70
mov eax esi
pop ebp
retn 0x4
sub_100105f0
push esi
mov esi ecx
mov ecx [ esi + 0x20 ]
push edi
xor edi edi
mov [ esi ] r--data
cmp ecx edi
je r-xdata
mov ecx [ esi + 0x10 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x20 ] edi
mov ecx [ esi + 0x30 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x10 ] edi
mov ecx [ esi + 0x24 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x30 ] edi
mov ecx [ esi + 0x28 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x24 ] edi
mov ecx [ esi + 0x2c ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x28 ] edi
mov ecx [ esi + 0x14 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x2c ] edi
pop edi
pop esi
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x14 ] edi
sub_10010680
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100105f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_100106b0
push ebp
mov ebp esp
mov [ eax + 0x10 ] edx
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov [ eax + 0x14 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x18 ] edx
mov edx [ ebp + 0x10 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
mov [ eax + 0x4 ] 0x1
mov [ eax + 0x8 ] ecx
mov [ eax + 0x1c ] edx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x28 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x30 ] ecx
pop ebp
retn 0xc
sub_100106f0
push ebx
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
pop ebx
retn
mov ecx [ esi + 0x20 ]
push edi
cmp ecx ebx
je r-xdata
mov ecx [ esi + 0x24 ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov ecx [ esi + 0x20 ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
test eax eax
je r-xdata
inc [ esi + 0xc ]
cmp [ esi + 0xc ] 0x7c
jbe r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
test eax eax
jne r-xdata
pop edi
mov edi [ esi + 0x20 ]
mov eax [ edi ]
mov edx [ eax + 0xc ]
mov ecx edi
call edx
mov [ esi + 0x20 ] eax
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
pop edi
pop ebx
retn
mov ecx [ esi + 0x10 ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov edi eax
cmp edi ebx
je r-xdata
mov ecx [ esi + 0x30 ]
cmp ecx ebx
je r-xdata
cmp [ esi + 0x4 ] ebx
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0xc ]
mov ecx edi
call edx
push 0x34
call sub_1002e957
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esi + 0xc ] ebx
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov edi eax
cmp edi ebx
je r-xdata
mov ecx [ esi + 0x10 ]
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
call edx
test eax eax
je r-xdata
xor eax eax
pop edi
mov [ esi + 0x20 ] eax
pop ebx
retn
mov [ eax ] r--data
mov [ eax + 0x1c ] ebx
mov [ eax + 0x20 ] ebx
mov [ eax + 0x2c ] ebx
mov [ eax + 0x28 ] ebx
mov [ eax + 0x18 ] r--data
mov [ eax + 0x24 ] 0x1
mov [ eax + 0x4 ] edi
mov [ eax + 0x10 ] ebx
mov [ eax + 0x14 ] ebx
mov [ eax + 0x8 ] ebx
pop edi
mov [ eax + 0xc ] esi
mov [ esi + 0x20 ] eax
pop ebx
retn
mov ecx [ esi + 0x10 ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
push edi
call edx
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
mov [ esi + 0x8 ] 0x1
sub_10010810
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b6e8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x24 ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x24 ]
mov ecx edi
call edx
xor ebx ebx
mov [ ebp - 0x50 ] r--data
mov [ ebp - 0x4c ] edi
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x4 ] ebx
mov edx [ esi + 0x3c ]
lea edi [ esi + 0x3c ]
lea eax [ ebp - 0x50 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0xc ]
mov ecx edi
call eax
mov [ ebp - 0x3c ] r--data
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x30 ] eax
mov eax [ esi + 0x58 ]
mov edi [ esi + 0x54 ]
mov [ ebp - 0x20 ] bl
mov [ ebp - 0x1c ] r--data
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x1
push 0x1
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x2
call sub_1000ae20
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x58 ]
add esp 0x4
cmp [ ebp - 0x14 ] ebx
jne r-xdata
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov ecx [ esi + 0x8 ]
sub esp 0xc
mov eax esp
mov [ esi + 0x58 ] ebx
mov ecx [ ecx + 0x14 ]
mov esi [ ecx ]
lea edx [ ebp - 0x3c ]
mov [ eax ] edx
mov edx [ ebp - 0x20 ]
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] edx
mov eax [ esi + 0xc ]
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov ecx [ esi + 0x8 ]
sub esp 0xc
mov eax esp
mov [ esi + 0x58 ] ebx
mov ecx [ ecx + 0x14 ]
mov esi [ ecx ]
lea edx [ ebp - 0x3c ]
mov [ eax ] edx
mov edx [ ebp - 0x20 ]
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] edx
mov eax [ esi + 0x10 ]
call eax
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
sub_10010950
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003bc78
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x78 ]
mov [ fs : 0x0 ] eax
mov edi ecx
xor ebx ebx
cmp [ edi + 0x18 ] ebx
jne r-xdata
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi + 0x20 ] ebx
jne r-xdata
cmp [ edi + 0x18 ] ebx
jne r-xdata
cmp [ edi + 0xc ] ebx
jne r-xdata
mov eax [ edi + 0x24 ]
mov edx [ eax + 0xc ]
lea esi [ edi + 0x24 ]
mov ecx esi
call edx
mov [ esp + 0x48 ] r--data
mov [ esp + 0x4c ] esi
mov [ esp + 0x50 ] ebx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x54 ] eax
mov [ esp + 0x80 ] 0x4
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0xc ]
lea esi [ esp + 0x48 ]
call edx
sub esp 0xc
mov edx esp
mov [ edx ] esi
mov [ esp + 0x30 ] eax
mov esi [ esp + 0x30 ]
mov eax [ edi + 0x8 ]
mov ecx [ eax + 0x14 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov [ esp + 0x34 ] 0x1
mov esi [ esp + 0x34 ]
mov [ edx + 0x8 ] esi
lea edx [ esp + 0x24 ]
push edx
call eax
cmp [ esp + 0x18 ] ebx
jne r-xdata
cmp [ edi + 0x10 ] ebx
jne r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ eax + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0x1c ]
call eax
mov [ edi + 0xc ] eax
cmp eax ebx
jne r-xdata
mov [ edi + 0x18 ] 0x1
mov ecx [ esp + 0x1c ]
mov [ edi + 0x14 ] ecx
mov [ edi + 0x1c ] 0x1
mov esi [ edi + 0x10 ]
mov edx [ esi ]
mov eax [ edx + 0x10 ]
mov ecx esi
call eax
mov edx [ esi ]
mov edx [ edx + 0xc ]
mov ecx esi
mov [ esp + 0x14 ] eax
call edx
cmp eax [ esp + 0x14 ]
jae r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
cmp eax ebx
je r-xdata
mov ecx edi
mov [ edi + 0x18 ] 0x1
mov [ edi + 0x1c ] ebx
call sub_10010fc0
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ edi + 0x24 ]
or esi 0xffffffff
mov [ esp + 0x34 ] r--data
mov [ esp + 0x38 ] ecx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x3c ] ebx
mov [ esp + 0x44 ] esi
mov [ esp + 0x80 ] 0x3
mov ecx [ edi + 0xc ]
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
lea eax [ esp + 0x34 ]
push eax
call edx
mov ecx edi
test eax eax
jne r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ eax + 0x2c ]
cmp ecx ebx
je r-xdata
mov esi 0x1
cmp eax esi
je r-xdata
call sub_10010810
test eax eax
jne r-xdata
mov [ edi + 0x18 ] 0x1
mov [ edi + 0x1c ] ebx
call sub_10010fc0
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ esp + 0x5c ] r--data
mov [ esp + 0x60 ] ebx
mov [ esp + 0x64 ] ebx
mov [ esp + 0x70 ] ebx
mov [ esp + 0x6c ] ebx
mov [ esp + 0x68 ] 0x1
lea esi [ esp + 0x5c ]
mov [ esp + 0x80 ] ebx
call sub_10009ff0
test eax eax
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
test eax eax
jne r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
mov [ edi + 0x10 ] eax
cmp eax ebx
je r-xdata
mov ecx edi
mov [ edi + 0x18 ] esi
mov [ edi + 0x1c ] ebx
call sub_10010fc0
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ edi + 0x20 ] 0x1
mov [ esp + 0x80 ] esi
mov [ edi + 0x1c ] ebx
jmp r-xdata
lea ecx [ esp + 0x5c ]
mov eax 0xc6d
mov [ esp + 0x20 ] r--data
mov [ esp + 0x24 ] ecx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x30 ] eax
lea edx [ esp + 0x20 ]
mov [ esp + 0x80 ] 0x1
mov ebx [ edi + 0x10 ]
push edx
call sub_1000adc0
add esp 0x4
test eax eax
jne r-xdata
mov ecx edi
mov [ edi + 0x18 ] 0x1
mov [ edi + 0x1c ] ebx
call sub_10010fc0
mov ecx esi
call sub_1000a130
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esp + 0x64 ]
xor esi esi
lea eax [ esp + 0x5c ]
mov [ esp + 0x34 ] r--data
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] esi
mov [ esp + 0x44 ] esi
mov [ esp + 0x40 ] ecx
mov [ esp + 0x80 ] 0x2
mov ecx [ edi + 0xc ]
lea edx [ esp + 0x34 ]
mov [ esp + 0x14 ] edx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push 0x1
lea edx [ esp + 0x18 ]
push edx
call eax
test eax eax
jne r-xdata
mov ecx edi
mov [ edi + 0x18 ] 0x1
mov [ edi + 0x1c ] eax
call sub_10010fc0
lea ecx [ esp + 0x5c ]
mov [ esp + 0x20 ] r--data
call sub_1000a130
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ esp + 0x5c ]
mov [ esp + 0x34 ] r--data
mov [ esp + 0x20 ] r--data
mov [ esp + 0x80 ] 0xffffffff
call sub_1000a130
xor ebx ebx
jmp r-xdata
mov ecx edi
mov [ edi + 0x18 ] 0x1
mov [ edi + 0x1c ] esi
call sub_10010fc0
lea ecx [ esp + 0x5c ]
mov [ esp + 0x34 ] r--data
mov [ esp + 0x20 ] r--data
call sub_1000a130
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi + 0x20 ] ebx
je r-xdata
sub_10010d10
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b6b3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x8 ]
call edx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
cmp [ esi + 0x1c ] ebx
je r-xdata
mov eax [ esi + 0x24 ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x24 ]
mov ecx edi
call edx
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] eax
push 0x34
mov [ ebp - 0x4 ] ebx
call sub_1002e957
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
xor eax eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x14 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x14 ]
push ecx
mov ecx [ esi + 0x4 ]
lea edx [ ebp - 0x24 ]
push edx
mov edx [ esi + 0x8 ]
push eax
call sub_100112f0
mov [ esi + 0x4 ] ebx
mov [ esi + 0x14 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10010df0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b67e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ esi ] r--data
mov eax 0x1
mov [ esi + 0x24 ] r--data
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] eax
lea edi [ esi + 0x3c ]
mov [ edi ] r--data
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0x14 ] ebx
mov [ edi + 0x10 ] ebx
mov [ edi + 0xc ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
cmp [ esi + 0x30 ] ebx
jne r-xdata
cmp [ edi + 0xc ] ebx
jne r-xdata
cmp [ esi + 0x38 ] ebx
je r-xdata
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] 0xffffffff
lea edx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] r--data
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] 0x1
push 0x1
lea ecx [ ebp - 0x18 ]
lea edx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000ae20
add esp 0x4
cmp [ ebp - 0x10 ] ebx
jne r-xdata
cmp [ edi + 0x14 ] ebx
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
mov eax [ esi + 0x2c ]
mov edx [ esi + 0x28 ]
push eax
mov [ ebp + 0xc ] edx
call sub_1002e957
add esp 0x4
mov [ esi + 0x28 ] eax
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x18 ]
mov [ esi + 0x54 ] eax
mov [ esi + 0x58 ] ecx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov [ esi + 0x18 ] 0x1
mov [ edi + 0xc ] 0x1
jmp r-xdata
mov ecx [ edi + 0x8 ]
mov eax [ edi + 0x4 ]
push ecx
mov [ ebp + 0xc ] eax
call sub_1002e957
add esp 0x4
mov [ edi + 0x4 ] eax
cmp eax ebx
je r-xdata
mov [ esi + 0x18 ] 0x1
mov ecx [ esi + 0x2c ]
mov edx [ ebp + 0xc ]
push ecx
push edx
push eax
call sub_10033950
add esp 0xc
mov [ esi + 0x34 ] 0x1
mov [ esi + 0x18 ] 0x1
mov edx [ edi + 0x8 ]
mov ecx [ ebp + 0xc ]
push edx
push ecx
push eax
call sub_10033950
add esp 0xc
mov [ edi + 0x10 ] 0x1
sub_10010f80
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10011070
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10010fc0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003adf8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ edi + 0x58 ]
xor ebx ebx
cmp ecx ebx
je r-xdata
mov eax [ edi + 0x3c ]
mov edx [ eax + 0xc ]
lea esi [ edi + 0x3c ]
mov ecx esi
call edx
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] ebx
mov eax [ edi + 0x8 ]
mov ecx [ eax + 0x14 ]
mov edx [ edi + 0x54 ]
mov edi [ ecx ]
sub esp 0xc
mov eax esp
lea esi [ ebp - 0x2c ]
mov [ eax ] esi
mov [ eax + 0x4 ] edx
mov [ ebp - 0x10 ] bl
mov edx [ ebp - 0x10 ]
mov [ eax + 0x8 ] edx
mov eax [ edi + 0x10 ]
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ edi + 0x58 ] ebx
sub_10011070
push ebp
mov ebp esp
push 0xffffffff
push sub_1003adce
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
mov ecx [ esi + 0x14 ]
xor edi edi
cmp ecx edi
je r-xdata
mov ecx [ esi + 0x10 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x14 ] edi
mov ecx [ esi + 0xc ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x10 ] edi
mov ecx [ esi + 0x58 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0xc ] edi
mov ecx [ esi + 0x4 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x58 ] edi
mov [ esi + 0x3c ] r--data
cmp [ esi + 0x4c ] edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x4 ] edi
mov ebx r--data
mov [ esi + 0x3c ] ebx
mov [ esi + 0x24 ] r--data
cmp [ esi + 0x34 ] edi
je r-xdata
cmp [ esi + 0x48 ] edi
jne r-xdata
mov [ esi + 0x24 ] ebx
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x30 ] edi
jne r-xdata
mov eax [ esi + 0x40 ]
cmp eax edi
je r-xdata
cmp [ esi + 0x50 ] edi
jne r-xdata
mov eax [ esi + 0x28 ]
cmp eax edi
je r-xdata
cmp [ esi + 0x38 ] edi
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x40 ] edi
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x28 ] edi
sub_10011180
push ebp
mov ebp esp
push 0xffffffff
push sub_1003ad88
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ esi + 0xc ]
xor ebx ebx
cmp ecx ebx
je r-xdata
mov eax [ esi + 0x18 ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x18 ]
mov ecx edi
call edx
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] ebx
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0xc ]
lea edi [ ebp - 0x2c ]
call edx
mov ecx [ esi + 0x8 ]
mov ecx [ ecx + 0x14 ]
mov ebx [ ecx ]
sub esp 0xc
mov edx esp
mov [ edx ] edi
mov [ edx + 0x4 ] eax
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp - 0x10 ]
mov [ edx + 0x8 ] eax
mov edx [ ebx + 0x10 ]
call edx
mov [ esi + 0x30 ] 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0xc ] ebx
sub_10011230
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x30 ] 0x0
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
test eax eax
je r-xdata
push ebx
push edi
mov edi [ esi + 0x10 ]
mov edx [ edi ]
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
mov edx [ edi ]
mov ebx eax
mov eax [ edx + 0xc ]
mov ecx edi
call eax
pop edi
cmp eax ebx
pop ebx
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov [ esi + 0x14 ] eax
cmp eax 0x1
jne r-xdata
call sub_10011430
mov ecx [ esi + 0x8 ]
mov ecx [ ecx + 0x28 ]
test ecx ecx
je r-xdata
call sub_10011180
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov [ esi + 0x10 ] eax
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x14 ]
mov edx [ ecx ]
mov edx [ edx + 0x4 ]
push eax
mov eax [ esi + 0x10 ]
push 0x1000
push eax
call edx
test eax eax
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
test eax eax
jne r-xdata
sub_100112f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b633
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
lea edi [ esi + 0x18 ]
mov [ esi ] r--data
mov eax 0x1
mov [ edi ] r--data
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0x14 ] ebx
mov [ edi + 0x10 ] ebx
mov [ edi + 0xc ] eax
mov [ ebp - 0x4 ] al
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] ecx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x30 ] ebx
cmp [ edi + 0xc ] ebx
jne r-xdata
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] 0xffffffff
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] r--data
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] eax
push eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x3
call sub_1000ae20
add esp 0x4
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x10 ] ebx
jne r-xdata
cmp [ edi + 0x14 ] ebx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
call sub_10011180
mov [ edi + 0xc ] eax
mov eax [ edi + 0x8 ]
mov edx [ edi + 0x4 ]
push eax
mov [ ebp + 0x10 ] edx
call sub_1002e957
add esp 0x4
mov [ edi + 0x4 ] eax
cmp eax ebx
je r-xdata
mov ecx [ edi + 0x8 ]
mov edx [ ebp + 0x10 ]
push ecx
push edx
push eax
call sub_10033950
add esp 0xc
mov [ edi + 0x10 ] 0x1
mov eax 0x1
sub_10011400
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100114f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10011430
push ebp
mov ebp esp
push 0xffffffff
push sub_1003ad88
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ esi + 0xc ]
xor ebx ebx
cmp ecx ebx
je r-xdata
mov eax [ esi + 0x18 ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x18 ]
mov ecx edi
call edx
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] ebx
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0xc ]
lea edi [ ebp - 0x2c ]
call edx
mov ecx [ esi + 0x8 ]
mov ecx [ ecx + 0x14 ]
mov ebx [ ecx ]
sub esp 0xc
mov edx esp
mov [ edx ] edi
mov [ edx + 0x4 ] eax
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp - 0x10 ]
mov [ edx + 0x8 ] eax
mov edx [ ebx + 0xc ]
call edx
mov [ esi + 0x30 ] 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0xc ] ebx
sub_100114f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003ad63
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0xc ]
xor edi edi
cmp ecx edi
je r-xdata
mov ecx [ esi + 0x10 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0xc ] edi
mov ecx [ esi + 0x4 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x10 ] edi
mov ecx [ esi + 0x14 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x4 ] edi
mov [ esi + 0x18 ] r--data
cmp [ esi + 0x28 ] edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x18 ] r--data
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x24 ] edi
jne r-xdata
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
cmp [ esi + 0x2c ] edi
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x1c ] edi
sub_100115c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b5f0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ edi ]
mov edx [ eax + 0x8 ]
call edx
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov [ ebp - 0x14 ] eax
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ edi + 0xc ]
mov [ ebp - 0x10 ] eax
mov ecx [ ecx + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0x1c ]
call eax
lea esi [ edi + 0x18 ]
mov ebx eax
call sub_10009ff0
test eax eax
jne r-xdata
mov eax 0x1
mov [ edi + 0x14 ] eax
mov [ edi + 0x10 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x40 ] r--data
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x30 ] 0xffffffff
mov [ ebp - 0x4 ] eax
mov edx [ ebx ]
mov edx [ edx + 0x4 ]
push 0x1
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
call edx
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x10 ]
test ecx ecx
je r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x8 ]
lea ecx [ ebp - 0x40 ]
push ecx
mov ecx ebx
call edx
test eax eax
je r-xdata
test ebx ebx
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov edx [ ebx ]
mov eax [ edx ]
mov esi 0x1
push esi
mov ecx ebx
call eax
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
call edx
mov ecx [ ebp - 0x10 ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov [ edi + 0x30 ] eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov ecx esi
call edx
xor ecx ecx
mov [ ebp - 0x54 ] r--data
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x14 ]
mov edx [ edi + 0x30 ]
sub esp 0xc
mov eax esp
lea esi [ ebp - 0x54 ]
mov [ eax ] esi
mov [ eax + 0x4 ] edx
mov [ ebp - 0x24 ] 0x0
mov ebx [ ebp - 0x24 ]
mov [ eax + 0x8 ] ebx
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x28 ] edx
lea edx [ ebp - 0x20 ]
push edx
call eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov esi 0x1
jmp r-xdata
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
mov [ edi + 0x14 ] 0x1
mov ecx [ ebp - 0x1c ]
push ecx
mov ecx 0x1
lea edx [ ebp - 0x10 ]
call sub_1000ad60
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov eax [ edx ]
push esi
call eax
mov [ edi + 0x10 ] esi
mov [ edi + 0x14 ] esi
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ edi + 0x10 ] 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov ecx [ ebp - 0x1c ]
mov [ edi + 0x14 ] 0x1
test ecx ecx
je r-xdata
mov edx [ ebp - 0x1c ]
mov [ edi + 0x14 ] 0x0
mov [ edi + 0x8 ] edx
jmp r-xdata
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x14 ]
mov edx [ ecx ]
sub esp 0xc
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0x28 ]
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ebx
mov eax [ edx + 0x10 ]
call eax
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov ecx [ ebp - 0x10 ]
test ecx ecx
je r-xdata
sub_10011810
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b6b3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x8 ]
call edx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
cmp [ esi + 0x14 ] ebx
jne r-xdata
mov eax [ esi + 0x18 ]
mov edx [ eax + 0xc ]
lea edi [ esi + 0x18 ]
mov ecx edi
call edx
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] eax
push 0x5c
mov [ ebp - 0x4 ] ebx
call sub_1002e957
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
xor eax eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x30 ]
push ecx
push edx
mov edx [ esi + 0x4 ]
lea ecx [ ebp - 0x24 ]
push ecx
mov ecx [ esi + 0xc ]
push edx
push eax
call sub_10010df0
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_100118f0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10011920
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10011920
push ebp
mov ebp esp
push 0xffffffff
push sub_1003ad33
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x4 ] 0x0
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x18 ] r--data
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x8 ] 0x0
mov [ esi + 0x18 ] r--data
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
cmp [ esi + 0x2c ] 0x0
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x1c ] 0x0
sub_10011a00
push edi
mov edi ecx
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
mov edx [ edi + 0x8 ]
mov eax [ eax + 0xc ]
push edx
call eax
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
pop edi
retn
mov ecx [ edi + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
push esi
call eax
mov esi eax
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov [ edi + 0x8 ] eax
mov edx [ esi ]
mov eax [ edx + 0x58 ]
mov ecx esi
call eax
mov [ edi + 0xc ] eax
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
pop esi
sub_10011a50
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
mov edx [ ecx ]
push esi
mov esi [ ebp + 0xc ]
sub esp 0xc
mov eax esp
mov [ eax ] esi
mov esi [ ebp + 0x10 ]
mov [ eax + 0x4 ] esi
mov esi [ ebp + 0x14 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
push esi
call eax
mov eax esi
pop esi
pop ebp
retn 0x10
sub_10011a80
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
sub esp 0xc
mov eax esp
mov [ eax ] esi
mov esi [ ebp + 0xc ]
mov [ eax + 0x4 ] esi
mov esi [ ebp + 0x10 ]
mov [ eax + 0x8 ] esi
mov eax [ edx + 0x8 ]
call eax
pop esi
pop ebp
retn 0xc
sub_10011ab0
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
sub esp 0xc
mov eax esp
mov [ eax ] esi
mov esi [ ebp + 0xc ]
mov [ eax + 0x4 ] esi
mov esi [ ebp + 0x10 ]
mov [ eax + 0x8 ] esi
mov eax [ edx + 0x10 ]
call eax
pop esi
pop ebp
retn 0xc
sub_10011af0
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
sub esp 0xc
mov eax esp
mov [ eax ] esi
mov esi [ ebp + 0xc ]
mov [ eax + 0x4 ] esi
mov esi [ ebp + 0x10 ]
mov [ eax + 0x8 ] esi
mov eax [ edx + 0x20 ]
call eax
pop esi
pop ebp
retn 0xc
sub_10011b20
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
sub esp 0xc
mov eax esp
mov [ eax ] esi
mov esi [ ebp + 0xc ]
mov [ eax + 0x4 ] esi
mov esi [ ebp + 0x10 ]
mov [ eax + 0x8 ] esi
mov eax [ edx + 0x24 ]
call eax
pop esi
pop ebp
retn 0xc
sub_10011b50
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ecx + 0x4 ]
mov edx [ ecx ]
mov edx [ edx + 0x2c ]
push esi
mov esi [ ebp + 0x8 ]
push eax
sub esp 0xc
mov eax esp
mov [ eax ] esi
mov esi [ ebp + 0xc ]
mov [ eax + 0x4 ] esi
mov esi [ ebp + 0x10 ]
mov [ eax + 0x8 ] esi
call edx
pop esi
pop ebp
retn 0x10
sub_10011b80
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ecx + 0x4 ]
mov edx [ ecx ]
mov edx [ edx + 0x30 ]
push esi
mov esi [ ebp + 0x8 ]
push eax
sub esp 0xc
mov eax esp
mov [ eax ] esi
mov esi [ ebp + 0xc ]
mov [ eax + 0x4 ] esi
mov esi [ ebp + 0x10 ]
mov [ eax + 0x8 ] esi
call edx
pop esi
pop ebp
retn 0x10
sub_10011bb0
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
sub esp 0xc
mov eax esp
mov [ eax ] esi
mov esi [ ebp + 0xc ]
mov [ eax + 0x4 ] esi
mov esi [ ebp + 0x10 ]
mov [ eax + 0x8 ] esi
mov eax [ edx + 0x34 ]
call eax
pop esi
pop ebp
retn 0xc
sub_10011c00
push ebp
mov ebp esp
push 0xffffffff
push sub_1003acf8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi + 0x4 ] 0x0
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
sub_10011c70
push ebp
mov ebp esp
push 0xffffffff
push sub_1003acf8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x8 ] 0x0
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x4 ] 0x0
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
sub_10011cf0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push edi
lea edi [ esi + 0x18 ]
mov [ esi + 0x14 ] eax
mov [ esi + 0x30 ] ebx
cmp [ edi + 0xc ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x4 ]
mov ecx ebx
call edx
mov ebx eax
mov eax [ ebx ]
mov edx [ eax + 0x8 ]
mov ecx ebx
call edx
mov [ esi + 0x38 ] eax
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
call edx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov ecx [ esi + 0x14 ]
mov ebx eax
push edi
lea eax [ esi + 0xc ]
push eax
push ebx
call sub_10011dd0
add esp 0xc
mov [ esi + 0x10 ] eax
test eax eax
jne r-xdata
cmp [ edi + 0x14 ] 0x0
je r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x8 ]
mov ecx ebx
call eax
mov [ esi + 0x34 ] eax
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
pop edi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ edi + 0xc ] 0x1
mov edx [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
push edx
mov [ ebp - 0x4 ] ecx
call sub_1002e957
add esp 0x4
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
xor eax eax
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
mov ecx [ edi + 0x8 ]
mov edx [ ebp - 0x4 ]
push ecx
push edx
push eax
call sub_10033950
add esp 0xc
mov [ edi + 0x10 ] 0x1
sub_10011dd0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003acd0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x78 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x4 ]
call edx
xor edi edi
mov [ esp + 0x1c ] eax
test eax eax
je r-xdata
xor eax eax
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov edx [ eax + 0x8 ]
push edi
mov ecx esi
call edx
mov ebx eax
mov eax [ ebp + 0xc ]
mov [ eax ] edi
test ebx ebx
jne r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
mov ecx ebx
call eax
mov edx [ ebx ]
xor edi edi
mov [ esp + 0x14 ] eax
cmp eax edi
mov eax [ edx ]
push 0x1
mov ecx ebx
jne r-xdata
inc edi
cmp edi [ esp + 0x1c ]
jb r-xdata
call eax
mov edx [ esi ]
mov eax [ edx + 0xc ]
mov ecx esi
mov [ esp + 0x1c ] edi
call eax
test eax eax
je r-xdata
call eax
xor eax eax
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ esp + 0x1c ]
mov edx [ edx + 0x10 ]
push eax
mov ecx esi
call edx
mov ebx eax
cmp ebx edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0x30 ]
call edx
mov esi eax
cmp esi edi
jne r-xdata
mov ebx [ esp + 0x1c ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
inc ebx
mov ecx esi
mov [ esp + 0x1c ] ebx
call edx
cmp ebx eax
jb r-xdata
mov [ esp + 0x5c ] r--data
mov [ esp + 0x60 ] edi
mov [ esp + 0x64 ] edi
mov [ esp + 0x70 ] edi
mov [ esp + 0x6c ] edi
mov [ esp + 0x68 ] 0x1
mov ecx [ esp + 0x14 ]
mov [ esp + 0x80 ] edi
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
mov [ esp + 0x18 ] eax
cmp [ esp + 0x68 ] edi
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
call edx
mov ecx [ esp + 0x14 ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
xor eax eax
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esp + 0x18 ] edi
je r-xdata
cmp [ esp + 0x70 ] edi
je r-xdata
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
mov ecx [ esp + 0x18 ]
cmp ecx edi
je r-xdata
lea edx [ esp + 0x5c ]
mov [ esp + 0x48 ] r--data
mov [ esp + 0x4c ] edx
mov [ esp + 0x54 ] edi
mov [ esp + 0x50 ] edi
mov [ esp + 0x58 ] 0xffffffff
lea ecx [ esp + 0x48 ]
push ecx
push 0x1
mov [ esp + 0x88 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x8 ]
lea edx [ esp + 0x20 ]
push edx
push esi
mov ecx ebx
call eax
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
mov ecx [ esp + 0x18 ]
cmp ecx edi
je r-xdata
mov [ esp + 0x68 ] 0x1
mov ecx [ esp + 0x64 ]
mov eax [ esp + 0x60 ]
push ecx
mov [ esp + 0x20 ] eax
call sub_1002e957
add esp 0x4
mov [ esp + 0x60 ] eax
cmp eax edi
je r-xdata
mov [ esp + 0x5c ] r--data
cmp [ esp + 0x6c ] edi
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
mov edx [ esp + 0x64 ]
lea ecx [ esp + 0x5c ]
mov [ esp + 0x20 ] r--data
mov [ esp + 0x24 ] ecx
mov [ esp + 0x28 ] edi
mov [ esp + 0x30 ] edi
mov [ esp + 0x2c ] edx
mov esi [ ebp + 0x10 ]
mov [ esp + 0x34 ] r--data
mov [ esp + 0x38 ] esi
mov [ esp + 0x40 ] edi
mov [ esp + 0x3c ] edi
mov [ esp + 0x44 ] 0xffffffff
mov [ esp + 0x80 ] 0x3
call sub_1000a040
mov ecx [ esp + 0x24 ]
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x30 ]
add edx ecx
cmp edx eax
jbe r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov edx [ esp + 0x64 ]
mov ecx [ esp + 0x1c ]
push edx
push ecx
push eax
call sub_10033950
add esp 0xc
mov [ esp + 0x6c ] 0x1
cmp [ esp + 0x68 ] edi
jne r-xdata
mov eax ecx
mov ecx [ esp + 0x24 ]
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
sub eax [ esp + 0x30 ]
jmp r-xdata
mov eax [ esp + 0x60 ]
cmp eax edi
je r-xdata
cmp [ esp + 0x70 ] edi
jne r-xdata
lea ecx [ esp + 0x34 ]
push ecx
lea ebx [ esp + 0x24 ]
call sub_1000adc0
mov eax r--data
add esp 0x4
lea ecx [ esp + 0x5c ]
mov [ esp + 0x34 ] eax
mov [ esp + 0x20 ] r--data
mov [ esp + 0x48 ] eax
call sub_1000a130
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call sub_1002e8fb
add esp 0x4
sub_10012140
push ebp
mov ebp esp
push 0xffffffff
push sub_1003ac8b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x18 ] r--data
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x18 ] r--data
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
cmp [ esi + 0x8 ] 0x0
je r-xdata
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
cmp [ esi + 0x2c ] 0x0
jne r-xdata
mov [ esi + 0x4 ] 0x0
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x1c ] 0x0
sub_10012210
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10012140
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10012240
push ebp
mov ebp esp
push 0xffffffff
push sub_1003aaf8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
mov [ ebp - 0x4 ] edi
mov ecx [ esi + 0x10 ]
cmp ecx edi
je r-xdata
mov ecx [ esi + 0xc ]
cmp ecx edi
je r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx edi
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ esi + 0xc ] edi
mov ecx [ esi + 0x10 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ esi + 0x4 ]
mov eax [ eax + 0x8 ]
push edx
call eax
mov [ esi ] r--data
mov [ esi + 0x4 ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ esi + 0x10 ] edi
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
sub_100122e0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10012240
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10012310
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0x30 ]
mov eax [ ecx ]
mov edx [ esi + 0x34 ]
mov eax [ eax + 0xc ]
push edi
push edx
call eax
test eax eax
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov edx [ edx + 0x4 ]
sub esp 0xc
mov eax esp
mov [ eax ] edi
mov edi [ ebp + 0x10 ]
mov [ eax + 0x4 ] edi
mov edi [ ebp + 0x14 ]
mov [ eax + 0x8 ] edi
lea eax [ esp + 0x1c ]
push eax
call edx
mov ecx [ esp + 0x10 ]
xor edi edi
cmp ecx edi
je r-xdata
mov ecx [ esi + 0x30 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov edi eax
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
lea ecx [ esi + 0x18 ]
push ecx
mov ecx [ esi + 0x14 ]
lea edx [ esi + 0xc ]
push edx
push edi
mov [ esi + 0x34 ] eax
call sub_10011dd0
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
push 0x18
call sub_1002e957
add esp 0x4
cmp eax edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ esp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
xor esi esi
mov ecx [ esp + 0x14 ]
mov [ eax + 0x8 ] esi
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x14 ] edi
mov esi eax
jmp r-xdata
mov [ esi + 0x10 ] ebx
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x10 ]
pop edi
mov [ eax + 0x4 ] esi
pop esi
mov [ eax ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esp + 0x14 ]
cmp ecx edi
je r-xdata
call sub_10012550
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov edx 0x3
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
sub_10012440
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003ac50
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor ebx ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov [ esp + 0x24 ] r--data
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] edi
mov [ esp + 0x38 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x30 ] 0x1
mov [ esp + 0x48 ] ebx
lea ecx [ esp + 0x24 ]
mov [ esp + 0x10 ] r--data
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x1c ] edi
mov [ esp + 0x48 ] 0x1
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x10 ]
mov edx [ ecx ]
mov edx [ edx + 0x4 ]
push eax
lea eax [ esp + 0x14 ]
push eax
call edx
cmp eax ebx
jne r-xdata
xor eax eax
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
neg eax
sbb eax eax
and eax edi
mov esi eax
mov [ esp + 0x10 ] r--data
mov [ esp + 0x24 ] r--data
cmp [ esp + 0x34 ] ebx
je r-xdata
mov [ esi + 0x14 ] 0x1
mov eax esi
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esp + 0x30 ] ebx
jne r-xdata
mov eax [ esp + 0x28 ]
cmp eax ebx
je r-xdata
cmp [ esp + 0x38 ] ebx
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
sub_10012550
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b5b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x14 ]
mov edx [ ecx ]
mov eax [ eax + 0xc ]
mov edx [ edx + 0x8 ]
push eax
call edx
mov [ esi + 0xc ] eax
test eax eax
jne r-xdata
mov ecx [ esi + 0x8 ]
mov ecx [ ecx + 0x10 ]
mov edx [ eax ]
mov edx [ edx + 0x10 ]
push ecx
mov ecx eax
call edx
mov [ esi + 0x10 ] eax
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x8 ]
mov eax [ ecx + 0x18 ]
mov edx [ eax + 0xc ]
add ecx 0x18
call edx
mov ecx [ esi + 0x4 ]
or eax 0xf0000000
mov [ ebp - 0x10 ] eax
mov eax [ ecx ]
mov eax [ eax + 0xc ]
push 0x4
lea edx [ ebp - 0x10 ]
push edx
call eax
cmp eax 0x4
jne r-xdata
mov ecx [ esi + 0x8 ]
mov edx [ ecx + 0x38 ]
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x14 ] edx
mov eax [ ecx ]
mov eax [ eax + 0xc ]
push 0x4
lea edx [ ebp - 0x14 ]
push edx
call eax
cmp eax 0x4
jne r-xdata
mov ecx [ esi + 0x8 ]
mov edx [ ecx + 0x18 ]
mov eax [ edx + 0xc ]
add ecx 0x18
call eax
mov ecx [ esi + 0x8 ]
add ecx 0x18
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x0
mov edx [ esi + 0x4 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ecx
push edx
mov ecx 0x1
lea edx [ ebp - 0x18 ]
call sub_1000ad60
add esp 0x4
neg eax
sbb eax eax
neg eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_100126c0
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x1c ]
add ecx edx
cmp ecx [ eax + 0x18 ]
jbe r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push edx
call eax
mov esi [ esi + 0x4 ]
add [ esi + 0x1c ] eax
pop esi
pop ebp
retn 0x8
xor eax eax
pop esi
pop ebp
retn 0x8
sub_10012710
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a678
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x8 ] 0x0
mov [ esi ] r--data
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10012790
push ebp
mov ebp esp
push 0xffffffff
push sub_1003ac1b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0xc ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
mov [ esi + 0xc ] r--data
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x20 ] 0x0
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi + 0x4 ] 0x0
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
sub_10012830
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10012790
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10012860
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
sub esp 0xc
mov eax esp
mov [ eax ] esi
mov esi [ ebp + 0xc ]
mov [ eax + 0x4 ] esi
mov esi [ ebp + 0x10 ]
mov [ eax + 0x8 ] esi
mov eax [ edx + 0xc ]
call eax
pop esi
pop ebp
retn 0xc
sub_10012890
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
sub esp 0xc
mov eax esp
mov [ eax ] edi
mov edi [ ebp + 0xc ]
mov esi ecx
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov [ eax + 0x4 ] edi
mov edi [ ebp + 0x10 ]
mov [ eax + 0x8 ] edi
mov eax [ edx + 0x8 ]
call eax
mov edi eax
test edi edi
je r-xdata
mov ecx [ esi + 0x4 ]
mov esi [ ebp + 0x8 ]
mov edx [ ecx ]
sub esp 0xc
mov eax esp
mov [ eax ] esi
mov esi [ ebp + 0xc ]
mov [ eax + 0x4 ] esi
mov esi [ ebp + 0x10 ]
mov [ eax + 0x8 ] esi
mov eax [ edx + 0x10 ]
call eax
pop edi
pop esi
pop ebp
retn 0xc
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
mov ecx [ esi + 0x1c ]
cmp ecx eax
jbe r-xdata
mov [ esi + 0x1c ] 0x0
sub ecx eax
mov [ esi + 0x1c ] ecx
jmp r-xdata
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
sub_10012910
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov [ esi + 0x10 ] edi
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
push 0x6e
lea eax [ ebp - 0x74 ]
push 0x0
push eax
mov [ ebp - 0x88 ] 0x0
mov [ ebp - 0x84 ] 0x0
call sub_10032e00
add esp 0xc
mov eax 0x1
call sub_1002c070
lea edx [ ebp - 0x74 ]
sub edx eax
lea ebx [ ebx ]
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
jne r-xdata
mov cx [ esi + 0x4 ]
push 0x0
push 0x0
lea edx [ ebp - 0x88 ]
push edx
lea eax [ ebp - 0x74 ]
push eax
mov [ ebp - 0x74 ] cx
call [ GetDiskFreeSpaceExW@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x84 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x88 ]
fild [ esi + 0x8 ]
add ecx edi
mov [ ebp - 0x7c ] ecx
fmul [ r--data ]
fild [ ebp - 0x7c ]
jns r-xdata
fnstcw [ ebp - 0x76 ]
movzx eax [ ebp - 0x76 ]
fmulp st1
or eax 0xc00
mov [ ebp - 0x7c ] eax
fldcw [ ebp - 0x7c ]
fistp [ ebp - 0x80 ]
mov eax [ ebp - 0x80 ]
mov [ esi + 0xc ] eax
fldcw [ ebp - 0x76 ]
cmp eax edi
jbe r-xdata
fadd [ r--data ]
sub eax edi
mov [ esi + 0xc ] eax
sub_10012a10
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
sub esp 0xc
mov eax esp
mov [ eax ] esi
mov esi [ ebp + 0xc ]
mov edi ecx
mov ecx [ edi + 0x4 ]
mov edx [ ecx ]
mov [ eax + 0x4 ] esi
mov esi [ ebp + 0x10 ]
mov [ eax + 0x8 ] esi
mov eax [ edx + 0x8 ]
call eax
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn 0xc
push 0xc
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x8 ] esi
mov [ eax + 0x4 ] edi
pop edi
pop esi
pop ebp
retn 0xc
sub_10012a70
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
mov ecx [ esi + 0x20 ]
push edi
test ecx ecx
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov edx [ edx + 0x4 ]
sub esp 0xc
mov eax esp
mov [ eax ] edi
mov edi [ ebp + 0x10 ]
mov [ eax + 0x4 ] edi
mov edi [ ebp + 0x14 ]
mov [ eax + 0x8 ] edi
lea eax [ ebp - 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x8 ]
test ecx ecx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
pop edi
mov [ eax + 0x4 ] ecx
pop esi
mov esp ebp
pop ebp
retn 0x10
push 0xc
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov [ esi + 0x18 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
xor eax eax
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_10012c30
push ebp
mov ebp esp
push 0xffffffff
push sub_1003be38
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x30 ] edx
cmp ecx eax
je r-xdata
mov eax [ edx ]
mov edx [ edx + 0x4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x34 ] edx
cmp eax edx
je r-xdata
mov edx [ ebp - 0x34 ]
push edx
push eax
call sub_100101a0
mov edi [ esi + 0x8 ]
add esp 0x8
mov ebx eax
call sub_1000ff40
mov edx [ ebp - 0x30 ]
mov [ esi + 0x8 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x2c ] cl
push eax
or ecx 0xffffffff
xor ebx ebx
lea edi [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
call sub_10002780
xor eax eax
sub esp 0x1c
mov edi esp
mov [ ebp - 0x4 ] eax
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] 0xf
mov [ edi ] al
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x38 ] esp
push eax
or ecx 0xffffffff
call sub_10002780
mov ecx esi
call sub_10012dd0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax [ ebp - 0x30 ]
add eax 0x1c
mov [ ebp - 0x30 ] eax
cmp eax [ ebp - 0x34 ]
jne r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
mov eax [ ebp - 0x30 ]
sub_10012d30
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
retn
push edi
mov edi [ esi + 0x8 ]
call sub_1000ff40
mov eax [ esi + 0x4 ]
push eax
call sub_1002e8fb
add esp 0x4
pop edi
sub_10012d70
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
je r-xdata
push edi
mov edi [ esi + 0x8 ]
call sub_1000ff40
mov eax [ esi + 0x4 ]
push eax
call sub_1002e8fb
add esp 0x4
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10012dd0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d188
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x2c ] al
lea eax [ ebp + 0x8 ]
push eax
or ecx 0xffffffff
xor ebx ebx
lea edi [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
call sub_10002780
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x2c ]
mov edi 0x10
cmp [ ebp - 0x18 ] edi
jae r-xdata
mov eax [ ebp - 0x1c ]
xor ebx ebx
shr eax 0x1
je r-xdata
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] edi
jb r-xdata
cmp [ ecx + eax * 2 - 0x2 ] bx
je r-xdata
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp + 0x1c ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
add esi 0x4
lea ecx [ ebp - 0x2c ]
call sub_10013160
mov edi 0x10
mov cx [ r--data ]
mov eax 0xf
mov [ ebp - 0x48 ] bl
mov [ ebp - 0x48 ] cx
mov ecx 0x2
mov [ ebp - 0x34 ] eax
cmp eax edi
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x38 ] ecx
jae r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x1c
mov edx [ ebp + 0x8 ]
push edx
call sub_1002e8fb
add esp 0x4
mov [ eax + 0x2 ] bl
push ebx
lea edx [ ebp - 0x48 ]
push edx
or eax 0xffffffff
lea edi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] cl
call sub_10003ee0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x48 ]
push eax
call sub_1002e8fb
add esp 0x4
sub_10012f00
push ebp
mov ebp esp
push 0xffffffff
push sub_1003bc28
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
xor esi esi
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x38 ] eax
cmp ecx eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x8
jmp r-xdata
push ecx
or ecx 0xffffffff
xor ebx ebx
lea edi [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x2c ] dl
call sub_10002780
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x1c ]
lea edx [ eax + esi ]
cmp edx [ ebp + 0xc ]
ja r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov edx [ ebp - 0x2c ]
mov edi 0x10
cmp [ ebp - 0x18 ] edi
jae r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1002e8fb
add esp 0x4
mov ecx [ ebp - 0x34 ]
mov ebx [ ecx ]
push eax
mov eax [ ebx + 0xc ]
push edx
call eax
add esi [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] edi
jb r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x30 ]
add eax 0x1c
mov [ ebp - 0x30 ] eax
cmp eax [ ebp - 0x38 ]
jne r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
mov ecx [ ebp - 0x30 ]
xor edx edx
jmp r-xdata
sub_10013000
push ebp
mov ebp esp
push 0xffffffff
push sub_1003bd28
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
add esi 0x4
mov ebx ecx
mov ecx [ esi ]
mov [ ebp - 0x38 ] esi
cmp ecx eax
je r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x10 ]
mov ecx ebx
call eax
mov esi eax
push esi
call sub_1002eb41
mov edx [ ebx ]
add esp 0x4
mov edi eax
mov eax [ edx + 0x14 ]
push esi
push edi
mov ecx ebx
mov [ ebp - 0x30 ] edi
call eax
cmp esi eax
jne r-xdata
mov edx [ ebp - 0x34 ]
push edx
push eax
call sub_100101a0
mov edi [ esi + 0x4 ]
add esp 0x8
mov [ ebp - 0x30 ] eax
call sub_1000ff40
mov eax [ ebp - 0x30 ]
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
lea eax [ edi + esi ]
mov ebx edi
mov [ ebp - 0x34 ] eax
cmp edi eax
jae r-xdata
push edi
call sub_1002ee65
add esp 0x4
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
mov eax ebx
lea edx [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
mov edi eax
mov [ ebp - 0x2c ] cl
lea esi [ edi + edi + 0x2 ]
mov eax ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
call sub_10002640
mov esi [ ebp - 0x38 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
call sub_10013160
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x10
lea ebx [ ebx + edi * 2 + 0x2 ]
jb r-xdata
mov edi [ ebp - 0x30 ]
cmp ebx [ ebp - 0x34 ]
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
mov eax ebx
lea edx [ eax + 0x2 ]
sub_10013160
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c47a
mov eax [ fs : 0x0 ]
push eax
push ebx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov ecx [ esi + 0x4 ]
cmp ebx ecx
jae r-xdata
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov eax [ esi ]
cmp eax ebx
ja r-xdata
mov edi [ esi + 0x4 ]
xor ecx ecx
mov [ ebp - 0x4 ] 0x1
cmp edi ecx
je r-xdata
mov ecx esi
call sub_1000ff80
sub ebx eax
mov eax 0x92492493
imul ebx
add edx ebx
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
cmp ecx [ esi + 0x8 ]
jne r-xdata
add [ esi + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push ebx
mov ecx [ esi ]
lea eax [ edi * 8 ]
sub eax edi
mov edi [ esi + 0x4 ]
lea eax [ ecx + eax * 4 ]
xor ecx ecx
mov [ ebp - 0x4 ] ecx
cmp edi ecx
je r-xdata
mov ecx esi
call sub_1000ff80
push eax
jmp r-xdata
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] ecx
mov [ edi ] cl
or ecx 0xffffffff
xor ebx ebx
call sub_10002780
sub_10013220
mov ecx [ esi + 0x24 ]
push edi
xor edi edi
cmp ecx edi
je r-xdata
mov ecx [ esi + 0x28 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x24 ] edi
mov ecx [ esi + 0x20 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x28 ] edi
mov ecx [ esi + 0x4 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x20 ] edi
mov ecx [ esi + 0xc ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x4 ] edi
mov ecx [ esi + 0x10 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0xc ] edi
mov ecx [ esi + 0x14 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x10 ] edi
mov ecx [ esi + 0x18 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x14 ] edi
pop edi
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x18 ] edi
sub_100132c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d9a1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x2c ]
mov edx [ eax + 0x4 ]
lea ecx [ esi + 0x2c ]
call edx
mov edi eax
mov eax [ esi + 0x2c ]
mov edx [ eax + 0x10 ]
lea ecx [ esi + 0x2c ]
call edx
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x2c ]
mov edx [ eax + 0x18 ]
lea ecx [ esi + 0x2c ]
call edx
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x2c ]
mov edx [ eax + 0x18 ]
lea ecx [ esi + 0x2c ]
call edx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov ecx [ ebp - 0x18 ]
push eax
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
push eax
call sub_1002e28b
mov ecx [ esi + 0xc ]
add esp 0x8
test eax eax
jne r-xdata
mov edx [ ecx ]
mov edx [ ebp - 0x10 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
push edx
push edi
call eax
mov ecx [ esi + 0xc ]
mov [ esi + 0x28 ] eax
mov edx [ ecx ]
test eax eax
je r-xdata
mov ecx [ esi + 0x28 ]
mov eax [ ecx ]
mov edx [ eax + 0x4c ]
push 0x2
call edx
mov edi eax
test edi edi
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
mov edx [ edx + 0x8 ]
push eax
push edi
call edx
mov [ esi + 0x28 ] eax
test eax eax
jne r-xdata
push eax
mov eax [ edx + 0x10 ]
call eax
mov edi eax
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
test eax eax
je r-xdata
mov ecx [ esi + 0x28 ]
mov eax [ ecx ]
mov edx [ eax + 0x48 ]
push 0x1
call edx
test al al
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x10 ]
mov ecx edi
call edx
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0x20 ]
call edx
mov edi eax
test edi edi
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x10 ]
mov ecx edi
call edx
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1002eb41
mov [ ebp - 0x10 ] eax
mov eax [ edi ]
mov edx [ eax + 0x10 ]
add esp 0x4
mov ecx edi
call edx
inc eax
push eax
mov eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_10032e00
mov eax [ edi ]
mov edx [ eax + 0x10 ]
add esp 0xc
mov ecx edi
mov [ ebp - 0x18 ] eax
call edx
mov edx [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ edx + 0x14 ]
mov ecx edi
call eax
mov edx [ ebp - 0x10 ]
mov eax edx
lea ecx [ eax + 0x2 ]
mov [ ebp - 0x18 ] ecx
lea esp [ esp ]
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
test eax eax
jne r-xdata
mov ecx [ esi + 0x18 ]
mov edx [ ecx ]
mov edx [ edx + 0x14 ]
push eax
mov eax [ esi + 0x28 ]
push eax
call edx
mov eax [ esi + 0x4 ]
mov edx [ esi + 0x2c ]
mov edi [ eax ]
mov eax [ edx + 0xc ]
lea ecx [ esi + 0x2c ]
call eax
mov ecx [ esi + 0x4 ]
mov edx [ edi + 0x4 ]
push eax
call edx
xor edi edi
mov [ esi + 0x24 ] eax
cmp eax edi
je r-xdata
push edi
call sub_10026120
mov [ ebp - 0x18 ] eax
mov eax [ edi ]
mov edx [ eax ]
add esp 0x4
push 0x1
mov ecx edi
call edx
mov eax [ ebp - 0x18 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp - 0x18 ]
push edx
sar eax 0x1
je r-xdata
push 0x8
call sub_1002e957
add esp 0x4
cmp eax edi
je r-xdata
call sub_1002ee65
mov eax [ edi ]
mov edx [ eax ]
add esp 0x4
push 0x1
mov ecx edi
call edx
call sub_10013650
mov edx [ ebp - 0x10 ]
push edx
call sub_1002ee65
mov eax [ edi ]
mov edx [ eax ]
add esp 0x8
push 0x1
mov ecx edi
call edx
jmp r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
jmp r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x4 ] esi
mov [ eax + 0x18 ] edi
mov [ eax + 0x1c ] edi
mov [ eax + 0x20 ] edi
jmp r-xdata
mov ecx [ esi + 0x24 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0xc ]
call eax
push 0x24
call sub_1002e957
add esp 0x4
cmp eax edi
je r-xdata
xor eax eax
push eax
mov ecx esi
call sub_10016630
jmp r-xdata
mov ecx [ esi + 0x24 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0xc ]
call eax
push 0x28
call sub_1002e957
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
push esi
push eax
call sub_1001fa90
jmp r-xdata
or ebx 0xffffffff
mov [ ebp - 0x4 ] ebx
mov ecx [ esi + 0x24 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0xc ]
call eax
push 0x40
call sub_1002e957
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax edi
je r-xdata
xor eax eax
push esi
push eax
call sub_10016e50
jmp r-xdata
mov [ ebp - 0x4 ] ebx
mov ecx [ esi + 0x24 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0xc ]
call eax
push 0x10
call sub_1002e957
add esp 0x4
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax edi
je r-xdata
call sub_10013220
mov esi [ esi + 0x1c ]
cmp esi edi
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
mov [ ebp - 0x4 ] ebx
mov ecx [ esi + 0x24 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0xc ]
call eax
mov ecx [ esi + 0x24 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov ecx [ esi + 0x1c ]
cmp ecx edi
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
sub_10013650
push ebp
mov ebp esp
push esi
push edi
mov eax 0x2d
call sub_1002bff0
mov edi eax
mov eax [ ebp + 0x8 ]
push eax
call [ LoadLibraryW@IAT ]
mov esi eax
push edi
push esi
call [ GetProcAddress@IAT ]
push 0x0
push esi
push esi
call eax
pop edi
pop esi
pop ebp
retn
sub_10013680
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b58b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
call sub_10013220
lea ecx [ esi + 0x2c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10013df0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x1c ] 0x0
sub_100136f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b58b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
call sub_10013220
lea ecx [ esi + 0x2c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10013df0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x1c ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10013780
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b55e
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x24
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
mov edx [ eax + 0x40 ]
mov ecx edi
call edx
mov ecx eax
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] 0x1
lea eax [ esi + 0xc ]
mov [ eax ] r--data
mov [ esi ] r--data
mov [ eax ] r--data
mov cx [ ecx ]
mov [ esi + 0x10 ] cx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x18 ] ebx
mov [ esi + 0x20 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10013830
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b521
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi [ eax + 0x28 ]
push 0x24
mov [ ebp - 0x10 ] edi
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x10
call sub_1002e957
mov ebx eax
add esp 0x4
mov [ ebp - 0x18 ] ebx
test ebx ebx
je r-xdata
xor ebx ebx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x18 ]
mov [ ebp - 0x4 ] 0x2
mov [ ebx ] r--data
mov [ ebx + 0x4 ] ecx
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov edi eax
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov [ ebx + 0x8 ] eax
mov edx [ edi ]
mov eax [ edx + 0x58 ]
mov ecx edi
call eax
mov [ ebx + 0xc ] eax
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
mov edi [ ebp - 0x10 ]
jmp r-xdata
lea eax [ esi + 0xc ]
mov eax [ ebx ]
mov edx [ eax + 0x4 ]
mov ecx ebx
call edx
mov [ esi + 0x18 ] eax
mov [ ebp - 0x4 ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x40 ]
mov ecx edi
call eax
xor ecx ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] r--data
mov [ ebp - 0x4 ] 0x4
mov [ esi ] r--data
mov [ esi + 0xc ] r--data
mov dx [ eax ]
mov [ esi + 0x10 ] dx
mov [ esi + 0x1c ] ecx
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] ecx
mov [ esi + 0x20 ] ebx
cmp ebx ecx
je r-xdata
sub_10013940
push ebp
mov ebp esp
push esi
push 0x3c
call sub_1002e957
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
xor esi esi
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov [ eax ] r--data
mov edx 0x1
mov [ eax + 0x8 ] edx
mov [ eax + 0x18 ] r--data
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x28 ] ecx
mov [ eax + 0x24 ] edx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x34 ] ecx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x38 ] ecx
mov esi eax
jmp r-xdata
mov eax [ edi + 0x18 ]
push eax
mov eax [ edi + 0x8 ]
call sub_10011cf0
neg eax
sbb eax eax
and eax esi
pop esi
pop ebp
retn 0x4
sub_100139b0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] edx
mov edx [ ebp + 0x10 ]
push edi
mov [ esi + 0x14 ] eax
xor edi edi
mov [ esi ] r--data
mov [ esi + 0x10 ] edx
mov [ esi + 0x18 ] ecx
mov [ esi + 0x1c ] edi
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov ecx [ esi + 0x8 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] r--data
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] 0x7
xor edx edx
mov [ esi + 0x30 ] dx
mov [ esi + 0x5c ] edi
mov [ esi + 0x60 ] 0x7
mov [ esi + 0x4c ] dx
mov [ esi + 0x78 ] edi
mov [ esi + 0x7c ] 0x7
mov [ esi + 0x68 ] dx
mov [ esi + 0x88 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ esi + 0x90 ] eax
mov [ esi + 0x84 ] ebx
mov [ esi + 0x8c ] ecx
mov [ esi + 0x94 ] ebx
mov [ esi + 0x98 ] 0xffffffff
mov eax esi
pop edi
pop ebp
retn 0x14
sub_10013a60
push ebp
mov ebp esp
push 0xc
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x4
sub_10013aa0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d958
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
xor esi esi
cmp [ ebx + 0x30 ] esi
jne r-xdata
mov esi 0x8
mov ecx [ ebx + 0x5c ]
mov eax [ ecx ]
mov edx [ eax + 0x20 ]
call edx
xor ecx ecx
mov [ ebp - 0x3c ] r--data
mov [ ebp - 0x24 ] 0x7
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x38 ] cx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] esi
lea esi [ ebp - 0x58 ]
call sub_10025ec0
mov edi eax
lea esi [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x1
call sub_10013f90
mov esi 0x8
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x44 ] esi
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov eax [ eax ]
xor eax eax
mov [ ebp - 0x58 ] ax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] 0x7
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x1c ] 0x1
cmp [ ebp - 0x24 ] esi
jae r-xdata
mov edx [ ebp - 0x58 ]
push edx
call sub_1002e8fb
add esp 0x4
lea ecx [ ebp - 0x74 ]
push ecx
push ebx
call sub_10013c50
lea esi [ ebx + 0x20 ]
mov edi eax
mov [ ebp - 0x4 ] 0x2
call sub_10013f90
mov esi 0x8
cmp [ ebp - 0x60 ] esi
jb r-xdata
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x3c ] r--data
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
mov edx [ ebp - 0x74 ]
push edx
call sub_1002e8fb
add esp 0x4
cmp [ ebp - 0x24 ] esi
jb r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ ebp - 0x14 ] 0x0
cmp [ ebx + 0x34 ] esi
lea eax [ ebx + 0x20 ]
jb r-xdata
mov eax [ ebp - 0x38 ]
push eax
call sub_1002e8fb
add esp 0x4
jmp r-xdata
sub_10013bf0
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
jne r-xdata
cmp [ esi + 0x18 ] 0x8
lea eax [ esi + 0x4 ]
pop esi
jb r-xdata
mov ecx [ esi + 0x60 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push edi
call edx
mov ecx eax
lea edi [ ecx + 0x2 ]
lea esp [ esp ]
retn
mov eax [ eax ]
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx edi
sar ecx 0x1
push ecx
lea ecx [ esi + 0x4 ]
call sub_1000bc70
mov eax [ esi + 0x60 ]
mov edi [ eax ]
mov ecx eax
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
mov ecx [ esi + 0x60 ]
mov edx [ edi + 0x38 ]
push eax
call edx
pop edi
sub_10013c50
push ebp
mov ebp esp
push ecx
push ebx
push esi
xor edx edx
push edi
mov esi eax
mov [ ebp - 0x4 ] edx
xor edi edi
lea ebx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax ebx
sar eax 0x1
je r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx + 0x5c ]
mov esi [ ecx ]
mov ecx [ ebx + 0x64 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov ecx [ ebx + 0x5c ]
mov edx [ esi + 0x24 ]
add eax edi
push eax
call edx
mov edi eax
mov eax [ edi ]
mov edx [ eax + 0x4 ]
mov ecx edi
call edx
mov esi eax
and esi 0x3
add esi 0x5
xor ecx ecx
lea eax [ esi + 0x1 ]
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1002eb41
lea ecx [ esi + esi + 0x2 ]
push ecx
push 0x0
push eax
mov [ ebp + 0x8 ] eax
call sub_10032e00
add esp 0x10
xor ebx ebx
test esi esi
je r-xdata
movzx eax [ esi + edx * 2 ]
add edi eax
mov eax esi
inc edx
lea ebx [ eax + 0x2 ]
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov eax edi
lea edx [ eax + 0x2 ]
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
mov ecx eax
mov eax 0x4ec4ec4f
mul ecx
shr edx 0x3
imul edx edx 0x1a
sub ecx edx
mov edx [ ebp + 0x8 ]
add ecx 0x61
mov [ edx + ebx * 2 ] cx
inc ebx
cmp ebx esi
jb r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax ebx
sar eax 0x1
cmp edx eax
jb r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax edi
mov ecx esi
call sub_1000bc70
push edi
call sub_1002ee65
add esp 0x4
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_10013d80
push esi
push edi
push 0x4da
mov esi ecx
call sub_1002eb41
push 0x4da
mov edi eax
push 0x0
push edi
call sub_10032e00
mov eax [ esi ]
mov edx [ eax + 0xc ]
add esp 0x10
push edi
push 0x0
mov ecx esi
call edx
push eax
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
push eax
call [ GetTempFileNameW@IAT ]
test eax eax
jne r-xdata
mov eax edi
pop edi
pop esi
retn
push edi
call sub_1002ee65
add esp 0x4
pop edi
xor eax eax
pop esi
retn
sub_10013df0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b4d1
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
mov ecx [ esi + 0x5c ]
xor edi edi
cmp ecx edi
je r-xdata
mov ecx [ esi + 0x60 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x5c ] edi
cmp [ esi + 0x50 ] 0x8
jb r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x60 ] edi
xor ecx ecx
mov [ esi + 0x50 ] 0x7
mov [ esi + 0x4c ] edi
mov [ esi + 0x3c ] cx
cmp [ esi + 0x34 ] 0x8
jb r-xdata
mov eax [ esi + 0x3c ]
push eax
call sub_1002e8fb
add esp 0x4
xor eax eax
mov [ esi + 0x34 ] 0x7
mov [ esi + 0x30 ] edi
mov [ esi + 0x20 ] ax
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov edx [ esi + 0x20 ]
push edx
call sub_1002e8fb
add esp 0x4
xor edx edx
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] edi
mov [ esi + 0x4 ] dx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x4 ]
push ecx
call sub_1002e8fb
add esp 0x4
sub_10013ed0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10013df0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10013f00
push ebp
mov ebp esp
sub esp 0xbc8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x8
lea eax [ esi + 0x3c ]
pop esi
jb r-xdata
push edi
mov eax 0x2
call sub_1002c070
mov edi eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov ecx esi
call edx
push eax
lea eax [ ebp - 0xbc8 ]
push edi
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0xbc8 ]
lea edx [ eax + 0x2 ]
pop edi
mov edi edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov eax [ eax ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ esi + 0x3c ]
lea eax [ ebp - 0xbc8 ]
call sub_1000bc70
sub_10013f90
cmp esi edi
je r-xdata
mov eax esi
retn
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
cmp [ edi + 0x14 ] 0x8
jae r-xdata
mov eax [ esi ]
push eax
call sub_1002e8fb
add esp 0x4
mov ecx [ edi ]
mov [ esi ] ecx
mov [ edi ] 0x0
mov edx [ edi + 0x10 ]
lea eax [ edx + edx + 0x2 ]
push eax
push edi
push esi
call sub_1002e460
add esp 0xc
jmp r-xdata
mov edx [ edi + 0x10 ]
mov [ esi + 0x10 ] edx
mov eax [ edi + 0x14 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x10 ] 0x0
mov [ edi + 0x14 ] 0x0
sub_10014000
push ebp
mov ebp esp
push 0xffffffff
push sub_1003bbf6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ecx + 0x18 ]
mov ecx [ ebx + 0x20 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
mov esi [ edi ]
call eax
mov edx [ esi + 0xc ]
push eax
mov ecx edi
call edx
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov esi eax
xor edi edi
cmp esi edi
je r-xdata
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebx + 0x20 ]
mov edx [ ecx ]
mov eax [ edx + 0x14 ]
call eax
test eax eax
je r-xdata
mov ecx [ ebx + 0x20 ]
cmp ecx edi
je r-xdata
mov esi [ ebx + 0x18 ]
test esi esi
je r-xdata
mov ecx [ ebx + 0x20 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
test eax eax
je r-xdata
mov ecx [ ebx + 0x20 ]
mov edx [ ecx ]
mov eax [ edx + 0x24 ]
call eax
mov ecx [ ebx + 0x4 ]
mov esi [ ecx + 0x10 ]
sub esp 0x10
mov edx esp
mov [ ebp - 0x18 ] esp
lea ecx [ ebx + 0x8 ]
push edx
mov edi eax
call sub_100145a0
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push edi
mov ecx esi
call edx
mov edi eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x28 ]
mov edx [ ecx ]
mov eax [ edx + 0x4c ]
push 0x0
mov [ ebp - 0x10 ] edi
call eax
mov esi eax
test esi esi
je r-xdata
mov [ ebx + 0x20 ] esi
cmp [ ebx + 0x18 ] edi
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov ebx [ ebx + 0x1c ]
test ebx ebx
je r-xdata
call sub_100106f0
mov ecx [ ebx + 0x20 ]
mov edx [ ecx ]
mov eax [ edx + 0x28 ]
call eax
mov edi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x2c ]
mov esi [ eax + 0x10 ]
lea ecx [ eax + 0x2c ]
mov eax [ edx + 0x4 ]
call eax
mov edx [ esi ]
push eax
mov eax [ edx + 0x8 ]
push edi
mov ecx esi
call eax
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x28 ]
mov edx [ ecx ]
mov edi eax
mov eax [ edx + 0x4c ]
push 0x1
mov [ ebp - 0x18 ] edi
call eax
mov esi eax
test esi esi
je r-xdata
push 0x34
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x1c ] esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp esi edi
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0xc ]
push esi
mov ecx edi
call eax
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
cmp [ ebx + 0x1c ] edi
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x14 ]
mov ecx esi
call eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
call sub_100106f0
push 0x34
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0x1
test esi esi
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0xc ]
push esi
mov ecx edi
call eax
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
xor esi esi
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x14 ]
mov edx [ eax + 0x8 ]
push eax
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] edx
call sub_10013830
mov edi [ ebx + 0x4 ]
push eax
call sub_10013940
mov edx [ ebp - 0x10 ]
xor ecx ecx
mov [ esi + 0x10 ] edx
mov edx [ ebp - 0x18 ]
mov [ esi + 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ esi ] r--data
mov [ esi + 0xc ] ecx
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] ecx
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
mov [ esi + 0x20 ] ecx
mov [ esi + 0x28 ] ecx
mov [ esi + 0x24 ] ecx
mov [ esi + 0x2c ] ecx
mov [ esi + 0x30 ] ecx
xor edi edi
jmp r-xdata
mov eax [ ebx + 0x18 ]
cmp eax edi
je r-xdata
mov ecx [ ebx + 0x20 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
test eax eax
jne r-xdata
mov ecx [ ebx + 0x18 ]
cmp ecx edi
je r-xdata
xor esi esi
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x14 ]
mov edx [ eax + 0x8 ]
push eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] edx
call sub_10013830
mov edi [ ebx + 0x4 ]
push eax
call sub_10013940
mov edx [ ebp - 0x18 ]
xor ecx ecx
mov [ esi + 0x10 ] edx
mov edx [ ebp - 0x10 ]
mov [ esi + 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ esi ] r--data
mov [ esi + 0xc ] ecx
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] ecx
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
mov [ esi + 0x20 ] ecx
mov [ esi + 0x28 ] ecx
mov [ esi + 0x24 ] ecx
mov [ esi + 0x2c ] ecx
mov [ esi + 0x30 ] ecx
jmp r-xdata
xor esi esi
mov [ esi ] r--data
mov [ esi + 0xc ] 0xed
call [ GetTickCount@IAT ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push 0x10
mov [ ebx + 0x18 ] esi
call sub_1002e957
mov esi eax
add esp 0x4
cmp esi edi
je r-xdata
mov eax [ ebx + 0x1c ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x20 ]
mov edi [ eax + 0x10 ]
mov edx [ ecx ]
mov eax [ edx + 0x24 ]
mov esi [ edi ]
call eax
mov edx [ esi + 0x4 ]
push eax
mov ecx edi
call edx
mov ecx [ ebx + 0x1c ]
cmp ecx edi
je r-xdata
mov [ ebx + 0x18 ] edi
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
xor esi esi
mov [ esi ] r--data
mov [ esi + 0xc ] 0xcc
call [ GetTickCount@IAT ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push 0x10
mov [ ebx + 0x1c ] esi
call sub_1002e957
mov esi eax
add esp 0x4
test esi esi
je r-xdata
xor esi esi
mov [ esi ] r--data
mov [ esi + 0xc ] 0x2c
call [ GetTickCount@IAT ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
jmp r-xdata
mov eax [ ebx + 0x18 ]
push 0x10
mov [ eax + 0x24 ] esi
call sub_1002e957
mov esi eax
add esp 0x4
cmp esi edi
je r-xdata
mov edi [ eax + 0x10 ]
mov ecx [ ebx + 0x20 ]
mov eax [ ecx ]
mov edx [ eax + 0x28 ]
mov esi [ edi ]
call edx
push eax
mov eax [ esi + 0x4 ]
mov ecx edi
call eax
mov [ ebx + 0x1c ] edi
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
xor eax eax
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x28 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
jmp r-xdata
mov eax [ ebx + 0x1c ]
push 0xc
mov [ eax + 0x24 ] esi
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor esi esi
mov [ esi ] r--data
mov [ esi + 0xc ] 0x359
call [ GetTickCount@IAT ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
jmp r-xdata
mov eax [ ebx + 0x18 ]
push 0x10
mov [ eax + 0x2c ] esi
call sub_1002e957
mov esi eax
add esp 0x4
cmp esi edi
je r-xdata
mov edx [ ebx + 0x1c ]
mov [ edx + 0x30 ] eax
xor eax eax
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + 0x28 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
jmp r-xdata
mov eax [ ebx + 0x18 ]
push 0xc
mov [ eax + 0x28 ] esi
call sub_1002e957
add esp 0x4
cmp eax edi
je r-xdata
mov ecx [ ebx + 0x18 ]
mov [ ecx + 0x30 ] eax
sub_10014460
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
push esi
lea esi [ ecx + 0x8 ]
lea ecx [ ebp + 0x8 ]
cmp ecx eax
jae r-xdata
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
lea edx [ ebp + 0x8 ]
cmp ecx edx
ja r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax esi
call sub_100146a0
push edi
mov edi edx
sub edi ecx
sar edi 0x1
cmp eax [ esi + 0x8 ]
jne r-xdata
add [ esi + 0x4 ] 0x2
pop esi
pop ebp
retn 0x4
mov cx [ ebp + 0x8 ]
mov [ eax ] cx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax esi
call sub_100146a0
add [ esi + 0x4 ] 0x2
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ esi ]
mov dx [ ecx + edi * 2 ]
mov [ eax ] dx
sub_100144d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a733
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x18 ]
xor edi edi
cmp ecx edi
je r-xdata
mov ecx [ esi + 0x1c ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x18 ] edi
mov ecx [ esi + 0x20 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x1c ] edi
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x20 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
call sub_1002e8fb
add esp 0x4
sub_10014570
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100144d0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_100145a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003abe0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov edi [ ebx + 0x4 ]
sub edi [ ebx ]
mov [ esi ] eax
sar edi 0x1
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp edi 0x7fffffff
jbe r-xdata
mov ecx edi
call sub_1000bfc0
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
lea ecx [ eax + edi * 2 ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] ecx
mov ecx [ ebx + 0x4 ]
mov ebx [ ebx ]
push edx
push ecx
push ebx
call sub_10014760
add esp 0xc
mov [ esi + 0x4 ] eax
push r--data
call sub_1003621d
sub_10014660
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi eax
jne r-xdata
cmp edi 0x7fffffff
jbe r-xdata
xor al al
retn
mov ecx edi
call sub_1000bfc0
mov [ esi ] eax
mov [ esi + 0x4 ] eax
lea eax [ eax + edi * 2 ]
mov [ esi + 0x8 ] eax
mov al 0x1
retn
push r--data
call sub_1003621d
sub_100146a0
push esi
mov esi eax
mov edx [ esi ]
mov eax [ esi + 0x4 ]
sub eax edx
sar eax 0x1
cmp eax 0x7ffffffe
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
inc eax
sar ecx 0x1
cmp eax ecx
jbe r-xdata
push r--data
call sub_1003621d
pop esi
retn
push edi
mov edx ecx
shr edx 0x1
mov edi 0x7fffffff
sub edi edx
cmp edi ecx
pop edi
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
call sub_100146f0
mov ecx eax
cmp ecx eax
jae r-xdata
sub_100146f0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x7fffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x1
cmp eax ecx
jae r-xdata
push r--data
call sub_1003621d
pop ebp
retn 0x4
push ebx
push edi
call sub_1000bfc0
mov ecx [ esi + 0x4 ]
mov ebx eax
mov eax [ esi ]
sub ecx eax
sar ecx 0x1
add ecx ecx
push ecx
push eax
push ebx
call sub_1002e460
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
add esp 0xc
sar edi 0x1
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ebx + edi * 2 ]
lea eax [ ebx + edx * 2 ]
pop edi
mov [ esi ] ebx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ecx
pop ebx
push eax
call sub_1002e8fb
add esp 0x4
sub_10014760
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
cmp ecx edx
je r-xdata
pop ebp
retn
push esi
mov edi edi
add ecx 0x2
add eax 0x2
mov [ ebp + 0x8 ] ecx
cmp ecx edx
jne r-xdata
mov si [ ecx ]
mov [ eax ] si
test eax eax
je r-xdata
pop esi
sub_10014790
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003b488
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jbe r-xdata
xor eax eax
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ecx + 0x1 ]
mov [ esp + 0x28 ] edx
dec eax
mov edx 0x1
mov [ esp + 0x24 ] r--data
mov [ esp + 0x2c ] eax
mov [ esp + 0x38 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x30 ] edx
mov [ esp + 0x48 ] ebx
mov cl [ ecx ]
cmp cl 0x2
jne r-xdata
cmp cl bl
jne r-xdata
lea ecx [ esp + 0x24 ]
cmp eax 0x4
jbe r-xdata
lea ecx [ esp + 0x24 ]
cmp eax 0x4
jbe r-xdata
call sub_1000a130
add eax 0xfffffffc
mov [ esp + 0xc ] ebx
mov [ esp + 0x10 ] r--data
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] 0x4
mov [ esp + 0x1c ] eax
push ebx
mov [ esp + 0x4c ] dl
push 0x4
lea edx [ esp + 0x14 ]
push edx
call sub_1000a080
mov ecx [ esp + 0xc ]
lea eax [ esp + 0x10 ]
push eax
push ecx
call sub_10018b30
add esp 0x8
lea ecx [ esp + 0x24 ]
mov esi eax
mov [ esp + 0x10 ] r--data
call sub_1000a130
mov eax esi
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ esp + 0x24 ]
add eax 0xfffffffc
mov [ esp + 0xc ] ebx
mov [ esp + 0x10 ] r--data
mov [ esp + 0x14 ] edx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] 0x4
mov [ esp + 0x1c ] eax
push ebx
push 0x4
lea eax [ esp + 0x14 ]
push eax
mov ecx edx
mov [ esp + 0x54 ] 0x2
call sub_1000a080
lea ecx [ esp + 0x10 ]
call sub_1000aac0
push ebx
lea ecx [ esp + 0x14 ]
push ecx
mov ebx eax
call sub_10019330
mov esi eax
add esp 0x8
lea ecx [ esp + 0x24 ]
test esi esi
jne r-xdata
mov edx [ esp + 0xc ]
mov [ esi + 0x20 ] edx
mov [ esp + 0x10 ] r--data
call sub_1000a130
mov eax esi
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ esp + 0x10 ] r--data
jmp r-xdata
sub_10014930
push ebp
mov ebp esp
push 0xffffffff
push sub_1003abb8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ eax + 0x1 ]
dec ecx
mov [ ebp - 0x34 ] r--data
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x4 ] edi
mov bl [ eax ]
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
cmp bl al
jne r-xdata
lea ecx [ ebp - 0x34 ]
cmp bl 0x2
jne r-xdata
test bl bl
jne r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x34 ]
cmp [ ebp - 0x2c ] ebx
jb r-xdata
cmp [ ebp - 0x2c ] 0x1
lea ecx [ ebp - 0x34 ]
jb r-xdata
call sub_1000a130
push edi
push ebx
lea eax [ ebp - 0x11 ]
push eax
mov [ ebp - 0x11 ] 0x0
call sub_1000a080
cmp eax ebx
jne r-xdata
push edi
push 0x1
lea eax [ ebp - 0x11 ]
push eax
mov [ ebp - 0x11 ] bl
call sub_1000a080
cmp eax 0x1
jne r-xdata
mov al [ ebp - 0x11 ]
cmp al bl
jne r-xdata
mov al [ ebp - 0x11 ]
xor cl cl
cmp cl al
sbb edx edx
neg edx
mov [ esi + 0x4 ] edx
test al al
je r-xdata
cmp al 0x2
jne r-xdata
push ebx
push 0x4
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x34 ]
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x18 ] edi
call sub_1000a080
cmp eax 0x4
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1000a130
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x4
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edi
call sub_1000a080
cmp eax 0x4
jne r-xdata
mov [ esi + 0x4 ] edi
jmp r-xdata
mov [ esi + 0xc ] ebx
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov [ esi + 0x8 ] edx
push 0x5
push eax
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x1c ] edi
call sub_1000a080
cmp eax 0x4
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1000a130
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
mov [ esi + 0x24 ] edx
mov [ esi + 0x28 ] eax
sub_10014ad0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov [ ebp - 0x2 ] al
mov eax [ edi ]
mov edx [ eax + 0xc ]
push 0x1
lea ecx [ ebp - 0x2 ]
push ecx
mov ecx edi
call edx
cmp eax 0x1
jne r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
cmp eax 0x2
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
test eax eax
jne r-xdata
cmp [ esi + 0xc ] 0x0
mov [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov ecx esi
call edx
test eax eax
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov ecx esi
call edx
test eax eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax [ edi ]
mov edx [ eax + 0xc ]
push 0x1
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx edi
call edx
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x1 ] 0x1
mov eax [ edi ]
mov edx [ eax + 0xc ]
push 0x1
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx edi
call edx
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x1 ] 0x1
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov ecx esi
call edx
test eax eax
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov ecx esi
call edx
test eax eax
je r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x24 ]
mov edx [ edi ]
mov edx [ edx + 0xc ]
mov [ ebp - 0x8 ] eax
push 0x4
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
call edx
cmp eax 0x4
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
mov eax [ esi + 0x28 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
jmp r-xdata
mov edx [ edi ]
mov edx [ edx + 0xc ]
push 0x4
push eax
mov ecx edi
call edx
cmp eax 0x4
jne r-xdata
sub_10014be0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ edi ]
mov edx [ eax + 0x4 ]
mov ecx edi
call edx
mov [ ebp - 0x1 ] al
mov eax [ esi ]
mov edx [ eax + 0xc ]
push 0x1
lea ecx [ ebp - 0x1 ]
push ecx
mov ecx esi
call edx
cmp eax 0x1
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
push ebx
mov ecx edi
call edx
cmp eax 0x2
jne r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
mov eax [ edi ]
mov edx [ eax + 0x4 ]
mov ecx edi
call edx
test eax eax
jne r-xdata
mov eax [ edi + 0x28 ]
mov edx [ esi ]
mov edx [ edx + 0xc ]
mov [ ebp - 0x8 ] eax
push 0x4
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call edx
cmp eax 0x4
jne r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x20 ]
mov edx [ esi ]
mov edx [ edx + 0xc ]
mov [ ebp - 0x8 ] eax
push 0x4
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call edx
cmp eax 0x4
jne r-xdata
push edi
call sub_10018bb0
mov ebx eax
mov eax [ ebx ]
mov edx [ eax + 0x10 ]
mov ecx ebx
call edx
push esi
call sub_1000adc0
add esp 0x4
test eax eax
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
jne r-xdata
push edi
call sub_10019290
mov ebx eax
mov eax [ ebx ]
mov edx [ eax + 0x10 ]
mov ecx ebx
call edx
push esi
call sub_1000adc0
add esp 0x4
test eax eax
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
je r-xdata
call edx
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
call edx
sub_10014cc0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003ab93
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea edi [ esi + 0x8 ]
lea ebx [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
mov ecx edi
mov [ ebp - 0x18 ] edi
call sub_10015590
mov ebx [ ebp - 0x10 ]
cmp ebx [ esi + 0xc ]
je r-xdata
push 0x10
call sub_1002e957
mov edi eax
add esp 0x4
mov [ ebp - 0x10 ] edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp edi ebx
je r-xdata
mov ecx [ ebx + 0x10 ]
test ecx ecx
je r-xdata
xor edi edi
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x4 ] 0x1
push 0x1c
mov [ edi ] r--data
mov [ edi + 0x8 ] eax
call sub_1002e957
add esp 0x4
cmp eax ebx
je r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
push edi
call sub_100152e0
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
xor eax eax
mov [ edi + 0xc ] eax
mov [ edi + 0x4 ] ebx
jmp r-xdata
mov [ eax ] r--data
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
xor ecx ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] ecx
mov [ edi + 0xc ] eax
mov [ edi + 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0xc ]
mov esi [ ebp - 0x18 ]
mov [ ebp - 0x10 ] edi
lea edi [ ebp - 0x14 ]
mov [ ebp - 0x14 ] ecx
call sub_10015b60
push eax
push esi
lea esi [ ebp - 0x1c ]
call sub_10015810
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_10014dd0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
lea edi [ esi + 0x8 ]
lea ebx [ ebp + 0xc ]
lea eax [ ebp - 0x4 ]
mov ecx edi
call sub_10015590
mov ebx [ ebp - 0x4 ]
cmp ebx [ esi + 0xc ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebx + 0x10 ]
test ecx ecx
je r-xdata
push ebx
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_100152e0
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
sub_10014e20
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b44d
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
mov [ ebp - 0x4 ] 0x1
mov edi [ ecx + 0xc ]
mov esi [ edi ]
cmp esi edi
je r-xdata
lea esi [ ecx + 0x8 ]
mov ecx [ esi + 0x4 ]
mov ebx [ ecx + 0x4 ]
cmp [ ebx + 0x15 ] 0x0
mov edi ebx
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov edi esi
mov [ eax + 0x8 ] eax
mov [ esi + 0x8 ] 0x0
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x2
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x18 ]
mov eax edi
call sub_10015720
mov eax [ edi + 0x4 ]
push eax
call sub_1002e8fb
mov ecx [ ebp - 0x10 ]
add esp 0x4
mov [ ecx ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea esp [ esp ]
cmp [ esi + 0x15 ] 0x0
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx ]
push 0x1
call eax
mov ecx [ ebp - 0x10 ]
mov edx [ edi + 0x8 ]
push edx
mov ecx esi
call sub_100155f0
mov edi [ edi ]
push ebx
call sub_1002e8fb
add esp 0x4
cmp [ edi + 0x15 ] 0x0
mov ebx edi
je r-xdata
cmp esi edi
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov esi eax
cmp esi [ eax + 0x8 ]
jne r-xdata
mov edi edi
mov esi eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
jmp r-xdata
sub_10014f50
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea ecx [ edi + 0x8 ]
lea ebx [ ebp + 0xc ]
lea eax [ ebp - 0x4 ]
call sub_10015590
mov esi [ ebp - 0x4 ]
cmp esi [ edi + 0xc ]
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov edx [ ecx ]
mov edx [ edx + 0xc ]
push eax
call edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
push eax
call sub_10014790
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0x10 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
test eax eax
je r-xdata
mov ecx [ esi + 0x10 ]
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
mov esi eax
test esi esi
jne r-xdata
mov edi [ ebp + 0xc ]
push edi
mov edx esi
call sub_10015000
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov edx [ ebp + 0xc ]
mov eax [ eax + 0xc ]
push edx
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
push edi
call eax
sub_10015000
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003ab60
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov eax 0x1
mov [ esp + 0x24 ] r--data
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x30 ] eax
mov [ esp + 0x48 ] ebx
lea ecx [ esp + 0x24 ]
mov [ esp + 0x10 ] r--data
mov [ esp + 0x14 ] ecx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x20 ] 0xffffffff
lea edi [ esp + 0x10 ]
mov esi edx
mov [ esp + 0x48 ] al
call sub_10014ad0
test eax eax
jne r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov edx [ edx + 0xc ]
push eax
mov eax [ esp + 0x2c ]
push eax
call edx
mov esi eax
mov [ esp + 0x10 ] r--data
mov [ esp + 0x24 ] r--data
cmp [ esp + 0x34 ] ebx
je r-xdata
mov [ esp + 0x10 ] r--data
mov [ esp + 0x24 ] r--data
cmp [ esp + 0x34 ] ebx
je r-xdata
mov eax esi
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ esp + 0x30 ] ebx
jne r-xdata
xor eax eax
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ esp + 0x30 ] ebx
jne r-xdata
mov eax [ esp + 0x28 ]
cmp eax ebx
je r-xdata
cmp [ esp + 0x38 ] ebx
jne r-xdata
mov eax [ esp + 0x28 ]
cmp eax ebx
je r-xdata
cmp [ esp + 0x38 ] ebx
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
push eax
call sub_1002e8fb
add esp 0x4
sub_10015130
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10014e20
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10015160
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b398
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax edi
call sub_10015720
mov eax [ edi + 0x4 ]
push eax
call sub_1002e8fb
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_100151c0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
mov [ esi ] r--data
test ecx ecx
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x8 ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10015200
push ebp
mov ebp esp
push 0xffffffff
push sub_1003bbc3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x18
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
xor esi esi
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
push 0x18
mov [ esi + 0x10 ] eax
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] 0x0
call sub_1002e39e
push r--data
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x20 ] r--data
call sub_10030edf
mov [ esi + 0xc ] eax
mov [ eax ] eax
mov eax [ esi + 0xc ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0xc ]
mov [ eax + 0x8 ] eax
mov eax [ esi + 0xc ]
mov [ eax + 0x14 ] 0x1
mov ecx [ esi + 0xc ]
mov [ ecx + 0x15 ] 0x1
mov [ esi + 0x4 ] edi
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ ecx ]
mov edx [ edx + 0x4 ]
push eax
push esi
call edx
xor ecx ecx
test eax eax
setne cl
mov [ edi + 0x8 ] eax
mov eax ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_100152e0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x8
cmp [ eax + 0x15 ] 0x0
je r-xdata
push ebx
push esi
mov ebx eax
push edi
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ebx
call sub_100157c0
mov ecx [ ebx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
push r--data
call sub_1003626a
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x8 ] ecx
cmp [ ecx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ebx + 0x14 ]
mov cl [ eax + 0x14 ]
mov [ eax + 0x14 ] dl
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x14 ] cl
mov eax [ ebp - 0x4 ]
mov bl 0x1
cmp [ eax + 0x14 ] bl
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov eax [ edi ]
cmp [ eax + 0x15 ] 0x0
mov ecx edi
jne r-xdata
mov ecx esi
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_1002e8fb
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
mov ecx [ edx + 0x4 ]
cmp edi [ ecx + 0x4 ]
je r-xdata
mov eax edi
call sub_10015700
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax [ edx + 0x4 ]
mov [ eax ] ecx
nop
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0xc
dec eax
mov [ ecx + 0x8 ] eax
mov [ edi + 0x14 ] bl
cmp [ edi + 0x14 ] bl
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_10015690
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_10015630
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
je r-xdata
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_10015690
mov eax [ ecx + 0x8 ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_10015630
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x0
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx + 0x8 ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_10015630
jmp r-xdata
mov eax [ ecx ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_10015690
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
sub_10015540
mov eax [ edi + 0x4 ]
push ebx
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x15 ] 0x0
push esi
mov esi ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov eax [ edi + 0x4 ]
pop esi
mov [ eax + 0x8 ] eax
mov [ edi + 0x8 ] 0x0
pop ebx
retn
mov ecx [ esi + 0x8 ]
push ecx
mov ecx edi
call sub_100155f0
mov esi [ esi ]
push ebx
call sub_1002e8fb
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov ebx esi
je r-xdata
sub_10015590
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
cmp edx ecx
je r-xdata
push edi
mov edi [ ebx ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
mov ecx [ ecx ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebx ]
cmp esi [ edx + 0xc ]
jb r-xdata
mov edx ecx
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
jmp r-xdata
lea ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn
cmp [ ecx + 0xc ] edi
jae r-xdata
pop edi
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_100155f0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x15 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_100155f0
mov esi [ esi ]
push edi
call sub_1002e8fb
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov edi esi
je r-xdata
sub_10015630
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_10015690
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_10015720
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push edi
mov edi eax
mov eax [ edi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
cmp [ ecx + 0x15 ] 0x0
mov edx ecx
jne r-xdata
call sub_10015540
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
push edx
lea edx [ ebp - 0x4 ]
push edx
push edi
call sub_100152e0
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0x8 ] ecx
jmp r-xdata
lea esp [ esp ]
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_100157c0
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ eax ] ecx
mov edx [ eax ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] edx
retn
lea esp [ esp ]
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_10015810
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
push ebx
push edi
mov edi [ edx + 0x4 ]
mov eax [ edi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov cl 0x1
mov [ ebp - 0x8 ] cl
jne r-xdata
mov ebx edi
mov [ ebp - 0x4 ] ebx
test cl cl
je r-xdata
mov ecx [ ebp + 0xc ]
mov ebx [ ecx + 0xc ]
mov eax [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push eax
cmp ecx [ eax + 0xc ]
jae r-xdata
mov eax [ edx + 0x4 ]
cmp edi [ eax ]
jne r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
call sub_1002e8fb
add esp 0x4
pop edi
mov [ esi ] ebx
mov [ esi + 0x4 ] 0x0
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
mov ecx edi
mov ebx edx
call sub_100158e0
mov edx [ eax ]
pop edi
mov [ esi ] edx
mov [ esi + 0x4 ] 0x1
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x4 ]
call sub_10015b00
mov ebx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push ecx
push 0x1
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
mov ebx edx
call sub_100158e0
mov ecx [ eax ]
pop edi
mov [ esi ] ecx
mov [ esi + 0x4 ] 0x1
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ebx [ eax + 0xc ]
mov edi eax
setb cl
mov [ ebp - 0x8 ] cl
test cl cl
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_100158e0
push ebp
mov ebp esp
mov edx [ ebx + 0x8 ]
cmp edx 0x1ffffffe
jb r-xdata
inc edx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] edx
mov [ edi + 0x4 ] ecx
mov edx [ ebx + 0x4 ]
xor al al
cmp ecx edx
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
call sub_1002e8fb
add esp 0x4
push r--data
call sub_1003621d
cmp [ ebp + 0xc ] al
je r-xdata
mov [ edx + 0x4 ] edi
mov ecx [ ebx + 0x4 ]
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
jmp r-xdata
mov [ ecx + 0x8 ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x8 ] edi
mov edx [ edi + 0x4 ]
mov ecx edi
cmp [ edx + 0x14 ] al
jne r-xdata
mov [ edx ] edi
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
mov [ ecx + 0x14 ] 0x1
pop edi
pop ebp
retn 0xc
push esi
mov esi [ esi ]
cmp [ esi + 0x14 ] al
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x14 ] al
jne r-xdata
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x15 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx ]
mov esi [ edx + 0x8 ]
mov [ ecx ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x15 ] al
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x14 ] al
je r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x15 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx + 0x8 ]
mov esi [ edx ]
mov [ ecx + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x15 ] al
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
pop esi
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x10 ]
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] ecx
mov [ ecx + 0x4 ] edx
sub_10015b00
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov [ eax ] ecx
retn
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp edx [ ecx ]
jne r-xdata
mov [ eax ] edx
retn
nop
retn
mov [ eax ] ecx
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_10015b60
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_1002e957
xor edx edx
add esp 0x4
cmp eax edx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
call sub_1002e39e
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_10030edf
int3
mov ecx [ esi + 0x4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
lea ecx [ eax + 0xc ]
mov [ eax + 0x14 ] dx
cmp ecx edx
je r-xdata
mov esp ebp
pop ebp
retn
mov edx [ edi ]
mov [ ecx ] edx
mov edx [ edi + 0x4 ]
mov [ ecx + 0x4 ] edx
sub_10015bd0
push ebp
mov ebp esp
push ecx
add eax 0x2c
push esi
push eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call sub_10013c50
mov eax esi
mov esp ebp
pop ebp
retn 0x4
sub_10015c10
push ebp
mov ebp esp
push 0xffffffff
push sub_1003de38
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov eax [ ebx + 0x8 ]
mov edi [ eax + 0x28 ]
mov edx [ edi ]
mov eax [ edx + 0x64 ]
mov ecx edi
call eax
mov esi eax
mov edx [ esi ]
mov eax [ edx + 0x10 ]
mov ecx esi
call eax
mov edx [ esi ]
mov [ ebp - 0x10 ] eax
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
xor eax eax
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov edx [ ebp + 0x8 ]
lea esi [ ebp - 0x24 ]
mov [ ebp - 0x4 ] eax
call sub_10012c30
mov edx [ edi ]
mov eax [ edx + 0x68 ]
mov ecx edi
call eax
mov ecx [ ebp - 0x10 ]
push ecx
mov esi eax
lea edx [ ebp - 0x24 ]
push edx
mov ecx esi
call sub_10012f00
test esi esi
je r-xdata
lea ecx [ ebx - 0x4 ]
call sub_100161f0
mov esi [ ebp - 0x20 ]
test esi esi
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi [ ebp - 0x1c ]
mov eax esi
call sub_1000ff40
push esi
call sub_1002e8fb
add esp 0x4
sub_10015ce0
push esi
mov esi eax
push 0x1
call sub_10015fa0
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
pop esi
retn
call sub_100180a0
mov eax [ esi + 0x10 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push edi
mov edi [ esi + 0x10 ]
mov ecx [ edi + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
test eax eax
jne r-xdata
call sub_10015d50
pop edi
cmp [ edi + 0x8 ] eax
jne r-xdata
mov ecx [ edi + 0x30 ]
sub ecx [ edi + 0x2c ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp [ edi + 0x3c ] ecx
jb r-xdata
mov edx [ esi + 0xc ]
mov [ edx + 0x98 ] 0x0
sub_10015d50
push ebp
mov ebp esp
push ecx
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov edx [ esi + 0xc ]
mov [ edx + 0x98 ] 0x1
mov esp ebp
pop ebp
retn
push 0x4
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ eax ] r--data
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor edi edi
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov edi eax
jmp r-xdata
mov ecx [ esi + 0xc ]
mov eax [ ecx + 0x2c ]
mov edx [ eax + 0xc ]
add ecx 0x2c
push ebx
push edi
lea edi [ esi + 0x8 ]
call edx
push 0xc
mov ebx eax
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
mov [ esi + 0x18 ] edi
test ebx ebx
je r-xdata
test edi edi
je r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
push ebx
call sub_10015200
test eax eax
jne r-xdata
mov ecx [ esi + 0xc ]
pop edi
mov [ ecx + 0x98 ] 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
call edx
mov eax [ esi + 0xc ]
pop edi
mov [ eax + 0x98 ] 0x1
pop ebx
mov esp ebp
pop ebp
retn
xor edi edi
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
sub_10015e20
push esi
mov esi ecx
call sub_10015ef0
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x40 ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x40 ]
call eax
cmp eax 0x1
jne r-xdata
mov eax esi
call sub_10015ce0
jmp r-xdata
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x40 ]
call eax
cmp eax 0x2
jne r-xdata
mov eax esi
call sub_10016a60
jmp r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
mov eax esi
call sub_10016b50
pop esi
retn
mov ecx [ eax + 0x80 ]
xor edx edx
cmp edx ecx
sbb eax eax
neg eax
cmp [ esi + 0x24 ] eax
je r-xdata
mov edx [ esi + 0x20 ]
mov edx [ edx + 0x80 ]
mov ecx [ esi + 0xc ]
mov ecx [ ecx + 0x28 ]
mov eax [ ecx ]
mov eax [ eax + 0x44 ]
test edx edx
setne dl
movzx edx dl
push edx
push 0x0
call eax
mov ecx [ esi + 0x20 ]
mov edx [ ecx + 0x80 ]
xor eax eax
cmp eax edx
sbb eax eax
neg eax
mov [ esi + 0x24 ] eax
mov esi [ esi + 0x10 ]
test esi esi
je r-xdata
test eax eax
je r-xdata
mov [ esi + 0x18 ] 0x222
sub_10015ef0
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
mov ecx [ esi + 0xc ]
push ebx
mov ebx [ ecx + 0x18 ]
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
push edi
mov edi [ ebx ]
call eax
mov edx [ edi + 0xc ]
push eax
mov ecx ebx
call edx
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov [ esi + 0x1c ] eax
pop edi
pop ebx
retn
mov ecx [ esi + 0x10 ]
xor edi edi
cmp ecx edi
je r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x10 ] edi
mov ecx [ esi + 0x18 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x14 ] edi
mov ecx [ esi + 0x1c ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x18 ] edi
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
pop edi
mov [ esi + 0x1c ] eax
mov ecx esi
pop ebx
jmp sub_100167b0
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x1c ] edi
sub_10015fa0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d912
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x24 ]
push 0x0
call eax
push 0x84
mov [ ebp - 0x10 ] eax
call sub_1002e957
mov ebx eax
add esp 0x4
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x0
test ebx ebx
je r-xdata
xor eax eax
push 0xc
call sub_1002e957
mov edi eax
add esp 0x4
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x4 ] 0x1
test edi edi
je r-xdata
xor ebx ebx
mov [ eax ] r--data
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] 0x0
mov ebx eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov ecx [ esi + 0x1c ]
mov [ edi ] r--data
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov ecx [ ebp - 0x10 ]
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ecx
mov [ ebp - 0x10 ] edi
jmp r-xdata
mov [ ebp - 0x4 ] 0x3
test edi edi
je r-xdata
mov [ ebp - 0x4 ] 0x2
test edi edi
je r-xdata
push 0x20
call sub_1002e957
add esp 0x4
cmp [ ebp + 0x8 ] 0x0
mov edi eax
mov [ ebp + 0x8 ] edi
je r-xdata
xor edi edi
mov [ eax ] r--data
mov edi eax
jmp r-xdata
push 0x4
mov [ ebp - 0x4 ] 0x0
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor edi edi
xor eax eax
call sub_10019bb0
mov [ edi ] r--data
jmp r-xdata
xor eax eax
mov edi eax
jmp r-xdata
mov eax ebx
call sub_10019bb0
mov edi eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
mov [ esi + 0x20 ] eax
call sub_10017ac0
mov edx [ esi + 0xc ]
mov edi [ edx + 0x28 ]
push 0xc
mov [ ebp - 0x10 ] eax
call sub_1002e957
add esp 0x8
test eax eax
je r-xdata
mov edx [ esi + 0x24 ]
mov ecx [ esi + 0x1c ]
mov eax [ ebp - 0x10 ]
push edx
mov edx [ ecx ]
push eax
mov eax [ edx + 0x38 ]
call eax
mov ecx [ esi + 0xc ]
push eax
push ecx
push ebx
mov ecx edi
call sub_1001d440
jmp r-xdata
xor eax eax
mov edx [ ebp - 0x10 ]
lea ecx [ esi + 0x4 ]
push ecx
push edi
call sub_1001e0f0
jmp r-xdata
push 0x70
mov [ ebp - 0x4 ] 0xffffffff
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
push 0x10
call sub_1002e957
mov edi eax
add esp 0x4
mov [ ebp + 0x8 ] edi
xor ebx ebx
mov [ ebp - 0x4 ] 0x4
cmp edi ebx
je r-xdata
mov [ eax + 0x18 ] 0x222
cmp [ esi + 0x24 ] 0x0
mov [ esi + 0x10 ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov edi [ esi + 0x10 ]
mov ecx [ edi + 0x20 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x54 ]
call edx
mov [ edi ] r--data
mov [ edi + 0xc ] eax
call [ GetTickCount@IAT ]
mov [ edi + 0x8 ] ebx
mov [ edi + 0x4 ] eax
mov ebx edi
push 0x30
mov [ edi + 0x20 ] ebx
call sub_1002e957
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
xor eax eax
mov ecx [ esi + 0xc ]
push ecx
push eax
call sub_1000c660
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ esi + 0x10 ]
mov ecx esi
mov [ edx + 0x24 ] eax
call sub_100167b0
sub_100161f0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003ddf4
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xb8 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xd0 ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor ebx ebx
mov [ esp + 0x14 ] esi
cmp [ esi + 0x14 ] ebx
je r-xdata
mov ecx [ esp + 0xd0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xb8 ]
xor ecx esp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0xc ]
mov eax [ ecx + 0x2c ]
mov edx [ eax + 0xc ]
add ecx 0x2c
call edx
xor ecx ecx
mov [ esp + 0x74 ] cx
mov ecx eax
mov [ esp + 0x88 ] 0x7
mov [ esp + 0x84 ] ebx
lea edi [ ecx + 0x2 ]
lea ecx [ ecx ]
mov dx [ ecx ]
add ecx 0x2
cmp dx bx
jne r-xdata
sub ecx edi
sar ecx 0x1
push ecx
lea ecx [ esp + 0x78 ]
call sub_1000bc70
mov [ esp + 0xd8 ] ebx
mov [ esp + 0x18 ] r--data
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0xd8 ] 0x1
mov edx [ esi + 0xc ]
mov ecx [ edx + 0x28 ]
mov eax [ ecx ]
mov edx [ eax + 0x64 ]
call edx
mov esi eax
lea eax [ esp + 0x18 ]
push eax
mov ecx esi
call sub_10013000
cmp esi ebx
je r-xdata
xor edi edi
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] edi
mov [ esp + 0x34 ] ebx
mov [ esp + 0xd8 ] 0x2
mov eax [ esp + 0x1c ]
mov [ esp + 0x10 ] eax
cmp eax [ esp + 0x20 ]
je r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
mov eax [ esp + 0x14 ]
mov esi [ eax + 0x14 ]
lea ecx [ esi + 0x2c ]
lea eax [ esp + 0x2c ]
mov [ esi + 0x8 ] ebx
call sub_1000fd40
mov eax [ esp + 0x2c ]
mov [ esi + 0x3c ] ebx
mov [ esi + 0x40 ] ebx
mov [ esi + 0x44 ] ebx
mov [ esi + 0x48 ] ebx
mov [ esi + 0x4c ] ebx
cmp eax ebx
je r-xdata
lea ecx [ ecx ]
mov eax [ esp + 0x1c ]
cmp eax ebx
je r-xdata
mov esi eax
cmp eax edi
je r-xdata
xor edx edx
mov ecx eax
mov [ esp + 0x50 ] 0x7
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x3c ] dx
lea esi [ ecx + 0x2 ]
mov eax edi
cmp [ esp + 0x88 ] 0x8
jb r-xdata
mov edi [ esp + 0x20 ]
mov esi eax
cmp eax edi
je r-xdata
push eax
call sub_1002e8fb
add esp 0x4
lea ecx [ ecx ]
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
lea ecx [ esp + 0x40 ]
call sub_1000bc70
mov [ esp + 0xd8 ] 0x4
mov eax [ esp + 0x3c ]
mov ebx 0x8
cmp [ esp + 0x50 ] ebx
jae r-xdata
mov eax [ esp + 0x74 ]
push eax
call sub_1002e8fb
add esp 0x4
push eax
call sub_1002e8fb
add esp 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
add esi 0x1c
cmp esi edi
jne r-xdata
mov ecx [ esi ]
push ecx
call sub_1002e8fb
mov eax [ esp + 0x30 ]
add esp 0x4
push eax
mov eax [ esp + 0x18 ]
mov eax [ eax + 0xc ]
lea esi [ esp + 0x5c ]
call sub_10015bd0
mov [ esp + 0xd8 ] 0x5
mov eax [ esp + 0x74 ]
cmp [ esp + 0x88 ] ebx
jae r-xdata
lea eax [ esp + 0x3c ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
add esi 0x1c
cmp esi edi
jne r-xdata
mov edx [ esi ]
push edx
call sub_1002e8fb
mov eax [ esp + 0x20 ]
add esp 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov esi [ esp + 0x68 ]
mov edi [ esp + 0x84 ]
mov edx esi
cmp esi edi
jb r-xdata
lea eax [ esp + 0x74 ]
mov ecx [ esp + 0x58 ]
cmp [ esp + 0x6c ] ebx
jae r-xdata
mov edx edi
test edx edx
je r-xdata
lea ecx [ esp + 0x58 ]
cmp esi edi
jae r-xdata
lea esp [ esp ]
xor eax eax
cmp esi edi
setne al
or eax 0xffffffff
jmp r-xdata
sbb eax eax
and eax 0xfffffffe
inc eax
jne r-xdata
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov ebx 0x8
cmp [ esp + 0x6c ] ebx
jb r-xdata
push 0x1
mov eax r--data
lea ecx [ esp + 0x40 ]
call sub_10016ca0
push ebx
lea edx [ esp + 0x5c ]
push edx
or eax 0xffffffff
lea edi [ esp + 0x44 ]
call sub_10016bf0
cmp [ esp + 0x50 ] 0x8
mov eax [ esp + 0x3c ]
jae r-xdata
xor ebx ebx
cmp eax ebx
sete al
cmp al bl
sete al
cmp al bl
je r-xdata
mov bx [ ecx ]
cmp bx [ eax ]
jne r-xdata
jmp r-xdata
xor edi edi
xor edx edx
mov esi 0x7
mov [ esp + 0x6c ] esi
mov [ esp + 0x68 ] edi
mov [ esp + 0x58 ] dx
cmp [ esp + 0x50 ] ebx
jb r-xdata
mov ecx [ esp + 0x58 ]
push ecx
call sub_1002e8fb
add esp 0x4
mov esi [ esp + 0x4c ]
lea esi [ esi + esi + 0x2 ]
lea ecx [ esp + 0xac ]
mov [ esp + 0xc0 ] 0xf
mov [ esp + 0xbc ] ebx
mov [ esp + 0xac ] bl
call sub_10002640
lea ecx [ esp + 0xac ]
lea ebx [ esp + 0x2c ]
mov [ esp + 0xd8 ] 0x6
call sub_1000fc60
cmp [ esp + 0xc0 ] 0x10
jb r-xdata
mov eax edi
xor ecx ecx
mov [ esp + 0xd8 ] 0x2
cmp [ esp + 0xa4 ] 0x10
mov [ esp + 0x50 ] esi
mov [ esp + 0x4c ] edi
mov [ esp + 0x3c ] cx
jb r-xdata
mov eax [ esp + 0x3c ]
push eax
call sub_1002e8fb
add esp 0x4
mov eax [ esp + 0xac ]
push eax
call sub_1002e8fb
add esp 0x4
mov eax [ esp + 0x10 ]
add eax 0x1c
xor ebx ebx
mov [ esp + 0x10 ] eax
cmp eax [ esp + 0x20 ]
jne r-xdata
mov edx [ esp + 0x90 ]
push edx
call sub_1002e8fb
add esp 0x4
mov ecx [ esp + 0x10 ]
mov [ esp + 0xa0 ] ebx
mov [ esp + 0x90 ] bl
push ecx
or ecx 0xffffffff
xor ebx ebx
lea edi [ esp + 0x94 ]
mov [ esp + 0xa8 ] 0xf
call sub_10002780
mov [ esp + 0xd8 ] 0x3
cmp [ esp + 0xa4 ] 0x10
mov eax [ esp + 0x90 ]
jae r-xdata
mov edi [ esp + 0x30 ]
sub_10016630
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a6fe
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x10 ] eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] ecx
mov ecx [ ecx + 0x28 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x48 ]
call eax
movzx ecx al
mov [ esi + 0x24 ] ecx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_100166c0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100166f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_100166f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a6be
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] r--data
mov [ ebp - 0x4 ] 0x2
mov ecx [ esi + 0x10 ]
xor edi edi
cmp ecx edi
je r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x10 ] edi
mov ecx [ esi + 0x18 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x14 ] edi
mov ecx [ esi + 0x1c ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x18 ] edi
mov [ esi + 0x8 ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x1c ] edi
sub_100167b0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003d140
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x30 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x48 ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
je r-xdata
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x30 ]
xor ecx esp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x50 ] ebx
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
xor edi edi
call edx
test eax eax
je r-xdata
mov esi [ esi + 0x10 ]
lea ecx [ esi + 0x2c ]
lea eax [ esp + 0x14 ]
mov [ esi + 0x8 ] ebx
call sub_1000fd40
mov eax [ esp + 0x14 ]
mov [ esi + 0x3c ] ebx
mov [ esi + 0x40 ] ebx
mov [ esi + 0x44 ] ebx
mov [ esi + 0x48 ] ebx
mov [ esi + 0x4c ] ebx
cmp eax ebx
je r-xdata
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov eax [ eax + 0x20 ]
push edi
lea edx [ esp + 0x28 ]
push edx
call eax
mov ecx eax
lea ebx [ esp + 0x14 ]
mov [ esp + 0x50 ] 0x1
call sub_1000fc60
mov [ esp + 0x50 ] 0x0
cmp [ esp + 0x38 ] 0x10
jb r-xdata
mov edi [ esp + 0x18 ]
mov esi eax
cmp eax edi
je r-xdata
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x1c ]
inc edi
call eax
cmp edi eax
jb r-xdata
mov ecx [ esp + 0x24 ]
push ecx
call sub_1002e8fb
add esp 0x4
push eax
call sub_1002e8fb
add esp 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
xor ebx ebx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
add esi 0x1c
cmp esi edi
jne r-xdata
mov ecx [ esi ]
push ecx
call sub_1002e8fb
mov eax [ esp + 0x18 ]
add esp 0x4
sub_100168e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003df36
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x44
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor esi esi
push 0x4
call sub_1002e957
add esp 0x4
cmp eax ebx
je r-xdata
xor esi esi
mov [ eax + 0x4 ] esi
mov [ eax ] r--data
mov [ eax + 0x8 ] ebx
mov esi eax
jmp r-xdata
xor edi edi
mov [ eax ] r--data
mov edi eax
jmp r-xdata
xor esi esi
mov eax esi
call sub_10019bb0
mov esi eax
jmp r-xdata
push 0x20
call sub_1002e957
mov edi eax
add esp 0x4
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x1
cmp edi ebx
je r-xdata
push esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10017ac0
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov esi [ ecx + 0x28 ]
push 0xc
call sub_1002e957
add esp 0x8
cmp eax ebx
je r-xdata
lea ecx [ esi + 0x8 ]
push ecx
mov [ esi ] r--data
call [ InitializeCriticalSection@IAT ]
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
mov [ esi + 0x3c ] 0x7
mov [ esi + 0x38 ] ebx
xor edx edx
mov [ esi + 0x28 ] dx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] edi
jmp r-xdata
xor eax eax
mov edx [ ebp - 0x10 ]
push esi
call sub_1001e160
jmp r-xdata
push 0x68
mov [ ebp - 0x4 ] 0xffffffff
call sub_1002e957
add esp 0x4
cmp eax ebx
je r-xdata
xor esi esi
mov [ esi ] r--data
mov [ esi + 0xc ] 0xc6
call [ GetTickCount@IAT ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] ebx
jmp r-xdata
mov edi [ ebp + 0x8 ]
push 0x10
mov [ edi + 0x14 ] eax
call sub_1002e957
mov esi eax
add esp 0x4
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ edi + 0x20 ] esi
call sub_100161f0
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov edi [ edi + 0x14 ]
mov ecx [ edi + 0x20 ]
cmp ecx ebx
je r-xdata
sub_10016a60
push ebp
mov ebp esp
and esp 0xfffffff8
push esi
push edi
mov esi eax
push esi
call sub_100168e0
mov ecx [ esi + 0x14 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
call sub_100180a0
mov eax [ esi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov ecx [ esi + 0xc ]
mov [ ecx + 0x98 ] 0x1
call sub_100180a0
mov edx [ esi + 0x10 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edi [ esi + 0x14 ]
mov ecx [ edi + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
test eax eax
jne r-xdata
mov edi [ esi + 0x10 ]
mov ecx [ edi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
test eax eax
jne r-xdata
call sub_10015d50
cmp [ edi + 0x8 ] eax
jne r-xdata
cmp [ edi + 0x8 ] eax
jne r-xdata
mov ecx [ edi + 0x30 ]
sub ecx [ edi + 0x2c ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp [ edi + 0x3c ] ecx
jb r-xdata
mov ecx [ edi + 0x30 ]
sub ecx [ edi + 0x2c ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp [ edi + 0x3c ] eax
jb r-xdata
push 0x1
call sub_10015fa0
mov ecx [ esi + 0xc ]
mov [ ecx + 0x98 ] 0x0
sub_10016b50
push ebp
mov ebp esp
and esp 0xfffffff8
push esi
push edi
mov esi eax
push esi
call sub_100168e0
mov ecx [ esi + 0x14 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
call sub_100180a0
mov eax [ esi + 0x14 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov esi [ esi + 0x14 ]
test esi esi
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov ecx [ esi + 0xc ]
mov [ ecx + 0x98 ] 0x1
call sub_100180a0
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edi [ esi + 0x14 ]
mov ecx [ edi + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
test eax eax
jne r-xdata
cmp [ edi + 0x8 ] eax
jne r-xdata
mov ecx [ edi + 0x30 ]
sub ecx [ edi + 0x2c ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp [ edi + 0x3c ] ecx
jb r-xdata
push 0x0
call sub_10015fa0
sub_10016bf0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax ecx
jae r-xdata
sub eax ecx
cmp eax ebx
jae r-xdata
push r--data
call sub_1003626a
mov eax [ edi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_1003621d
mov eax edi
pop ebx
pop ebp
retn 0x8
push esi
lea esi [ eax + ebx ]
mov eax edi
call sub_1000be00
test al al
je r-xdata
pop esi
mov ecx [ ebp + 0x8 ]
mov eax 0x8
cmp [ ecx + 0x14 ] eax
jb r-xdata
cmp [ edi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax edi
xor ecx ecx
mov [ eax + esi * 2 ] cx
mov eax [ edi ]
xor ecx ecx
mov [ eax + esi * 2 ] cx
pop esi
mov eax edi
pop ebx
pop ebp
retn 0x8
lea edx [ ebx + ebx ]
push edx
mov edx [ ebp + 0xc ]
lea ecx [ ecx + edx * 2 ]
mov edx [ edi + 0x10 ]
push ecx
lea eax [ eax + edx * 2 ]
push eax
call sub_10033950
add esp 0xc
cmp [ edi + 0x14 ] 0x8
mov [ edi + 0x10 ] esi
jb r-xdata
sub_10016ca0
push ebp
mov ebp esp
push ebx
mov ebx eax
push edi
mov edi ecx
test ebx ebx
je r-xdata
mov eax [ edi + 0x10 ]
mov ecx [ ebp + 0x8 ]
or edx 0xffffffff
sub edx eax
cmp edx ecx
ja r-xdata
mov ecx [ edi + 0x14 ]
cmp ecx 0x8
jb r-xdata
test ecx ecx
je r-xdata
push r--data
call sub_1003621d
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax edi
pop edi
pop ebx
pop ebp
retn 0x4
push esi
lea esi [ eax + ecx ]
mov eax edi
call sub_1000be00
test al al
je r-xdata
cmp ecx 0x8
jb r-xdata
cmp ebx eax
jb r-xdata
pop esi
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp ecx 0x8
jb r-xdata
mov edx [ edi + 0x10 ]
lea eax [ eax + edx * 2 ]
cmp eax ebx
jbe r-xdata
mov eax edi
xor ecx ecx
mov [ eax + esi * 2 ] cx
mov eax [ edi ]
xor ecx ecx
mov [ eax + esi * 2 ] cx
pop esi
mov eax edi
pop edi
pop ebx
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + ecx ]
mov ecx [ edi + 0x10 ]
push edx
lea edx [ eax + ecx * 2 ]
push ebx
push edx
call sub_10033950
add esp 0xc
cmp [ edi + 0x14 ] 0x8
mov [ edi + 0x10 ] esi
jb r-xdata
mov eax edi
sub ebx eax
mov eax [ ebp + 0x8 ]
sar ebx 0x1
push ebx
push edi
call sub_10016bf0
pop edi
pop ebx
pop ebp
retn 0x4
mov eax [ edi ]
sub ebx eax
mov eax [ ebp + 0x8 ]
sar ebx 0x1
push ebx
push edi
call sub_10016bf0
pop edi
pop ebx
pop ebp
retn 0x4
sub_10016d80
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov eax [ ecx + 0x10 ]
cmp eax esi
jae r-xdata
mov edx esi
cmp esi edi
jb r-xdata
mov esi eax
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov edx edi
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
cmp esi edi
jae r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
test edx edx
je r-xdata
xor eax eax
cmp esi edi
setne al
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x4
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
movzx eax [ eax ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jne r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
jmp r-xdata
sub_10016e10
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
je r-xdata
xor eax eax
pop esi
retn
call [ GetTickCount@IAT ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
jae r-xdata
mov edx eax
sub edx ecx
cmp edx [ esi + 0x8 ]
jae r-xdata
mov [ esi + 0x4 ] eax
xor eax eax
pop esi
retn
xor edx edx
mov [ esi + 0x4 ] eax
div [ esi + 0xc ]
mov [ esi + 0x8 ] edx
mov eax 0x1
pop esi
retn
sub_10016e50
push ebp
mov ebp esp
push 0xffffffff
push sub_1003ab28
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
push 0x10
mov [ edi ] r--data
mov [ edi + 0x4 ] eax
call sub_1002e957
mov esi eax
add esp 0x4
test esi esi
je r-xdata
xor esi esi
mov [ esi ] r--data
mov [ esi + 0xc ] 0x2ef2
call [ GetTickCount@IAT ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi + 0xc ] 0x0
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_10016ee0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b028
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x8 ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10016f60
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
call sub_1002ee70
mov ecx eax
sub ecx [ esi + 0xc ]
add esp 0x4
cmp ecx 0x692
jbe r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
test eax eax
jne r-xdata
pop esi
retn
push eax
push esi
call sub_10016fb0
push 0x0
call sub_1002ee70
add esp 0x4
mov [ esi + 0xc ] eax
sub_10016fb0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003dd80
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x60 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x78 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov esi [ ecx + 0x28 ]
mov [ esp + 0x18 ] eax
xor eax eax
mov [ esp + 0x5c ] eax
mov [ esp + 0x60 ] eax
mov [ esp + 0x64 ] eax
mov [ esp + 0x68 ] eax
mov [ esp + 0x6c ] eax
mov ecx [ ecx + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0x20 ]
xor ebx ebx
call edx
mov edi eax
cmp edi ebx
jne r-xdata
push edi
call sub_10026120
mov [ esp + 0x18 ] eax
mov eax [ edi ]
mov edx [ eax ]
add esp 0x4
push 0x1
mov ecx edi
call edx
mov eax [ esp + 0x14 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x14 ] ebx
jmp r-xdata
mov ecx [ esp + 0x20 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push eax
push ecx
mov ecx [ esp + 0x28 ]
call sub_100171a0
mov ecx [ esp + 0x20 ]
mov [ esp + 0x18 ] eax
test ecx ecx
je r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ ebp + 0xc ]
lea eax [ esp + 0x5c ]
mov [ esp + 0x28 ] eax
mov eax 0x14
mov [ esp + 0x5c ] ecx
mov [ esp + 0x60 ] edx
mov [ esp + 0x24 ] r--data
mov [ esp + 0x2c ] eax
mov [ esp + 0x38 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x30 ] 0x1
mov [ esp + 0x80 ] ebx
lea ecx [ esp + 0x24 ]
mov [ esp + 0x3c ] r--data
mov [ esp + 0x40 ] ecx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x48 ] eax
mov [ esp + 0x80 ] 0x1
mov edx [ esi ]
mov edx [ edx + 0x4 ]
sub esp 0xc
mov eax esp
lea edi [ esp + 0x48 ]
mov [ eax ] edi
mov [ esp + 0x64 ] 0x2
mov ecx [ esp + 0x64 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
lea eax [ esp + 0x28 ]
push eax
mov ecx esi
call edx
cmp [ esp + 0x1c ] 0x0
jne r-xdata
cmp [ esp + 0x34 ] 0x0
mov [ esp + 0x3c ] r--data
mov [ esp + 0x24 ] r--data
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov edx [ esp + 0x3c ]
mov eax [ edx + 0x4 ]
lea ecx [ esp + 0x3c ]
call eax
mov ecx [ esp + 0x58 ]
mov edx [ esi ]
sub esp 0xc
cmp [ esp + 0x24 ] 0x0
mov eax esp
mov [ eax ] edi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov ecx esi
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x60 ]
xor ecx esp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x8
cmp [ esp + 0x30 ] 0x0
jne r-xdata
mov edx [ edx + 0x10 ]
call edx
jmp r-xdata
mov edx [ edx + 0xc ]
call edx
jmp r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
cmp [ esp + 0x38 ] 0x0
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
sub_100171a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003bb7b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x60 ] eax
mov ebx edx
mov eax 0x1a
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x7c ] ecx
mov [ ebp - 0x6c ] 0x0
call sub_1002bff0
mov [ ebp - 0x84 ] eax
mov eax 0x2e
call sub_1002bff0
mov edi eax
mov eax 0x2f
call sub_1002bff0
mov [ ebp - 0x8c ] eax
mov eax 0x30
call sub_1002bff0
mov [ ebp - 0x58 ] eax
mov eax 0x31
call sub_1002bff0
mov [ ebp - 0x5c ] eax
mov eax 0x32
call sub_1002bff0
mov [ ebp - 0x80 ] eax
mov eax 0x33
call sub_1002bff0
mov [ ebp - 0x74 ] eax
mov eax 0x34
call sub_1002bff0
mov [ ebp - 0x64 ] eax
mov eax 0x35
call sub_1002bff0
mov [ ebp - 0x78 ] eax
mov eax 0x36
call sub_1002bff0
push 0xc
mov [ ebp - 0x88 ] eax
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x50 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
mov [ ebp - 0x54 ] eax
mov ebx eax
push 0x4
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
call edx
mov eax [ ebp - 0x6c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x8
mov edx [ esi ]
mov eax [ ebp - 0x84 ]
mov edx [ edx + 0x14 ]
push eax
mov ecx esi
call edx
mov edi eax
test edi edi
je r-xdata
xor eax eax
mov [ eax ] r--data
jmp r-xdata
mov ecx [ ebp - 0x8c ]
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ecx
mov ecx esi
call edx
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ edi ]
mov edx [ eax + 0x24 ]
push ecx
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ ebx ]
mov eax [ edx + 0x8 ]
push edi
mov ecx ebx
call eax
mov esi eax
test esi esi
je r-xdata
mov [ esi + 0x8 ] ebx
mov ebx esi
mov [ esi ] r--data
mov [ esi + 0x4 ] eax
mov [ ebp - 0x54 ] ebx
jmp r-xdata
mov ecx [ ebp - 0x58 ]
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ecx
mov ecx esi
call edx
mov ebx [ ebp - 0x60 ]
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp - 0x70 ]
mov eax [ edi ]
mov edx [ eax + 0x24 ]
push ecx
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
mov ecx [ ebp - 0x5c ]
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ecx
mov ecx esi
call edx
mov edi eax
test edi edi
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x20 ]
mov edx [ edi ]
mov eax [ ecx ]
mov [ ebp - 0x58 ] edx
mov edx [ eax + 0x8 ]
call edx
push eax
mov eax [ ebp - 0x58 ]
mov edx [ eax + 0x24 ]
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x20 ]
mov edx [ edi ]
mov eax [ ecx ]
mov [ ebp - 0x5c ] edx
mov edx [ eax + 0x4 ]
call edx
push eax
mov eax [ ebp - 0x5c ]
mov edx [ eax + 0x24 ]
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
mov ecx [ ebp - 0x60 ]
mov edx [ ecx + 0x4 ]
mov edi [ edx + 0x28 ]
mov eax [ edi ]
mov edx [ eax + 0x48 ]
push 0x0
mov ecx edi
call edx
mov [ ebp - 0x4a ] al
mov eax [ edi ]
mov edx [ eax + 0x48 ]
push 0x2
mov ecx edi
call edx
mov ecx [ ebp - 0x78 ]
mov [ ebp - 0x49 ] al
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ecx
mov ecx esi
call edx
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ esi ]
mov eax [ ebp - 0x64 ]
mov edx [ edx + 0x14 ]
push eax
mov ecx esi
call edx
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp - 0x88 ]
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ecx
mov ecx esi
call edx
mov ebx eax
test ebx ebx
je r-xdata
movzx ecx [ ebp - 0x4a ]
mov eax [ ebx ]
mov edx [ eax + 0x24 ]
push ecx
mov ecx ebx
call edx
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
call edx
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
mov eax [ edi ]
mov edx [ ebx ]
mov [ ebp - 0x64 ] eax
mov eax [ edx + 0xc ]
mov ecx ebx
call eax
mov edx [ ebp - 0x64 ]
push eax
mov eax [ edx + 0x24 ]
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
mov eax [ edi ]
mov edx [ eax + 0x4c ]
push 0x0
mov ecx edi
call edx
mov ebx eax
lea eax [ ebp - 0x2c ]
push eax
mov eax ebx
call sub_10017600
mov [ ebp - 0x4 ] 0x1
test ebx ebx
je r-xdata
movzx ecx [ ebp - 0x49 ]
mov eax [ ebx ]
mov edx [ eax + 0x24 ]
push ecx
mov ecx ebx
call edx
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
call edx
mov edx [ esi ]
mov eax [ ebp - 0x80 ]
mov edx [ edx + 0x14 ]
push eax
mov ecx esi
call edx
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
mov edx [ edi ]
mov eax [ edx + 0x4c ]
push 0x1
mov ecx edi
call eax
lea ecx [ ebp - 0x48 ]
push ecx
mov edi eax
call sub_10017600
xor ebx ebx
mov [ ebp - 0x4 ] 0x2
cmp edi ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov edx [ esi ]
mov eax [ ebp - 0x74 ]
mov edx [ edx + 0x14 ]
push eax
mov ecx esi
call edx
mov edi eax
cmp edi ebx
je r-xdata
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
mov edx [ ebx ]
push eax
mov eax [ edx + 0x1c ]
mov ecx ebx
call eax
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x54 ]
mov edx [ ecx ]
mov edx [ edx + 0xc ]
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
push esi
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x68 ] ebx
call edx
test eax eax
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
mov edi 0x10
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov edx [ ebp - 0x68 ]
mov ecx [ ebp - 0x7c ]
mov eax [ ecx ]
mov eax [ eax + 0xc ]
push edx
mov edx [ ebp - 0x50 ]
push edx
call eax
cmp [ ebp - 0x68 ] eax
jne r-xdata
mov edx [ edi ]
push eax
mov eax [ edx + 0x1c ]
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
lea eax [ ebp - 0x48 ]
mov esi 0xf
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_1002e8fb
add esp 0x4
mov ecx [ ebp - 0x50 ]
push ecx
call sub_1002ee65
add esp 0x4
mov [ ebp - 0x6c ] 0x1
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov ebx [ ebp - 0x54 ]
mov [ ebp - 0x18 ] esi
mov edx [ ebp - 0x2c ]
push edx
call sub_1002e8fb
add esp 0x4
sub_10017600
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
mov eax [ esi ]
mov edx [ eax + 0x10 ]
push edi
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call edx
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1002eb41
mov edi eax
mov eax [ esi ]
mov edx [ eax + 0x10 ]
add esp 0x4
mov ecx esi
call edx
lea eax [ eax + eax + 0x2 ]
push eax
push 0x0
push edi
call sub_10032e00
mov ebx [ esi ]
mov edx [ ebx + 0x10 ]
add esp 0xc
mov ecx esi
call edx
add eax eax
push eax
mov eax [ ebx + 0x14 ]
push edi
mov ecx esi
call eax
mov eax edi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
lea ecx [ eax * 4 + 0x1 ]
push ecx
call sub_1002eb41
mov ebx eax
mov eax edi
add esp 0x4
lea edx [ eax + 0x2 ]
lea ecx [ ecx ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
lea edx [ eax * 4 + 0x1 ]
push edx
push 0x0
push ebx
call sub_10032e00
mov eax edi
add esp 0xc
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
mov edx eax
mov eax edi
lea esi [ eax + 0x2 ]
lea ecx [ ecx ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
push 0x0
push 0x0
sub eax esi
lea ecx [ edx * 4 ]
push ecx
push ebx
sar eax 0x1
inc eax
push eax
push edi
push 0x0
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ecx [ ebp + 0x8 ]
mov eax ebx
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
mov [ ecx ] 0x0
lea esi [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
mov esi eax
mov eax ebx
call sub_10002640
push ebx
call sub_1002ee65
push edi
call sub_1002ee65
mov eax [ ebp + 0x8 ]
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10017750
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
lea edi [ esi + 0x8 ]
push edi
call [ EnterCriticalSection@IAT ]
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
mov edx [ eax + 0x20 ]
push ecx
mov ecx esi
call edx
push edi
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
pop ebp
retn 0x4
sub_10017780
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
lea edi [ esi + 0x8 ]
push edi
call [ EnterCriticalSection@IAT ]
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
mov edx [ eax + 0x28 ]
push ecx
mov ecx esi
call edx
push edi
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
pop ebp
retn 0x4
sub_100177b0
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
lea edi [ esi + 0x8 ]
push edi
call [ EnterCriticalSection@IAT ]
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
mov edx [ eax + 0x30 ]
push ecx
mov ecx esi
call edx
push edi
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
pop ebp
retn 0x4
sub_100177e0
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
lea edi [ esi + 0x8 ]
push edi
call [ EnterCriticalSection@IAT ]
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
mov edx [ eax + 0x24 ]
push ecx
mov ecx esi
call edx
push edi
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
pop ebp
retn 0x4
sub_10017830
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ esi + 0x8 ]
push eax
mov [ esi ] r--data
call [ DeleteCriticalSection@IAT ]
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10017870
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
lea edi [ esi + 0x8 ]
push edi
call [ EnterCriticalSection@IAT ]
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
mov edx [ eax + 0x2c ]
push ecx
mov ecx esi
call edx
push edi
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
pop ebp
retn 0x4
sub_100178a0
push esi
lea esi [ ecx + 0x8 ]
push esi
call [ TryEnterCriticalSection@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop esi
retn
push esi
call [ LeaveCriticalSection@IAT ]
xor eax eax
pop esi
retn
sub_100178f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003aaf8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ ecx ]
mov edx [ eax + 0x18 ]
call edx
push 0x1
add edi 0x4
push edi
call [ InterlockedExchange@IAT ]
mov [ esi + 0x4 ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_100179a0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
call sub_100179d0
test edi edi
je r-xdata
xor eax eax
pop edi
pop ebp
retn 0x4
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
sub_100179d0
mov eax [ edi + 0x4 ]
test eax eax
jne r-xdata
retn
push ebx
push esi
lea ebx [ edi + 0x18 ]
lea esp [ esp ]
push 0x1
call [ Sleep@IAT ]
mov edx [ esi ]
mov eax [ edi + 0xc ]
mov edx [ edx + 0x8 ]
push eax
mov ecx esi
call edx
push ebx
call [ EnterCriticalSection@IAT ]
push ebx
mov [ edi + 0x10 ] 0x0
mov [ edi + 0x14 ] esi
call [ LeaveCriticalSection@IAT ]
jmp r-xdata
push ebx
call [ EnterCriticalSection@IAT ]
mov esi [ edi + 0x10 ]
push ebx
call [ LeaveCriticalSection@IAT ]
test esi esi
je r-xdata
pop esi
pop ebx
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
sub_10017a30
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10017a60
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10017a60
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
push edi
xor edi edi
mov [ esi ] r--data
cmp eax edi
je r-xdata
mov ecx [ esi + 0xc ]
cmp ecx edi
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ esi + 0x8 ] edi
lea eax [ esi + 0x18 ]
push eax
call [ DeleteCriticalSection@IAT ]
mov ecx [ esi + 0x10 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0xc ] edi
mov ecx [ esi + 0x14 ]
cmp ecx edi
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ esi + 0x10 ] edi
pop edi
pop esi
retn
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ esi + 0x14 ] edi
sub_10017ac0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003aad3
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x8
call sub_1002e957
mov edi eax
add esp 0x4
mov [ ebp - 0x10 ] edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp edi ebx
je r-xdata
xor edi edi
mov [ ebp - 0x4 ] 0x1
push 0x30
mov [ edi ] r--data
call sub_1002e957
mov esi eax
add esp 0x4
cmp esi ebx
je r-xdata
cmp [ esi + 0x8 ] ebx
je r-xdata
mov ecx [ esi + 0xc ]
cmp ecx ebx
je r-xdata
xor esi esi
mov [ edi + 0x4 ] esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ esi + 0x18 ]
mov [ esi ] r--data
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] eax
push ecx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
call [ InitializeCriticalSection@IAT ]
mov [ edi + 0x4 ] esi
jmp r-xdata
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ esi + 0xc ] ebx
push ebx
push ebx
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ edi + 0x4 ]
push esi
push sub_100179a0
push ebx
push ebx
call [ CreateThread@IAT ]
mov [ esi + 0x8 ] eax
cmp eax ebx
jne r-xdata
sub_10017bc0
push esi
mov esi [ ecx + 0x4 ]
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
call edx
test eax eax
je r-xdata
push ebx
push edi
lea edi [ esi + 0x18 ]
push edi
xor ebx ebx
call [ EnterCriticalSection@IAT ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax 0x1
pop esi
retn
push edi
call [ LeaveCriticalSection@IAT ]
pop edi
mov eax ebx
pop ebx
pop esi
retn
mov ebx 0x1
sub_10017c00
push esi
mov esi [ ecx + 0x4 ]
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
push edi
xor edi edi
call edx
test eax eax
je r-xdata
push ebx
lea ebx [ esi + 0x18 ]
push ebx
call [ EnterCriticalSection@IAT ]
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
retn
push ebx
call [ LeaveCriticalSection@IAT ]
pop ebx
mov eax edi
pop edi
pop esi
retn
mov edi eax
mov [ esi + 0x14 ] 0x0
sub_10017c50
push ebp
mov ebp esp
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
call edx
test eax eax
je r-xdata
push edi
lea edi [ esi + 0x18 ]
push edi
call [ EnterCriticalSection@IAT ]
mov ecx [ esi + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
pop ebp
retn 0x4
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
push edi
mov [ esi + 0x10 ] eax
call [ LeaveCriticalSection@IAT ]
mov eax 0x1
pop edi
pop ebp
retn 0x4
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x10 ] 0x0
sub_10017ce0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov edx [ eax + 0xc ]
push esi
push edi
mov edi ecx
mov ecx ebx
call edx
test eax eax
je r-xdata
xor esi esi
cmp [ ebx + 0xc ] esi
je r-xdata
mov ecx [ edi + 0x14 ]
mov [ edi + 0xc ] 0x1
mov eax [ ebx + 0x8 ]
mov [ edi + 0x10 ] eax
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov esi eax
test esi esi
je r-xdata
mov [ edi + 0x8 ] esi
mov ecx [ edi + 0x14 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov ebx eax
cmp ebx esi
je r-xdata
mov [ edi + 0xc ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x28 ]
mov edx [ eax ]
mov eax [ ebx + 0x8 ]
mov ecx [ esi + 0x1c ]
mov edx [ edx + 0x30 ]
push eax
sub esp 0xc
mov eax esp
mov [ eax ] ecx
mov ecx [ esi + 0x20 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x24 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esi + 0x28 ]
call edx
mov eax [ ebx + 0x8 ]
mov ebx [ esi + 0x1c ]
mov ecx [ esi + 0x28 ]
mov edx [ ecx ]
mov [ ebp - 0x4 ] eax
sub esp 0xc
mov eax esp
mov [ eax ] ebx
mov ebx [ esi + 0x20 ]
mov [ eax + 0x4 ] ebx
mov ebx [ esi + 0x24 ]
mov [ eax + 0x8 ] ebx
mov eax [ edx + 0x24 ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
mov [ edi + 0xc ] esi
mov [ edi + 0x10 ] esi
mov [ edi + 0x28 ] esi
mov edi [ edi + 0x14 ]
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_10019430
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
jmp r-xdata
mov eax esi
call sub_10019430
xor eax eax
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] eax
mov edi [ edi + 0x14 ]
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov edx [ ebx ]
mov eax [ edx + 0x10 ]
mov ecx ebx
call eax
mov edx [ ebx ]
mov [ ebp + 0x8 ] eax
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
mov ecx [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] ecx
jb r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10017e20
push ebp
mov ebp esp
push 0xffffffff
push sub_1003bb3b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov ecx [ esi + 0x1c ]
cmp ecx ebx
je r-xdata
mov ecx [ esi + 0x20 ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x1c ] ebx
mov ecx [ esi + 0x14 ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x20 ] ebx
mov ecx [ esi + 0x24 ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x14 ] ebx
mov eax [ esi + 0x2c ]
cmp eax ebx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ esi + 0x30 ]
call sub_1000ff40
mov eax [ esi + 0x2c ]
push eax
call sub_1002e8fb
add esp 0x4
sub_10017ee0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10017e20
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10017f10
push esi
mov esi ecx
mov ecx [ esi + 0x24 ]
push edi
xor edi edi
cmp ecx edi
je r-xdata
pop edi
xor eax eax
pop esi
retn
cmp [ esi + 0x28 ] edi
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
test eax eax
je r-xdata
mov ecx [ esi + 0x24 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
push 0x18
call sub_1002e957
add esp 0x4
cmp eax edi
je r-xdata
mov [ esi + 0x28 ] edi
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
push edi
call edx
push eax
call sub_10018e40
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
add esp 0x4
push eax
mov eax [ edx + 0x4 ]
call eax
lea eax [ edi + 0x1 ]
pop edi
pop esi
retn
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
xor eax eax
push eax
mov eax [ edx + 0x4 ]
call eax
pop edi
mov eax 0x1
pop esi
retn
mov [ eax ] r--data
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x4 ] edi
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
pop edi
mov eax 0x1
pop esi
retn
sub_10017fc0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003b408
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov edx [ eax + 0xc ]
mov ecx ebx
call edx
test eax eax
je r-xdata
xor eax eax
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] eax
mov [ edi + 0x28 ] eax
mov ecx [ edi + 0x24 ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
lea esi [ esp + 0x14 ]
mov ecx ebx
call sub_10017cc0
mov [ esp + 0x30 ] 0x0
mov esi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
cmp esi ebx
je r-xdata
mov [ edi + 0x28 ] 0x1
test esi esi
je r-xdata
jmp r-xdata
push esi
call sub_1002e8fb
add esp 0x4
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ edi + 0x24 ]
mov eax [ ecx ]
mov edx [ esi ]
mov eax [ eax + 0xc ]
push edx
call eax
add esi 0x4
cmp esi ebx
jne r-xdata
mov esi [ esp + 0x14 ]
sub_100180a0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003d108
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
test eax eax
jne r-xdata
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi esi
call sub_10018330
mov ecx [ esi + 0x20 ]
xor ebx ebx
cmp ecx ebx
je r-xdata
call sub_100184c0
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
test eax eax
jne r-xdata
cmp [ esi + 0x8 ] ebx
jne r-xdata
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esi + 0x2c ]
call sub_10018750
mov [ esp + 0x30 ] ebx
lea eax [ esp + 0x14 ]
lea ecx [ esi + 0x2c ]
mov [ esi + 0x8 ] ebx
call sub_1000fd40
mov [ esp + 0x30 ] 0xffffffff
mov eax [ esp + 0x14 ]
mov [ esi + 0x3c ] ebx
mov [ esi + 0x40 ] ebx
mov [ esi + 0x44 ] ebx
mov [ esi + 0x48 ] ebx
mov [ esi + 0x4c ] ebx
cmp eax ebx
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
test eax eax
jne r-xdata
mov edi [ esi + 0x30 ]
sub edi [ esi + 0x2c ]
mov ecx [ esi + 0x3c ]
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp ecx eax
jae r-xdata
mov edi [ esp + 0x18 ]
call sub_1000ff40
mov ecx [ esp + 0x14 ]
push ecx
call sub_1002e8fb
add esp 0x4
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov ecx [ esi + 0x48 ]
or ecx [ esi + 0x4c ]
jne r-xdata
mov eax [ esi + 0x2c ]
sub esp 0x1c
lea edx [ ecx * 8 ]
mov edi esp
sub edx ecx
mov [ edi + 0x10 ] ebx
lea eax [ eax + edx * 4 ]
mov [ edi + 0x14 ] 0xf
mov [ esp + 0x2c ] esp
mov [ edi ] bl
push eax
or ecx 0xffffffff
xor ebx ebx
call sub_10002780
call sub_10018c80
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
add esp 0x1c
push eax
mov eax [ edx + 0x4 ]
call eax
inc [ esi + 0x3c ]
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_10018430
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] edx
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10018230
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov edx [ eax + 0xc ]
push esi
push edi
mov edi ecx
mov ecx ebx
call edx
test eax eax
je r-xdata
xor eax eax
mov ecx [ edi + 0x14 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov esi eax
xor eax eax
cmp esi eax
je r-xdata
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] eax
mov [ edi + 0x28 ] eax
mov edi [ edi + 0x14 ]
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x24 ]
mov [ edi + 0x10 ] eax
mov ebx [ esi + 0x1c ]
mov ecx [ esi + 0x28 ]
mov edx [ ecx ]
push eax
sub esp 0xc
mov eax esp
mov [ eax ] ebx
mov ebx [ esi + 0x20 ]
mov [ eax + 0x4 ] ebx
mov ebx [ esi + 0x24 ]
mov [ eax + 0x8 ] ebx
mov eax [ edx + 0x30 ]
call eax
mov ebx [ esi + 0x1c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
mov ecx [ esi + 0x28 ]
sub esp 0xc
mov eax esp
mov [ eax ] ebx
mov ebx [ esi + 0x20 ]
mov [ eax + 0x4 ] ebx
mov ebx [ esi + 0x24 ]
mov [ ebp - 0x4 ] edx
mov edx [ ecx ]
mov [ eax + 0x8 ] ebx
mov eax [ edx + 0x24 ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_10019430
xor eax eax
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] eax
mov edi [ edi + 0x14 ]
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov edx [ ebx ]
mov eax [ edx + 0x10 ]
mov ecx ebx
call eax
mov edx [ ebx ]
mov [ ebp + 0x8 ] eax
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
mov ecx [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] ecx
jb r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10018330
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ edi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push esi
call edx
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
cmp eax 0x1
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
cmp eax 0x2
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0xc ]
push esi
mov ecx edi
call edx
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
test eax eax
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x10 ]
push esi
mov ecx edi
call edx
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
cmp eax 0xf
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x14 ]
push esi
mov ecx edi
call edx
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
cmp eax 0x1f
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x18 ]
push esi
mov ecx edi
call edx
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov ecx esi
call edx
test eax eax
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x1c ]
push esi
mov ecx edi
call edx
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
lea eax [ ebp - 0x14 ]
push eax
call [ GetLocalTime@IAT ]
lea ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
call [ SystemTimeToFileTime@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
test ecx ecx
jl r-xdata
jg r-xdata
mov [ edi + 0x40 ] eax
mov [ edi + 0x44 ] ecx
test eax eax
je r-xdata
sub_10018430
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ GetLocalTime@IAT ]
lea ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
call [ SystemTimeToFileTime@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
xor edx edx
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
sub_10018490
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x60 ]
mov ecx [ esi + 0x64 ]
mov [ esi + 0x8 ] 0x1
mov [ esi + 0x58 ] eax
mov [ esi + 0x5c ] ecx
sub_100184c0
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x14 ]
push eax
call [ GetLocalTime@IAT ]
lea ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x14 ]
push edx
call [ SystemTimeToFileTime@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop ebx
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x1c ]
mov edi [ ebp - 0x18 ]
mov eax edx
or eax edi
je r-xdata
mov ebx [ esi + 0x4c ]
mov eax [ esi + 0x48 ]
test ebx ebx
jl r-xdata
mov eax [ esi + 0x44 ]
mov ecx [ esi + 0x40 ]
test eax eax
jl r-xdata
jg r-xdata
jg r-xdata
mov ecx edx
sub ecx eax
mov eax edi
sbb eax ebx
mov ebx [ esi + 0x5c ]
cmp eax ebx
jl r-xdata
test eax eax
je r-xdata
sub edx ecx
sbb edi eax
cmp edi [ esi + 0x54 ]
jl r-xdata
test ecx ecx
je r-xdata
jg r-xdata
jg r-xdata
mov ecx [ esi + 0x60 ]
add ecx [ esi + 0x58 ]
mov edx [ esi + 0x64 ]
adc edx ebx
mov [ esi + 0x58 ] ecx
mov [ esi + 0x5c ] edx
cmp ecx [ esi + 0x58 ]
jb r-xdata
mov eax 0x1
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
cmp edx [ esi + 0x50 ]
jae r-xdata
sub_10018580
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push edi
mov edi ecx
mov ecx esi
call edx
test eax eax
je r-xdata
mov eax [ edi + 0x24 ]
test eax eax
je r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ esi ]
mov ebx [ eax ]
mov eax [ edx + 0x10 ]
mov ecx esi
call eax
mov ecx [ edi + 0x24 ]
mov edx [ ebx + 0x18 ]
push eax
call edx
mov eax [ esi ]
mov edx [ eax + 0x14 ]
mov ecx esi
call edx
mov edx [ esi ]
mov ebx eax
mov eax [ edi + 0x24 ]
mov ecx [ eax ]
mov eax [ edx + 0x10 ]
mov [ ebp + 0x8 ] ecx
push ebx
mov ecx esi
call eax
mov edx [ ebp + 0x8 ]
mov ecx [ edi + 0x24 ]
push eax
mov eax [ edx + 0x1c ]
call eax
test ebx ebx
je r-xdata
mov [ edi + 0x28 ] 0x0
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_10018610
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0x14 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push edi
call edx
mov edi eax
xor eax eax
cmp edi eax
je r-xdata
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov esi [ esi + 0x14 ]
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ edi + 0x1c ]
mov ecx [ edi + 0x28 ]
mov edx [ ecx ]
sub esp 0xc
cmp [ esi + 0xc ] eax
mov eax esp
mov [ eax ] ebx
mov ebx [ edi + 0x20 ]
mov [ eax + 0x4 ] ebx
mov ebx [ edi + 0x24 ]
mov [ eax + 0x8 ] ebx
jne r-xdata
mov eax [ edx + 0x24 ]
call eax
xor ecx ecx
mov [ ebp - 0x4 ] eax
cmp eax ecx
je r-xdata
mov eax [ edx + 0x20 ]
call eax
mov ebx eax
xor eax eax
cmp ebx eax
je r-xdata
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] ecx
mov ecx [ esi + 0x10 ]
mov ebx [ esi + 0x18 ]
push ecx
push eax
call sub_10019330
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
add esp 0x8
mov ebx eax
mov eax [ edx ]
push 0x1
call eax
xor eax eax
cmp ebx eax
je r-xdata
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
jmp r-xdata
mov eax edi
call sub_10019930
push ebx
push eax
call sub_10018b30
mov edx [ ebx ]
add esp 0x8
mov [ ebp - 0x4 ] eax
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
mov eax [ ebp - 0x4 ]
xor ecx ecx
cmp eax ecx
je r-xdata
mov esi [ esi + 0x1c ]
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push ebx
mov ecx esi
call eax
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ esi + 0x14 ]
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ esi + 0x1c ]
mov edx [ esi ]
push eax
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10018750
push ebp
mov ebp esp
push 0xffffffff
push sub_1003bb10
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
mov eax 0x0
shr edi 0x1f
add edi edx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp edi 0x9249249
jbe r-xdata
mov ecx edi
call sub_10010110
lea ecx [ edi * 8 ]
sub ecx edi
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x8 ] edx
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
push edx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov ecx [ ebx + 0x4 ]
mov ebx [ ebx ]
push eax
push ecx
push ebx
call sub_100188f0
add esp 0x10
mov [ esi + 0x4 ] eax
push r--data
call sub_1003621d
sub_10018830
push ebp
mov ebp esp
push 0xffffffff
push sub_1003aaa0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov edi [ ebx + 0x4 ]
sub edi [ ebx ]
mov [ esi ] eax
sar edi 0x2
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp edi 0x3fffffff
jbe r-xdata
mov ecx edi
call sub_10001730
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
lea ecx [ eax + edi * 4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] ecx
mov ecx [ ebx + 0x4 ]
mov ebx [ ebx ]
push edx
push ecx
push ebx
call sub_1002b1b0
add esp 0xc
mov [ esi + 0x4 ] eax
push r--data
call sub_1003621d
sub_100188f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003baf5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x10 ]
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] edi
lea esi [ ecx + 0xf ]
lea esp [ esp ]
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x1
cmp edi ecx
je r-xdata
add edi 0x1c
add eax 0x1c
mov [ ebp - 0x4 ] cl
mov [ ebp + 0x10 ] edi
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov [ edi + 0x10 ] ecx
mov [ edi + 0x14 ] esi
mov [ edi ] cl
push eax
or ecx 0xffffffff
xor ebx ebx
call sub_10002780
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp eax [ ebp + 0xc ]
je r-xdata
sub_10018966
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call sub_10030edf
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_10002580
add esi 0x1c
cmp esi edi
jne r-xdata
sub_100189c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003aa78
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
lea esi [ edx + 0x10 ]
xor eax eax
cmp [ esi + 0xc ] eax
jne r-xdata
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x4 ] eax
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
mov edx [ edi ]
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
mov ebx eax
push ebx
call sub_1002e957
mov edx [ edi ]
add esp 0x4
mov esi eax
mov eax [ edx + 0x14 ]
push ebx
push esi
mov ecx edi
call eax
mov edi eax
test edi edi
jne r-xdata
cmp [ esi + 0x14 ] eax
je r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0xc ]
push edi
push esi
lea ecx [ ebp - 0x20 ]
call eax
xor ecx ecx
cmp edi eax
sete cl
push esi
mov edi ecx
call sub_1002e8fb
add esp 0x4
test edi edi
je r-xdata
push esi
call sub_1002e8fb
add esp 0x4
mov [ esi + 0xc ] 0x1
mov eax [ esi + 0x8 ]
mov ebx [ esi + 0x4 ]
push eax
call sub_1002e957
add esp 0x4
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x8 ]
push ecx
push ebx
push eax
call sub_10033950
add esp 0xc
mov [ esi + 0x10 ] 0x1
xor eax eax
sub_10018ad0
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x20 ] 0x0
mov [ esi + 0x10 ] r--data
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x10 ] r--data
mov [ esi ] r--data
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
cmp [ esi + 0x24 ] 0x0
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x14 ] 0x0
sub_10018b30
push ebp
mov ebp esp
push esi
push edi
push 0x2c
call sub_1002e957
xor esi esi
add esp 0x4
cmp eax esi
je r-xdata
xor edi edi
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0x10 ] r--data
mov [ eax + 0x14 ] esi
mov [ eax + 0x18 ] esi
mov [ eax + 0x24 ] esi
mov [ eax + 0x20 ] esi
mov [ eax + 0x1c ] 0x1
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] esi
mov [ eax + 0x28 ] ecx
mov edi eax
jmp r-xdata
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov edx edi
call sub_100189c0
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
sub_10018bb0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003aa1b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x14
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov edx [ eax + 0xc ]
add edi 0x10
mov ecx edi
call edx
mov [ esi + 0xc ] eax
mov [ esi ] r--data
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] 0x0
mov [ esi + 0x10 ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10018c80
push ebp
mov ebp esp
push 0xffffffff
push sub_1003bad3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push 0x38
mov [ ebp - 0x4 ] ebx
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
xor esi esi
sub esp 0x1c
mov edi esp
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] esp
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] ebx
push eax
or ecx 0xffffffff
mov [ edi ] bl
call sub_10002780
call sub_10018d20
mov esi eax
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ecx
call sub_1002e8fb
add esp 0x4
cmp [ ebp + 0x1c ] 0x10
jb r-xdata
sub_10018d20
push ebp
mov ebp esp
push 0xffffffff
push sub_1003ba96
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
lea edi [ esi + 0x4 ]
mov [ esi ] r--data
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] eax
mov [ edi ] al
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
lea eax [ ebp + 0x8 ]
push eax
or ecx 0xffffffff
xor ebx ebx
mov [ ebp - 0x4 ] 0x3
call sub_10002780
xor eax eax
cmp [ ebp + 0x1c ] 0x10
mov [ esi + 0x20 ] eax
mov [ esi + 0x34 ] eax
jb r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov ecx [ ebp + 0x8 ]
push ecx
call sub_1002e8fb
add esp 0x4
sub_10018db0
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ esi + 0x24 ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
cmp [ esi + 0x18 ] 0x10
jb r-xdata
push edi
mov edi [ esi + 0x28 ]
call sub_1000ff40
mov eax [ esi + 0x24 ]
push eax
call sub_1002e8fb
add esp 0x4
pop edi
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] ebx
mov [ esi + 0x4 ] bl
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0x4 ]
push ecx
call sub_1002e8fb
add esp 0x4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10018e40
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x24
call sub_1002e957
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
xor esi esi
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] r--data
mov [ eax + 0x10 ] edi
mov [ eax + 0x14 ] edi
mov [ eax + 0x20 ] edi
mov [ eax + 0x1c ] edi
mov [ eax + 0x18 ] 0x1
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ecx
mov esi eax
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
cmp [ esi + 0x20 ] edi
je r-xdata
cmp [ esi + 0x18 ] edi
jne r-xdata
mov [ esi + 0x18 ] 0x1
mov edx [ esi + 0x14 ]
mov ebx [ esi + 0x10 ]
push edx
call sub_1002e957
add esp 0x4
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
cmp esi edi
je r-xdata
mov ecx [ esi + 0x14 ]
push ecx
push ebx
push eax
call sub_10033950
add esp 0xc
mov [ esi + 0x1c ] 0x1
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
sub_10018ee0
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x1c ] 0x0
mov [ esi + 0xc ] r--data
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi + 0xc ] r--data
mov [ esi ] r--data
je r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
cmp [ esi + 0x20 ] 0x0
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x10 ] 0x0
sub_10018f60
push ebp
mov ebp esp
push 0xffffffff
push sub_1003aa1b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x14
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ edi + 0xc ]
mov edx [ eax + 0xc ]
add edi 0xc
mov ecx edi
call edx
mov [ esi + 0xc ] eax
mov [ esi ] r--data
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] 0x0
mov [ esi + 0x10 ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10018ff0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003aa48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea esi [ ecx + 0xc ]
xor edi edi
cmp [ esi + 0x10 ] edi
je r-xdata
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0xc ] 0x1
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
mov edx [ eax + 0x10 ]
mov ecx ebx
call edx
mov esi eax
push esi
call sub_1002e957
mov edx [ ebx ]
add esp 0x4
push esi
mov [ ebp - 0x10 ] eax
push eax
mov eax [ edx + 0x14 ]
mov ecx ebx
call eax
cmp eax edi
jne r-xdata
cmp [ esi + 0xc ] edi
jne r-xdata
mov edx [ ebp - 0x24 ]
mov esi [ ebp - 0x10 ]
push eax
mov eax [ edx + 0xc ]
push esi
lea ecx [ ebp - 0x24 ]
call eax
push esi
mov ecx [ ebp - 0x10 ]
push ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
call sub_1002e8fb
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x4 ] edi
sub_100190e0
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi ] r--data
je r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10019170
push ebp
mov ebp esp
push 0xffffffff
push sub_1003aa48
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi [ ebp + 0x8 ]
add esi 0x8
xor ecx ecx
cmp [ esi + 0xc ] ecx
jne r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x20 ] eax
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] ecx
mov edx [ edi ]
push eax
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
push ebx
call sub_1002e957
mov edx [ edi ]
add esp 0x4
mov esi eax
mov eax [ edx + 0x14 ]
push ebx
push esi
mov ecx edi
call eax
mov edi eax
test edi edi
jne r-xdata
cmp [ esi + 0x14 ] ecx
je r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ edx + 0xc ]
push edi
push esi
lea ecx [ ebp - 0x24 ]
call eax
xor ecx ecx
cmp edi eax
sete cl
push esi
mov edi ecx
call sub_1002e8fb
add esp 0x4
test edi edi
je r-xdata
push esi
call sub_1002e8fb
add esp 0x4
mov [ esi + 0xc ] 0x1
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
push ecx
mov [ ebp - 0x10 ] eax
call sub_1002e957
add esp 0x4
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edx [ esi + 0x8 ]
mov ecx [ ebp - 0x10 ]
push edx
push ecx
push eax
call sub_10033950
add esp 0xc
mov [ esi + 0x10 ] 0x1
xor ecx ecx
sub_10019290
push ebp
mov ebp esp
push 0xffffffff
push sub_1003aa1b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x14
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov edx [ eax + 0xc ]
add edi 0x8
mov ecx edi
call edx
mov [ esi + 0xc ] eax
mov [ esi ] r--data
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] 0x0
mov [ esi + 0x10 ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10019330
push ebp
mov ebp esp
push esi
push edi
push 0x2c
call sub_1002e957
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
xor esi esi
mov [ eax ] r--data
mov [ eax + 0x8 ] r--data
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x1c ] edi
mov [ eax + 0x18 ] edi
mov [ eax + 0x14 ] 0x1
mov [ eax + 0x4 ] edi
mov [ eax + 0x28 ] edi
mov [ eax + 0x24 ] edi
mov esi eax
jmp r-xdata
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push esi
call sub_10019170
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
sub_100193a0
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x18 ] 0x0
mov [ esi + 0x8 ] r--data
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x8 ] r--data
mov [ esi ] r--data
je r-xdata
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0xc ] 0x0
sub_10019400
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10019470
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10019430
push esi
mov esi eax
cmp [ esi + 0x2c ] 0x0
push edi
je r-xdata
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
mov edi [ esi + 0x1c ]
mov ecx [ esi + 0x28 ]
mov edx [ ecx ]
sub esp 0xc
mov eax esp
mov [ eax ] edi
mov edi [ esi + 0x20 ]
mov esi [ esi + 0x24 ]
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] esi
mov eax [ edx + 0x34 ]
call eax
pop edi
pop esi
retn
mov eax 0x1
pop edi
pop esi
retn
sub_10019470
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a9eb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] r--data
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x4 ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x8 ] 0x0
sub_10019510
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b3db
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x30
call sub_1002e957
xor ebx ebx
add esp 0x4
cmp eax ebx
je r-xdata
xor esi esi
mov [ eax ] r--data
xor ecx ecx
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x18 ] ebx
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] 0x1
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x24 ] ecx
mov esi eax
jmp r-xdata
mov [ ebp - 0x10 ] ecx
mov eax ecx
mov ecx [ ebp - 0x20 ]
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
mov ecx [ edi + 0x2c ]
mov [ esi + 0x2c ] ecx
mov edx [ edi + 0x1c ]
mov [ esi + 0x1c ] edx
mov eax [ edi + 0x20 ]
mov [ esi + 0x20 ] eax
mov ecx [ edi + 0x24 ]
mov [ esi + 0x24 ] ecx
lea eax [ esi + 0x4 ]
mov [ ebp - 0x38 ] r--data
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] 0xffffffff
mov [ ebp - 0x4 ] ebx
mov edx [ edi + 0x4 ]
mov eax [ edx + 0xc ]
add edi 0x4
mov ecx edi
call eax
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x1
mov edx [ edi ]
mov eax [ edx + 0xc ]
mov ecx edi
call eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
add edx ecx
cmp edx eax
jbe r-xdata
mov edx [ ebp - 0x38 ]
push eax
mov eax [ edx + 0xc ]
push edi
lea ecx [ ebp - 0x38 ]
call eax
xor ecx ecx
cmp [ ebp - 0x10 ] eax
push edi
sete cl
mov [ ebp - 0x10 ] ecx
call sub_1002e8fb
add esp 0x4
cmp [ ebp - 0x10 ] ebx
jne r-xdata
push edi
call sub_1002e8fb
mov edx [ esi ]
mov eax [ edx ]
add esp 0x4
push 0x1
mov ecx esi
call eax
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call sub_1002e957
mov edx [ ebp - 0x24 ]
mov edi eax
mov eax [ ebp - 0x10 ]
add esp 0x4
push eax
mov eax [ edx + 0x14 ]
push edi
lea ecx [ ebp - 0x24 ]
call eax
mov [ ebp - 0x10 ] eax
cmp eax ebx
jne r-xdata
push 0x14
call sub_1002e957
mov edi eax
add esp 0x4
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] 0x2
cmp edi ebx
je r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edi edi
mov edx [ esi + 0x4 ]
mov eax [ edx + 0xc ]
lea ecx [ esi + 0x4 ]
call eax
lea ecx [ esi + 0x4 ]
mov [ edi ] r--data
mov [ edi + 0x4 ] ecx
mov [ edi + 0x8 ] ebx
mov [ edi + 0x10 ] ebx
mov [ edi + 0xc ] eax
jmp r-xdata
mov [ esi + 0x1c ] edi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_100196f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b723
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x30
call sub_1002e957
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
mov [ ebp - 0x10 ] edi
mov ebx edi
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x18 ] edi
mov [ eax + 0x14 ] edi
mov [ eax + 0x10 ] 0x1
mov [ eax + 0x1c ] edi
mov ebx eax
mov [ eax + 0x20 ] edi
mov [ eax + 0x24 ] edi
mov [ ebp - 0x10 ] ebx
jmp r-xdata
cmp [ esi + 0x10 ] edi
je r-xdata
cmp [ esi + 0x14 ] edi
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov [ ebx + 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x2c ] ecx
mov dl [ eax + 0x8 ]
mov [ ebx + 0x24 ] dl
mov eax [ eax + 0x4 ]
lea esi [ ebx + 0x4 ]
mov [ ebx + 0x20 ] eax
cmp [ esi + 0xc ] edi
jne r-xdata
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0xc ] 0x1
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ebx eax
push ebx
mov [ ebp + 0xc ] edx
call sub_1002e957
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
add esp 0x4
push ebx
mov [ ebp + 0x8 ] eax
push eax
mov eax [ edx + 0x14 ]
call eax
mov ebx eax
cmp ebx edi
jne r-xdata
cmp [ esi + 0xc ] edi
jne r-xdata
mov [ esi + 0xc ] 0x1
mov edx [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
push edx
mov [ ebp + 0xc ] ecx
call sub_1002e957
add esp 0x4
mov [ esi + 0x4 ] eax
cmp eax edi
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x24 ]
push ebx
push edx
mov edx [ eax + 0xc ]
lea ecx [ ebp - 0x24 ]
call edx
mov edx [ ebp + 0x8 ]
xor ecx ecx
cmp ebx eax
sete cl
push edx
mov ebx ecx
call sub_1002e8fb
add esp 0x4
cmp ebx edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_1002e8fb
mov ecx [ ebp - 0x10 ]
mov eax [ ecx ]
mov edx [ eax ]
add esp 0x4
push 0x1
call edx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
call edx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
push ecx
push edx
push eax
call sub_10033950
add esp 0xc
mov [ esi + 0x10 ] 0x1
push 0x14
call sub_1002e957
mov ebx eax
add esp 0x4
mov [ ebp + 0x8 ] ebx
mov [ ebp - 0x4 ] 0x1
cmp ebx edi
je r-xdata
mov ecx [ ebp - 0x10 ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x4 ] edi
mov eax [ ebp - 0x10 ]
mov [ eax + 0x1c ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov ecx esi
call edx
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x10 ] edi
mov [ ebx ] r--data
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] eax
mov edi ebx
sub_10019930
mov ecx [ eax + 0x28 ]
push esi
mov esi [ ecx ]
push edi
mov edi [ eax + 0x1c ]
sub esp 0xc
mov edx esp
mov [ edx ] edi
mov edi [ eax + 0x20 ]
mov eax [ eax + 0x24 ]
mov [ edx + 0x4 ] edi
mov [ edx + 0x8 ] eax
mov edx [ esi + 0x24 ]
call edx
mov esi eax
test esi esi
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
mov edi eax
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
mov eax edi
pop edi
pop esi
retn
pop edi
pop esi
retn
sub_10019980
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
push edi
mov [ esi ] r--data
test ecx ecx
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x4 ] 0x0
add esi 0xc
mov edi 0x3
mov edi edi
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x8 ] 0x0
add esi 0x4
dec edi
jne r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi ] 0x0
mov ecx [ esi ]
test ecx ecx
je r-xdata
pop edi
pop esi
retn
sub_100199e0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10019980
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10019a10
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
mov edi ecx
mov ecx [ edi + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] edi
mov esi 0x2
cmp ecx ebx
je r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax ]
movzx esi [ ecx + 0x24 ]
push 0x1
call edx
mov [ edi + 0x8 ] ebx
inc esi
mov [ ebp - 0x4 ] esi
cmp esi 0x2
jbe r-xdata
mov ecx [ ebp - 0x4 ]
mov esi [ edi + ecx * 4 + 0xc ]
mov edx [ esi + 0x8 ]
mov ecx [ edx + 0x4 ]
mov edx [ esi + 0xc ]
xor eax eax
cmp [ edi + 0x1c ] 0x1
push edx
sete al
mov [ ebp - 0x8 ] eax
mov eax [ ecx ]
mov eax [ eax + 0x18 ]
call eax
mov ebx eax
cmp [ esi + 0x4 ] ebx
jae r-xdata
mov [ ebp - 0x4 ] ebx
mov ecx [ esi + 0x8 ]
xor eax eax
cmp [ ecx + 0x18 ] eax
jne r-xdata
lea esp [ esp ]
mov ecx [ ebp - 0xc ]
mov esi [ ebp - 0x4 ]
inc ecx
mov [ ebp - 0xc ] ecx
cmp ecx 0x3
jb r-xdata
mov [ esi + 0x4 ] eax
cmp ebx eax
jbe r-xdata
inc [ esi + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov edi [ ebp - 0x10 ]
xor ebx ebx
mov ecx [ ebp - 0x10 ]
xor edx edx
test eax eax
setne dl
pop edi
pop esi
mov [ ecx + 0x8 ] eax
pop ebx
mov eax edx
mov esp ebp
pop ebp
retn
xor eax eax
jmp r-xdata
mov edx [ esi + 0x4 ]
xor eax eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x1c ]
lea edi [ ebp - 0x28 ]
push edi
push edx
mov edx [ esi + 0xc ]
push edx
call eax
test eax eax
je r-xdata
cmp [ esi + 0x4 ] ebx
jb r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x18 ]
mov edx [ eax + 0x4 ]
push ecx
push edx
mov eax edi
push eax
call sub_100196f0
mov ecx [ ebp - 0x1c ]
add esp 0xc
mov edi eax
test ecx ecx
je r-xdata
inc [ esi + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
xor eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x1c ]
lea edi [ ebp - 0x1c ]
push edi
push edx
mov edx [ esi + 0xc ]
push edx
call eax
test eax eax
je r-xdata
test edi edi
jne r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
cmp [ esi + 0x4 ] ebx
jb r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x18 ]
mov edx [ eax + 0x4 ]
push ecx
push edx
mov eax edi
push eax
call sub_100196f0
mov ecx [ ebp - 0x28 ]
add esp 0xc
mov edi eax
test ecx ecx
je r-xdata
inc [ esi + 0x4 ]
mov eax edi
test eax eax
jne r-xdata
test edi edi
jne r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
sub_10019bb0
push ebx
push esi
mov [ edi ] r--data
mov [ edi + 0x4 ] eax
xor esi esi
lea ebx [ edi + 0xc ]
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] esi
mov [ eax + 0x4 ] 0x0
jmp r-xdata
push 0x10
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor eax eax
pop esi
mov [ edi + 0x8 ] eax
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
mov eax edi
pop ebx
retn
mov [ ebx ] eax
inc esi
add ebx 0x4
cmp esi 0x3
jb r-xdata
sub_10019c00
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10019980
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10019c30
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10017e20
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10019c60
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d8a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebx + 0x2c ] edi
mov [ ebx + 0x30 ] edi
mov [ ebx + 0x34 ] edi
mov [ ebx + 0x1c ] eax
mov eax 0x42c1d80
mov [ ebp - 0x44 ] ebx
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x24 ] edi
mov [ ebx + 0x28 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x40 ] edi
mov [ ebx + 0x44 ] edi
mov [ ebx + 0x48 ] edi
mov [ ebx + 0x4c ] edi
mov [ ebx + 0x50 ] 0x19a14780
mov [ ebx + 0x54 ] edi
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x64 ] edi
mov [ ebx + 0x58 ] eax
mov [ ebx + 0x5c ] edi
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0xc ] edi
mov [ ebx + 0x10 ] edi
mov [ ebx + 0x18 ] 0x146d
mov [ ebp - 0x4 ] edi
mov [ ebx ] r--data
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x4 ] 0x1
xor esi esi
mov eax r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x1c ] 0xf
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x30 ] 0x0
call sub_10002640
lea ecx [ ebp - 0x30 ]
lea esi [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x2
call sub_10013160
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x1c ] 0x10
jb r-xdata
lea eax [ ebp - 0x40 ]
lea ecx [ ebx + 0x2c ]
mov [ ebx + 0x8 ] edi
call sub_1000fd40
mov esi [ ebp - 0x40 ]
mov [ ebx + 0x3c ] edi
mov [ ebx + 0x40 ] edi
mov [ ebx + 0x44 ] edi
mov [ ebx + 0x48 ] edi
mov [ ebx + 0x4c ] edi
mov [ ebx + 0x18 ] 0x9e3d3
cmp esi edi
je r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_1002e8fb
add esp 0x4
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
mov edi [ ebp - 0x3c ]
mov eax esi
call sub_1000ff40
push esi
call sub_1002e8fb
add esp 0x4
sub_10019db0
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
xor eax eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0xc ] 0x0
sub_10019df0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi ecx
mov ecx [ edi + 0x10 ]
test ecx ecx
je r-xdata
xor eax eax
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] eax
mov [ edi + 0x18 ] eax
mov ecx [ edi + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax [ ebp + 0x8 ]
push eax
call sub_10018bb0
mov esi eax
test esi esi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ edi + 0xc ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ esi ]
mov eax [ edx + 0x10 ]
mov ecx esi
call eax
push eax
mov [ ebp - 0x8 ] eax
call sub_1002eb41
mov ebx [ esi ]
mov edx [ ebx + 0x10 ]
add esp 0x4
mov ecx esi
mov [ ebp - 0x4 ] eax
call edx
mov edx [ ebx + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
call edx
mov ebx eax
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
cmp eax ebx
je r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
push 0x18
call sub_1002e957
mov ebx [ ebp - 0x4 ]
xor esi esi
add esp 0x4
cmp eax esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_1002ee65
mov edx [ esi ]
mov eax [ edx ]
add esp 0x4
push 0x1
mov ecx esi
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_10009ff0
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] esi
mov [ eax + 0x14 ] esi
mov [ eax ] r--data
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x10 ] 0x1
mov esi eax
push 0x18
call sub_1002e957
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
xor eax eax
mov edx [ ebp - 0x8 ]
add edx 0xfffffffb
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] edx
mov [ eax ] r--data
mov [ eax + 0x14 ] esi
jmp r-xdata
mov ecx [ edi + 0x10 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov esi [ edi + 0x10 ]
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ecx ]
mov edx [ edx + 0x4 ]
sub esp 0xc
mov eax esp
mov [ eax ] esi
mov esi [ edi + 0x14 ]
mov [ eax + 0x4 ] esi
mov esi [ edi + 0x18 ]
mov [ eax + 0x8 ] esi
lea eax [ ebp - 0x10 ]
push eax
call edx
mov eax [ ebp - 0x10 ]
cmp eax 0x3
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x4 ] 0x1
mov [ edi + 0xc ] esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x8 ]
mov [ edi + 0x10 ] eax
mov dl [ ebx + ecx - 0x1 ]
mov [ edi + 0x18 ] dl
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x10 ]
call eax
mov ecx [ eax + ebx ]
mov edx [ edi + 0x4 ]
mov [ edi + 0x14 ] ecx
mov esi [ edi + 0x10 ]
mov ecx [ edx + 0x8 ]
mov edx [ ecx ]
sub esp 0xc
mov eax esp
mov [ eax ] esi
mov esi [ edi + 0x14 ]
mov [ eax + 0x4 ] esi
mov esi [ edi + 0x18 ]
mov [ eax + 0x8 ] esi
mov eax [ edx + 0x8 ]
call eax
mov esi eax
test esi esi
je r-xdata
mov esi edi
call sub_10019db0
cmp eax 0x2
je r-xdata
mov ecx [ ebp - 0xc ]
test ecx ecx
je r-xdata
cmp eax 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc ] 0x1
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x4 ] 0x1
mov eax [ ebp - 0xc ]
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1001a030
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
xor eax eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x20 ] 0x1
pop esi
pop ebp
retn 0x4
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x0
mov [ eax + 0x20 ] 0x1
pop esi
pop ebp
retn 0x4
sub_1001a090
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
push edi
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edi [ ebp + 0x8 ]
mov eax [ ecx ]
mov edx [ edi + 0x20 ]
mov eax [ eax + 0x8 ]
push edx
call eax
push edi
call sub_10019290
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x10 ]
mov ecx ebx
call eax
mov ecx [ esi + 0xc ]
push ecx
call sub_1000adc0
add esp 0x4
test eax eax
jne r-xdata
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
mov [ edi + 0x4 ] 0x1
mov ecx [ esi + 0x14 ]
mov [ edi + 0x28 ] ecx
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov [ edi + 0x24 ] eax
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
cmp eax [ esi + 0x14 ]
jb r-xdata
call sub_10019db0
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
mov [ esi + 0x8 ] 0x1
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edi [ esi + 0x10 ]
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ecx ]
sub esp 0xc
mov eax esp
mov [ eax ] edi
mov edi [ esi + 0x14 ]
mov [ eax + 0x4 ] edi
mov edi [ esi + 0x18 ]
mov [ eax + 0x8 ] edi
mov eax [ edx + 0xc ]
call eax
call sub_10019db0
sub_1001a160
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a9b8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
xor eax eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0xc ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1001a1f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a988
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
xor edi edi
mov [ ebp - 0x4 ] edi
push 0x1c
mov [ esi ] r--data
mov [ esi + 0x8 ] eax
call sub_1002e957
add esp 0x4
cmp eax edi
je r-xdata
xor eax eax
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] ecx
jmp r-xdata
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] edi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_1001a270
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a678
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x8 ] 0x0
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0xc ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1001a300
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov eax [ eax + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax 0x1
pop ebp
retn 0x4
mov edx [ ecx ]
push eax
mov eax [ edx + 0x8 ]
call eax
sub_1001a330
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
mov [ esi ] r--data
test ecx ecx
je r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x8 ] 0x0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x4 ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1001a380
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b398
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea edi [ ebp - 0x10 ]
call sub_1001ae60
mov eax [ esi + 0x4 ]
push eax
call sub_1002e8fb
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1001a3e0
cmp [ esi + 0x30 ] 0x10
jb r-xdata
mov [ esi + 0x30 ] 0xf
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x1c ] 0x0
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax [ esi + 0x1c ]
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
retn
mov ecx [ esi ]
push ecx
call sub_1002e8fb
add esp 0x4
sub_1001a430
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d0d3
mov eax [ fs : 0x0 ]
push eax
sub esp 0xcc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xcc ] ecx
mov ecx [ ebx + 0x4 ]
mov [ ebp - 0x90 ] eax
mov eax [ ecx ]
mov [ ebp - 0xc8 ] edx
mov edx [ eax + 0x44 ]
mov [ ebp - 0xb4 ] ebx
call edx
test eax eax
je r-xdata
xor eax eax
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
mov [ ebp - 0xb0 ] eax
mov eax edi
mov [ ebp - 0x6c ] 0xf
mov [ ebp - 0x70 ] 0x0
mov [ ebp - 0x80 ] 0x0
lea esi [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
mov esi eax
mov eax edi
lea ecx [ ebp - 0x80 ]
call sub_10002640
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebx + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
mov esi [ ebx + 0x4 ]
call edx
mov edi eax
mov eax [ esi ]
mov edx [ eax + 0x44 ]
mov ecx esi
call edx
mov ecx eax
xor edx edx
mov eax edi
div ecx
mov ecx [ ebx + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x4c ]
push edx
lea edx [ ebp - 0x2c ]
push edx
call eax
push 0x0
push eax
or eax 0xffffffff
lea edi [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x1
call sub_10003ee0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax [ ebp - 0x80 ]
mov esi 0x10
cmp [ ebp - 0x6c ] esi
jae r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
mov edi [ ebp - 0xb0 ]
mov edx [ edi ]
push eax
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x80 ]
mov ecx [ ebx + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
xor edx edx
mov ecx 0x3
div ecx
mov ebx [ ebx + 0x4 ]
mov ecx ebx
lea esi [ edx + 0x1 ]
mov edx [ ebx ]
mov eax [ edx + 0x48 ]
call eax
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
cmp [ ebp - 0x6c ] esi
jb r-xdata
cmp [ ebp - 0x6c ] 0x10
mov ecx [ ebp - 0xc8 ]
mov edx [ ebp - 0xcc ]
mov [ ecx ] eax
mov [ edx ] edi
jb r-xdata
xor edi edi
push 0x48
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0x98 ] edi
call sub_1002e957
add esp 0x4
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x80 ]
push ecx
call sub_1002e8fb
add esp 0x4
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x80 ]
push eax
call sub_1002e8fb
add esp 0x4
lea ecx [ ebp - 0x8c ]
push ecx
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0x8c ] edi
call sub_1002e39e
push r--data
lea edx [ ebp - 0xc0 ]
push edx
mov [ ebp - 0xc0 ] r--data
call sub_10030edf
int3
mov [ ebp - 0x9c ] eax
mov [ eax ] eax
mov eax [ ebp - 0x9c ]
mov [ eax + 0x4 ] eax
mov eax [ ebp - 0x9c ]
mov [ eax + 0x8 ] eax
mov ecx [ ebp - 0x9c ]
mov [ ecx + 0x44 ] 0x1
mov edx [ ebp - 0x9c ]
mov [ edx + 0x45 ] 0x1
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x84 ] esi
cmp esi edi
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x90 ]
mov edx [ ecx ]
mov ebx [ ebp - 0xb0 ]
mov eax [ edx + 0xc ]
mov edi [ ecx + 0x4 ]
mov esi [ ebx ]
call eax
mov edx [ esi + 0x4 ]
push eax
push edi
mov ecx ebx
call edx
mov [ ebp - 0xd0 ] eax
mov [ ebp - 0xa4 ] eax
lea ecx [ eax + 0x1 ]
nop
lea esp [ esp ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
mov ebx eax
mov eax [ ebp - 0x9c ]
mov edi [ eax ]
mov [ ebp - 0x84 ] edi
mov [ ebp - 0x88 ] eax
mov [ ebp - 0x90 ] 0x0
cmp edi eax
je r-xdata
mov [ ebp - 0x88 ] ebx
lea eax [ ebp - 0x88 ]
cmp [ eax + 0x20 ] 0x10
mov esi [ eax + 0x1c ]
jb r-xdata
xor ebx ebx
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xc0 ] ebx
mov [ ebp - 0xbc ] ebx
mov [ ebp - 0x4 ] 0x7
mov esi [ eax ]
mov [ ebp - 0x88 ] eax
cmp esi eax
je r-xdata
inc [ ebp - 0x90 ]
test ebx ebx
je r-xdata
dec [ ebp - 0x84 ]
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
lea edx [ ebp - 0x2c ]
push edx
or ecx 0xffffffff
xor ebx ebx
lea edi [ ebp - 0x64 ]
mov [ ebp - 0x50 ] 0xf
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x64 ] 0x0
call sub_10002780
mov [ ebp - 0x4 ] 0x4
mov edi 0xf
xor esi esi
mov eax r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
call sub_10002640
lea ecx [ ebp - 0x64 ]
lea edx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x5
call sub_1001b920
push eax
lea eax [ ebp - 0xd4 ]
push eax
lea ecx [ ebp - 0xa0 ]
push ecx
call sub_1001b4f0
mov esi 0x10
cmp [ ebp - 0x34 ] esi
jb r-xdata
lea ecx [ eax + 0xc ]
mov ecx [ eax + 0xc ]
jmp r-xdata
mov edx [ ebp - 0xa8 ]
mov ecx [ ebp - 0x98 ]
lea ecx [ edx + ecx - 0x1 ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0xa8 ] ecx
push edx
lea ecx [ ebp - 0xa0 ]
call sub_1001ad60
mov eax [ ebp - 0x9c ]
mov [ eax + 0x4 ] eax
mov eax [ ebp - 0x9c ]
mov [ eax ] eax
mov eax [ ebp - 0x9c ]
mov [ eax + 0x8 ] eax
mov ecx ebx
sub ecx [ ebp - 0xc4 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov edi edx
shr edi 0x1f
add edi edx
mov [ ebp - 0x98 ] 0x0
je r-xdata
lea eax [ esi + 0xc ]
push eax
or ecx 0xffffffff
xor ebx ebx
lea edi [ ebp - 0x64 ]
mov [ ebp - 0x50 ] 0xf
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x64 ] 0x0
call sub_10002780
lea ecx [ esi + 0x28 ]
mov [ ebp - 0x4 ] 0x8
xor eax eax
push ecx
or ecx 0xffffffff
lea edi [ ebp - 0x48 ]
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x48 ] al
call sub_10002780
lea ecx [ ebp - 0x64 ]
lea ebx [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0x9
call sub_1001ac20
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
cmp [ edi + 0x45 ] 0x0
jne r-xdata
mov eax [ ebp - 0xb4 ]
mov ecx [ eax + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
xor edx edx
div ebx
mov ecx [ ebp - 0x90 ]
mov esi edx
cmp ecx [ ebp - 0x98 ]
jne r-xdata
cmp [ ebp - 0x84 ] 0x0
ja r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1002e8fb
add esp 0x4
cmp [ ebp - 0x18 ] 0x10
mov edx [ ebp - 0x2c ]
jae r-xdata
mov eax esi
mov edi [ ebp - 0x1c ]
mov eax edi
cmp edi esi
jb r-xdata
mov eax [ ebp - 0xd0 ]
push eax
call sub_1002ee65
mov esi [ ebp - 0xc4 ]
add esp 0x4
test esi esi
je r-xdata
jmp r-xdata
xor ebx ebx
cmp [ ebp - 0x50 ] 0x10
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1002e8fb
add esp 0x4
cmp edi [ ebp - 0x88 ]
jne r-xdata
mov ecx [ edi + 0x8 ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
mov eax [ ebp - 0xa4 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
call sub_10002640
add [ ebp - 0xa4 ] esi
sub ebx esi
mov [ ebp - 0x4 ] 0x6
lea edx [ ebp - 0x2c ]
mov [ ebp - 0xac ] ebx
add edi 0x28
push edx
or ecx 0xffffffff
xor ebx ebx
call sub_10002780
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov esi ebx
mov edi [ ebp - 0xb4 ]
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x48 ]
mov esi [ edi + 0x8 ]
call edx
mov ebx eax
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
xor edx edx
div ebx
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x50 ]
push edx
lea edx [ ebp - 0x2c ]
push edx
call eax
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x9c ]
lea edx [ ebp - 0x2c ]
push edx
lea eax [ ebp - 0xa0 ]
mov [ ebp - 0xa4 ] ecx
call sub_1001af20
mov ebx [ ebp - 0x9c ]
mov [ ebp - 0xac ] eax
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_1002e8fb
add esp 0x4
call sub_1000c010
test eax eax
jne r-xdata
lea edx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xa
mov eax [ ebp - 0x9c ]
mov ecx [ eax ]
push eax
push ecx
lea edi [ ebp - 0x8c ]
lea esi [ ebp - 0xa0 ]
call sub_1001ae60
mov edx [ ebp - 0x9c ]
push edx
call sub_1002e8fb
mov eax [ ebp - 0xa8 ]
mov edi [ ebp - 0xb0 ]
add esp 0x4
mov ecx [ ebp - 0x8c ]
push ecx
mov edi ebx
mov eax esi
call sub_1001bb10
add esp 0x4
push esi
call sub_1002e8fb
add esp 0x4
mov eax [ ebp - 0xb4 ]
mov ecx [ eax + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
mov esi 0x10
call eax
xor edx edx
div edi
lea ecx [ edx * 8 ]
sub ecx edx
mov edx [ ebp - 0xc4 ]
lea edi [ edx + ecx * 8 ]
cmp [ edi + 0x30 ] esi
lea eax [ edi + 0x1c ]
jb r-xdata
mov ecx [ esi + 0x38 ]
add ecx [ esi + 0x1c ]
mov edx [ ebp - 0xa8 ]
lea eax [ edx + ecx + 0x1 ]
mov [ ebp - 0xa8 ] eax
cmp [ esi + 0x45 ] bl
jne r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_1002e8fb
add esp 0x4
mov eax [ ebp - 0x9c ]
mov eax [ edi + 0x4 ]
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov edi [ ebp - 0x84 ]
mov ebx [ ebp - 0xac ]
mov eax [ ebp - 0x2c ]
push eax
call sub_1002e8fb
add esp 0x4
sets al
test al al
jne r-xdata
cmp edi esi
jae r-xdata
cmp [ edi + 0x14 ] esi
jb r-xdata
mov eax [ eax ]
cmp esi [ ebp - 0x88 ]
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x45 ] bl
jne r-xdata
mov [ ebp - 0x84 ] eax
jmp r-xdata
mov [ ebp - 0x84 ] ecx
jmp r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
lea eax [ ebp - 0xac ]
jmp r-xdata
xor eax eax
cmp edi esi
setne al
or eax 0xffffffff
jmp r-xdata
mov edx edi
mov edx [ edi ]
jmp r-xdata
mov eax [ ebp - 0x9c ]
mov ebx [ ebp - 0xc0 ]
mov eax [ esi + 0x4 ]
cmp [ eax + 0x45 ] bl
jne r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0x45 ] bl
jne r-xdata
cmp edi [ eax + 0x8 ]
jne r-xdata
mov edi [ ebp - 0x84 ]
mov ecx [ ebp - 0xa4 ]
cmp [ eax ] ecx
jne r-xdata
test eax eax
mov ecx [ ebp - 0xb0 ]
mov esi [ ecx ]
push eax
mov eax [ esi + 0x10 ]
push edx
call eax
mov ecx [ ebp - 0x8c ]
push ecx
push ebx
lea eax [ edi + 0x38 ]
mov ecx edi
call sub_1001ba10
mov edx [ ebp - 0x8c ]
push edx
mov edi ebx
lea eax [ ebx - 0x38 ]
call sub_1001bb10
add ebx 0xffffffc8
mov ecx ebx
sub ecx [ ebp - 0xc4 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov edi edx
shr edi 0x1f
add esp 0xc
add edi edx
mov [ ebp - 0xc0 ] ebx
jne r-xdata
mov esi eax
cmp esi [ eax + 0x8 ]
jne r-xdata
lea ebx [ ebx ]
mov [ ebp - 0x84 ] eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
mov esi eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0x45 ] bl
je r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0x45 ] bl
je r-xdata
jmp r-xdata
mov edi [ ebp - 0x84 ]
sub_1001ac20
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c40a
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ ebx + 0x4 ]
cmp edi ecx
jae r-xdata
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov eax [ ebx ]
cmp eax edi
ja r-xdata
mov esi [ ebx + 0x4 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x2
test esi esi
je r-xdata
mov ecx ebx
call sub_1001ade0
sub edi eax
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x5
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ ebx + 0x8 ]
jne r-xdata
add [ ebx + 0x4 ] 0x38
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
call sub_100025d0
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebx ]
lea eax [ esi * 8 ]
sub eax esi
mov esi [ ebx + 0x4 ]
lea edi [ ecx + eax * 8 ]
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
mov ecx ebx
call sub_1001ade0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov [ esi ] al
call sub_100025d0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
add esi 0x1c
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
add edi 0x1c
mov [ esi ] 0x0
call sub_100025d0
sub_1001ad20
push ebp
mov ebp esp
push ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push edi
mov edi [ esi + 0x4 ]
push ecx
call sub_1001bb10
mov edx [ esi ]
push edx
call sub_1002e8fb
add esp 0x8
pop edi
sub_1001ad60
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov [ ebp - 0x4 ] ecx
mov edi esi
cmp [ esi + 0x45 ] bl
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov ecx [ ebp - 0x4 ]
push eax
call sub_1001ad60
cmp [ esi + 0x3c ] 0x10
mov edi [ edi ]
jb r-xdata
mov [ esi + 0x3c ] 0xf
mov [ esi + 0x38 ] ebx
mov [ esi + 0x28 ] bl
cmp [ esi + 0x20 ] 0x10
jb r-xdata
mov ecx [ esi + 0x28 ]
push ecx
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] ebx
push esi
mov [ esi + 0xc ] bl
call sub_1002e8fb
add esp 0x4
mov esi edi
cmp [ edi + 0x45 ] bl
je r-xdata
mov edx [ esi + 0xc ]
push edx
call sub_1002e8fb
add esp 0x4
sub_1001ade0
push ebx
mov ebx [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
sub esi ebx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x5
mov esi edx
shr esi 0x1f
add esi edx
push edi
cmp esi 0x4924923
jbe r-xdata
mov edi [ ecx + 0x8 ]
sub edi ebx
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x5
mov eax edx
shr eax 0x1f
inc esi
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_1003621d
pop edi
pop esi
pop ebx
retn
mov edx eax
shr edx 0x1
mov edi 0x4924924
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_1001afa0
mov eax esi
cmp eax esi
jae r-xdata
sub_1001ae60
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov [ edi ] ecx
mov eax edi
mov esp ebp
pop ebp
retn 0x8
jmp r-xdata
mov eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_1001ad60
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov [ esi + 0x8 ] 0x0
mov edx [ ecx ]
mov [ edi ] edx
mov eax edi
mov esp ebp
pop ebp
retn 0x8
cmp [ ecx + 0x45 ] 0x0
mov edx ecx
jne r-xdata
push edx
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_1001b0b0
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0x8 ] ecx
jmp r-xdata
jmp r-xdata
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
sub_1001af20
push ebp
mov ebp esp
sub esp 0x8
mov eax [ eax + 0x4 ]
push edi
mov edi [ eax + 0x4 ]
cmp [ edi + 0x45 ] 0x0
mov [ ebp - 0x4 ] eax
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x14 ]
push ebx
mov ebx [ ecx + 0x10 ]
push esi
mov [ ebp - 0x8 ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x10
lea edx [ edi + 0xc ]
jb r-xdata
mov esi [ edx + 0x10 ]
mov eax esi
cmp eax esi
jae r-xdata
mov ecx [ ecx ]
mov eax esi
cmp esi ebx
jb r-xdata
cmp [ edx + 0x14 ] 0x10
jb r-xdata
mov eax ebx
call sub_1000c010
test eax eax
jne r-xdata
mov edx [ edx ]
jns r-xdata
cmp esi ebx
jb r-xdata
mov [ ebp - 0x4 ] edi
mov edi [ edi ]
mov edi [ edi + 0x8 ]
jmp r-xdata
cmp esi ebx
setne al
test eax eax
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
cmp [ edi + 0x45 ] 0x0
je r-xdata
sub_1001afa0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c3d0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp edi 0x4924924
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp eax edi
jae r-xdata
push r--data
call sub_1003621d
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_1001b3b0
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push edi
push eax
push edx
mov [ ebp - 0x14 ] eax
call sub_1001bb70
mov edi [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov ebx edx
shr ebx 0x1f
add esp 0xc
add ebx edx
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax * 8 ]
sub ecx eax
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 8 ]
lea ecx [ ebx * 8 ]
sub ecx ebx
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 8 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
mov ecx [ ebp + 0x8 ]
mov edi [ esi + 0x4 ]
mov eax [ esi ]
push ecx
call sub_1001bb10
mov edx [ esi ]
push edx
call sub_1002e8fb
add esp 0x8
sub_1001b0b0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
cmp [ ebx + 0x45 ] 0x0
push esi
push edi
je r-xdata
lea eax [ ebp + 0x10 ]
call sub_1001b360
mov ecx [ ebx ]
cmp [ ecx + 0x45 ] 0x0
je r-xdata
push r--data
call sub_1003626a
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x45 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x45 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x45 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ebx + 0x44 ]
mov cl [ eax + 0x44 ]
mov [ eax + 0x44 ] dl
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x44 ] cl
cmp [ ebx + 0x44 ] 0x1
jne r-xdata
cmp [ edi + 0x45 ] 0x0
je r-xdata
mov eax [ edi ]
cmp [ eax + 0x45 ] 0x0
mov ecx edi
jne r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebx + 0x3c ] 0x10
jb r-xdata
mov eax [ edx + 0x4 ]
cmp edi [ eax + 0x4 ]
je r-xdata
mov eax edi
call sub_1001b4d0
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov ecx [ edx + 0x4 ]
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax [ edx + 0x4 ]
mov [ eax ] ecx
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
xor esi esi
mov edi 0xf
mov [ ebx + 0x3c ] edi
mov [ ebx + 0x38 ] esi
mov [ ebx + 0x28 ] 0x0
cmp [ ebx + 0x20 ] 0x10
jb r-xdata
mov edx [ ebx + 0x28 ]
push edx
call sub_1002e8fb
add esp 0x4
mov [ edi + 0x44 ] 0x1
cmp [ edi + 0x44 ] 0x1
jne r-xdata
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] esi
push ebx
mov [ ebx + 0xc ] 0x0
call sub_1002e8fb
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
pop edi
cmp eax esi
pop esi
pop ebx
jbe r-xdata
mov eax [ ebx + 0xc ]
push eax
call sub_1002e8fb
add esp 0x4
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
pop ebp
retn 0xc
dec eax
mov [ ecx + 0x8 ] eax
cmp [ ecx + 0x44 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x44 ] 0x0
jne r-xdata
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
mov [ ecx + 0x44 ] 0x1
push edx
mov ecx esi
mov [ esi + 0x44 ] 0x0
call sub_1001b470
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
mov [ ecx + 0x44 ] 0x1
push edx
mov ecx esi
mov [ esi + 0x44 ] 0x0
call sub_1001b410
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x44 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x44 ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
cmp [ eax + 0x44 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x44 ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x44 ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x44 ] 0x1
je r-xdata
mov al [ esi + 0x44 ]
mov [ ecx + 0x44 ] al
mov [ esi + 0x44 ] 0x1
mov ecx [ ecx ]
mov [ ecx + 0x44 ] 0x1
push edx
mov ecx esi
call sub_1001b470
mov eax [ ecx + 0x8 ]
mov [ eax + 0x44 ] 0x1
push edx
mov [ ecx + 0x44 ] 0x0
call sub_1001b410
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x44 ] 0x0
mov al [ esi + 0x44 ]
mov [ ecx + 0x44 ] al
mov [ esi + 0x44 ] 0x1
mov ecx [ ecx + 0x8 ]
mov [ ecx + 0x44 ] 0x1
push edx
mov ecx esi
call sub_1001b410
jmp r-xdata
mov eax [ ecx ]
mov [ eax + 0x44 ] 0x1
push edx
mov [ ecx + 0x44 ] 0x0
call sub_1001b470
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
sub_1001b360
mov ecx [ eax ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
retn
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x45 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
mov ecx [ edx ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
mov [ eax ] ecx
mov edx [ eax ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] edx
retn
lea esp [ esp ]
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x45 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx ]
cmp [ ecx + 0x45 ] 0x0
je r-xdata
sub_1001b3b0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x4924924
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_1002e39e
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_10030edf
lea eax [ ecx * 8 ]
sub eax ecx
add eax eax
add eax eax
add eax eax
push eax
call sub_1002e957
add esp 0x4
test eax eax
jne r-xdata
sub_1001b410
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x45 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_1001b470
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x45 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_1001b4f0
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
push ebx
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x45 ] 0x0
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi eax
mov al 0x1
mov [ ebp - 0x8 ] al
jne r-xdata
mov [ ebp - 0x4 ] edi
test al al
je r-xdata
mov eax [ esi + 0x1c ]
mov ecx [ esi + 0x20 ]
mov edx eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ebx [ esi + 0x1c ]
add edx 0xc
cmp [ esi + 0x20 ] 0x10
jb r-xdata
mov eax [ edx + 0x4 ]
cmp edi [ eax ]
jne r-xdata
cmp [ ebx + 0x20 ] 0x10
mov edi [ ebx + 0x1c ]
mov [ ebp - 0x14 ] ebx
jb r-xdata
lea ecx [ esi + 0xc ]
mov ecx [ esi + 0xc ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_1001b8c0
push 0x1
mov ebx esi
mov eax edx
lea ecx [ ebx + 0xc ]
mov ecx [ ebx + 0xc ]
jmp r-xdata
cmp [ edx + 0x14 ] 0x10
jb r-xdata
mov eax ebx
mov esi [ edx + 0x10 ]
mov eax esi
cmp esi ebx
jb r-xdata
mov eax esi
cmp esi edi
jb r-xdata
mov esi edx
mov esi [ ebp - 0xc ]
cmp edx esi
jae r-xdata
call sub_1000c010
test eax eax
jne r-xdata
mov edx [ edx ]
cmp [ ebp - 0x10 ] 0x10
mov edx [ ebp + 0x10 ]
jb r-xdata
mov eax edi
jns r-xdata
cmp esi ebx
jb r-xdata
add edx 0xc
mov edx [ edx + 0xc ]
jmp r-xdata
mov esi [ ebp + 0x10 ]
add esi 0xc
call sub_1001a3e0
mov eax [ ebp + 0x10 ]
push eax
call sub_1002e8fb
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
add esp 0x4
pop edi
pop esi
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x0
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp - 0x8 ]
mov ebx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp esi ebx
setne al
test eax eax
sets al
mov [ ebp - 0x8 ] al
test al al
je r-xdata
cmp esi edi
jae r-xdata
call sub_1000c010
test eax eax
jne r-xdata
lea ecx [ ebp + 0x10 ]
push ecx
mov ecx edi
call sub_1001b660
mov edx [ eax ]
mov eax [ ebp + 0xc ]
pop edi
pop esi
mov [ eax ] edx
mov [ eax + 0x4 ] 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ebx [ ebx + 0x8 ]
mov ebx [ ebx ]
jmp r-xdata
xor eax eax
cmp esi edi
setne al
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov edi [ ebp - 0x14 ]
mov esi [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
cmp [ ebx + 0x45 ] 0x0
je r-xdata
test eax eax
sub_1001b660
push ebp
mov ebp esp
mov edx [ eax + 0x8 ]
push esi
push edi
cmp edx 0x4924923
jb r-xdata
inc edx
mov [ eax + 0x8 ] edx
mov [ ebx + 0x4 ] ecx
mov edx [ eax + 0x4 ]
cmp ecx edx
jne r-xdata
mov edi 0x10
cmp [ ebx + 0x3c ] edi
jb r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ edx + 0x4 ] ebx
mov edx [ eax + 0x4 ]
mov [ edx ] ebx
mov ecx [ eax + 0x4 ]
mov [ ecx + 0x8 ] ebx
jmp r-xdata
mov esi 0xf
mov [ ebx + 0x3c ] esi
mov [ ebx + 0x38 ] 0x0
mov [ ebx + 0x28 ] 0x0
cmp [ ebx + 0x20 ] edi
jb r-xdata
mov eax [ ebx + 0x28 ]
push eax
call sub_1002e8fb
add esp 0x4
mov [ ecx + 0x8 ] ebx
mov edx [ eax + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ ecx ] ebx
mov edx [ eax + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov edx [ ebx + 0x4 ]
cmp [ edx + 0x44 ] 0x0
mov ecx ebx
jne r-xdata
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x1c ] 0x0
push ebx
mov [ ebx + 0xc ] 0x0
call sub_1002e8fb
add esp 0x4
push r--data
call sub_1003621d
mov ecx [ ebx + 0xc ]
push ecx
call sub_1002e8fb
add esp 0x4
mov [ edx + 0x8 ] ebx
mov [ edx ] ebx
jmp r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ ecx + 0x44 ] 0x1
mov [ eax ] ebx
pop esi
pop ebp
retn 0x8
lea esp [ esp ]
mov esi [ esi ]
cmp [ esi + 0x44 ] 0x0
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x44 ] 0x0
je r-xdata
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x44 ] 0x1
mov [ esi + 0x44 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x44 ] 0x0
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x44 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x44 ] 0x0
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x45 ] 0x0
jne r-xdata
mov ecx edx
mov edx [ ecx ]
mov esi [ edx + 0x8 ]
mov [ ecx ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x45 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x44 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x44 ] 0x0
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x45 ] 0x0
jne r-xdata
mov ecx edx
mov edx [ ecx + 0x8 ]
mov esi [ edx ]
mov [ ecx + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x45 ] 0x0
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ eax + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ eax + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] ecx
mov [ ecx + 0x4 ] edx
sub_1001b8c0
mov ecx [ eax ]
cmp [ ecx + 0x45 ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x45 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov [ eax ] ecx
retn
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x45 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp edx [ ecx ]
jne r-xdata
mov [ eax ] edx
retn
nop
retn
mov [ eax ] ecx
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x45 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x45 ] 0x0
je r-xdata
sub_1001b920
push ebp
mov ebp esp
push 0xffffffff
push sub_1003ba4d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov esi edx
push 0x48
call sub_1002e957
mov ebx eax
xor eax eax
add esp 0x4
mov [ ebp - 0x14 ] ebx
cmp ebx eax
je r-xdata
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_1002e39e
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
mov [ ebp - 0x24 ] r--data
call sub_10030edf
int3
mov ecx [ esi + 0x4 ]
mov [ ebx ] ecx
mov edx [ esi + 0x4 ]
mov [ ebx + 0x4 ] edx
mov ecx [ esi + 0x4 ]
lea esi [ ebx + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x44 ] ax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi eax
je r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov [ esi ] al
call sub_100025d0
add esi 0x1c
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
add edi 0x1c
mov [ esi ] 0x0
call sub_100025d0
sub_1001ba10
push ebp
mov ebp esp
push ecx
push ebx
mov ebx ecx
cmp eax [ ebp + 0x8 ]
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push esi
push edi
lea edi [ eax + 0x30 ]
sub eax ebx
add eax 0xffffffd0
lea esi [ ebx + 0x30 ]
mov [ ebp - 0x4 ] eax
xor ecx ecx
cmp [ esi - 0x1c ] 0x10
jb r-xdata
mov eax [ ebp - 0x4 ]
add esi 0x38
lea ecx [ eax + esi ]
add ebx 0x38
add edi 0x38
cmp ecx [ ebp + 0x8 ]
jne r-xdata
cmp [ esi ] 0x10
jb r-xdata
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov [ esi - 0x1c ] 0xf
mov [ esi - 0x20 ] ecx
mov [ ebx ] cl
cmp [ edi - 0x1c ] 0x10
jae r-xdata
mov eax [ ebx ]
push eax
call sub_1002e8fb
add esp 0x4
add eax esi
cmp ebx eax
je r-xdata
pop edi
pop esi
mov [ esi ] 0xf
mov [ esi - 0x4 ] ecx
lea eax [ esi - 0x14 ]
mov [ eax ] 0x0
cmp [ edi ] 0x10
jae r-xdata
mov eax [ esi - 0x14 ]
push eax
call sub_1002e8fb
add esp 0x4
xor ecx ecx
mov edx [ eax + esi ]
mov [ ebx ] edx
mov [ eax + esi ] ecx
mov ecx [ edi - 0x20 ]
inc ecx
push ecx
add eax esi
push eax
push ebx
call sub_1002e460
add esp 0xc
xor ecx ecx
jmp r-xdata
mov edx [ edi - 0x14 ]
mov [ eax ] edx
mov [ edi - 0x14 ] ecx
mov ecx [ edi - 0x4 ]
inc ecx
push ecx
lea edx [ edi - 0x14 ]
push edx
push eax
call sub_1002e460
add esp 0xc
xor ecx ecx
jmp r-xdata
lea eax [ esi - 0x14 ]
lea edx [ edi - 0x14 ]
cmp eax edx
je r-xdata
mov eax [ edi - 0x20 ]
mov [ esi - 0x20 ] eax
mov edx [ edi - 0x1c ]
mov [ esi - 0x1c ] edx
mov [ edi - 0x20 ] ecx
mov [ edi - 0x1c ] ecx
jmp r-xdata
mov eax [ edi - 0x4 ]
mov [ esi - 0x4 ] eax
mov edx [ edi ]
mov [ esi ] edx
mov [ edi - 0x4 ] ecx
mov [ edi ] ecx
sub_1001bb10
cmp eax edi
je r-xdata
retn
push ebx
push esi
lea esi [ eax + 0x30 ]
xor ebx ebx
jmp r-xdata
cmp [ esi ] 0x10
jb r-xdata
mov [ esi ] 0xf
mov [ esi - 0x4 ] ebx
mov [ esi - 0x14 ] bl
cmp [ esi - 0x1c ] 0x10
jb r-xdata
mov eax [ esi - 0x14 ]
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi - 0x1c ] 0xf
mov [ esi - 0x20 ] ebx
mov [ esi - 0x30 ] bl
add esi 0x38
lea edx [ esi - 0x30 ]
cmp edx edi
jne r-xdata
mov ecx [ esi - 0x30 ]
push ecx
call sub_1002e8fb
add esp 0x4
pop esi
pop ebx
sub_1001bb70
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c3ad
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
lea edi [ eax + 0x30 ]
lea esi [ ecx + 0x30 ]
nop
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
cmp eax ecx
je r-xdata
add eax 0x38
add esi 0x38
mov [ ebp + 0xc ] eax
add edi 0x38
jmp r-xdata
mov [ edi - 0x1c ] 0xf
mov [ edi - 0x20 ] ecx
mov [ eax ] cl
cmp eax edx
je r-xdata
lea edx [ esi - 0x30 ]
cmp edx [ ebp + 0x8 ]
je r-xdata
mov [ edi - 0x4 ] ecx
lea ecx [ esi - 0x14 ]
lea edx [ edi - 0x14 ]
lea ebx [ edi - 0x14 ]
mov [ edi ] 0xf
mov [ ebx ] 0x0
cmp edx ecx
je r-xdata
mov ebx 0x10
cmp [ edi - 0x1c ] ebx
jb r-xdata
cmp [ edi ] 0x10
jb r-xdata
mov [ edi - 0x1c ] 0xf
mov [ edi - 0x20 ] ecx
mov [ eax ] 0x0
cmp [ esi - 0x1c ] ebx
jae r-xdata
mov eax [ eax ]
push eax
call sub_1002e8fb
mov eax [ ebp + 0xc ]
add esp 0x4
xor ecx ecx
xor ecx ecx
mov [ edi ] 0xf
mov [ edi - 0x4 ] ecx
mov [ ebx ] cl
cmp [ esi ] 0x10
jae r-xdata
mov eax [ ebx ]
push eax
call sub_1002e8fb
mov eax [ ebp + 0xc ]
add esp 0x4
mov edx [ esi - 0x30 ]
mov [ eax ] edx
mov [ esi - 0x30 ] ecx
mov ecx [ esi - 0x20 ]
inc ecx
push ecx
lea ecx [ esi - 0x30 ]
push ecx
push eax
call sub_1002e460
mov eax [ ebp + 0xc ]
add esp 0xc
xor ecx ecx
jmp r-xdata
mov edx [ esi - 0x14 ]
mov [ ebx ] edx
mov [ esi - 0x14 ] ecx
mov eax [ esi - 0x4 ]
inc eax
push eax
lea eax [ esi - 0x14 ]
push eax
push ebx
call sub_1002e460
mov eax [ ebp + 0xc ]
add esp 0xc
jmp r-xdata
mov edx [ esi - 0x20 ]
mov [ edi - 0x20 ] edx
mov edx [ esi - 0x1c ]
mov [ edi - 0x1c ] edx
mov [ esi - 0x20 ] ecx
mov [ esi - 0x1c ] ecx
mov ecx [ esi - 0x4 ]
mov [ edi - 0x4 ] ecx
mov edx [ esi ]
mov [ edi ] edx
mov [ esi - 0x4 ] 0x0
mov [ esi ] 0x0
sub_1001bcc0
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov edi eax
xor eax eax
mov [ edi + 0x10 ] eax
mov [ ebp - 0x4 ] eax
mov [ edi + 0x14 ] 0xf
mov [ edi ] al
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
or ecx 0xffffffff
xor ebx ebx
call sub_10002780
mov eax edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1001bd00
push ebp
mov ebp esp
push esi
mov esi eax
mov eax [ esi + 0xc ]
lea ecx [ ebp + 0x8 ]
cmp ecx eax
jae r-xdata
cmp eax [ esi + 0x10 ]
jne r-xdata
mov ecx [ esi + 0x8 ]
lea edx [ ebp + 0x8 ]
cmp ecx edx
ja r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
call sub_10001660
push edi
mov edi edx
sub edi ecx
sar edi 0x2
cmp eax [ esi + 0x10 ]
jne r-xdata
add [ esi + 0xc ] 0x4
pop esi
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
call sub_10001660
add [ esi + 0xc ] 0x4
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x8 ]
mov edx [ ecx + edi * 4 ]
mov [ eax ] edx
sub_1001bd70
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003dd3a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x118
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x110 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x128 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi ecx
xor esi esi
mov [ esp + 0x54 ] edi
mov [ esp + 0x14 ] eax
mov [ edi + 0x2c ] esi
cmp [ edi + 0x24 ] esi
je r-xdata
mov ecx [ esp + 0x128 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x110 ]
xor ecx esp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
mov ecx [ edi + 0x20 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
push 0x1
call eax
mov ebx eax
mov [ esp + 0x1c ] ebx
cmp ebx esi
je r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
mov ecx ebx
call eax
mov [ esp + 0x50 ] eax
cmp eax esi
je r-xdata
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
mov ebx eax
mov [ esp + 0x60 ] ebx
cmp ebx esi
je r-xdata
mov ecx [ esp + 0x50 ]
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov ebx [ esp + 0x1c ]
mov eax r--data
mov ecx 0x1
mov [ esp + 0x64 ] eax
mov [ esp + 0x68 ] esi
mov [ esp + 0x6c ] esi
mov [ esp + 0x78 ] esi
mov [ esp + 0x74 ] esi
mov [ esp + 0x70 ] ecx
mov [ esp + 0x130 ] esi
mov [ esp + 0x7c ] eax
mov [ esp + 0x80 ] esi
mov [ esp + 0x84 ] esi
mov [ esp + 0x90 ] esi
mov [ esp + 0x8c ] esi
mov [ esp + 0x88 ] ecx
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] esi
mov [ esp + 0x2c ] esi
mov [ esp + 0x38 ] esi
mov [ esp + 0x34 ] esi
mov [ esp + 0x30 ] ecx
lea esi [ esp + 0x64 ]
mov [ esp + 0x130 ] 0x2
call sub_10009ff0
test eax eax
je r-xdata
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
lea ecx [ esp + 0x24 ]
call sub_1000a130
lea ecx [ esp + 0x7c ]
call sub_1000a130
lea ecx [ esp + 0x64 ]
mov [ esp + 0x130 ] 0xffffffff
call sub_1000a130
lea esi [ esp + 0x7c ]
call sub_10009ff0
test eax eax
je r-xdata
lea esi [ esp + 0x24 ]
call sub_10009ff0
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
xor esi esi
push esi
push 0x1
lea ecx [ esp + 0x1b ]
push ecx
lea ecx [ esp + 0x70 ]
mov [ esp + 0x1f ] al
call sub_1000a170
lea edx [ esp + 0x7c ]
mov [ esp + 0x3c ] r--data
mov [ esp + 0x40 ] edx
mov [ esp + 0x48 ] esi
mov [ esp + 0x44 ] esi
mov [ esp + 0x4c ] 0xffffffff
push 0x1
lea eax [ esp + 0x17 ]
push eax
lea ecx [ esp + 0x44 ]
mov [ esp + 0x138 ] 0x3
call sub_1000aa80
lea esi [ esp + 0x104 ]
call sub_10025ec0
mov [ esp + 0x130 ] 0x4
mov ecx [ esp + 0x114 ]
lea edx [ ecx + ecx ]
movzx eax dx
push 0x2
lea ecx [ esp + 0x1c ]
push ecx
lea ecx [ esp + 0x44 ]
mov [ esp + 0x20 ] eax
call sub_1000aa80
cmp [ esp + 0x118 ] 0x8
mov eax [ esp + 0x104 ]
jae r-xdata
movzx edx [ esp + 0x18 ]
push edx
push eax
lea ecx [ esp + 0x44 ]
call sub_1000aa80
mov eax [ ebx ]
mov edx [ eax + 0x10 ]
mov ecx ebx
call edx
movzx eax ax
push 0x2
lea ecx [ esp + 0x60 ]
push ecx
lea ecx [ esp + 0x44 ]
mov [ esp + 0x64 ] eax
call sub_1000aa80
mov edx [ ebx ]
mov eax [ edx + 0x10 ]
mov ecx ebx
call eax
lea ecx [ esp + 0x3c ]
push ecx
call sub_1000adc0
mov ecx [ edi + 0x24 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
add esp 0x4
call eax
mov ecx [ edi + 0x24 ]
push ecx
call sub_10026120
add esp 0x4
push 0x4
lea edx [ esp + 0x5c ]
push edx
lea ecx [ esp + 0x44 ]
mov [ esp + 0x60 ] eax
call sub_1000aa80
cmp [ esp + 0x6c ] 0x1
jne r-xdata
mov eax esi
mov edi r--data
mov eax [ ebx ]
mov edx [ eax + 0x10 ]
mov esi [ esp + 0x84 ]
mov ecx ebx
call edx
movzx ecx [ esp + 0x18 ]
lea edx [ eax + ecx + 0x9 ]
cmp esi edx
jne r-xdata
mov edx [ esp + 0x6c ]
lea eax [ esp + 0x64 ]
mov [ esp + 0xac ] eax
xor eax eax
mov ecx r--data
mov [ esp + 0xa8 ] ecx
mov [ esp + 0xb0 ] eax
mov [ esp + 0xb8 ] eax
mov [ esp + 0xb4 ] edx
mov edx [ esp + 0x84 ]
mov [ esp + 0xd0 ] ecx
lea ecx [ esp + 0x7c ]
mov [ esp + 0xd4 ] ecx
mov [ esp + 0xd8 ] eax
mov [ esp + 0xe0 ] eax
mov [ esp + 0xdc ] edx
lea ecx [ esp + 0x24 ]
mov [ esp + 0xbc ] r--data
mov [ esp + 0xc0 ] ecx
mov [ esp + 0xc8 ] eax
mov [ esp + 0xc4 ] eax
mov [ esp + 0xcc ] 0xffffffff
lea esi [ edi + 0x50 ]
mov [ esp + 0x130 ] 0x7
call sub_1000a040
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
mov ecx ebx
call eax
xor eax eax
mov [ esp + 0x94 ] r--data
mov [ esp + 0x98 ] esi
mov [ esp + 0xa0 ] eax
mov [ esp + 0x9c ] eax
mov [ esp + 0xa4 ] 0xffffffff
mov [ esp + 0x130 ] 0x8
mov edx [ ebx ]
mov eax [ edx + 0x10 ]
mov ecx ebx
call eax
lea ecx [ esp + 0x94 ]
push ecx
call sub_1000adc0
add esp 0x4
test eax eax
je r-xdata
call sub_1000a040
mov ecx [ esp + 0x14 ]
push 0x1
lea edx [ esp + 0xac ]
push edx
sub esp 0x1c
mov eax esp
mov [ esp + 0x44 ] esp
push ecx
call sub_1001bcc0
push edi
lea edx [ esp + 0xe4 ]
lea ecx [ esp + 0xf8 ]
call sub_1001d580
test eax eax
jne r-xdata
lea esi [ esp + 0x104 ]
call sub_1000bb60
mov [ esp + 0x130 ] 0x2
mov [ esp + 0x3c ] edi
cmp [ esp + 0x2c ] 0x9
jb r-xdata
mov edi r--data
mov eax r--data
mov [ esp + 0x94 ] edi
mov [ esp + 0xbc ] edi
mov [ esp + 0xd0 ] eax
mov [ esp + 0xa8 ] eax
jmp r-xdata
mov eax [ esp + 0x28 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax + 0x5 ]
mov edx [ esp + 0x14 ]
mov [ edi + 0x4c ] eax
push edx
lea eax [ esp + 0xe8 ]
call sub_1001bcc0
lea esi [ edi + 0x30 ]
mov edi eax
mov [ esp + 0x130 ] 0x9
call sub_100025d0
lea esi [ esp + 0xe4 ]
mov [ esp + 0x130 ] 0x8
call sub_10002580
mov ebx [ esp + 0x14 ]
mov eax [ ebx + 0x28 ]
mov ecx [ ebx + 0x24 ]
cmp ecx eax
je r-xdata
mov eax [ esp + 0x2c ]
mov edi 0x9
cmp eax edi
jbe r-xdata
mov edx [ esp + 0x1c ]
push edx
push eax
call sub_100101a0
mov edi [ ebx + 0x28 ]
add esp 0x8
mov esi eax
call sub_1000ff40
mov [ ebx + 0x28 ] esi
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x54 ]
mov ebx [ esp + 0x60 ]
mov eax 0x1
mov [ edx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
jmp r-xdata
mov ecx [ esp + 0x28 ]
movzx esi [ ecx + edi ]
add edi 0x2
lea ecx [ esi + edi ]
mov [ esp + 0x20 ] ecx
cmp ecx eax
ja r-xdata
lea edx [ esi + 0x1 ]
push edx
call sub_1002eb41
mov ebx eax
mov eax [ esp + 0x2c ]
add esp 0x4
push esi
add eax edi
push eax
push ebx
call sub_10033950
add esp 0xc
mov eax ebx
lea edi [ esp + 0xe4 ]
mov [ esi + ebx ] 0x0
call sub_10002560
mov esi [ esp + 0x14 ]
mov ecx edi
add esi 0x24
mov [ esp + 0x130 ] 0xa
call sub_10013160
mov [ esp + 0x130 ] 0x8
cmp [ esp + 0xf8 ] 0x10
jb r-xdata
push ebx
mov [ esp + 0xfc ] 0xf
mov [ esp + 0xf8 ] 0x0
mov [ esp + 0xe8 ] 0x0
call sub_1002ee65
mov edi [ esp + 0x24 ]
mov eax [ esp + 0x30 ]
add esp 0x4
cmp edi eax
jb r-xdata
mov ecx [ esp + 0xe4 ]
push ecx
call sub_1002e8fb
add esp 0x4
sub_1001c350
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003d86c
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xd8 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ esp + 0x44 ] edi
xor ebx ebx
cmp [ edi + 0x2c ] ebx
je r-xdata
mov ecx [ esp + 0xd8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ edi + 0x68 ] ebx
je r-xdata
mov ecx r--data
mov eax 0x1
mov [ esp + 0x48 ] ecx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x5c ] ebx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x54 ] eax
mov [ esp + 0xe0 ] ebx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x20 ] eax
mov [ esp + 0x2c ] ecx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x3c ] ebx
mov [ esp + 0x38 ] eax
lea esi [ esp + 0x48 ]
mov [ esp + 0xe0 ] 0x2
call sub_10009ff0
test eax eax
je r-xdata
mov edi r--data
mov [ esp + 0x2c ] edi
cmp [ esp + 0x3c ] ebx
je r-xdata
lea esi [ esp + 0x14 ]
call sub_10009ff0
test eax eax
je r-xdata
mov esi r--data
mov [ esp + 0x2c ] esi
mov [ esp + 0x14 ] edi
cmp [ esp + 0x24 ] ebx
je r-xdata
cmp [ esp + 0x38 ] ebx
jne r-xdata
lea esi [ esp + 0x2c ]
call sub_10009ff0
test eax eax
je r-xdata
mov [ esp + 0x14 ] esi
mov [ esp + 0x48 ] edi
cmp [ esp + 0x58 ] ebx
je r-xdata
cmp [ esp + 0x20 ] ebx
jne r-xdata
mov eax [ esp + 0x30 ]
cmp eax ebx
je r-xdata
cmp [ esp + 0x40 ] ebx
jne r-xdata
mov esi r--data
lea eax [ esp + 0x48 ]
mov [ esp + 0xa8 ] esi
mov [ esp + 0xac ] eax
mov [ esp + 0xb4 ] ebx
mov [ esp + 0xb0 ] ebx
mov [ esp + 0xb8 ] 0xffffffff
push 0x1
lea ecx [ esp + 0x17 ]
push ecx
mov [ esp + 0xe8 ] 0x3
lea ecx [ esp + 0xb0 ]
mov [ esp + 0x1b ] bl
call sub_1000aa80
cmp eax 0x1
jne r-xdata
cmp [ esp + 0x54 ] ebx
jne r-xdata
mov eax [ esp + 0x18 ]
cmp eax ebx
je r-xdata
cmp [ esp + 0x28 ] ebx
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esp + 0x30 ] ebx
lea ecx [ esp + 0x2c ]
call sub_1000a130
lea ecx [ esp + 0x14 ]
call sub_1000a130
lea ecx [ esp + 0x48 ]
call sub_1000a130
mov ecx [ esp + 0xd8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x4
lea edx [ edi + 0x4c ]
push edx
lea ecx [ esp + 0xb0 ]
call sub_1000aa80
cmp eax 0x4
jne r-xdata
mov eax [ esp + 0x4c ]
cmp eax ebx
je r-xdata
cmp [ esp + 0x5c ] ebx
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esp + 0x18 ] ebx
lea eax [ esp + 0x14 ]
mov [ esp + 0x60 ] esi
mov [ esp + 0x64 ] eax
mov [ esp + 0x6c ] ebx
mov [ esp + 0x68 ] ebx
mov [ esp + 0x70 ] 0xffffffff
push 0x1
lea ecx [ esp + 0x16 ]
push ecx
mov [ esp + 0xe8 ] 0x4
lea ecx [ esp + 0x68 ]
mov [ esp + 0x1a ] bl
call sub_1000aa80
cmp eax 0x1
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esp + 0x60 ] r--data
lea eax [ edi + 0x6c ]
push 0x2
push eax
lea ecx [ esp + 0x68 ]
mov [ esp + 0x80 ] eax
call sub_1000aa80
cmp eax 0x2
jne r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x20 ]
push 0x4
lea eax [ esp + 0x80 ]
push eax
lea ecx [ esp + 0x68 ]
mov [ esp + 0x84 ] edx
call sub_1000aa80
cmp eax 0x4
jne r-xdata
push esi
call sub_10019290
mov esi eax
cmp esi ebx
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x10 ]
mov ecx esi
call eax
push 0x4
lea ecx [ esp + 0x78 ]
push ecx
lea ecx [ esp + 0x68 ]
mov [ esp + 0x7c ] eax
call sub_1000aa80
cmp eax 0x4
je r-xdata
mov eax [ esp + 0x74 ]
lea ecx [ esp + 0x60 ]
push ecx
mov ebx esi
call sub_1000adc0
mov edx [ esi ]
add esp 0x4
test eax eax
mov eax [ edx ]
push 0x1
mov ecx esi
je r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
call eax
mov edx [ esp + 0x50 ]
xor esi esi
mov eax r--data
lea ecx [ esp + 0x48 ]
mov [ esp + 0xbc ] eax
mov [ esp + 0xc0 ] ecx
mov [ esp + 0xc4 ] esi
mov [ esp + 0xcc ] esi
mov [ esp + 0xc8 ] edx
mov ecx [ esp + 0x1c ]
mov [ esp + 0x80 ] eax
lea eax [ esp + 0x14 ]
mov [ esp + 0x84 ] eax
mov [ esp + 0x88 ] esi
mov [ esp + 0x90 ] esi
mov [ esp + 0x8c ] ecx
lea edx [ esp + 0x2c ]
mov [ esp + 0x94 ] r--data
mov [ esp + 0x98 ] edx
mov [ esp + 0xa0 ] esi
mov [ esp + 0x9c ] esi
mov [ esp + 0xa4 ] 0xffffffff
push 0x1
lea eax [ esp + 0xc0 ]
push eax
mov eax [ esp + 0x4c ]
sub esp 0x1c
add eax 0x30
mov ecx esp
mov [ esp + 0x104 ] 0x7
lea ebx [ esp + 0xb8 ]
lea edi [ esp + 0xa4 ]
mov [ esp + 0xf4 ] esp
call sub_10002c80
mov ecx [ esp + 0x68 ]
push ecx
mov edx ebx
mov ecx edi
call sub_1001d580
cmp eax esi
jne r-xdata
mov ecx r--data
mov eax r--data
mov [ esp + 0x94 ] ecx
mov [ esp + 0x80 ] eax
mov [ esp + 0xbc ] eax
mov [ esp + 0x60 ] ecx
jmp r-xdata
cmp [ esp + 0x34 ] 0xd
jne r-xdata
mov ecx [ esp + 0x30 ]
cmp [ ecx + 0x4 ] 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] 0x1
mov eax [ ecx + 0x5 ]
mov ecx [ ecx + 0x9 ]
mov [ edx + 0x24 ] eax
mov [ edx + 0x28 ] ecx
cmp eax ecx
jb r-xdata
mov edx [ esp + 0x44 ]
mov ecx [ esp + 0x78 ]
xor eax eax
mov [ edx + 0x68 ] esi
mov [ ecx ] ax
sub_1001c7a0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003d7f4
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xe8 ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x18 ] ecx
xor ebx ebx
cmp [ ecx + 0x2c ] ebx
je r-xdata
mov ecx [ esp + 0xe8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi r--data
mov eax 0x1
mov [ esp + 0x4c ] edi
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] ebx
mov [ esp + 0x60 ] ebx
mov [ esp + 0x5c ] ebx
mov [ esp + 0x58 ] eax
mov [ esp + 0xf0 ] ebx
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x28 ] eax
mov [ esp + 0x34 ] edi
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x40 ] eax
lea esi [ esp + 0x1c ]
mov [ esp + 0xf0 ] 0x2
call sub_10009ff0
test eax eax
je r-xdata
mov [ esp + 0x34 ] edi
cmp [ esp + 0x44 ] ebx
je r-xdata
lea esi [ esp + 0x34 ]
call sub_10009ff0
test eax eax
je r-xdata
mov esi r--data
mov [ esp + 0x34 ] esi
mov [ esp + 0x1c ] edi
cmp [ esp + 0x2c ] ebx
je r-xdata
cmp [ esp + 0x40 ] ebx
jne r-xdata
mov esi r--data
lea eax [ esp + 0x4c ]
or edi 0xffffffff
mov [ esp + 0xb8 ] esi
mov [ esp + 0xbc ] eax
mov [ esp + 0xc4 ] ebx
mov [ esp + 0xc0 ] ebx
mov [ esp + 0xc8 ] edi
push 0x1
lea ecx [ esp + 0x1a ]
push ecx
mov [ esp + 0xf8 ] 0x3
lea ecx [ esp + 0xc0 ]
mov [ esp + 0x1e ] bl
call sub_1000aa80
cmp eax 0x1
jne r-xdata
mov [ esp + 0x1c ] esi
mov [ esp + 0x4c ] edi
cmp [ esp + 0x5c ] ebx
je r-xdata
cmp [ esp + 0x28 ] ebx
jne r-xdata
mov eax [ esp + 0x38 ]
cmp eax ebx
je r-xdata
cmp [ esp + 0x48 ] ebx
jne r-xdata
lea ecx [ esp + 0x34 ]
call sub_1000a130
lea ecx [ esp + 0x1c ]
call sub_1000a130
lea ecx [ esp + 0x4c ]
call sub_1000a130
mov ecx [ esp + 0xe8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ esp + 0x18 ]
push 0x4
add edx 0x4c
push edx
lea ecx [ esp + 0xc0 ]
call sub_1000aa80
cmp eax 0x4
jne r-xdata
cmp [ esp + 0x58 ] ebx
jne r-xdata
mov eax [ esp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ esp + 0x30 ] ebx
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esp + 0x38 ] ebx
lea eax [ esp + 0x1c ]
mov [ esp + 0xa4 ] esi
mov [ esp + 0xa8 ] eax
mov [ esp + 0xb0 ] ebx
mov [ esp + 0xac ] ebx
mov [ esp + 0xb4 ] edi
push 0x1
lea ecx [ esp + 0x1b ]
push ecx
mov [ esp + 0xf8 ] 0x4
lea ecx [ esp + 0xac ]
mov [ esp + 0x1f ] 0x1f
call sub_1000aa80
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x50 ]
cmp eax ebx
je r-xdata
cmp [ esp + 0x60 ] ebx
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esp + 0x20 ] ebx
mov esi [ ebp + 0x8 ]
mov edx [ esi ]
mov eax [ edx + 0x10 ]
mov ecx esi
call eax
push 0x4
lea ecx [ esp + 0x68 ]
push ecx
lea ecx [ esp + 0xac ]
mov [ esp + 0x6c ] eax
call sub_1000aa80
cmp eax 0x4
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov edx [ esi ]
mov eax [ edx + 0x10 ]
mov ecx esi
call eax
mov edx [ esp + 0x54 ]
mov eax r--data
lea ecx [ esp + 0x4c ]
mov [ esp + 0x90 ] eax
mov [ esp + 0x94 ] ecx
mov [ esp + 0x98 ] ebx
mov [ esp + 0xa0 ] ebx
mov [ esp + 0x9c ] edx
mov ecx [ esp + 0x24 ]
mov [ esp + 0x68 ] eax
lea eax [ esp + 0x1c ]
mov [ esp + 0x6c ] eax
mov [ esp + 0x70 ] ebx
mov [ esp + 0x78 ] ebx
mov [ esp + 0x74 ] ecx
lea edx [ esp + 0x34 ]
mov [ esp + 0x7c ] r--data
mov [ esp + 0x80 ] edx
mov [ esp + 0x88 ] ebx
mov [ esp + 0x84 ] ebx
mov [ esp + 0x8c ] edi
push ebx
lea eax [ esp + 0x94 ]
push eax
mov eax [ esp + 0x20 ]
sub esp 0x1c
add eax 0x30
mov ecx esp
mov [ esp + 0x114 ] 0x7
lea edi [ esp + 0xa0 ]
mov [ esp + 0x104 ] esp
call sub_10002c80
mov ecx [ esp + 0x3c ]
push ecx
mov edx edi
lea ecx [ esp + 0x90 ]
call sub_1001d580
cmp eax ebx
jne r-xdata
mov eax r--data
mov [ esp + 0x7c ] r--data
mov [ esp + 0x68 ] eax
mov [ esp + 0x90 ] eax
mov eax [ esp + 0x3c ]
cmp eax ebx
jbe r-xdata
lea edx [ esp + 0x34 ]
mov [ esi + 0x4 ] 0x1
mov [ esp + 0xcc ] r--data
mov [ esp + 0xd0 ] edx
mov [ esp + 0xd4 ] ebx
mov [ esp + 0xdc ] ebx
mov [ esp + 0xd8 ] eax
lea ebx [ esp + 0xcc ]
mov ecx esi
mov [ esp + 0xf0 ] 0x8
call sub_10018ff0
sub_1001cb60
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003d779
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc0
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xd0 ]
mov [ fs : 0x0 ] eax
mov edi ecx
xor ebx ebx
cmp [ edi + 0x2c ] ebx
je r-xdata
mov ecx [ esp + 0xd0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx r--data
mov eax 0x1
mov [ edi + 0x68 ] ebx
mov [ esp + 0x44 ] ecx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x54 ] ebx
mov [ esp + 0x50 ] eax
mov [ esp + 0xd8 ] ebx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x20 ] eax
mov [ esp + 0x2c ] ecx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x3c ] ebx
mov [ esp + 0x38 ] eax
lea esi [ esp + 0x14 ]
mov [ esp + 0xd8 ] 0x2
call sub_10009ff0
test eax eax
je r-xdata
mov edi r--data
mov [ esp + 0x2c ] edi
cmp [ esp + 0x3c ] ebx
je r-xdata
lea esi [ esp + 0x2c ]
call sub_10009ff0
test eax eax
je r-xdata
mov esi r--data
mov [ esp + 0x2c ] esi
mov [ esp + 0x14 ] edi
cmp [ esp + 0x24 ] ebx
je r-xdata
cmp [ esp + 0x38 ] ebx
jne r-xdata
mov esi r--data
lea eax [ esp + 0x44 ]
mov [ esp + 0xb4 ] esi
mov [ esp + 0xb8 ] eax
mov [ esp + 0xc0 ] ebx
mov [ esp + 0xbc ] ebx
mov [ esp + 0xc4 ] 0xffffffff
push 0x1
lea ecx [ esp + 0x17 ]
push ecx
mov [ esp + 0xe0 ] 0x3
lea ecx [ esp + 0xbc ]
mov [ esp + 0x1b ] bl
call sub_1000aa80
cmp eax 0x1
jne r-xdata
mov [ esp + 0x14 ] esi
mov [ esp + 0x44 ] edi
cmp [ esp + 0x54 ] ebx
je r-xdata
cmp [ esp + 0x20 ] ebx
jne r-xdata
mov eax [ esp + 0x30 ]
cmp eax ebx
je r-xdata
cmp [ esp + 0x40 ] ebx
jne r-xdata
lea ecx [ esp + 0x2c ]
call sub_1000a130
lea ecx [ esp + 0x14 ]
call sub_1000a130
lea ecx [ esp + 0x44 ]
call sub_1000a130
mov ecx [ esp + 0xd0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x4
lea edx [ edi + 0x4c ]
push edx
lea ecx [ esp + 0xbc ]
call sub_1000aa80
cmp eax 0x4
jne r-xdata
cmp [ esp + 0x50 ] ebx
jne r-xdata
mov eax [ esp + 0x18 ]
cmp eax ebx
je r-xdata
cmp [ esp + 0x28 ] ebx
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esp + 0x30 ] ebx
lea eax [ esp + 0x14 ]
mov [ esp + 0x60 ] esi
mov [ esp + 0x64 ] eax
mov [ esp + 0x6c ] ebx
mov [ esp + 0x68 ] ebx
mov [ esp + 0x70 ] 0xffffffff
push 0x1
lea ecx [ esp + 0x16 ]
push ecx
mov [ esp + 0xe0 ] 0x4
lea ecx [ esp + 0x68 ]
mov [ esp + 0x1a ] 0x2
call sub_1000aa80
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x48 ]
cmp eax ebx
je r-xdata
cmp [ esp + 0x58 ] ebx
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esp + 0x18 ] ebx
mov [ esp + 0x60 ] r--data
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x28 ]
push 0x4
lea eax [ esp + 0x78 ]
push eax
lea ecx [ esp + 0x68 ]
mov [ esp + 0x7c ] edx
call sub_1000aa80
cmp eax 0x4
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
push esi
call sub_10018bb0
mov esi eax
mov edx [ esi ]
mov eax [ edx + 0x10 ]
mov ecx esi
call eax
movzx ecx ax
push 0x2
lea edx [ esp + 0x60 ]
mov [ esp + 0x60 ] ecx
push edx
lea ecx [ esp + 0x68 ]
call sub_1000aa80
cmp eax 0x2
je r-xdata
movzx eax [ esp + 0x5c ]
lea ecx [ esp + 0x60 ]
push ecx
mov ebx esi
call sub_1000adc0
mov edx [ esi ]
add esp 0x4
test eax eax
mov eax [ edx ]
push 0x1
mov ecx esi
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
call eax
mov edx [ esp + 0x4c ]
xor esi esi
mov eax r--data
lea ecx [ esp + 0x44 ]
mov [ esp + 0xa0 ] eax
mov [ esp + 0xa4 ] ecx
mov [ esp + 0xa8 ] esi
mov [ esp + 0xb0 ] esi
mov [ esp + 0xac ] edx
mov ecx [ esp + 0x1c ]
mov [ esp + 0x8c ] eax
lea eax [ esp + 0x14 ]
mov [ esp + 0x90 ] eax
mov [ esp + 0x94 ] esi
mov [ esp + 0x9c ] esi
mov [ esp + 0x98 ] ecx
lea edx [ esp + 0x2c ]
mov [ esp + 0x78 ] r--data
mov [ esp + 0x7c ] edx
mov [ esp + 0x84 ] esi
mov [ esp + 0x80 ] esi
mov [ esp + 0x88 ] 0xffffffff
push 0x1
lea eax [ esp + 0xa4 ]
push eax
sub esp 0x1c
lea eax [ edi + 0x30 ]
mov ecx esp
mov [ esp + 0xfc ] 0x7
lea ebx [ esp + 0x9c ]
mov [ esp + 0xec ] esp
call sub_10002c80
push edi
mov edx ebx
lea ecx [ esp + 0xb4 ]
call sub_1001d580
cmp eax esi
jne r-xdata
call eax
jmp r-xdata
mov ecx r--data
mov eax r--data
mov [ esp + 0x78 ] ecx
mov [ esp + 0x8c ] eax
mov [ esp + 0xa0 ] eax
mov [ esp + 0x60 ] ecx
jmp r-xdata
mov ecx [ esp + 0x34 ]
mov eax [ esp + 0x30 ]
cmp ecx 0x5
jb r-xdata
cmp ecx 0xb
jne r-xdata
cmp [ eax + 0x4 ] 0x2
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc ] 0x1
movzx ecx [ eax + 0x5 ]
mov eax [ eax + 0x7 ]
mov [ edi + 0x6c ] cx
mov ecx [ ebp + 0x8 ]
mov edx 0x1
mov [ edi + 0x68 ] edx
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] eax
jmp r-xdata
sub_1001cf70
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a95e
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
mov ecx [ esi + 0x24 ]
xor ebx ebx
cmp ecx ebx
je r-xdata
mov ecx [ esi + 0x20 ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x24 ] ebx
mov ecx [ esi + 0x28 ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x20 ] ebx
mov ecx [ esi + 0x70 ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x28 ] ebx
mov ecx [ esi + 0x78 ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x70 ] ebx
mov [ esi + 0x50 ] r--data
cmp [ esi + 0x60 ] ebx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x78 ] ebx
mov [ esi + 0x50 ] r--data
cmp [ esi + 0x44 ] 0x10
jb r-xdata
cmp [ esi + 0x5c ] ebx
jne r-xdata
mov [ esi + 0x44 ] 0xf
mov [ esi + 0x40 ] ebx
lea ecx [ esi + 0x8 ]
mov [ esi + 0x30 ] bl
push ecx
mov [ esi ] r--data
call [ DeleteCriticalSection@IAT ]
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x30 ]
push eax
call sub_1002e8fb
add esp 0x4
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
cmp [ esi + 0x64 ] ebx
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x54 ] ebx
sub_1001d080
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1001cf70
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1001d0b0
lea edx [ eax - 0x30 ]
cmp dl 0x9
ja r-xdata
lea edx [ eax - 0x41 ]
cmp dl 0x5
ja r-xdata
sub al 0x30
jmp r-xdata
lea edx [ eax - 0x61 ]
cmp dl 0x5
ja r-xdata
sub al 0x37
jmp r-xdata
lea edx [ ecx - 0x30 ]
cmp dl 0x9
ja r-xdata
xor al al
sub al 0x57
jmp r-xdata
lea edx [ ecx - 0x41 ]
cmp dl 0x5
ja r-xdata
sub cl 0x30
movsx eax al
movsx ecx cl
shl eax 0x4
or eax ecx
retn
lea edx [ ecx - 0x61 ]
cmp dl 0x5
ja r-xdata
sub cl 0x37
movsx eax al
movsx ecx cl
shl eax 0x4
or eax ecx
retn
movsx eax al
xor cl cl
movsx ecx cl
shl eax 0x4
or eax ecx
retn
sub cl 0x57
movsx eax al
movsx ecx cl
shl eax 0x4
or eax ecx
retn
sub_1001d130
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a91b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x20 ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
push 0x1
call edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x50 ]
mov edx [ eax + 0xc ]
add edi 0x50
mov ecx edi
call edx
mov [ ebp - 0x50 ] edi
xor edi edi
mov [ ebp - 0x54 ] r--data
mov [ ebp - 0x4c ] edi
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
mov edx [ eax + 0x8 ]
lea ecx [ ebp - 0x54 ]
push ecx
mov ecx ebx
call edx
mov [ ebp - 0x14 ] eax
cmp eax edi
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov ecx esi
call edx
and eax 0xfffffffe
cmp eax 0x10
jb r-xdata
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov ecx esi
call edx
shr eax 0x1
push eax
call sub_1002eb41
mov [ ebp - 0x10 ] eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
add esp 0x4
mov ecx esi
call edx
test eax 0xfffffffe
jbe r-xdata
mov edx [ esi ]
mov eax [ edx + 0xc ]
mov ecx esi
call eax
mov edx [ ebp - 0x10 ]
shr eax 0x1
mov [ ebp - 0x7c ] eax
mov ecx r--data
xor edi edi
mov eax 0x1
mov [ ebp - 0x84 ] ecx
mov [ ebp - 0x80 ] edx
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x68 ] edi
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x4 ] 0x2
lea esi [ ebp - 0x6c ]
mov [ ebp - 0x78 ] eax
call sub_10009ff0
test eax eax
je r-xdata
lea esp [ esp ]
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
call edx
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov esi r--data
mov [ ebp - 0x6c ] esi
cmp [ ebp - 0x5c ] edi
je r-xdata
mov ecx [ ebp - 0x7c ]
lea eax [ ebp - 0x84 ]
mov [ ebp - 0x40 ] r--data
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x34 ] ecx
lea edx [ ebp - 0x40 ]
mov eax esi
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x1c ] 0xffffffff
mov esi [ ebp - 0x14 ]
lea eax [ ebp - 0x2c ]
push eax
push 0x1
mov [ ebp - 0x4 ] 0x4
mov edx [ ebx ]
mov edx [ edx + 0xc ]
lea ecx [ ebp - 0x18 ]
push ecx
push esi
mov ecx ebx
call edx
mov [ ebp - 0x14 ] eax
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
call edx
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
cmp [ ebp - 0x14 ] edi
jne r-xdata
mov eax [ esi + 0x4 ]
mov cl [ eax + edi * 2 + 0x1 ]
mov al [ eax + edi * 2 ]
call sub_1001d0b0
mov ecx [ ebp - 0x10 ]
mov [ edi + ecx ] al
mov edx [ esi ]
mov eax [ edx + 0xc ]
mov ecx esi
inc edi
call eax
shr eax 0x1
cmp edi eax
jb r-xdata
mov [ ebp - 0x6c ] r--data
mov [ ebp - 0x84 ] esi
cmp [ ebp - 0x74 ] edi
je r-xdata
cmp [ ebp - 0x60 ] edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x24 ]
cmp esi edi
je r-xdata
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x40 ] r--data
lea ecx [ ebp - 0x6c ]
cmp [ ebp - 0x78 ] edi
jne r-xdata
mov eax [ ebp - 0x68 ]
cmp eax edi
je r-xdata
cmp [ ebp - 0x58 ] edi
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x68 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
add eax 0xfffffffc
add ecx 0x4
push eax
push ecx
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov ecx esi
call edx
mov edx [ ebp - 0x68 ]
cmp [ edx ] eax
jne r-xdata
mov eax [ ebp - 0x80 ]
cmp eax edi
je r-xdata
cmp [ ebp - 0x70 ] edi
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ ebp - 0x68 ] edi
mov esi [ ebp - 0x64 ]
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
add esi 0xfffffffc
add edx 0x4
push esi
push edx
mov edx [ eax + 0xc ]
call edx
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x40 ] r--data
lea ecx [ ebp - 0x6c ]
cmp esi eax
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
call sub_1000a130
lea ecx [ ebp - 0x84 ]
call sub_1000a130
jmp r-xdata
call sub_1000a130
lea ecx [ ebp - 0x84 ]
call sub_1000a130
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_1001d410
push esi
push edi
mov edi eax
lea esi [ edi + 0x7c ]
push esi
call [ InterlockedIncrement@IAT ]
mov eax [ esi ]
cmp eax 0xd
jbe r-xdata
pop edi
pop esi
retn
push 0x1
sub edi 0xffffff80
push edi
call [ InterlockedExchange@IAT ]
sub_1001d440
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d709
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x8 ]
push eax
mov [ esi ] r--data
call [ InitializeCriticalSection@IAT ]
xor ebx ebx
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ esi ] r--data
mov [ esi + 0x44 ] 0xf
mov [ esi + 0x40 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x50 ] r--data
mov [ esi + 0x54 ] ebx
mov [ esi + 0x58 ] ebx
mov [ esi + 0x64 ] ebx
mov [ esi + 0x60 ] ebx
mov [ esi + 0x5c ] 0x1
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0x18 ]
mov [ esi + 0x7c ] ebx
mov [ esi + 0x80 ] ecx
mov [ esi + 0x28 ] edx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x20 ] edi
mov eax [ edi ]
mov edx [ eax + 0x20 ]
mov ecx edi
call edx
mov [ esi + 0x24 ] eax
cmp [ esi + 0x5c ] ebx
jne r-xdata
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x94 ]
call sub_1002a3b0
push 0x18
mov edi eax
call sub_1002e957
add esp 0x4
mov [ ebp + 0x18 ] eax
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
cmp [ esi + 0x64 ] ebx
je r-xdata
xor eax eax
push edi
push eax
call sub_1002bad0
jmp r-xdata
mov [ esi + 0x5c ] 0x1
mov eax [ esi + 0x58 ]
mov edi [ esi + 0x54 ]
push eax
call sub_1002e957
add esp 0x4
mov [ esi + 0x54 ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x70 ] eax
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
push 0x0
call eax
mov ecx [ ebp + 0x14 ]
xor edx edx
mov [ esi + 0x74 ] eax
mov [ esi + 0x78 ] ecx
mov [ esi + 0x6c ] dx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx [ esi + 0x58 ]
push ecx
push edi
push eax
call sub_10033950
add esp 0xc
mov [ esi + 0x60 ] 0x1
sub_1001d580
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d6c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x124
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x28 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x94 ] edx
xor esi esi
mov [ ebp - 0x4 ] esi
cmp [ eax + 0x74 ] esi
jne r-xdata
mov eax 0x1
mov [ ebp - 0x30 ] r--data
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] al
mov edx [ edi ]
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4c ] r--data
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x4 ] 0x2
mov edx [ edi ]
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
lea ecx [ ebp - 0x4c ]
push ecx
mov ebx edi
call sub_1000adc0
add esp 0x4
test eax eax
jne r-xdata
cmp [ ebp + 0x20 ] 0x10
jb r-xdata
mov eax [ edi ]
mov edx [ eax + 0x10 ]
mov ecx edi
call edx
lea ebx [ eax + 0x4 ]
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x130 ] r--data
mov [ ebp - 0x12c ] eax
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x128 ] esi
mov [ ebp - 0x120 ] 0x4
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x3
mov ecx [ ecx + 0x20 ]
mov edx [ ecx ]
mov eax [ edx + 0x24 ]
push esi
call eax
mov esi eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov [ ebp - 0xec ] eax
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
mov edx [ ebp - 0x30 ]
mov eax [ edx + 0x8 ]
push ebx
push 0x4
lea ecx [ ebp - 0xec ]
push ecx
lea ecx [ ebp - 0x30 ]
call eax
mov [ ebp - 0x128 ] eax
cmp eax 0x4
je r-xdata
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4c ] r--data
call sub_1000a130
cmp [ ebp + 0x20 ] 0x10
jb r-xdata
mov eax 0x5
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
mov eax [ ebp + 0xc ]
push eax
call sub_1002e8fb
add esp 0x4
mov ebx [ ebp - 0x10 ]
mov edx [ ebx ]
mov eax [ edx + 0x10 ]
mov ecx ebx
call eax
mov edx [ edi ]
mov esi eax
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
add eax 0x8
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x60 ] r--data
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x4 ] 0x4
mov edx [ ebx ]
mov eax [ edx + 0x10 ]
mov ecx ebx
call eax
lea ecx [ ebp - 0x60 ]
push ecx
call sub_1000adc0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4c ] r--data
mov edx [ ebp + 0xc ]
push edx
call sub_1002e8fb
add esp 0x4
mov eax 0x5
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
mov esi r--data
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x4c ] esi
jmp r-xdata
mov edx [ edi ]
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x108 ] r--data
mov [ ebp - 0x104 ] ecx
mov [ ebp - 0xfc ] eax
mov [ ebp - 0x100 ] 0x0
mov [ ebp - 0xf8 ] 0x4
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x5
mov ebx [ edx + 0x24 ]
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x30 ]
call sub_1000a130
lea esi [ ebp + 0xc ]
call sub_10002580
mov eax 0x5
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
mov eax [ ebx ]
mov edx [ eax + 0x4 ]
mov ecx ebx
call edx
mov eax [ ebp - 0x2c ]
mov edx [ edi ]
mov esi [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx ]
add eax 0x8
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
mov edx [ edi ]
sub esi eax
mov eax [ edx + 0x10 ]
sub esi 0x4
push esi
mov ecx edi
call eax
mov ecx [ ebp - 0x10 ]
lea edx [ eax + ecx + 0x4 ]
mov eax [ ebp - 0x18 ]
push edx
mov edx [ eax ]
mov ecx ebx
call edx
mov eax [ ebx ]
mov edx [ eax + 0xc ]
mov ecx ebx
call edx
mov [ ebp - 0xf4 ] eax
push 0x4
lea eax [ ebp - 0xf4 ]
push eax
lea ecx [ ebp - 0x108 ]
call sub_1000aa80
cmp eax 0x4
jne r-xdata
xor eax eax
mov [ ebp - 0x7c ] r--data
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x70 ] 0x1
lea esi [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x6
call sub_10009ff0
test eax eax
je r-xdata
lea ecx [ ebp - 0x7c ]
call sub_1000a130
mov esi [ ebp - 0x14 ]
mov ecx [ esi + 0x20 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
push 0x1
call eax
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ esi + 0x28 ]
mov edx [ esi + 0x50 ]
mov eax [ edx + 0xc ]
add esi 0x50
mov [ ebp - 0x10 ] ecx
mov ecx esi
call eax
mov [ ebp - 0x8c ] esi
xor esi esi
mov [ ebp - 0x90 ] r--data
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x80 ] esi
mov [ ebp - 0x84 ] eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x7
lea eax [ ebp - 0x90 ]
cmp [ ecx + 0x2c ] esi
jne r-xdata
mov edx [ ebx ]
push eax
mov eax [ edx + 0x8 ]
mov ecx ebx
call eax
mov [ ebp - 0x10 ] eax
cmp eax esi
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ edi ]
mov eax [ edx + 0x10 ]
mov esi [ ebp - 0x28 ]
mov ecx edi
call eax
mov edx [ edi ]
sub esi eax
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0xa8 ] r--data
mov [ ebp - 0xa4 ] ecx
mov [ ebp - 0xa0 ] 0x0
mov [ ebp - 0x98 ] eax
mov [ ebp - 0x9c ] esi
mov [ ebp - 0x4 ] 0x8
mov eax [ edi ]
lea edx [ ebp - 0xa8 ]
mov [ ebp - 0xf0 ] edx
mov edx [ eax + 0x10 ]
mov ecx edi
call edx
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0xbc ] r--data
mov [ ebp - 0xb8 ] ecx
mov [ ebp - 0xb0 ] eax
mov [ ebp - 0xb4 ] 0x0
mov [ ebp - 0xac ] 0xffffffff
lea eax [ ebp - 0xbc ]
push eax
mov [ ebp - 0x4 ] 0x9
mov edx [ ebx ]
mov esi [ ebp - 0x10 ]
mov edx [ edx + 0xc ]
push 0x1
lea ecx [ ebp - 0xf0 ]
push ecx
push esi
mov ecx ebx
call edx
mov [ ebp - 0x10 ] eax
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
call edx
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
xor esi esi
cmp [ ebp - 0x10 ] esi
jne r-xdata
mov edx [ ebx ]
mov eax [ edx ]
push 0x1
mov ecx ebx
call eax
mov [ ebp - 0x90 ] r--data
mov eax [ edi ]
mov edx [ eax + 0x4 ]
mov ecx edi
call edx
mov eax [ edi ]
mov edx [ eax + 0x10 ]
mov ecx edi
call edx
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0xd0 ] r--data
mov [ ebp - 0xcc ] ecx
mov [ ebp - 0xc4 ] esi
mov [ ebp - 0xc8 ] esi
mov [ ebp - 0xc0 ] eax
mov [ ebp - 0x4 ] 0xa
mov edx [ edi ]
mov eax [ edx + 0x10 ]
mov ecx edi
call eax
lea ecx [ ebp - 0xd0 ]
push ecx
mov ebx edi
call sub_1000adc0
add esp 0x4
test eax eax
je r-xdata
mov esi r--data
mov esi r--data
mov [ ebp - 0xd0 ] esi
jmp r-xdata
mov esi [ ebp - 0x14 ]
mov ecx [ esi + 0x74 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov edi eax
xor ebx ebx
cmp edi ebx
je r-xdata
mov eax r--data
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0xbc ] esi
mov [ ebp - 0xa8 ] eax
mov [ ebp - 0x90 ] eax
call sub_1000a130
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x4c ] esi
jmp r-xdata
cmp [ ebp + 0x20 ] 0x10
mov eax [ ebp + 0xc ]
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x10 ] ebx
jae r-xdata
mov edx [ esi + 0x74 ]
lea ecx [ ebp - 0x7c ]
push ecx
push eax
mov eax [ esi + 0x78 ]
push edx
push eax
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x38 ]
call sub_1001a430
test eax eax
jne r-xdata
lea eax [ ebp + 0xc ]
mov ecx [ esi + 0x80 ]
mov eax 0x1
mov [ ebp - 0x18 ] eax
test ecx ecx
jne r-xdata
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
mov [ ebp - 0x10 ] 0x5
mov [ ebp - 0xe8 ] r--data
mov [ ebp - 0xe4 ] ebx
mov [ ebp - 0xe0 ] ebx
mov [ ebp - 0xd4 ] ebx
mov [ ebp - 0xd8 ] ebx
mov [ ebp - 0xdc ] eax
lea esi [ ebp - 0xe8 ]
mov [ ebp - 0x4 ] 0xb
call sub_10009ff0
test eax eax
jne r-xdata
mov ecx [ ebp + 0x1c ]
add ecx [ ebp - 0x10 ]
cmp ecx 0x222
jbe r-xdata
xor ebx ebx
lea ecx [ ebp - 0xe8 ]
mov [ ebp - 0x11c ] r--data
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x110 ] ebx
mov [ ebp - 0x114 ] ebx
mov [ ebp - 0x10c ] 0xffffffff
mov [ ebp - 0x4 ] 0xc
mov esi [ ebp - 0x38 ]
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x64 ] ebx
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov ecx [ ebp - 0x38 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x18 ] ebx
mov eax [ edi ]
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x64 ]
push ecx
lea edx [ ebp - 0x34 ]
push edx
push esi
mov ecx edi
call eax
test eax eax
je r-xdata
mov edx [ edi ]
mov edx [ edx + 0x4 ]
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x34 ]
push ecx
push esi
mov ecx edi
call edx
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
test esi esi
je r-xdata
mov ecx [ ebp - 0x64 ]
push ecx
push eax
lea ecx [ ebp - 0x11c ]
call sub_1000aa80
mov edx [ ebp - 0x34 ]
push edx
call sub_1002e8fb
add esp 0x4
mov eax [ ebp - 0x34 ]
test eax eax
je r-xdata
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
test ebx ebx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
cmp [ ebp + 0x2c ] ebx
je r-xdata
lea ecx [ ebp - 0xe8 ]
call sub_1000a130
mov eax r--data
mov esi r--data
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0xd0 ] esi
mov [ ebp - 0xbc ] esi
mov [ ebp - 0xa8 ] eax
mov [ ebp - 0x90 ] eax
call sub_1000a130
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x4c ] esi
call sub_1000a130
lea esi [ ebp + 0xc ]
call sub_10002580
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
mov eax [ ebp - 0x14 ]
call sub_1001d410
mov eax [ ebp - 0xe0 ]
mov ecx [ ebp - 0x94 ]
mov edx [ ecx ]
mov edx [ edx + 0xc ]
push eax
mov esi eax
mov eax [ ebp - 0xe4 ]
push eax
call edx
cmp esi eax
je r-xdata
mov eax [ ebp - 0x94 ]
mov esi [ ebp - 0x14 ]
push eax
push esi
lea ecx [ ebp - 0xe8 ]
call sub_1001d130
test eax eax
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x18 ] eax
jne r-xdata
lea ecx [ ebp - 0xe8 ]
call sub_1000a130
mov esi r--data
mov [ ebp - 0xd0 ] esi
jmp r-xdata
mov eax esi
call sub_1001d410
jmp r-xdata
sub_1001dce0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003dca9
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc0
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xd0 ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x18 ] ecx
xor ebx ebx
cmp [ ecx + 0x2c ] ebx
je r-xdata
mov ecx [ esp + 0xd0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi r--data
mov eax 0x1
mov [ esp + 0x4c ] edi
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] ebx
mov [ esp + 0x60 ] ebx
mov [ esp + 0x5c ] ebx
mov [ esp + 0x58 ] eax
mov [ esp + 0xd8 ] ebx
mov [ esp + 0x34 ] edi
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x40 ] eax
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x28 ] eax
lea esi [ esp + 0x34 ]
mov [ esp + 0xd8 ] 0x2
call sub_10009ff0
test eax eax
je r-xdata
mov [ esp + 0x1c ] edi
cmp [ esp + 0x2c ] ebx
je r-xdata
lea esi [ esp + 0x1c ]
call sub_10009ff0
test eax eax
je r-xdata
mov esi r--data
mov [ esp + 0x1c ] esi
mov [ esp + 0x34 ] edi
cmp [ esp + 0x44 ] ebx
je r-xdata
cmp [ esp + 0x28 ] ebx
jne r-xdata
mov edi r--data
lea eax [ esp + 0x4c ]
or esi 0xffffffff
mov [ esp + 0xa0 ] edi
mov [ esp + 0xa4 ] eax
mov [ esp + 0xac ] ebx
mov [ esp + 0xa8 ] ebx
mov [ esp + 0xb0 ] esi
push 0x1
lea ecx [ esp + 0x1a ]
push ecx
mov [ esp + 0xe0 ] 0x3
lea ecx [ esp + 0xa8 ]
mov [ esp + 0x1e ] bl
call sub_1000aa80
cmp eax 0x1
jne r-xdata
mov [ esp + 0x34 ] esi
mov [ esp + 0x4c ] edi
cmp [ esp + 0x5c ] ebx
je r-xdata
cmp [ esp + 0x40 ] ebx
jne r-xdata
mov eax [ esp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ esp + 0x30 ] ebx
jne r-xdata
lea ecx [ esp + 0x1c ]
call sub_1000a130
lea ecx [ esp + 0x34 ]
call sub_1000a130
lea ecx [ esp + 0x4c ]
call sub_1000a130
mov ecx [ esp + 0xd0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ esp + 0x18 ]
push 0x4
add edx 0x4c
push edx
lea ecx [ esp + 0xa8 ]
call sub_1000aa80
cmp eax 0x4
jne r-xdata
cmp [ esp + 0x58 ] ebx
jne r-xdata
mov eax [ esp + 0x38 ]
cmp eax ebx
je r-xdata
cmp [ esp + 0x48 ] ebx
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esp + 0x20 ] ebx
lea eax [ esp + 0x34 ]
mov [ esp + 0xb4 ] edi
mov [ esp + 0xb8 ] eax
mov [ esp + 0xc0 ] ebx
mov [ esp + 0xbc ] ebx
mov [ esp + 0xc4 ] esi
push 0x1
lea ecx [ esp + 0x1b ]
push ecx
mov [ esp + 0xe0 ] 0x4
lea ecx [ esp + 0xbc ]
mov [ esp + 0x1f ] 0xf
call sub_1000aa80
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x50 ]
cmp eax ebx
je r-xdata
cmp [ esp + 0x60 ] ebx
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esp + 0x38 ] ebx
mov ecx [ esp + 0x54 ]
mov eax r--data
lea edx [ esp + 0x4c ]
mov [ esp + 0x8c ] eax
mov [ esp + 0x90 ] edx
mov [ esp + 0x94 ] ebx
mov [ esp + 0x9c ] ebx
mov [ esp + 0x98 ] ecx
mov [ esp + 0x64 ] eax
mov eax [ esp + 0x3c ]
lea edx [ esp + 0x34 ]
mov [ esp + 0x68 ] edx
mov [ esp + 0x6c ] ebx
mov [ esp + 0x74 ] ebx
mov [ esp + 0x70 ] eax
lea ecx [ esp + 0x1c ]
mov [ esp + 0x78 ] edi
mov [ esp + 0x7c ] ecx
mov [ esp + 0x84 ] ebx
mov [ esp + 0x80 ] ebx
mov [ esp + 0x88 ] esi
mov eax [ esp + 0x18 ]
push 0x1
lea edx [ esp + 0x90 ]
push edx
sub esp 0x1c
add eax 0x30
mov ecx esp
mov [ esp + 0xfc ] 0x7
lea esi [ esp + 0x9c ]
lea edi [ esp + 0x88 ]
mov [ esp + 0xec ] esp
call sub_10002c80
mov eax [ esp + 0x3c ]
push eax
mov edx esi
mov ecx edi
call sub_1001d580
cmp eax ebx
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov eax r--data
mov [ esp + 0x78 ] r--data
mov [ esp + 0x64 ] eax
mov [ esp + 0x8c ] eax
mov esi 0x8
cmp [ esp + 0x24 ] esi
jb r-xdata
mov ecx [ esp + 0x20 ]
mov eax [ ecx + 0x4 ]
mov edi [ ebp + 0x8 ]
mov [ edi + 0x4 ] 0x1
cmp eax ebx
jbe r-xdata
mov ebx eax
mov edx [ esp + 0x20 ]
mov eax [ esi + edx ]
push eax
mov eax edi
call sub_1001bd00
add esi 0x4
dec ebx
jne r-xdata
sub_1001e050
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10017e20
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1001e080
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push edi
mov edi ecx
mov ecx esi
call edx
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0xc ]
mov ecx esi
call eax
test eax eax
je r-xdata
mov eax [ edi + 0x60 ]
mov ecx [ edi + 0x64 ]
mov [ edi + 0x8 ] 0x1
mov [ edi + 0x58 ] eax
mov [ edi + 0x5c ] ecx
pop edi
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x28 ]
sub ecx [ esi + 0x24 ]
add esi 0x24
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
je r-xdata
mov ecx [ edi + 0x68 ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
sub_1001e0f0
push ebp
mov ebp esp
xor ecx ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x34 ] ecx
mov [ eax + 0x1c ] edx
mov edx 0x38074300
mov [ eax + 0x20 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] ecx
mov [ eax + 0x48 ] ecx
mov [ eax + 0x4c ] ecx
mov [ eax + 0x60 ] edx
mov [ eax + 0x64 ] ecx
mov [ eax + 0x58 ] edx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x5c ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x50 ] 0x6e938c80
mov [ eax + 0x54 ] 0x5
mov [ eax + 0x14 ] edx
mov [ eax + 0x18 ] 0x146d
mov [ eax ] r--data
mov [ eax + 0x68 ] ecx
pop ebp
retn 0x8
sub_1001e160
push ebp
mov ebp esp
xor ecx ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x30 ] ecx
mov [ eax + 0x34 ] ecx
mov [ eax + 0x1c ] edx
mov edx 0xa21fe80
mov [ eax + 0x60 ] edx
mov [ eax + 0x58 ] edx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x20 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x44 ] ecx
mov [ eax + 0x48 ] ecx
mov [ eax + 0x4c ] ecx
mov [ eax + 0x50 ] 0xbf09ea80
mov [ eax + 0x54 ] 0x3
mov [ eax + 0x64 ] ecx
mov [ eax + 0x5c ] ecx
mov [ eax + 0x14 ] edx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x18 ] 0x146d
mov [ eax ] r--data
pop ebp
retn 0x4
sub_1001e1d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d048
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov ebx ecx
mov ecx [ ebx + 0x24 ]
xor edi edi
mov [ ebp - 0x6c ] esi
cmp ecx edi
je r-xdata
push esi
lea eax [ ebp - 0x48 ]
call sub_1001bcc0
mov [ ebp - 0x4 ] edi
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
lea ecx [ ebx + 0x28 ]
push edi
mov eax r--data
mov [ ebx + 0x24 ] edi
call sub_1000bc70
mov edx [ ebp - 0x38 ]
xor ecx ecx
mov [ ebp - 0x64 ] cx
push edx
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x50 ] 0x7
mov [ ebp - 0x54 ] edi
call sub_1000bc70
lea esi [ ebx + 0x28 ]
lea edi [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x68 ] esi
call sub_10013f90
mov edi 0x8
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x50 ] edi
jb r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x14 ] edi
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_1002e8fb
add esp 0x4
push r--data
push esi
call sub_1002eebe
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
mov esi [ esi ]
add edi 0x2
mov eax edi
sub eax esi
sar eax 0x1
dec eax
xor edx edx
push eax
mov eax esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] dx
call sub_1000bc70
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x2c ]
mov esi 0x8
cmp [ ebp - 0x18 ] esi
jae r-xdata
mov ecx [ ebx + 0x24 ]
test ecx ecx
je r-xdata
mov ecx [ ebx + 0x20 ]
mov edx [ ecx ]
push edi
push eax
mov eax [ edx + 0x8 ]
call eax
xor edi edi
mov [ ebx + 0x24 ] eax
cmp eax edi
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov ecx [ ebp - 0x68 ]
push edi
mov eax r--data
mov [ ebx + 0x24 ] edi
call sub_1000bc70
jmp r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x4 ]
call eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x48 ]
push ecx
mov ecx [ ebp - 0x6c ]
mov [ ecx + 0x20 ] 0x1
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov ecx [ ebx + 0x24 ]
cmp ecx edi
je r-xdata
xor edx edx
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] dx
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
xor eax eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] ax
mov edx [ ebp - 0x2c ]
push edx
call sub_1002e8fb
add esp 0x4
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov ecx [ ebp - 0x68 ]
push edi
mov eax r--data
mov [ ebx + 0x24 ] edi
call sub_1000bc70
jmp r-xdata
mov eax [ ebp - 0x48 ]
push eax
jmp r-xdata
call sub_1002e8fb
add esp 0x4
sub_1001e420
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c383
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
push 0x0
lea ecx [ esi + 0x28 ]
mov eax r--data
mov [ esi + 0x24 ] 0x0
call sub_1000bc70
cmp [ esi + 0x3c ] 0x8
jb r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x20 ] 0x0
mov [ esi + 0x3c ] 0x7
mov [ esi + 0x38 ] 0x0
xor ecx ecx
lea edx [ esi + 0x8 ]
mov [ esi + 0x28 ] cx
push edx
mov [ esi ] r--data
call [ DeleteCriticalSection@IAT ]
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x28 ]
push eax
call sub_1002e8fb
add esp 0x4
sub_1001e4e0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1001e420
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1001e510
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
push 0x0
lea ecx [ esi + 0x28 ]
mov eax r--data
mov [ esi + 0x24 ] 0x0
call sub_1000bc70
sub_1001e540
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003d010
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x48 ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
cmp [ ebx + 0x24 ] eax
je r-xdata
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ esp + 0x2c ] r--data
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x40 ] eax
mov [ esp + 0x3c ] eax
mov [ esp + 0x38 ] 0x1
mov [ esp + 0x50 ] eax
lea ecx [ esp + 0x2c ]
mov [ esp + 0x18 ] r--data
mov [ esp + 0x1c ] ecx
mov [ esp + 0x24 ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x28 ] 0xffffffff
mov edi [ ebp + 0xc ]
lea esi [ esp + 0x18 ]
mov [ esp + 0x50 ] 0x1
call sub_10014be0
test eax eax
je r-xdata
lea ecx [ esp + 0x2c ]
mov [ esp + 0x18 ] r--data
call sub_1000a130
mov eax [ esp + 0x34 ]
mov ecx [ ebx + 0x24 ]
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
push eax
mov eax [ esp + 0x34 ]
push eax
call edx
test eax eax
jne r-xdata
mov ecx [ ebx + 0x24 ]
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
mov edi eax
test edi edi
je r-xdata
mov esi ebx
call sub_1001e510
jmp r-xdata
mov eax [ edi ]
mov edx [ eax + 0x10 ]
mov ecx edi
call edx
mov esi eax
push esi
mov [ esp + 0x18 ] esi
call sub_1002eb41
add esp 0x4
mov ebx eax
mov eax [ edi ]
mov edx [ eax + 0x14 ]
push esi
push ebx
mov ecx edi
call edx
cmp esi eax
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esp + 0x14 ]
push ebx
call sub_10014930
add esp 0x4
mov esi [ ebp + 0x8 ]
call sub_1001e510
jmp r-xdata
push ebx
call sub_1002ee65
mov eax [ edi ]
mov edx [ eax ]
add esp 0x4
push 0x1
mov ecx edi
call edx
sub_1001e6a0
push ebp
mov ebp esp
push esi
push 0x28
mov esi ecx
call sub_1002e957
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x24 ]
mov edx [ ecx ]
xor eax eax
push eax
mov eax [ edx + 0xc ]
call eax
pop esi
pop ebp
retn 0x4
mov edx [ esi + 0x4 ]
push edi
mov di [ ebp + 0x8 ]
mov [ eax + 0x4 ] di
mov [ eax ] r--data
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x24 ]
mov edx [ ecx ]
pop edi
push eax
mov eax [ edx + 0xc ]
call eax
pop esi
pop ebp
retn 0x4
sub_1001e710
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003b408
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
xor esi esi
cmp [ ebx + 0xc ] esi
jne r-xdata
mov ebx [ ebx + 0xc ]
cmp ebx esi
je r-xdata
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] esi
lea eax [ esp + 0x14 ]
mov [ esp + 0x30 ] esi
call sub_100146a0
mov eax [ esp + 0x18 ]
cmp eax esi
je r-xdata
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
call sub_100106f0
mov edx [ ebx + 0x8 ]
mov ecx [ edx + 0x18 ]
add eax 0x2
mov [ esp + 0x18 ] eax
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov esi eax
mov eax [ esi ]
mov edx [ eax + 0x2c ]
mov ecx esi
call edx
mov edi eax
mov eax [ esi ]
mov edx [ eax + 0x18 ]
mov ecx esi
call edx
mov [ esp + 0x10 ] eax
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
test edi edi
je r-xdata
mov cx [ ebx + 0x4 ]
mov [ eax ] cx
mov [ ebx + 0x10 ] 0x1
cmp [ esp + 0x10 ] 0x0
je r-xdata
xor esi esi
push eax
call sub_1002e8fb
add esp 0x4
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
mov eax [ ebx + 0x8 ]
mov esi [ eax + 0x10 ]
sub esp 0x10
mov ecx esp
mov [ esp + 0x20 ] esp
push ecx
lea ecx [ esp + 0x28 ]
call sub_100145a0
mov edx [ esi ]
mov eax [ edx + 0x4 ]
push edi
mov ecx esi
call eax
mov ecx [ ebx + 0x8 ]
push ecx
mov esi eax
call sub_10013830
mov edi [ ebx + 0x8 ]
push eax
call sub_10013940
push 0x34
mov edi eax
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ eax + 0x4 ] eax
jmp r-xdata
mov ecx [ ebx + 0x8 ]
mov edx [ ecx + 0x14 ]
mov ecx [ ecx + 0x8 ]
push edx
push ecx
push edi
mov edx esi
call sub_100106b0
mov [ ebx + 0xc ] eax
mov [ eax + 0x4 ] 0x0
jmp r-xdata
mov [ esp + 0x30 ] 0xffffffff
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
sub_1001e880
push ebp
mov ebp esp
push 0xffffffff
push sub_1003cfd0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov eax [ ebx + 0x18 ]
mov ecx [ eax + 0x24 ]
test ecx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x28 ] 0x8
lea esi [ eax + 0x14 ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x40 ] 0x0
jbe r-xdata
test esi esi
jne r-xdata
mov esi [ esi ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
cmp [ eax + 0x44 ] 0x8
lea esi [ eax + 0x30 ]
jb r-xdata
push 0x5c
push esi
call sub_1002ef1e
mov edi eax
add esp 0x8
xor eax eax
test edi edi
je r-xdata
test esi esi
jne r-xdata
mov esi [ esi ]
mov ecx edi
sub ecx esi
sar ecx 0x1
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x48 ] ax
push ecx
mov eax esi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] 0x7
call sub_1000bc70
xor ecx ecx
mov [ ebp - 0x4 ] ecx
lea eax [ edi + 0x2 ]
mov [ ebp - 0x1c ] ecx
mov edi 0x7
xor edx edx
mov ecx eax
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x2c ] dx
lea esi [ ecx + 0x2 ]
lea esp [ esp ]
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
lea ecx [ ebp - 0x2c ]
call sub_1000bc70
mov [ ebp - 0x4 ] 0x1
mov eax [ ebx + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ebp - 0x2c ]
mov ebx 0x8
cmp [ ebp - 0x18 ] ebx
jae r-xdata
mov eax [ ebp - 0x48 ]
cmp [ ebp - 0x34 ] ebx
jae r-xdata
lea edx [ ebp - 0x2c ]
mov esi [ ecx ]
push edx
mov edx [ esi + 0x4 ]
push eax
call edx
mov esi eax
cmp [ ebp - 0x18 ] ebx
jb r-xdata
lea eax [ ebp - 0x48 ]
xor ecx ecx
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] cx
cmp [ ebp - 0x34 ] ebx
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_1002e8fb
add esp 0x4
mov eax esi
mov edx [ ebp - 0x48 ]
push edx
call sub_1002e8fb
add esp 0x4
sub_1001e9e0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003dc42
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x20 ]
mov [ fs : 0x0 ] eax
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov ecx [ esi + 0x18 ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0xc ]
mov ebx [ eax + 0x10 ]
push ecx
movzx ecx [ esi + 0x4 ]
push edx
push ecx
call sub_1001f4a0
add esp 0xc
mov [ esi + 0x18 ] eax
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x1
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
call sub_1001f350
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
test eax eax
jne r-xdata
mov eax [ esi + 0x18 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
call sub_100180a0
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
test eax eax
je r-xdata
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x8 ]
mov eax [ ecx + 0x98 ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi + 0x20 ]
mov edi [ ecx ]
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
call eax
mov ecx [ esi + 0x20 ]
mov edx [ edi + 0x44 ]
push eax
call edx
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx esi
cmp eax 0x1
jne r-xdata
push 0x1
call sub_1001e880
mov edi eax
test edi edi
je r-xdata
push 0x0
call sub_1001e880
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ edx + 0x28 ]
push eax
call sub_10013a60
mov ebx eax
call sub_10013780
mov [ esi + 0x20 ] eax
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
push edi
call eax
push 0x20
mov [ esi + 0x1c ] eax
call sub_1002e957
mov edi eax
add esp 0x4
mov [ esp + 0x18 ] edi
mov [ esp + 0x28 ] 0x3
test edi edi
je r-xdata
mov edx [ esi + 0x8 ]
push edx
call sub_10013830
push 0x20
mov [ esp + 0x14 ] eax
call sub_1002e957
mov edi eax
add esp 0x4
mov [ esp + 0x14 ] edi
mov [ esp + 0x28 ] 0x0
test edi edi
je r-xdata
xor edi edi
mov eax ebx
call sub_10019bb0
mov edi eax
jmp r-xdata
xor ebx ebx
mov eax ebx
call sub_10019bb0
mov ebx eax
jmp r-xdata
xor eax eax
mov [ esi + 0x24 ] eax
push 0x10
call sub_1002e957
add esp 0x4
mov [ esp + 0x14 ] eax
mov [ esp + 0x28 ] 0x5
test eax eax
je r-xdata
mov eax 0x1
mov [ esp + 0x28 ] 0xffffffff
push 0x68
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
call sub_1002e957
mov ebx eax
add esp 0x4
mov [ esp + 0x18 ] ebx
mov [ esp + 0x28 ] 0x4
test ebx ebx
je r-xdata
push 0x10
call sub_1002e957
add esp 0x4
mov [ esp + 0x18 ] eax
mov [ esp + 0x28 ] 0x2
test eax eax
je r-xdata
mov [ esp + 0x28 ] 0xffffffff
push 0x68
mov [ ebx + 0x1c ] 0x1
call sub_1002e957
mov edi eax
add esp 0x4
mov [ esp + 0x14 ] edi
mov [ esp + 0x28 ] 0x1
test edi edi
je r-xdata
xor eax eax
push eax
mov ecx edi
mov [ esp + 0x2c ] 0x4
call sub_10019c60
mov [ esi + 0x24 ] eax
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x20 ]
push ecx
push eax
call sub_1001a1f0
push eax
mov ecx edi
mov [ esp + 0x2c ] 0x4
call sub_10019c60
mov [ esi + 0x24 ] eax
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov ecx ebx
push eax
mov ebx edi
mov [ esp + 0x2c ] 0x1
call sub_10019c60
mov [ esi + 0x24 ] eax
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esp + 0x10 ]
push ecx
push eax
call sub_1001a1f0
mov ecx ebx
push eax
mov ebx edi
mov [ esp + 0x2c ] 0x1
call sub_10019c60
mov [ esi + 0x24 ] eax
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
sub_1001ed00
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
push edi
xor edi edi
mov ebx 0x1
cmp ecx edi
je r-xdata
mov ecx [ esi + 0x18 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push ebx
call edx
mov [ esi + 0xc ] edi
mov ecx [ esi + 0x1c ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push ebx
call edx
mov [ esi + 0x18 ] edi
mov ecx [ esi + 0x24 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push ebx
call edx
mov [ esi + 0x1c ] edi
pop edi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] ebx
pop esi
pop ebx
retn
mov eax [ ecx ]
mov edx [ eax ]
push ebx
call edx
mov [ esi + 0x24 ] edi
sub_1001ed60
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a648
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
mov [ ebp - 0x4 ] edi
mov ecx [ esi + 0xc ]
cmp ecx edi
je r-xdata
mov ecx [ esi + 0x18 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0xc ] edi
mov ecx [ esi + 0x1c ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x18 ] edi
mov ecx [ esi + 0x24 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x1c ] edi
mov [ esi + 0x10 ] 0x1
mov [ esi + 0x14 ] 0x1
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x24 ] edi
sub_1001ee10
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1001ed60
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1001ee40
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
push esi
mov esi ecx
cmp ax [ esi + 0x4 ]
jne r-xdata
pop esi
pop ebp
retn 0x4
call sub_1001eea0
mov ecx [ esi + 0x8 ]
mov ecx [ ecx + 0x24 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
push esi
call eax
sub_1001eea0
mov ecx [ esi + 0xc ]
push ebx
push edi
xor edi edi
mov ebx 0x1
cmp ecx edi
je r-xdata
mov ecx [ esi + 0x18 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push ebx
call edx
mov [ esi + 0xc ] edi
mov ecx [ esi + 0x1c ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push ebx
call edx
mov [ esi + 0x18 ] edi
mov ecx [ esi + 0x24 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push ebx
call edx
mov [ esi + 0x1c ] edi
pop edi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] ebx
pop ebx
retn
mov eax [ ecx ]
mov edx [ eax ]
push ebx
call edx
mov [ esi + 0x24 ] edi
sub_1001ef00
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b366
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x4 ]
xor edi edi
cmp ecx edi
je r-xdata
mov ecx [ esi + 0x10 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x4 ] edi
cmp [ esi + 0x44 ] 0x8
jb r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x10 ] edi
xor ecx ecx
mov [ esi + 0x44 ] 0x7
mov [ esi + 0x40 ] edi
mov [ esi + 0x30 ] cx
cmp [ esi + 0x28 ] 0x8
jb r-xdata
mov eax [ esi + 0x30 ]
push eax
call sub_1002e8fb
add esp 0x4
xor eax eax
mov [ esi + 0x28 ] 0x7
mov [ esi + 0x24 ] edi
mov [ esi + 0x14 ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edx [ esi + 0x14 ]
push edx
call sub_1002e8fb
add esp 0x4
sub_1001efc0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1001ef00
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1001eff0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003cf99
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov esi [ ebp + 0xc ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] eax
mov eax 0x4
call sub_1002c070
mov [ ebp - 0x18 ] eax
mov eax 0x5
call sub_1002c070
mov edi eax
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov eax ebx
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax ebx
mov ecx esi
call sub_1000bc70
xor ebx ebx
mov eax edi
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x14 ] 0x1
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax edi
mov ecx esi
call sub_10016ca0
mov [ ebp - 0x10 ] ebx
lea esp [ esp ]
or ecx 0xffffffff
sub ecx eax
cmp ecx 0x1
jbe r-xdata
or edx 0xffffffff
sub edx eax
cmp edx 0x1
jbe r-xdata
push r--data
call sub_1003621d
lea edi [ eax + 0x1 ]
cmp edi 0x7ffffffe
ja r-xdata
lea edi [ eax + 0x1 ]
cmp edi 0x7ffffffe
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
test edi edi
jne r-xdata
push eax
push edi
push esi
call sub_1000be50
jmp r-xdata
test edi edi
jne r-xdata
push eax
push edi
push esi
call sub_1000be50
jmp r-xdata
setne al
test al al
je r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
test edi edi
setne al
test al al
je r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
test edi edi
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
cmp eax 0x7
jl r-xdata
mov edx [ esi + 0x10 ]
add ebx 0x57
movzx ecx bx
mov ebx 0x8
cmp [ esi + 0x14 ] ebx
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
add ebx 0x30
movzx ecx bx
mov ebx 0x8
cmp [ esi + 0x14 ] ebx
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x10 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
xor edx edx
mov ecx 0xf
div ecx
mov eax [ esi + 0x10 ]
mov ebx edx
cmp ebx 0xa
jge r-xdata
mov edx [ ebp - 0x18 ]
mov eax edx
lea edi [ eax + 0x2 ]
lea esp [ esp ]
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor edx edx
mov [ eax ] dx
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax ] cx
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
mov eax edx
mov ecx esi
call sub_10016ca0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edx * 2 ] cx
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] ebx
jb r-xdata
mov eax esi
xor edx edx
mov [ eax + edi * 2 ] dx
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + edi * 2 ] dx
jmp r-xdata
mov [ eax + edx * 2 ] cx
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] ebx
jb r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_1001f230
push ebp
mov ebp esp
push ecx
push esi
mov ecx ebx
push edi
xor eax eax
xor esi esi
lea edi [ ecx + 0x2 ]
nop
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx edi
sar ecx 0x1
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ ebx + esi * 2 ] 0x5c
jne r-xdata
mov ecx ebx
inc esi
lea edi [ ecx + 0x2 ]
nop
inc eax
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx edi
sar ecx 0x1
cmp esi ecx
jb r-xdata
sub_1001f280
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c938
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x5c
push esi
mov [ ebp - 0x30 ] 0x0
call sub_1002ef1e
xor ecx ecx
add esp 0x8
cmp eax ecx
jne r-xdata
sub eax esi
mov [ ebp - 0x1c ] ecx
xor ecx ecx
sar eax 0x1
mov [ ebp - 0x2c ] cx
push eax
mov eax esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0x7
call sub_1000bc70
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x2c ]
mov esi 0x8
cmp [ ebp - 0x18 ] esi
jae r-xdata
xor eax eax
mov [ edi + 0x10 ] ecx
mov [ edi + 0x14 ] 0x7
mov [ edi ] ax
push ecx
mov eax r--data
mov ecx edi
call sub_1000bc70
jmp r-xdata
push edi
push ebx
call sub_1001eff0
cmp [ ebp - 0x18 ] esi
jb r-xdata
lea ecx [ ebp - 0x2c ]
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
push edx
call sub_1002e8fb
add esp 0x4
sub_1001f350
push ebp
mov ebp esp
push 0xffffffff
push sub_1003dbd8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0xc ]
mov [ ebp - 0x34 ] esi
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov edi eax
mov [ ebp - 0x3c ] edi
test edi edi
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
call edx
test eax eax
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x10 ]
mov ecx edi
call edx
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov [ esi + 0xc ] 0x1
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
push ebx
call edx
mov ecx edi
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0x14 ]
call eax
mov ebx eax
lea edx [ eax + 0x2 ]
mov edi edi
mov eax [ edi ]
mov edx [ eax + 0x14 ]
call edx
lea ecx [ esi + 0x14 ]
push ecx
call sub_1000bb90
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
cmp eax 0xbc
jae r-xdata
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
call edx
mov ebx [ ebp - 0x30 ]
call sub_1001f230
mov [ ebp - 0x38 ] eax
cmp eax [ esi + 0x4c ]
jle r-xdata
mov ecx ebx
lea edi [ ebp - 0x2c ]
mov ebx esi
call sub_1001f280
add esi 0x30
mov edi eax
mov [ ebp - 0x4 ] 0x0
call sub_10013f90
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_1000bb60
mov edx [ ebp - 0x34 ]
mov ecx [ ebp - 0x38 ]
mov edi [ ebp - 0x3c ]
mov [ edx + 0x4c ] ecx
mov esi edx
sub_1001f4a0
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push esi
mov [ ebp - 0x44 ] eax
push edi
mov eax 0x3
call sub_1002c070
lea edx [ ebp - 0x40 ]
sub edx eax
xor edi edi
lea esp [ esp ]
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
cmp cx di
jne r-xdata
mov cx [ ebp + 0x8 ]
push 0x50
mov [ ebp - 0x40 ] cx
call sub_1002e957
add esp 0x4
cmp eax edi
je r-xdata
xor esi esi
mov [ eax ] r--data
mov [ eax + 0x24 ] edi
mov ecx 0x7
mov [ eax + 0x28 ] ecx
xor edx edx
mov [ eax + 0x14 ] dx
mov edx [ ebp + 0xc ]
mov [ eax + 0x44 ] ecx
mov [ eax + 0x40 ] edi
xor ecx ecx
mov [ eax + 0x30 ] cx
mov [ eax + 0x4 ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x8 ] edx
mov [ eax + 0x4c ] edi
mov esi eax
jmp r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x44 ]
mov eax [ ecx ]
mov edx [ eax + 0x24 ]
push edi
call edx
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
mov eax [ ebx ]
mov edx [ eax + 0xc ]
lea ecx [ ebp - 0x40 ]
push ecx
mov ecx ebx
call edx
mov [ esi + 0x4 ] eax
cmp eax edi
je r-xdata
pop edi
mov eax esi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
sub_1001f590
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b32e
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi + 0x10 ]
test ecx ecx
je r-xdata
mov ecx [ edi + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ edi + 0x10 ] 0x0
mov ecx [ edi + 0x3c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ edi + 0xc ] 0x0
lea esi [ edi + 0x1c ]
mov [ edi + 0x34 ] r--data
call sub_1001fdd0
mov eax [ esi ]
push eax
call sub_1002e8fb
mov [ esi ] 0x0
add esp 0x4
mov [ edi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ edi + 0x3c ] 0x0
sub_1001f640
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1001f590
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1001f690
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
mov ecx [ edi + 0x4 ]
lea eax [ edi + 0x34 ]
push eax
mov edx esi
call sub_1000b070
sub esp 0x1c
mov ecx esp
mov eax ebx
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
mov [ ebp - 0x4 ] esp
mov [ ecx ] 0x0
lea esi [ eax + 0x1 ]
lea esp [ esp ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
mov esi eax
mov eax ebx
call sub_10002640
mov esi [ edi + 0xc ]
call sub_1000c4a0
pop esi
mov esp ebp
pop ebp
retn
sub_1001f6f0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003dfb3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x88 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa0 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ edi + 0x10 ]
xor ebx ebx
mov [ esp + 0x14 ] edi
cmp ecx ebx
je r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x98 ]
cmp eax 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
test eax eax
jne r-xdata
mov ecx [ esp + 0xa0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x88 ]
xor ecx esp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
cmp eax 0xffffffff
je r-xdata
lea ecx [ esp + 0x1c ]
push ecx
mov ecx [ edi + 0x8 ]
call sub_1000d0e0
mov [ esp + 0xa8 ] ebx
cmp [ esp + 0x20 ] ebx
jbe r-xdata
cmp [ edi + 0x18 ] ebx
jne r-xdata
mov eax [ esp + 0x1c ]
mov esi [ eax ]
mov [ esp + 0x18 ] esi
mov [ esp + 0x10 ] eax
cmp esi eax
je r-xdata
mov esi [ edi + 0x8 ]
lea ecx [ esp + 0x38 ]
push ecx
call sub_1000d1d0
mov [ esp + 0xa8 ] 0x3
cmp [ esp + 0x38 ] ebx
je r-xdata
cmp [ edi + 0x2c ] ebx
jbe r-xdata
jmp r-xdata
mov [ esp + 0xa8 ] bl
cmp [ esp + 0x54 ] 0x10
jb r-xdata
cmp [ esp + 0x3c ] ebx
jne r-xdata
cmp [ edi + 0x18 ] ebx
je r-xdata
lea esi [ edi + 0x1c ]
lea eax [ esp + 0x2c ]
mov ecx esi
call sub_10022f70
mov ecx [ eax ]
cmp ecx ebx
jne r-xdata
lea eax [ esi + 0x8 ]
mov [ esp + 0x8c ] ebx
mov [ esp + 0x7c ] bl
push eax
or ecx 0xffffffff
xor ebx ebx
lea edi [ esp + 0x80 ]
mov [ esp + 0x94 ] 0xf
call sub_10002780
sub esp 0x1c
mov edi esp
mov [ esp + 0xc4 ] 0x1
lea edx [ esp + 0x98 ]
mov [ esp + 0x44 ] esp
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] ebx
push edx
or ecx 0xffffffff
mov [ edi ] bl
call sub_10002780
mov edi [ esp + 0x30 ]
mov ecx [ edi + 0xc ]
call sub_1000c1c0
cmp eax ebx
jne r-xdata
mov [ esp + 0x54 ] 0xf
mov [ esp + 0x50 ] ebx
mov [ esp + 0x40 ] bl
mov ecx [ esp + 0x40 ]
push ecx
call sub_1002e8fb
add esp 0x4
mov ecx [ esp + 0x5c ]
mov [ edi + 0x18 ] ebx
cmp ecx ebx
je r-xdata
cmp [ esp + 0x54 ] 0x10
mov ebx [ esp + 0x40 ]
jae r-xdata
push ebx
call sub_1002ee70
sub eax [ edi + 0x14 ]
add esp 0x4
cmp eax 0x2e9d
jbe r-xdata
mov ecx [ ecx ]
xor ecx ecx
jmp r-xdata
mov [ esp + 0xa8 ] bl
cmp [ esp + 0x90 ] 0x10
jb r-xdata
lea eax [ esp + 0x7c ]
push eax
lea esi [ edi + 0x1c ]
call sub_1001fd00
mov esi [ esp + 0x18 ]
lea ebx [ esp + 0x1c ]
call sub_10002870
mov ecx [ esp + 0x1c ]
push ecx
call sub_1002e8fb
add esp 0x4
mov edx [ edi + 0x4 ]
mov ecx [ edi + 0x3c ]
mov [ edi + 0x18 ] ebx
mov eax [ edx + 0x18 ]
mov esi [ eax ]
mov [ esp + 0x10 ] eax
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov ecx [ esp + 0x10 ]
push eax
mov eax [ esi + 0xc ]
call eax
test eax eax
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov eax [ esp + 0x5c ]
call sub_1001f690
mov edi [ esp + 0x14 ]
xor ebx ebx
lea ebx [ esp + 0x40 ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax * 4 ]
mov [ esp + 0x70 ] ebx
mov [ esp + 0x60 ] bl
push eax
or ecx 0xffffffff
xor ebx ebx
lea edi [ esp + 0x64 ]
mov [ esp + 0x78 ] 0xf
call sub_10002780
mov [ esp + 0xa8 ] 0x2
call sub_1001fca0
cmp [ esp + 0x74 ] 0x10
mov eax [ esp + 0x60 ]
jae r-xdata
sub eax edx
mov eax [ eax + 0x8 ]
mov edx [ ecx + 0x8 ]
cmp edx eax
ja r-xdata
mov esi [ esi ]
mov [ esp + 0x8c ] ebx
mov [ esp + 0x7c ] bl
xor ebx ebx
mov [ esp + 0x90 ] 0xf
mov [ esp + 0x18 ] esi
cmp esi [ esp + 0x10 ]
jne r-xdata
mov ecx [ esp + 0x7c ]
push ecx
call sub_1002e8fb
add esp 0x4
mov esi [ edi + 0x8 ]
push ebx
push ebx
push esi
push sub_1000d7f0
push ebx
push ebx
call [ CreateThread@IAT ]
mov [ esi + 0x40 ] eax
mov eax [ esi + 0x40 ]
push ebx
call sub_1002ee70
add esp 0x4
mov [ edi + 0x14 ] eax
mov ecx [ edi + 0x3c ]
cmp ecx ebx
je r-xdata
mov esi [ esp + 0x14 ]
mov edi [ esi + 0x8 ]
push eax
call sub_1000d480
xor ebx ebx
mov [ esp + 0xa8 ] bl
cmp [ esp + 0x74 ] 0x10
mov [ esi + 0x18 ] 0x1
jb r-xdata
mov eax edi
mov esi [ esp + 0x18 ]
mov ecx [ edi + 0x4 ]
mov ecx [ ecx + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov [ edi + 0x3c ] eax
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x3c ]
call eax
mov esi [ edi + 0x8 ]
mov ecx eax
lea edx [ ecx + 0x1 ]
mov [ esp + 0x10 ] edx
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ esp + 0x70 ] ebx
mov [ esp + 0x60 ] bl
mov [ esp + 0x74 ] 0xf
xor ebx ebx
mov edi esi
mov eax [ esp + 0x60 ]
push eax
call sub_1002e8fb
add esp 0x4
mov dl [ ecx ]
inc ecx
cmp dl bl
jne r-xdata
sub ecx [ esp + 0x10 ]
mov edx ecx
lea ecx [ esi + 0x54 ]
mov esi edx
call sub_10002640
sub_1001fa90
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d61f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ edi ] r--data
lea esi [ edi + 0x1c ]
push 0x8
mov [ esi ] ebx
call sub_1002e957
add esp 0x4
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ebx
call sub_1002e39e
push r--data
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x20 ] r--data
call sub_10030edf
int3
mov [ esi ] eax
mov [ eax + 0x4 ] ebx
xor ecx ecx
mov [ eax ] ecx
mov eax [ esi ]
mov [ eax ] esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov [ edi + 0x34 ] r--data
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov [ edi + 0x4 ] esi
mov ecx [ esi + 0x18 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
push 0x9c
mov [ edi + 0x3c ] eax
call sub_1002e957
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x3
cmp eax ebx
je r-xdata
xor eax eax
mov esi [ esi + 0x20 ]
push 0x4
call sub_1002e957
add esp 0x4
cmp eax ebx
je r-xdata
xor esi esi
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x28 ]
mov [ esi ] r--data
push 0x24
mov [ ebp + 0xc ] ecx
mov [ esi + 0xc ] ebx
call sub_1002e957
add esp 0x4
cmp eax ebx
je r-xdata
mov [ ebp + 0xc ] ebx
mov [ eax ] r--data
mov [ ebp + 0xc ] eax
jmp r-xdata
xor esi esi
mov [ esi ] r--data
mov [ esi + 0xc ] 0x2ef2
call [ GetTickCount@IAT ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] ebx
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ebx
call sub_1002e39e
push r--data
lea ecx [ ebp - 0x20 ]
push ecx
mov [ ebp - 0x20 ] r--data
call sub_10030edf
mov edx [ ebp + 0xc ]
mov [ esi + 0x8 ] eax
mov [ eax ] eax
mov eax [ esi + 0x8 ]
mov [ eax + 0x4 ] eax
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] edx
jmp r-xdata
xor ebx ebx
push ebx
push eax
call sub_1002bad0
mov ebx eax
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov ebx [ ecx + 0x94 ]
call sub_1002a3b0
push 0x18
mov ebx eax
call sub_1002e957
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x4
test eax eax
je r-xdata
mov [ edi + 0x10 ] esi
mov [ edi + 0x14 ] ebx
mov [ edi + 0x18 ] ebx
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x4 ] 0x2
push 0x10
mov [ edi + 0xc ] esi
call sub_1002e957
mov esi eax
add esp 0x4
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] 0x2
push 0x1c
mov [ edi + 0x8 ] eax
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x5
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] 0x3
mov ecx [ edi + 0x3c ]
mov edx [ ecx ]
mov eax [ edx + 0x3c ]
call eax
mov edx [ esi ]
push eax
mov eax [ edx + 0xc ]
mov ecx esi
call eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x10 ]
push eax
push ecx
push edx
mov ecx ebx
call sub_1000d6a0
xor ebx ebx
jmp r-xdata
sub_1001fca0
cmp [ esi + 0x10 ] 0x0
je r-xdata
retn
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x4 ]
push edi
mov edi [ ecx + eax * 4 ]
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
inc [ esi + 0xc ]
mov eax [ esi + 0xc ]
pop edi
cmp [ esi + 0x8 ] eax
ja r-xdata
mov edx [ edi ]
push edx
call sub_1002e8fb
add esp 0x4
dec [ esi + 0x10 ]
jne r-xdata
mov [ esi + 0xc ] 0x0
mov [ esi + 0xc ] 0x0
sub_1001fd00
push ebp
mov ebp esp
push 0xffffffff
push sub_1003ba25
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ esi + 0x10 ]
inc eax
cmp [ esi + 0x8 ] eax
ja r-xdata
mov edi [ esi + 0xc ]
add edi [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
cmp eax edi
ja r-xdata
mov ebx esi
call sub_1001fe70
mov ecx [ esi + 0x4 ]
xor ebx ebx
cmp [ ecx + edi * 4 ] ebx
jne r-xdata
sub edi eax
mov edx [ esi + 0x4 ]
mov edi [ edx + edi * 4 ]
mov [ ebp - 0x4 ] ebx
cmp edi ebx
je r-xdata
push 0x1c
call sub_1002e957
add esp 0x4
cmp eax ebx
je r-xdata
inc [ esi + 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov [ edi + 0x10 ] ebx
mov [ edi + 0x14 ] 0xf
mov [ edi ] bl
push eax
or ecx 0xffffffff
xor ebx ebx
call sub_10002780
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] ebx
call sub_1002e39e
push r--data
lea ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x1c ] r--data
call sub_10030edf
int3
mov edx [ esi + 0x4 ]
mov [ edx + edi * 4 ] eax
sub_1001fdd0
push ebx
xor ebx ebx
push edi
cmp [ esi + 0x10 ] ebx
je r-xdata
mov edi [ esi + 0x8 ]
cmp edi ebx
jbe r-xdata
lea esp [ esp ]
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov edi edi
cmp [ esi + 0x10 ] ebx
jne r-xdata
mov ecx [ esi + 0xc ]
lea eax [ eax + ecx - 0x1 ]
mov ecx [ esi + 0x8 ]
cmp ecx eax
ja r-xdata
pop edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
pop ebx
retn
push eax
call sub_1002e8fb
add esp 0x4
cmp edi ebx
ja r-xdata
mov edx [ eax ]
push edx
call sub_1002e8fb
add esp 0x4
mov eax [ esi + 0x10 ]
cmp eax ebx
je r-xdata
mov edx [ esi + 0x4 ]
mov edi [ edx + eax * 4 ]
cmp [ edi + 0x14 ] 0x10
jb r-xdata
sub eax ecx
mov ecx [ esi + 0x4 ]
dec edi
cmp [ ecx + edi * 4 ] ebx
lea eax [ ecx + edi * 4 ]
je r-xdata
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] ebx
mov [ edi ] bl
dec [ esi + 0x10 ]
jne r-xdata
mov eax [ edi ]
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0xc ] ebx
sub_1001fe70
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebx + 0x8 ]
mov eax 0x9249249
push edi
mov edi 0x1
sub eax ecx
mov [ ebp - 0x4 ] edi
cmp eax edi
jae r-xdata
mov eax ecx
shr eax 0x1
cmp eax 0x8
jae r-xdata
push r--data
call sub_1003621d
cmp eax 0x1
jbe r-xdata
mov eax 0x8
jmp r-xdata
push esi
mov esi [ ebx + 0xc ]
lea eax [ ecx + edi ]
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0x0
test eax eax
je r-xdata
mov edx 0x9249249
sub edx eax
cmp ecx edx
ja r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
add eax eax
add eax eax
add esi esi
add esi esi
lea edx [ esi + ecx ]
sub eax edx
add eax ecx
mov ecx [ ebp - 0x8 ]
sar eax 0x2
add eax eax
add eax eax
push eax
push edx
lea edx [ esi + ecx ]
push edx
mov [ ebp - 0x10 ] eax
call sub_1002e460
add eax [ ebp - 0x10 ]
mov ecx [ ebx + 0x4 ]
add esp 0xc
cmp [ ebp - 0xc ] edi
ja r-xdata
cmp eax 0x3fffffff
ja r-xdata
mov [ ebp - 0x4 ] eax
mov edi eax
lea edx [ edi * 4 ]
sar edx 0x2
add edx edx
add edx edx
push edx
push ecx
push eax
call sub_1002e460
mov eax [ ebx + 0x4 ]
lea ecx [ eax + edi * 4 ]
sub esi ecx
add esi eax
mov eax [ ebp - 0x8 ]
sar esi 0x2
add esi esi
add esi esi
push esi
push ecx
push eax
call sub_1002e460
add esp 0x18
lea edx [ esi + eax ]
test edi edi
je r-xdata
sar esi 0x2
mov edx esi
add edx edx
add edx edx
push edx
push ecx
push eax
mov esi edi
mov [ ebp - 0x10 ] edx
call sub_1002e460
mov edx eax
add edx [ ebp - 0x10 ]
add esp 0xc
sub esi [ ebp - 0xc ]
je r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] 0x0
call sub_1002e39e
push r--data
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x1c ] r--data
call sub_10030edf
int3
add eax eax
add eax eax
push eax
call sub_1002e957
add esp 0x4
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
pop esi
test eax eax
je r-xdata
mov ecx edi
mov edi edx
mov ecx [ ebp - 0xc ]
test ecx ecx
je r-xdata
mov ecx esi
xor eax eax
mov edi edx
[ edi ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
add [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] ecx
pop edi
mov esp ebp
pop ebp
retn
push eax
call sub_1002e8fb
add esp 0x4
mov edi [ ebp - 0x8 ]
jmp r-xdata
xor eax eax
[ edi ]
mov edi [ ebp - 0x4 ]
sub_10020000
push ebp
mov ebp esp
push 0xffffffff
push sub_1003cf1b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x78
call sub_1002e957
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor esi esi
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
push ecx
push edx
push eax
call sub_100204c0
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx esi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10020de0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
sub_100200a0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x0
push esi
call [ GetWindowLongW@IAT ]
mov ecx [ ebp + 0x10 ]
mov edi eax
test edi edi
jne r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
call sub_10020f90
pop edi
pop esi
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0xc ]
push eax
push ecx
push edx
push esi
call [ DefWindowProcW@IAT ]
pop edi
pop esi
pop ebp
retn 0x10
sub_100200f0
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
mov edi [ esi + 0x28 ]
mov ecx [ edi + 0x4 ]
lea eax [ ebp + 0x8 ]
push eax
push ecx
push edi
call sub_100214c0
mov ecx [ esi + 0x2c ]
mov edx 0x3ffffffe
sub edx ecx
cmp edx 0x1
jae r-xdata
inc ecx
mov [ esi + 0x2c ] ecx
mov [ edi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
pop edi
mov [ ecx ] eax
pop esi
pop ebp
retn 0x4
push r--data
call sub_1003621d
sub_10020140
push ebp
mov ebp esp
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi edx
movzx eax [ edi + 0x4 ]
mov esi ecx
mov [ ebp - 0x6c ] eax
lea ecx [ esi + 0x3c ]
lea ebx [ ebp - 0x6c ]
lea eax [ ebp - 0x60 ]
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x58 ] ecx
call sub_10021370
mov ecx [ eax ]
cmp ecx [ esi + 0x40 ]
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov eax 0x1
call sub_1002c070
lea edx [ ebp - 0x28 ]
sub edx eax
lea esp [ esp ]
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
jne r-xdata
mov dx [ edi + 0x4 ]
push 0x0
push 0x2000000
push 0x3
push 0x0
push 0x7
push 0x80000000
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x28 ] dx
call [ CreateFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
push 0x2c
lea ecx [ ebp - 0x54 ]
push 0x0
push ecx
call sub_10032e00
mov eax [ esi + 0x4 ]
add esp 0xc
push 0x0
lea edx [ ebp - 0x54 ]
push edx
push eax
mov [ ebp - 0x54 ] 0x2c
mov [ ebp - 0x50 ] 0x6
mov [ ebp - 0x48 ] edi
call [ RegisterDeviceNotificationW@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x5c ]
mov dx [ ecx + 0x4 ]
mov esi [ ebp - 0x58 ]
mov [ ebp - 0x64 ] edi
lea edi [ ebp - 0x68 ]
mov [ ebp - 0x68 ] dx
mov [ ebp - 0x60 ] eax
call sub_100219f0
push eax
push esi
lea esi [ ebp - 0x64 ]
call sub_100216a0
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_1002e0f2
mov esp ebp
pop ebp
retn
push edi
call [ CloseHandle@IAT ]
sub_10020260
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
mov edi [ esi + 0x1c ]
mov ecx [ edi + 0x4 ]
lea eax [ ebp + 0x8 ]
push eax
push ecx
push edi
call sub_100214c0
mov ecx [ esi + 0x20 ]
mov edx 0x3ffffffe
sub edx ecx
cmp edx 0x1
jae r-xdata
inc ecx
mov [ esi + 0x20 ] ecx
mov [ edi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
pop edi
mov [ ecx ] eax
pop esi
pop ebp
retn 0x4
push r--data
call sub_1003621d
sub_100202b0
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0x4 ]
push ebx
push esi
mov [ ebp - 0x4 ] ecx
lea esi [ edi + 0x3c ]
lea ebx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
mov ecx esi
call sub_10021370
mov ebx [ ebp - 0x8 ]
cmp ebx [ edi + 0x40 ]
je r-xdata
mov eax [ edi + 0x10 ]
mov esi [ eax ]
cmp esi eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0x10 ]
push eax
mov [ ebp - 0xc ] edx
call [ UnregisterDeviceNotification@IAT ]
mov eax [ ebp - 0xc ]
push eax
call [ CloseHandle@IAT ]
push ebx
lea ecx [ ebp - 0x8 ]
push ecx
push esi
call sub_10021110
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
movzx eax [ eax + 0x4 ]
mov edx [ ecx ]
mov edx [ edx + 0x14 ]
push eax
call edx
mov esi [ esi ]
cmp esi [ edi + 0x10 ]
jne r-xdata
sub_10020340
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
push esi
push edi
mov edi ecx
call sub_10020c90
mov ecx edi
call sub_10020a30
xor ebx ebx
lea esp [ esp ]
mov eax [ edi + 0x10 ]
mov esi [ eax ]
cmp esi eax
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax 0x2
je r-xdata
inc ebx
mov [ esp + 0xc ] ebx
cmp ebx 0x1
jbe r-xdata
mov ecx [ esi + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov esi [ esi ]
cmp esi [ edi + 0x10 ]
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x12
je r-xdata
call sub_10020c90
mov ebx [ esp + 0xc ]
jmp r-xdata
push 0x1
mov [ esp + 0x10 ] 0x0
call [ Sleep@IAT ]
push 0x0
call sub_1002ef4c
add esp 0x4
mov esi eax
sub eax [ edi + 0x50 ]
mov ebx edx
mov ecx ebx
sbb ecx [ edi + 0x54 ]
mov [ esp + 0x14 ] ecx
js r-xdata
lea edx [ esp + 0x1c ]
push edx
call [ TranslateMessage@IAT ]
lea eax [ esp + 0x1c ]
push eax
call [ DispatchMessageW@IAT ]
mov [ esp + 0xc ] 0x0
call sub_10020c90
mov ebx [ esp + 0xc ]
jmp r-xdata
mov eax [ edi + 0x4 ]
push 0x1
push 0x0
push 0x0
push eax
lea ecx [ esp + 0x2c ]
push ecx
call [ PeekMessageW@IAT ]
test eax eax
je r-xdata
jg r-xdata
mov edx [ edi + 0x4 ]
push 0x0
push 0x0
push 0x0
push edx
call [ PostMessageW@IAT ]
mov [ edi + 0x50 ] esi
mov [ edi + 0x54 ] ebx
cmp eax 0x7
jbe r-xdata
sub_10020440
push ebp
mov ebp esp
sub esp 0x28
xor eax eax
cmp [ ecx + 0x6c ] 0x8
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x18 ] eax
lea eax [ ecx + 0x58 ]
mov [ ebp - 0x24 ] sub_100200a0
jb r-xdata
mov [ ebp - 0x4 ] eax
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
xor eax eax
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x1c ] 0x1e
call [ RegisterClassW@IAT ]
test ax ax
jne r-xdata
sub_100204c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c34c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ esi ] r--data
push 0xc
mov [ esi + 0x14 ] edi
call sub_1002e957
add esp 0x4
cmp eax edi
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] edi
call sub_1002e39e
push r--data
lea edx [ ebp - 0x20 ]
push edx
mov [ ebp - 0x20 ] r--data
call sub_10030edf
mov [ esi + 0x10 ] eax
mov [ eax ] eax
mov eax [ esi + 0x10 ]
mov [ eax + 0x4 ] eax
mov bl 0x1
mov [ ebp - 0x4 ] bl
push 0xc
mov [ esi + 0x20 ] edi
call sub_1002e957
add esp 0x4
cmp eax edi
je r-xdata
lea edx [ ebp - 0x14 ]
push edx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] edi
call sub_1002e39e
push r--data
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x2c ] r--data
call sub_10030edf
int3
mov [ esi + 0x1c ] eax
mov [ eax ] eax
mov eax [ esi + 0x1c ]
mov [ eax + 0x4 ] eax
mov [ ebp - 0x4 ] 0x2
push 0xc
mov [ esi + 0x2c ] edi
call sub_1002e957
add esp 0x4
cmp eax edi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] edi
call sub_1002e39e
push r--data
lea ecx [ ebp - 0x20 ]
push ecx
mov [ ebp - 0x20 ] r--data
call sub_10030edf
mov [ esi + 0x28 ] eax
mov [ eax ] eax
mov eax [ esi + 0x28 ]
mov [ eax + 0x4 ] eax
mov [ esi + 0x34 ] r--data
call [ GetLogicalDrives@IAT ]
mov [ esi + 0x38 ] eax
mov [ ebp - 0x4 ] 0x4
push 0x1c
mov [ esi + 0x44 ] edi
call sub_1002e957
add esp 0x4
cmp eax edi
je r-xdata
mov [ esi + 0x40 ] eax
mov [ eax ] eax
mov eax [ esi + 0x40 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x40 ]
mov [ eax + 0x8 ] eax
mov eax [ esi + 0x40 ]
mov [ eax + 0x18 ] bl
mov ecx [ esi + 0x40 ]
mov [ ecx + 0x19 ] bl
lea ecx [ esi + 0x58 ]
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edi
mov [ ecx ] dx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x6
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
lea ebx [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
cmp dx di
jne r-xdata
sub eax ebx
sar eax 0x1
push eax
mov eax [ ebp + 0x10 ]
call sub_1000bc70
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_10020670
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10020700
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_100206a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b398
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax edi
call sub_10021520
mov eax [ edi + 0x4 ]
push eax
call sub_1002e8fb
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10020700
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b9f6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x18 ] edi
mov [ edi ] r--data
mov [ ebp - 0x4 ] 0x6
mov eax [ edi + 0x10 ]
mov esi [ eax ]
cmp esi eax
je r-xdata
call sub_10020c90
mov eax [ edi + 0x40 ]
mov esi [ eax ]
cmp esi eax
je r-xdata
mov ebx [ edi + 0x1c ]
mov edx [ ebx + 0x4 ]
mov eax [ esi + 0x8 ]
lea ecx [ ebp - 0x10 ]
push ecx
push edx
push ebx
mov [ ebp - 0x10 ] eax
call sub_100214c0
mov ecx [ edi + 0x20 ]
mov edx 0x3ffffffe
sub edx ecx
cmp edx 0x1
jb r-xdata
xor esi esi
push 0x1c
mov [ ebp - 0x2c ] esi
call sub_1002e957
add esp 0x4
cmp eax esi
je r-xdata
lea ebx [ ebx ]
push r--data
call sub_1003621d
inc ecx
mov [ edi + 0x20 ] ecx
mov [ ebx + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
mov esi [ esi ]
cmp esi [ edi + 0x10 ]
jne r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] esi
call sub_1002e39e
push r--data
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x24 ] r--data
call sub_10030edf
int3
mov [ ebp - 0x30 ] eax
mov [ eax ] eax
mov eax [ ebp - 0x30 ]
mov [ eax + 0x4 ] eax
mov eax [ ebp - 0x30 ]
mov [ eax + 0x8 ] eax
mov eax [ ebp - 0x30 ]
mov [ eax + 0x18 ] 0x1
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0x19 ] 0x1
lea ebx [ edi + 0x3c ]
lea edx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x7
cmp ebx edx
je r-xdata
cmp esi [ edi + 0x40 ]
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x19 ] 0x0
jne r-xdata
mov eax [ ebp - 0x30 ]
mov eax [ ebx + 0x4 ]
mov esi [ eax + 0x4 ]
cmp [ esi + 0x19 ] 0x0
mov [ ebp - 0x10 ] esi
jne r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ esi + 0x10 ]
push eax
call [ UnregisterDeviceNotification@IAT ]
push ebx
call [ CloseHandle@IAT ]
cmp [ esi + 0x19 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x19 ] 0x0
jne r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0x19 ] 0x0
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax esi
je r-xdata
push eax
call [ UnregisterDeviceNotification@IAT ]
mov [ edi + 0xc ] esi
mov eax [ ebx + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ ebx + 0x4 ]
mov [ eax ] eax
mov eax [ ebx + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x2c ]
mov [ ebx + 0x8 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ ebx + 0x8 ]
mov [ ebp - 0x30 ] eax
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x2c ] ecx
jmp r-xdata
lea ebx [ ebx ]
mov esi eax
nop
lea ecx [ ecx ]
cmp [ edi + 0x6c ] 0x8
jb r-xdata
push esi
push esi
push eax
call [ SetWindowLongW@IAT ]
mov ecx [ edi + 0x4 ]
push ecx
call [ DestroyWindow@IAT ]
mov [ edi + 0x4 ] esi
mov [ ebp - 0x4 ] 0x8
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x14 ]
lea eax [ ebp - 0x34 ]
call sub_10021520
mov eax [ ebp - 0x30 ]
push eax
call sub_1002e8fb
mov eax [ edi + 0xc ]
xor esi esi
add esp 0x4
cmp eax esi
je r-xdata
mov ecx [ esi + 0x8 ]
push ecx
mov ecx ebx
call sub_10021660
mov edx [ ebp - 0x10 ]
mov esi [ esi ]
push edx
call sub_1002e8fb
add esp 0x4
cmp [ esi + 0x19 ] 0x0
mov [ ebp - 0x10 ] esi
je r-xdata
mov esi eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0x19 ] 0x0
je r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0x19 ] 0x0
je r-xdata
jmp r-xdata
xor edx edx
mov [ edi + 0x6c ] 0x7
mov [ edi + 0x68 ] esi
mov [ edi + 0x58 ] dx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x9
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax ebx
call sub_10021520
mov eax [ ebx + 0x4 ]
push eax
call sub_1002e8fb
mov [ edi + 0x34 ] r--data
mov eax [ edi + 0x28 ]
mov ecx [ eax ]
mov [ eax ] eax
mov eax [ edi + 0x28 ]
mov [ eax + 0x4 ] eax
xor ebx ebx
add esp 0x4
mov [ edi + 0x2c ] ebx
cmp ecx [ edi + 0x28 ]
je r-xdata
mov eax [ edi + 0x58 ]
push eax
call sub_1002e8fb
add esp 0x4
cmp esi [ eax + 0x8 ]
jne r-xdata
mov ecx [ edi + 0x28 ]
push ecx
call sub_1002e8fb
mov ecx [ edi + 0x1c ]
mov eax [ ecx ]
mov [ ecx ] ecx
mov ecx [ edi + 0x1c ]
mov [ ecx + 0x4 ] ecx
add esp 0x4
mov [ edi + 0x20 ] ebx
cmp eax [ edi + 0x1c ]
je r-xdata
lea ebx [ ebx ]
mov edx [ edi + 0x1c ]
push edx
call sub_1002e8fb
mov ecx [ edi + 0x10 ]
mov eax [ ecx ]
mov [ ecx ] ecx
mov ecx [ edi + 0x10 ]
mov [ ecx + 0x4 ] ecx
add esp 0x4
mov [ edi + 0x14 ] ebx
cmp eax [ edi + 0x10 ]
je r-xdata
mov esi [ eax ]
push eax
call sub_1002e8fb
add esp 0x4
mov eax esi
cmp esi [ edi + 0x1c ]
jne r-xdata
mov esi [ ecx ]
push ecx
call sub_1002e8fb
add esp 0x4
mov ecx esi
cmp esi [ edi + 0x28 ]
jne r-xdata
mov eax [ edi + 0x10 ]
push eax
call sub_1002e8fb
add esp 0x4
mov [ edi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ eax ]
push eax
call sub_1002e8fb
add esp 0x4
mov eax esi
cmp esi [ edi + 0x10 ]
jne r-xdata
sub_10020a30
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c2d0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x44 ] r--data
call [ GetLogicalDrives@IAT ]
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x64 ]
push eax
lea edx [ ebp - 0x44 ]
xor esi esi
lea ecx [ edi + 0x34 ]
push edx
mov [ ebp - 0x4 ] esi
call sub_10021d80
mov [ ebp - 0x4 ] 0x1
mov ebx [ ebp - 0x64 ]
cmp ebx [ ebp - 0x60 ]
je r-xdata
mov eax [ ebp - 0x54 ]
mov ebx eax
cmp eax [ ebp - 0x50 ]
je r-xdata
movzx eax [ ebx ]
mov [ ebp - 0x38 ] r--data
mov [ ebp - 0x34 ] ax
lea esi [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x2
call sub_10021a60
test eax eax
jne r-xdata
mov edx [ ebp - 0x40 ]
mov [ edi + 0x38 ] edx
cmp eax esi
je r-xdata
movzx eax [ ebx ]
mov [ ebp - 0x38 ] r--data
mov [ ebp - 0x34 ] ax
lea esi [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x3
call sub_10021a60
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x1
add ebx 0x2
mov [ ebp - 0x38 ] r--data
cmp ebx [ ebp - 0x60 ]
jne r-xdata
mov eax 0x1
call sub_1002c070
lea edx [ ebp - 0x30 ]
sub edx eax
mov edi edi
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x4c ] esi
cmp eax esi
je r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ ebp - 0x4 ] 0x1
add ebx 0x2
mov [ ebp - 0x38 ] r--data
cmp ebx [ ebp - 0x50 ]
jne r-xdata
mov eax 0x1
call sub_1002c070
lea edx [ ebp - 0x30 ]
sub edx eax
mov edi edi
xor esi esi
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
jne r-xdata
mov ax [ ebp - 0x34 ]
lea ecx [ ebp - 0x30 ]
push ecx
mov [ ebp - 0x30 ] ax
call [ GetDriveTypeW@IAT ]
cmp eax 0x5
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
push eax
call sub_1002e8fb
add esp 0x4
mov eax [ ebp - 0x54 ]
xor esi esi
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
jne r-xdata
mov dx [ ebp - 0x34 ]
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x30 ] dx
call [ GetDriveTypeW@IAT ]
cmp eax 0x5
je r-xdata
push edi
lea edi [ ebp - 0x38 ]
call sub_10020e80
mov edi [ ebp - 0x3c ]
lea ecx [ ebp - 0x38 ]
push ecx
call sub_100202b0
mov edi [ ebp - 0x3c ]
sub_10020be0
mov eax [ esi + 0x10 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov eax [ esi ]
cmp eax edi
je r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
pop edi
retn
push eax
call sub_1002e8fb
add esp 0x4
sub_10020c20
cmp [ esi + 0x6c ] 0x8
lea eax [ esi + 0x58 ]
jb r-xdata
mov ecx [ esi + 0x8 ]
push 0x0
push ecx
push 0x0
push 0x0
push 0x80000000
push 0x80000000
push 0x80000000
push 0x80000000
push 0x0
push r--data
push eax
push 0x0
call [ CreateWindowExW@IAT ]
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
mov eax [ eax ]
push esi
push 0x0
push eax
call [ SetWindowLongW@IAT ]
mov edx [ esi + 0x4 ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
push edx
call [ SetWindowPos@IAT ]
mov eax 0x1
retn
retn
sub_10020c90
push ebp
mov ebp esp
sub esp 0x8
cmp [ edi + 0x2c ] 0x0
push ebx
push esi
jbe r-xdata
cmp [ edi + 0x20 ] 0x0
jbe r-xdata
mov eax [ edi + 0x28 ]
mov ebx [ eax ]
cmp ebx eax
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
cmp ecx eax
je r-xdata
mov ecx [ edi + 0x28 ]
mov eax [ ecx ]
mov [ ecx ] ecx
mov ecx [ edi + 0x28 ]
mov [ ecx + 0x4 ] ecx
mov [ edi + 0x2c ] 0x0
cmp eax [ edi + 0x28 ]
je r-xdata
mov esi [ edi + 0x10 ]
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x8 ]
lea ecx [ ebp - 0x4 ]
push ecx
push edx
push esi
mov [ ebp - 0x4 ] eax
call sub_100214c0
mov ecx [ edi + 0x14 ]
mov edx 0x3ffffffe
sub edx ecx
cmp edx 0x1
jb r-xdata
mov ecx [ edi + 0x1c ]
mov eax [ ecx ]
mov [ ecx ] ecx
mov ecx [ edi + 0x1c ]
mov [ ecx + 0x4 ] ecx
mov [ edi + 0x20 ] 0x0
cmp eax [ edi + 0x1c ]
je r-xdata
mov ebx [ edi + 0x10 ]
mov edx [ ebp - 0x4 ]
mov esi [ ebx ]
mov ecx [ edx + 0x8 ]
mov [ ebp - 0x8 ] ecx
cmp esi ebx
je r-xdata
lea ecx [ ecx ]
push r--data
call sub_1003621d
inc ecx
mov [ edi + 0x14 ] ecx
mov [ esi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
mov ebx [ ebx ]
cmp ebx [ edi + 0x28 ]
jne r-xdata
mov esi [ eax ]
push eax
call sub_1002e8fb
add esp 0x4
mov eax esi
cmp esi [ edi + 0x1c ]
jne r-xdata
test ecx ecx
je r-xdata
lea ebx [ ebx ]
mov esi [ eax ]
push eax
call sub_1002e8fb
add esp 0x4
mov eax esi
cmp esi [ edi + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
cmp eax [ edi + 0x1c ]
jne r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov esi [ esi ]
mov eax [ esi + 0x4 ]
push esi
mov esi [ esi ]
mov [ eax ] esi
mov [ esi + 0x4 ] eax
call sub_1002e8fb
mov ecx [ ebp - 0x8 ]
add esp 0x4
dec [ edi + 0x14 ]
jmp r-xdata
cmp [ esi + 0x8 ] ecx
jne r-xdata
cmp esi ebx
jne r-xdata
sub_10020de0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x24
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push esi
mov esi ecx
call sub_10020440
test eax eax
jne r-xdata
call sub_10020c20
test eax eax
je r-xdata
xor eax eax
pop esi
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x4 ]
xor eax eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
push 0x4
lea eax [ esp + 0x8 ]
push eax
push ecx
mov [ esp + 0x10 ] 0x20
mov [ esp + 0x14 ] 0x5
call [ RegisterDeviceNotificationW@IAT ]
mov ecx [ esp + 0x24 ]
xor edx edx
test eax eax
setne dl
mov [ esi + 0xc ] eax
pop esi
xor ecx esp
mov eax edx
call sub_1002e0f2
mov esp ebp
pop ebp
retn
sub_10020e80
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ecx edi
call sub_10021b10
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
mov esi [ eax ]
cmp esi eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_10020140
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
lea ecx [ ecx ]
movzx edx [ edi + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
push edx
call eax
movzx eax [ edi + 0x4 ]
mov edx [ ecx ]
mov edx [ edx + 0xc ]
push eax
call edx
jmp r-xdata
mov ecx [ esi + 0x8 ]
test ebx ebx
je r-xdata
mov esi [ esi ]
mov ecx [ ebp + 0x8 ]
cmp esi [ ecx + 0x10 ]
jne r-xdata
sub_10020ef0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov ebx ecx
mov edi eax
mov eax [ ebx + 0x10 ]
mov esi [ eax ]
cmp esi eax
je r-xdata
movzx edx [ edi + 0x4 ]
mov ecx [ ebx + 0x40 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x19 ] 0x0
lea edi [ ebx + 0x3c ]
jne r-xdata
mov ecx [ esi + 0x8 ]
movzx edx [ edi + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
push edx
call eax
mov esi [ esi ]
cmp esi [ ebx + 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ ebp - 0x4 ] ecx
cmp ecx eax
je r-xdata
nop
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
cmp dx [ ecx + 0xc ]
jb r-xdata
mov ecx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x14 ]
mov ebx [ esi + 0x10 ]
push eax
call [ UnregisterDeviceNotification@IAT ]
push ebx
call [ CloseHandle@IAT ]
push esi
lea ecx [ ebp - 0x8 ]
push ecx
push edi
call sub_10021110
lea eax [ ebp - 0x4 ]
jmp r-xdata
cmp [ eax + 0xc ] dx
jae r-xdata
cmp [ eax + 0x19 ] 0x0
je r-xdata
mov esi [ eax ]
cmp esi [ ebx + 0x40 ]
je r-xdata
sub_10020f90
push ebp
mov ebp esp
and esp 0xfffffff8
push ebx
push esi
mov ebx edx
cmp eax 0x219
jne r-xdata
cmp eax 0x11
je r-xdata
cmp ecx 0x8000
jne r-xdata
mov eax 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x16
jne r-xdata
cmp ecx 0x8004
je r-xdata
mov ecx edi
call sub_10020a30
mov eax 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebx
push ecx
push eax
mov eax [ edi + 0x4 ]
push eax
call [ DefWindowProcW@IAT ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x10 ]
mov esi [ eax ]
cmp esi eax
je r-xdata
cmp ecx 0x8001
jne r-xdata
xor eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0x18 ]
call edx
mov esi [ esi ]
cmp esi [ edi + 0x10 ]
jne r-xdata
mov ecx edi
call sub_10021020
sub_10021020
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b968
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
cmp [ ebx + 0x4 ] 0x6
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ecx + 0x40 ]
mov edx [ esi ]
cmp edx esi
je r-xdata
mov eax [ ebx + 0x10 ]
push eax
call [ UnregisterDeviceNotification@IAT ]
mov ecx [ ebx + 0xc ]
push ecx
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x10 ]
lea ecx [ ecx ]
movzx eax [ edx + 0xc ]
test ax ax
jne r-xdata
cmp [ edx + 0x19 ] 0x0
jne r-xdata
mov [ ebp - 0x14 ] r--data
mov [ ebp - 0x10 ] ax
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x0
call sub_10020ef0
cmp edx esi
jne r-xdata
mov eax [ edx + 0x8 ]
cmp [ eax + 0x19 ] 0x0
jne r-xdata
cmp [ edx + 0x14 ] edi
je r-xdata
jmp r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax + 0x19 ] 0x0
jne r-xdata
mov edx eax
mov eax [ edx ]
cmp [ eax + 0x19 ] 0x0
jne r-xdata
mov edx eax
cmp edx [ eax + 0x8 ]
jne r-xdata
mov edi edi
mov edx eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0x19 ] 0x0
je r-xdata
mov edx eax
mov eax [ edx ]
cmp [ eax + 0x19 ] 0x0
je r-xdata
jmp r-xdata
sub_10021110
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x8
cmp [ eax + 0x19 ] 0x0
je r-xdata
push ebx
push esi
mov ebx eax
push edi
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ebx
call sub_100215c0
mov ecx [ ebx ]
cmp [ ecx + 0x19 ] 0x0
je r-xdata
push r--data
call sub_1003626a
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x19 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x19 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x19 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x8 ] ecx
cmp [ ecx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x19 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ebx + 0x18 ]
mov cl [ eax + 0x18 ]
mov [ eax + 0x18 ] dl
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x18 ] cl
mov eax [ ebp - 0x4 ]
mov bl 0x1
cmp [ eax + 0x18 ] bl
jne r-xdata
cmp [ edi + 0x19 ] 0x0
je r-xdata
mov eax [ edi ]
cmp [ eax + 0x19 ] 0x0
mov ecx edi
jne r-xdata
mov ecx esi
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_1002e8fb
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
mov ecx [ edx + 0x4 ]
cmp edi [ ecx + 0x4 ]
je r-xdata
mov eax edi
call sub_100214a0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax [ edx + 0x4 ]
mov [ eax ] ecx
nop
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0xc
dec eax
mov [ ecx + 0x8 ] eax
mov [ edi + 0x18 ] bl
cmp [ edi + 0x18 ] bl
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x19 ] 0x0
je r-xdata
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x18 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x18 ] 0x0
jne r-xdata
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
mov [ ecx + 0x18 ] bl
push edx
mov ecx esi
mov [ esi + 0x18 ] 0x0
call sub_10021440
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
mov [ ecx + 0x18 ] bl
push edx
mov ecx esi
mov [ esi + 0x18 ] 0x0
call sub_100213e0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x18 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x18 ] bl
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
cmp [ eax + 0x18 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x18 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x18 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x18 ] bl
je r-xdata
mov al [ esi + 0x18 ]
mov [ ecx + 0x18 ] al
mov [ esi + 0x18 ] bl
mov ecx [ ecx ]
mov [ ecx + 0x18 ] bl
push edx
mov ecx esi
call sub_10021440
mov eax [ ecx + 0x8 ]
mov [ eax + 0x18 ] bl
push edx
mov [ ecx + 0x18 ] 0x0
call sub_100213e0
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x18 ] 0x0
mov al [ esi + 0x18 ]
mov [ ecx + 0x18 ] al
mov [ esi + 0x18 ] bl
mov ecx [ ecx + 0x8 ]
mov [ ecx + 0x18 ] bl
push edx
mov ecx esi
call sub_100213e0
jmp r-xdata
mov eax [ ecx ]
mov [ eax + 0x18 ] bl
push edx
mov [ ecx + 0x18 ] 0x0
call sub_10021440
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
sub_10021370
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
cmp edx ecx
je r-xdata
push edi
movzx edi [ ebx ]
lea esp [ esp ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
mov ecx [ ecx ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn
mov si [ ebx ]
cmp si [ edx + 0xc ]
jb r-xdata
mov edx ecx
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
jmp r-xdata
lea ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn
cmp [ ecx + 0xc ] di
jae r-xdata
pop edi
cmp [ ecx + 0x19 ] 0x0
je r-xdata
sub_100213e0
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x19 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_10021440
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x19 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_100214c0
push ebp
mov ebp esp
sub esp 0xc
push 0xc
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_1002e39e
push r--data
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0xc ] r--data
call sub_10030edf
int3
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] ecx
lea ecx [ eax + 0x8 ]
mov [ eax + 0x4 ] edx
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
mov edx [ edx ]
mov [ ecx ] edx
sub_10021520
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push edi
mov edi eax
mov eax [ edi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
cmp [ ecx + 0x19 ] 0x0
mov edx ecx
jne r-xdata
call sub_10021610
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
push edx
lea edx [ ebp - 0x4 ]
push edx
push edi
call sub_10021110
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x19 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x19 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x19 ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0x8 ] ecx
jmp r-xdata
lea esp [ esp ]
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x19 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x19 ] 0x0
je r-xdata
sub_100215c0
mov ecx [ eax ]
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
retn
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x19 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
mov ecx [ edx ]
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
mov [ eax ] ecx
mov edx [ eax ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] edx
retn
lea esp [ esp ]
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x19 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx ]
cmp [ ecx + 0x19 ] 0x0
je r-xdata
sub_10021610
mov eax [ edi + 0x4 ]
push ebx
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x19 ] 0x0
push esi
mov esi ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov eax [ edi + 0x4 ]
pop esi
mov [ eax + 0x8 ] eax
mov [ edi + 0x8 ] 0x0
pop ebx
retn
mov ecx [ esi + 0x8 ]
push ecx
mov ecx edi
call sub_10021660
mov esi [ esi ]
push ebx
call sub_1002e8fb
add esp 0x4
cmp [ esi + 0x19 ] 0x0
mov ebx esi
je r-xdata
sub_10021660
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x19 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_10021660
mov esi [ esi ]
push edi
call sub_1002e8fb
add esp 0x4
cmp [ esi + 0x19 ] 0x0
mov edi esi
je r-xdata
sub_100216a0
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
push ebx
push edi
mov edi [ edx + 0x4 ]
mov eax [ edi + 0x4 ]
cmp [ eax + 0x19 ] 0x0
mov cl 0x1
mov [ ebp - 0x8 ] cl
jne r-xdata
mov ebx edi
mov [ ebp - 0x4 ] ebx
test cl cl
je r-xdata
mov ecx [ ebp + 0xc ]
movzx ebx [ ecx + 0xc ]
mov eax [ ebp + 0xc ]
mov cx [ ebx + 0xc ]
push eax
cmp cx [ eax + 0xc ]
jae r-xdata
mov eax [ edx + 0x4 ]
cmp edi [ eax ]
jne r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
call sub_1002e8fb
add esp 0x4
pop edi
mov [ esi ] ebx
mov [ esi + 0x4 ] 0x0
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
mov ecx edi
mov ebx edx
call sub_10021770
mov edx [ eax ]
pop edi
mov [ esi ] edx
mov [ esi + 0x4 ] 0x1
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x4 ]
call sub_10021990
mov ebx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push ecx
push 0x1
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
mov ebx edx
call sub_10021770
mov ecx [ eax ]
pop edi
mov [ esi ] ecx
mov [ esi + 0x4 ] 0x1
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp bx [ eax + 0xc ]
mov edi eax
setb cl
mov [ ebp - 0x8 ] cl
test cl cl
je r-xdata
cmp [ eax + 0x19 ] 0x0
je r-xdata
sub_10021770
push ebp
mov ebp esp
mov edx [ ebx + 0x8 ]
cmp edx 0x15555554
jb r-xdata
inc edx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] edx
mov [ edi + 0x4 ] ecx
mov edx [ ebx + 0x4 ]
xor al al
cmp ecx edx
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
call sub_1002e8fb
add esp 0x4
push r--data
call sub_1003621d
cmp [ ebp + 0xc ] al
je r-xdata
mov [ edx + 0x4 ] edi
mov ecx [ ebx + 0x4 ]
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
jmp r-xdata
mov [ ecx + 0x8 ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x8 ] edi
mov edx [ edi + 0x4 ]
mov ecx edi
cmp [ edx + 0x18 ] al
jne r-xdata
mov [ edx ] edi
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
mov [ ecx + 0x18 ] 0x1
pop edi
pop ebp
retn 0xc
push esi
mov esi [ esi ]
cmp [ esi + 0x18 ] al
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x18 ] al
jne r-xdata
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x18 ] 0x1
mov [ esi + 0x18 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x18 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x18 ] 0x1
mov [ esi + 0x18 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x18 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x18 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x18 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x19 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx ]
mov esi [ edx + 0x8 ]
mov [ ecx ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x19 ] al
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x18 ] al
je r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x18 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x18 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x19 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx + 0x8 ]
mov esi [ edx ]
mov [ ecx + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x19 ] al
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
pop esi
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x10 ]
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] ecx
mov [ ecx + 0x4 ] edx
sub_10021990
mov ecx [ eax ]
cmp [ ecx + 0x19 ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x19 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov [ eax ] ecx
retn
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x19 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp edx [ ecx ]
jne r-xdata
mov [ eax ] edx
retn
nop
retn
mov [ eax ] ecx
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x19 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x19 ] 0x0
je r-xdata
sub_100219f0
push ebp
mov ebp esp
sub esp 0x10
push 0x1c
call sub_1002e957
xor edx edx
add esp 0x4
cmp eax edx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
call sub_1002e39e
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_10030edf
int3
mov ecx [ esi + 0x4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
lea ecx [ eax + 0xc ]
mov [ eax + 0x18 ] dx
cmp ecx edx
je r-xdata
mov esp ebp
pop ebp
retn
mov dx [ edi ]
mov [ ecx ] dx
mov edx [ edi + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ edi + 0x8 ]
mov [ ecx + 0x8 ] edx
sub_10021a60
push ebp
mov ebp esp
sub esp 0x2f4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax 0x1
call sub_1002c070
lea edx [ ebp - 0x10 ]
sub edx eax
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
jne r-xdata
mov ax [ esi + 0x4 ]
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] ax
call [ GetDriveTypeW@IAT ]
cmp eax 0x2
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_1002e0f2
mov esp ebp
pop ebp
retn
push 0x171
lea edx [ ebp - 0x2f4 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
call [ QueryDosDeviceW@IAT ]
test eax eax
je r-xdata
mov eax 0x6
call sub_1002c070
push eax
lea ecx [ ebp - 0x2f4 ]
push ecx
call sub_1002eebe
add esp 0x8
test eax eax
je r-xdata
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
sub_10021b10
push ebp
mov ebp esp
sub esp 0xa8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov eax 0x7
mov esi ecx
call sub_1002c070
lea edx [ ebp - 0x70 ]
sub edx eax
xor edi edi
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
cmp cx di
jne r-xdata
mov ax [ esi + 0x4 ]
push edi
push edi
push 0x3
push edi
push 0x3
push edi
lea ecx [ ebp - 0x70 ]
push ecx
mov [ ebp - 0x68 ] ax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push edi
xor eax eax
lea edx [ ebp - 0xa8 ]
push edx
push 0x28
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x74 ] eax
lea eax [ ebp - 0xa4 ]
push eax
push 0xc
lea ecx [ ebp - 0x7c ]
push ecx
push 0x2d1400
push esi
mov [ ebp - 0x7c ] edi
mov [ ebp - 0x78 ] edi
call [ DeviceIoControl@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
push esi
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x4 ]
xor eax eax
cmp edi 0x7
sete al
pop edi
xor ecx ebp
pop esi
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x88 ]
sub_10021bf0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10021c30
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b939
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x18 ] 0x1
mov [ ebp - 0x14 ] ebx
inc ebx
mov [ ebp - 0x14 ] ebx
cmp ebx 0x1f
jb r-xdata
mov eax [ esi + 0x4 ]
lea edx [ ebx + 0x41 ]
movzx edi dx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] edi
cmp ecx eax
jae r-xdata
mov ecx ebx
mov eax 0x1
shl eax cl
mov ecx eax
and ecx [ ebp + 0xc ]
cmp ecx eax
jne r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x8 ]
cmp eax ecx
jne r-xdata
mov edx [ esi ]
cmp edx ecx
ja r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx [ esi ]
sub eax edx
sar eax 0x1
cmp eax 0x7ffffffe
ja r-xdata
mov edi ecx
mov ecx [ esi + 0x8 ]
sub edi edx
sar edi 0x1
cmp eax ecx
jne r-xdata
add [ esi + 0x4 ] 0x2
mov [ eax ] di
push r--data
call sub_1003621d
sub ecx edx
inc eax
sar ecx 0x1
cmp eax ecx
jbe r-xdata
mov eax [ esi + 0x4 ]
mov edx [ esi ]
lea edi [ edx + edi * 2 ]
test eax eax
je r-xdata
sub eax edx
sar eax 0x1
cmp eax 0x7ffffffe
ja r-xdata
mov edx ecx
shr edx 0x1
mov ebx 0x7fffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
mov cx [ edi ]
mov [ eax ] cx
jmp r-xdata
sub ecx edx
inc eax
sar ecx 0x1
cmp eax ecx
jbe r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x1
mov ebx 0x7fffffff
sub ebx edx
cmp ebx ecx
jae r-xdata
push ecx
call sub_100146f0
mov ebx [ ebp - 0x14 ]
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
call sub_100146f0
mov ebx [ ebp - 0x14 ]
mov ecx eax
cmp ecx eax
jae r-xdata
sub_10021d80
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c289
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0xc ]
xor edx edx
mov [ ebp - 0x14 ] edx
mov esi [ ecx + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ ebp - 0x10 ] edx
lea eax [ edx + 0x1 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp + 0x8 ] 0x1f
mov ebx eax
and ebx esi
cmp ebx eax
jne r-xdata
mov ebx eax
and ebx esi
cmp ebx eax
je r-xdata
mov ecx 0x1
rol eax 0x1
sub [ ebp + 0x8 ] ecx
jne r-xdata
cmp ecx eax
je r-xdata
or edx eax
mov ecx eax
and ecx [ ebp - 0x14 ]
cmp ecx eax
jne r-xdata
xor eax eax
lea esi [ edi + 0x10 ]
mov [ edi ] eax
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
push edx
lea edx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] eax
push edx
mov [ ebp - 0x14 ] ecx
call sub_10021c30
add esp 0x8
mov ebx eax
xor ecx ecx
mov [ ebp - 0x4 ] 0x1
cmp edi ebx
je r-xdata
or [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x24 ]
cmp eax ecx
je r-xdata
mov eax [ edi ]
cmp eax ecx
je r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp - 0x24 ]
push edx
call sub_10021c30
add esp 0x8
mov ebx eax
xor ecx ecx
cmp esi ebx
je r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ edi ] ecx
mov [ edi + 0x4 ] ecx
mov [ edi + 0x8 ] ecx
mov eax [ ebx ]
mov [ edi ] eax
mov edx [ ebx + 0x4 ]
mov [ edi + 0x4 ] edx
mov eax [ ebx + 0x8 ]
mov [ edi + 0x8 ] eax
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
push eax
call sub_1002e8fb
add esp 0x4
xor ecx ecx
mov eax [ ebp - 0x24 ]
cmp eax ecx
je r-xdata
mov eax [ esi ]
cmp eax ecx
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi ] ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov eax [ ebx ]
mov [ esi ] eax
mov edx [ ebx + 0x4 ]
mov [ esi + 0x4 ] edx
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
push eax
call sub_1002e8fb
add esp 0x4
xor ecx ecx
sub_10021ef0
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0xc ]
mov edx [ ecx ]
push ebx
push eax
mov eax [ edx + 0x14 ]
call eax
mov ebx eax
call sub_10021fd0
add esp 0x4
mov [ esi + 0x8 ] eax
pop ebx
test eax eax
jne r-xdata
mov eax 0x3
pop esi
retn
xor eax eax
cmp [ esi + 0x8 ] eax
pop esi
setne al
retn
sub_10021f40
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a9b8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
push 0x1
add eax 0x4
push eax
call [ InterlockedExchange@IAT ]
mov [ esi + 0x8 ] 0x0
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x4 ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10021fd0
push ebp
mov ebp esp
push esi
push edi
push 0x40
call sub_1002e957
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
xor esi esi
mov [ eax ] r--data
mov [ eax + 0x28 ] 0x7
mov [ eax + 0x24 ] edi
xor ecx ecx
mov [ eax + 0x14 ] cx
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x34 ] edi
mov [ eax + 0x38 ] edi
mov [ eax + 0x3c ] edi
mov [ eax + 0x30 ] edi
mov esi eax
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ esi + 0x14 ]
mov eax ebx
call sub_1000bc70
mov edx [ ebp + 0x8 ]
push edi
push edi
push esi
push sub_100225b0
push edi
push edi
mov [ esi + 0x30 ] edx
call [ CreateThread@IAT ]
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
mov eax ebx
lea edx [ eax + 0x2 ]
mov edi edi
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
pop edi
xor eax eax
pop esi
pop ebp
retn
pop edi
mov eax esi
pop esi
pop ebp
retn
sub_10022090
push ebp
mov ebp esp
push 0xffffffff
push sub_1003aa1b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
cmp [ edi + 0x8 ] 0x0
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ edi + 0xc ] 0x0
jne r-xdata
push 0x14
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
mov ecx [ edi + 0x34 ]
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
mov edi [ edi + 0x34 ]
mov [ esi + 0xc ] eax
mov [ esi ] r--data
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] 0x0
mov [ esi + 0x10 ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10022180
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100224c0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_100221d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b2dc
mov eax [ fs : 0x0 ]
push eax
mov eax 0x53dc
call sub_10035c20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
lea esp [ esp ]
push 0x1
call [ Sleep@IAT ]
cmp [ esi + 0xc ] ebx
jne r-xdata
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ esi + 0x3c ] ebx
jne r-xdata
cmp [ esi + 0x34 ] ebx
jne r-xdata
mov eax [ esi + 0x24 ]
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1002eb41
lea ecx [ esi + 0x14 ]
add esp 0x4
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov ecx [ esi + 0x3c ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
cmp [ esi + 0x38 ] eax
jne r-xdata
cmp [ esi + 0x30 ] ebx
je r-xdata
mov edi eax
sub edi ecx
lea esp [ esp ]
mov ecx [ ecx ]
mov ecx [ esi + 0x3c ]
mov edx [ ecx ]
mov edx [ edx + 0x14 ]
push 0x53d3
lea eax [ ebp - 0x53e4 ]
push eax
call edx
mov edi eax
cmp edi ebx
jne r-xdata
push 0x1
lea eax [ esi + 0x8 ]
push eax
call [ InterlockedExchange@IAT ]
mov ecx [ esi + 0x3c ]
cmp ecx ebx
je r-xdata
mov ecx [ esi + 0x3c ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
push eax
call sub_1002eb41
push 0x18
mov ebx eax
call sub_1002e957
mov edi eax
add esp 0x8
mov [ ebp - 0x53e8 ] edi
mov [ ebp - 0x4 ] 0x1
test edi edi
je r-xdata
mov ecx [ esi + 0x3c ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
cmp eax 0x50fbc
jb r-xdata
movzx edx [ ecx ]
mov [ edi + ecx ] dx
add ecx 0x2
cmp dx bx
jne r-xdata
mov edi eax
call sub_1000a4e0
mov ebx eax
test ebx ebx
jne r-xdata
mov edx [ esi + 0x38 ]
mov ecx [ esi + 0x34 ]
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
push edx
push edi
lea edx [ ebp - 0x53e4 ]
push edx
call eax
cmp eax edi
je r-xdata
push 0x1
lea eax [ esi + 0xc ]
push eax
call [ InterlockedExchange@IAT ]
mov ecx [ esi + 0x3c ]
cmp ecx ebx
je r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ esi + 0x3c ] ebx
jmp r-xdata
xor edi edi
mov ecx [ esi + 0x3c ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov [ edi + 0x8 ] eax
xor eax eax
mov [ edi ] r--data
mov [ edi + 0x4 ] ebx
mov [ edi + 0xc ] eax
mov [ edi + 0x14 ] eax
mov [ edi + 0x10 ] 0x1
jmp r-xdata
mov ecx [ esi + 0x30 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
push 0x1
push eax
call sub_1000a460
add esp 0x8
cmp eax ebx
jne r-xdata
push 0x18
call sub_1002e957
mov edi eax
add esp 0x4
mov [ ebp - 0x53e8 ] edi
mov [ ebp - 0x4 ] 0x0
test edi edi
je r-xdata
push 0x1
lea eax [ esi + 0xc ]
push eax
call [ InterlockedExchange@IAT ]
jmp r-xdata
add [ esi + 0x38 ] eax
jmp r-xdata
push 0x1
lea eax [ esi + 0xc ]
push eax
call [ InterlockedExchange@IAT ]
mov ecx [ esi + 0x3c ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x3c ] ebx
jmp r-xdata
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] 0x0
xor ebx ebx
cmp [ edi + 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ edi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0x34 ] eax
mov [ esi + 0x38 ] ebx
jmp r-xdata
push 0x1
lea eax [ esi + 0xc ]
push eax
call [ InterlockedExchange@IAT ]
jmp r-xdata
xor edi edi
mov eax [ ebx ]
mov edx [ eax + 0xc ]
mov ecx ebx
call edx
xor ecx ecx
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0x10 ] ecx
mov [ edi + 0xc ] eax
mov [ edi ] r--data
mov [ edi + 0x14 ] ebx
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ esi + 0x3c ] ebx
jmp r-xdata
mov [ edi + 0xc ] 0x1
mov eax [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
push eax
call sub_1002e957
add esp 0x4
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x3c ] edi
xor ebx ebx
mov ecx [ edi + 0x8 ]
push ecx
push ebx
push eax
call sub_10033950
add esp 0xc
mov [ edi + 0x10 ] 0x1
sub_100224c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b29b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0x10 ]
cmp eax edi
je r-xdata
mov ecx [ esi + 0x3c ]
cmp ecx edi
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ esi + 0x10 ] edi
mov ecx [ esi + 0x34 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x3c ] edi
cmp [ esi + 0x28 ] 0x8
jb r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov ecx [ esi + 0x34 ]
cmp ecx edi
je r-xdata
xor ecx ecx
mov [ esi + 0x28 ] 0x7
mov [ esi + 0x24 ] edi
mov [ esi + 0x14 ] cx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x14 ]
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x34 ] edi
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
sub_10022570
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
pop esi
jmp sub_10022090
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0xc ]
mov edx [ ecx ]
push ebx
push eax
mov eax [ edx + 0x14 ]
call eax
mov ebx eax
call sub_10021fd0
add esp 0x4
mov [ esi + 0x8 ] eax
pop ebx
test eax eax
jne r-xdata
pop esi
retn
sub_100225b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
call sub_100221d0
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
sub_100225f0
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
pop ebp
jmp eax
pop ebp
retn 0x4
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
sub_10022620
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
call sub_10022660
test edi edi
je r-xdata
xor eax eax
pop edi
pop ebp
retn 0x4
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
sub_10022660
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b268
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ edi + 0x30 ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
lea esi [ edi + 0x6c ]
push esi
mov [ ebp - 0x10 ] ebx
call [ EnterCriticalSection@IAT ]
cmp [ edi + 0x94 ] 0x17
jae r-xdata
push 0x1
call [ Sleep@IAT ]
jmp r-xdata
push esi
call [ LeaveCriticalSection@IAT ]
cmp [ ebp - 0x10 ] ebx
jne r-xdata
mov [ ebp - 0x10 ] 0x1
mov ecx [ edi + 0x30 ]
test ecx ecx
je r-xdata
mov edx [ edi + 0xa4 ]
test edx edx
je r-xdata
push 0x1
call [ Sleep@IAT ]
jmp r-xdata
mov ecx [ edi + 0x34 ]
test ecx ecx
je r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x8 ]
lea ecx [ edi + 0x4 ]
call eax
mov [ ebp - 0x10 ] eax
cmp eax ebx
je r-xdata
mov eax [ edi + 0xa4 ]
mov edx [ edi + 0x4 ]
lea ecx [ edi + 0x4 ]
push eax
mov eax [ edx + 0x4 ]
mov [ edi + 0xa4 ] ebx
call eax
mov eax [ edi + 0x4 ]
mov edx [ eax + 0x14 ]
lea ecx [ edi + 0x4 ]
call edx
test eax eax
je r-xdata
mov ecx [ edi + 0xa0 ]
push 0x10
mov [ ebp - 0x14 ] ecx
call sub_1002e957
add esp 0x4
cmp eax ebx
je r-xdata
mov ecx [ edi + 0x9c ]
cmp ecx ebx
je r-xdata
push 0x1
lea eax [ edi + 0x34 ]
push eax
call [ InterlockedExchange@IAT ]
xor eax eax
mov edx [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
jmp r-xdata
lea eax [ edi + 0x3c ]
push eax
call [ EnterCriticalSection@IAT ]
cmp [ edi + 0x64 ] ebx
lea esi [ edi + 0x54 ]
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
push eax
call [ Sleep@IAT ]
mov ecx [ ebp - 0x14 ]
push esi
mov [ eax + 0xc ] ecx
mov [ ebp - 0x14 ] eax
call [ EnterCriticalSection@IAT ]
lea edx [ ebp - 0x14 ]
push edx
lea eax [ edi + 0x84 ]
call sub_10022e50
push esi
call [ LeaveCriticalSection@IAT ]
jmp r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0xc ] 0x1
mov [ ebp - 0x28 ] r--data
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x18 ] 0xffffffff
mov [ ebp - 0x4 ] ebx
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x10 ]
lea ecx [ edi + 0x4 ]
lea edx [ ebp - 0x28 ]
push edx
call eax
test eax eax
jne r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
lea eax [ edi + 0x3c ]
push eax
call [ LeaveCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ esi + 0x14 ] ebx
jne r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0xc ] 0x1
cmp [ esi + 0xc ] ebx
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x4 ] ebx
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ esi + 0x14 ] ebx
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x4 ] ebx
sub_100228b0
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
mov edi [ esi + 0x4 ]
push 0x1
lea eax [ edi + 0x30 ]
push eax
mov [ esi ] r--data
call [ InterlockedExchange@IAT ]
mov ecx [ edi + 0x38 ]
push ecx
call [ CloseHandle@IAT ]
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10022900
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b243
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x20 ] 0x7
xor ebx ebx
mov [ esi + 0x1c ] ebx
xor eax eax
mov [ esi + 0xc ] ax
mov eax [ ebp + 0xc ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x28 ] edx
mov [ esi + 0x2c ] eax
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x54 ] r--data
mov [ esi + 0x58 ] ebx
mov [ esi + 0x5c ] ebx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x64 ] ebx
mov [ esi + 0x60 ] 0x1
mov [ ebp - 0x4 ] 0x1
lea edi [ esi + 0x84 ]
push 0x8
mov [ edi ] ebx
call sub_1002e957
add esp 0x4
cmp eax ebx
je r-xdata
lea edx [ ebp + 0xc ]
push edx
lea ecx [ ebp - 0x18 ]
mov [ ebp + 0xc ] ebx
call sub_1002e39e
push r--data
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x18 ] r--data
call sub_10030edf
int3
mov [ edi ] eax
xor ecx ecx
mov [ eax ] ecx
xor edx edx
mov [ eax + 0x4 ] edx
mov ecx [ edi ]
mov [ ecx ] edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebx
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x2
mov edi [ InitializeCriticalSection@IAT ]
mov [ esi + 0xa4 ] ebx
mov [ esi + 0x9c ] edx
mov [ esi + 0xa0 ] eax
lea ecx [ esi + 0x3c ]
mov [ esi + 0x34 ] ebx
push ecx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x38 ] ebx
call edi
lea edx [ esi + 0x6c ]
push edx
call edi
cmp [ esi + 0x60 ] ebx
jne r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ esi + 0x68 ] ebx
je r-xdata
mov [ esi + 0x60 ] 0x1
jmp r-xdata
mov eax [ esi + 0x5c ]
mov edi [ esi + 0x58 ]
push eax
call sub_1002e957
add esp 0x4
mov [ esi + 0x58 ] eax
cmp eax ebx
je r-xdata
mov [ esi + 0x30 ] 0x1
mov ecx [ esi + 0x5c ]
push ecx
push edi
push eax
call sub_10033950
add esp 0xc
mov [ esi + 0x64 ] 0x1
sub_10022a70
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10022ac0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10022ac0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b203
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x10 ] edi
mov [ edi ] r--data
lea eax [ edi + 0x6c ]
push eax
mov [ ebp - 0x4 ] 0x2
call [ EnterCriticalSection@IAT ]
mov eax [ edi + 0x94 ]
test eax eax
je r-xdata
lea esi [ edi + 0x6c ]
push esi
call [ LeaveCriticalSection@IAT ]
mov ebx [ DeleteCriticalSection@IAT ]
lea eax [ edi + 0x3c ]
push eax
call ebx
push esi
call ebx
mov ecx [ edi + 0x9c ]
xor esi esi
cmp ecx esi
je r-xdata
lea eax [ ebp - 0x1c ]
lea ecx [ edi + 0x84 ]
call sub_10022f70
mov ecx [ eax ]
test ecx ecx
jne r-xdata
mov ecx [ edi + 0xa4 ]
cmp ecx esi
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ edi + 0x9c ] esi
mov esi [ ecx ]
xor esi esi
jmp r-xdata
lea esi [ edi + 0x84 ]
call sub_10022f00
mov eax [ esi ]
push eax
call sub_1002e8fb
mov [ esi ] 0x0
add esp 0x4
cmp [ edi + 0x64 ] 0x0
mov [ edi + 0x54 ] r--data
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ edi + 0xa4 ] esi
mov edx [ esi + 0x4 ]
mov eax [ edx + eax * 4 ]
lea eax [ eax + ecx * 4 ]
mov ecx [ eax ]
xor esi esi
cmp ecx esi
je r-xdata
sub eax edx
mov ecx [ eax + 0x8 ]
mov edx [ esi + 0x8 ]
mov eax ecx
shr eax 0x2
and ecx 0x3
cmp edx eax
ja r-xdata
lea ecx [ edi + 0x4 ]
mov [ edi + 0x54 ] r--data
mov [ ebp - 0x4 ] 0xffffffff
call sub_10026960
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi + 0x60 ] 0x0
jne r-xdata
mov eax [ edi + 0x94 ]
cmp eax esi
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov eax [ edi + 0x58 ]
test eax eax
je r-xdata
cmp [ edi + 0x68 ] 0x0
jne r-xdata
cmp [ edi + 0x94 ] esi
jne r-xdata
mov edx [ edi + 0x8c ]
inc [ edi + 0x90 ]
add edx edx
add edx edx
cmp edx [ edi + 0x90 ]
ja r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ edi + 0x58 ] 0x0
dec eax
mov [ edi + 0x94 ] eax
cmp eax esi
jne r-xdata
mov [ edi + 0x90 ] esi
mov [ edi + 0x90 ] esi
sub_10022c60
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b1c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x38 ] 0x0
jne r-xdata
lea edi [ esi + 0x3c ]
push edi
call [ EnterCriticalSection@IAT ]
mov edx [ esi + 0x54 ]
mov eax [ edx + 0xc ]
add esi 0x54
mov ecx esi
call eax
mov [ ebp - 0x30 ] r--data
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x24 ] eax
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x30 ]
mov eax 0x1
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x1c ] r--data
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] eax
push eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] al
call sub_1000ae20
add esp 0x4
push edi
call [ LeaveCriticalSection@IAT ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
lea ecx [ esi + 0x4 ]
push edx
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10022d70
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
mov ecx [ esi + 0x34 ]
lea eax [ esi + 0x34 ]
push edi
test ecx ecx
je r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
push 0x0
push eax
call [ InterlockedExchange@IAT ]
lea eax [ esi + 0x6c ]
push eax
xor edi edi
mov [ ebp - 0x4 ] eax
call [ EnterCriticalSection@IAT ]
cmp [ esi + 0x94 ] edi
jbe r-xdata
push 0x0
push 0x0
push esi
push sub_10022620
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ esi + 0x38 ] eax
mov eax [ ebp - 0x4 ]
push eax
call [ LeaveCriticalSection@IAT ]
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x10 ]
lea ecx [ esi + 0x84 ]
call sub_10022f70
mov ecx [ eax ]
test ecx ecx
jne r-xdata
mov edx [ ecx ]
xor edx edx
jmp r-xdata
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
mov edi [ eax + ecx * 4 ]
mov eax [ esi + 0x94 ]
test eax eax
je r-xdata
sub eax edi
mov ecx [ eax + 0x8 ]
mov edi [ edx + 0x8 ]
mov eax ecx
shr eax 0x2
and ecx 0x3
cmp edi eax
ja r-xdata
mov edx [ esi + 0x8c ]
inc [ esi + 0x90 ]
add edx edx
add edx edx
cmp edx [ esi + 0x90 ]
ja r-xdata
dec eax
mov [ esi + 0x94 ] eax
jne r-xdata
mov [ esi + 0x90 ] 0x0
mov [ esi + 0x90 ] 0x0
sub_10022e50
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0xc ]
add ecx eax
push edi
test cl 0x3
jne r-xdata
mov edi [ ebx + 0xc ]
add edi [ ebx + 0x10 ]
mov eax [ ebx + 0x8 ]
push esi
mov esi edi
shr esi 0x2
cmp eax esi
ja r-xdata
add eax 0x4
shr eax 0x2
cmp [ ebx + 0x8 ] eax
ja r-xdata
mov edx [ ebx + 0x4 ]
cmp [ edx + esi * 4 ] 0x0
jne r-xdata
sub esi eax
call sub_10022f90
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + esi * 4 ]
and edi 0x3
lea edi [ edx + edi * 4 ]
pop esi
test edi edi
je r-xdata
push 0x10
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
inc [ ebx + 0x10 ]
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ edi ] ecx
lea edx [ ebp - 0x4 ]
push edx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_1002e39e
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_10030edf
int3
mov ecx [ ebx + 0x4 ]
mov [ ecx + esi * 4 ] eax
sub_10022f00
mov eax [ esi + 0x10 ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
push edi
mov edi [ esi + 0x8 ]
cmp edi ebx
jbe r-xdata
lea ebx [ ebx ]
mov eax [ esi + 0x4 ]
pop edi
cmp eax ebx
je r-xdata
lea ebx [ ebx ]
cmp [ esi + 0x10 ] ebx
jne r-xdata
dec eax
mov [ esi + 0x10 ] eax
jne r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
pop ebx
retn
push eax
call sub_1002e8fb
add esp 0x4
cmp edi ebx
ja r-xdata
mov ecx [ eax ]
push ecx
call sub_1002e8fb
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esi + 0xc ] ebx
mov eax [ esi + 0x4 ]
dec edi
cmp [ eax + edi * 4 ] ebx
lea eax [ eax + edi * 4 ]
je r-xdata
sub_10022f90
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebx + 0x8 ]
mov eax 0xfffffff
sub eax ecx
mov [ ebp - 0x8 ] 0x1
cmp eax 0x1
jae r-xdata
mov eax ecx
shr eax 0x1
cmp eax 0x8
jae r-xdata
push r--data
call sub_1003621d
cmp eax 0x1
jbe r-xdata
mov eax 0x8
jmp r-xdata
mov eax [ ebp - 0x8 ]
push esi
push edi
mov edi [ ebx + 0xc ]
xor esi esi
shr edi 0x2
add eax ecx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] esi
cmp eax esi
jbe r-xdata
mov edx 0xfffffff
sub edx eax
cmp ecx edx
ja r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ ebx + 0x4 ]
add eax eax
add eax eax
lea esi [ edi * 4 ]
lea edx [ esi + ecx ]
sub eax edx
add eax ecx
sar eax 0x2
add eax eax
add eax eax
push eax
push edx
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ esi + edx ]
push eax
call sub_1002e460
mov edx [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
mov ecx [ ebx + 0x4 ]
add esp 0xc
cmp edi edx
ja r-xdata
cmp eax 0x3fffffff
ja r-xdata
mov [ ebp - 0x8 ] eax
lea edi [ edx * 4 ]
mov edx edi
sar edx 0x2
add edx edx
add edx edx
push edx
push ecx
push eax
call sub_1002e460
mov eax [ ebx + 0x4 ]
lea ecx [ edi + eax ]
sub esi ecx
add esi eax
mov eax [ ebp - 0x4 ]
sar esi 0x2
add esi esi
add esi esi
push esi
push ecx
push eax
call sub_1002e460
mov ecx [ ebp - 0x8 ]
add esp 0x18
lea edi [ esi + eax ]
test ecx ecx
je r-xdata
sar esi 0x2
mov [ ebp - 0xc ] esi
mov esi edx
mov edx [ ebp - 0xc ]
add edx edx
add edx edx
push edx
push ecx
push eax
mov [ ebp - 0xc ] edx
call sub_1002e460
mov edx eax
add edx [ ebp - 0xc ]
add esp 0xc
sub esi edi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] esi
call sub_1002e39e
push r--data
lea ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x1c ] r--data
call sub_10030edf
int3
lea ecx [ eax * 4 ]
push ecx
call sub_1002e957
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
mov eax [ ebx + 0x4 ]
pop edi
pop esi
test eax eax
je r-xdata
xor eax eax
[ edi ]
test edi edi
je r-xdata
mov ecx esi
xor eax eax
mov edi edx
[ edi ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add [ ebx + 0x8 ] edx
mov [ ebx + 0x4 ] ecx
mov esp ebp
pop ebp
retn
push eax
call sub_1002e8fb
add esp 0x4
mov ecx edi
mov edi [ ebp - 0x4 ]
jmp r-xdata
sub_10023120
push ebp
mov ebp esp
push esi
mov esi ecx
xor ecx ecx
call sub_10023160
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0x2c ]
call edx
cmp edx [ esi + 0xc ]
jb r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
ja r-xdata
mov eax 0x1
pop esi
pop ebp
retn 0x4
cmp eax [ esi + 0x8 ]
jb r-xdata
sub_10023160
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x20
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1c ] eax
push ebx
push edi
mov edi ecx
call [ GetTickCount@IAT ]
mov ecx [ esi + 0x18 ]
mov [ esp + 0x8 ] eax
cmp eax ecx
jbe r-xdata
jb r-xdata
mov edx eax
sub edx ecx
cmp edx 0x483848
jbe r-xdata
lea eax [ esp + 0x14 ]
push eax
call [ GetLocalTime@IAT ]
lea ecx [ esp + 0xc ]
push ecx
lea edx [ esp + 0x18 ]
push edx
call [ SystemTimeToFileTime@IAT ]
mov eax [ esi + 0x10 ]
mov edi [ esp + 0xc ]
mov ebx [ esp + 0x10 ]
xor ecx ecx
cmp [ esi + 0x14 ] ecx
jne r-xdata
test edi edi
je r-xdata
cmp eax ecx
mov edi 0x1
push 0xc9
push 0x2a69c000
push ecx
push eax
call sub_10035600
sub edi eax
mov eax [ esp + 0x8 ]
sbb ebx edx
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] ebx
mov [ esi + 0x18 ] eax
test eax eax
je r-xdata
mov ecx [ esp + 0x24 ]
pop edi
pop ebx
xor ecx esp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
add eax 0xffffffff
adc ecx 0xffffffff
sub_10023210
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a8c8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10023290
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push edi
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edi [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
push edi
call edx
test eax eax
jne r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edi [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
push edi
call edx
test eax eax
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push edi
call edx
test eax eax
je r-xdata
pop edi
mov eax 0x1
pop esi
pop ebp
retn 0x4
sub_100232f0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0x20 ]
call edx
test eax eax
jne r-xdata
push 0x2e
push eax
call sub_1002ef1e
add esp 0x8
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x18 ] 0x8
lea ecx [ esi + 0x4 ]
jb r-xdata
push ecx
add eax 0x2
push eax
call sub_1002e28b
add esp 0x8
neg eax
sbb eax eax
inc eax
pop esi
pop ebp
retn 0x4
mov ecx [ ecx ]
sub_10023340
push ebp
mov ebp esp
push 0xffffffff
push sub_1003cf5b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] ebx
xor edi edi
mov [ ebp - 0x4 ] edi
lea esi [ ebx + 0x4 ]
mov [ ebx ] r--data
mov ecx 0x7
xor edx edx
mov [ esi + 0x14 ] ecx
mov [ esi + 0x10 ] edi
mov [ esi ] dx
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x18 ] ecx
xor ecx ecx
mov [ ebp - 0x2c ] cx
mov ecx eax
lea edx [ ecx + 0x2 ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x30 ] edx
mov dx [ ecx ]
add ecx 0x2
cmp dx di
jne r-xdata
sub ecx [ ebp - 0x30 ]
sar ecx 0x1
push ecx
lea ecx [ ebp - 0x2c ]
call sub_1000bc70
lea edi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2
call sub_10013f90
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x2c ]
push eax
call sub_1002e8fb
add esp 0x4
sub_10023400
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x8
jb r-xdata
xor ecx ecx
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] cx
mov [ esi ] r--data
je r-xdata
mov eax [ esi + 0x4 ]
push eax
call sub_1002e8fb
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10023450
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0x28 ]
call edx
mov ecx [ esi + 0x8 ]
dec ecx
cmp ecx 0x3
ja r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
jmp [ ecx * 4 + jump_table_100234a8 ]
cmp eax [ esi + 0x4 ]
pop esi
sbb eax eax
neg eax
pop ebp
retn 0x4
cmp [ esi + 0x4 ] eax
pop esi
sbb eax eax
inc eax
pop ebp
retn 0x4
cmp [ esi + 0x4 ] eax
pop esi
sbb eax eax
neg eax
pop ebp
retn 0x4
cmp eax [ esi + 0x4 ]
pop esi
sbb eax eax
inc eax
pop ebp
retn 0x4
sub_100234c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003cf1b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x54
call sub_1002e957
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
call sub_10023be0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10023530
push ebp
mov ebp esp
push ecx
push r--data
push edi
mov [ ebp - 0x4 ] 0x0
call sub_1002eebe
add esp 0x8
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
test eax eax
jne r-xdata
sub eax edi
xor ecx ecx
sar eax 0x1
mov [ esi ] cx
push eax
mov eax edi
mov ecx esi
call sub_1000bc70
mov eax esi
mov esp ebp
pop ebp
retn
mov [ esi ] ax
mov eax edi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax edi
mov ecx esi
call sub_1000bc70
mov eax esi
mov esp ebp
pop ebp
retn
sub_100235a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
call sub_100237d0
cmp [ esi + 0x30 ] 0xffffffff
jne r-xdata
mov edx [ esi + 0x24 ]
sub edx [ esi + 0x20 ]
mov ecx [ esi + 0x30 ]
mov eax 0x4ec4ec4f
imul edx
sar edx 0x4
mov eax edx
shr eax 0x1f
inc ecx
add eax edx
cmp ecx eax
jb r-xdata
mov eax [ esi + 0x44 ]
lea ecx [ esi + 0x34 ]
push r--data
xor edi edi
call sub_10016d80
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
mov edx esi
mov [ esi + 0x30 ] ecx
call sub_10023a50
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi + 0x24 ]
sub ecx [ esi + 0x20 ]
mov eax 0x4ec4ec4f
imul ecx
sar edx 0x4
mov ecx edx
xor ebx ebx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov ecx [ esi + 0x24 ]
sub ecx [ esi + 0x20 ]
mov eax 0x4ec4ec4f
imul ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
je r-xdata
mov ecx [ esi + 0x24 ]
sub ecx [ esi + 0x20 ]
mov eax 0x4ec4ec4f
imul ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ esi + 0x30 ] ecx
lea ecx [ ecx ]
mov [ esi + 0x30 ] edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
mov edx esi
call sub_10023a50
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
mov eax [ ecx + 0x10 ]
call sub_10016d80
test eax eax
je r-xdata
mov eax [ eax ]
mov ecx [ ebp - 0x4 ]
mov eax [ esi + 0x20 ]
mov edi [ eax + ebx + 0x10 ]
add eax ebx
cmp [ eax + 0x14 ] 0x8
jb r-xdata
lea ecx [ esi + 0x34 ]
push eax
mov eax [ ecx + 0x10 ]
call sub_10016d80
test eax eax
js r-xdata
mov eax [ eax ]
mov ecx [ esi + 0x24 ]
sub ecx [ esi + 0x20 ]
mov edi [ ebp - 0x4 ]
mov eax 0x4ec4ec4f
imul ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
inc edi
add eax edx
add ebx 0x34
mov [ ebp - 0x4 ] edi
cmp edi eax
jb r-xdata
mov ecx [ esi + 0x20 ]
mov edi [ esi + 0x44 ]
lea eax [ esi + 0x34 ]
add ecx ebx
cmp [ eax + 0x14 ] 0x8
jb r-xdata
sub_100236f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d5b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov ebx ecx
mov eax esi
mov [ ebx + 0x30 ] 0xffffffff
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebx + 0x14 ]
sub eax edx
sar eax 0x1
cmp eax ecx
jb r-xdata
push 0x0
lea ecx [ ebx + 0x34 ]
mov eax r--data
call sub_1000bc70
cmp [ ebx + 0x18 ] 0x8
lea eax [ ebx + 0x4 ]
jb r-xdata
push ecx
push eax
push esi
call sub_1002ef9d
add esp 0xc
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ ebx + 0x14 ]
lea edi [ esi + eax * 2 + 0x2 ]
lea esi [ ebp - 0x2c ]
call sub_10023530
lea esi [ ebx + 0x34 ]
mov edi eax
mov [ ebp - 0x4 ] 0x0
call sub_10013f90
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x2c ]
push eax
call sub_1002e8fb
add esp 0x4
jmp r-xdata
sub_100237d0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003d576
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2b0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2a8 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2c0 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x24 ]
sub ecx [ esi + 0x20 ]
lea ebx [ esi + 0x20 ]
mov eax 0x4ec4ec4f
imul ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov ecx [ esp + 0x2c0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x2a8 ]
xor ecx esp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
xor ecx ecx
push ecx
lea edx [ esi + 0x4 ]
mov [ esp + 0x28 ] eax
push edx
or eax 0xffffffff
lea edi [ esp + 0x1c ]
mov [ esp + 0x30 ] 0x7
mov [ esp + 0x1c ] cx
call sub_1000bbc0
push 0x2
mov eax r--data
mov ecx edi
mov [ esp + 0x2cc ] 0x0
call sub_10016ca0
cmp [ esp + 0x28 ] 0x8
mov eax [ esp + 0x14 ]
jae r-xdata
lea ecx [ esp + 0x64 ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov eax edi
cmp [ esp + 0x28 ] 0x8
jb r-xdata
jmp r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call sub_1002e8fb
add esp 0x4
lea ecx [ esp + 0x90 ]
mov eax r--data
lea esp [ esp ]
sbb eax eax
sbb eax 0xffffffff
test dx dx
je r-xdata
lea ecx [ esp + 0x64 ]
push ecx
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x90 ]
mov eax r--data
nop
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
push edi
call [ FindClose@IAT ]
mov esi [ esi + 0x24 ]
mov ebx [ ebx ]
mov ecx esi
sub ecx ebx
mov eax 0x4ec4ec4f
imul ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
push sub_10023cd0
add eax edx
push eax
push esi
push ebx
call sub_100240c0
add esp 0x10
sbb eax eax
sbb eax 0xffffffff
test dx dx
je r-xdata
test eax eax
je r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
xor edx edx
mov [ esp + 0x44 ] 0x7
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x30 ] dx
lea eax [ esp + 0x90 ]
mov [ esp + 0x2c8 ] 0x1
lea edx [ eax + 0x2 ]
lea esp [ esp ]
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ esp + 0x94 ]
lea ecx [ esp + 0x34 ]
call sub_1000bc70
mov ecx [ esp + 0x84 ]
mov eax [ esp + 0x64 ]
mov edx [ esp + 0x78 ]
mov [ esp + 0x50 ] ecx
mov ecx [ esp + 0x68 ]
mov [ esp + 0x4c ] eax
mov eax [ esp + 0x7c ]
mov [ esp + 0x5c ] edx
mov edx [ esp + 0x6c ]
mov [ esp + 0x54 ] ecx
lea ecx [ esp + 0x30 ]
mov [ esp + 0x60 ] eax
mov [ esp + 0x58 ] edx
call sub_10023da0
mov [ esp + 0x2c8 ] 0x0
cmp [ esp + 0x44 ] 0x8
jb r-xdata
test eax eax
je r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
mov eax [ esp + 0x30 ]
push eax
call sub_1002e8fb
add esp 0x4
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
sub_10023a50
push ebp
mov ebp esp
push 0xffffffff
push sub_1003ceeb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ebx edx
push 0x5c
call sub_1002e957
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
imul esi esi 0x34
add esi [ ebx + 0x20 ]
mov eax 0x8
cmp [ esi + 0x14 ] eax
jb r-xdata
mov [ ebp - 0x10 ] esi
mov ecx [ esi ]
mov [ ebp - 0x10 ] ecx
jmp r-xdata
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
push eax
mov eax [ esi + 0x20 ]
lea ecx [ esi + 0x2c ]
push ecx
mov ecx [ esi + 0x1c ]
lea edx [ esi + 0x24 ]
push edx
xor edx edx
and cl 0x10
cmp cl 0x10
sete dl
push eax
mov eax [ edi ]
mov ecx edi
push edx
mov edx [ eax + 0x4 ]
call edx
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov ebx [ ebp - 0x14 ]
push eax
call sub_10026560
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebx ]
add ebx 0x4
cmp [ ebx + 0x14 ] eax
jb r-xdata
sub_10023b20
push ebx
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x50 ] r--data
cmp [ esi + 0x48 ] 0x8
jb r-xdata
xor ebx ebx
xor ecx ecx
mov [ esi + 0x48 ] 0x7
mov [ esi + 0x44 ] ebx
mov [ esi + 0x34 ] cx
mov eax [ esi + 0x20 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x34 ]
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] ebx
cmp [ esi + 0x18 ] 0x8
jb r-xdata
push edi
mov edi [ esi + 0x24 ]
call sub_10024030
mov edx [ esi + 0x20 ]
push edx
call sub_1002e8fb
add esp 0x4
pop edi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] 0x7
xor ecx ecx
mov [ esi + 0x4 ] cx
mov [ esi ] r--data
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
push eax
call sub_1002e8fb
add esp 0x4
sub_10023bb0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10023b20
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10023be0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003ceac
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] ebx
xor edx edx
mov [ ebp - 0x4 ] edx
lea esi [ ebx + 0x4 ]
mov [ ebx ] r--data
mov ecx 0x7
xor edi edi
mov [ esi + 0x14 ] ecx
mov [ esi + 0x10 ] edx
mov [ esi ] di
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x28 ] edx
mov [ ebx + 0x48 ] ecx
mov [ ebx + 0x44 ] edx
mov [ ebx + 0x34 ] di
mov [ ebx + 0x50 ] r--data
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x18 ] ecx
xor ecx ecx
mov [ ebp - 0x2c ] cx
mov ecx eax
lea edi [ ecx + 0x2 ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x30 ] edi
mov di [ ecx ]
add ecx 0x2
cmp di dx
jne r-xdata
sub ecx [ ebp - 0x30 ]
sar ecx 0x1
push ecx
lea ecx [ ebp - 0x2c ]
call sub_1000bc70
lea edi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x5
call sub_10013f90
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
push 0x0
mov eax r--data
lea ecx [ ebx + 0x34 ]
mov [ ebx + 0x30 ] 0xffffffff
call sub_1000bc70
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x2c ]
push edx
call sub_1002e8fb
add esp 0x4
sub_10023cd0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b900
mov eax [ fs : 0x0 ]
push eax
push ebx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x50 ] 0x8
mov eax [ ebp + 0x3c ]
jae r-xdata
mov edi [ ebp + 0x4c ]
push eax
mov eax [ ebp + 0x18 ]
lea ecx [ ebp + 0x8 ]
call sub_10016d80
test eax eax
sets bl
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
lea eax [ ebp + 0x3c ]
xor ecx ecx
cmp [ ebp + 0x50 ] 0x8
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] cx
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_1002e8fb
add esp 0x4
mov al bl
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x3c ]
push edx
call sub_1002e8fb
add esp 0x4
sub_10023d70
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push edi
mov edi [ esi + 0x4 ]
call sub_10024030
mov eax [ esi ]
push eax
call sub_1002e8fb
add esp 0x4
pop edi
sub_10023da0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c47a
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ ebx + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov eax [ ebx ]
cmp eax esi
ja r-xdata
mov edi [ ebx + 0x4 ]
xor eax eax
mov [ ebp - 0x4 ] 0x1
cmp edi eax
je r-xdata
mov ecx ebx
call sub_10023ec0
sub esi eax
mov eax 0x4ec4ec4f
imul esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ ebx + 0x8 ]
jne r-xdata
add [ ebx + 0x4 ] 0x34
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
mov [ edi + 0x10 ] eax
xor edx edx
mov [ edi + 0x14 ] 0x7
push esi
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov ecx [ esi + 0x20 ]
mov [ edi + 0x20 ] ecx
mov edx [ esi + 0x24 ]
mov [ edi + 0x24 ] edx
mov eax [ esi + 0x28 ]
mov [ edi + 0x28 ] eax
mov ecx [ esi + 0x2c ]
mov [ edi + 0x2c ] ecx
mov edx [ esi + 0x30 ]
mov [ edi + 0x30 ] edx
mov edi [ ebx + 0x4 ]
imul esi esi 0x34
add esi [ ebx ]
xor eax eax
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
mov ecx ebx
call sub_10023ec0
push eax
mov [ edi + 0x10 ] eax
xor ecx ecx
mov [ edi + 0x14 ] 0x7
push esi
or eax 0xffffffff
mov [ edi ] cx
call sub_1000bbc0
mov edx [ esi + 0x1c ]
mov [ edi + 0x1c ] edx
mov eax [ esi + 0x20 ]
mov [ edi + 0x20 ] eax
mov ecx [ esi + 0x24 ]
mov [ edi + 0x24 ] ecx
mov edx [ esi + 0x28 ]
mov [ edi + 0x28 ] edx
mov eax [ esi + 0x2c ]
mov [ edi + 0x2c ] eax
mov ecx [ esi + 0x30 ]
mov [ edi + 0x30 ] ecx
jmp r-xdata
sub_10023ec0
mov edx [ ecx + 0x4 ]
push esi
push edi
mov edi [ ecx ]
sub edx edi
mov eax 0x4ec4ec4f
imul edx
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp esi 0x4ec4ec3
jbe r-xdata
mov edx [ ecx + 0x8 ]
sub edx edi
mov eax 0x4ec4ec4f
imul edx
sar edx 0x4
mov eax edx
shr eax 0x1f
inc esi
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_1003621d
pop edi
pop esi
retn
mov edx eax
shr edx 0x1
mov edi 0x4ec4ec4
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_10023f30
mov eax esi
cmp eax esi
jae r-xdata
sub_10023f30
push ebp
mov ebp esp
push 0xffffffff
push sub_1003ce50
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp edi 0x4ec4ec4
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x4ec4ec4f
imul ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax edi
jae r-xdata
push r--data
call sub_1003621d
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_10024070
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push edi
push eax
push edx
mov [ ebp - 0x14 ] eax
call sub_10024950
mov edi [ esi + 0x4 ]
mov ecx [ esi ]
mov edx edi
sub edx ecx
mov eax 0x4ec4ec4f
imul edx
sar edx 0x4
mov ebx edx
shr ebx 0x1f
add esp 0xc
add ebx edx
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
imul ebx ebx 0x34
mov ecx [ ebp - 0x14 ]
imul eax eax 0x34
add eax ecx
add ebx ecx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ebx
mov [ esi ] ecx
mov eax ecx
call sub_10024030
mov ecx [ esi ]
push ecx
call sub_1002e8fb
add esp 0x4
sub_10024030
push esi
mov esi eax
cmp esi edi
je r-xdata
pop esi
retn
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x34
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_1002e8fb
add esp 0x4
sub_10024070
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x4ec4ec4
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_1002e39e
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_10030edf
imul ecx ecx 0x34
push ecx
call sub_1002e957
add esp 0x4
test eax eax
jne r-xdata
sub_100240c0
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov edx ebx
sub edx esi
mov eax 0x4ec4ec4f
imul edx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
push edi
mov [ ebp - 0x4 ] ecx
cmp eax 0x20
jle r-xdata
cmp eax 0x1
jle r-xdata
mov edi [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp esi ebx
je r-xdata
cmp eax 0x20
jle r-xdata
push ecx
push ebx
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_10024200
mov eax edi
cdq
sub eax edx
sar eax 0x1
mov edi eax
cdq
sub eax edx
sar eax 0x1
add edi eax
mov ecx ebx
sub ecx [ ebp - 0x8 ]
mov eax 0x4ec4ec4f
imul ecx
mov ecx [ ebp - 0xc ]
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
sub ecx esi
mov [ ebp - 0x10 ] eax
mov eax 0x4ec4ec4f
imul ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
add esp 0x10
cmp ecx [ ebp - 0x10 ]
jge r-xdata
push ecx
push ebx
call sub_10024c40
add esp 0x8
mov edx ebx
sub edx esi
mov eax 0x4ec4ec4f
imul edx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jle r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
push ecx
push edi
push ebx
push edx
call sub_100240c0
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
push edx
push edi
push eax
push esi
call sub_100240c0
mov esi [ ebp - 0x8 ]
jmp r-xdata
push ecx
mov eax ebx
mov ecx esi
call sub_10024be0
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebx
mov edx esi
call sub_10024ad0
mov ecx [ ebp - 0x4 ]
add esp 0x4
test edi edi
jle r-xdata
mov ecx ebx
sub ecx esi
mov eax 0x4ec4ec4f
imul ecx
mov ecx [ ebp - 0x4 ]
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
add esp 0x10
cmp eax 0x20
jg r-xdata
sub_10024200
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d540
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
mov ecx ebx
sub ecx edi
mov eax 0x4ec4ec4f
imul ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x14 ]
sar esi 0x1
imul esi esi 0x34
push eax
add esi edi
lea eax [ ebx - 0x34 ]
push esi
mov ecx edi
call sub_10024a20
add esp 0x8
lea ecx [ esi + 0x34 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] ecx
cmp edi esi
jae r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x10 ] eax
jae r-xdata
lea ebx [ esi - 0x14 ]
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
jmp r-xdata
sub esp 0x34
mov edi esp
xor ecx ecx
mov [ ebp - 0x24 ] esp
push ecx
mov ebx 0x7
mov [ edi + 0x14 ] ebx
mov [ edi + 0x10 ] 0x0
push esi
or eax 0xffffffff
mov [ edi ] cx
call sub_1000bbc0
mov edx [ esi + 0x1c ]
mov [ edi + 0x1c ] edx
mov eax [ esi + 0x20 ]
mov [ edi + 0x20 ] eax
mov ecx [ esi + 0x24 ]
mov [ edi + 0x24 ] ecx
mov edx [ esi + 0x28 ]
mov [ edi + 0x28 ] edx
mov eax [ esi + 0x2c ]
mov [ edi + 0x2c ] eax
mov ecx [ esi + 0x30 ]
mov [ edi + 0x30 ] ecx
sub esp 0x34
mov edi esp
mov [ ebp - 0x4 ] 0x2
xor edx edx
mov [ ebp - 0x20 ] esp
mov [ edi + 0x14 ] ebx
mov ebx [ ebp - 0x10 ]
push edx
mov [ edi + 0x10 ] 0x0
push ebx
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov eax [ ebx + 0x1c ]
mov [ edi + 0x1c ] eax
mov ecx [ ebx + 0x20 ]
mov [ edi + 0x20 ] ecx
mov edx [ ebx + 0x24 ]
mov [ edi + 0x24 ] edx
mov eax [ ebx + 0x28 ]
mov [ edi + 0x28 ] eax
mov ecx [ ebx + 0x2c ]
mov [ edi + 0x2c ] ecx
mov edx [ ebx + 0x30 ]
mov [ edi + 0x30 ] edx
mov [ ebp - 0x4 ] 0xffffffff
call [ ebp + 0x14 ]
add esp 0x68
test al al
jne r-xdata
mov [ ebp - 0x14 ] esi
sub esp 0x34
mov edi esp
xor ecx ecx
mov [ ebp - 0x24 ] esp
push ecx
lea eax [ ebx - 0x20 ]
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
or eax 0xffffffff
mov [ edi ] cx
call sub_1000bbc0
mov edx [ ebx - 0x4 ]
mov [ edi + 0x1c ] edx
mov eax [ ebx ]
mov [ edi + 0x20 ] eax
mov ecx [ ebx + 0x4 ]
mov [ edi + 0x24 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edi + 0x28 ] edx
mov eax [ ebx + 0xc ]
mov [ edi + 0x2c ] eax
mov ecx [ ebx + 0x10 ]
mov [ edi + 0x30 ] ecx
sub esp 0x34
mov edi esp
xor edx edx
mov [ ebp - 0x20 ] esp
mov [ ebp - 0x4 ] 0x1
push edx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push esi
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov eax [ ebx + 0x30 ]
mov [ edi + 0x1c ] eax
mov ecx [ ebx + 0x34 ]
mov [ edi + 0x20 ] ecx
mov edx [ ebx + 0x38 ]
mov [ edi + 0x24 ] edx
mov eax [ ebx + 0x3c ]
mov [ edi + 0x28 ] eax
mov ecx [ ebx + 0x40 ]
mov [ edi + 0x2c ] ecx
mov edx [ ebx + 0x44 ]
mov [ edi + 0x30 ] edx
mov [ ebp - 0x4 ] 0xffffffff
call [ ebp + 0x14 ]
add esp 0x68
test al al
jne r-xdata
cmp ebx [ ebp + 0x10 ]
jae r-xdata
sub esp 0x34
mov edi esp
xor eax eax
mov [ ebp - 0x24 ] esp
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
push ebx
or eax 0xffffffff
call sub_1000bbc0
mov ecx [ ebx + 0x1c ]
mov [ edi + 0x1c ] ecx
mov edx [ ebx + 0x20 ]
mov [ edi + 0x20 ] edx
mov eax [ ebx + 0x24 ]
mov [ edi + 0x24 ] eax
mov ecx [ ebx + 0x28 ]
mov [ edi + 0x28 ] ecx
mov edx [ ebx + 0x2c ]
mov [ edi + 0x2c ] edx
mov eax [ ebx + 0x30 ]
mov [ edi + 0x30 ] eax
sub esp 0x34
mov edi esp
xor ecx ecx
mov [ ebp - 0x20 ] esp
mov [ ebp - 0x4 ] 0x3
push ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push esi
or eax 0xffffffff
mov [ edi ] cx
call sub_1000bbc0
mov edx [ esi + 0x1c ]
mov [ edi + 0x1c ] edx
mov eax [ esi + 0x20 ]
mov [ edi + 0x20 ] eax
mov ecx [ esi + 0x24 ]
mov [ edi + 0x24 ] ecx
mov edx [ esi + 0x28 ]
mov [ edi + 0x28 ] edx
mov eax [ esi + 0x2c ]
mov [ edi + 0x2c ] eax
mov ecx [ esi + 0x30 ]
mov [ edi + 0x30 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
call [ ebp + 0x14 ]
add esp 0x68
test al al
jne r-xdata
sub esi 0x34
sub ebx 0x34
cmp [ ebp + 0xc ] esi
jb r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp + 0xc ] eax
jae r-xdata
lea esp [ esp ]
mov eax ebx
add eax 0x34
mov [ ebp - 0x10 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
sub esp 0x34
mov edi esp
xor edx edx
mov [ ebp - 0x24 ] esp
push edx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push esi
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov eax [ ebx + 0x30 ]
mov [ edi + 0x1c ] eax
mov ecx [ ebx + 0x34 ]
mov [ edi + 0x20 ] ecx
mov edx [ ebx + 0x38 ]
mov [ edi + 0x24 ] edx
mov eax [ ebx + 0x3c ]
mov [ edi + 0x28 ] eax
mov ecx [ ebx + 0x40 ]
mov [ edi + 0x2c ] ecx
mov edx [ ebx + 0x44 ]
mov [ edi + 0x30 ] edx
sub esp 0x34
mov edi esp
xor ecx ecx
mov [ ebp - 0x4 ] ecx
xor eax eax
mov [ ebp - 0x20 ] esp
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ecx
mov [ edi ] ax
lea eax [ ebx - 0x20 ]
push ecx
push eax
or eax 0xffffffff
call sub_1000bbc0
mov ecx [ ebx - 0x4 ]
mov [ edi + 0x1c ] ecx
mov edx [ ebx ]
mov [ edi + 0x20 ] edx
mov eax [ ebx + 0x4 ]
mov [ edi + 0x24 ] eax
mov ecx [ ebx + 0x8 ]
mov [ edi + 0x28 ] ecx
mov edx [ ebx + 0xc ]
mov [ edi + 0x2c ] edx
mov eax [ ebx + 0x10 ]
mov [ edi + 0x30 ] eax
mov [ ebp - 0x4 ] 0xffffffff
call [ ebp + 0x14 ]
add esp 0x68
test al al
jne r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0xc ]
jne r-xdata
add eax 0xffffffec
mov [ ebp - 0x20 ] eax
add ebx 0x34
mov [ ebp - 0x18 ] ebx
cmp ebx [ ebp + 0x10 ]
jb r-xdata
sub esp 0x34
mov edi esp
xor ecx ecx
mov [ ebp - 0x24 ] esp
push ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push esi
or eax 0xffffffff
mov [ edi ] cx
call sub_1000bbc0
mov edx [ esi + 0x1c ]
mov [ edi + 0x1c ] edx
mov eax [ esi + 0x20 ]
mov [ edi + 0x20 ] eax
mov ecx [ esi + 0x24 ]
mov [ edi + 0x24 ] ecx
mov edx [ esi + 0x28 ]
mov [ edi + 0x28 ] edx
mov eax [ esi + 0x2c ]
mov [ edi + 0x2c ] eax
mov ecx [ esi + 0x30 ]
mov [ edi + 0x30 ] ecx
sub esp 0x34
mov edi esp
xor edx edx
mov [ ebp - 0x20 ] esp
mov [ ebp - 0x4 ] 0x5
push edx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push ebx
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov eax [ ebx + 0x1c ]
mov [ edi + 0x1c ] eax
mov ecx [ ebx + 0x20 ]
mov [ edi + 0x20 ] ecx
mov edx [ ebx + 0x24 ]
mov [ edi + 0x24 ] edx
mov eax [ ebx + 0x28 ]
mov [ edi + 0x28 ] eax
mov ecx [ ebx + 0x2c ]
mov [ edi + 0x2c ] ecx
mov edx [ ebx + 0x30 ]
mov [ edi + 0x30 ] edx
mov [ ebp - 0x4 ] 0xffffffff
call [ ebp + 0x14 ]
add esp 0x68
test al al
jne r-xdata
sub eax 0x34
mov [ ebp - 0x1c ] eax
cmp ebx [ ebp + 0x10 ]
jne r-xdata
cmp ebx [ ebp + 0x10 ]
je r-xdata
mov eax [ ebp - 0x1c ]
sub [ ebp - 0x20 ] 0x34
sub eax 0x34
mov [ ebp - 0x1c ] eax
cmp [ ebp + 0xc ] eax
jb r-xdata
mov edx [ ebp - 0x24 ]
sub esp 0x34
mov edi esp
xor ecx ecx
mov [ ebp - 0x28 ] esp
push ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push edx
or eax 0xffffffff
mov [ edi ] cx
call sub_1000bbc0
mov eax [ ebp - 0x20 ]
mov ecx [ eax - 0x4 ]
mov [ edi + 0x1c ] ecx
mov edx [ eax ]
mov [ edi + 0x20 ] edx
mov ecx [ eax + 0x4 ]
mov [ edi + 0x24 ] ecx
mov edx [ eax + 0x8 ]
mov [ edi + 0x28 ] edx
mov ecx [ eax + 0xc ]
mov [ edi + 0x2c ] ecx
mov edx [ eax + 0x10 ]
mov [ edi + 0x30 ] edx
sub esp 0x34
mov edi esp
mov eax 0x7
mov [ ebp - 0x4 ] eax
mov [ edi + 0x14 ] eax
xor eax eax
mov [ ebp - 0x2c ] esp
push eax
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
push esi
or eax 0xffffffff
call sub_1000bbc0
mov ecx [ esi + 0x1c ]
mov [ edi + 0x1c ] ecx
mov edx [ esi + 0x20 ]
mov [ edi + 0x20 ] edx
mov eax [ esi + 0x24 ]
mov [ edi + 0x24 ] eax
mov ecx [ esi + 0x28 ]
mov [ edi + 0x28 ] ecx
mov edx [ esi + 0x2c ]
mov [ edi + 0x2c ] edx
mov eax [ esi + 0x30 ]
mov [ edi + 0x30 ] eax
mov [ ebp - 0x4 ] 0xffffffff
call [ ebp + 0x14 ]
add esp 0x68
test al al
jne r-xdata
sub esp 0x34
mov edi esp
xor edx edx
mov [ ebp - 0x24 ] esp
push edx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push ebx
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov eax [ ebx + 0x1c ]
mov [ edi + 0x1c ] eax
mov ecx [ ebx + 0x20 ]
mov [ edi + 0x20 ] ecx
mov edx [ ebx + 0x24 ]
mov [ edi + 0x24 ] edx
mov eax [ ebx + 0x28 ]
mov [ edi + 0x28 ] eax
mov ecx [ ebx + 0x2c ]
mov [ edi + 0x2c ] ecx
mov edx [ ebx + 0x30 ]
mov [ edi + 0x30 ] edx
sub esp 0x34
mov edi esp
xor eax eax
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x20 ] esp
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
push esi
or eax 0xffffffff
call sub_1000bbc0
mov ecx [ esi + 0x1c ]
mov [ edi + 0x1c ] ecx
mov edx [ esi + 0x20 ]
mov [ edi + 0x20 ] edx
mov eax [ esi + 0x24 ]
mov [ edi + 0x24 ] eax
mov ecx [ esi + 0x28 ]
mov [ edi + 0x28 ] ecx
mov edx [ esi + 0x2c ]
mov [ edi + 0x2c ] edx
mov eax [ esi + 0x30 ]
mov [ edi + 0x30 ] eax
mov [ ebp - 0x4 ] 0xffffffff
call [ ebp + 0x14 ]
add esp 0x68
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov esi eax
add eax 0x34
mov [ ebp - 0x10 ] eax
call sub_100251a0
mov esi [ ebp - 0x14 ]
mov ebx [ ebp - 0x18 ]
mov esi [ ebp - 0x18 ]
mov ebx eax
call sub_100251a0
add [ ebp - 0x18 ] 0x34
mov esi [ ebp - 0x14 ]
mov ebx [ ebp - 0x18 ]
jmp r-xdata
sub esi 0x34
mov [ ebp - 0x14 ] esi
cmp eax esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov [ eax ] esi
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
sub esp 0x34
mov edi esp
xor eax eax
mov [ ebp - 0x28 ] esp
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
push esi
or eax 0xffffffff
call sub_1000bbc0
mov ecx [ esi + 0x1c ]
mov [ edi + 0x1c ] ecx
mov edx [ esi + 0x20 ]
mov [ edi + 0x20 ] edx
mov eax [ esi + 0x24 ]
mov [ edi + 0x24 ] eax
mov ecx [ esi + 0x28 ]
mov [ edi + 0x28 ] ecx
mov edx [ esi + 0x2c ]
mov [ edi + 0x2c ] edx
mov eax [ esi + 0x30 ]
mov [ edi + 0x30 ] eax
mov eax [ ebp - 0x20 ]
sub esp 0x34
mov [ ebp - 0x4 ] 0x6
mov edi esp
mov [ ebp - 0x24 ] esp
xor ecx ecx
add eax 0xffffffe0
push ecx
mov [ ebp - 0x24 ] eax
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
or eax 0xffffffff
mov [ edi ] cx
call sub_1000bbc0
mov eax [ ebp - 0x20 ]
mov edx [ eax - 0x4 ]
mov [ edi + 0x1c ] edx
mov ecx [ eax ]
mov [ edi + 0x20 ] ecx
mov edx [ eax + 0x4 ]
mov [ edi + 0x24 ] edx
mov ecx [ eax + 0x8 ]
mov [ edi + 0x28 ] ecx
mov edx [ eax + 0xc ]
mov [ edi + 0x2c ] edx
mov eax [ eax + 0x10 ]
mov [ edi + 0x30 ] eax
mov [ ebp - 0x4 ] 0xffffffff
call [ ebp + 0x14 ]
add esp 0x68
test al al
jne r-xdata
mov ebx [ ebp - 0x24 ]
sub esi 0x34
mov [ ebp - 0x14 ] esi
call sub_100251a0
mov ebx [ ebp - 0x18 ]
mov ebx [ ebp - 0x10 ]
sub ebx 0x34
mov [ ebp - 0x10 ] ebx
call sub_100251a0
mov esi [ ebp - 0x14 ]
mov ebx [ ebp - 0x18 ]
jmp r-xdata
mov ebx esi
mov esi eax
call sub_100251a0
mov esi ebx
add [ ebp - 0x10 ] 0x34
mov eax ebx
mov ecx esi
add esi 0x34
add ebx 0x34
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x18 ] ebx
mov ebx eax
mov esi ecx
call sub_100251a0
mov esi [ ebp - 0x14 ]
mov ebx [ ebp - 0x18 ]
jmp r-xdata
mov ebx eax
call sub_100251a0
mov esi [ ebp - 0x14 ]
mov ebx [ ebp - 0x18 ]
sub_10024950
push ebp
mov ebp esp
push 0xffffffff
push sub_1003ce35
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0xc ]
mov esi ecx
xor ebx ebx
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] ebx
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x1
cmp edi ebx
je r-xdata
add edi 0x34
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] edi
add esi 0x34
jmp r-xdata
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
push ebx
mov [ edi ] ax
push esi
or eax 0xffffffff
call sub_1000bbc0
mov ecx [ esi + 0x1c ]
mov [ edi + 0x1c ] ecx
mov edx [ esi + 0x20 ]
mov [ edi + 0x20 ] edx
mov eax [ esi + 0x24 ]
mov [ edi + 0x24 ] eax
mov ecx [ esi + 0x28 ]
mov [ edi + 0x28 ] ecx
mov edx [ esi + 0x2c ]
mov [ edi + 0x2c ] edx
mov eax [ esi + 0x30 ]
mov [ edi + 0x30 ] eax
cmp esi [ ebp + 0x8 ]
je r-xdata
sub_100249e0
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_10030edf
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ebx [ ebx ]
call sub_1000bb60
add esi 0x34
cmp esi edi
jne r-xdata
sub_10024a20
push ebp
mov ebp esp
sub esp 0x8
push edi
mov edi eax
mov edx edi
sub edx ecx
mov eax 0x4ec4ec4f
imul edx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x28
jle r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push edx
push edi
push eax
push ecx
call sub_10024f40
add esp 0x10
pop edi
mov esp ebp
pop ebp
retn
inc eax
cdq
and edx 0x7
add eax edx
mov edx [ ebp + 0xc ]
push ebx
sar eax 0x3
push esi
mov ebx eax
mov esi eax
imul ebx ebx 0x68
imul esi esi 0x34
push edx
lea edx [ ebx + ecx ]
lea eax [ esi + ecx ]
push edx
push eax
push ecx
mov [ ebp - 0x8 ] eax
call sub_10024f40
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ esi + eax ]
push ecx
push eax
sub eax esi
push eax
call sub_10024f40
mov eax edi
sub eax esi
mov esi [ ebp + 0xc ]
push esi
push edi
push eax
sub edi ebx
push edi
mov [ ebp - 0x4 ] eax
call sub_10024f40
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
push esi
push edx
push eax
push ecx
call sub_10024f40
add esp 0x40
pop esi
pop ebx
pop edi
mov esp ebp
pop ebp
retn
sub_10024ad0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003ce08
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi edx
sub eax esi
mov [ ebp - 0x50 ] ecx
mov ecx eax
mov eax 0x4ec4ec4f
imul ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x48 ] eax
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
mov [ ebp - 0x4c ] esi
test ebx ebx
jle r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov edx ebx
imul edx edx 0x34
lea esi [ edx + esi + 0x20 ]
test ebx ebx
jg r-xdata
mov eax [ ebp - 0x44 ]
push eax
call sub_1002e8fb
add esp 0x4
xor eax eax
sub esi 0x34
push eax
lea ecx [ esi - 0x20 ]
mov [ ebp - 0x44 ] ax
push ecx
or eax 0xffffffff
lea edi [ ebp - 0x44 ]
dec ebx
mov [ ebp - 0x30 ] 0x7
mov [ ebp - 0x34 ] 0x0
call sub_1000bbc0
mov edx [ esi - 0x4 ]
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x28 ] edx
mov edx [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ esi + 0xc ]
mov [ ebp - 0x20 ] ecx
mov ecx [ esi + 0x10 ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x50 ]
mov ecx [ ebp - 0x48 ]
push edx
mov edx [ ebp - 0x4c ]
mov eax edi
push eax
push ecx
push ebx
push edx
mov [ ebp - 0x4 ] 0x0
call sub_100252b0
add esp 0x14
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x30 ] 0x8
jb r-xdata
sub_10024be0
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
push edi
mov ebx ecx
mov edi esi
sub edi ebx
mov eax 0x4ec4ec4f
imul edi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx esi
call sub_10025620
sub edi 0x34
mov eax 0x4ec4ec4f
imul edi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
add esp 0x4
sub esi 0x34
cmp eax 0x1
jg r-xdata
sub_10024c40
push ebp
mov ebp esp
push 0xffffffff
push sub_1003cdd8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x54 ] eax
lea eax [ esi + 0x34 ]
mov [ ebp - 0x48 ] eax
cmp eax [ ebp + 0x8 ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
lea ebx [ eax + 0x24 ]
mov [ ebp - 0x50 ] ebx
jmp r-xdata
xor ecx ecx
push ecx
mov [ ebp - 0x4c ] eax
push eax
or eax 0xffffffff
lea edi [ ebp - 0x44 ]
mov [ ebp - 0x30 ] 0x7
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x44 ] cx
call sub_1000bbc0
mov edx [ ebx - 0x8 ]
mov ecx [ ebx ]
lea eax [ ebx - 0x4 ]
mov [ ebp - 0x60 ] eax
mov eax [ eax ]
mov [ ebp - 0x28 ] edx
mov edx [ ebx + 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ ebx + 0xc ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
sub esp 0x34
mov edi esp
mov [ ebp - 0x5c ] esp
push eax
mov [ edi + 0x10 ] eax
xor edx edx
mov [ edi + 0x14 ] 0x7
push esi
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov ecx [ esi + 0x20 ]
mov [ edi + 0x20 ] ecx
mov edx [ esi + 0x24 ]
mov [ edi + 0x24 ] edx
mov eax [ esi + 0x28 ]
mov [ edi + 0x28 ] eax
mov ecx [ esi + 0x2c ]
mov [ edi + 0x2c ] ecx
mov edx [ esi + 0x30 ]
mov [ edi + 0x30 ] edx
sub esp 0x34
mov edi esp
mov [ ebp - 0x4 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] esp
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
lea ecx [ ebp - 0x44 ]
mov [ edi ] ax
push ecx
or eax 0xffffffff
call sub_1000bbc0
mov edx [ ebp - 0x28 ]
mov [ edi + 0x1c ] edx
mov eax [ ebp - 0x24 ]
mov [ edi + 0x20 ] eax
mov ecx [ ebp - 0x20 ]
mov [ edi + 0x24 ] ecx
mov edx [ ebp - 0x1c ]
mov [ edi + 0x28 ] edx
mov eax [ ebp - 0x18 ]
mov [ edi + 0x2c ] eax
mov ecx [ ebp - 0x14 ]
mov [ edi + 0x30 ] ecx
mov [ ebp - 0x4 ] 0x0
call [ ebp - 0x54 ]
add esp 0x68
test al al
je r-xdata
mov ebx [ ebp - 0x60 ]
mov edx [ ebp - 0x58 ]
mov eax [ ebp - 0x48 ]
lea ecx [ ebx + 0x10 ]
push edx
mov ebx esi
call sub_10025730
add esp 0x4
push 0x0
lea eax [ ebp - 0x44 ]
push eax
or eax 0xffffffff
mov edi esi
call sub_1000bbc0
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
mov [ esi + 0x1c ] ecx
mov ecx [ ebp - 0x1c ]
mov [ esi + 0x20 ] edx
mov edx [ ebp - 0x18 ]
mov [ esi + 0x24 ] eax
mov eax [ ebp - 0x14 ]
mov [ esi + 0x28 ] ecx
mov [ esi + 0x2c ] edx
mov [ esi + 0x30 ] eax
jmp r-xdata
lea eax [ ebp - 0x44 ]
push eax
or eax 0xffffffff
call sub_1000bbc0
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
mov [ edi + 0x1c ] ecx
mov ecx [ ebp - 0x1c ]
mov [ edi + 0x20 ] edx
mov edx [ ebp - 0x18 ]
mov [ edi + 0x24 ] eax
mov eax [ ebp - 0x14 ]
mov [ edi + 0x28 ] ecx
mov [ edi + 0x2c ] edx
mov [ edi + 0x30 ] eax
lea eax [ ebx - 0x20 ]
push eax
or eax 0xffffffff
call sub_1000bbc0
mov ecx [ ebx - 0x4 ]
mov eax edi
mov [ eax + 0x1c ] ecx
mov edx [ ebx ]
mov [ eax + 0x20 ] edx
mov ecx [ ebx + 0x4 ]
mov [ eax + 0x24 ] ecx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x28 ] edx
mov ecx [ ebx + 0xc ]
mov [ eax + 0x2c ] ecx
mov edx [ ebx + 0x10 ]
mov [ eax + 0x30 ] edx
lea eax [ ebx - 0x20 ]
mov [ ebp - 0x4c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x30 ] 0x8
jb r-xdata
mov eax [ ebp - 0x48 ]
add [ ebp - 0x50 ] 0x34
add eax 0x34
mov [ ebp - 0x48 ] eax
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov ecx [ ebp - 0x44 ]
push ecx
call sub_1002e8fb
add esp 0x4
sub esp 0x34
mov edi esp
xor ecx ecx
mov [ ebp - 0x58 ] esp
sub ebx 0x34
lea eax [ ebx - 0x20 ]
push ecx
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
or eax 0xffffffff
mov [ edi ] cx
call sub_1000bbc0
mov edx [ ebx - 0x4 ]
mov [ edi + 0x1c ] edx
mov eax [ ebx ]
mov [ edi + 0x20 ] eax
mov ecx [ ebx + 0x4 ]
mov [ edi + 0x24 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edi + 0x28 ] edx
mov eax [ ebx + 0xc ]
mov [ edi + 0x2c ] eax
mov ecx [ ebx + 0x10 ]
mov [ edi + 0x30 ] ecx
sub esp 0x34
mov [ ebp - 0x4 ] 0x2
mov edi esp
xor edx edx
mov [ ebp - 0x5c ] esp
push edx
lea eax [ ebp - 0x44 ]
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov ecx [ ebp - 0x28 ]
mov [ edi + 0x1c ] ecx
mov edx [ ebp - 0x24 ]
mov [ edi + 0x20 ] edx
mov eax [ ebp - 0x20 ]
mov [ edi + 0x24 ] eax
mov ecx [ ebp - 0x1c ]
mov [ edi + 0x28 ] ecx
mov edx [ ebp - 0x18 ]
mov [ edi + 0x2c ] edx
mov eax [ ebp - 0x14 ]
mov [ edi + 0x30 ] eax
mov [ ebp - 0x4 ] 0x0
call [ ebp - 0x54 ]
mov edi [ ebp - 0x4c ]
add esp 0x68
push 0x0
test al al
je r-xdata
mov ebx [ ebp - 0x50 ]
mov eax [ ebp - 0x48 ]
sub_10024f40
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d4d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
sub esp 0x34
mov edi esp
mov [ ebp - 0x10 ] esp
xor esi esi
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] esi
push esi
mov [ edi ] ax
push ebx
or eax 0xffffffff
call sub_1000bbc0
mov ecx [ ebx + 0x1c ]
mov [ edi + 0x1c ] ecx
mov edx [ ebx + 0x20 ]
mov [ edi + 0x20 ] edx
mov eax [ ebx + 0x24 ]
mov [ edi + 0x24 ] eax
mov ecx [ ebx + 0x28 ]
mov [ edi + 0x28 ] ecx
mov edx [ ebx + 0x2c ]
mov [ edi + 0x2c ] edx
mov eax [ ebx + 0x30 ]
mov [ edi + 0x30 ] eax
sub esp 0x34
mov [ ebp - 0x4 ] esi
mov edi esp
mov [ ebp - 0x14 ] esp
mov [ edi + 0x10 ] esi
push esi
mov esi [ ebp + 0xc ]
xor ecx ecx
mov [ edi + 0x14 ] 0x7
push esi
or eax 0xffffffff
mov [ edi ] cx
call sub_1000bbc0
mov edx [ esi + 0x1c ]
mov [ edi + 0x1c ] edx
mov eax [ esi + 0x20 ]
mov [ edi + 0x20 ] eax
mov ecx [ esi + 0x24 ]
mov [ edi + 0x24 ] ecx
mov edx [ esi + 0x28 ]
mov [ edi + 0x28 ] edx
mov eax [ esi + 0x2c ]
mov [ edi + 0x2c ] eax
mov ecx [ esi + 0x30 ]
mov [ edi + 0x30 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
call [ ebp + 0x14 ]
add esp 0x68
test al al
je r-xdata
sub esp 0x34
mov edi esp
xor edx edx
mov [ ebp - 0x14 ] esp
push edx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push esi
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov ecx [ esi + 0x20 ]
mov [ edi + 0x20 ] ecx
mov edx [ esi + 0x24 ]
mov [ edi + 0x24 ] edx
mov eax [ esi + 0x28 ]
mov [ edi + 0x28 ] eax
mov ecx [ esi + 0x2c ]
mov [ edi + 0x2c ] ecx
mov edx [ esi + 0x30 ]
mov [ edi + 0x30 ] edx
sub esp 0x34
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp + 0x10 ]
mov edi esp
xor eax eax
mov [ ebp - 0x10 ] esp
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
push ecx
or eax 0xffffffff
call sub_1000bbc0
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x1c ]
mov [ edi + 0x1c ] edx
mov ecx [ eax + 0x20 ]
mov [ edi + 0x20 ] ecx
mov edx [ eax + 0x24 ]
mov [ edi + 0x24 ] edx
mov ecx [ eax + 0x28 ]
mov [ edi + 0x28 ] ecx
mov edx [ eax + 0x2c ]
mov [ edi + 0x2c ] edx
mov eax [ eax + 0x30 ]
mov [ edi + 0x30 ] eax
mov [ ebp - 0x4 ] 0xffffffff
call [ ebp + 0x14 ]
add esp 0x68
test al al
je r-xdata
call sub_100251a0
sub esp 0x34
mov edi esp
xor ecx ecx
mov [ ebp + 0x10 ] esp
push ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push ebx
or eax 0xffffffff
mov [ edi ] cx
call sub_1000bbc0
mov edx [ ebx + 0x1c ]
mov [ edi + 0x1c ] edx
mov eax [ ebx + 0x20 ]
mov [ edi + 0x20 ] eax
mov ecx [ ebx + 0x24 ]
mov [ edi + 0x24 ] ecx
mov edx [ ebx + 0x28 ]
mov [ edi + 0x28 ] edx
mov eax [ ebx + 0x2c ]
mov [ edi + 0x2c ] eax
mov ecx [ ebx + 0x30 ]
mov [ edi + 0x30 ] ecx
sub esp 0x34
mov edi esp
xor edx edx
mov [ ebp + 0x8 ] esp
mov [ ebp - 0x4 ] 0x2
push edx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push esi
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov ecx [ esi + 0x20 ]
mov [ edi + 0x20 ] ecx
mov edx [ esi + 0x24 ]
mov [ edi + 0x24 ] edx
mov eax [ esi + 0x28 ]
mov [ edi + 0x28 ] eax
mov ecx [ esi + 0x2c ]
mov [ edi + 0x2c ] ecx
mov edx [ esi + 0x30 ]
mov [ edi + 0x30 ] edx
mov [ ebp - 0x4 ] 0xffffffff
call [ ebp + 0x14 ]
add esp 0x68
test al al
je r-xdata
mov ebx esi
mov esi [ ebp + 0x10 ]
call sub_100251a0
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_100251a0
sub_100251a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003cd98
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
push eax
mov [ ebp - 0x44 ] ax
push esi
or eax 0xffffffff
lea edi [ ebp - 0x44 ]
mov [ ebp - 0x30 ] 0x7
mov [ ebp - 0x34 ] 0x0
call sub_1000bbc0
mov ecx [ esi + 0x1c ]
mov edx [ esi + 0x20 ]
mov eax [ esi + 0x24 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ esi + 0x28 ]
mov [ ebp - 0x24 ] edx
mov edx [ esi + 0x2c ]
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0x30 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] eax
push 0x0
push ebx
or eax 0xffffffff
mov edi esi
mov [ ebp - 0x4 ] 0x0
call sub_1000bbc0
mov ecx [ ebx + 0x1c ]
mov [ esi + 0x1c ] ecx
mov edx [ ebx + 0x20 ]
mov [ esi + 0x20 ] edx
mov eax [ ebx + 0x24 ]
mov [ esi + 0x24 ] eax
mov ecx [ ebx + 0x28 ]
mov [ esi + 0x28 ] ecx
mov edx [ ebx + 0x2c ]
mov [ esi + 0x2c ] edx
mov eax [ ebx + 0x30 ]
push 0x0
lea ecx [ ebp - 0x44 ]
mov [ esi + 0x30 ] eax
push ecx
or eax 0xffffffff
mov edi ebx
call sub_1000bbc0
cmp [ ebp - 0x30 ] 0x8
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x20 ]
mov [ ebx + 0x1c ] edx
mov edx [ ebp - 0x1c ]
mov [ ebx + 0x20 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebx + 0x24 ] ecx
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x28 ] edx
mov [ ebx + 0x2c ] eax
mov [ ebx + 0x30 ] ecx
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x44 ]
push edx
call sub_1002e8fb
add esp 0x4
sub_100252b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003cd68
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
lea eax [ ecx + ecx + 0x2 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] eax
cmp eax ebx
jge r-xdata
jne r-xdata
mov ecx [ ebp + 0x8 ]
imul eax eax 0x34
sub esp 0x34
mov edi esp
lea esi [ eax + ecx ]
xor edx edx
mov [ ebp - 0x18 ] esp
push edx
lea ebx [ esi - 0x34 ]
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push ebx
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov eax [ ebx + 0x1c ]
mov [ edi + 0x1c ] eax
mov ecx [ ebx + 0x20 ]
mov [ edi + 0x20 ] ecx
mov edx [ ebx + 0x24 ]
mov [ edi + 0x24 ] edx
mov eax [ ebx + 0x28 ]
mov [ edi + 0x28 ] eax
mov ecx [ ebx + 0x2c ]
mov [ edi + 0x2c ] ecx
mov edx [ ebx + 0x30 ]
mov [ edi + 0x30 ] edx
sub esp 0x34
xor eax eax
mov edi esp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1c ] esp
push eax
mov [ edi + 0x10 ] eax
xor ecx ecx
mov [ edi + 0x14 ] 0x7
push esi
or eax 0xffffffff
mov [ edi ] cx
call sub_1000bbc0
mov edx [ esi + 0x1c ]
mov [ edi + 0x1c ] edx
mov eax [ esi + 0x20 ]
mov [ edi + 0x20 ] eax
mov ecx [ esi + 0x24 ]
mov [ edi + 0x24 ] ecx
mov edx [ esi + 0x28 ]
mov [ edi + 0x28 ] edx
mov eax [ esi + 0x2c ]
mov [ edi + 0x2c ] eax
mov ecx [ esi + 0x30 ]
mov [ edi + 0x30 ] ecx
mov [ ebp - 0x4 ] 0xffffffff
call [ ebp + 0x18 ]
mov ebx [ ebp - 0x10 ]
add esp 0x68
test al al
je r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x14 ]
mov ebx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push edx
push ecx
push eax
call sub_10025480
add esp 0x10
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
imul ecx ecx 0x34
mov edx ebx
imul edx edx 0x34
lea esi [ edx + eax - 0x34 ]
push 0x0
lea edi [ ecx + eax ]
push esi
or eax 0xffffffff
call sub_1000bbc0
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov ecx [ esi + 0x20 ]
mov [ edi + 0x20 ] ecx
mov edx [ esi + 0x24 ]
mov [ edi + 0x24 ] edx
mov eax [ esi + 0x28 ]
mov [ edi + 0x28 ] eax
mov ecx [ esi + 0x2c ]
mov [ edi + 0x2c ] ecx
mov edx [ esi + 0x30 ]
dec ebx
mov [ edi + 0x30 ] edx
mov [ ebp + 0xc ] ebx
mov ecx ebx
mov edi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
imul edi edi 0x34
mov esi ebx
imul esi esi 0x34
add esi eax
push 0x0
add edi eax
push esi
or eax 0xffffffff
call sub_1000bbc0
mov edx [ esi + 0x1c ]
mov [ edi + 0x1c ] edx
mov eax [ esi + 0x20 ]
mov [ edi + 0x20 ] eax
mov ecx [ esi + 0x24 ]
mov [ edi + 0x24 ] ecx
mov edx [ esi + 0x28 ]
mov [ edi + 0x28 ] edx
mov eax [ esi + 0x2c ]
mov [ edi + 0x2c ] eax
mov ecx [ esi + 0x30 ]
lea eax [ ebx + ebx + 0x2 ]
mov [ edi + 0x30 ] ecx
mov [ ebp + 0xc ] ebx
mov [ ebp - 0x10 ] eax
cmp eax [ ebp + 0x10 ]
jl r-xdata
dec ebx
mov ebx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
cmp eax ebx
sub_10025480
push ebp
mov ebp esp
push 0xffffffff
push sub_1003cd38
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0xc ]
lea eax [ ecx - 0x1 ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
mov [ ebp - 0x10 ] esi
cmp [ ebp + 0x10 ] ecx
jge r-xdata
mov edx [ ebp + 0x8 ]
imul ecx ecx 0x34
push 0x0
lea edi [ ecx + edx ]
push ebx
or eax 0xffffffff
call sub_1000bbc0
mov eax [ ebx + 0x1c ]
mov [ edi + 0x1c ] eax
mov ecx [ ebx + 0x20 ]
mov [ edi + 0x20 ] ecx
mov edx [ ebx + 0x24 ]
mov [ edi + 0x24 ] edx
mov eax [ ebx + 0x28 ]
mov [ edi + 0x28 ] eax
mov ecx [ ebx + 0x2c ]
mov [ edi + 0x2c ] ecx
mov edx [ ebx + 0x30 ]
mov [ edi + 0x30 ] edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
jmp r-xdata
sub esp 0x34
mov edi esp
xor eax eax
mov [ ebp - 0x14 ] esp
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
push ebx
or eax 0xffffffff
call sub_1000bbc0
mov ecx [ ebx + 0x1c ]
mov [ edi + 0x1c ] ecx
mov edx [ ebx + 0x20 ]
mov [ edi + 0x20 ] edx
mov eax [ ebx + 0x24 ]
mov [ edi + 0x24 ] eax
mov ecx [ ebx + 0x28 ]
mov [ edi + 0x28 ] ecx
mov edx [ ebx + 0x2c ]
mov [ edi + 0x2c ] edx
mov eax [ ebx + 0x30 ]
mov [ edi + 0x30 ] eax
imul esi esi 0x34
add esi [ ebp + 0x8 ]
sub esp 0x34
mov edi esp
xor edx edx
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push edx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push esi
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov ecx [ esi + 0x20 ]
mov [ edi + 0x20 ] ecx
mov edx [ esi + 0x24 ]
mov [ edi + 0x24 ] edx
mov eax [ esi + 0x28 ]
mov [ edi + 0x28 ] eax
mov ecx [ esi + 0x2c ]
mov [ edi + 0x2c ] ecx
mov edx [ esi + 0x30 ]
mov [ edi + 0x30 ] edx
mov [ ebp - 0x4 ] 0xffffffff
call [ ebp + 0x14 ]
add esp 0x68
test al al
je r-xdata
mov ecx [ ebp + 0xc ]
mov edi [ ebp + 0xc ]
imul edi edi 0x34
add edi [ ebp + 0x8 ]
push 0x0
push esi
or eax 0xffffffff
call sub_1000bbc0
mov edx [ esi + 0x1c ]
mov [ edi + 0x1c ] edx
mov eax [ esi + 0x20 ]
mov [ edi + 0x20 ] eax
mov ecx [ esi + 0x24 ]
mov [ edi + 0x24 ] ecx
mov edx [ esi + 0x28 ]
mov [ edi + 0x28 ] edx
mov eax [ esi + 0x2c ]
mov [ edi + 0x2c ] eax
mov ecx [ esi + 0x30 ]
mov [ edi + 0x30 ] ecx
mov ecx [ ebp - 0x10 ]
lea eax [ ecx - 0x1 ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0x10 ] ecx
jl r-xdata
mov esi [ ebp - 0x10 ]
sub_10025620
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d498
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi ecx
xor ecx ecx
mov [ ebp - 0x48 ] esi
push ecx
mov [ ebp - 0x4c ] eax
add esi 0xffffffcc
push esi
or eax 0xffffffff
lea edi [ ebp - 0x44 ]
mov [ ebp - 0x30 ] 0x7
mov [ ebp - 0x34 ] 0x0
mov [ ebp - 0x44 ] cx
call sub_1000bbc0
mov edx [ esi + 0x1c ]
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x24 ]
mov [ ebp - 0x28 ] edx
mov edx [ esi + 0x28 ]
mov [ ebp - 0x24 ] eax
mov eax [ esi + 0x2c ]
mov [ ebp - 0x20 ] ecx
mov ecx [ esi + 0x30 ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
push 0x0
push ebx
or eax 0xffffffff
mov edi esi
mov [ ebp - 0x4 ] 0x0
call sub_1000bbc0
mov edx [ ebx + 0x1c ]
mov [ esi + 0x1c ] edx
mov eax [ ebx + 0x20 ]
mov [ esi + 0x20 ] eax
mov ecx [ ebx + 0x24 ]
mov [ esi + 0x24 ] ecx
mov edx [ ebx + 0x28 ]
mov [ esi + 0x28 ] edx
mov eax [ ebx + 0x2c ]
mov edx [ ebp - 0x4c ]
mov [ esi + 0x2c ] eax
mov ecx [ ebx + 0x30 ]
mov [ esi + 0x30 ] ecx
mov ecx [ ebp - 0x48 ]
push edx
sub ecx ebx
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ecx - 0x34 ]
mov eax 0x4ec4ec4f
imul ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
push ecx
push 0x0
push ebx
call sub_100252b0
add esp 0x14
cmp [ ebp - 0x30 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x44 ]
push edx
call sub_1002e8fb
add esp 0x4
sub_10025730
push edi
mov edi ecx
cmp ebx eax
je r-xdata
mov eax edi
pop edi
retn
push esi
lea esi [ eax + 0x20 ]
jmp r-xdata
sub esi 0x34
push 0x0
lea eax [ esi - 0x20 ]
push eax
sub edi 0x34
or eax 0xffffffff
call sub_1000bbc0
mov ecx [ esi - 0x4 ]
mov [ edi + 0x1c ] ecx
mov edx [ esi ]
mov [ edi + 0x20 ] edx
mov eax [ esi + 0x4 ]
mov [ edi + 0x24 ] eax
mov ecx [ esi + 0x8 ]
mov [ edi + 0x28 ] ecx
mov edx [ esi + 0xc ]
mov [ edi + 0x2c ] edx
mov eax [ esi + 0x10 ]
lea ecx [ esi - 0x20 ]
mov [ edi + 0x30 ] eax
cmp ecx ebx
jne r-xdata
pop esi
sub_100257a0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ecx + 0x14 ] ax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
push edi
lea edi [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax edi
sar eax 0x1
je r-xdata
pop edi
mov edi [ ecx + 0x4 ]
mov eax [ ecx + 0x8 ]
sub eax edi
xor edx edx
sar eax 0x1
push ebx
movzx ebx [ esi ]
je r-xdata
test eax eax
je r-xdata
mov esi edi
lea esp [ esp ]
pop ebx
lea edx [ eax - 0x1 ]
cmp eax edx
ja r-xdata
test edx edx
je r-xdata
inc edx
add esi 0x2
cmp edx eax
jb r-xdata
mov ax [ edi + edx * 2 ]
mov [ ecx + 0x14 ] ax
push r--data
call sub_1003626a
mov dx [ edi + edx * 2 - 0x2 ]
pop ebx
pop edi
mov [ ecx + 0x14 ] dx
pop esi
pop ebp
retn 0x4
cmp bx [ esi ]
jbe r-xdata
sub_10025830
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b8c6
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
mov [ ecx ] 0x0
mov [ ecx + 0x4 ] 0x0
mov [ ecx + 0x8 ] 0x0
mov [ esi + 0x18 ] r--data
xor eax eax
mov [ ebp - 0x4 ] 0x3
mov [ esi + 0x14 ] ax
lea eax [ ebp + 0xc ]
call sub_10025a60
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x14
push eax
call sub_1002e8fb
add esp 0x4
sub_100258c0
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x18 ] r--data
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
mov [ esi ] r--data
je r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10025920
push ebp
mov ebp esp
push 0xffffffff
push sub_1003ccfe
mov eax [ fs : 0x0 ]
push eax
sub esp 0xe8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ax [ ebp + 0x8 ]
push 0x5c
mov [ ebp - 0xf0 ] ax
mov [ ebp - 0xee ] 0x3a
call sub_1002e957
mov ebx eax
add esp 0x4
mov [ ebp - 0xf4 ] ebx
mov [ ebp - 0x4 ] 0x0
test ebx ebx
je r-xdata
xor eax eax
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
push eax
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push 0x0
push 0x0
push 0x0
push 0x1
mov ecx esi
call edx
push eax
lea ecx [ ebp - 0xf0 ]
mov edx r--data
call sub_10026560
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
sub_100259d0
push ebp
mov ebp esp
cmp [ ecx + 0x14 ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov edi [ ecx + 0x4 ]
mov eax [ ecx + 0x8 ]
sub eax edi
mov edx 0x1
sar eax 0x1
cmp eax edx
jbe r-xdata
mov eax [ ecx + 0x4 ]
mov edx [ ecx + 0x8 ]
sub edx eax
sar edx 0x1
je r-xdata
pop edi
xor eax eax
pop esi
mov [ ecx + 0x14 ] ax
pop ebx
pop ebp
retn 0x4
mov esi edi
movzx eax [ eax ]
mov esi [ ebp + 0x8 ]
push eax
mov [ ecx + 0x14 ] ax
call sub_10025920
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push r--data
call sub_1003626a
mov bx [ esi ]
cmp bx [ ecx + 0x14 ]
je r-xdata
cmp eax edx
ja r-xdata
inc edx
add esi 0x2
cmp edx eax
jb r-xdata
movzx eax [ edi + edx * 2 ]
mov esi [ ebp + 0x8 ]
push eax
mov [ ecx + 0x14 ] ax
call sub_10025920
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
lea ebx [ edx - 0x1 ]
cmp eax ebx
jbe r-xdata
sub_10025a60
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov esi ecx
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x4 ]
mov eax [ ebx ]
mov edx ecx
sub edx eax
sar edx 0x1
push edi
mov edi [ esi ]
mov [ ebp - 0x4 ] edx
jne r-xdata
mov edx [ esi + 0x4 ]
sub edx edi
sar edx 0x1
cmp [ ebp - 0x4 ] edx
ja r-xdata
mov ecx [ esi + 0x4 ]
cmp edi ecx
je r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
sar ecx 0x1
cmp [ ebp - 0x4 ] ecx
ja r-xdata
sub ecx eax
sar ecx 0x1
add ecx ecx
push ecx
push eax
push edi
call sub_1002e460
mov eax [ ebx + 0x4 ]
sub eax [ ebx ]
mov ecx [ esi ]
add esp 0xc
sar eax 0x1
lea edx [ ecx + eax * 2 ]
pop edi
mov [ esi + 0x4 ] edx
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pop edi
mov eax ecx
sub eax ecx
sar eax 0x1
lea ebx [ eax + eax ]
push ebx
push ecx
push edi
call sub_1002e460
add esp 0xc
add ebx edi
pop edi
mov [ esi + 0x4 ] ebx
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
test eax eax
je r-xdata
lea edi [ eax + edx * 2 ]
mov edx edi
sub edx eax
sar edx 0x1
add edx edx
push edx
push eax
mov eax [ esi ]
push eax
call sub_1002e460
mov eax [ ebx + 0x4 ]
mov ecx [ esi + 0x4 ]
sub eax edi
sar eax 0x1
lea ebx [ eax + eax ]
push ebx
push edi
push ecx
call sub_1002e460
add esp 0x18
add eax ebx
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x4 ]
sub edi [ ebx ]
sar edi 0x1
call sub_10014660
test al al
je r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov eax [ ebx ]
mov ebx [ ebx + 0x4 ]
mov ecx [ esi ]
sub ebx eax
sar ebx 0x1
lea edi [ ebx + ebx ]
push edi
push eax
push ecx
call sub_1002e460
add esp 0xc
add eax edi
mov [ esi + 0x4 ] eax
sub_10025b80
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10025bc0
push ebp
mov ebp esp
sub esp 0xc7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
cmp [ ebx + 0x10 ] 0x0
push edi
jne r-xdata
push 0xc6d
lea edx [ ebp - 0xc74 ]
push 0x0
push edx
call sub_10032e00
mov eax [ esi ]
mov edx [ eax + 0x28 ]
add esp 0xc
mov ecx esi
call edx
mov edi eax
mov eax [ esi ]
mov edx [ eax + 0x2c ]
mov ecx esi
call edx
mov [ ebp - 0xc7c ] eax
mov eax [ esi ]
mov [ ebp - 0xc78 ] edx
mov edx [ eax + 0x14 ]
mov ecx esi
call edx
mov ecx [ ebp - 0xc7c ]
mov edx [ ebp - 0xc78 ]
mov [ ebp - 0xc70 ] ecx
mov ecx eax
mov [ ebp - 0xc74 ] edi
mov [ ebp - 0xc6c ] edx
lea edi [ ecx + 0x2 ]
jmp r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
mov [ ebx + 0x10 ] 0x1
mov eax [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
push eax
call sub_1002e957
add esp 0x4
mov [ ebx + 0x8 ] eax
test eax eax
je r-xdata
sub ecx edi
sar ecx 0x1
lea edi [ ecx + ecx + 0x2 ]
push edi
push eax
lea eax [ ebp - 0xc68 ]
push eax
call sub_10033950
mov edx [ esi ]
mov eax [ edx + 0x18 ]
add esp 0xc
mov ecx esi
add edi 0xc
call eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop ebx
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0xc ]
push ecx
push edi
push eax
call sub_10033950
add esp 0xc
mov [ ebx + 0x14 ] 0x1
mov ecx eax
lea edx [ ecx + 0x2 ]
mov [ ebp - 0xc78 ] edx
mov eax r--data
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx [ ebp - 0xc78 ]
sar ecx 0x1
lea ecx [ ecx + ecx + 0x2 ]
push ecx
push eax
lea eax [ ebp + edi - 0xc74 ]
push eax
mov [ ebp - 0xc78 ] ecx
call sub_10033950
mov edx [ esi ]
mov eax [ edx + 0x1c ]
add edi [ ebp - 0xc78 ]
add esp 0xc
mov ecx esi
call eax
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebp + edi - 0xc74 ] eax
push 0x0
add edi 0x4
push edi
lea eax [ ebp - 0xc74 ]
push eax
lea ecx [ ebx + 0x4 ]
call edx
xor ecx ecx
cmp edi eax
sete cl
pop edi
pop ebx
mov eax ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
sub_10025d50
push ebp
mov ebp esp
push 0xffffffff
push sub_1003aa1b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x14
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x4 ]
mov edx [ eax + 0xc ]
add edi 0x4
mov ecx edi
call edx
mov [ esi + 0xc ] eax
mov [ esi ] r--data
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] 0x0
mov [ esi + 0x10 ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10025de0
push ebx
push edi
push 0x1c
call sub_1002e957
xor ebx ebx
add esp 0x4
cmp eax ebx
je r-xdata
xor edi edi
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x18 ] ebx
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] 0x1
mov edi eax
jmp r-xdata
cmp edi ebx
je r-xdata
mov eax edi
pop edi
pop ebx
retn
mov ecx edi
call sub_10025bc0
test eax eax
je r-xdata
pop edi
xor eax eax
pop ebx
retn
mov eax [ edi ]
mov edx [ eax ]
push 0x1
mov ecx edi
call edx
sub_10025e40
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] r--data
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x4 ] r--data
mov [ esi ] r--data
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x8 ] 0x0
sub_10025ec0
push ebp
mov ebp esp
sub esp 0xbcc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0xbc4
lea eax [ ebp - 0xbc8 ]
push 0x0
mov [ ebp - 0xbcc ] 0x0
push eax
mov [ ebp - 0xbcc ] 0xbc4
call sub_10032e00
add esp 0xc
lea ecx [ ebp - 0xbcc ]
push ecx
lea edx [ ebp - 0xbc8 ]
push edx
push 0x1
call [ GetComputerNameExW@IAT ]
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
test eax eax
je r-xdata
xor edx edx
mov [ esi ] dx
push edx
mov eax r--data
mov eax [ ebp - 0xbcc ]
xor ecx ecx
push eax
mov [ esi ] cx
lea eax [ ebp - 0xbc8 ]
jmp r-xdata
mov ecx esi
call sub_1000bc70
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_1002e0f2
mov esp ebp
pop ebp
retn
sub_10025f60
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d5b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
cmp [ ebx + 0x18 ] 0x8
lea eax [ ebx + 0x4 ]
jb r-xdata
lea esi [ ebp - 0x2c ]
call sub_10025ec0
lea esi [ ebx + 0x4 ]
mov edi eax
mov [ ebp - 0x4 ] 0x0
call sub_10013f90
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov eax [ eax ]
mov [ ebx + 0x20 ] 0x1
mov eax [ ebp - 0x2c ]
push eax
call sub_1002e8fb
add esp 0x4
sub_10025ff0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b193
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x28 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x28 ] 0x0
xor ecx ecx
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] cx
mov [ esi ] r--data
je r-xdata
mov eax [ esi + 0x4 ]
push eax
call sub_1002e8fb
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10026090
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b193
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x28 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x28 ] 0x0
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
xor ecx ecx
mov [ esi + 0x4 ] cx
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x4 ]
push eax
call sub_1002e8fb
add esp 0x4
sub_10026120
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d467
mov eax [ fs : 0x0 ]
push eax
mov eax 0x2204
call sub_10035c20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov edi 0xf
mov [ ebp - 0x2208 ] eax
mov [ ebp - 0x21d0 ] edi
mov [ ebp - 0x21d4 ] ebx
mov [ ebp - 0x21e4 ] bl
lea esi [ ebp - 0x2200 ]
mov [ ebp - 0x4 ] ebx
call sub_10025ec0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x21ec ] 0x8
mov eax [ ebp - 0x2200 ]
jae r-xdata
mov esi [ ebp - 0x21f0 ]
add esi esi
lea ecx [ ebp - 0x21c8 ]
mov [ ebp - 0x21b4 ] edi
mov [ ebp - 0x21b8 ] ebx
mov [ ebp - 0x21c8 ] bl
call sub_10002640
push ebx
lea ecx [ ebp - 0x21c8 ]
push ecx
or eax 0xffffffff
lea edi [ ebp - 0x21e4 ]
mov [ ebp - 0x4 ] 0x2
call sub_10003ee0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x21b4 ] 0x10
jb r-xdata
mov eax esi
push 0xfa6
lea eax [ ebp - 0x1514 ]
push ebx
push eax
call sub_10032e00
add esp 0xc
lea ecx [ ebp - 0x2204 ]
push ecx
lea edx [ ebp - 0x1514 ]
push edx
mov [ ebp - 0x2204 ] 0xfa4
call [ GetUserNameW@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x21c8 ]
push edx
call sub_1002e8fb
add esp 0x4
mov esi [ ebp - 0x2208 ]
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov eax [ ebp - 0x21e4 ]
mov edi 0x10
cmp [ ebp - 0x21d0 ] edi
jae r-xdata
lea eax [ ebp - 0x1514 ]
lea edx [ eax + 0x2 ]
mov ecx [ ebp - 0x21d4 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
push ecx
push eax
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov ecx esi
call edx
cmp [ ebp - 0x21ec ] 0x8
mov esi eax
jb r-xdata
lea eax [ ebp - 0x21e4 ]
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
lea esi [ eax + eax ]
lea eax [ ebp - 0x1514 ]
lea ecx [ ebp - 0x21c8 ]
mov [ ebp - 0x21b4 ] 0xf
mov [ ebp - 0x21b8 ] ebx
mov [ ebp - 0x21c8 ] bl
call sub_10002640
push ebx
lea eax [ ebp - 0x21c8 ]
push eax
or eax 0xffffffff
lea edi [ ebp - 0x21e4 ]
mov [ ebp - 0x4 ] 0x3
call sub_10003ee0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x21b4 ] 0x10
jb r-xdata
xor ecx ecx
mov [ ebp - 0x21ec ] 0x7
mov [ ebp - 0x21f0 ] ebx
mov [ ebp - 0x2200 ] cx
cmp [ ebp - 0x21d0 ] edi
jb r-xdata
mov eax [ ebp - 0x2200 ]
push eax
call sub_1002e8fb
add esp 0x4
push 0x559
lea edx [ ebp - 0x56c ]
push ebx
push edx
call sub_10032e00
push 0xc98
lea eax [ ebp - 0x21ac ]
push ebx
push eax
mov [ ebp - 0x2204 ] 0x559
call sub_10032e00
add esp 0x18
lea ecx [ ebp - 0x2210 ]
push ecx
lea edx [ ebp - 0x220c ]
push edx
lea eax [ ebp - 0x21ac ]
push eax
lea ecx [ ebp - 0x2204 ]
push ecx
lea edx [ ebp - 0x56c ]
push edx
lea eax [ ebp - 0x1514 ]
push eax
push ebx
mov [ ebp - 0x220c ] 0x64c
call [ LookupAccountNameW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x21c8 ]
push ecx
call sub_1002e8fb
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x21e4 ]
push edx
call sub_1002e8fb
add esp 0x4
call [ GetLastError@IAT ]
movzx esi [ ebp - 0x56b ]
lea esi [ esi * 4 + 0x8 ]
lea eax [ ebp - 0x56c ]
lea ecx [ ebp - 0x21c8 ]
mov [ ebp - 0x2204 ] esi
mov [ ebp - 0x21b4 ] 0xf
mov [ ebp - 0x21b8 ] ebx
mov [ ebp - 0x21c8 ] bl
call sub_10002640
push ebx
lea ecx [ ebp - 0x21c8 ]
push ecx
or eax 0xffffffff
lea edi [ ebp - 0x21e4 ]
mov [ ebp - 0x4 ] 0x4
call sub_10003ee0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x21b4 ] 0x10
jb r-xdata
mov edx [ ebp - 0x21c8 ]
push edx
call sub_1002e8fb
add esp 0x4
jmp r-xdata
sub_10026460
push ebp
mov ebp esp
push 0xffffffff
push sub_1003aa1b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x34 ]
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1002eb41
lea ecx [ esi + 0x24 ]
add esp 0x4
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov esi eax
sub esi ecx
mov ecx [ ecx ]
movzx edx [ ecx ]
mov [ esi + ecx ] dx
add ecx 0x2
test dx dx
jne r-xdata
mov edi eax
call sub_1000a4e0
mov edi eax
test edi edi
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x18
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0xc ]
mov ecx edi
call edx
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x14 ] edi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10026560
push ebp
mov ebp esp
push 0xffffffff
push sub_1003ccbe
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x3c ] ebx
mov edi edx
mov [ ebp - 0x34 ] ecx
xor edx edx
mov [ ebp - 0x4 ] edx
lea ecx [ ebx + 0x4 ]
mov [ ebx ] r--data
xor esi esi
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] si
lea esi [ ebx + 0x24 ]
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edx
mov [ esi ] dx
mov edx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x2
mov [ ebx + 0x20 ] edx
test eax eax
jne r-xdata
mov edx eax
mov [ ebp - 0x38 ] eax
lea eax [ edx + 0x2 ]
mov [ ebp - 0x30 ] eax
mov eax r--data
mov ax [ edx ]
add edx 0x2
test ax ax
jne r-xdata
sub edx [ ebp - 0x30 ]
mov eax [ ebp - 0x38 ]
sar edx 0x1
push edx
call sub_1000bc70
mov eax edi
lea edx [ eax + 0x2 ]
mov edi edi
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
je r-xdata
mov edi [ ebp - 0x34 ]
xor ecx ecx
mov eax edi
mov [ ebp - 0x2c ] cx
lea edx [ eax + 0x2 ]
xor ecx ecx
mov eax edi
mov [ ebp - 0x2c ] cx
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax edi
lea ecx [ ebp - 0x2c ]
call sub_1000bc70
lea edi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x4
call sub_10013f90
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax edi
lea ecx [ ebp - 0x2c ]
call sub_1000bc70
lea edi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x3
call sub_10013f90
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov [ ebx + 0x40 ] 0x0
mov edx [ ebp - 0x2c ]
push edx
call sub_1002e8fb
add esp 0x4
push 0x1
mov eax r--data
mov ecx esi
call sub_10016ca0
mov eax [ ebp - 0x34 ]
mov ecx eax
lea edi [ ecx + 0x2 ]
mov edx [ ebp - 0x2c ]
push edx
call sub_1002e8fb
add esp 0x4
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov [ ebx + 0x4c ] edx
mov eax [ eax + 0x4 ]
mov [ ebx + 0x50 ] eax
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx edi
sar ecx 0x1
push ecx
mov ecx esi
call sub_10016ca0
mov eax [ ebp - 0x30 ]
inc eax
mov [ ebx + 0x40 ] eax
jmp r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x18
mov ecx [ eax ]
mov [ ebx + 0x54 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebx + 0x58 ] edx
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov [ ebx + 0x44 ] eax
xor eax eax
mov [ ebx + 0x48 ] ecx
mov [ ebx + 0x54 ] eax
mov [ ebx + 0x58 ] eax
mov [ ebx + 0x4c ] eax
mov [ ebx + 0x50 ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
sub_10026750
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10026780
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10026780
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x38 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x38 ] 0x7
mov [ esi + 0x34 ] 0x0
mov [ esi + 0x24 ] cx
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov eax [ esi + 0x24 ]
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
xor eax eax
mov [ esi + 0x4 ] ax
mov [ esi ] r--data
pop esi
retn
mov edx [ esi + 0x4 ]
push edx
call sub_1002e8fb
add esp 0x4
sub_100267e0
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov edx [ ecx + 0x50 ]
mov eax [ ecx + 0x4c ]
push esi
mov esi [ ecx + 0x54 ]
mov ecx [ ecx + 0x58 ]
cmp ecx edx
jb r-xdata
pop esi
mov esp ebp
pop ebp
retn
ja r-xdata
mov eax esi
mov edx ecx
cmp esi eax
jbe r-xdata
sub_10026850
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax [ ebp + 0x8 ]
mov [ esi + 0x24 ] eax
sub_10026870
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
mov edx [ edi + 0x28 ]
mov eax [ eax + 0x4 ]
push esi
push edx
call eax
mov esi eax
test esi esi
je r-xdata
push 0x0
lea ecx [ edi + 0x8 ]
mov eax r--data
call sub_1000bc70
xor eax eax
pop esi
retn
mov edx [ esi ]
mov eax [ edx + 0x24 ]
mov ecx esi
call eax
mov ecx esi
test eax eax
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x14 ]
push ebx
call edx
mov ecx eax
lea ebx [ ecx + 0x2 ]
mov edx [ esi ]
mov eax [ edx ]
push 0x1
call eax
mov ecx [ edi + 0x4 ]
mov edx [ ecx ]
mov eax [ edi + 0x28 ]
mov edx [ edx + 0x4 ]
push eax
call edx
mov esi eax
test esi esi
jne r-xdata
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx ebx
sar ecx 0x1
push ecx
lea ecx [ edi + 0x8 ]
call sub_1000bc70
pop ebx
mov eax esi
pop esi
retn
sub_100268f0
push ebp
mov ebp esp
cmp [ ecx + 0x1c ] 0x8
push esi
mov esi [ ecx + 0x18 ]
lea eax [ ecx + 0x8 ]
lea esi [ esi + esi + 0x2 ]
jb r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push esi
push eax
mov eax [ edx + 0xc ]
call eax
xor ecx ecx
cmp esi eax
sete cl
pop esi
mov eax ecx
pop ebp
retn 0x4
mov eax [ eax ]
sub_10026920
push esi
push edi
mov edi ecx
call sub_10026870
mov esi eax
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
retn
cmp [ edi + 0x24 ] 0x0
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
mov ecx [ edi + 0x24 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push esi
call edx
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
retn
sub_10026960
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b163
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x4 ]
xor edi edi
cmp ecx edi
je r-xdata
mov ecx [ esi + 0x24 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x4 ] edi
mov ecx [ esi + 0x28 ]
cmp ecx edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x24 ] edi
cmp [ esi + 0x1c ] 0x8
jb r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x28 ] edi
mov [ esi + 0x1c ] 0x7
mov [ esi + 0x18 ] edi
xor ecx ecx
mov [ esi + 0x8 ] cx
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x8 ]
push eax
call sub_1002e8fb
add esp 0x4
sub_10026a10
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10026960
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10026a40
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x4 ] ecx
push edi
mov ecx esi
call edx
push eax
call sub_1002eb41
mov ebx eax
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add esp 0x4
mov ecx esi
call edx
mov edi [ esi ]
mov eax [ edi + 0x10 ]
mov ecx esi
call eax
mov edx [ edi + 0x14 ]
push eax
push ebx
mov ecx esi
call edx
mov edi eax
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
call edx
cmp eax edi
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x10 ]
xor edi edi
mov ecx esi
mov [ ebp + 0x8 ] edi
call edx
test eax 0xfffffffe
jbe r-xdata
push ebx
call sub_1002ee65
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + edi * 2 ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x10 ]
mov ecx esi
inc edi
call edx
shr eax 0x1
cmp edi eax
jb r-xdata
mov [ ebp + 0x8 ] 0x1
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax ebx
lea edx [ eax + 0x2 ]
lea ecx [ ecx ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov edi [ ebp - 0x4 ]
sub eax edx
sar eax 0x1
lea esi [ edi + 0x8 ]
push eax
mov eax ebx
mov ecx esi
call sub_1000bc70
push ebx
call sub_1002ee65
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
push esi
call edx
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi [ esi ]
sub_10026b40
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b133
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x4 ] 0x0
cmp [ esi + 0x20 ] 0x8
jb r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x8 ] 0x0
mov [ esi + 0x20 ] 0x7
mov [ esi + 0x1c ] 0x0
xor ecx ecx
mov [ esi + 0xc ] cx
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0xc ]
push eax
call sub_1002e8fb
add esp 0x4
sub_10026be0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10026b40
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10026c10
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c938
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
push edi
call edx
xor eax eax
mov [ ebp - 0x2c ] ax
mov eax edi
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x4 ] 0x0
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax edi
lea ecx [ ebp - 0x2c ]
call sub_1000bc70
add esi 0xc
lea edi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
call sub_10013f90
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
sub_10026ce0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c236
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov ecx [ ebx + 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ ebx + 0x8 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
push eax
call edx
mov esi eax
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ecx ]
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push edx
call eax
test eax eax
jne r-xdata
mov eax esi
mov eax [ esi ]
mov edx [ eax + 0x24 ]
mov ecx esi
call edx
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebx + 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ ebx + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
mov edx [ esi ]
mov edi eax
mov eax [ edi ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov ecx esi
call eax
mov edx [ ebp - 0x14 ]
push eax
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
lea esi [ ebx + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x10 ]
push r--data
xor edi edi
mov ecx esi
call sub_10016d80
test eax eax
je r-xdata
mov [ ebx + 0x4 ] 0x0
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
push 0x28
call sub_1002e957
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ecx ]
mov eax [ edx + 0x14 ]
call eax
mov ecx eax
lea edi [ ecx + 0x2 ]
lea esp [ esp ]
xor eax eax
mov ecx [ ebp - 0x14 ]
push ecx
push eax
call sub_10026f00
jmp r-xdata
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx edi
sar ecx 0x1
cmp ecx [ ebx + 0x1c ]
jae r-xdata
mov esi [ ebp - 0x10 ]
mov [ ebx + 0x4 ] eax
push 0x0
mov eax r--data
mov ecx esi
call sub_1000bc70
mov ecx eax
lea edi [ ecx + 0x2 ]
lea ecx [ ecx ]
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx edi
mov edi 0x8
sar ecx 0x1
cmp [ esi + 0x14 ] edi
jb r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] edi
jb r-xdata
push ecx
push edx
push eax
call sub_1002ef9d
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor eax eax
push edi
push eax
call sub_10026f00
jmp r-xdata
mov edi [ ebp - 0x14 ]
mov edx [ edi ]
push eax
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
push 0x28
call sub_1002e957
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebx + 0x4 ] eax
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov edx [ eax ]
push ecx
mov ecx eax
mov eax [ edx + 0x8 ]
call eax
mov ecx [ ebp - 0x10 ]
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
push esi
mov eax r--data
call sub_1000bb90
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
push eax
mov ecx ebx
call edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10026f00
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c203
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x4 ] eax
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] eax
mov [ ecx ] dx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x4 ] eax
push eax
mov eax r--data
mov [ esi + 0x8 ] edx
call sub_1000bc70
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_10026f70
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c1cb
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x54
call sub_1002e957
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
push ecx
push eax
call sub_10027c10
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
sub_10026ff0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003dba8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
lea esi [ ecx + 0x24 ]
mov ecx [ esi + 0x4 ]
sub ecx [ esi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x2
xor edi edi
push edi
sub esp 0x1c
mov ecx esp
mov [ esp + 0x34 ] esp
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edi
push edi
mov eax r--data
mov [ ecx ] dx
call sub_1000bc70
lea eax [ esp + 0x38 ]
push eax
call sub_10027fa0
add esp 0x28
mov ebx eax
cmp esi ebx
je r-xdata
mov [ esp + 0x30 ] 0xffffffff
mov eax [ esp + 0x14 ]
cmp eax edi
je r-xdata
mov eax [ esi ]
cmp eax edi
je r-xdata
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] edi
mov [ esp + 0x1c ] edi
mov edi [ esi + 0x4 ]
mov esi [ esi ]
mov ecx edi
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
push sub_10027f00
add eax edx
push eax
push edi
push esi
call sub_100287e0
add esp 0x10
mov edi [ esp + 0x18 ]
call sub_10027600
mov ecx [ esp + 0x14 ]
push ecx
call sub_1002e8fb
add esp 0x4
xor edi edi
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov ecx [ ebx ]
mov [ esi ] ecx
mov edx [ ebx + 0x4 ]
mov [ esi + 0x4 ] edx
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov [ ebx ] edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] edi
mov edi [ esi + 0x4 ]
call sub_10027600
mov eax [ esi ]
push eax
call sub_1002e8fb
add esp 0x4
xor edi edi
sub_10027130
push ebp
mov ebp esp
push 0xffffffff
push sub_1003def8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi ecx
mov [ ebp - 0x30 ] eax
call sub_10026ff0
xor ecx ecx
xor esi esi
mov [ ebp - 0x2c ] cx
push esi
mov eax r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] esi
call sub_1000bc70
mov [ ebp - 0x4 ] esi
lea edx [ ebp - 0x2c ]
lea ebx [ edi + 0x4 ]
push edx
lea esi [ edi + 0x24 ]
add edi 0x20
push edi
push ebx
call sub_100283e0
add esp 0xc
test eax eax
je r-xdata
push 0x0
mov eax r--data
mov ecx ebx
call sub_1000bc70
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
sub esp 0x1c
mov edi esp
xor eax eax
mov [ ebp - 0x34 ] esp
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
mov [ edi ] ax
push ecx
or eax 0xffffffff
call sub_1000bbc0
mov ecx [ ebp - 0x30 ]
call sub_10027450
cmp [ ebp - 0x18 ] 0x8
mov esi eax
jb r-xdata
xor eax eax
mov eax [ ebp - 0x2c ]
push eax
call sub_1002e8fb
add esp 0x4
mov eax esi
jmp r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1002e8fb
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
sub_10027230
push ebp
mov ebp esp
push 0xffffffff
push sub_1003cc62
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov edi ecx
xor ebx ebx
mov eax esi
mov [ ebp - 0x4c ] edi
mov [ ebp - 0x50 ] ebx
lea edx [ eax + 0x2 ]
lea ecx [ ecx ]
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
cmp eax 0x2
jbe r-xdata
push r--data
push esi
call sub_1002eebe
add esp 0x8
cmp eax ebx
je r-xdata
cmp [ esi ] 0x5c
jne r-xdata
xor edx edx
mov eax esi
mov [ ebp - 0x2c ] dx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
lea edx [ eax + 0x2 ]
sub eax esi
xor ecx ecx
sar eax 0x1
mov [ ebp - 0x48 ] cx
push eax
mov eax esi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] ebx
call sub_1000bc70
mov [ ebp - 0x4 ] ebx
lea eax [ ebp - 0x48 ]
mov ebx 0x1
jmp r-xdata
cmp [ esi + 0x2 ] 0x5c
jne r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax esi
lea ecx [ ebp - 0x2c ]
call sub_1000bc70
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
mov ebx 0x2
lea esi [ edi + 0x4 ]
mov edi eax
mov [ ebp - 0x50 ] ebx
call sub_10013f90
mov esi 0x8
test bl 0x2
je r-xdata
add esi 0x4
test bl 0x1
je r-xdata
and ebx 0xfffffffd
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov edx [ ebp - 0x4c ]
mov [ edx + 0x20 ] 0xffffffff
cmp [ ebp - 0x34 ] esi
jb r-xdata
xor ecx ecx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] cx
mov eax [ ebp - 0x2c ]
push eax
call sub_1002e8fb
add esp 0x4
mov ecx [ ebp - 0x4c ]
mov [ ecx + 0x20 ] 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1002e8fb
mov eax [ ebp - 0x4c ]
add esp 0x4
mov [ eax + 0x20 ] 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
sub_100273b0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100273e0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_100273e0
push ebx
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x34 ] r--data
mov eax [ esi + 0x24 ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
cmp [ esi + 0x18 ] 0x8
jb r-xdata
push edi
mov edi [ esi + 0x28 ]
call sub_10027600
mov eax [ esi + 0x24 ]
push eax
call sub_1002e8fb
add esp 0x4
pop edi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] 0x7
xor edx edx
mov [ esi + 0x4 ] dx
mov [ esi ] r--data
pop esi
pop ebx
retn
mov ecx [ esi + 0x4 ]
push ecx
call sub_1002e8fb
add esp 0x4
sub_10027450
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d413
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x1c ] 0x8
mov edi [ ebp + 0x8 ]
jae r-xdata
push 0x5c
call sub_1002e957
mov ebx eax
add esp 0x4
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] 0x1
test ebx ebx
je r-xdata
lea edi [ ebp + 0x8 ]
xor esi esi
test esi esi
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov eax [ ebp + 0x8 ]
push eax
call sub_1002e8fb
add esp 0x4
xor eax eax
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
jmp r-xdata
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
push eax
push 0x0
push 0x0
push 0x0
push 0x1
push r--data
mov ecx edi
mov edx r--data
call sub_10026560
mov esi eax
jmp r-xdata
sub_10027500
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push edi
mov edi [ esi + 0x4 ]
call sub_10027600
mov eax [ esi ]
push eax
call sub_1002e8fb
add esp 0x4
pop edi
sub_10027530
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c47a
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ ebx + 0x4 ]
cmp edi ecx
jae r-xdata
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov eax [ ebx ]
cmp eax edi
ja r-xdata
mov esi [ ebx + 0x4 ]
xor eax eax
mov [ ebp - 0x4 ] 0x1
cmp esi eax
je r-xdata
mov ecx ebx
call sub_10027640
sub edi eax
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ ebx + 0x8 ]
jne r-xdata
add [ ebx + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
mov [ esi ] ax
mov ecx [ ebx ]
lea eax [ esi * 8 ]
sub eax esi
mov esi [ ebx + 0x4 ]
lea edi [ ecx + eax * 4 ]
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
mov ecx ebx
call sub_10027640
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
mov [ esi ] dx
jmp r-xdata
call sub_10013f90
sub_10027600
push esi
mov esi eax
cmp esi edi
je r-xdata
pop esi
retn
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_1002e8fb
add esp 0x4
sub_10027640
push ebx
mov ebx [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
sub esi ebx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
push edi
cmp esi 0x9249248
jbe r-xdata
mov edi [ ecx + 0x8 ]
sub edi ebx
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
inc esi
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_1003621d
pop edi
pop esi
pop ebx
retn
mov edx eax
shr edx 0x1
mov edi 0x9249249
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_100276c0
mov eax esi
cmp eax esi
jae r-xdata
sub_100276c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d3e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp edi 0x9249249
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax edi
jae r-xdata
push r--data
call sub_1003621d
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_10010110
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edi [ esi + 0x4 ]
mov edx [ esi ]
push ecx
push edi
mov ecx eax
mov [ ebp - 0x14 ] eax
call sub_100277d0
mov edi [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ebx edx
shr ebx 0x1f
add esp 0x8
add ebx edx
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax * 8 ]
sub ecx eax
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 4 ]
lea ecx [ ebx * 8 ]
sub ecx ebx
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
mov edi [ esi + 0x4 ]
mov eax [ esi ]
call sub_10027600
mov edx [ esi ]
push edx
call sub_1002e8fb
add esp 0x4
sub_100277d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c435
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea edi [ edx + 0x14 ]
xor ebx ebx
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp esi ebx
je r-xdata
add esi 0x1c
add edi 0x1c
jmp r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] cx
cmp esi eax
je r-xdata
lea eax [ edi - 0x14 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] dx
cmp [ edi ] 0x8
jae r-xdata
mov eax [ esi ]
push eax
call sub_1002e8fb
add esp 0x4
mov edx [ edi - 0x14 ]
mov [ esi ] edx
mov [ edi - 0x14 ] ebx
mov eax [ edi - 0x4 ]
inc eax
add eax eax
push eax
lea ecx [ edi - 0x14 ]
push ecx
push esi
call sub_1002e460
add esp 0xc
jmp r-xdata
mov eax [ edi - 0x4 ]
mov [ esi + 0x10 ] eax
mov ecx [ edi ]
mov [ esi + 0x14 ] ecx
mov [ edi - 0x4 ] ebx
mov [ edi ] ebx
sub_100278a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003db73
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi ecx
mov [ ebp - 0x30 ] eax
call sub_100279c0
xor eax eax
xor ecx ecx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x2c ] cx
lea edx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
push edx
lea eax [ edi + 0x20 ]
push eax
lea ebx [ edi + 0x4 ]
lea esi [ edi + 0x24 ]
push ebx
call sub_100283e0
add esp 0xc
test eax eax
je r-xdata
push 0x0
mov eax r--data
mov ecx ebx
call sub_1000bc70
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
push 0x5c
call sub_1002e957
mov ebx eax
add esp 0x4
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x4 ] 0x1
mov esi 0x8
test ebx ebx
je r-xdata
xor eax eax
mov edx [ ebp - 0x2c ]
push edx
call sub_1002e8fb
add esp 0x4
xor edi edi
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
mov eax edi
jmp r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
xor eax eax
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
cmp [ edi + 0x48 ] esi
lea edx [ edi + 0x34 ]
jb r-xdata
lea ecx [ ebp - 0x2c ]
mov ecx [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] esi
jae r-xdata
push eax
push 0x0
push 0x0
push 0x0
push 0x1
push r--data
call sub_10026560
mov edi eax
jmp r-xdata
mov edx [ edx ]
cmp [ ebp - 0x18 ] esi
jb r-xdata
sub_100279c0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003db30
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x28 ]
sub ecx [ esi + 0x24 ]
lea ebx [ esi + 0x24 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x50 ]
xor ecx esp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov [ esp + 0x2c ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] eax
lea eax [ esi + 0x34 ]
xor edi edi
cmp [ eax + 0x14 ] 0x8
mov [ esp + 0x2c ] 0x2
jb r-xdata
mov [ esp + 0x38 ] eax
mov ecx [ eax ]
mov [ esp + 0x38 ] ecx
jmp r-xdata
mov esi [ ebx + 0x4 ]
mov ebx [ ebx ]
mov ecx esi
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
push sub_10027f00
add eax edx
push eax
push esi
push ebx
call sub_100287e0
mov esi [ esp + 0x24 ]
xor edi edi
add esp 0x10
cmp esi edi
je r-xdata
mov [ esp + 0x10 ] 0x0
push 0x3
lea edx [ esp + 0x28 ]
push edx
sub esp 0x1c
mov ecx esp
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edi
mov [ esp + 0x34 ] esp
mov [ ecx ] ax
push edi
mov eax r--data
call sub_1000bc70
lea ecx [ esp + 0x38 ]
push ecx
call sub_10027fa0
add esp 0x28
mov [ esp + 0x70 ] edi
mov ecx [ esp + 0x18 ]
mov esi [ esp + 0x14 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
je r-xdata
mov ebx [ esp + 0x18 ]
cmp esi ebx
je r-xdata
push 0x5c
push esi
call sub_1002ef1e
add esp 0x8
test esi esi
je r-xdata
mov esi [ esi ]
push esi
call sub_1002e8fb
add esp 0x4
lea esp [ esp ]
mov ecx [ esp + 0x18 ]
mov esi [ esp + 0x14 ]
add [ esp + 0x10 ] 0x1c
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
inc edi
add ecx edx
cmp edi ecx
jb r-xdata
add eax 0x2
xor edx edx
mov ecx eax
mov [ esp + 0x58 ] 0x7
mov [ esp + 0x54 ] 0x0
mov [ esp + 0x44 ] dx
lea esi [ ecx + 0x2 ]
lea ebx [ ebx ]
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
mov [ esi ] dx
add esi 0x1c
cmp esi ebx
jne r-xdata
mov ecx [ esi ]
push ecx
call sub_1002e8fb
add esp 0x4
add esi [ esp + 0x10 ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
lea ecx [ esp + 0x48 ]
call sub_1000bc70
lea ecx [ esp + 0x44 ]
mov [ esp + 0x70 ] 0x1
call sub_10027530
mov [ esp + 0x70 ] 0x0
cmp [ esp + 0x58 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov esi [ esp + 0x14 ]
mov eax [ esp + 0x44 ]
push eax
call sub_1002e8fb
add esp 0x4
sub_10027c10
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c1a4
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ esi ] r--data
mov edx 0x7
xor ecx ecx
mov [ esi + 0x18 ] edx
mov [ esi + 0x14 ] edi
mov [ esi + 0x4 ] cx
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
lea ecx [ esi + 0x34 ]
mov [ ecx + 0x14 ] edx
xor edx edx
mov [ ecx + 0x10 ] edi
mov [ ecx ] dx
mov [ esi + 0x50 ] r--data
mov edx eax
lea ebx [ edx + 0x2 ]
mov [ ebp - 0x4 ] 0x4
mov [ ebp + 0xc ] ebx
mov bx [ edx ]
add edx 0x2
cmp bx di
jne r-xdata
sub edx [ ebp + 0xc ]
sar edx 0x1
push edx
call sub_1000bc70
mov [ esi + 0x20 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_10027cc0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10027cf0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10027cf0
push ebx
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x50 ] r--data
cmp [ esi + 0x48 ] 0x8
jb r-xdata
xor ebx ebx
xor ecx ecx
mov [ esi + 0x48 ] 0x7
mov [ esi + 0x44 ] ebx
mov [ esi + 0x34 ] cx
mov eax [ esi + 0x24 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x34 ]
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
cmp [ esi + 0x18 ] 0x8
jb r-xdata
push edi
mov edi [ esi + 0x28 ]
call sub_10027600
mov edx [ esi + 0x24 ]
push edx
call sub_1002e8fb
add esp 0x4
pop edi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] 0x7
xor ecx ecx
mov [ esi + 0x4 ] cx
mov [ esi ] r--data
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
push eax
call sub_1002e8fb
add esp 0x4
sub_10027d80
push ebp
mov ebp esp
push 0xffffffff
push sub_1003cc62
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4c ] ecx
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov eax ecx
mov [ ebp - 0x50 ] ebx
lea esi [ eax + 0x2 ]
jmp r-xdata
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax esi
sar eax 0x1
cmp eax 0x2
jbe r-xdata
push r--data
push ecx
call sub_1002eebe
add esp 0x8
cmp eax ebx
je r-xdata
cmp [ ecx ] 0x5c
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
lea esi [ eax + 0x2 ]
push r--data
push esi
call sub_1002eebe
add esp 0x8
cmp eax ebx
je r-xdata
cmp [ ecx + 0x2 ] 0x5c
jne r-xdata
xor edx edx
mov eax esi
mov [ ebp - 0x2c ] dx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
lea edx [ eax + 0x2 ]
sub eax esi
xor ecx ecx
sar eax 0x1
mov [ ebp - 0x48 ] cx
push eax
mov eax esi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] ebx
call sub_1000bc70
mov [ ebp - 0x4 ] ebx
lea eax [ ebp - 0x48 ]
mov ebx 0x1
jmp r-xdata
add ecx 0x4
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax esi
lea ecx [ ebp - 0x2c ]
call sub_1000bc70
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
mov ebx 0x2
mov esi [ ebp - 0x4c ]
add esi 0x4
mov edi eax
mov [ ebp - 0x50 ] ebx
call sub_10013f90
mov esi 0x8
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
and ebx 0xfffffffd
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov eax [ ebp - 0x4c ]
mov [ eax + 0x20 ] 0xffffffff
cmp [ ebp - 0x34 ] esi
jb r-xdata
xor ecx ecx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] cx
mov eax [ ebp - 0x2c ]
push eax
call sub_1002e8fb
add esp 0x4
mov edx [ ebp - 0x48 ]
push edx
call sub_1002e8fb
add esp 0x4
sub_10027f00
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b880
mov eax [ fs : 0x0 ]
push eax
push ebx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
mov edi [ ebp + 0x34 ]
push eax
mov eax [ ebp + 0x18 ]
lea ecx [ ebp + 0x8 ]
call sub_10016d80
test eax eax
sets bl
cmp [ ebp + 0x1c ] 0x8
jb r-xdata
lea eax [ ebp + 0x24 ]
xor ecx ecx
cmp [ ebp + 0x38 ] 0x8
mov [ ebp + 0x1c ] 0x7
mov [ ebp + 0x18 ] 0x0
mov [ ebp + 0x8 ] cx
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_1002e8fb
add esp 0x4
mov al bl
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x24 ]
push edx
call sub_1002e8fb
add esp 0x4
sub_10027fa0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003daed
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov ecx [ ebp + 0x2c ]
mov eax [ ebp + 0x28 ]
xor edi edi
mov [ ebp - 0x98 ] esi
mov [ ebp - 0xa0 ] ecx
mov [ ebp - 0xb4 ] edi
mov ecx 0x1
mov [ ebp - 0x4 ] ecx
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
lea edx [ ebp - 0x94 ]
push edx
push eax
push edi
push ecx
push 0x2
mov [ ebp - 0xb4 ] ecx
call [ WNetOpenEnumW@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov esi 0x246d
or ebx 0xffffffff
push esi
mov [ ebp - 0x84 ] ebx
call sub_1002eb41
add esp 0x4
lea ecx [ ebp - 0xb8 ]
push ecx
push eax
lea edx [ ebp - 0x84 ]
mov [ ebp - 0x8c ] eax
mov eax [ ebp - 0x94 ]
push edx
mov [ ebp - 0x84 ] ebx
mov ebx [ WNetEnumResourceW@IAT ]
push eax
mov [ ebp - 0xb8 ] esi
call ebx
cmp eax 0xea
jne r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0xc ]
push edx
call sub_1002e8fb
add esp 0x4
cmp eax edi
jne r-xdata
cmp esi 0x100000
jae r-xdata
mov eax [ ebp - 0x8c ]
push eax
call sub_1002ee65
mov ecx [ ebp - 0x94 ]
add esp 0x4
push ecx
call [ WNetCloseEnum@IAT ]
mov esi [ ebp - 0x98 ]
jmp r-xdata
mov [ ebp - 0x9c ] edi
cmp [ ebp - 0x84 ] edi
jbe r-xdata
mov ecx [ ebp - 0x8c ]
push ecx
call sub_1002ee65
add esp 0x4
add esi esi
push esi
call sub_1002eb41
mov ecx [ ebp - 0x94 ]
add esp 0x4
lea edx [ ebp - 0xbc ]
push edx
push eax
mov [ ebp - 0x8c ] eax
lea eax [ ebp - 0x84 ]
push eax
push ecx
mov [ ebp - 0xbc ] esi
mov [ ebp - 0x84 ] 0xffffffff
call ebx
cmp eax 0xea
je r-xdata
cmp [ ebp + 0x20 ] 0x8
jb r-xdata
mov eax [ ebp - 0x8c ]
add eax 0x14
mov [ ebp - 0x90 ] eax
jmp r-xdata
mov edx [ ebp - 0xa0 ]
xor ecx ecx
cmp [ eax - 0xc ] edx
mov eax [ eax ]
mov [ ebp - 0x2c ] cx
mov ecx eax
mov [ ebp - 0x1c ] edi
lea esi [ ecx + 0x2 ]
jne r-xdata
mov ebx 0x7
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x18 ] 0x7
jmp r-xdata
mov dx [ ecx ]
add ecx 0x2
cmp dx di
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
lea ecx [ ebp - 0x2c ]
call sub_1000bc70
mov [ ebp - 0x4 ] 0x3
xor edx edx
push 0x1
mov eax r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x48 ] dx
call sub_1000bc70
lea edx [ ebp - 0x48 ]
lea eax [ ebp + 0xc ]
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x4
call sub_10028620
mov ecx eax
lea eax [ ebp - 0x2c ]
lea edx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x5
call sub_10028660
mov esi 0x8
cmp [ ebp - 0x6c ] esi
jb r-xdata
mov dx [ ecx ]
add ecx 0x2
cmp dx di
jne r-xdata
xor ecx ecx
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x80 ] cx
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ ebp - 0x80 ]
push eax
call sub_1002e8fb
add esp 0x4
sub ecx esi
sar ecx 0x1
push ecx
lea ecx [ ebp - 0x2c ]
call sub_1000bc70
mov [ ebp - 0x4 ] 0x2
mov ebx [ ebp - 0x98 ]
lea ecx [ ebp - 0x2c ]
call sub_10028550
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x48 ] ax
mov [ ebp - 0x4 ] 0x9
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_1002e8fb
add esp 0x4
mov eax [ ebp - 0x9c ]
add [ ebp - 0x90 ] 0x20
inc eax
mov [ ebp - 0x9c ] eax
cmp eax [ ebp - 0x84 ]
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1002e8fb
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0xa0 ]
mov ecx [ ebp - 0x90 ]
xor edx edx
push eax
mov eax [ ebp - 0x64 ]
add ecx 0xffffffec
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] dx
push ecx
cmp [ ebp - 0x50 ] esi
jae r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
mov eax [ ebp - 0x90 ]
sub esp 0x1c
mov ecx esp
xor edx edx
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
mov [ ecx ] dx
mov edx eax
mov [ ebp - 0x88 ] esp
lea ebx [ edx + 0x2 ]
lea eax [ ebp - 0x64 ]
mov si [ edx ]
add edx 0x2
cmp si di
jne r-xdata
sub edx ebx
sar edx 0x1
push edx
call sub_1000bc70
lea eax [ ebp - 0xb0 ]
push eax
call sub_10027fa0
add esp 0x28
mov [ ebp - 0x4 ] 0xa
mov ebx [ ebp - 0xac ]
mov esi [ ebp - 0xb0 ]
mov ecx ebx
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
je r-xdata
xor edi edi
cmp esi edi
je r-xdata
mov [ ebp - 0x88 ] 0x0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x50 ] 0x8
mov [ ebp - 0xb0 ] edi
mov [ ebp - 0xac ] edi
mov [ ebp - 0xa8 ] edi
jb r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x88 ]
mov ebx [ ebp - 0x98 ]
lea ecx [ ecx + esi ]
call sub_10028550
mov ebx [ ebp - 0xac ]
mov esi [ ebp - 0xb0 ]
add [ ebp - 0x88 ] 0x1c
mov ecx ebx
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
inc edi
add eax edx
cmp edi eax
jb r-xdata
xor edi edi
mov edx [ ebp - 0x64 ]
push edx
call sub_1002e8fb
add esp 0x4
push esi
call sub_1002e8fb
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
mov [ esi ] cx
add esi 0x1c
cmp esi ebx
jne r-xdata
mov eax [ esi ]
push eax
call sub_1002e8fb
add esp 0x4
mov esi [ ebp - 0xb0 ]
sub_100283e0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x10 ]
push edi
push r--data
xor edi edi
mov ecx ebx
call sub_10016d80
test eax eax
jne r-xdata
mov ebx [ ebp + 0xc ]
mov ecx [ ebx ]
cmp ecx 0xffffffff
jne r-xdata
mov edi [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
je r-xdata
mov edi [ esi + 0x4 ]
sub edi [ esi ]
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp ecx eax
jae r-xdata
mov edi [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
xor ebx ebx
add eax edx
je r-xdata
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
push edi
or eax 0xffffffff
mov edi ebx
call sub_1000bbc0
mov ecx [ esi ]
mov edi [ ebp + 0x10 ]
push 0x0
push ecx
or eax 0xffffffff
call sub_1000bbc0
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] 0x0
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov edi [ ebp + 0x8 ]
lea edx [ ecx * 8 ]
sub edx ecx
lea eax [ eax + edx * 4 ]
push 0x0
push eax
or eax 0xffffffff
call sub_1000bbc0
mov eax [ ebx ]
mov edx [ esi ]
mov edi [ ebp + 0x10 ]
lea ecx [ eax * 8 ]
sub ecx eax
lea eax [ edx + ecx * 4 ]
push 0x0
push eax
or eax 0xffffffff
call sub_1000bbc0
inc [ ebx ]
pop edi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0xc ]
mov ecx [ edx ]
cmp ecx 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] ebx
lea ebx [ ebx ]
mov ebx edx
push eax
mov eax [ ecx + 0x10 ]
call sub_10016d80
test eax eax
jns r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
mov edi [ esi ]
mov ecx [ esi + 0x4 ]
add [ ebp - 0x4 ] 0x1c
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
inc ebx
add eax edx
cmp ebx eax
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
add ecx edi
cmp [ eax + 0x14 ] 0x8
mov edi [ eax + 0x10 ]
jb r-xdata
jmp r-xdata
sub_10028550
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c47a
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ ebx + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov eax [ ebx ]
cmp eax esi
ja r-xdata
mov edi [ ebx + 0x4 ]
xor ecx ecx
mov [ ebp - 0x4 ] 0x1
cmp edi ecx
je r-xdata
mov ecx ebx
call sub_10027640
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ ebx + 0x8 ]
jne r-xdata
add [ ebx + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
xor eax eax
push ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ecx
mov [ edi ] ax
push esi
mov ecx [ ebx ]
mov edi [ ebx + 0x4 ]
lea eax [ esi * 8 ]
sub eax esi
lea eax [ ecx + eax * 4 ]
xor ecx ecx
mov [ ebp - 0x4 ] ecx
cmp edi ecx
je r-xdata
mov ecx ebx
call sub_10027640
xor edx edx
push ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ecx
mov [ edi ] dx
push eax
jmp r-xdata
or eax 0xffffffff
call sub_1000bbc0
sub_10028620
push ebp
mov ebp esp
push ecx
push esi
push edi
push eax
mov edi edx
mov esi ecx
mov [ ebp - 0x4 ] 0x0
call sub_100286f0
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov edi eax
mov [ esi ] cx
call sub_10013f90
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_10028660
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ecx + 0x14 ]
push esi
push edi
mov edi eax
mov eax [ ecx + 0x10 ]
mov esi edx
mov edx [ edi + 0x10 ]
sub ebx eax
mov [ ebp - 0x4 ] 0x0
cmp edx ebx
jbe r-xdata
push 0x0
push edi
or eax 0xffffffff
mov edi ecx
call sub_10016bf0
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov edi eax
mov [ esi ] dx
call sub_10013f90
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ edi + 0x14 ]
sub ebx edx
cmp ebx eax
jb r-xdata
push ecx
call sub_100286f0
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov edi eax
mov [ esi ] cx
call sub_10013f90
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_100286f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push ebx
or ebx 0xffffffff
cmp eax 0xffffffff
jae r-xdata
mov eax [ edi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_1003621d
mov eax edi
pop ebx
pop ebp
retn 0x4
push esi
lea esi [ eax + ebx ]
mov eax edi
call sub_1000be00
test al al
je r-xdata
pop esi
mov eax [ edi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov ecx 0x8
cmp [ eax + 0x14 ] ecx
jb r-xdata
mov eax [ edi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov edx [ edi + 0x10 ]
add edx edx
push edx
add ebx ebx
push ecx
add eax ebx
push eax
call sub_1002e460
mov eax [ ebp + 0x8 ]
add esp 0xc
cmp edi eax
jne r-xdata
cmp [ edi + 0x14 ] ecx
jb r-xdata
mov eax [ eax ]
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
push ebx
mov eax edi
push ecx
push eax
call sub_1002e460
jmp r-xdata
mov eax [ edi ]
push ebx
push ecx
push eax
call sub_1002e460
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov eax edi
xor ecx ecx
mov [ eax + esi * 2 ] cx
mov eax [ edi ]
xor ecx ecx
mov [ eax + esi * 2 ] cx
pop esi
mov eax edi
pop ebx
pop ebp
retn 0x4
push ebx
push eax
push ecx
call sub_10033950
add esp 0xc
cmp [ edi + 0x14 ] 0x8
mov [ edi + 0x10 ] esi
jb r-xdata
sub_100287e0
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi edi
sub esi ebx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
cmp eax 0x20
jle r-xdata
cmp eax 0x1
jle r-xdata
mov esi [ ebp + 0x10 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx edi
je r-xdata
test esi esi
jle r-xdata
push ecx
push edi
mov ecx ebx
call sub_10029360
add esp 0x8
cmp eax 0x20
jle r-xdata
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx edi
mov edx ebx
call sub_10028930
mov eax esi
cdq
sub eax edx
sar eax 0x1
mov esi eax
cdq
sub eax edx
sar eax 0x1
add esi eax
mov ecx edi
sub ecx [ ebp - 0xc ]
mov eax 0x92492493
imul ecx
add edx ecx
mov ecx [ ebp - 0x10 ]
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
sub ecx ebx
mov [ ebp - 0x14 ] eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add esp 0x8
add ecx edx
mov edx [ ebp - 0x4 ]
push edx
push esi
cmp ecx [ ebp - 0x14 ]
jge r-xdata
mov esi edi
sub esi ebx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0xc ]
push edi
push eax
call sub_100287e0
mov edi [ ebp - 0x10 ]
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
push eax
push ecx
call sub_100287e0
mov ebx [ ebp - 0xc ]
mov [ ebp - 0x8 ] ebx
jmp r-xdata
push ecx
mov eax edi
call sub_10029300
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov edx ebx
call sub_100291d0
mov ecx [ ebp - 0x4 ]
add esp 0x4
mov ecx edi
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
mov ecx [ ebp - 0x4 ]
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
add esp 0x10
cmp eax 0x20
jg r-xdata
sub_10028930
push ebp
mov ebp esp
push 0xffffffff
push sub_1003cc00
mov eax [ fs : 0x0 ]
push eax
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov edi edx
mov [ ebp - 0x20 ] ecx
sub ecx edi
mov ebx [ ebp + 0xc ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cdq
sub eax edx
sar eax 0x1
lea ecx [ eax * 8 ]
sub ecx eax
mov eax [ ebp - 0x20 ]
lea esi [ edi + ecx * 4 ]
push ebx
add eax 0xffffffe4
push esi
mov ecx edi
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x28 ] ebx
call sub_10029070
add esp 0x8
lea edx [ esi + 0x1c ]
mov [ ebp - 0x18 ] edx
cmp edi esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x20 ]
jae r-xdata
sub esp 0x1c
mov edi esp
xor eax eax
mov [ ebp - 0x1c ] esp
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
push esi
or eax 0xffffffff
call sub_1000bbc0
sub esp 0x1c
mov edi esp
xor ecx ecx
mov [ ebp - 0x14 ] esp
lea eax [ esi - 0x1c ]
mov [ ebp - 0x4 ] ecx
push ecx
xor edx edx
mov [ ebp - 0x14 ] eax
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ecx
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov [ ebp - 0x4 ] 0xffffffff
call ebx
add esp 0x38
test al al
jne r-xdata
mov ebx [ ebp - 0x18 ]
mov eax esi
mov [ ebp - 0x1c ] eax
sub esp 0x1c
mov edi esp
xor ecx ecx
mov [ ebp - 0x24 ] esp
push ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push esi
or eax 0xffffffff
mov [ edi ] cx
call sub_1000bbc0
mov eax [ ebp - 0x18 ]
sub esp 0x1c
mov edi esp
xor edx edx
mov [ ebp - 0x14 ] esp
mov [ ebp - 0x4 ] 0x2
push edx
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov [ ebp - 0x4 ] 0xffffffff
call ebx
add esp 0x38
test al al
jne r-xdata
mov ecx [ ebp - 0x14 ]
sub esp 0x1c
mov edi esp
xor eax eax
mov [ ebp - 0x1c ] esp
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
push ecx
or eax 0xffffffff
call sub_1000bbc0
sub esp 0x1c
mov [ ebp - 0x4 ] 0x1
mov edi esp
xor edx edx
mov [ ebp - 0x24 ] esp
push edx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push esi
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov [ ebp - 0x4 ] 0xffffffff
call ebx
add esp 0x38
test al al
jne r-xdata
cmp eax [ ebp - 0x2c ]
jbe r-xdata
sub esp 0x1c
mov edi esp
xor ecx ecx
mov [ ebp - 0x24 ] esp
push ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push ebx
or eax 0xffffffff
mov [ edi ] cx
call sub_1000bbc0
sub esp 0x1c
mov edi esp
xor edx edx
mov [ ebp - 0x14 ] esp
mov [ ebp - 0x4 ] 0x4
push edx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push esi
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov [ ebp - 0x4 ] 0xffffffff
call [ ebp - 0x28 ]
add esp 0x38
test al al
jne r-xdata
mov edx [ ebp - 0x18 ]
sub esp 0x1c
mov edi esp
xor ecx ecx
mov [ ebp - 0x24 ] esp
push ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push edx
or eax 0xffffffff
mov [ edi ] cx
call sub_1000bbc0
sub esp 0x1c
mov edi esp
xor eax eax
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x14 ] esp
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
push esi
or eax 0xffffffff
call sub_1000bbc0
mov [ ebp - 0x4 ] 0xffffffff
call ebx
add esp 0x38
test al al
jne r-xdata
mov esi [ ebp - 0x14 ]
cmp [ ebp - 0x2c ] esi
jb r-xdata
jne r-xdata
add eax 0xffffffe4
mov [ ebp - 0x14 ] eax
add ebx 0x1c
cmp ebx [ ebp - 0x20 ]
jb r-xdata
sub esp 0x1c
mov edi esp
xor eax eax
mov [ ebp - 0x24 ] esp
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
push esi
or eax 0xffffffff
call sub_1000bbc0
sub esp 0x1c
mov edi esp
xor ecx ecx
mov [ ebp - 0x14 ] esp
mov [ ebp - 0x4 ] 0x5
push ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push ebx
or eax 0xffffffff
mov [ edi ] cx
call sub_1000bbc0
mov [ ebp - 0x4 ] 0xffffffff
call [ ebp - 0x28 ]
add esp 0x38
test al al
jne r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x1c
mov [ ebp - 0x18 ] eax
cmp eax [ ebp - 0x20 ]
jb r-xdata
sub eax 0x1c
mov [ ebp - 0x1c ] eax
cmp ebx [ ebp - 0x20 ]
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp ebx [ ebp - 0x20 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x14 ]
sub esp 0x1c
mov edi esp
xor eax eax
mov [ ebp - 0x30 ] esp
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
push ecx
or eax 0xffffffff
call sub_1000bbc0
sub esp 0x1c
mov [ ebp - 0x4 ] 0x8
mov edi esp
xor edx edx
mov [ ebp - 0x24 ] esp
push edx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push esi
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov [ ebp - 0x4 ] 0xffffffff
call [ ebp - 0x28 ]
add esp 0x38
test al al
jne r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov eax ecx
add ecx 0x1c
mov [ ebp - 0x18 ] ecx
cmp eax ebx
je r-xdata
cmp ebx eax
je r-xdata
sub esi 0x1c
cmp eax esi
je r-xdata
mov eax [ ebp - 0x34 ]
mov [ eax ] esi
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
cmp ecx ebx
je r-xdata
sub esp 0x1c
mov edi esp
xor eax eax
mov [ ebp - 0x24 ] esp
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
push esi
or eax 0xffffffff
call sub_1000bbc0
mov edx [ ebp - 0x14 ]
sub esp 0x1c
mov eax 0x7
mov [ ebp - 0x4 ] eax
mov edi esp
xor ecx ecx
mov [ ebp - 0x30 ] esp
mov [ edi + 0x14 ] eax
push ecx
mov [ edi + 0x10 ] 0x0
push edx
or eax 0xffffffff
mov [ edi ] cx
call sub_1000bbc0
mov [ ebp - 0x4 ] 0xffffffff
call [ ebp - 0x28 ]
add esp 0x38
test al al
jne r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x2c ]
mov eax [ ebp - 0x14 ]
sub esi 0x1c
cmp esi eax
je r-xdata
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x8c ] edi
mov edi [ eax + 0xc ]
mov [ ebp - 0x88 ] edi
mov edi [ ebx ]
mov [ eax ] edi
mov edi [ ebx + 0x4 ]
mov [ eax + 0x4 ] edi
mov edi [ ebx + 0x8 ]
mov [ eax + 0x8 ] edi
mov edi [ ebx + 0xc ]
mov [ eax + 0xc ] edi
mov [ ebx ] ecx
mov ecx [ ebp - 0x88 ]
mov [ ebx + 0x4 ] edx
mov edx [ ebp - 0x8c ]
mov [ ebx + 0x8 ] edx
mov [ ebx + 0xc ] ecx
mov edx [ ebx + 0x10 ]
mov ecx [ eax + 0x10 ]
mov [ eax + 0x10 ] edx
mov [ ebx + 0x10 ] ecx
mov edx [ ebx + 0x14 ]
mov ecx [ eax + 0x14 ]
mov [ eax + 0x14 ] edx
mov [ ebx + 0x14 ] ecx
add ebx 0x1c
jmp r-xdata
mov edi [ ebx + 0x8 ]
mov ecx [ ebx ]
mov edx [ ebx + 0x4 ]
mov [ ebp - 0x9c ] edi
mov edi [ ebx + 0xc ]
mov [ ebp - 0x98 ] edi
mov edi [ eax ]
mov [ ebx ] edi
mov edi [ eax + 0x4 ]
mov [ ebx + 0x4 ] edi
mov edi [ eax + 0x8 ]
mov [ ebx + 0x8 ] edi
mov edi [ eax + 0xc ]
mov [ ebx + 0xc ] edi
mov [ eax ] ecx
mov ecx [ ebp - 0x9c ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x98 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] edx
mov edx [ eax + 0x10 ]
mov ecx [ ebx + 0x10 ]
mov [ ebx + 0x10 ] edx
mov [ eax + 0x10 ] ecx
mov edx [ eax + 0x14 ]
mov ecx [ ebx + 0x14 ]
mov [ ebx + 0x14 ] edx
mov [ eax + 0x14 ] ecx
mov ecx [ ebp - 0x18 ]
sub ecx 0x1c
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x7c ] edi
mov edi [ eax + 0xc ]
mov [ ebp - 0x78 ] edi
mov edi [ esi ]
mov [ eax ] edi
mov edi [ esi + 0x4 ]
mov [ eax + 0x4 ] edi
mov edi [ esi + 0x8 ]
mov [ eax + 0x8 ] edi
mov edi [ esi + 0xc ]
mov [ eax + 0xc ] edi
mov [ esi ] ecx
mov ecx [ ebp - 0x7c ]
mov [ esi + 0x4 ] edx
mov edx [ ebp - 0x78 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] edx
mov edx [ esi + 0x10 ]
mov ecx [ eax + 0x10 ]
mov [ eax + 0x10 ] edx
mov [ esi + 0x10 ] ecx
mov edx [ esi + 0x14 ]
mov ecx [ eax + 0x14 ]
mov [ eax + 0x14 ] edx
mov [ esi + 0x14 ] ecx
add ecx 0x1c
mov [ ebp - 0x18 ] ecx
mov ecx ebx
mov edx esi
add esi 0x1c
add ebx 0x1c
cmp edx ecx
je r-xdata
cmp esi ecx
je r-xdata
mov ecx [ ebp - 0x1c ]
sub ecx 0x1c
sub eax 0x1c
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x2c ] ecx
jb r-xdata
mov edi [ esi + 0x8 ]
mov ecx [ esi ]
mov edx [ esi + 0x4 ]
mov [ ebp - 0x6c ] edi
mov edi [ esi + 0xc ]
mov [ ebp - 0x68 ] edi
mov edi [ eax ]
mov [ esi ] edi
mov edi [ eax + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ eax + 0x8 ]
mov [ esi + 0x8 ] edi
mov edi [ eax + 0xc ]
mov [ esi + 0xc ] edi
mov [ eax ] ecx
mov ecx [ ebp - 0x6c ]
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x68 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] edx
mov edx [ eax + 0x10 ]
mov ecx [ esi + 0x10 ]
mov [ esi + 0x10 ] edx
mov [ eax + 0x10 ] ecx
mov edx [ eax + 0x14 ]
mov ecx [ esi + 0x14 ]
mov [ esi + 0x14 ] edx
mov [ eax + 0x14 ] ecx
jmp r-xdata
cmp ebx [ ebp - 0x20 ]
jae r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov [ ebp - 0x60 ] ecx
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ esi + 0xc ]
mov [ ebp - 0x58 ] ecx
mov ecx [ ebp - 0x18 ]
mov edi [ ecx ]
mov [ esi ] edi
mov edi [ ecx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ecx + 0x8 ]
mov [ esi + 0x8 ] edi
mov edi [ ecx + 0xc ]
mov [ esi + 0xc ] edi
mov [ ecx ] edx
mov edx [ ebp - 0x60 ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp - 0x5c ]
mov [ ecx + 0x8 ] edx
mov edx [ ebp - 0x58 ]
mov [ ecx + 0xc ] edx
mov edi [ ecx + 0x10 ]
mov edx [ esi + 0x10 ]
mov [ esi + 0x10 ] edi
mov [ ecx + 0x10 ] edx
mov edi [ ecx + 0x14 ]
mov edx [ esi + 0x14 ]
mov [ esi + 0x14 ] edi
mov [ ecx + 0x14 ] edx
jmp r-xdata
mov edi [ edx ]
mov [ ebp - 0x44 ] edi
mov edi [ edx + 0x4 ]
mov [ ebp - 0x40 ] edi
mov edi [ edx + 0x8 ]
mov [ ebp - 0x3c ] edi
mov edi [ edx + 0xc ]
mov [ ebp - 0x38 ] edi
mov edi [ ecx ]
mov [ edx ] edi
mov edi [ ecx + 0x4 ]
mov [ edx + 0x4 ] edi
mov edi [ ecx + 0x8 ]
mov [ edx + 0x8 ] edi
mov edi [ ecx + 0xc ]
mov [ edx + 0xc ] edi
mov edi [ ebp - 0x44 ]
mov [ ecx ] edi
mov edi [ ebp - 0x40 ]
mov [ ecx + 0x4 ] edi
mov edi [ ebp - 0x3c ]
mov [ ecx + 0x8 ] edi
mov edi [ ebp - 0x38 ]
mov [ ecx + 0xc ] edi
mov edi [ edx + 0x10 ]
mov [ ebp - 0x14 ] edi
mov edi [ ecx + 0x10 ]
mov [ edx + 0x10 ] edi
mov edi [ ebp - 0x14 ]
mov [ ecx + 0x10 ] edi
mov edi [ edx + 0x14 ]
mov [ ebp - 0x14 ] edi
mov edi [ ecx + 0x14 ]
mov [ edx + 0x14 ] edi
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x14 ] edx
jmp r-xdata
mov edi [ esi + 0x4 ]
mov edx [ esi ]
mov [ ebp - 0x50 ] edi
mov edi [ esi + 0x8 ]
mov [ ebp - 0x4c ] edi
mov edi [ esi + 0xc ]
mov [ ebp - 0x48 ] edi
mov edi [ ecx ]
mov [ esi ] edi
mov edi [ ecx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ecx + 0x8 ]
mov [ esi + 0x8 ] edi
mov edi [ ecx + 0xc ]
mov [ esi + 0xc ] edi
mov [ ecx ] edx
mov edx [ ebp - 0x50 ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp - 0x4c ]
mov [ ecx + 0x8 ] edx
mov edx [ ebp - 0x48 ]
mov [ ecx + 0xc ] edx
mov edi [ ecx + 0x10 ]
mov edx [ esi + 0x10 ]
mov [ esi + 0x10 ] edi
mov [ ecx + 0x10 ] edx
mov edi [ ecx + 0x14 ]
mov edx [ esi + 0x14 ]
mov [ esi + 0x14 ] edi
mov [ ecx + 0x14 ] edx
sub_10029070
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx eax
push esi
mov esi ecx
mov ecx ebx
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x28
jle r-xdata
mov ecx [ ebp + 0xc ]
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
call sub_10029650
add esp 0xc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
cdq
and edx 0x7
add eax edx
mov edx [ ebp + 0xc ]
sar eax 0x3
lea ecx [ eax * 8 ]
sub ecx eax
push edi
add ecx ecx
add ecx ecx
lea edi [ eax * 8 ]
sub edi eax
add ecx ecx
mov [ ebp - 0x4 ] ecx
push edx
add ecx esi
add edi edi
add edi edi
lea eax [ edi + esi ]
push ecx
push esi
mov esi eax
mov [ ebp - 0x8 ] eax
call sub_10029650
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push eax
lea ecx [ edi + esi ]
mov edx esi
push ecx
sub edx edi
push edx
call sub_10029650
mov esi ebx
sub esi edi
mov edi [ ebp + 0xc ]
push edi
push ebx
sub ebx [ ebp - 0x4 ]
push ebx
call sub_10029650
mov eax [ ebp - 0x8 ]
push edi
push esi
mov esi [ ebp + 0x8 ]
push eax
call sub_10029650
add esp 0x30
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10029130
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c140
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
cmp eax ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov ebx [ eax + 0xc ]
mov edx [ eax ]
mov esi [ eax + 0x4 ]
mov edi [ eax + 0x8 ]
mov [ ebp - 0x14 ] ebx
mov ebx [ ecx ]
mov [ eax ] ebx
mov ebx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ebx
mov ebx [ ecx + 0x8 ]
mov [ eax + 0x8 ] ebx
mov ebx [ ecx + 0xc ]
mov [ eax + 0xc ] ebx
mov [ ecx ] edx
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x4 ] esi
mov [ ecx + 0x8 ] edi
mov [ ecx + 0xc ] edx
mov esi [ ecx + 0x10 ]
mov edx [ eax + 0x10 ]
mov [ eax + 0x10 ] esi
mov [ ecx + 0x10 ] edx
mov esi [ ecx + 0x14 ]
mov edx [ eax + 0x14 ]
mov [ eax + 0x14 ] esi
mov [ ecx + 0x14 ] edx
sub_100291d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003def8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi edx
sub eax edi
mov [ ebp - 0x34 ] ecx
mov ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ebx edx
shr ebx 0x1f
add ebx edx
mov eax ebx
cdq
sub eax edx
mov esi eax
sar esi 0x1
xor eax eax
mov [ ebp - 0x30 ] edi
cmp esi eax
jle r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
lea edx [ esi * 8 ]
sub edx esi
lea edi [ edi + edx * 4 + 0x14 ]
jmp r-xdata
xor ecx ecx
sub edi 0x1c
mov [ ebp - 0x2c ] cx
lea edx [ edi - 0x14 ]
lea ecx [ ebp - 0x2c ]
dec esi
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] eax
cmp ecx edx
je r-xdata
mov edx [ ebp - 0x34 ]
mov ecx [ ebp - 0x30 ]
push edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
push ebx
push esi
push ecx
call sub_100297d0
add esp 0x14
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
xor edx edx
cmp [ edi ] 0x8
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x2c ] dx
jae r-xdata
test esi esi
jg r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_1002e8fb
add esp 0x4
mov ecx [ edi - 0x14 ]
mov [ ebp - 0x2c ] ecx
mov [ edi - 0x14 ] eax
mov eax [ edi - 0x4 ]
inc eax
add eax eax
push eax
lea ecx [ edi - 0x14 ]
push ecx
lea edx [ ebp - 0x2c ]
push edx
call sub_1002e460
add esp 0xc
xor eax eax
jmp r-xdata
xor eax eax
mov edx [ edi - 0x4 ]
mov ecx [ edi ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] ecx
mov [ edi - 0x4 ] eax
mov [ edi ] eax
sub_10029300
push ebp
mov ebp esp
push esi
push edi
mov edi eax
mov esi edi
sub esi ebx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jle r-xdata
pop edi
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ebx
mov edx edi
call sub_10029b80
sub esi 0x1c
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
add esp 0x4
sub edi 0x1c
cmp ecx 0x1
jg r-xdata
sub_10029360
push ebp
mov ebp esp
push 0xffffffff
push sub_1003cb98
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov esi ecx
lea ebx [ esi + 0x1c ]
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x30 ] ebx
cmp ebx [ ebp + 0x8 ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
xor edx edx
mov [ ebp - 0x2c ] dx
xor eax eax
lea edx [ ebp - 0x2c ]
mov ecx 0x7
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] eax
cmp edx ebx
je r-xdata
sub esp 0x1c
mov [ ebp - 0x4 ] eax
mov edi esp
mov [ ebp - 0x40 ] esp
mov [ edi + 0x14 ] ecx
push eax
mov [ edi + 0x10 ] eax
xor ecx ecx
push esi
or eax 0xffffffff
mov [ edi ] cx
call sub_1000bbc0
sub esp 0x1c
mov [ ebp - 0x4 ] 0x1
mov edi esp
xor edx edx
mov [ ebp - 0x38 ] esp
push edx
lea eax [ ebp - 0x2c ]
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov [ ebp - 0x4 ] 0x0
call [ ebp - 0x3c ]
add esp 0x38
test al al
je r-xdata
xor edx edx
cmp [ ebx + 0x14 ] 0x8
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x2c ] dx
jae r-xdata
mov esi ebx
mov edi edi
mov ecx [ ebp - 0x38 ]
push ecx
lea ecx [ ebx + 0x1c ]
push esi
mov eax ebx
call sub_10029c50
lea edx [ ebp - 0x2c ]
add esp 0x8
cmp esi edx
je r-xdata
mov edx [ ebx ]
mov [ ebp - 0x2c ] edx
mov [ ebx ] eax
mov eax [ ebx + 0x10 ]
inc eax
add eax eax
push eax
lea ecx [ ebp - 0x2c ]
push ebx
push ecx
call sub_1002e460
add esp 0xc
mov ecx 0x7
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x2c ]
cmp ebx edx
je r-xdata
cmp ebx esi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov edx [ ebx + 0x10 ]
mov [ ebp - 0x1c ] edx
mov edx [ ebx + 0x14 ]
mov [ ebp - 0x18 ] edx
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x14 ] eax
mov ebx [ ebp - 0x30 ]
mov esi [ ebp - 0x34 ]
mov edi 0x8
cmp [ ebx + 0x14 ] edi
jb r-xdata
mov ebx esi
jmp r-xdata
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
add ebx 0x1c
mov [ ebp - 0x30 ] ebx
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
xor edi edi
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
mov [ esi ] ax
cmp [ ebp - 0x18 ] 0x8
jae r-xdata
mov eax [ esi ]
push eax
call sub_1002e8fb
add esp 0x4
xor esi esi
xor eax eax
mov [ ebx + 0x14 ] 0x7
mov [ ebx + 0x10 ] esi
mov [ ebx ] ax
cmp [ ebp - 0x18 ] edi
jae r-xdata
mov eax [ ebx ]
push eax
call sub_1002e8fb
add esp 0x4
sub esp 0x1c
mov edi esp
xor ecx ecx
mov [ ebp - 0x38 ] esp
push ecx
sub esi 0x1c
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push esi
or eax 0xffffffff
mov [ edi ] cx
call sub_1000bbc0
sub esp 0x1c
mov [ ebp - 0x4 ] 0x2
mov edi esp
xor edx edx
mov [ ebp - 0x40 ] esp
push edx
lea eax [ ebp - 0x2c ]
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov [ ebp - 0x4 ] 0x0
call [ ebp - 0x3c ]
add esp 0x38
test al al
je r-xdata
xor edi edi
xor edx edx
mov [ ebx + 0x14 ] 0x7
mov [ ebx + 0x10 ] edi
mov [ ebx ] dx
cmp [ esi + 0x14 ] 0x8
jae r-xdata
mov ecx [ ebx ]
push ecx
call sub_1002e8fb
add esp 0x4
mov ecx [ ebp - 0x2c ]
mov [ esi ] ecx
mov [ ebp - 0x2c ] edi
mov ecx [ ebp - 0x1c ]
lea edx [ ecx + ecx + 0x2 ]
push edx
lea eax [ ebp - 0x2c ]
push eax
push esi
call sub_1002e460
add esp 0xc
jmp r-xdata
mov ecx [ ebp - 0x2c ]
mov [ ebx ] ecx
mov [ ebp - 0x2c ] esi
mov ecx [ ebp - 0x1c ]
lea edx [ ecx + ecx + 0x2 ]
push edx
lea eax [ ebp - 0x2c ]
push eax
push ebx
call sub_1002e460
add esp 0xc
jmp r-xdata
mov edx [ esi ]
mov [ ebx ] edx
mov [ esi ] edi
mov eax [ esi + 0x10 ]
lea ecx [ eax + eax + 0x2 ]
push ecx
push esi
push ebx
call sub_1002e460
add esp 0xc
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
mov [ esi + 0x10 ] edx
mov [ esi + 0x14 ] eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
jmp r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x18 ]
mov [ ebx + 0x10 ] edx
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] esi
mov eax [ esi + 0x10 ]
mov [ ebx + 0x10 ] eax
mov ecx [ esi + 0x14 ]
mov [ ebx + 0x14 ] ecx
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
sub_10029650
push ebp
mov ebp esp
push 0xffffffff
push sub_1003cb58
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0x8 ]
sub esp 0x1c
mov edi esp
mov [ ebp - 0x10 ] esp
xor ebx ebx
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
push ebx
mov [ edi ] ax
push ecx
or eax 0xffffffff
call sub_1000bbc0
sub esp 0x1c
mov [ ebp - 0x4 ] ebx
mov edi esp
mov [ ebp - 0x14 ] esp
push ebx
xor edx edx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
push esi
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov [ ebp - 0x4 ] 0xffffffff
call [ ebp + 0x10 ]
add esp 0x38
cmp al bl
je r-xdata
sub esp 0x1c
mov edi esp
mov [ ebp - 0x14 ] esp
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
push ebx
mov [ edi ] ax
push esi
or eax 0xffffffff
call sub_1000bbc0
mov edx [ ebp + 0xc ]
sub esp 0x1c
mov [ ebp - 0x4 ] 0x1
mov edi esp
mov [ ebp - 0x10 ] esp
push ebx
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
push edx
or eax 0xffffffff
mov [ edi ] cx
call sub_1000bbc0
mov [ ebp - 0x4 ] 0xffffffff
call [ ebp + 0x10 ]
add esp 0x38
cmp al bl
je r-xdata
mov ecx [ ebp + 0x8 ]
push esi
call sub_10029130
add esp 0x4
mov edx [ ebp + 0x8 ]
sub esp 0x1c
mov edi esp
mov [ ebp - 0x14 ] esp
push ebx
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
push edx
or eax 0xffffffff
mov [ edi ] cx
call sub_1000bbc0
sub esp 0x1c
mov edi esp
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esp
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
push ebx
mov [ edi ] ax
push esi
or eax 0xffffffff
call sub_1000bbc0
mov [ ebp - 0x4 ] 0xffffffff
call [ ebp + 0x10 ]
add esp 0x38
cmp al bl
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx esi
call sub_10029130
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push esi
call sub_10029130
add esp 0x4
sub_100297d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003cb18
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
lea esi [ eax + eax + 0x2 ]
mov [ ebp - 0x10 ] eax
cmp esi ebx
jge r-xdata
jne r-xdata
lea ecx [ ecx ]
mov edx [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp - 0x10 ]
push ecx
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_100299c0
add esp 0x14
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x8 ]
lea edx [ ebx * 8 ]
sub edx ebx
lea ecx [ eax * 8 ]
sub ecx eax
lea edi [ esi + edx * 4 - 0x1c ]
lea esi [ esi + ecx * 4 ]
cmp esi edi
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ esi * 8 ]
sub edx esi
lea ebx [ eax + edx * 4 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
lea ecx [ eax * 8 ]
sub ecx eax
lea edi [ edx + ecx * 4 ]
cmp edi ebx
je r-xdata
dec esi
dec ebx
mov [ ebp + 0xc ] ebx
mov eax ebx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ ebp + 0xc ] esi
lea esi [ esi + esi + 0x2 ]
cmp esi [ ebp + 0x10 ]
jl r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
xor eax eax
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
mov [ esi ] cx
cmp [ edi + 0x14 ] 0x8
jae r-xdata
mov edx [ esi ]
push edx
call sub_1002e8fb
add esp 0x4
mov edx [ ebp + 0x8 ]
sub esp 0x1c
mov edi esp
xor eax eax
lea ecx [ esi * 8 ]
sub ecx esi
mov [ ebp - 0x14 ] esp
push eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
lea ebx [ edx + ecx * 4 ]
lea eax [ ebx - 0x1c ]
push eax
or eax 0xffffffff
call sub_1000bbc0
sub esp 0x1c
xor eax eax
mov edi esp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] esp
push eax
mov [ edi + 0x10 ] eax
xor ecx ecx
mov [ edi + 0x14 ] 0x7
push ebx
or eax 0xffffffff
mov [ edi ] cx
call sub_1000bbc0
mov [ ebp - 0x4 ] 0xffffffff
call [ ebp + 0x18 ]
add esp 0x38
test al al
je r-xdata
mov ebx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
cmp esi ebx
xor eax eax
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] eax
mov [ edi ] cx
cmp [ ebx + 0x14 ] 0x8
jae r-xdata
mov eax [ edi ]
push eax
call sub_1002e8fb
add esp 0x4
mov ecx [ edi ]
mov [ esi ] ecx
mov [ edi ] eax
mov edx [ edi + 0x10 ]
lea eax [ edx + edx + 0x2 ]
push eax
push edi
push esi
call sub_1002e460
add esp 0xc
xor eax eax
jmp r-xdata
mov ecx [ ebx ]
mov [ edi ] ecx
mov [ ebx ] eax
mov edx [ ebx + 0x10 ]
lea eax [ edx + edx + 0x2 ]
push eax
push ebx
push edi
call sub_1002e460
add esp 0xc
xor eax eax
jmp r-xdata
mov edx [ edi + 0x10 ]
mov [ esi + 0x10 ] edx
mov ecx [ edi + 0x14 ]
mov [ esi + 0x14 ] ecx
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] eax
mov edx [ ebx + 0x10 ]
mov [ edi + 0x10 ] edx
mov ecx [ ebx + 0x14 ]
mov [ edi + 0x14 ] ecx
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x14 ] eax
sub_100299c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003cae8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0xc ]
lea eax [ ecx - 0x1 ]
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
cmp [ ebp + 0x10 ] ecx
jge r-xdata
mov edi [ ebp + 0x14 ]
lea eax [ ecx * 8 ]
sub eax ecx
mov ecx [ ebp + 0x8 ]
lea esi [ ecx + eax * 4 ]
cmp esi edi
je r-xdata
mov edi edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
lea edx [ eax * 8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
lea edi [ eax + edx * 4 ]
cmp edi esi
je r-xdata
xor ebx ebx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] ax
cmp [ edi + 0x14 ] 0x8
jae r-xdata
mov edx [ esi ]
push edx
call sub_1002e8fb
add esp 0x4
lea eax [ ebx - 0x1 ]
cdq
mov ecx ebx
sub eax edx
sar eax 0x1
mov [ ebp + 0xc ] ecx
mov ebx eax
cmp [ ebp + 0x10 ] ecx
jl r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov [ edi ] ebx
mov ecx [ edi + 0x10 ]
lea edx [ ecx + ecx + 0x2 ]
push edx
push edi
push esi
call sub_1002e460
add esp 0xc
jmp r-xdata
mov ecx [ ebp + 0x14 ]
sub esp 0x1c
mov edi esp
mov [ ebp - 0x10 ] esp
xor esi esi
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] esi
push esi
mov [ edi ] ax
push ecx
or eax 0xffffffff
call sub_1000bbc0
mov ecx [ ebp + 0x8 ]
sub esp 0x1c
mov edi esp
mov [ ebp - 0x4 ] esi
xor edx edx
lea eax [ ebx * 8 ]
sub eax ebx
mov [ ebp - 0x14 ] esp
mov [ edi + 0x10 ] esi
lea esi [ ecx + eax * 4 ]
push edx
mov [ edi + 0x14 ] 0x7
push esi
or eax 0xffffffff
mov [ edi ] dx
call sub_1000bbc0
mov [ ebp - 0x4 ] 0xffffffff
call [ ebp + 0x18 ]
add esp 0x38
test al al
je r-xdata
xor eax eax
xor edx edx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] eax
mov [ edi ] dx
cmp [ esi + 0x14 ] 0x8
jae r-xdata
mov ecx [ edi ]
push ecx
call sub_1002e8fb
add esp 0x4
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov edx [ edi + 0x14 ]
mov [ esi + 0x14 ] edx
mov [ edi + 0x10 ] ebx
mov [ edi + 0x14 ] ebx
mov edx [ esi ]
mov [ edi ] edx
mov [ esi ] eax
mov eax [ esi + 0x10 ]
lea ecx [ eax + eax + 0x2 ]
push ecx
push esi
push edi
call sub_1002e460
add esp 0xc
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x10 ]
mov [ edi + 0x10 ] ecx
mov edx [ esi + 0x14 ]
mov [ edi + 0x14 ] edx
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
sub_10029b80
push ebp
mov ebp esp
push 0xffffffff
push sub_1003def8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx edx
xor edx edx
lea edi [ ebx - 0x1c ]
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] dx
call sub_10013f90
mov edi [ ebp - 0x30 ]
lea esi [ ebx - 0x1c ]
mov [ ebp - 0x4 ] 0x0
call sub_10013f90
mov eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx edi
sub ebx ecx
sub ebx 0x1c
mov eax 0x92492493
imul ebx
add edx ebx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
push eax
push 0x0
push ecx
call sub_100297d0
add esp 0x14
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
sub_10029c50
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ ebp + 0x8 ] eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push ebx
push edi
lea edi [ eax + 0x14 ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
sub edi 0x1c
sub esi 0x1c
lea ebx [ edi - 0x14 ]
cmp esi ebx
je r-xdata
pop edi
pop ebx
xor eax eax
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
mov [ esi ] cx
cmp [ edi ] 0x8
jae r-xdata
mov eax [ esi ]
push eax
call sub_1002e8fb
add esp 0x4
mov edx [ edi - 0x14 ]
mov [ esi ] edx
mov [ edi - 0x14 ] eax
mov edx [ edi - 0x4 ]
lea eax [ edx + edx + 0x2 ]
push eax
lea ecx [ edi - 0x14 ]
push ecx
push esi
call sub_1002e460
add esp 0xc
xor eax eax
jmp r-xdata
mov ecx [ edi - 0x4 ]
mov [ esi + 0x10 ] ecx
mov edx [ edi ]
mov [ esi + 0x14 ] edx
mov [ edi - 0x4 ] eax
mov [ edi ] eax
sub_10029d00
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_10029d40
push ebp
mov ebp esp
push 0xffffffff
push sub_1003cab7
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] ecx
xor ebx ebx
push 0x2c
mov [ ebp - 0x4 ] ebx
call sub_1002e957
mov edi eax
add esp 0x4
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x4 ] 0x1
cmp edi ebx
je r-xdata
xor edi edi
push 0x2c
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x2
cmp esi ebx
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
push eax
call sub_1002e8fb
add esp 0x4
mov [ ebp - 0x10 ] ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x20 ]
call eax
mov [ esi ] r--data
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] ebx
xor ecx ecx
mov [ esi + 0x4 ] cx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] eax
mov [ ebp - 0x10 ] esi
jmp r-xdata
xor esi esi
push 0x1c
call sub_1002e957
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x4
cmp eax ebx
je r-xdata
push 0x28
mov [ ebp - 0x4 ] 0x1
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0x3
cmp esi ebx
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
xor eax eax
sub esp 0x10
mov edx esp
mov [ ebp - 0x20 ] esp
push edx
lea ecx [ ebp + 0xc ]
call sub_100145a0
mov eax [ ebp - 0x14 ]
push eax
call sub_10025830
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ edi ] r--data
mov [ edi + 0x1c ] 0x7
mov [ edi + 0x18 ] ebx
xor eax eax
mov [ edi + 0x8 ] ax
mov [ edi + 0x4 ] esi
mov [ edi + 0x24 ] ecx
mov [ edi + 0x28 ] edx
jmp r-xdata
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
mov [ ecx ] dx
mov [ ebp - 0x4 ] 0x6
mov [ esi + 0x8 ] eax
push ebx
mov eax r--data
mov [ esi + 0x4 ] ebx
call sub_1000bc70
jmp r-xdata
sub_10029eb0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d3bf
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
push 0x2c
call sub_1002e957
mov edi eax
add esp 0x4
mov [ ebp - 0x18 ] edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp edi ebx
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x2c
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x20 ]
call eax
mov [ esi ] r--data
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] ebx
xor ecx ecx
mov [ esi + 0x4 ] cx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] eax
mov [ ebp - 0x14 ] esi
jmp r-xdata
mov [ ebp - 0x10 ] ebx
mov [ eax ] r--data
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x4
mov [ ebp - 0x4 ] bl
call sub_1002e957
add esp 0x4
cmp eax ebx
je r-xdata
xor esi esi
push 0x54
call sub_1002e957
add esp 0x4
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x3
cmp eax ebx
je r-xdata
push 0x28
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0x2
cmp esi ebx
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
call sub_10023be0
xor ebx ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x14 ]
mov [ edi ] r--data
mov [ edi + 0x1c ] 0x7
mov [ edi + 0x18 ] ebx
xor eax eax
mov [ edi + 0x8 ] ax
mov [ edi + 0x4 ] esi
mov [ edi + 0x24 ] ecx
mov [ edi + 0x28 ] edx
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
mov [ ecx ] dx
mov [ ebp - 0x4 ] 0x5
mov [ esi + 0x8 ] eax
push ebx
mov eax r--data
mov [ esi + 0x4 ] ebx
call sub_1000bc70
jmp r-xdata
sub_1002a020
push ebp
mov ebp esp
push 0xffffffff
push sub_1003ca4d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x14 ] ecx
push 0x8
call sub_1002e957
add esp 0x4
mov [ ebp - 0x18 ] eax
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x20
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
mov [ ebp + 0xc ] ebx
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
mov [ ecx ] ax
mov edi [ ebp + 0xc ]
mov edx edi
lea eax [ edx + 0x2 ]
mov [ ebp - 0x4 ] 0x2
mov [ ebp + 0xc ] eax
nop
mov [ ebp - 0x10 ] ebx
mov [ eax ] r--data
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ax [ edx ]
add edx 0x2
cmp ax bx
jne r-xdata
sub edx [ ebp + 0xc ]
mov eax edi
sar edx 0x1
push edx
call sub_1000bc70
mov [ ebp + 0xc ] esi
jmp r-xdata
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x20 ]
call eax
mov [ esi ] r--data
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] ebx
xor ecx ecx
mov [ esi + 0x4 ] cx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] eax
mov [ ebp - 0x14 ] esi
jmp r-xdata
push 0x2c
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0x3
cmp esi ebx
je r-xdata
push 0x4
mov [ ebp - 0x4 ] bl
call sub_1002e957
add esp 0x4
cmp eax ebx
je r-xdata
xor edi edi
push 0x38
call sub_1002e957
add esp 0x4
cmp eax ebx
je r-xdata
push 0x28
mov [ ebp - 0x4 ] bl
call sub_1002e957
mov edi eax
add esp 0x4
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0x4
cmp edi ebx
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x10 ]
push ecx
mov ecx [ ebp - 0x14 ]
push edx
mov edx [ ebp + 0x8 ]
push ecx
push eax
mov ecx edi
call sub_10022900
mov [ esi + 0x4 ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x18 ] 0x7
mov [ eax + 0x14 ] ebx
xor edx edx
mov [ eax + 0x4 ] dx
mov [ eax + 0x24 ] ebx
mov [ eax + 0x28 ] ebx
mov [ eax + 0x2c ] ebx
mov [ eax + 0x34 ] r--data
mov [ eax + 0x20 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0x7
mov esi [ ebp - 0x18 ]
push 0xa8
mov [ esi ] r--data
call sub_1002e957
add esp 0x4
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x8
cmp eax ebx
je r-xdata
lea ecx [ edi + 0xc ]
mov [ edi ] r--data
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
mov [ ecx ] dx
mov [ ebp - 0x4 ] 0x6
mov [ edi + 0x8 ] eax
push ebx
mov eax r--data
mov [ edi + 0x4 ] ebx
call sub_1000bc70
jmp r-xdata
sub_1002a240
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1002a280
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1002a2b0
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
add ecx 0x78
push esi
mov [ ebp - 0x4 ] 0x0
call sub_10018830
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1002a2e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c9c2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4e8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4f0 ] 0x0
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ ebp - 0x4f4 ] esi
mov [ esi ] ax
push 0x26d
push eax
lea ecx [ ebp - 0x4ec ]
mov [ ebp - 0x4 ] eax
push ecx
mov [ ebp - 0x4f0 ] 0x1
call sub_10032e00
add esp 0xc
lea edx [ ebp - 0x4ec ]
push edx
push 0x0
push 0x0
push 0x1c
push 0x0
call [ SHGetFolderPathW@IAT ]
test eax eax
js r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x4ec ]
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x4ec ]
mov ecx esi
call sub_1000bc70
sub_1002a3b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d353
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax 0x5
call sub_1002c070
lea esi [ ebp - 0x2c ]
mov edi eax
call sub_1002a2e0
mov eax edi
mov [ ebp - 0x4 ] 0x0
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax edi
lea ecx [ ebp - 0x2c ]
call sub_10016ca0
mov eax [ rw-data ]
mov ecx eax
lea esi [ ecx + 0x2 ]
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
lea ecx [ ebp - 0x2c ]
call sub_10016ca0
push 0x88
call sub_1002e957
add esp 0x4
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] 0x1
mov edi 0x8
test eax eax
je r-xdata
xor esi esi
mov ecx [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] edi
jae r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x2c ]
push eax
call sub_1002e8fb
add esp 0x4
push ebx
push ecx
push eax
call sub_1002a8e0
mov esi eax
jmp r-xdata
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] edi
jb r-xdata
sub_1002a4a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c938
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_1002a560
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
push esi
call sub_1002ae00
cmp [ ebp - 0x18 ] 0x8
mov esi eax
jb r-xdata
lea eax [ ebp - 0x2c ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
sub_1002a560
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c979
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] ebx
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] cx
mov ecx eax
lea edi [ ecx + 0x2 ]
lea esp [ esp ]
mov dx [ ecx ]
add ecx 0x2
cmp dx bx
jne r-xdata
sub ecx edi
sar ecx 0x1
push ecx
mov ecx esi
call sub_1000bc70
mov [ ebp - 0x4 ] ebx
mov eax 0x5
mov [ ebp - 0x10 ] 0x1
call sub_1002c070
mov ecx [ esi + 0x10 ]
cmp ecx ebx
jbe r-xdata
mov edx [ ebp + 0xc ]
mov eax edx
lea edi [ eax + 0x2 ]
nop
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
mov eax edx
mov ecx esi
call sub_10016ca0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov ecx eax
lea edi [ ecx + 0x2 ]
jmp r-xdata
cmp [ edx + ecx * 2 - 0x2 ] 0x5c
je r-xdata
mov dx [ ecx ]
add ecx 0x2
cmp dx bx
jne r-xdata
sub ecx edi
sar ecx 0x1
push ecx
mov ecx esi
call sub_10016ca0
sub_1002a650
push ebp
mov ebp esp
sub esp 0x4e0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
call sub_1002a800
push 0x4da
lea eax [ ebp - 0x4e0 ]
push 0x0
push eax
call sub_10032e00
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
add esp 0xc
lea ecx [ ebp - 0x4e0 ]
push ecx
push 0x0
push r--data
mov ecx ebx
call eax
push eax
call [ GetTempFileNameW@IAT ]
pop ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x4e0 ]
lea edx [ eax + 0x2 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
push esi
neg ecx
or ecx eax
push ecx
call sub_1002eb41
lea ecx [ ebp - 0x4e0 ]
mov esi eax
mov edx ecx
add esp 0x4
sub esi edx
movzx edx [ ecx ]
mov [ esi + ecx ] dx
add ecx 0x2
test dx dx
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_1002e0f2
mov esp ebp
pop ebp
retn
sub_1002a720
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
mov esi ecx
mov ecx [ ebp + 0x10 ]
mov edi [ esi ]
mov edx [ edi + 0x10 ]
push eax
push ecx
mov ecx esi
call edx
mov edx [ edi + 0x3c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
call edx
pop edi
pop esi
pop ebp
retn 0x10
sub_1002a750
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d318
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea esi [ ebp - 0x2c ]
call sub_1002a2e0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1002eb41
add esp 0x4
cmp [ ebp - 0x18 ] 0x8
mov esi eax
mov eax [ ebp - 0x2c ]
jae r-xdata
mov edx esi
sub edx eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x2c ]
push eax
call sub_1002e8fb
add esp 0x4
sub_1002a800
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c938
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
xor eax eax
push esi
lea ecx [ ebx + 0x4 ]
mov [ ebp - 0x2c ] ax
push ecx
or eax 0xffffffff
lea edi [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] esi
call sub_1000bbc0
lea eax [ esi + 0x5 ]
mov [ ebp - 0x4 ] esi
call sub_1002c070
mov edx [ ebp - 0x1c ]
lea edi [ esi + 0x8 ]
cmp edx esi
jbe r-xdata
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] edi
jae r-xdata
mov ecx [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] edi
jae r-xdata
mov edx [ ebx ]
push eax
mov eax [ edx + 0x38 ]
mov ecx ebx
call eax
cmp [ ebp - 0x18 ] edi
jb r-xdata
lea eax [ ebp - 0x2c ]
mov dx [ ecx + edx * 2 - 0x2 ]
cmp dx [ eax ]
je r-xdata
lea ecx [ ebp - 0x2c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
mov ecx eax
lea esi [ ecx + 0x2 ]
jmp r-xdata
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
lea ecx [ ebp - 0x2c ]
call sub_10016ca0
sub_1002a8e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c11f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
xor edi edi
mov [ ebp - 0x4 ] edi
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
mov eax 0x7
xor edx edx
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x10 ] edi
mov [ ecx ] dx
mov [ esi + 0x34 ] eax
mov [ esi + 0x30 ] edi
mov [ esi + 0x20 ] dx
mov [ esi + 0x50 ] eax
mov [ esi + 0x4c ] edi
mov [ esi + 0x3c ] dx
mov [ esi + 0x6c ] eax
xor eax eax
mov [ esi + 0x68 ] edi
mov [ esi + 0x58 ] ax
mov [ esi + 0x78 ] edi
mov [ esi + 0x7c ] edi
mov [ esi + 0x80 ] edi
mov edx [ ebp + 0xc ]
lea eax [ edx + 0x2 ]
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x14 ] eax
lea ebx [ ebx ]
mov ax [ edx ]
add edx 0x2
cmp ax di
jne r-xdata
sub edx [ ebp - 0x14 ]
mov eax [ ebp + 0xc ]
sar edx 0x1
push edx
call sub_1000bc70
mov eax [ ebp - 0x10 ]
lea edx [ eax + 0x2 ]
nop
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax [ ebp - 0x10 ]
lea ecx [ esi + 0x20 ]
call sub_1000bc70
mov ecx [ ebp + 0x10 ]
mov [ esi + 0x74 ] ecx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_1002a9d0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1002aa00
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1002aa00
push ebx
push esi
mov esi ecx
push edi
mov [ esi ] r--data
mov eax [ esi + 0x78 ]
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0x78 ] edi
mov [ esi + 0x7c ] edi
mov [ esi + 0x80 ] edi
cmp [ esi + 0x6c ] 0x8
jb r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov ebx 0x7
xor ecx ecx
mov [ esi + 0x6c ] ebx
mov [ esi + 0x68 ] edi
mov [ esi + 0x58 ] cx
cmp [ esi + 0x50 ] 0x8
jb r-xdata
mov eax [ esi + 0x58 ]
push eax
call sub_1002e8fb
add esp 0x4
xor eax eax
mov [ esi + 0x50 ] ebx
mov [ esi + 0x4c ] edi
mov [ esi + 0x3c ] ax
cmp [ esi + 0x34 ] 0x8
jb r-xdata
mov edx [ esi + 0x3c ]
push edx
call sub_1002e8fb
add esp 0x4
xor edx edx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] edi
mov [ esi + 0x20 ] dx
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov ecx [ esi + 0x20 ]
push ecx
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x18 ] ebx
mov [ esi + 0x14 ] edi
xor ecx ecx
mov [ esi + 0x4 ] cx
pop edi
mov [ esi ] r--data
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
push eax
call sub_1002e8fb
add esp 0x4
sub_1002aad0
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_1002a560
cmp [ ebp - 0xc ] 0x8
mov eax [ ebp - 0x20 ]
jae r-xdata
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
push eax
call [ CreateFileW@IAT ]
cmp eax 0xffffffff
je r-xdata
lea eax [ ebp - 0x20 ]
cmp [ ebp - 0xc ] 0x8
jb r-xdata
push eax
call [ CloseHandle@IAT ]
cmp [ ebp - 0xc ] 0x8
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x20 ]
push edx
call sub_1002e8fb
add esp 0x4
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x20 ]
push ecx
call sub_1002e8fb
add esp 0x4
sub_1002ab70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x38 ]
push edi
call edx
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
lea ebx [ ebp - 0x4 ]
call sub_1002ae00
test eax eax
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
push ecx
push edx
push eax
push ebx
push esi
mov eax edi
call sub_1002af00
push ebx
mov esi eax
call sub_1002ee65
add esp 0x4
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_1002abe0
push ebp
mov ebp esp
sub esp 0x4e0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
cmp [ esi + 0x68 ] 0x0
jne r-xdata
cmp [ esi + 0x6c ] 0x8
lea eax [ esi + 0x58 ]
pop esi
jb r-xdata
push 0x4da
lea eax [ ebp - 0x4e0 ]
push 0x0
push eax
call sub_10032e00
mov edx [ esi + 0x74 ]
add esp 0xc
push 0x26d
lea ecx [ ebp - 0x4e0 ]
push ecx
push edx
call [ GetModuleFileNameW@IAT ]
lea eax [ ebp - 0x4e0 ]
lea edx [ eax + 0x2 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov eax [ eax ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ esi + 0x58 ]
lea eax [ ebp - 0x4e0 ]
call sub_1000bc70
sub_1002ac70
push ebp
mov ebp esp
sub esp 0x4e0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x4e0 ]
sub edx eax
mov edi edi
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
jne r-xdata
lea eax [ ebp - 0x4e0 ]
push 0x5c
push eax
call sub_1002ef1e
add esp 0x8
test eax eax
je r-xdata
lea eax [ ebp - 0x4e0 ]
lea edx [ eax + 0x2 ]
xor ecx ecx
mov [ eax ] cx
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push edi
lea edi [ ebp + eax * 2 - 0x4e0 ]
lea eax [ ebp - 0x4e0 ]
mov edx eax
cmp edx edi
jae r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
push ebx
mov ebx [ CreateDirectoryW@IAT ]
push esi
lea ecx [ ecx ]
lea eax [ ebp - 0x4e0 ]
push eax
call ebx
pop esi
pop ebx
lea ecx [ ebp - 0x4e0 ]
xor eax eax
push ecx
mov [ esi ] ax
call ebx
lea eax [ esi + 0x2 ]
mov edx 0x5c
mov [ esi ] dx
cmp eax edi
jb r-xdata
push r--data
push eax
call sub_1002eebe
add esp 0x8
mov esi eax
push 0x0
test esi esi
je r-xdata
pop esi
pop ebx
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
sub_1002ad60
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d5b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov eax [ ebx + 0x4c ]
test eax eax
jne r-xdata
cmp [ ebx + 0x50 ] 0x8
lea eax [ ebx + 0x3c ]
jb r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x8 ]
call edx
push eax
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1002a560
lea esi [ ebx + 0x3c ]
mov edi eax
mov [ ebp - 0x4 ] 0x0
call sub_10013f90
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov eax [ eax ]
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
sub_1002ae00
push ebp
mov ebp esp
push ecx
push esi
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push edi
push 0x0
push esi
call [ GetFileSize@IAT ]
mov edi eax
push edi
call sub_1002eb41
add esp 0x4
mov [ ebx ] eax
test eax eax
je r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call [ CloseHandle@IAT ]
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push edi
push eax
push esi
mov [ ebp - 0x4 ] 0x0
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebx ]
push eax
call sub_1002ee65
add esp 0x4
cmp edi [ ebp - 0x4 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
push esi
mov [ edx ] edi
call [ CloseHandle@IAT ]
pop edi
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1002aea0
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_1002a560
cmp [ ebp - 0xc ] 0x8
mov eax [ ebp - 0x20 ]
jae r-xdata
push esi
push eax
call [ DeleteFileW@IAT ]
lea esi [ eax - 0x1 ]
neg esi
sbb esi esi
cmp [ ebp - 0xc ] 0x8
jb r-xdata
lea eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
lea eax [ esi + 0x1 ]
xor ecx ebp
pop esi
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x20 ]
push ecx
call sub_1002e8fb
add esp 0x4
sub_1002af00
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi eax
push edi
lea eax [ ebp - 0xc ]
push eax
xor edi edi
lea ebx [ ebp - 0x4 ]
mov eax esi
mov [ ebp - 0x4 ] edi
call sub_1002ae00
mov ebx [ CreateFileW@IAT ]
test eax eax
je r-xdata
push edi
push edi
push 0x4
push edi
push edi
push 0x40000000
push esi
call ebx
mov esi eax
mov [ ebp + 0x14 ] esi
cmp esi 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
push ecx
call sub_1002ee65
add esp 0x4
cmp [ ebp + 0x14 ] edi
je r-xdata
mov ebx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push edi
lea edx [ ebp - 0x8 ]
push edx
push ebx
push eax
push esi
mov [ ebp - 0x8 ] edi
call [ WriteFile@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x14
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x14
push edi
push edi
push 0x5
push edi
push edi
push 0x40000000
push esi
call ebx
cmp eax 0xffffffff
je r-xdata
push esi
call [ CloseHandle@IAT ]
cmp [ ebp - 0x8 ] ebx
jne r-xdata
call [ GetLastError@IAT ]
push eax
call [ CloseHandle@IAT ]
jmp r-xdata
cmp [ ebp + 0x18 ] edi
je r-xdata
mov edi [ ebp + 0x8 ]
add edi 0x78
lea eax [ ebp + 0x14 ]
call sub_1002b150
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x14
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_1002aff0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d5b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov ebx ecx
call sub_1002a800
push esi
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1002a560
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x2c ]
mov esi 0x8
cmp [ ebp - 0x18 ] esi
jae r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
push ecx
push edi
push ebx
call sub_1002af00
mov edi eax
cmp [ ebp - 0x18 ] esi
jb r-xdata
lea eax [ ebp - 0x2c ]
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x14
mov edx [ ebp - 0x2c ]
push edx
call sub_1002e8fb
add esp 0x4
sub_1002b0a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d318
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_1002a560
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1002eb41
add esp 0x4
cmp [ ebp - 0x18 ] 0x8
mov esi eax
mov eax [ ebp - 0x2c ]
jae r-xdata
mov edx esi
sub edx eax
lea esp [ esp ]
lea eax [ ebp - 0x2c ]
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x2c ]
push eax
call sub_1002e8fb
add esp 0x4
sub_1002b150
push esi
mov esi eax
mov eax [ edi + 0x4 ]
cmp esi eax
jae r-xdata
cmp eax [ edi + 0x8 ]
jne r-xdata
mov ecx [ edi ]
cmp ecx esi
ja r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax edi
call sub_10001660
sub esi ecx
sar esi 0x2
cmp eax [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x4
pop esi
retn
mov ecx [ esi ]
mov [ eax ] ecx
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax edi
call sub_10001660
mov ecx [ edi ]
mov edx [ ecx + esi * 4 ]
mov [ eax ] edx
add [ edi + 0x4 ] 0x4
pop esi
retn
sub_1002b1b0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
cmp ecx edx
je r-xdata
pop ebp
retn
push esi
mov edi edi
add ecx 0x4
add eax 0x4
mov [ ebp + 0x8 ] ecx
cmp ecx edx
jne r-xdata
mov esi [ ecx ]
mov [ eax ] esi
test eax eax
je r-xdata
pop esi
sub_1002b200
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ecx + 0x4 ]
push ebx
mov ebx [ eax + 0xc ]
mov [ ebp - 0x8 ] ecx
test ebx ebx
jne r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
push edi
mov ecx ebx
call eax
mov edi eax
mov [ ebp - 0x4 ] edi
test edi edi
jne r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x14 ]
push esi
push 0x1
call eax
mov esi eax
test esi esi
jne r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov edx [ ebx ]
mov eax [ edx + 0x8 ]
push edi
mov ecx ebx
call eax
push edi
call sub_1002e8fb
add esp 0x4
pop esi
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1002e957
mov edi eax
mov eax esi
add esp 0x4
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea eax [ eax + eax + 0x2 ]
push eax
push 0x0
push edi
call sub_10032e00
mov eax esi
add esp 0xc
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx esi
sub eax edx
lea edx [ ecx + 0x1 ]
mov [ ebp + 0x8 ] edx
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx [ ebp + 0x8 ]
inc eax
push eax
push edi
inc ecx
push ecx
push esi
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push esi
call sub_1002e8fb
mov esi [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx + 0x4 ]
add esp 0x4
push 0x0
push 0x0
push esi
push edi
push 0x0
call edx
test eax eax
mov eax [ ebx ]
jns r-xdata
mov eax [ ebx ]
mov esi [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
push esi
mov ecx ebx
call edx
push esi
call sub_1002e8fb
add esp 0x4
pop esi
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax [ eax + 0xc ]
push ecx
push edx
push esi
mov ecx ebx
call eax
mov edx [ ebx ]
mov [ ebp + 0x8 ] eax
mov eax [ edx + 0x8 ]
push esi
mov ecx ebx
call eax
push edi
call sub_1002e8fb
push esi
call sub_1002e8fb
mov eax [ ebp + 0x8 ]
add esp 0x8
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edx [ eax + 0x8 ]
push esi
mov ecx ebx
call edx
push edi
call sub_1002e8fb
push esi
call sub_1002e8fb
add esp 0x8
pop esi
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_1002b3a0
push 0x30
call sub_1002e957
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
mov [ eax + 0x18 ] 0xf
mov [ eax + 0x14 ] ecx
mov [ eax + 0x4 ] cl
mov [ eax + 0x20 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
retn
sub_1002b3d0
push esi
push 0x8
mov esi ecx
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor eax eax
pop esi
retn
mov [ eax + 0x4 ] esi
mov [ eax ] r--data
pop esi
retn
sub_1002b3f0
push ebp
mov ebp esp
push esi
push 0x10
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor esi esi
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x0
mov [ eax + 0xc ] ecx
mov esi eax
jmp r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
xor eax eax
pop esi
pop ebp
retn
mov eax 0x47
call sub_1002bff0
mov edx [ esi + 0x8 ]
push eax
push edx
call [ GetProcAddress@IAT ]
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
mov eax 0x3b
call sub_1002bff0
push eax
call [ LoadLibraryA@IAT ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_1002b470
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a678
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0x8 ] 0x0
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0xc ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1002b500
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1002b530
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1003c900
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov [ esp + 0x14 ] ecx
xor ebx ebx
mov ecx eax
mov [ esp + 0x2c ] 0xf
mov [ esp + 0x28 ] ebx
mov [ esp + 0x18 ] bl
lea esi [ ecx + 0x1 ]
mov dl [ ecx ]
inc ecx
cmp dl bl
jne r-xdata
sub ecx esi
mov esi ecx
lea ecx [ esp + 0x18 ]
call sub_10002640
mov [ esp + 0x60 ] ebx
mov eax edi
mov [ esp + 0x48 ] 0xf
mov [ esp + 0x44 ] ebx
mov [ esp + 0x34 ] bl
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax esi
mov esi eax
mov eax edi
lea ecx [ esp + 0x34 ]
call sub_10002640
mov ebx [ esp + 0x14 ]
add ebx 0x20
lea ecx [ esp + 0x18 ]
mov [ esp + 0x60 ] 0x1
call sub_1001ac20
mov esi 0x10
cmp [ esp + 0x48 ] esi
jb r-xdata
xor eax eax
mov [ esp + 0x48 ] 0xf
mov [ esp + 0x44 ] eax
mov [ esp + 0x34 ] al
cmp [ esp + 0x2c ] esi
jb r-xdata
mov eax [ esp + 0x34 ]
push eax
call sub_1002e8fb
add esp 0x4
mov eax 0x1
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x40 ]
xor ecx esp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x8
mov ecx [ esp + 0x18 ]
push ecx
call sub_1002e8fb
add esp 0x4
sub_1002b650
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
lea eax [ edi + edi + 0x1 ]
push eax
call sub_1002eb41
add esp 0x4
xor edx edx
test edi edi
je r-xdata
mov [ eax + edi * 2 ] dl
pop edi
pop ebp
retn 0x8
push esi
mov esi [ ebp + 0x8 ]
mov edi edi
cmp cl 0xf
jg r-xdata
add cl 0x30
jmp r-xdata
xor cl cl
add cl 0x57
jmp r-xdata
mov [ eax + edx * 2 ] cl
mov cl [ edx + esi ]
and cl 0xf
cmp cl 0x9
jg r-xdata
cmp cl 0xf
jg r-xdata
add cl 0x30
jmp r-xdata
xor cl cl
add cl 0x57
jmp r-xdata
mov [ eax + edx * 2 + 0x1 ] cl
inc edx
cmp edx edi
jb r-xdata
mov cl [ edx + esi ]
sar cl 0x4
and cl 0xf
cmp cl 0x9
jg r-xdata
pop esi
mov [ eax + edi * 2 ] 0x0
pop edi
pop ebp
retn 0x8
sub_1002b6d0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x20 ]
cmp ecx eax
je r-xdata
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
push ebx
push edi
push edx
push eax
call sub_1001ba10
mov edi [ esi + 0x24 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_1001bb10
add esp 0xc
pop edi
mov [ esi + 0x24 ] ebx
pop ebx
sub_1002b710
push ebp
mov ebp esp
push 0xffffffff
push sub_1003be38
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edi edi
mov esi ecx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x4 ] edi
mov ecx [ esi + 0x24 ]
sub ecx [ esi + 0x20 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x34 ] edi
je r-xdata
mov ecx [ ebp - 0x1c ]
inc ecx
push ecx
call sub_1002eb41
mov edi 0x10
add esp 0x4
mov esi eax
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] edi
jae r-xdata
mov [ ebp - 0x30 ] edi
jmp r-xdata
mov edx esi
sub edx eax
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x34 ] edi
jbe r-xdata
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov eax 0x56
call sub_1002bff0
mov edi eax
mov eax [ esi + 0x20 ]
add eax [ ebp - 0x30 ]
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov eax 0x55
call sub_1002bff0
mov ecx eax
lea edi [ ecx + 0x1 ]
lea ecx [ ecx ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
push edx
call sub_1002e8fb
add esp 0x4
mov ecx eax
lea ebx [ ecx + 0x1 ]
mov eax [ eax ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx edi
push ecx
lea ecx [ ebp - 0x2c ]
call sub_10003f80
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx ebx
push ecx
lea ecx [ ebp - 0x2c ]
call sub_10003f80
mov eax edi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
mov eax edi
lea ecx [ ebp - 0x2c ]
call sub_10003f80
mov ecx [ esi + 0x20 ]
mov edx [ ebp - 0x30 ]
cmp [ ecx + edx + 0x30 ] 0x10
lea eax [ ecx + edx + 0x1c ]
jb r-xdata
mov ecx eax
lea edi [ ecx + 0x1 ]
mov eax [ eax ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx edi
push ecx
lea ecx [ ebp - 0x2c ]
call sub_10003f80
mov ecx [ esi + 0x24 ]
sub ecx [ esi + 0x20 ]
mov edi [ ebp - 0x34 ]
add [ ebp - 0x30 ] 0x38
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
inc edi
add eax edx
mov [ ebp - 0x34 ] edi
cmp edi eax
jb r-xdata
xor edi edi
sub_1002b8a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov edx eax
push esi
lea esi [ edx + 0x1 ]
lea ecx [ ecx ]
mov bl [ edx ]
inc edx
test bl bl
jne r-xdata
sub edx esi
add ecx 0x4
mov esi edx
call sub_10002640
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x4
sub_1002b8d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ esi + 0x20 ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] ebx
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x4 ]
push edi
mov edi [ esi + 0x24 ]
push ecx
call sub_1001bb10
mov edx [ esi + 0x20 ]
push edx
call sub_1002e8fb
add esp 0x8
pop edi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x4 ] bl
mov [ esi ] r--data
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x4 ]
push eax
call sub_1002e8fb
add esp 0x4
sub_1002b940
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1002b8d0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1002b970
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c068
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
push 0x0
lea eax [ esi + 0x4 ]
push eax
or eax 0xffffffff
lea edi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
call sub_10003ee0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x1c ]
inc edx
push edx
call sub_1002eb41
mov edi 0x10
add esp 0x4
mov esi eax
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] edi
jae r-xdata
mov ecx [ esi + 0x24 ]
sub ecx [ esi + 0x20 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add ecx edx
je r-xdata
mov edx esi
sub edx eax
lea eax [ ebp - 0x2c ]
mov eax 0x54
call sub_1002bff0
mov ecx eax
lea edi [ ecx + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx edi
push ecx
lea ecx [ ebp - 0x2c ]
call sub_10003f80
mov edx [ esi ]
mov eax [ edx + 0x18 ]
mov ecx esi
call eax
mov esi eax
test esi esi
jne r-xdata
mov eax esi
mov eax [ ebp - 0x2c ]
push eax
call sub_1002e8fb
add esp 0x4
mov eax esi
lea edx [ eax + 0x1 ]
lea esp [ esp ]
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
mov eax esi
lea ecx [ ebp - 0x2c ]
call sub_10003f80
push esi
call sub_1002ee65
add esp 0x4
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
sub_1002bad0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a8a3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebx ] r--data
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0xc ] edi
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x1
mov [ ebx + 0x14 ] eax
mov eax [ ebx + 0x8 ]
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] 0x5c
mov [ ebp - 0x10 ] edi
cmp ecx eax
jae r-xdata
cmp eax [ ebx + 0xc ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
lea edx [ ebp - 0x14 ]
cmp ecx edx
ja r-xdata
mov eax [ ebx + 0x8 ]
cmp eax edi
je r-xdata
lea ecx [ ebx + 0x4 ]
call sub_1002be40
mov edi edx
sub edi ecx
sar edi 0x3
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
add [ ebx + 0x8 ] 0x8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ eax ] 0x5c
mov [ eax + 0x4 ] edi
mov eax [ ebx + 0x4 ]
lea ecx [ eax + edi * 8 ]
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
lea ecx [ ebx + 0x4 ]
call sub_1002be40
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub_1002bba0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1002bbd0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1002bbd0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a623
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov eax [ esi + 0x8 ]
sub eax [ esi + 0x4 ]
xor ebx ebx
sar eax 0x3
xor edi edi
test eax eax
je r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx ebx
je r-xdata
lea esp [ esp ]
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x14 ] ebx
push r--data
call sub_1003626a
cmp [ eax + edi * 8 + 0x4 ] ebx
je r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call sub_1002e8fb
add esp 0x4
mov edx [ esi + 0x8 ]
sub edx [ esi + 0x4 ]
inc edi
sar edx 0x3
cmp edi edx
jb r-xdata
mov edx [ esi + 0x8 ]
sub edx eax
sar edx 0x3
cmp edx edi
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
sub ecx eax
sar ecx 0x3
cmp ecx edi
jbe r-xdata
mov ecx [ eax + edi * 8 + 0x4 ]
cmp ecx ebx
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
sub ecx eax
sar ecx 0x3
cmp ecx edi
jbe r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ eax + edi * 8 + 0x4 ] ebx
sub_1002bce0
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
mov edx [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx eax
sar edx 0x3
cmp edx ecx
ja r-xdata
mov eax [ eax + ecx * 8 ]
pop ebp
retn 0x4
push r--data
call sub_1003626a
sub_1002bd10
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
sub ecx eax
push edi
mov edi [ ebp + 0x8 ]
sar ecx 0x3
cmp ecx edi
ja r-xdata
cmp [ eax + edi * 8 + 0x4 ] 0x0
jne r-xdata
push r--data
call sub_1003626a
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
sub ecx eax
sar ecx 0x3
cmp ecx edi
ja r-xdata
cmp [ eax + edi * 8 ] 0x5c
jne r-xdata
mov eax [ eax + edi * 8 + 0x4 ]
pop edi
pop esi
pop ebp
retn 0x4
push r--data
call sub_1003626a
xor eax eax
push 0x8
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
mov [ ecx + edi * 8 + 0x4 ] eax
push r--data
call sub_1003626a
xor eax eax
push eax
call sub_1002b3f0
add esp 0x4
jmp r-xdata
mov ecx [ esi + 0x14 ]
push eax
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
call sub_1002b3f0
add esp 0x4
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ esi + 0x8 ]
sub edx ecx
sar edx 0x3
cmp edx edi
ja r-xdata
sub_1002bdc0
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push edi
xor edi edi
call edx
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov ebx [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
push edi
call edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ eax + 0x4 ]
inc edi
call edx
cmp edi eax
jb r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
push edi
mov ecx esi
call edx
cmp eax ebx
mov eax [ esi ]
mov ecx esi
je r-xdata
sub_1002be40
mov eax [ ecx + 0x4 ]
push esi
mov esi [ ecx ]
sub eax esi
sar eax 0x3
cmp eax 0x1ffffffe
jbe r-xdata
mov edx [ ecx + 0x8 ]
sub edx esi
inc eax
sar edx 0x3
cmp eax edx
jbe r-xdata
push r--data
call sub_1003621d
pop esi
retn
push edi
mov esi edx
shr esi 0x1
mov edi 0x1fffffff
sub edi esi
cmp edi edx
pop edi
jae r-xdata
add edx esi
xor edx edx
jmp r-xdata
push edx
call sub_1002be90
mov edx eax
cmp edx eax
jae r-xdata
sub_1002be90
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a870
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0x1fffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x3
cmp eax ecx
jae r-xdata
push r--data
call sub_1003621d
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_1002bf60
mov ebx eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push eax
mov eax ebx
mov [ ebp - 0x14 ] ebx
call sub_1002bfc0
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
add esp 0x4
sar edi 0x3
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea edx [ ebx + ecx * 8 ]
lea eax [ ebx + edi * 8 ]
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
mov [ esi ] ebx
push eax
call sub_1002e8fb
add esp 0x4
sub_1002bf60
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x1fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_1002e39e
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_10030edf
lea eax [ ecx * 8 ]
push eax
call sub_1002e957
add esp 0x4
test eax eax
jne r-xdata
sub_1002bfc0
cmp ecx edx
je r-xdata
retn
push esi
add ecx 0x8
add eax 0x8
cmp ecx edx
jne r-xdata
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x4 ]
mov [ eax + 0x4 ] esi
test eax eax
je r-xdata
pop esi
sub_1002bff0
push ebp
mov ebp esp
sub esp 0x8
mov edx [ eax * 4 + rw-data ]
lea ecx [ eax * 4 + rw-data ]
mov [ ebp - 0x8 ] ecx
test edx edx
jne r-xdata
mov eax [ ecx ]
mov esp ebp
pop ebp
retn
push ebx
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
mov cl [ eax ]
push esi
movzx esi [ eax + 0x1 ]
lea edx [ esi + 0x1 ]
push edi
push edx
mov [ ebp - 0x1 ] cl
call sub_1002e957
add esp 0x4
mov edi eax
xor ecx ecx
mov [ esi + edi ] 0x0
test esi esi
je r-xdata
mov esi [ ebp - 0x8 ]
push edi
push esi
call [ InterlockedExchange@IAT ]
mov eax [ esi ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebx ]
mov dl [ ecx + eax + 0x3 ]
xor dl [ ebp - 0x1 ]
inc ecx
mov [ ecx + edi - 0x1 ] dl
cmp ecx esi
jb r-xdata
sub_1002c070
push ebp
mov ebp esp
sub esp 0x8
mov edx [ eax * 4 + rw-data ]
lea ecx [ eax * 4 + rw-data ]
mov [ ebp - 0x8 ] ecx
test edx edx
jne r-xdata
mov eax [ ecx ]
mov esp ebp
pop ebp
retn
push ebx
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
mov cl [ eax ]
push esi
movzx esi [ eax + 0x1 ]
mov [ ebp - 0x1 ] cl
xor ecx ecx
lea eax [ esi + 0x1 ]
mov edx 0x2
mul edx
seto cl
push edi
neg ecx
or ecx eax
push ecx
call sub_1002e957
mov edi eax
xor eax eax
add esp 0x4
xor ecx ecx
mov [ edi + esi * 2 ] ax
test esi esi
je r-xdata
mov esi [ ebp - 0x8 ]
push edi
push esi
call [ InterlockedExchange@IAT ]
mov eax [ esi ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ebx [ ebx ]
mov edx [ ebx ]
mov al [ ecx + edx + 0x3 ]
xor al [ ebp - 0x1 ]
inc ecx
movzx edx al
mov [ edi + ecx * 2 - 0x2 ] dx
cmp ecx esi
jb r-xdata
sub_1002c100
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
push ebx
mov esi ecx
call sub_1002e957
mov ecx [ ebp + 0x8 ]
add esp 0x4
mov edi eax
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
push ebx
push edi
call edx
mov ebx eax
test ebx ebx
je r-xdata
push edi
call sub_1002e8fb
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
lea eax [ ebx + ebx ]
push eax
call sub_1002e957
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x4 ]
add esp 0x4
push ecx
lea ecx [ ebp + 0xc ]
push ecx
mov ecx [ esi + 0xc ]
push ecx
lea ecx [ ebx + ebx ]
push ecx
push eax
push ebx
push edi
mov [ ebp + 0xc ] 0x0
mov edx [ edx + 0xc ]
push 0x2
mov [ ebp + 0x8 ] eax
call edx
push edi
test eax eax
je r-xdata
call sub_1002e8fb
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov edx [ esi ]
mov edx [ edx + 0xc ]
add esp 0x4
or ecx 0x80000000
push 0x4
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ecx
push eax
mov ecx esi
call edx
mov edi [ ebp + 0x8 ]
cmp eax 0x4
jne r-xdata
call sub_1002e8fb
mov eax [ ebp + 0x8 ]
push eax
call sub_1002e8fb
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
push edi
mov ecx esi
call edx
cmp [ ebp + 0xc ] eax
jne r-xdata
push edi
call sub_1002e8fb
add esp 0x4
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_1002c1f0
push ebp
mov ebp esp
push esi
push edi
push 0x14
call sub_1002e957
xor esi esi
add esp 0x4
cmp eax esi
je r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x10 ]
lea eax [ esi + 0xc ]
push eax
lea edi [ esi + 0x8 ]
push edi
push 0x2
call ecx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] esi
mov [ eax + 0x10 ] esi
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov esi eax
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
pop edi
xor eax eax
pop esi
pop ebp
retn
mov edx [ edi ]
push edx
call sub_1002e957
add esp 0x4
mov [ esi + 0x10 ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn
sub_1002c260
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov [ esi ] r--data
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x10 ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1002c2a0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1002c2d0
cmp [ ecx + 0x8 ] 0x0
je r-xdata
push 0x4
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
push ecx
call sub_1002c1f0
add esp 0x4
test eax eax
jne r-xdata
xor eax eax
mov [ eax ] r--data
retn
retn
sub_1002c300
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0x4 ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1002c340
push r--data
mov [ esi ] r--data
mov [ esi + 0x4 ] 0x0
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
call [ LoadLibraryW@IAT ]
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push edi
mov edi [ GetProcAddress@IAT ]
push r--data
push eax
call edi
mov [ esi + 0xc ] eax
mov eax [ esi + 0x4 ]
push r--data
push eax
call edi
cmp [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] eax
pop edi
je r-xdata
xor eax eax
mov [ esi + 0x8 ] eax
mov eax esi
retn
xor ecx ecx
test eax eax
setne cl
mov eax ecx
mov [ esi + 0x8 ] eax
mov eax esi
retn
sub_1002c3b0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
push edi
call sub_1002e957
mov ecx [ ebp + 0x8 ]
add esp 0x4
mov esi eax
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
push edi
push esi
call edx
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
mov edi [ ebp + 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0xc ]
push 0x4
lea ecx [ ebp + 0xc ]
push ecx
mov ecx edi
call edx
cmp eax 0x4
jne r-xdata
push esi
call sub_1002e8fb
add esp 0x4
pop edi
xor eax eax
pop esi
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
mov eax [ edi ]
mov edx [ eax + 0xc ]
push ecx
push esi
mov ecx edi
call edx
xor ecx ecx
cmp [ ebp + 0xc ] eax
push esi
sete cl
mov edi ecx
call sub_1002e8fb
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebp
retn 0xc
sub_1002c430
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b0fb
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
xor ebx ebx
cmp [ edi + 0x4 ] ebx
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ edi + 0x24 ] ebx
mov ecx [ edi + 0x24 ]
cmp ecx ebx
je r-xdata
cmp [ edi + 0x24 ] ebx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
test eax eax
je r-xdata
push 0x18
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor eax eax
mov ecx [ edi + 0x24 ]
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
mov ecx [ edi + 0x24 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi ] r--data
mov [ esi + 0x14 ] ecx
mov eax esi
jmp r-xdata
mov [ edi + 0x24 ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1002c4f0
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push edx
call eax
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x2c ]
mov eax [ edx + 0xc ]
add ecx 0x2c
call eax
test eax eax
je r-xdata
mov eax 0x1
pop esi
pop ebp
retn 0x8
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x2c ]
mov eax [ edx + 0xc ]
add ecx 0x2c
call eax
test eax eax
jne r-xdata
sub_1002c560
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c8d3
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebx ] r--data
xor ecx ecx
mov [ ebx + 0x1c ] 0x7
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x8 ] cx
mov [ ebp - 0x4 ] 0x1
mov [ ebx + 0x4 ] eax
lea eax [ ecx + 0x10 ]
call sub_1002c070
mov edi eax
mov eax 0x11
call sub_1002c070
mov [ ebp - 0x10 ] eax
mov eax edi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax edi
lea ecx [ ebx + 0x8 ]
call sub_1000bc70
mov edx [ ebp + 0xc ]
mov eax edx
lea edi [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
mov eax edx
lea ecx [ ebx + 0x8 ]
call sub_10016ca0
mov edx [ ebp - 0x10 ]
mov eax edx
lea edi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
mov eax edx
lea ecx [ ebx + 0x8 ]
call sub_10016ca0
mov edx [ ebp + 0x10 ]
mov eax edx
lea edi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
mov eax edx
lea ecx [ ebx + 0x8 ]
call sub_10016ca0
mov [ ebx + 0x24 ] 0x0
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_1002c670
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b0d3
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x1c ] 0x8
jb r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x4 ] 0x0
xor ecx ecx
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x1c ] 0x7
mov [ esi + 0x18 ] 0x0
mov [ esi + 0x8 ] cx
mov [ esi ] r--data
je r-xdata
mov eax [ esi + 0x8 ]
push eax
call sub_1002e8fb
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1002c710
push ebp
mov ebp esp
push ebx
push esi
push 0x18
call sub_1002e957
add esp 0x4
mov ebx 0x1
test eax eax
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] 0x0
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] ebx
mov esi eax
jmp r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] 0x0
push edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24 ] esi
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] ebx
mov ecx [ esi + 0x8 ]
mov edi [ esi + 0x4 ]
push ecx
call sub_1002e957
add esp 0x4
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
pop edi
mov edx [ esi + 0x8 ]
push edx
push edi
push eax
call sub_10033950
add esp 0xc
mov [ esi + 0x10 ] ebx
sub_1002c7a0
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x1c ] 0x8
lea eax [ esi + 0x8 ]
jb r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x4 ] 0x0
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push 0xc0000000
push eax
call [ CreateFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ eax ]
push eax
push esi
push 0x0
call sub_1002cb30
xor ecx ecx
add esp 0xc
test eax eax
setne cl
mov [ esi + 0x4 ] eax
pop esi
mov eax ecx
retn
call [ GetLastError@IAT ]
xor eax eax
pop esi
retn
sub_1002c810
push ebp
mov ebp esp
sub esp 0x8
push esi
push edi
mov edi ecx
mov eax [ edi + 0x2c ]
mov edx [ eax + 0xc ]
lea esi [ edi + 0x2c ]
mov ecx esi
call edx
test eax eax
je r-xdata
pop edi
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x30 ]
mov edx [ esi ]
push ebx
mov ebx [ edi + 0x44 ]
push 0x0
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ edx + 0xc ]
push ecx
mov ecx esi
call eax
mov edx [ edi + 0xc ]
sub eax ebx
add ebx [ ebp - 0x4 ]
push eax
push ebx
push edx
call [ WriteFile@IAT ]
pop ebx
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ esi ]
add [ edi + 0x44 ] eax
mov eax [ edx + 0xc ]
mov ecx esi
call eax
cmp [ edi + 0x44 ] eax
jne r-xdata
call [ GetLastError@IAT ]
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
mov [ edi + 0x44 ] 0x0
call sub_1000a040
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push edi
call edx
sub_1002c8b0
push ebp
mov ebp esp
mov eax 0x3480
call sub_10035c20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi ecx
cmp [ edi + 0x28 ] 0x0
lea ebx [ edi + 0x28 ]
jbe r-xdata
mov edx [ edi + 0x10 ]
mov eax [ edx + 0xc ]
lea ecx [ edi + 0x10 ]
call eax
push 0x0
lea edx [ ebp - 0x3478 ]
push edx
mov ecx 0x4
sub ecx eax
push ecx
mov ecx [ edi + 0xc ]
lea eax [ ebp - 0x3474 ]
push eax
push ecx
mov [ ebp - 0x3478 ] 0x0
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx [ eax + 0xc ]
lea esi [ edi + 0x10 ]
mov ecx esi
mov ebx 0x346d
call edx
mov ecx [ edi + 0x28 ]
add eax ebx
add ecx 0x4
cmp eax ecx
jbe r-xdata
cmp [ ebp - 0x3478 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0xe8
je r-xdata
mov eax [ edi + 0xc ]
push 0x0
lea ecx [ ebp - 0x3478 ]
push ecx
push ebx
lea edx [ ebp - 0x3474 ]
push edx
push eax
mov [ ebp - 0x3478 ] 0x0
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0xc ]
mov ecx esi
call eax
mov ebx [ edi + 0x28 ]
sub ebx eax
add ebx 0x4
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x10 ]
mov edx [ eax + 0xc ]
lea ecx [ edi + 0x10 ]
mov [ ebp - 0x347c ] eax
call edx
mov edx [ ebp - 0x347c ]
push eax
mov eax [ ebp - 0x3478 ]
push eax
mov eax [ edx + 0x8 ]
lea ecx [ ebp - 0x3474 ]
push ecx
lea ecx [ edi + 0x10 ]
call eax
cmp [ ebp - 0x3478 ] eax
jne r-xdata
call [ GetLastError@IAT ]
cmp [ ebp - 0x3478 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0xe8
jne r-xdata
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edi + 0x10 ]
mov eax [ edx + 0xc ]
lea ecx [ edi + 0x10 ]
call eax
cmp eax 0x4
jb r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
mov eax [ edx + 0xc ]
push edi
call eax
mov ebx [ esi ]
mov edx [ ebx + 0xc ]
mov ecx esi
call edx
mov edx [ ebx + 0x8 ]
push eax
mov eax [ ebp - 0x3478 ]
push eax
lea ecx [ ebp - 0x3474 ]
push ecx
mov ecx esi
call edx
cmp [ ebp - 0x3478 ] eax
je r-xdata
mov edx [ edi + 0x10 ]
mov eax [ edx + 0x4 ]
push 0x0
push 0x4
push ebx
lea ecx [ edi + 0x10 ]
call eax
cmp eax 0x4
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov ecx esi
call edx
mov edx [ edi + 0x28 ]
lea ecx [ edi + 0x28 ]
add edx 0x4
mov [ ebp - 0x347c ] ecx
cmp eax edx
jb r-xdata
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
mov ebx [ ecx ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov ecx esi
mov [ ebp - 0x3480 ] ebx
call edx
add ebx 0x4
cmp eax ebx
ja r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push edi
call edx
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov edx [ edi + 0x14 ]
mov ecx [ ebx + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
add edx 0x4
push edx
mov edx [ ebp - 0x3480 ]
push edx
push edi
push ebx
call eax
jmp r-xdata
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x3480 ]
mov edx [ edi + 0x14 ]
push ecx
add edx 0x4
push edx
push eax
call sub_1002c710
call sub_1000a040
mov eax [ ebp - 0x347c ]
mov [ eax ] 0x0
jmp r-xdata
mov edx edi
mov eax ebx
call sub_1002ce30
test eax eax
je r-xdata
sub_1002cb30
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x48
call sub_1002e957
xor esi esi
add esp 0x4
cmp eax esi
je r-xdata
xor edi edi
mov [ eax ] r--data
mov [ eax + 0x14 ] esi
mov [ eax + 0x18 ] esi
mov [ eax + 0x24 ] esi
mov [ eax + 0x20 ] esi
mov ecx r--data
mov [ eax + 0x10 ] ecx
mov edx 0x1
mov [ eax + 0x1c ] edx
mov [ eax + 0x2c ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x30 ] esi
mov [ eax + 0x34 ] esi
mov [ eax + 0x40 ] esi
mov [ eax + 0x3c ] esi
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ecx
mov [ eax + 0x28 ] esi
mov [ eax + 0x44 ] esi
mov edi eax
jmp r-xdata
lea esi [ edi + 0x2c ]
call sub_10009ff0
cmp [ edi + 0x24 ] esi
je r-xdata
cmp [ edi + 0x1c ] esi
jne r-xdata
mov [ edi + 0x1c ] 0x1
mov edx [ edi + 0x18 ]
mov ebx [ edi + 0x14 ]
push edx
call sub_1002e957
add esp 0x4
mov [ edi + 0x14 ] eax
cmp eax esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
mov ecx [ edi + 0x18 ]
push ecx
push ebx
push eax
call sub_10033950
add esp 0xc
mov [ edi + 0x20 ] 0x1
sub_1002cbf0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx [ edi + 0x2c ]
mov eax [ ebx + 0xc ]
lea ecx [ edi + 0x2c ]
call eax
mov edx [ ebx + 0x8 ]
push eax
push 0x4
lea ecx [ ebp + 0xc ]
push ecx
lea ecx [ edi + 0x2c ]
call edx
mov ebx [ edi + 0x2c ]
mov eax [ ebx + 0xc ]
lea ecx [ edi + 0x2c ]
call eax
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push ecx
push edx
lea ecx [ edi + 0x2c ]
call eax
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_1002cc40
push ebx
push esi
mov esi ecx
mov eax [ esi + 0xc ]
mov [ esi ] r--data
test eax eax
je r-xdata
cmp [ esi + 0x3c ] 0x0
mov [ esi + 0x2c ] r--data
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov ebx r--data
mov [ esi + 0x2c ] ebx
cmp [ esi + 0x20 ] 0x0
mov [ esi + 0x10 ] r--data
je r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
mov eax [ esi + 0xc ]
push eax
call [ CloseHandle@IAT ]
mov [ esi + 0xc ] 0x0
push eax
call [ DisconnectNamedPipe@IAT ]
mov [ esi + 0x10 ] ebx
mov [ esi ] r--data
pop esi
pop ebx
retn
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
cmp [ esi + 0x24 ] 0x0
jne r-xdata
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x30 ] 0x0
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x14 ] 0x0
sub_1002ccf0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1002cc40
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1002cd20
push ebp
mov ebp esp
push 0xffffffff
push sub_1003b09e
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
mov [ ebp - 0x4 ] 0x2
cmp [ esi + 0x10 ] edi
jbe r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx edi
je r-xdata
mov edi edi
cmp [ esi + 0x2c ] 0x8
jb r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x4 ] edi
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
mov ecx [ edx + 0x8 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
cmp [ esi + 0x10 ] edi
ja r-xdata
mov [ esi + 0x2c ] 0x7
mov [ esi + 0x28 ] edi
xor ecx ecx
mov [ esi + 0x18 ] cx
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
mov [ ecx ] ecx
mov ecx [ esi + 0xc ]
mov [ ecx + 0x4 ] ecx
mov [ esi + 0x10 ] edi
cmp eax [ esi + 0xc ]
je r-xdata
mov eax [ esi + 0x18 ]
push eax
call sub_1002e8fb
add esp 0x4
mov edx [ esi + 0xc ]
push edx
call sub_1002e8fb
add esp 0x4
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edi [ eax ]
push eax
call sub_1002e8fb
add esp 0x4
mov eax edi
cmp edi [ esi + 0xc ]
jne r-xdata
sub_1002ce00
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1002cd20
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1002ce30
mov ecx [ eax + 0xc ]
mov eax [ ecx ]
cmp eax ecx
je r-xdata
xor eax eax
retn
lea esp [ esp ]
mov eax 0x1
retn
mov eax [ eax ]
cmp eax ecx
jne r-xdata
cmp edx [ eax + 0x8 ]
je r-xdata
sub_1002ce60
push ebp
mov ebp esp
sub esp 0x20
push esi
mov esi eax
push 0x1
lea eax [ ebp - 0x20 ]
push eax
call [ InitializeSecurityDescriptor@IAT ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0x1
lea ecx [ ebp - 0x20 ]
push ecx
call [ SetSecurityDescriptorDacl@IAT ]
test eax eax
je r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
cmp [ edi + 0x2c ] 0x8
lea eax [ edi + 0x18 ]
lea edx [ ebp - 0x20 ]
mov [ ebp - 0xc ] 0xc
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] edx
jb r-xdata
dec esi
lea ecx [ ebp - 0xc ]
push ecx
push 0x0
push 0x1000
neg esi
sbb esi esi
push 0x200
push 0xff
and esi 0xfff80000
push 0x1
add esi 0x80000
or esi 0x3
push esi
push eax
call [ CreateNamedPipeW@IAT ]
xor edx edx
test eax eax
setne dl
mov [ edi + 0x34 ] eax
pop esi
mov eax edx
mov esp ebp
pop ebp
retn
mov eax [ eax ]
sub_1002cf00
push ebp
mov ebp esp
push edi
mov edi ecx
mov ecx [ edi + 0xc ]
mov eax [ ecx ]
cmp eax ecx
je r-xdata
pop edi
pop ebp
retn 0x4
nop
push ebx
mov ebx ecx
push esi
mov esi [ ebx ]
cmp esi ebx
je r-xdata
mov eax [ eax ]
cmp eax ecx
jne r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ ecx ]
push edx
mov edx [ eax + 0xc ]
push edi
call edx
mov ecx [ ebp + 0x8 ]
pop esi
pop ebx
test ecx ecx
je r-xdata
lea ecx [ ecx ]
mov edx [ ebp + 0x8 ]
cmp [ eax + 0x8 ] edx
je r-xdata
pop edi
pop ebp
retn 0x4
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov esi [ esi ]
mov eax [ esi + 0x4 ]
push esi
mov esi [ esi ]
mov [ eax ] esi
mov [ esi + 0x4 ] eax
call sub_1002e8fb
mov edx [ ebp + 0x8 ]
add esp 0x4
dec [ edi + 0x10 ]
jmp r-xdata
cmp [ esi + 0x8 ] edx
jne r-xdata
cmp esi ebx
jne r-xdata
sub_1002cf80
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d2f3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x38
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor edi edi
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
push 0xc
mov [ esi + 0x10 ] ebx
call sub_1002e957
add esp 0x4
cmp eax ebx
je r-xdata
mov dx [ ecx ]
add ecx 0x2
cmp dx bx
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
lea ecx [ edi + 0x18 ]
call sub_1000bc70
mov eax [ ebp + 0xc ]
lea edx [ eax + 0x2 ]
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ebx
call sub_1002e39e
push r--data
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x20 ] r--data
call sub_10030edf
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] eax
mov [ eax ] eax
mov eax [ esi + 0xc ]
mov [ eax + 0x4 ] eax
mov [ esi + 0x2c ] 0x7
mov [ esi + 0x28 ] ebx
xor eax eax
mov [ esi + 0x18 ] ax
mov [ esi + 0x4 ] ecx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x8 ] ebx
mov edi esi
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax [ ebp + 0xc ]
lea ecx [ edi + 0x18 ]
call sub_10016ca0
mov eax 0x1
call sub_1002ce60
test eax eax
je r-xdata
mov eax 0x12
mov [ ebp - 0x4 ] 0xffffffff
call sub_1002c070
mov ecx eax
lea esi [ ecx + 0x2 ]
cmp edi ebx
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
sub_1002d0c0
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jbe r-xdata
pop esi
retn
lea esp [ esp ]
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
mov ecx [ edx + 0x8 ]
mov eax [ esi ]
mov edx [ eax + 0xc ]
push ecx
mov ecx esi
call edx
cmp [ esi + 0x10 ] 0x0
ja r-xdata
sub_1002d0f0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
push edi
cmp ecx [ esi + 0x10 ]
jb r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ esi + 0x8 ] 0x0
test eax eax
je r-xdata
mov edi [ eax + 0x8 ]
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
test eax eax
je r-xdata
dec ecx
mov eax [ eax ]
jne r-xdata
xor eax eax
mov edi esi
call sub_1002ce60
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x0
push eax
call [ ConnectNamedPipe@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0xc ]
mov eax [ ecx ]
cmp eax ecx
je r-xdata
mov edx [ esi + 0x34 ]
push ebx
push edx
push 0x0
push esi
call sub_1002cb30
mov ebx eax
add esp 0xc
mov [ ebp - 0x4 ] ebx
test ebx ebx
je r-xdata
call [ GetLastError@IAT ]
xor ecx ecx
cmp eax 0x217
sete cl
mov eax ecx
test eax eax
je r-xdata
cmp edi [ eax + 0x8 ]
je r-xdata
xor eax eax
mov edi esi
mov [ esi + 0x34 ] 0x0
call sub_1002ce60
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn
lea edi [ esi + 0xc ]
lea eax [ ebp - 0x4 ]
call sub_1002d220
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push ebx
push esi
call edx
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
test eax eax
je r-xdata
mov eax [ eax ]
cmp eax ecx
jne r-xdata
inc [ esi + 0x8 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1002d1e0
mov ecx [ esi ]
mov eax [ ecx ]
mov [ ecx ] ecx
mov ecx [ esi ]
mov [ ecx + 0x4 ] ecx
mov [ esi + 0x4 ] 0x0
cmp eax [ esi ]
je r-xdata
mov eax [ esi ]
push eax
call sub_1002e8fb
pop ecx
retn
push edi
mov edi [ eax ]
push eax
call sub_1002e8fb
add esp 0x4
mov eax edi
cmp edi [ esi ]
jne r-xdata
pop edi
sub_1002d220
push esi
mov esi [ edi ]
mov ecx [ esi + 0x4 ]
push eax
push ecx
push esi
call sub_100214c0
mov ecx [ edi + 0x4 ]
mov edx 0x3ffffffe
sub edx ecx
cmp edx 0x1
jae r-xdata
inc ecx
mov [ edi + 0x4 ] ecx
mov [ esi + 0x4 ] eax
mov ecx [ eax + 0x4 ]
mov [ ecx ] eax
pop esi
retn
push r--data
call sub_1003621d
sub_1002d260
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c1cb
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x28
call sub_1002e957
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_1002c560
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x8
sub_1002d300
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c88b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
xor edi edi
cmp [ ebx + 0x14 ] edi
jne r-xdata
cmp [ ebx + 0x18 ] 0x8
lea eax [ ebx + 0x4 ]
jb r-xdata
lea eax [ edi + 0x13 ]
call sub_1002c070
push 0x4da
mov esi eax
lea eax [ ebp - 0x4ec ]
push edi
push eax
call sub_10032e00
add esp 0xc
push 0x26c
lea ecx [ ebp - 0x4ec ]
push ecx
push esi
call [ ExpandEnvironmentStringsW@IAT ]
xor edx edx
lea eax [ ebp - 0x4ec ]
mov [ ebp - 0x508 ] dx
mov [ ebp - 0x4f4 ] 0x7
mov [ ebp - 0x4f8 ] edi
lea edx [ eax + 0x2 ]
nop
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov eax [ eax ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x4ec ]
lea ecx [ ebp - 0x508 ]
call sub_1000bc70
mov [ ebp - 0x4 ] edi
lea esi [ ebx + 0x4 ]
lea edi [ ebp - 0x508 ]
call sub_10013f90
cmp [ ebp - 0x4f4 ] 0x8
jb r-xdata
mov eax [ ebp - 0x508 ]
push eax
call sub_1002e8fb
add esp 0x4
sub_1002d410
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c0c4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ esi ] r--data
mov edx 0x7
xor ecx ecx
mov [ esi + 0x18 ] edx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x4 ] cx
xor eax eax
mov [ esi + 0x34 ] edx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x20 ] ax
lea ecx [ esi + 0x3c ]
mov [ ecx + 0x14 ] edx
mov [ ecx + 0x10 ] ebx
mov [ ecx ] ax
mov [ esi + 0x6c ] edx
xor edx edx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x58 ] dx
mov edx [ ebp + 0xc ]
lea eax [ edx + 0x2 ]
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x14 ] eax
mov ax [ edx ]
add edx 0x2
cmp ax bx
jne r-xdata
sub edx [ ebp - 0x14 ]
mov eax [ ebp + 0xc ]
sar edx 0x1
push edx
call sub_1000bc70
mov eax [ ebp - 0x10 ]
lea edx [ eax + 0x2 ]
nop
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax [ ebp - 0x10 ]
lea ecx [ esi + 0x58 ]
call sub_1000bc70
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_1002d4f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003c858
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
xor edi edi
cmp [ ebx + 0x30 ] edi
jne r-xdata
cmp [ ebx + 0x34 ] 0x8
lea eax [ ebx + 0x20 ]
jb r-xdata
lea eax [ edi + 0x14 ]
call sub_1002c070
mov esi eax
lea eax [ edi + 0x15 ]
call sub_1002c070
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x2c ] ax
mov eax esi
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] edi
lea edx [ eax + 0x2 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov eax [ eax ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax esi
lea ecx [ ebp - 0x2c ]
call sub_1000bc70
push edi
lea ecx [ ebx + 0x3c ]
mov [ ebp - 0x4 ] edi
push ecx
or eax 0xffffffff
lea edi [ ebp - 0x2c ]
call sub_10016bf0
mov eax esi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax esi
lea ecx [ ebp - 0x2c ]
call sub_10016ca0
mov edx [ ebp - 0x30 ]
mov eax edx
lea esi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
mov eax edx
lea ecx [ ebp - 0x2c ]
call sub_10016ca0
push 0x0
lea edx [ ebx + 0x58 ]
push edx
or eax 0xffffffff
lea edi [ ebp - 0x2c ]
call sub_10016bf0
push 0x0
lea eax [ ebp - 0x2c ]
push eax
lea edi [ ebx + 0x20 ]
or eax 0xffffffff
call sub_1000bbc0
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
sub_1002d620
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1002d650
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1002d650
cmp [ esi + 0x6c ] 0x8
jb r-xdata
push ebx
push edi
xor edi edi
mov ebx 0x7
xor ecx ecx
mov [ esi + 0x6c ] ebx
mov [ esi + 0x68 ] edi
mov [ esi + 0x58 ] cx
cmp [ esi + 0x50 ] 0x8
jb r-xdata
mov eax [ esi + 0x58 ]
push eax
call sub_1002e8fb
add esp 0x4
xor eax eax
mov [ esi + 0x50 ] ebx
mov [ esi + 0x4c ] edi
mov [ esi + 0x3c ] ax
cmp [ esi + 0x34 ] 0x8
jb r-xdata
mov edx [ esi + 0x3c ]
push edx
call sub_1002e8fb
add esp 0x4
xor edx edx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] edi
mov [ esi + 0x20 ] dx
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov ecx [ esi + 0x20 ]
push ecx
call sub_1002e8fb
add esp 0x4
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] ebx
xor ecx ecx
pop edi
mov [ esi + 0x4 ] cx
mov [ esi ] r--data
pop ebx
retn
mov eax [ esi + 0x4 ]
push eax
call sub_1002e8fb
add esp 0x4
sub_1002d6e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003cf1b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x74
call sub_1002e957
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
push eax
push esi
call sub_1002d410
sub_1002d740
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop ebp
retn 0x4
push 0x4
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
mov [ eax ] r--data
pop ebp
retn 0x4
sub_1002d770
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1002d7a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d318
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] ax
mov [ ebp - 0x4 ] eax
mov edx [ ecx ]
mov eax [ edx + 0x40 ]
call eax
mov esi eax
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax esi
lea ecx [ ebp - 0x2c ]
call sub_10016ca0
push esi
call sub_1002ee65
add esp 0x4
mov eax 0x5
call sub_1002c070
mov ecx eax
lea esi [ ecx + 0x2 ]
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
lea ecx [ ebp - 0x2c ]
call sub_10016ca0
mov eax 0x17
call sub_1002c070
mov ecx eax
lea esi [ ecx + 0x2 ]
lea esp [ esp ]
mov dx [ ecx ]
add ecx 0x2
test dx dx
jne r-xdata
sub ecx esi
sar ecx 0x1
push ecx
lea ecx [ ebp - 0x2c ]
call sub_10016ca0
mov eax [ ebp - 0x1c ]
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1002eb41
add esp 0x4
cmp [ ebp - 0x18 ] 0x8
mov esi eax
mov eax [ ebp - 0x2c ]
jae r-xdata
mov edx esi
sub edx eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x2c ]
push eax
call sub_1002e8fb
add esp 0x4
sub_1002d8e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1003da62
mov eax [ fs : 0x0 ]
push eax
sub esp 0xbd8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xbe0 ] ebx
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] cx
mov ecx eax
mov [ ebp - 0xbe4 ] esi
lea edi [ ecx + 0x2 ]
mov dx [ ecx ]
add ecx 0x2
cmp dx bx
jne r-xdata
sub ecx edi
sar ecx 0x1
push ecx
mov ecx esi
call sub_1000bc70
mov [ ebp - 0x4 ] ebx
mov eax 0x5
mov [ ebp - 0xbe0 ] 0x1
call sub_1002c070
mov ebx eax
mov eax 0x18
call sub_1002c070
mov [ ebp - 0xbd8 ] eax
call sub_10004a90
mov edi eax
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_10026120
mov edx [ edi ]
add esp 0x4
mov [ ebp - 0xbdc ] eax
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
mov eax [ ebp - 0xbdc ]
mov ecx [ ebp - 0xbd8 ]
push eax
push ecx
lea edx [ ebp - 0xbd4 ]
push edx
call [ wsprintfW@IAT ]
mov eax ebx
add esp 0xc
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax ebx
mov ecx esi
call sub_10016ca0
lea eax [ ebp - 0xbd4 ]
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0xbd4 ]
mov ecx esi
call sub_10016ca0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x4
sub_1002da30
push ebp
mov ebp esp
push 0xffffffff
push sub_1003dec8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ edi ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x38 ] eax
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov ebx eax
mov eax 0x17
call sub_1002c070
mov [ ebp - 0x30 ] eax
mov eax 0x16
call sub_1002c070
mov ecx [ ebp - 0x30 ]
mov edx [ ebx ]
mov edx [ edx + 0x4 ]
push ecx
push eax
mov ecx ebx
call edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x19
call sub_1002c070
push eax
push ebx
call sub_1002eebe
add esp 0x8
neg eax
sbb eax eax
inc eax
mov [ ebp - 0x30 ] eax
mov eax [ esi ]
push 0x1
mov [ ebp - 0x34 ] eax
mov eax [ eax + 0x8 ]
push 0x1
mov ecx esi
call eax
mov edx [ esi ]
push eax
mov eax [ edx + 0xc ]
mov ecx esi
call eax
mov edx [ ebp - 0x34 ]
push eax
mov eax [ edx + 0x14 ]
mov ecx esi
call eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
push ebx
call sub_1002e8fb
add esp 0x4
push ebx
lea esi [ ebp - 0x2c ]
call sub_1002d8e0
mov [ ebp - 0x4 ] 0x0
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
cmp [ ebp - 0x18 ] 0x8
mov [ ebp - 0x40 ] eax
jb r-xdata
push ebx
call sub_1002ee65
add esp 0x4
mov ecx esi
call sub_1002d7a0
mov ebx eax
lea edx [ ebp - 0x2c ]
mov [ ebp - 0x34 ] edx
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x34 ] ecx
jmp r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
push ebx
call sub_1002e8fb
add esp 0x4
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ eax ]
mov esi [ ebp - 0x38 ]
mov edx [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ edx + 0x8 ]
push 0x0
mov ecx esi
call eax
mov edx [ esi ]
push eax
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
push eax
mov eax [ edx + 0x4 ]
push ecx
mov ecx [ ebp - 0x40 ]
call eax
mov esi eax
test esi esi
jne r-xdata
push ebx
call sub_1002e8fb
add esp 0x4
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov edi eax
mov eax 0x17
call sub_1002c070
mov esi eax
mov eax 0x16
call sub_1002c070
mov edx [ edi ]
push 0x0
push ebx
push esi
push eax
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov esi eax
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
xor eax eax
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
sub_1002dc10
push ebp
mov ebp esp
push 0xffffffff
push sub_1003d5b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov edi [ ebp + 0x10 ]
call edx
mov esi eax
mov eax 0x17
call sub_1002c070
mov ebx eax
mov eax 0x16
call sub_1002c070
mov edx [ esi ]
push ebx
push eax
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0xc
push ebx
lea esi [ ebp - 0x2c ]
call sub_1002d8e0
push ebx
mov [ ebp - 0x4 ] 0x0
call sub_1002ee65
mov eax [ ebp - 0x2c ]
add esp 0x4
cmp [ ebp - 0x18 ] 0x8
jae r-xdata
mov edx [ edi ]
push eax
mov eax [ edx + 0x44 ]
mov ecx edi
call eax
mov esi [ edi ]
mov edx [ esi + 0x10 ]
mov ecx edi
mov ebx eax
call edx
push eax
mov eax [ esi + 0x44 ]
mov ecx edi
call eax
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax esi
mov eax ebx
mov ecx [ ebp - 0x2c ]
push ecx
call sub_1002e8fb
add esp 0x4
sub_1002dcf0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push edi
xor edi edi
push edi
mov ebx ecx
call [ CoInitialize@IAT ]
test eax eax
jns r-xdata
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x1
push edi
push r--data
mov [ ebp - 0x4 ] edi
call [ CoCreateInstance@IAT ]
test eax eax
js r-xdata
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov ecx [ eax ]
push esi
push edx
push eax
mov eax [ ecx + 0x50 ]
call eax
mov edx [ ebp + 0x10 ]
cmp edx edi
je r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x8 ]
push edx
mov [ ebp - 0x8 ] edi
mov ecx [ eax ]
push r--data
push eax
mov eax [ ecx ]
call eax
test eax eax
jns r-xdata
mov eax edx
lea esi [ eax + 0x2 ]
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x2c ]
call edx
mov esi eax
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x18 ]
push edi
push esi
push eax
call edx
mov edi eax
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
test edi edi
jns r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
pop esi
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
mov edx [ ebp + 0x14 ]
mov ecx [ ebx + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x3c ]
push edx
mov edx [ ebp + 0x8 ]
push 0x1
push edx
push esi
call eax
mov ecx [ ebx + 0x4 ]
mov edx [ ecx ]
mov edi eax
mov eax [ edx + 0x30 ]
push esi
call eax
push esi
call sub_1002ee65
add esp 0x4
pop esi
mov eax edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push esi
call sub_1002ee65
add esp 0x4
pop esi
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub eax esi
sar eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push edx
mov edx [ ecx + 0x2c ]
push eax
call edx
sub_1002de30
push ebp
mov ebp esp
mov eax 0x18ec
call sub_10035c20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
lea ecx [ ebp - 0x18e4 ]
push ecx
push 0x80000000
push 0x0
push eax
push 0x80000001
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x8
push 0x18d9
push eax
lea edx [ ebp - 0x18e0 ]
push edx
mov [ ebp - 0x18e8 ] eax
mov [ ebp - 0x18ec ] 0x18d9
call sub_10032e00
add esp 0xc
lea eax [ ebp - 0x18ec ]
push eax
mov eax [ ebp - 0x18e4 ]
lea ecx [ ebp - 0x18e0 ]
push ecx
lea edx [ ebp - 0x18e8 ]
push edx
push 0x0
push esi
push eax
call [ RegQueryValueExW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18e8 ]
cmp eax 0x1
je r-xdata
mov ecx [ ebp - 0x18e4 ]
push ecx
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x18e4 ]
push eax
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x18e0 ]
lea edx [ eax + 0x2 ]
cmp eax 0x2
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
xor ecx ecx
inc eax
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1002e957
lea ecx [ ebp - 0x18e0 ]
mov esi eax
mov edx ecx
add esp 0x4
sub esi edx
mov edx [ ebp - 0x18e4 ]
push edx
call [ RegCloseKey@IAT ]
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x8
movzx edx [ ecx ]
mov [ esi + ecx ] dx
add ecx 0x2
test dx dx
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_1002e0f2
mov esp ebp
pop ebp
retn 0x8
sub_1002df80
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
push 0x40000000
push 0x0
push ecx
push 0x80000001
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov edx [ ebp + 0x10 ]
push esi
mov eax edx
push edi
mov edi 0x1
lea esi [ eax + 0x2 ]
xor eax eax
pop ebp
retn 0x10
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0xc ]
sub eax esi
sar eax 0x1
add eax eax
push eax
push edx
mov edx [ ebp + 0x8 ]
push 0x1
push 0x0
push ecx
push edx
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
xor edi edi
mov eax edi
pop edi
pop esi
pop ebp
retn 0x10
mov eax [ ebp + 0x8 ]
push eax
call [ RegCloseKey@IAT ]
sub_1002e000
push ebp
mov ebp esp
push 0xffffffff
push sub_1003a848
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x8 ] 0x0
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0xc ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_1002e8fb
add esp 0x4
sub_1002e090
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov eax [ esi + 0xc ]
pop esi
retn
push 0x4
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov [ eax ] r--data
mov [ esi + 0xc ] eax
pop esi
retn
sub_1002e0c0
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
pop esi
retn
push 0x8
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ esi + 0x8 ] eax
pop esi
retn
sub_1002e101
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_1002ff26
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_1002fcfd
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_1002f57c
mov [ esi + 0x4 ] eax
sub_1002e188
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_1002e101
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
call sub_100304d4
mov [ eax ] 0x16
call sub_10030482
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
push esi
jne r-xdata
call sub_100304d4
mov [ eax ] 0x16
call sub_10030482
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_10030258
movzx esi ax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
add ebx 0x2
call sub_10030258
add esp 0x10
add edi 0x2
movzx eax ax
test si si
je r-xdata
sub ebx edi
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
cmp si ax
je r-xdata
mov esi eax
cmp eax 0x5a
ja r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
add edi 0x2
test si si
je r-xdata
cmp eax 0x5a
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
cmp si ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ edi ]
cmp eax 0x41
jb r-xdata
movzx eax [ ebx + edi ]
cmp eax 0x41
jb r-xdata
jmp r-xdata
sub_1002e28b
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002e188
add esp 0xc
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_100304d4
mov [ eax ] 0x16
call sub_10030482
mov eax 0x7fffffff
jmp r-xdata
sub esi ecx
pop esi
pop ebp
retn
mov edx eax
cmp eax 0x5a
ja r-xdata
add ecx 0x2
test dx dx
je r-xdata
cmp eax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
sub eax ecx
jmp r-xdata
cmp dx ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp eax 0x41
jb r-xdata
movzx eax [ esi + ecx ]
cmp eax 0x41
jb r-xdata
sub_1002e340
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_10030610
lea esi [ eax + 0x1 ]
push esi
call sub_1003057c
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_1003051d
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_1002e39e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_1002e340
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1002e3c5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_1002e380
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_1002e340
jmp r-xdata
sub_1002e405
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1002e380
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
pop ecx
sub_1002e42c
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_1002e3c5
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1002e460
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_1002e4e4 ]
jmp [ ecx * 4 + jump_table_1002e564 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1002e5d0 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_1002e76c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_1002e670 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1002e76c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1002e5d0 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1002e76c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1002e5d0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1002e5d0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1002e5d0 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1002e76c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1002e76c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1002e76c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_1002e7c1
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_100308c7
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_10030879
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_10030879
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_1002e877
mov edi edi
push esi
push 0x4
push 0x20
call sub_1003082d
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_1002e8a8
push 0xc
push r--data
call sub_10030bc0
call sub_1003093d
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_1002e7c1
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002e8de
mov eax [ ebp - 0x1c ]
call sub_10030c05
retn
sub_1002e916
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1002e906
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
pop ecx
sub_1002e937
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_10030e20
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_1002e957
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1003057c
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_10030eb7
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_1002e42c
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_10030edf
int3
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_1002e316
push sub_1003e0b1
mov [ rw-data ] esi
call sub_1002e8e4
pop ecx
sub_1002ea01
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_1002ea3a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_1002e101
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_100304d4
mov [ eax ] 0x16
call sub_10030482
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_100304d4
mov [ eax ] 0x16
call sub_10030482
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub ebx esi
push edi
push esi
push ebx
call sub_1002ea01
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub edi eax
mov eax edi
pop edi
cmp edi eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1003119c
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1003119c
add esp 0x10
inc esi
test edi edi
je r-xdata
sub_1002eafa
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002ea3a
add esp 0xc
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_100304d4
mov [ eax ] 0x16
call sub_10030482
mov eax 0x7fffffff
pop ebp
retn
pop ebp
jmp sub_1002ea01
sub_1002eb4c
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push esi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea esi [ ebx - 0x4 ]
test esi esi
je r-xdata
pop ebx
leave
retn
cmp esi ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop esi
inc eax
inc esi
inc ecx
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] esi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
sub_1002ec10
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp sub_100312f6
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
add esi 0x1
cmp al dl
je r-xdata
mov al [ esi ]
add esi 0x1
cmp al dh
jne r-xdata
test al al
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
add esi 0x1
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
sub_1002ec96
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_100304d4
mov [ eax ] 0x16
call sub_10030482
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_100315b9
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop edi
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_100313ae
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_1002ed1a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_1002e101
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_100304d4
mov [ eax ] 0x16
call sub_10030482
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi 0x7fffffff
cmp [ ebp + 0x10 ] edi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_100304d4
mov [ eax ] 0x16
call sub_10030482
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub ebx esi
push [ ebp + 0x10 ]
push esi
push ebx
call sub_10032170
add esp 0xc
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub edi eax
mov eax edi
jmp r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp edi eax
je r-xdata
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1003119c
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1003119c
add esp 0x10
inc esi
dec [ ebp + 0x10 ]
je r-xdata
sub_1002edfc
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002ed1a
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_100304d4
mov [ eax ] 0x16
call sub_10030482
mov eax 0x7fffffff
pop ebp
retn
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop ebp
jmp sub_10032170
sub_1002ee70
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
push 0x0
add eax 0x2ac18000
push 0x989680
adc ecx 0xfe624e21
push ecx
push eax
call sub_100324a0
test edx edx
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
or eax 0xffffffff
mov [ ebp - 0x4 ] eax
cmp eax 0x7fffd27f
jbe r-xdata
sub_1002eebe
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx ] 0x0
push edi
mov edi eax
je r-xdata
pop edi
pop ebx
pop ebp
retn
movzx ecx [ eax ]
test cx cx
je r-xdata
xor eax eax
mov edx ecx
sub eax ebx
cmp [ ecx ] 0x0
je r-xdata
movzx edx [ ecx ]
test dx dx
je r-xdata
mov eax edi
jmp r-xdata
add edi 0x2
movzx edx [ edi ]
add eax 0x2
test dx dx
jne r-xdata
movzx ebx [ eax + ecx ]
sub ebx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test dx dx
je r-xdata
add ecx 0x2
cmp [ eax + ecx ] bx
jne r-xdata
sub_1002ef1e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx eax
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov cx [ ebp + 0xc ]
cmp [ eax ] cx
je r-xdata
cmp [ eax ] cx
jne r-xdata
pop ebp
retn
xor eax eax
sub eax 0x2
cmp eax edx
je r-xdata
sub_1002ef4c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
push 0x0
add eax 0x2ac18000
push 0x989680
adc ecx 0xfe624e21
push ecx
push eax
call sub_100324a0
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_1002ef9d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
movzx eax [ ecx ]
test ax ax
je r-xdata
cmp ax [ edx ]
jne r-xdata
add ecx 0x2
add edx 0x2
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_1002efd6
push 0x8
push r--data
call sub_10030bc0
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
xor edi edi
cmp eax edi
jne r-xdata
call sub_10032bb4
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ rw-data ] edi
jle r-xdata
call sub_100300dd
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x3
jne r-xdata
call sub_1002fd88
push 0x214
push 0x1
call sub_1003082d
pop ecx
pop ecx
mov esi eax
cmp esi edi
je r-xdata
dec [ rw-data ]
mov [ ebp - 0x4 ] edi
cmp [ rw-data ] edi
jne r-xdata
call sub_10032b68
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_10032ad1
mov [ rw-data ] eax
call sub_10032508
test eax eax
jns r-xdata
call sub_10032bd2
jmp r-xdata
call sub_10030c05
retn 0xc
xor eax eax
inc eax
push edi
call sub_1003006f
pop ecx
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
call sub_10030b93
call sub_10032a16
test eax eax
js r-xdata
call sub_1002fdbc
jmp r-xdata
push esi
call sub_1003069b
pop ecx
jmp r-xdata
push edi
push esi
call sub_1002fdf9
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
or [ esi + 0x4 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002f0af
jmp r-xdata
call sub_1003274d
call sub_1002fdbc
call sub_10032bd2
call sub_1003274d
jmp r-xdata
call sub_100327a0
test eax eax
js r-xdata
push 0x0
call sub_100309a6
pop ecx
test eax eax
jne r-xdata
inc [ rw-data ]
jmp r-xdata
sub_1002f13a
push 0xc
push r--data
call sub_10030bc0
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ebp - 0x1c ] eax
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi eax
je r-xdata
cmp [ rw-data ] edx
je r-xdata
mov eax [ r--data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
xor eax eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
push edi
push esi
push ebx
call DllMain
mov [ ebp - 0x1c ] eax
cmp esi 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
push edi
push esi
push ebx
call sub_1002efd6
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
push edi
push esi
push ebx
call sub_1002efd6
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
push edi
push eax
push ebx
call DllMain
push edi
push 0x0
push ebx
call sub_1002efd6
mov eax [ r--data ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
and [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push edi
push 0x0
push ebx
call eax
mov eax [ r--data ]
test eax eax
je r-xdata
call sub_10030c05
retn
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
_start
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_1002f13a
pop ecx
pop ebp
retn 0xc
call sub_10032d50
sub_1002f253
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_10032deb
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_10032deb
pop ecx
sub_1002f359
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_1002f388
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_10032e00
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_1002f3ec
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_100331ae
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_10033081
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_10033081
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_1002e0f2
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_10032e00
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_1002f57c
push 0xc
push r--data
call sub_10030bc0
call sub_1002ff26
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_10033368
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002f617
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_10030c05
retn
push 0x20
call sub_10030ba2
cmp esi rw-data
je r-xdata
push esi
call sub_1003069b
pop ecx
sub_1002f620
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_1002e101
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_1002f69c
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_1002f620
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_1002f388
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_10032e00
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1002e0f2
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_1002f359
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_1002f3ec
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_10032e00
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_1002f359
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_1002f885
push 0x14
push r--data
call sub_10030bc0
or [ ebp - 0x20 ] 0xffffffff
call sub_1002ff26
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_1002f57c
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_1002f620
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_100307e8
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_10030c05
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_1002f69c
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_100304d4
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_1003069b
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_1003069b
pop ecx
push 0xd
call sub_10033368
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002f9e6
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_1003069b
pop ecx
sub_1002fa3d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_1002facc
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_1002fb65
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_1003069b
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_1003069b
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_1003069b
push [ esi + 0xc0 ]
call sub_1003069b
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_1003339b
push [ esi + 0xd4 ]
call sub_1003069b
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_1003069b
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_1003069b
pop ecx
push [ esi + 0xb0 ]
call sub_1003069b
push [ esi + 0xbc ]
call sub_1003069b
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_1003069b
push [ esi + 0xbc ]
call sub_1003377b
pop ecx
pop ecx
push eax
call sub_1003069b
pop ecx
push eax
call sub_1003069b
push [ esi + 0xbc ]
call sub_10033712
pop ecx
pop ecx
sub_1002fcb0
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_1002fa3d
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_1002facc
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_1002fb65
pop ecx
sub_1002fcfd
push 0xc
push r--data
call sub_10030bc0
call sub_1002ff26
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_10033368
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_1002fcb0
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002fd6a
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_1002ff26
mov esi [ eax + 0x6c ]
mov eax esi
call sub_10030c05
retn
push 0x20
call sub_10030ba2
sub_1002fd88
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_1002fdbc
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp sub_10033238
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_1002fdf9
push 0x8
push r--data
call sub_10030bc0
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_10033368
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002fe9b
push 0xc
call sub_10033368
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_1002fa3d
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002fea4
call sub_10030c05
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_1002fead
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_1002fd88
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_1003082d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_1003069b
pop ecx
xor esi esi
push 0x0
push esi
call sub_1002fdf9
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_1002ff40
push 0x8
push r--data
call sub_10030bc0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_10030c05
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_1003069b
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_1003069b
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_1003069b
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_1003069b
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_1003069b
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_1003069b
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_1003069b
pop ecx
push 0xd
call sub_10033368
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_1003069b
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003005a
push 0xc
call sub_10033368
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10030066
push esi
call sub_1003069b
pop ecx
push edi
call sub_1002facc
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_1003069b
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_1002fb65
pop ecx
sub_1003006f
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
push [ ebp + 0x8 ]
call sub_1002ff40
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_100300dd
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_1002fdbc
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_1002fd7f
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_1003094f
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_100331ee
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_1002fdbc
mov edi [ DecodePointer@IAT ]
push sub_1002ff40
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_1003082d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_1002fdf9
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_10030258
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
je r-xdata
leave
retn
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_1002e101
mov esi [ ebp - 0x14 ]
mov ecx [ esi + 0x14 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
mov eax 0x100
push 0x1
cmp [ ebp + 0x8 ] ax
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
lea edx [ ebp - 0x4 ]
push edx
push 0x1
lea edx [ ebp + 0x8 ]
push edx
push eax
push ecx
call sub_10033879
add esp 0x18
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push [ ebp + 0x8 ]
call sub_100338a8
pop ecx
test eax eax
movzx eax [ ebp + 0x8 ]
pop ecx
je r-xdata
movzx eax ax
jmp r-xdata
add ax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ esi + 0xcc ]
movzx eax [ ecx + eax ]
jmp r-xdata
pop esi
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10030307
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_10032e00
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_10032deb
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_1002e0f2
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_10032deb
pop ecx
sub_10030430
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_10030307
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_10030455
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10030430
int3
pop ebp
jmp eax
sub_10030492
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_100304fa
mov edi edi
push ebp
mov ebp esp
push esi
call sub_100304e7
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_10030492
pop ecx
mov esi eax
call sub_100304d4
mov [ eax ] esi
pop esi
pop ebp
retn
sub_1003051d
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_100304d4
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_100304d4
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_10030482
mov eax esi
jmp r-xdata
sub_1003057c
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_10030eb7
pop ecx
call sub_100304d4
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_10031154
push 0x1e
call sub_10030fa5
push 0xff
call sub_10030925
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_100304d4
mov [ eax ] esi
push ebx
call sub_10030eb7
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_100304d4
mov [ eax ] esi
sub_10030610
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_1003069b
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_100304d4
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_10030492
pop ecx
mov [ esi ] eax
pop esi
sub_100307e8
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_1003057c
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_1003082d
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10033d00
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_10030879
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10033d82
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_100308c7
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_100304d4
mov [ eax ] 0x16
call sub_10030482
or eax 0xffffffff
pop ebp
retn
sub_100308fa
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_1003094f
mov edi edi
push esi
call sub_1002fd76
mov esi eax
push esi
call sub_10030ea8
push esi
call sub_100302f8
push esi
call sub_1003118d
push esi
call sub_100340c9
push esi
call sub_10033ec4
push esi
call sub_10033eb3
add esp 0x18
pop esi
retn
sub_10030982
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_100309a6
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_100340d8
push r--data
push r--data
call sub_10030982
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_10034190
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_10032b8e
call sub_1002e8e4
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_10034190
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_10030a3d
push 0x20
push r--data
call sub_10030bc0
push 0x8
call sub_10033368
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10030b68
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_10030c05
retn
mov [ rw-data ] 0x1
push 0x8
call sub_1003328f
pop ecx
push [ ebp + 0x8 ]
call sub_10030925
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_1002fd76
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_1002fd76
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_10030bc0
push sub_10030c20
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_10030c20
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_1002e0f2
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_1002e0f2
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_1003438b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_10034342
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_1002e0f2
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_1002e0f2
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_10034372
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_1003438b
mov eax [ ebp + 0xc ]
push r--data
call sub_10034190
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_1002e0f2
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_10034359
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_1002e0f2
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_10030daf
push 0xc
push r--data
call sub_10030bc0
push 0xe
call sub_10033368
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10030e16
call sub_10030c05
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_1003069b
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_1003069b
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_10030e20
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_10030eb7
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_10030edf
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_10030f2b
call sub_10033f19
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_10033f26
pop ecx
push 0x3
call sub_10030b7d
int3
push 0x1
push 0x40000015
push 0x3
call sub_10030307
add esp 0xc
sub_10030f5e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_10030f7f
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_10030fa5
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_10030f7f
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1002e0f2
leave
retn
push 0x3
call sub_100346ce
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_100346ce
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_1003466b
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_10030610
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_10030430
push esi
call sub_10034650
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_1003466b
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_1003450e
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_10034650
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_10034583
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_1003450e
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_100343a2
add esp 0xc
jmp r-xdata
sub_10031154
push 0x3
call sub_100346ce
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_10030fa5
push 0xff
call sub_10030fa5
pop ecx
pop ecx
push 0x3
call sub_100346ce
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_1003119c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_1002e101
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_100304d4
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_1003470d
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_10034758
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_10033081
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_100312b1
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1003119c
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_100312f6
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_100313ae
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_100353a4
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_100304d4
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_100304d4
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_100351ef
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_1003507c
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_10035199
pop ecx
test eax eax
jne r-xdata
call sub_100351ef
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_1003507c
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_10035150
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_10034895
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_10031512
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_100313ae
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_10031545
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
mov ebx ecx
call sub_100304d4
test [ edi + 0xc ] 0x40
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
je r-xdata
call sub_100304d4
and [ eax ] 0x0
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
add [ esi ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax ]
mov ecx edi
dec ebx
call sub_10031512
inc [ ebp + 0x8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
call sub_100304d4
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
leave
retn
call sub_100304d4
cmp [ eax ] 0x2a
jne r-xdata
call sub_100304d4
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov ecx edi
mov al 0x3f
call sub_10031512
sub_100315b9
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x240 ] esi
mov [ ebp - 0x228 ] ebx
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x238 ] eax
call sub_1002e101
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_100304d4
mov [ eax ] 0x16
call sub_10030482
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor esi esi
cmp edi esi
je r-xdata
push esi
call sub_100353a4
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ edi ]
xor ecx ecx
mov [ ebp - 0x224 ] esi
mov [ ebp - 0x220 ] esi
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1002e0f2
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc edi
mov [ ebp - 0x23c ] edi
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov edi [ ebp - 0x23c ]
mov al [ edi ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x260 ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x260 ]
mov ebx [ ebp - 0x228 ]
xor esi esi
mov dl al
jmp r-xdata
sub_10032170
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_100321d1
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x3c ]
call sub_1002e101
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
xor ebx ebx
cmp ecx ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ ecx ] eax
cmp [ ebp + 0x14 ] ebx
je r-xdata
call sub_100304d4
mov [ eax ] 0x16
call sub_10030482
cmp [ ebp - 0x30 ] bl
je r-xdata
mov cl [ eax ]
push esi
mov esi [ ebp - 0x3c ]
push edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1 ] cl
lea edi [ eax + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x34 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ ebp - 0x1 ]
mov ecx [ esi + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x3c ]
push eax
movzx eax [ ebp - 0x1 ]
push 0x8
push eax
call sub_10034758
mov esi [ ebp - 0x3c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x1 ] 0x2d
mov [ ebp - 0x8 ] edi
jne r-xdata
mov al [ edi ]
mov [ ebp - 0x1 ] al
inc edi
jmp r-xdata
cmp eax ebx
je r-xdata
cmp [ ebp - 0x1 ] 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ esi + 0xac ] 0x1
jle r-xdata
push 0x10
pop ecx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov al [ edi ]
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x1 ] al
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp - 0x1 ] 0x30
je r-xdata
mov eax [ ebp + 0x14 ]
cdq
push edx
mov edi eax
push edi
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x28 ] edx
call sub_10035560
mov [ ebp - 0x20 ] ebx
mov ebx [ esi + 0xc8 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x1 ] 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and eax 0x103
je r-xdata
movsx esi cl
sub esi 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] ecx
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec [ ebp - 0x8 ]
test al 0x8
jne r-xdata
lea eax [ ecx - 0x61 ]
cmp al 0x19
movsx eax cl
ja r-xdata
cmp esi [ ebp + 0x14 ]
jae r-xdata
mov al [ edi + 0x1 ]
add edi 0x2
mov [ ebp - 0x1 ] al
mov [ ebp - 0x8 ] edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
mov ebx 0x80000000
test al 0x4
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
lea esi [ eax - 0x37 ]
sub eax 0x20
mov ecx [ ebp - 0x10 ]
or [ ebp + 0x18 ] 0x8
cmp ecx [ ebp - 0x18 ]
jb r-xdata
call sub_100304d4
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
push ecx
push [ ebp - 0x14 ]
push [ ebp - 0x28 ]
push edi
call sub_10035600
xor ecx ecx
add eax esi
adc edx ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
ja r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
or [ ebp - 0x14 ] 0xffffffff
or [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
pop edi
pop esi
test eax eax
je r-xdata
and eax 0x2
je r-xdata
mov cl [ ebp - 0x1 ]
movzx eax cl
movzx eax [ ebx + eax * 2 ]
mov edx eax
and edx 0x4
je r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jb r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x10 ] esi
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] ebx
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x10 ] ebx
ja r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] esi
jb r-xdata
jb r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
inc [ ebp - 0x8 ]
mov [ ebp - 0x1 ] al
jmp r-xdata
xor eax eax
cmp eax [ ebp - 0x20 ]
jb r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x34 ]
and [ eax + 0x70 ] 0xfffffffd
ja r-xdata
cmp [ ebp - 0x14 ] 0x0
ja r-xdata
ja r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jbe r-xdata
cmp esi [ ebp - 0x24 ]
jbe r-xdata
sub_1003246e
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_100321d1
add esp 0x14
pop ebp
retn
sub_100324a0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_10032508
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_1003082d
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_1003082d
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_1003274d
mov edi edi
push esi
push edi
mov edi rw-data
add edi 0x4
cmp edi rw-data
jl r-xdata
lea ecx [ eax + 0x800 ]
cmp eax ecx
jae r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
push [ edi ]
call sub_1003069b
and [ edi ] 0x0
pop ecx
lea esi [ eax + 0xc ]
mov eax [ edi ]
add esi 0x40
add eax 0x800
lea ecx [ esi - 0xc ]
cmp ecx eax
jb r-xdata
push esi
call [ DeleteCriticalSection@IAT ]
cmp [ esi - 0x4 ] 0x0
je r-xdata
sub_100327a0
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_1002fa1f
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_1003082d
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_10030610
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_10030610
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_1003069b
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_1003082d
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_1003069b
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_1003051d
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10030430
int3
add edi 0x4
sub_1003287c
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_10035687
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_10035687
pop ecx
test eax eax
je r-xdata
call sub_10035687
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_10032a16
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_1002fa1f
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_1003287c
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_100307e8
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_1003287c
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_10032ad1
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_100307e8
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_1003069b
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_10032b68
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_10032b8e
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_10032be6
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1002fead
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_10032d30
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_10032be6
pop ecx
pop ecx
pop ebp
retn
sub_10032d50
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_10032e00
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_1003569f
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_10032e7a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_1003069b
pop ecx
sub_10032e9a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_10032e7a
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_1003057c
pop ecx
cmp eax ebx
je r-xdata
call sub_10035760
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_10032e7a
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_1003057c
pop ecx
cmp eax ebx
je r-xdata
call sub_10035760
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_10033081
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1002e101
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10032e9a
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_100330c7
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_1002e0f2
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_10032e00
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_10032e7a
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_1003057c
pop ecx
cmp eax ebx
je r-xdata
call sub_10035760
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_100331ae
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1002e101
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100330c7
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_100331ee
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_10033238
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_1003069b
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_100332a6
push 0xc
push r--data
call sub_10030bc0
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_10031154
push 0x1e
call sub_10030fa5
push 0xff
call sub_10030925
push 0x18
call sub_100307e8
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_10033368
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_100304d4
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_10030c05
retn
push edi
call sub_1003069b
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_1003069b
pop ecx
call sub_100304d4
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003335f
mov eax [ ebp - 0x1c ]
sub_10033368
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_100332a6
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_10030ba2
sub_1003339b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_1003069b
push [ esi + 0x8 ]
call sub_1003069b
push [ esi + 0xc ]
call sub_1003069b
push [ esi + 0x10 ]
call sub_1003069b
push [ esi + 0x14 ]
call sub_1003069b
push [ esi + 0x18 ]
call sub_1003069b
push [ esi ]
call sub_1003069b
push [ esi + 0x20 ]
call sub_1003069b
push [ esi + 0x24 ]
call sub_1003069b
push [ esi + 0x28 ]
call sub_1003069b
push [ esi + 0x2c ]
call sub_1003069b
push [ esi + 0x30 ]
call sub_1003069b
push [ esi + 0x34 ]
call sub_1003069b
push [ esi + 0x1c ]
call sub_1003069b
push [ esi + 0x38 ]
call sub_1003069b
push [ esi + 0x3c ]
call sub_1003069b
add esp 0x40
push [ esi + 0x40 ]
call sub_1003069b
push [ esi + 0x44 ]
call sub_1003069b
push [ esi + 0x48 ]
call sub_1003069b
push [ esi + 0x4c ]
call sub_1003069b
push [ esi + 0x50 ]
call sub_1003069b
push [ esi + 0x54 ]
call sub_1003069b
push [ esi + 0x58 ]
call sub_1003069b
push [ esi + 0x5c ]
call sub_1003069b
push [ esi + 0x60 ]
call sub_1003069b
push [ esi + 0x64 ]
call sub_1003069b
push [ esi + 0x68 ]
call sub_1003069b
push [ esi + 0x6c ]
call sub_1003069b
push [ esi + 0x70 ]
call sub_1003069b
push [ esi + 0x74 ]
call sub_1003069b
push [ esi + 0x78 ]
call sub_1003069b
push [ esi + 0x7c ]
call sub_1003069b
add esp 0x40
push [ esi + 0x80 ]
call sub_1003069b
push [ esi + 0x84 ]
call sub_1003069b
push [ esi + 0x88 ]
call sub_1003069b
push [ esi + 0x8c ]
call sub_1003069b
push [ esi + 0x90 ]
call sub_1003069b
push [ esi + 0x94 ]
call sub_1003069b
push [ esi + 0x98 ]
call sub_1003069b
push [ esi + 0x9c ]
call sub_1003069b
push [ esi + 0xa0 ]
call sub_1003069b
push [ esi + 0xa4 ]
call sub_1003069b
push [ esi + 0xa8 ]
call sub_1003069b
push [ esi + 0xbc ]
call sub_1003069b
push [ esi + 0xc0 ]
call sub_1003069b
push [ esi + 0xc4 ]
call sub_1003069b
push [ esi + 0xc8 ]
call sub_1003069b
push [ esi + 0xcc ]
call sub_1003069b
add esp 0x40
push [ esi + 0xd0 ]
call sub_1003069b
push [ esi + 0xb8 ]
call sub_1003069b
push [ esi + 0xd8 ]
call sub_1003069b
push [ esi + 0xdc ]
call sub_1003069b
push [ esi + 0xe0 ]
call sub_1003069b
push [ esi + 0xe4 ]
call sub_1003069b
push [ esi + 0xe8 ]
call sub_1003069b
push [ esi + 0xec ]
call sub_1003069b
push [ esi + 0xd4 ]
call sub_1003069b
push [ esi + 0xf0 ]
call sub_1003069b
push [ esi + 0xf4 ]
call sub_1003069b
push [ esi + 0xf8 ]
call sub_1003069b
push [ esi + 0xfc ]
call sub_1003069b
push [ esi + 0x100 ]
call sub_1003069b
push [ esi + 0x104 ]
call sub_1003069b
push [ esi + 0x108 ]
call sub_1003069b
add esp 0x40
push [ esi + 0x10c ]
call sub_1003069b
push [ esi + 0x110 ]
call sub_1003069b
push [ esi + 0x114 ]
call sub_1003069b
push [ esi + 0x118 ]
call sub_1003069b
push [ esi + 0x11c ]
call sub_1003069b
push [ esi + 0x120 ]
call sub_1003069b
push [ esi + 0x124 ]
call sub_1003069b
push [ esi + 0x128 ]
call sub_1003069b
push [ esi + 0x12c ]
call sub_1003069b
push [ esi + 0x130 ]
call sub_1003069b
push [ esi + 0x134 ]
call sub_1003069b
push [ esi + 0x138 ]
call sub_1003069b
push [ esi + 0x13c ]
call sub_1003069b
push [ esi + 0x140 ]
call sub_1003069b
push [ esi + 0x144 ]
call sub_1003069b
push [ esi + 0x148 ]
call sub_1003069b
add esp 0x40
push [ esi + 0x14c ]
call sub_1003069b
push [ esi + 0x150 ]
call sub_1003069b
push [ esi + 0x154 ]
call sub_1003069b
push [ esi + 0x158 ]
call sub_1003069b
push [ esi + 0x15c ]
call sub_1003069b
push [ esi + 0x160 ]
call sub_1003069b
add esp 0x18
sub_10033712
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003069b
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003069b
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003069b
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_1003069b
pop ecx
push esi
call sub_1003069b
pop ecx
sub_1003377b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003069b
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003069b
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003069b
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003069b
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003069b
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003069b
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003069b
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003069b
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003069b
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003069b
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_1003069b
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_1003069b
pop ecx
push esi
call sub_1003069b
pop ecx
sub_10033879
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
pop ebp
retn
push eax
push [ ebp + 0x10 ]
call sub_1003578c
pop ecx
pop ecx
sub_100338a8
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
movzx eax [ ebp - 0x4 ]
and [ ebp - 0x4 ] eax
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_10033900
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_10033950
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_100339d4 ]
jmp [ ecx * 4 + jump_table_10033a54 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10033ac0 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_10033c5c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_10033b60 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10033c5c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_10033ac0 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_10033c5c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10033ac0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10033ac0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10033ac0 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10033c5c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10033c5c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10033c5c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_10033cc0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_10033d00
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_100304d4
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_10030eb7
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_10033d82
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_1003057c
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1003069b
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_10030eb7
pop ecx
call sub_100304d4
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_100304d4
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_10030492
pop ecx
mov [ esi ] eax
push esi
call sub_10030eb7
pop ecx
test eax eax
je r-xdata
call sub_100304d4
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_10030492
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_10033ee2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_10033f26
push 0x20
push r--data
call sub_10030bc0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_1002fead
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_10030c05
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_10033ee2
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_10030b7d
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_100304d4
mov [ eax ] 0x16
call sub_10030482
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_10033368
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_1002fd76
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003408d
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_100340d8
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_10034100
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_10034140
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10034190
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_10030c20
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_10034100
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_10034140
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10034250
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_100342e0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_100358d5
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_100358f4
jmp r-xdata
sub_100342e0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_1002e0f2
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_10034250
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_10034342
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_10034372
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_100343a2
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_1002fd76
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1002e0f2
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_1003450e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_100304d4
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_100304d4
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_10030482
mov eax esi
sub_10034583
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_100304d4
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_100304d4
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_10030482
mov eax esi
jmp r-xdata
sub_10034650
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_1003466b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_100304d4
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_100304d4
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_10030482
mov eax esi
sub_100346ce
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_100304d4
mov [ eax ] 0x16
call sub_10030482
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_1003470d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1002e101
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10034758
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_1002e101
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_1003470d
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_100331ae
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10034810
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_1003597d
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_100304d4
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_100304fa
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_10034895
push 0x14
push r--data
call sub_10030bc0
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_100304e7
and [ eax ] 0x0
call sub_100304d4
mov [ eax ] 0x9
call sub_100304e7
and [ eax ] 0x0
call sub_100304d4
mov [ eax ] 0x9
call sub_10030482
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_10030c05
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_100359e6
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_100304d4
mov [ eax ] 0x9
call sub_100304e7
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10034810
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10034975
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_1003497f
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_10035c20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_100304e7
mov [ eax ] edi
call sub_100304d4
mov [ eax ] 0x16
call sub_10030482
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_1002e0f2
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_100304e7
and [ eax ] 0x0
call sub_100304d4
mov [ eax ] 0x16
call sub_10030482
jmp r-xdata
push esi
call sub_10035199
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_10034810
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_1002ff26
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_100304d4
mov [ eax ] 0x1c
call sub_100304e7
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_100304fa
pop ecx
jmp r-xdata
call sub_100304d4
mov [ eax ] 0x9
call sub_100304e7
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_10034745
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_10035aac
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_10035c04
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_10035c04
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_10035aac
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_1003507c
push 0x10
push r--data
call sub_10030bc0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_100304e7
and [ eax ] 0x0
call sub_100304d4
mov [ eax ] 0x9
call sub_100304e7
and [ eax ] 0x0
call sub_100304d4
mov [ eax ] 0x9
call sub_10030482
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_10030c05
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_100359e6
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_100304d4
mov [ eax ] 0x9
call sub_100304e7
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_1003497f
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10035148
mov eax [ ebp - 0x1c ]
sub_10035150
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_100307e8
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_10035199
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_100304d4
mov [ eax ] 0x9
call sub_100304d4
mov [ eax ] 0x9
call sub_10030482
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_100351f5
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_1003082d
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_1003082d
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_100352c6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_10033368
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_10035307
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_10033368
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_10035339
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_1003328f
pop ecx
pop ebp
retn
sub_10035375
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_1003328f
pop ecx
pop ebp
retn
sub_100353a4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_100304d4
mov [ eax ] 0x16
call sub_10030482
or eax 0xffffffff
pop ebp
retn
sub_100353e0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_1002e101
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_100304d4
push 0x16
pop esi
mov [ eax ] esi
call sub_10030482
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_100304d4
mov [ eax ] 0x2a
call sub_100304d4
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_100304d4
push 0x22
pop esi
mov [ eax ] esi
call sub_10030482
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_10032e00
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_10032e00
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_10035560
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_10035600
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_10035634
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1002e101
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_1003569f
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_1003578c
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
add ecx 0x2
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub_100357c0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_100357e0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_1002e0f2
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_10035825
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_10035825
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_100357e0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_100358d5
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_100358f4
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_100358cc
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_100358d5
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_100358f7
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_100304d4
mov [ eax ] 0x9
call sub_100304e7
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_1003597d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_100304e7
and [ eax ] 0x0
call sub_100304d4
mov [ eax ] 0x9
call sub_100304e7
and [ eax ] 0x0
call sub_100304d4
mov [ eax ] 0x9
call sub_10030482
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_100359e6
push 0xc
push r--data
call sub_10030bc0
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_10033368
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_10030c05
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10035a7c
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_10035a85
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_10035aac
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_10035e7a
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_10035aee
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_1002e101
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_1003470d
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_100304d4
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_10035c20
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_10035c4b
push 0x10
push r--data
call sub_10030bc0
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_10033368
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10035cde
mov eax [ ebp - 0x1c ]
call sub_10030c05
retn
mov esi edi
mov eax [ rw-data ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_10035f1d
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_1003069b
pop ecx
mov eax [ rw-data ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_10035ce7
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_100353a4
pop ecx
push eax
call sub_1003507c
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_10035d4f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_10035ce7
pop ecx
test eax eax
je r-xdata
push esi
call sub_10035d97
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_100353a4
push eax
call sub_10035f91
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_10035d97
push 0x14
push r--data
call sub_10030bc0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_10033368
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10035e68
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_10030c05
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_10035307
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_10035e39
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_10035d4f
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_10035d4f
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_10035eb0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_100304d4
mov [ eax ] 0x16
call sub_10030482
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_10035ce7
push esi
mov edi eax
call sub_100361ca
push esi
call sub_100353a4
push eax
call sub_10036106
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_1003069b
and [ esi + 0x1c ] 0x0
pop ecx
sub_10035f1d
push 0xc
push r--data
call sub_10030bc0
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_100304d4
mov [ eax ] 0x16
call sub_10030482
or eax 0xffffffff
jmp r-xdata
push esi
call sub_100352c6
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_10035eb0
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10035f89
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_10030c05
retn
mov eax [ ebp - 0x1c ]
sub_10035f91
push 0x10
push r--data
call sub_10030bc0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_100304d4
mov [ eax ] 0x9
call sub_100304d4
mov [ eax ] 0x9
call sub_10030482
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_10030c05
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_100359e6
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_100304d4
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_1003597d
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10036062
mov eax [ ebp - 0x1c ]
call sub_100304e7
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_1003606a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_1003597d
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_100304fa
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_1003597d
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_1003597d
push 0x1
mov edi eax
call sub_1003597d
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_100358f7
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_10036106
push 0x10
push r--data
call sub_10030bc0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_100304e7
and [ eax ] 0x0
call sub_100304d4
mov [ eax ] 0x9
call sub_100304e7
and [ eax ] 0x0
call sub_100304d4
mov [ eax ] 0x9
call sub_10030482
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_10030c05
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_100359e6
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_100304d4
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_1003606a
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100361c2
mov eax [ ebp - 0x1c ]
sub_100361ca
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_1003069b
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_1003621d
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_1002e39e
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_10030edf
int3
sub_1003626a
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_1002e39e
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_10030edf
int3
sub_100362b7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1002e3fa
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
pop ecx
sub_100362de
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_10036317
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_1003636b
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10037332
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_100363a1
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_1002e0f2
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_10037332
add esp 0x20
pop esi
pop ebp
retn
sub_100363d4
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_100364ab
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_1002ff26
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_100364ab
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_1002e0f2
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_10037332
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_100363d4
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_10036317
pop ebx
leave
retn
sub_1003654a
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_10033e7b
call sub_10033e7b
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_100365bd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_1002ff26
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_1002ff26
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_100365e9
mov edi edi
push ebp
mov ebp esp
call sub_1002ff26
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_10036610
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1002ff26
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_1002ff26
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_1002ff26
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_10033e7b
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_10036662
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_100363a1
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_10037420
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_10036746
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1002e3fa
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_1002e8fb
pop ecx
sub_1003676d
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_10030e20
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_100367cc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434352
je r-xdata
call sub_1002ff26
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_1002ff26
dec [ eax + 0x90 ]
cmp eax 0xe06d7363
jne r-xdata
call sub_1002ff26
and [ eax + 0x90 ] 0x0
jmp sub_10033e2f
sub_1003681b
push 0x10
push r--data
call sub_10030bc0
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100368dd
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_1002ff26
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_10030c05
retn
call sub_10033e7b
call sub_10033e7b
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
mov ecx [ edi + 0x8 ]
mov esi [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + eax * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax * 8 + 0x4 ]
call sub_10037420
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_100368f7
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_1002ff26
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_1003693c
push 0x8
push r--data
call sub_10030bc0
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_10030c05
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_10036310
mov [ ebp - 0x4 ] 0xfffffffe
sub_10036991
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_100369ba
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_10033e7b
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
test ebx ebx
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_1003676d
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_10036a7e
push 0x2c
push r--data
call sub_10030bc0
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_100365bd
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_1002ff26
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_1002ff26
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_1002ff26
mov [ eax + 0x88 ] esi
call sub_1002ff26
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_10036662
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_10036ba4
mov eax [ ebp - 0x1c ]
call sub_10030c05
retn
sub_10036b17
mov esp [ ebp - 0x18 ]
call sub_1002ff26
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_1003681b
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_10036ba4
mov eax [ ebp - 0x1c ]
call sub_10030c05
retn
imul eax eax 0x14
mov edx [ eax + ebx + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + ebx + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_10036ba4
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_10036610
pop ecx
call sub_1002ff26
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_1002ff26
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_100365e9
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_1003693c
pop ecx
pop ecx
sub_10036c1a
push 0xc
push r--data
call sub_10030bc0
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_10037f97
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_10037f97
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_10033e7b
push ebx
push esi
call sub_10037f97
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_10037f97
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_10037f97
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_10037f97
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_10037f97
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_10037f97
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_1002e460
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_10037f97
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_10036991
pop ecx
pop ecx
push eax
push esi
call sub_1002e460
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_10030c05
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_10036991
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_10036d99
push 0x8
push r--data
call sub_10030bc0
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_10036991
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_10036310
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_10036c1a
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10030c05
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_10036991
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_10036310
jmp r-xdata
sub_10036e2b
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_10036d99
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_100362de
call sub_10036317
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_1003681b
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_10036a7e
add esp 0x28
test eax eax
je r-xdata
sub_10036e99
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_1002ff26
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_1002ff26
lea edi [ eax + 0x80 ]
call sub_1002fd76
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_1003654a
mov ecx [ ebp - 0x4 ]
add esp 0x14
cmp ecx [ ebp - 0xc ]
jae r-xdata
call sub_10033e7b
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
pop edi
add eax 0xc
mov [ ebp - 0x8 ] eax
push ebx
cmp eax 0xe0434352
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
jb r-xdata
cmp esi [ eax - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_100363d4
add esp 0x1c
test eax eax
jne r-xdata
lea edi [ eax - 0xc ]
cmp esi [ edi ]
jl r-xdata
pop ebx
mov ecx [ eax ]
shl ecx 0x4
add ecx [ eax + 0x4 ]
mov edx [ ecx - 0xc ]
test edx edx
je r-xdata
lea ebx [ ecx - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ edx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10036e2b
mov esi [ ebp + 0x1c ]
mov eax [ ebp - 0x8 ]
add esp 0x1c
sub_10036fa0
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
cmp eax 0x80
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_10033e7b
cmp ecx eax
jl r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_1002ff26
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_10033e7b
call sub_10033e2f
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_10036e99
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_1002ff26
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_1002ff26
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_1002ff26
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_10037f97
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_1003654a
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
jae r-xdata
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_10033e7b
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_1003693c
pop ecx
pop ecx
lea edi [ eax + 0x10 ]
mov [ ebp - 0x1c ] edi
call sub_1002ff26
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0x14
mov [ ebp - 0x1c ] edi
cmp eax [ ebp - 0x20 ]
jb r-xdata
cmp ecx [ edi - 0xc ]
jg r-xdata
call sub_1002ff26
mov edi [ eax + 0x94 ]
call sub_1002ff26
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_100369ba
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edi - 0x10 ]
mov [ ebp - 0x28 ] eax
cmp [ eax ] ecx
jg r-xdata
mov edi [ ebp + 0x18 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_100369ba
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_1002e937
test al al
jne r-xdata
call sub_10033e7b
cmp eax 0x19930522
jne r-xdata
call sub_1002ff26
call sub_1002ff26
call sub_1002ff26
mov [ eax + 0x88 ] esi
call sub_1002ff26
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
call sub_1003676d
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_1003693c
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp + 0x8 ] r--data
call sub_1002e39e
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_10030edf
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp - 0x28 ]
push [ ebp + 0x20 ]
mov ebx [ ebp - 0xc ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_10036e2b
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_10036317
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_1003681b
add esp 0x10
push [ esi + 0x1c ]
call sub_10036a35
sub_10037332
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_1002ff26
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_10036fa0
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_1003681b
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10037420
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_100358cc
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_100358cc
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_1003746c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1002e101
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_100312b1
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_1003802e
test eax eax
movsx eax [ esi ]
push eax
call sub_100312b1
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
add esi 0x2
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_100374e0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1002e101
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_10037562
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_1003757e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_10038104
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_1003805c
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_100375da
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_10030610
inc eax
push eax
push esi
add esi edi
push esi
call sub_1002e460
add esp 0x10
sub_1003761f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_1002e101
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp + 0x8 ] ecx
jbe r-xdata
call sub_100304d4
push 0x16
cmp [ ebp + 0xc ] ecx
jle r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
push edi
cmp [ ebp + 0x18 ] cl
je r-xdata
call sub_100304d4
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] ecx
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_100375da
pop esi
mov [ eax ] esi
call sub_10030482
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
mov cl [ esi + 0x1 ]
mov eax [ ebp - 0x10 ]
mov [ esi ] cl
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
inc esi
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10030430
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] eax
je r-xdata
push r--data
push ebx
push esi
call sub_1003051d
add esp 0xc
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
pop edi
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_1002e460
add esp 0xc
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi + 0x2 ] al
mov eax edx
pop esi
pop ebx
leave
retn
add [ esi + 0x4 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi + 0x3 ] al
mov eax edx
sub_10037780
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10038312
add esp 0x14
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_100304d4
mov [ eax ] ebx
call sub_10030482
mov eax ebx
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1002e0f2
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
test esi esi
setg cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_1003761f
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add eax edi
add ecx eax
push ecx
call sub_100381ac
add esp 0x10
test eax eax
je r-xdata
sub_10037847
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10037780
add esp 0x18
pop ebp
retn
sub_10037867
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_1002e101
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_100304d4
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_100304d4
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
mov [ eax ] esi
call sub_10030482
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
sbb ebx ebx
mov [ esi ] 0x30
mov [ esi + 0x1 ] al
mov ecx [ edi + 0x4 ]
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
mov [ esi + 0x2 ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
add esi 0x3
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_10037847
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov [ esi ] 0x30
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
push 0x65
add esi 0x2
push esi
call sub_10037fb0
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_10038480
add ax 0x30
movzx eax ax
cmp eax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_10038480
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_10032e00
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
call sub_10038480
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_100383a0
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
mov edi esi
mov [ esi ] 0x30
cmp edx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_100383a0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_100383a0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_10037bdd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov edi eax
mov esi [ edi + 0x4 ]
mov ebx ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_1002e101
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_100304d4
push 0x16
pop esi
mov [ eax ] esi
call sub_10030482
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edi ] 0x2d
sete al
add eax esi
mov [ eax + ebx ] 0x30
add esi eax
push esi
lea ebx [ esi + 0x1 ]
call sub_10030610
inc eax
push eax
push esi
push ebx
call sub_1002e460
mov [ esi ] 0x30
add esp 0x10
mov esi ebx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
lea ebx [ esi + 0x1 ]
call sub_10030610
inc eax
push eax
push esi
push ebx
call sub_1002e460
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov edi [ edi + 0x4 ]
add esp 0x10
test edi edi
jns r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg edi
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp + 0xc ] edi
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax ebx
call sub_100375da
push edi
push 0x30
push ebx
call sub_10032e00
add esp 0xc
sub_10037ce0
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10038312
add esp 0x14
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
call sub_100304d4
mov [ eax ] esi
call sub_10030482
mov eax esi
jmp r-xdata
or eax 0xffffffff
cmp ebx eax
je r-xdata
call sub_100304d4
mov [ eax ] esi
call sub_10030482
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_1002e0f2
leave
retn
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_100381ac
add esp 0x10
test eax eax
je r-xdata
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
mov eax ebx
sete cl
sub eax ecx
pop ebx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push esi
push ebx
mov ecx edi
call sub_10037bdd
add esp 0x10
mov [ edi ] 0x0
jmp r-xdata
sub_10037da1
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10038312
add esp 0x14
test esi esi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
call sub_100304d4
mov [ eax ] edi
call sub_10030482
mov eax edi
jmp r-xdata
push ebx
mov ebx [ ebp - 0x28 ]
xor eax eax
dec ebx
cmp [ ebp - 0x2c ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_1002e0f2
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
dec eax
cmp ebx eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_100381ac
add esp 0x10
test eax eax
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_1003761f
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
pop ebx
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_10037bdd
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] al
sub_10037e8e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10037780
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10037ce0
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10037867
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10037da1
jmp r-xdata
sub_10037f16
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10037e8e
add esp 0x1c
pop ebp
retn
sub_10037f39
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_1003849f
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_10030430
sub_10037f61
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_10037fb0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_10037fdd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1002e101
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_10034758
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1003802e
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_10037fdd
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_1003805c
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_1002e101
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10038fa0
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_100384fe
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1002e0f2
leave
retn
sub_10038104
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_1002e101
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10038fa0
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_10038a4f
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1002e0f2
leave
retn
sub_100381ac
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ecx + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
call sub_100304d4
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
mov [ esi ] al
cmp edx eax
jle r-xdata
pop esi
pop ebx
pop ebp
retn
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edx
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax edi
test edx edx
jle r-xdata
call sub_100304d4
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov [ eax ] 0x0
test edx edx
js r-xdata
mov cl [ ebx ]
test cl cl
je r-xdata
call sub_10030482
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ ebx ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc ebx
jmp r-xdata
push edi
call sub_10030610
inc eax
push eax
push edi
push esi
call sub_1002e460
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
test edx edx
jg r-xdata
xor eax eax
pop edi
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_1003825f
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + 0x6 ]
push ebx
mov ebx eax
shr ebx 0x4
and eax 0x8000
push esi
mov edx 0x7ff
and ebx edx
push edi
mov [ ebp + 0xc ] eax
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
movzx edi bx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test edi edi
je r-xdata
xor edx edx
cmp eax edx
jne r-xdata
cmp edi edx
je r-xdata
add ebx 0x3c01
mov [ ebp - 0x4 ] edx
cmp ecx edx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ebx 0x3c00
jmp r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov [ eax ] edx
jmp r-xdata
mov edx ecx
shr edx 0x15
shl eax 0xb
or edx eax
or edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl ecx 0xb
jmp r-xdata
movzx edi bx
mov ecx [ eax ]
mov ebx ecx
shr ebx 0x1f
add edx edx
or edx ebx
add ecx ecx
add edi 0xffff
mov ecx [ ebp + 0xc ]
or ecx edi
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_10038312
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1003825f
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_1003967c
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_1003051d
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10030430
int3
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_1002e0f2
leave
retn
sub_100383a0
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_10038480
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_1003849f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
mov esi [ ebp + 0x8 ]
test ecx 0xfcf0fce0
je r-xdata
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_1003a0a2
call sub_1003a0a2
mov [ esi ] eax
jmp r-xdata
call sub_100304d4
push 0x16
pop esi
mov [ eax ] esi
call sub_10030482
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_1003a0a2
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_100384fe
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_1002e0f2
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_10038a4f
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_1002e0f2
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_10038fa0
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x6c ] ecx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_100304d4
mov [ eax ] 0x16
call sub_10030482
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_1002e0f2
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
push ebx
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_1003964c ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_1003a3b4
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
sub al 0x64
cmp al 0x1
ja r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
lea ebx [ ecx + eax ]
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x70 ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
add edi 0x2
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jns r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
cmp [ ebp - 0x2c ] ax
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_1003967c
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx eax [ ebp + 0x10 ]
movzx edx [ ebp + 0x10 ]
mov ecx 0x8000
and eax ecx
push ebx
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x1 ]
push esi
and edx eax
cmp [ ebp - 0x60 ] 0x0
push edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x30 ] 0xcccccccc
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x74 ] 0x1
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
mov eax esi
shr eax 0x18
shr ebx 0x8
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
mov [ ebp - 0x20 ] cx
movsx ebx ax
mov ecx rw-data
sub ecx 0x60
neg ebx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x68 ] ecx
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp ecx eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
test ebx ebx
jns r-xdata
test ecx 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0x60 ] cx
mov [ ebx ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x3001
mov [ ebx + 0x5 ] 0x0
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
mov ebx [ ebp - 0x26 ]
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx ax
jae r-xdata
je r-xdata
mov eax rw-data
sub eax 0x60
neg ebx
mov [ ebp - 0x68 ] eax
test ebx ebx
xor edx edx
cmp [ ebp - 0x60 ] dx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_1002e0f2
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x68 ] 0x54
mov ecx ebx
sar ebx 0x3
and ecx 0x7
je r-xdata
cmp ecx eax
jne r-xdata
cmp ecx 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_1003051d
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x60 ] ax
mov [ edx + 0x3 ] 0x3001
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x68 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10030430
mov [ ebx + 0x3 ] 0x6
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jns r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
xor edx [ ebp - 0x16 ]
mov esi 0x7fff
and edx 0x8000
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x16 ]
and edx esi
and ecx esi
lea esi [ ecx + edx ]
movzx edi si
mov esi 0x7fff
cmp dx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x58 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp cx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_1003051d
add esp 0xc
test eax eax
jne r-xdata
mov al [ ebx - 0x1 ]
sub ebx 0x2
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x54 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
add edi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x58 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x48 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp cx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x60 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jns r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x58 ] 0x2
add eax 0x2
dec [ ebp - 0x48 ]
cmp [ ebp - 0x48 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x54 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x58 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
add esi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x6c ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x70 ] 0x2
sub [ ebp - 0x6c ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x70 ]
movzx ecx [ eax ]
mov eax [ ebp - 0x6c ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x48 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x48 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x58 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x58 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_10039f74
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_1003a002
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_1003a0a2
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_10039f74
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_1003a002
push eax
mov [ ebp - 0xc ] eax
call sub_1003a598
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_1003a3b4
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x404e
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
cmp [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp + 0x10 ] ebx
mov edi [ eax + 0x8 ]
test edi 0x8000
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] 0x1
cmp edx [ ebp - 0x18 ]
jae r-xdata
mov cx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0xa ] cx
pop ebx
leave
retn
mov ecx [ eax + 0x4 ]
mov ecx [ eax ]
add [ ebp - 0x4 ] 0xfff0
mov edi edx
mov esi ecx
shr esi 0x10
shl edx 0x10
shr edi 0x10
or edx esi
shl ecx 0x10
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
cmp edi ebx
je r-xdata
mov [ eax + 0x8 ] edi
mov esi [ ebp - 0x14 ]
and [ ebp + 0x10 ] 0x0
lea ebx [ edi + esi ]
cmp ebx edi
jb r-xdata
mov esi [ ebp - 0x8 ]
and [ ebp + 0x10 ] 0x0
lea edi [ esi + 0x1 ]
cmp edi esi
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ eax ] edx
je r-xdata
mov ebx [ eax ]
add [ ebp - 0x4 ] 0xffff
mov esi ecx
mov edx ebx
shr esi 0x1f
add edi edi
shr edx 0x1f
add ecx ecx
or edi esi
add ebx ebx
or ecx edx
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
test edi 0x8000
je r-xdata
mov [ ebp + 0x10 ] 0x1
cmp ebx esi
jae r-xdata
mov [ ebp + 0x10 ] 0x1
cmp edi 0x1
jae r-xdata
add ecx [ ebp - 0x10 ]
and [ ebp - 0x8 ] 0x0
mov edi ebx
add ecx ecx
mov esi edx
shr edi 0x1f
or ecx edi
shr esi 0x1f
add ebx ebx
add edx edx
or ebx esi
mov [ eax + 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
movsx esi [ ecx ]
lea ecx [ edx + esi ]
mov [ ebp - 0x18 ] esi
cmp ecx edx
jb r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] ebx
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] edi
je r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx esi
jae r-xdata
dec [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
ja r-xdata
lea ecx [ ebx + 0x1 ]
xor edx edx
cmp ecx ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
mov [ eax ] ecx
je r-xdata
mov ecx [ eax ]
mov esi eax
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx ecx
lea edi [ ecx + ecx ]
shr edx 0x1f
lea ecx [ ebx + ebx ]
or ecx edx
mov edx [ ebp + 0x10 ]
and [ ebp + 0x10 ] 0x0
mov esi ebx
mov ebx ecx
mov [ ebp - 0x8 ] edi
shr esi 0x1f
add edx edx
or edx esi
mov esi [ ebp - 0x8 ]
add ecx ecx
shr edi 0x1f
or ecx edi
mov edi ecx
mov [ ebp - 0x8 ] ecx
lea ecx [ edx + edx ]
mov edx [ ebp - 0x18 ]
add esi esi
shr ebx 0x1f
or ecx ebx
add edx esi
mov [ eax ] esi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ecx
cmp edx esi
jb r-xdata
xor ebx ebx
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
mov ecx [ ebp - 0xc ]
inc ecx
mov [ ebp + 0x10 ] ecx
mov [ eax + 0x8 ] ecx
mov ebx ecx
mov [ eax + 0x4 ] ecx
test edx edx
je r-xdata
sub_1003a598
push 0x8
push r--data
call sub_10030bc0
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_10030c05
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_10001054
mov eax 0x1
retn
__Reserved00
call sub_10001000
retn 0xc
__Reserved01
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push r--data
call edx
pop ebp
retn 0x4
__Reserved05
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
call eax
pop ebp
retn 0xc
CrashSend
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov edx [ ebp + 0xc ]
mov eax [ eax + 0x14 ]
push edx
call eax
pop ebp
retn 0x8
CrashSetCallback
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0xc ]
push edx
mov edx [ ebp + 0xc ]
push edx
call eax
pop ebp
retn 0xc
CrashErrors
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
pop ebp
retn 0x4
sub_10001370
mov [ ecx ] r--data
jmp sub_1002e3fa
sub_10001790
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_1002e42c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10001a90
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x1c ]
push edx
mov edx [ ebp + 0xc ]
push edx
call eax
pop ebp
retn 0xc
sub_10001b30
push 0x4
call sub_1002e957
add esp 0x4
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
retn
sub_10001be0
mov [ ecx ] r--data
retn
sub_10001cd0
mov eax [ ecx + 0x48 ]
retn
sub_10002560
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov ecx edi
mov [ edi ] 0x0
call sub_10002640
mov eax edi
retn
sub_100025b0
push ebx
mov ebx eax
call sub_10002870
mov eax [ ebx ]
push eax
call sub_1002e8fb
add esp 0x4
pop ebx
retn
sub_10003ed0
mov ecx [ eax ]
push ecx
call sub_1002e8fb
pop ecx
retn
sub_10004390
mov eax [ ecx + 0x4 ]
mov eax [ eax + 0x20 ]
retn
sub_100043a0
mov eax [ ecx + 0x4 ]
add eax 0x4
cmp [ eax + 0x14 ] 0x10
jb r-xdata
retn
mov eax [ eax ]
sub_100043e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push edi
mov edi [ ecx + 0x4 ]
call sub_10002d00
pop edi
pop ebp
retn 0x4
sub_10004400
push edi
mov edi [ ecx + 0x4 ]
call sub_10002cb0
mov [ edi + 0x20 ] 0x1
pop edi
retn
sub_100046e0
mov eax [ ecx + 0x4 ]
add eax 0x24
cmp [ eax + 0x14 ] 0x10
jb r-xdata
push eax
call sub_1002ee4f
add esp 0x4
retn
mov eax [ eax ]
sub_100048a0
push edi
mov edi [ ecx + 0x4 ]
call sub_10002cb0
pop edi
retn
sub_100048b0
mov eax [ ecx + 0x4 ]
mov eax [ eax + 0x44 ]
retn
sub_10004a80
mov [ ecx + 0x4 ] 0x0
retn
sub_10004b00
mov eax [ ecx + 0x4 ]
retn
sub_10004ea0
mov [ eax ] r--data
retn
sub_10004f40
mov eax 0x1
retn
sub_10005030
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x1
jb r-xdata
call sub_10005510
pop ebp
retn 0x4
xor eax eax
pop ebp
retn 0x4
sub_100050e0
mov eax 0x2
retn
j_sub_10004a90
jmp sub_10004a90
sub_100054f0
mov eax [ ecx + 0x4 ]
imul eax eax 0x660d
sub eax 0xca1
and eax 0xffff
mov [ ecx + 0x4 ] eax
retn
sub_10005f40
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x31415352
sete al
pop ebp
retn 0x4
sub_10006d40
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov edx [ eax + 0x4 ]
xor ecx ecx
cmp edx [ ebp + 0x8 ]
sete cl
mov eax ecx
pop ebp
retn 0x4
sub_10006f00
mov eax [ ecx + 0x28 ]
retn
sub_10006f10
mov eax [ ecx + 0x20 ]
mov eax [ eax + 0x4 ]
retn
sub_10007b80
mov eax [ ecx + 0x24 ]
retn
sub_10007b90
mov [ ecx ] r--data
retn
sub_10007fd0
mov eax [ ecx + 0x24 ]
mov eax [ eax + 0x4 ]
retn
sub_10008480
sub ecx 0x4
jmp sub_10007df0
sub_10008490
sub ecx 0x4
jmp sub_10007fd0
sub_100084a0
sub ecx 0x4
jmp sub_10007ca0
sub_100084b0
sub ecx 0x4
jmp sub_100081f0
sub_100084c0
sub ecx 0x4
jmp sub_10007ba0
sub_100084d0
sub ecx 0x4
jmp sub_10007c20
sub_100084e0
sub ecx 0x4
jmp sub_10007f40
sub_100084f0
sub ecx 0x4
jmp sub_10007db0
sub_10008500
sub ecx 0x4
jmp sub_10007e30
sub_10008510
sub ecx 0x4
jmp sub_10007e80
sub_10008520
sub ecx 0x4
jmp sub_10007c60
sub_10008530
sub ecx 0x4
jmp sub_10007bd0
sub_10008540
sub ecx 0x4
jmp sub_10007ed0
sub_10008550
sub ecx 0x4
jmp sub_10007d70
sub_10008560
sub ecx 0x4
jmp sub_10007d20
sub_10008570
sub ecx 0x4
jmp sub_10007f00
sub_10008580
sub ecx 0x4
jmp sub_10007ce0
sub_10008780
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
call sub_10006f60
pop ebx
pop ebp
retn 0x4
sub_1000aa70
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
pop ebp
retn 0x4
sub_1000aaf0
mov [ ecx + 0x8 ] 0x0
retn
sub_1000ab00
mov eax [ ecx + 0x8 ]
retn
sub_1000ab50
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
mov edx [ ebp + 0x8 ]
cmp edx eax
ja r-xdata
mov [ ecx + 0x8 ] eax
pop ebp
retn 0x4
mov [ ecx + 0x8 ] edx
pop ebp
retn 0x4
sub_1000ab70
mov [ ecx + 0xc ] 0x0
retn
sub_1000ab80
mov eax [ ecx + 0xc ]
retn
sub_1000ac10
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0xc ] eax
pop ebp
retn 0x4
sub_1000c620
mov [ ecx ] r--data
retn
sub_1000ca70
mov eax [ ecx + 0x1c ]
sub eax [ ecx + 0x18 ]
sar eax 0x2
retn
sub_1000ca80
push ebp
mov ebp esp
mov eax [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + ecx * 4 ]
pop ebp
retn 0x4
sub_1000d0b0
cmp [ esi + 0x1c ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x1c ] 0xf
mov [ esi + 0x18 ] eax
mov [ esi + 0x8 ] al
retn
mov eax [ esi + 0x8 ]
push eax
call sub_1002e8fb
add esp 0x4
sub_1000df50
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x94 ]
mov [ ecx + 0x14 ] edx
pop ebp
retn 0x4
sub_1000e800
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] edx
pop ebp
retn 0x8
sub_1000e8a0
xor eax eax
cmp eax [ ecx + 0x3c ]
sbb eax eax
neg eax
retn
sub_1000e8b0
xor eax eax
cmp eax [ ecx + 0x20 ]
sbb eax eax
neg eax
retn
sub_1000e8c0
xor eax eax
cmp eax [ ecx + 0x58 ]
sbb eax eax
neg eax
retn
sub_1000e8d0
push esi
mov esi [ ecx + 0x68 ]
sub esi [ ecx + 0x64 ]
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
pop esi
retn
sub_1000e940
mov eax [ ecx + 0xb8 ]
retn
sub_1000e950
push esi
mov esi [ ecx + 0x78 ]
sub esi [ ecx + 0x74 ]
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
pop esi
retn
sub_1000e970
push esi
mov esi [ ecx + 0x88 ]
sub esi [ ecx + 0x84 ]
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
pop esi
retn
sub_1000ea40
mov eax [ ecx + 0x94 ]
retn
sub_1000ea50
mov eax [ ecx + 0x98 ]
shl eax 0x14
retn
sub_1000ea60
cmp [ ecx + 0xb0 ] 0x10
lea eax [ ecx + 0x9c ]
jb r-xdata
retn
mov eax [ eax ]
sub_1000eff0
cmp [ ecx + 0x108 ] 0x10
mov edx [ ecx + 0x104 ]
lea eax [ ecx + 0xf4 ]
jb r-xdata
mov ecx [ ecx + 0x110 ]
push ecx
push edx
push eax
call sub_100061c0
add esp 0xc
retn
mov eax [ eax ]
sub_100100f0
mov eax [ ebp - 0x14 ]
push eax
call sub_1002e8fb
add esp 0x4
push 0x0
push 0x0
call sub_10030edf
int3
sub_100105c0
mov eax 0x41df815b
retn
sub_100105d0
mov eax 0x645704
retn
sub_100105e0
mov eax 0x4
retn
sub_10011060
mov eax [ ecx + 0x18 ]
retn
sub_100114e0
mov eax [ ecx + 0x30 ]
retn
sub_100119d0
mov eax [ ecx + 0x10 ]
retn
sub_100119e0
mov eax ecx
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
mov eax [ eax + 0x8 ]
mov edx [ edx + 0x50 ]
push eax
call edx
retn
sub_10011ae0
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x18 ]
pop ebp
jmp eax
sub_10011be0
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x3c ]
pop ebp
jmp eax
sub_10011bf0
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x40 ]
jmp edx
sub_10012130
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
pop ebp
jmp eax
sub_10012670
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x14 ]
pop ebp
jmp eax
sub_10012680
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x1c ]
pop ebp
jmp eax
sub_10012690
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x28 ]
pop ebp
jmp eax
sub_10012700
push ebp
mov ebp esp
mov ecx [ ecx + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
pop ebp
jmp eax
sub_10012b20
sub ecx 0xc
jmp sub_10011bf0
sub_10013a90
mov eax [ ecx + 0x60 ]
retn
sub_10013de0
mov ecx [ ecx + 0x60 ]
mov eax [ ecx ]
mov edx [ eax + 0xc ]
jmp edx
sub_10014450
mov eax [ ecx + 0x4 ]
mov ecx [ eax + 0x24 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
jmp eax
sub_10014640
mov esi [ ebp + 0x8 ]
call sub_1002be10
push 0x0
push 0x0
call sub_10030edf
int3
sub_100156f0
mov ecx [ eax + 0x4 ]
push ecx
call sub_1002e8fb
pop ecx
retn
sub_10015700
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
lea esp [ esp ]
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_10015bf0
mov [ ecx ] r--data
retn
sub_10015c00
retn 0x4
sub_10015f90
mov eax [ ecx + 0x4 ]
push eax
call sub_10013830
retn
sub_10016df0
sub ecx 0x4
jmp sub_100166c0
sub_10016e00
sub ecx 0x8
jmp sub_100166c0
sub_10017810
push esi
mov esi ecx
lea eax [ esi + 0x8 ]
push eax
mov [ esi ] r--data
call [ DeleteCriticalSection@IAT ]
mov [ esi ] r--data
pop esi
retn
sub_100178d0
push 0x1
add ecx 0x4
push ecx
call [ InterlockedExchange@IAT ]
retn
sub_100178e0
mov [ ecx ] r--data
retn
sub_10017980
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ecx + 0x4 ]
push eax
call sub_10017c50
pop esi
pop ebp
retn 0x4
sub_10017cc0
push ebp
mov ebp esp
push ecx
add ecx 0x8
push esi
mov [ ebp - 0x4 ] 0x0
call sub_10018830
mov eax esi
mov esp ebp
pop ebp
retn
sub_10018810
mov esi [ ebp + 0x8 ]
call sub_1000fd10
push 0x0
push 0x0
call sub_10030edf
int3
sub_100188d3
mov esi [ ebp + 0x8 ]
call sub_1002be10
push 0x0
push 0x0
call sub_10030edf
int3
sub_100189a0
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
pop ebp
retn 0x4
sub_10018c50
mov eax [ ecx + 0x20 ]
retn
sub_10018c60
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
pop ebp
retn 0x4
sub_10018e30
mov eax 0x1f
retn
sub_10018f40
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x14 ]
call eax
pop ebp
retn 0x4
sub_100190d0
mov eax 0xf
retn
sub_10019130
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
pop ebp
retn 0x4
sub_10019150
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
call eax
pop ebp
retn 0x4
sub_10019ba0
mov ecx [ ecx + 0x8 ]
test ecx ecx
jne r-xdata
jmp sub_10019510
xor eax eax
retn
sub_10019da0
mov eax [ ecx + 0x4 ]
mov [ ecx + 0x4 ] 0x0
retn
sub_1001a010
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x1
pop ebp
retn 0x4
sub_1001b097
mov eax [ ebp - 0x14 ]
push eax
call sub_1002e8fb
add esp 0x4
push 0x0
push 0x0
call sub_10030edf
int3
sub_1001b4d0
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
retn
lea esp [ esp ]
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x45 ] 0x0
je r-xdata
sub_1001e3e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push ecx
call sub_1001e540
pop ebp
retn 0x4
sub_1001e400
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x0
pop ebp
retn 0x4
sub_1001e690
retn
sub_1001ee70
push ebp
mov ebp esp
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
pop ebp
jmp eax
sub_1001ee80
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jne r-xdata
call sub_1001e710
pop esi
retn
call sub_1001e9e0
sub_1001f670
push esi
mov esi eax
call sub_1001fdd0
mov eax [ esi ]
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi ] 0x0
pop esi
retn
sub_10020dc0
mov eax [ ecx + 0x4 ]
push 0x0
push 0x0
push 0x2
push eax
call [ PostMessageW@IAT ]
retn
sub_100214a0
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x19 ] 0x0
jne r-xdata
retn
lea esp [ esp ]
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x19 ] 0x0
je r-xdata
sub_10021c20
mov [ ecx ] r--data
retn
sub_10022070
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
jmp edx
sub_10022130
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x2c ]
jmp edx
sub_100221b0
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
jmp edx
sub_100225e0
mov [ ecx ] r--data
retn
sub_10022650
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0xc ]
pop ebp
jmp eax
sub_10022870
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
jmp edx
sub_10022880
push ebp
mov ebp esp
cmp [ ecx + 0x38 ] 0x0
je r-xdata
mov eax [ ecx + 0x4 ]
mov eax [ eax + 0xc ]
add ecx 0x4
pop ebp
jmp eax
xor eax eax
pop ebp
retn 0x4
sub_10022aa0
push esi
mov esi eax
call sub_10022f00
mov eax [ esi ]
push eax
call sub_1002e8fb
add esp 0x4
mov [ esi ] 0x0
pop esi
retn
sub_10022d40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
add ecx 0xa4
push ecx
call [ InterlockedExchange@IAT ]
pop ebp
retn 0x4
sub_10022d60
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
pop ebp
jmp eax
sub_10022f70
mov edx [ ecx + 0xc ]
mov ecx [ ecx ]
mov [ eax + 0x4 ] 0x0
mov [ eax ] ecx
mov [ eax + 0x8 ] edx
retn
sub_1002400c
mov edx [ ebp - 0x14 ]
push edx
call sub_1002e8fb
add esp 0x4
push 0x0
push 0x0
call sub_10030edf
int3
sub_10025790
lea eax [ ecx + 0x18 ]
retn
sub_10025bb0
or eax 0xffffffff
retn
sub_10025ea0
push esi
mov esi ecx
mov eax [ esi + 0x24 ]
test eax eax
jne r-xdata
pop esi
retn
mov eax [ esi + 0x28 ]
push eax
call sub_10026120
add esp 0x4
mov [ esi + 0x24 ] eax
sub_10026440
cmp [ ecx + 0x38 ] 0x8
lea eax [ ecx + 0x24 ]
jb r-xdata
retn
mov eax [ eax ]
sub_10026450
cmp [ ecx + 0x18 ] 0x8
lea eax [ ecx + 0x4 ]
jb r-xdata
retn
mov eax [ eax ]
sub_10026540
mov eax [ ecx + 0x44 ]
retn
sub_10026550
push esi
mov esi ecx
call sub_10025de0
pop esi
retn
sub_10026810
cmp [ ecx + 0x38 ] 0x8
lea eax [ ecx + 0x24 ]
jb r-xdata
mov ecx [ ecx + 0x40 ]
lea eax [ eax + ecx * 2 ]
retn
mov eax [ eax ]
sub_10026830
mov eax [ ecx + 0x18 ]
push edi
add ecx 0x8
push r--data
xor edi edi
call sub_10016d80
neg eax
sbb eax eax
inc eax
pop edi
retn
sub_10026b30
xor eax eax
retn
sub_10026fe0
lea eax [ ecx + 0x34 ]
retn
sub_100277b0
mov eax [ ebp - 0x14 ]
push eax
call sub_1002e8fb
add esp 0x4
push 0x0
push 0x0
call sub_10030edf
int3
sub_10027890
lea eax [ ecx + 0x50 ]
retn
sub_10029ce0
call [ GetTickCount@IAT ]
xor edx edx
mov ecx 0x37
div ecx
mov eax edx
retn
sub_10029d30
mov eax 0x1
retn 0x4
sub_1002a270
mov [ ecx ] r--data
retn
sub_1002a530
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call [ DeleteFileW@IAT ]
dec eax
neg eax
sbb eax eax
inc eax
pop ebp
retn 0x4
sub_1002a550
cmp [ ecx + 0x34 ] 0x8
lea eax [ ecx + 0x20 ]
jb r-xdata
retn
mov eax [ eax ]
sub_1002aab0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
call sub_1002ae00
pop ebx
pop ebp
retn 0xc
sub_1002b1e0
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x30 ]
pop ebp
jmp eax
sub_1002b1f0
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x34 ]
pop ebp
jmp eax
sub_1002b390
xor eax eax
retn 0xc
sub_1002bac0
mov [ ecx ] r--data
retn
sub_1002be10
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_1002e8fb
add esp 0x4
sub_1002bf3e
mov ecx [ ebp - 0x14 ]
push ecx
call sub_1002e8fb
add esp 0x4
push 0x0
push 0x0
call sub_10030edf
int3
sub_1002d2d0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_1002cf80
add esp 0x8
pop ebp
retn 0x8
sub_1002d2f0
mov [ ecx ] r--data
retn
sub_1002e316
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_1002e333
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_1002e380
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_1003069b
pop ecx
sub_1002e3fa
mov [ ecx ] r--data
jmp sub_1002e380
sub_1002e8de
call sub_10030946
retn
sub_1002e8e4
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_1002e8a8
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_1002e8fb
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1003069b
sub_1002e906
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_10030daf
pop ecx
retn
sub_1002e9d7
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_10030fa5
push 0x1
push 0x0
call sub_10030f5e
add esp 0xc
jmp sub_10030f2b
call eax
sub_1002eb41
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1002e957
sub_1002ee4f
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_1003246e
add esp 0xc
pop ebp
retn
sub_1002ee65
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1002e8fb
sub_1002f0af
cmp [ ebp + 0x10 ] edi
jne r-xdata
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
call sub_1002fdbc
sub_1002f20d
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
push eax
push ecx
call sub_10032d30
pop ecx
pop ecx
retn
sub_1002f617
push 0xd
call sub_1003328f
pop ecx
retn
sub_1002f9e6
push 0xd
call sub_1003328f
pop ecx
retn
sub_1002fa1f
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_1002f885
pop ecx
mov [ rw-data ] 0x1
sub_1002fd6a
push 0xc
call sub_1003328f
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_1002fd7f
call [ TlsAlloc@IAT ]
retn 0x4
sub_1002fe9b
push 0xd
call sub_1003328f
pop ecx
retn
sub_1002fea4
push 0xc
call sub_1003328f
pop ecx
retn
sub_1003005a
push 0xd
call sub_1003328f
pop ecx
retn
sub_10030066
push 0xc
call sub_1003328f
pop ecx
retn
sub_100302f8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_100307d8
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_10030925
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_100308fa
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_1003093d
push 0x8
call sub_10033368
pop ecx
retn
sub_10030946
push 0x8
call sub_1003328f
pop ecx
retn
sub_10030b68
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_1003328f
pop ecx
sub_10030b7d
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_10030a3d
add esp 0xc
pop ebp
retn
sub_10030b93
push 0x1
push 0x0
push 0x0
call sub_10030a3d
add esp 0xc
retn
sub_10030ba2
mov edi edi
push ebp
mov ebp esp
call sub_10031154
push [ ebp + 0x8 ]
call sub_10030fa5
pop ecx
push 0xff
call sub_10030b7d
int3
sub_10030c05
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_10030e16
push 0xe
call sub_1003328f
pop ecx
retn
sub_10030ea8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1003118d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_10032bb4
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_10032bd2
push [ rw-data ]
call [ HeapDestroy@IAT ]
and [ rw-data ] 0x0
retn
sub_10032deb
and [ rw-data ] 0x0
retn
sub_1003328f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_1003335f
push 0xa
call sub_1003328f
pop ecx
retn
sub_10033e2f
push 0x8
push r--data
call sub_10030bc0
call sub_1002ff26
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_10030f2b
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_10033e4f
xor eax eax
inc eax
retn
sub_10033e68
call sub_1002ff26
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_10033e2f
call eax
sub_10033e9f
xor eax eax
inc eax
retn
sub_10033eb3
push sub_10033e2f
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_10033ec4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_10033f19
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_1003408d
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_1003328f
pop ecx
sub_100340c9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1003421b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_10034326
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_10034250
add esp 0xc
pop ebp
retn 0x4
sub_10034359
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_100358d5
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_1003438b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_10034250
add esp 0xc
pop ebp
retn 0x8
sub_10034745
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_1003470d
pop ecx
pop ecx
pop ebp
retn
sub_10034975
push [ ebp + 0x8 ]
call sub_10035a85
pop ecx
retn
sub_10035148
push ebx
call sub_10035a85
pop ecx
retn
sub_100351ef
mov eax rw-data
retn
sub_100352a6
call sub_10035e71
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_1003069b
pop ecx
retn
call sub_10035c4b
sub_100353ca
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_10035535
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100353e0
add esp 0x14
pop ebp
retn
sub_10035687
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_10035634
add esp 0x10
pop ebp
retn
sub_10035760
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_10035c20
sub_10035776
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_10035c20
sub_100357ac
push 0x2
call sub_10030ba2
sub_100358a9
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_100357e0
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_100358f4
call eax
retn
sub_10035a7c
push 0xa
call sub_1003328f
pop ecx
retn
sub_10035c04
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10035aee
add esp 0x10
pop ebp
retn
sub_10035cde
push 0x1
call sub_1003328f
pop ecx
retn
sub_10035e39
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_10035375
pop ecx
pop ecx
retn
sub_10035e68
push 0x1
call sub_1003328f
pop ecx
retn
sub_10035e71
push 0x1
call sub_10035d97
pop ecx
retn
sub_10035e7a
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_10035e99
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_10035f89
push esi
call sub_10035339
pop ecx
retn
sub_10036062
push ebx
call sub_10035a85
pop ecx
retn
sub_100361c2
push ebx
call sub_10035a85
pop ecx
retn
j_sub_1002e3fa
jmp sub_1002e3fa
sub_10036200
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1002e42c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003624d
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1002e42c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003629a
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1002e42c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_100366c2
mov eax sub_10037f16
mov [ rw-data ] eax
mov [ rw-data ] sub_1003760c
mov [ rw-data ] sub_100375c0
mov [ rw-data ] sub_100375f9
mov [ rw-data ] sub_10037562
mov [ rw-data ] eax
mov [ rw-data ] sub_10037e8e
mov [ rw-data ] sub_1003757e
mov [ rw-data ] sub_100374e0
mov [ rw-data ] sub_1003746c
retn
sub_10036722
mov edi edi
push ebp
mov ebp esp
call sub_100366c2
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_10037f39
sub_1003673b
mov [ ecx ] r--data
jmp sub_1002e3fa
sub_10036899
push [ ebp - 0x14 ]
call sub_100367cc
pop ecx
retn
sub_100368dd
call sub_1002ff26
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_1002ff26
dec [ eax + 0x90 ]
sub_1003697f
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_10036988
mov esp [ ebp - 0x18 ]
call sub_10033e2f
sub_10036a35
push 0x4
mov eax sub_1003dfe1
call sub_10037f61
call sub_1002ff26
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_10033e68
call sub_10033e7b
sub_10036b0e
mov eax [ ebp - 0x14 ]
call sub_100368f7
retn
sub_10036d85
xor eax eax
inc eax
retn
sub_10036d89
mov esp [ ebp - 0x18 ]
call sub_10033e2f
sub_10036e1e
xor eax eax
inc eax
retn
sub_10036e22
mov esp [ ebp - 0x18 ]
call sub_10033e2f
sub_10037315
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1002e42c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100375c0
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003757e
add esp 0x10
pop ebp
retn
sub_100375f9
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_1003746c
pop ecx
pop ecx
pop ebp
retn
sub_1003760c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_100374e0
pop ecx
pop ecx
pop ebp
retn
sub_10037f97
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_1003a5c5
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_1003a610
mov ecx [ ebp - 0x10 ]
jmp sub_1002bac0
sub_1003a618
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_1002be10
sub_1003a623
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003a640
mov ecx [ ebp - 0x10 ]
jmp sub_10001be0
sub_1003a648
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003a670
mov ecx [ ebp - 0x10 ]
jmp sub_100178e0
sub_1003a678
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003a6a0
mov ecx [ ebp - 0x10 ]
jmp sub_10001be0
sub_1003a6a8
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_10015bf0
sub_1003a6b3
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp sub_10015bf0
sub_1003a6be
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003a6e0
mov ecx [ ebp + 0x8 ]
jmp sub_10001be0
sub_1003a6e8
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10015bf0
sub_1003a6f3
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_10015bf0
sub_1003a6fe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003a720
mov ecx [ ebp - 0x10 ]
jmp sub_10001be0
sub_1003a728
mov esi [ ebp - 0x10 ]
add esi 0x8
jmp sub_1002be10
sub_1003a733
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003a750
mov ecx [ ebp - 0x10 ]
jmp sub_1000c620
sub_1003a758
mov esi [ ebp - 0x10 ]
add esi 0x18
jmp sub_1002be10
sub_1003a763
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003a780
mov ecx [ ebp + 0x8 ]
jmp sub_100178e0
sub_1003a788
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003a7b0
mov ecx [ ebp - 0x10 ]
jmp sub_10007b90
sub_1003a7b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003a7e0
lea ecx [ ebp - 0x44 ]
jmp sub_1000a130
sub_1003a7e8
lea ecx [ ebp - 0x2c ]
jmp sub_100178e0
sub_1003a7f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003a810
mov eax [ ebp + 0x8 ]
jmp sub_10003ed0
sub_1003a818
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003a840
mov ecx [ ebp - 0x10 ]
jmp sub_1002d2f0
sub_1003a848
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003a870
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003a890
mov ecx [ ebp + 0x8 ]
jmp sub_1002bac0
sub_1003a898
mov esi [ ebp + 0x8 ]
add esi 0x4
jmp sub_1002be10
sub_1003a8a3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003a8c0
mov ecx [ ebp - 0x10 ]
jmp sub_10015bf0
sub_1003a8c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003a8f0
lea ecx [ ebp - 0x54 ]
jmp sub_100225e0
sub_1003a8f8
lea ecx [ ebp - 0x84 ]
jmp sub_1000a130
sub_1003a903
lea ecx [ ebp - 0x6c ]
jmp sub_1000a130
sub_1003a90b
lea ecx [ ebp - 0x40 ]
jmp sub_100225e0
sub_1003a913
lea ecx [ ebp - 0x2c ]
jmp sub_100178e0
sub_1003a91b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003a940
mov ecx [ ebp - 0x10 ]
jmp sub_10017810
sub_1003a948
mov esi [ ebp - 0x10 ]
add esi 0x30
jmp sub_10002580
sub_1003a953
mov ecx [ ebp - 0x10 ]
add ecx 0x50
jmp sub_1000a130
sub_1003a95e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003a980
mov ecx [ ebp + 0x8 ]
jmp sub_100178e0
sub_1003a988
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003a9b0
mov ecx [ ebp - 0x10 ]
jmp sub_100225e0
sub_1003a9b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003a9e0
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_1000a130
sub_1003a9eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003aa10
mov eax [ ebp - 0x10 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003aa1b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003aa40
lea ecx [ ebp - 0x24 ]
jmp sub_100178e0
sub_1003aa48
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003aa70
lea ecx [ ebp - 0x20 ]
jmp sub_100178e0
sub_1003aa78
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003aaa0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003aac0
mov eax [ ebp - 0x10 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003aacb
mov ecx [ ebp - 0x10 ]
jmp sub_100178e0
sub_1003aad3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003aaf0
mov ecx [ ebp - 0x10 ]
jmp sub_100178e0
sub_1003aaf8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003ab20
mov ecx [ ebp + 0x8 ]
jmp sub_10001be0
sub_1003ab28
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003ab50
lea ecx [ ebp - 0x28 ]
jmp sub_1000a130
sub_1003ab58
lea ecx [ ebp - 0x3c ]
jmp sub_100178e0
sub_1003ab60
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3c ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003ab80
mov eax [ ebp - 0x10 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003ab8b
mov ecx [ ebp - 0x10 ]
jmp sub_100178e0
sub_1003ab93
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003abb0
lea ecx [ ebp - 0x34 ]
jmp sub_1000a130
sub_1003abb8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003abe0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003ac00
mov ecx [ ebp - 0x10 ]
jmp sub_10011c00
sub_1003ac08
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_10007b90
sub_1003ac13
mov ecx [ ebp - 0x10 ]
jmp sub_10007b90
sub_1003ac1b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003ac40
lea ecx [ ebp - 0x28 ]
jmp sub_1000a130
sub_1003ac48
lea ecx [ ebp - 0x3c ]
jmp sub_100225e0
sub_1003ac50
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3c ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003ac70
mov ecx [ ebp - 0x10 ]
jmp sub_10011c00
sub_1003ac78
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_1000a130
sub_1003ac83
mov ecx [ ebp - 0x10 ]
jmp sub_10007b90
sub_1003ac8b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003acb0
lea ecx [ ebp - 0x28 ]
jmp sub_1000a130
sub_1003acb8
lea ecx [ ebp - 0x3c ]
jmp sub_100178e0
sub_1003acc0
lea ecx [ ebp - 0x64 ]
jmp sub_100225e0
sub_1003acc8
lea ecx [ ebp - 0x50 ]
jmp sub_100178e0
sub_1003acd0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x74 ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003acf0
mov ecx [ ebp - 0x10 ]
jmp sub_10007b90
sub_1003acf8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003ad20
mov ecx [ ebp - 0x10 ]
jmp sub_100178e0
sub_1003ad28
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_1000a130
sub_1003ad33
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003ad50
mov ecx [ ebp - 0x10 ]
jmp sub_100178e0
sub_1003ad58
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_1000a130
sub_1003ad63
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003ad80
lea ecx [ ebp - 0x2c ]
jmp sub_100225e0
sub_1003ad88
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003adb0
mov ecx [ ebp - 0x10 ]
jmp sub_100178e0
sub_1003adb8
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp sub_1000a130
sub_1003adc3
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp sub_1000a130
sub_1003adce
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003adf0
lea ecx [ ebp - 0x2c ]
jmp sub_100225e0
sub_1003adf8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003ae20
lea esi [ ebp - 0x20 ]
jmp sub_1002be10
sub_1003ae28
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003ae50
lea eax [ ebp - 0x18 ]
jmp sub_10004ea0
sub_1003ae58
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003ae80
lea ecx [ ebp - 0x38 ]
jmp sub_100178e0
sub_1003ae88
lea eax [ ebp - 0x18 ]
jmp sub_10004ea0
sub_1003ae90
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003aeb0
lea ecx [ ebp - 0x30 ]
jmp sub_100178e0
sub_1003aeb8
lea eax [ ebp - 0x1c ]
jmp sub_10004ea0
sub_1003aec0
mov eax [ ebp - 0x10 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003aecb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003aef0
lea ecx [ ebp - 0x6c ]
jmp sub_100178e0
sub_1003aef8
lea ecx [ ebp - 0x4c ]
jmp sub_1000a130
sub_1003af00
lea ecx [ ebp - 0x34 ]
jmp sub_100225e0
sub_1003af08
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_1002e0f2
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003af30
lea ecx [ ebp - 0x28 ]
jmp sub_1000a130
sub_1003af38
lea ecx [ ebp - 0x3c ]
jmp sub_100178e0
sub_1003af40
lea eax [ ebp - 0x50 ]
jmp sub_10004ea0
sub_1003af48
lea ecx [ ebp - 0x50 ]
jmp sub_100225e0
sub_1003af50
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003af70
lea ecx [ ebp - 0x28 ]
jmp sub_1000a130
sub_1003af78
lea ecx [ ebp - 0x3c ]
jmp sub_100225e0
sub_1003af80
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003afa0
jmp sub_1001e690
sub_1003afa5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003afc0
mov esi [ ebp - 0x14 ]
add esi 0x4
jmp sub_10002580
sub_1003afcb
mov esi [ ebp - 0x14 ]
add esi 0x24
jmp sub_10002580
sub_1003afd6
mov eax [ ebp - 0x18 ]
jmp sub_10003ed0
sub_1003afde
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b000
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b020
mov ecx [ ebp - 0x10 ]
jmp sub_10001be0
sub_1003b028
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b050
lea esi [ ebp - 0x28 ]
jmp sub_1002be10
sub_1003b058
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b080
mov ecx [ ebp - 0x10 ]
jmp sub_100178e0
sub_1003b088
mov esi [ ebp - 0x10 ]
add esi 0xc
jmp sub_1002d1e0
sub_1003b093
mov esi [ ebp - 0x10 ]
add esi 0x18
jmp sub_1000bb60
sub_1003b09e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b0c0
mov ecx [ ebp - 0x10 ]
jmp sub_100178e0
sub_1003b0c8
mov esi [ ebp - 0x10 ]
add esi 0x8
jmp sub_1000bb60
sub_1003b0d3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b0f0
mov eax [ ebp - 0x10 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003b0fb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b120
mov ecx [ ebp - 0x10 ]
jmp sub_100178e0
sub_1003b128
mov esi [ ebp - 0x10 ]
add esi 0xc
jmp sub_1000bb60
sub_1003b133
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b150
mov ecx [ ebp - 0x10 ]
jmp sub_100225e0
sub_1003b158
mov esi [ ebp - 0x10 ]
add esi 0x8
jmp sub_1000bb60
sub_1003b163
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b180
mov ecx [ ebp - 0x10 ]
jmp sub_1002d2f0
sub_1003b188
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_1000bb60
sub_1003b193
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b1b0
lea ecx [ ebp - 0x30 ]
jmp sub_100225e0
sub_1003b1b8
lea eax [ ebp - 0x1c ]
jmp sub_10004ea0
sub_1003b1c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b1e0
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_10026960
sub_1003b1eb
mov ecx [ ebp - 0x10 ]
add ecx 0x54
jmp sub_1000a130
sub_1003b1f6
mov eax [ ebp - 0x10 ]
add eax 0x84
jmp sub_10022aa0
sub_1003b203
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b220
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10026960
sub_1003b22b
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_1000a130
sub_1003b236
mov eax [ ebp + 0x8 ]
add eax 0x84
jmp sub_10022aa0
sub_1003b243
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b260
lea ecx [ ebp - 0x28 ]
jmp sub_100178e0
sub_1003b268
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b290
mov esi [ ebp - 0x10 ]
add esi 0x14
jmp sub_1000bb60
sub_1003b29b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b2c0
mov eax [ ebp - 0x53e8 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003b2ce
mov eax [ ebp - 0x53e8 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003b2dc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x53e8 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b310
mov ecx [ ebp - 0x10 ]
jmp sub_10001be0
sub_1003b318
mov eax [ ebp - 0x10 ]
add eax 0x1c
jmp sub_1001f670
sub_1003b323
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_10021c20
sub_1003b32e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b350
mov esi [ ebp - 0x10 ]
add esi 0x14
jmp sub_1000bb60
sub_1003b35b
mov esi [ ebp - 0x10 ]
add esi 0x30
jmp sub_1000bb60
sub_1003b366
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b390
mov eax [ ebp + 0x8 ]
jmp sub_100156f0
sub_1003b398
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b3c0
lea ecx [ ebp - 0x38 ]
jmp sub_100178e0
sub_1003b3c8
lea ecx [ ebp - 0x24 ]
jmp sub_100225e0
sub_1003b3d0
mov eax [ ebp - 0x10 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003b3db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b400
lea esi [ ebp - 0x20 ]
jmp sub_1002be10
sub_1003b408
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b430
mov ecx [ ebp - 0x10 ]
jmp sub_100178e0
sub_1003b438
mov eax [ ebp - 0x10 ]
add eax 0x8
push eax
call sub_10015160
retn
sub_1003b445
mov eax [ ebp - 0x14 ]
jmp sub_100156f0
sub_1003b44d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b470
lea ecx [ ebp - 0x28 ]
jmp sub_1000a130
sub_1003b478
lea ecx [ ebp - 0x3c ]
jmp sub_100225e0
sub_1003b480
lea ecx [ ebp - 0x3c ]
jmp sub_100225e0
sub_1003b488
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3c ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b4b0
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_1000bb60
sub_1003b4bb
mov esi [ ebp - 0x10 ]
add esi 0x20
jmp sub_1000bb60
sub_1003b4c6
mov esi [ ebp - 0x10 ]
add esi 0x3c
jmp sub_1000bb60
sub_1003b4d1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b4f0
mov eax [ ebp - 0x14 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003b4fb
mov eax [ ebp - 0x18 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003b506
mov ecx [ ebp - 0x18 ]
jmp sub_10015bf0
sub_1003b50e
mov ecx [ ebp - 0x14 ]
jmp sub_10011c00
sub_1003b516
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_10007b90
sub_1003b521
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b540
mov eax [ ebp - 0x10 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003b54b
mov ecx [ ebp - 0x10 ]
jmp sub_10011c00
sub_1003b553
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_10007b90
sub_1003b55e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b580
mov ecx [ ebp - 0x10 ]
add ecx 0x2c
jmp sub_10013df0
sub_1003b58b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b5b0
lea ecx [ ebp - 0x2c ]
jmp sub_100225e0
sub_1003b5b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b5e0
lea ecx [ ebp - 0x40 ]
jmp sub_100178e0
sub_1003b5e8
lea ecx [ ebp - 0x54 ]
jmp sub_100225e0
sub_1003b5f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b610
mov ecx [ ebp + 0x8 ]
jmp sub_100178e0
sub_1003b618
mov ecx [ ebp + 0x8 ]
add ecx 0x18
jmp sub_1000a130
sub_1003b623
lea ecx [ ebp - 0x2c ]
jmp sub_100178e0
sub_1003b62b
lea eax [ ebp - 0x18 ]
jmp sub_10004ea0
sub_1003b633
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b650
mov ecx [ ebp + 0x8 ]
jmp sub_100178e0
sub_1003b658
mov ecx [ ebp + 0x8 ]
add ecx 0x24
jmp sub_1000a130
sub_1003b663
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_1000a130
sub_1003b66e
lea ecx [ ebp - 0x2c ]
jmp sub_100178e0
sub_1003b676
lea eax [ ebp - 0x18 ]
jmp sub_10004ea0
sub_1003b67e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b6a0
lea ecx [ ebp - 0x24 ]
jmp sub_100225e0
sub_1003b6a8
mov eax [ ebp - 0x10 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003b6b3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b6d0
lea ecx [ ebp - 0x50 ]
jmp sub_100225e0
sub_1003b6d8
lea ecx [ ebp - 0x3c ]
jmp sub_100225e0
sub_1003b6e0
lea eax [ ebp - 0x1c ]
jmp sub_10004ea0
sub_1003b6e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b710
lea ecx [ ebp - 0x24 ]
jmp sub_100178e0
sub_1003b718
mov eax [ ebp + 0x8 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003b723
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b740
mov eax [ ebp - 0x10 ]
add eax 0x4
jmp sub_100025b0
sub_1003b74b
mov esi [ ebp - 0x10 ]
add esi 0x54
jmp sub_10002580
sub_1003b756
mov esi [ ebp - 0x10 ]
add esi 0x74
jmp sub_1000d0b0
sub_1003b761
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b780
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b7a0
lea ecx [ ebp - 0x50 ]
jmp sub_1000a130
sub_1003b7a8
lea ecx [ ebp - 0x34 ]
jmp sub_100225e0
sub_1003b7b0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_1002e0f2
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b7e0
lea ecx [ ebp - 0x4c ]
jmp sub_1000a130
sub_1003b7e8
lea ecx [ ebp - 0x34 ]
jmp sub_100225e0
sub_1003b7f0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_1002e0f2
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b820
lea ecx [ ebp - 0x2c ]
jmp sub_100178e0
sub_1003b828
lea eax [ ebp - 0x18 ]
jmp sub_10004ea0
sub_1003b830
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b850
jmp sub_1001e690
sub_1003b855
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b870
lea esi [ ebp + 0x24 ]
jmp sub_1000bb60
sub_1003b878
lea esi [ ebp + 0x8 ]
jmp sub_1000bb60
sub_1003b880
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b8a0
lea esi [ ebp + 0xc ]
jmp sub_1002be10
sub_1003b8a8
mov ecx [ ebp + 0x8 ]
jmp sub_100178e0
sub_1003b8b0
mov esi [ ebp + 0x8 ]
add esi 0x4
jmp sub_1002be10
sub_1003b8bb
mov eax [ ebp + 0x8 ]
add eax 0x18
jmp sub_10004ea0
sub_1003b8c6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b8f0
lea esi [ ebp + 0x3c ]
jmp sub_1000bb60
sub_1003b8f8
lea esi [ ebp + 0x8 ]
jmp sub_1000bb60
sub_1003b900
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b920
mov eax [ ebp - 0x18 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x18 ] 0xfffffffe
mov esi [ ebp + 0x8 ]
jmp sub_1002be10
sub_1003b939
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b960
lea ecx [ ebp - 0x14 ]
jmp sub_10021c20
sub_1003b968
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003b990
mov ecx [ ebp - 0x18 ]
jmp sub_1002bac0
sub_1003b998
mov esi [ ebp - 0x18 ]
add esi 0x10
jmp sub_1002d1e0
sub_1003b9a3
mov esi [ ebp - 0x18 ]
add esi 0x1c
jmp sub_1002d1e0
sub_1003b9ae
mov esi [ ebp - 0x18 ]
add esi 0x28
jmp sub_1002d1e0
sub_1003b9b9
mov ecx [ ebp - 0x18 ]
add ecx 0x34
jmp sub_10021c20
sub_1003b9c4
mov eax [ ebp - 0x18 ]
add eax 0x3c
push eax
call sub_100206a0
retn
sub_1003b9d1
mov esi [ ebp - 0x18 ]
add esi 0x58
jmp sub_1000bb60
sub_1003b9dc
lea eax [ ebp - 0x34 ]
push eax
call sub_100206a0
retn
sub_1003b9e6
lea eax [ ebp - 0x34 ]
jmp sub_100156f0
sub_1003b9ee
mov eax [ ebp - 0x14 ]
jmp sub_100156f0
sub_1003b9f6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003ba20
jmp sub_1001e690
sub_1003ba25
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003ba40
jmp sub_1001e690
sub_1003ba45
mov esi [ ebp - 0x18 ]
jmp sub_10002580
sub_1003ba4d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003ba70
lea esi [ ebp + 0x8 ]
jmp sub_10002580
sub_1003ba78
mov ecx [ ebp - 0x10 ]
jmp sub_100178e0
sub_1003ba80
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_10002580
sub_1003ba8b
mov esi [ ebp - 0x10 ]
add esi 0x24
jmp sub_1000fd10
sub_1003ba96
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003bac0
lea esi [ ebp + 0x8 ]
jmp sub_10002580
sub_1003bac8
mov eax [ ebp - 0x10 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003bad3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
j_sub_1001e690#9
jmp sub_1001e690
sub_1003baf5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003bb10
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003bb30
mov esi [ ebp - 0x10 ]
add esi 0x2c
jmp sub_1000fd10
sub_1003bb3b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003bb60
mov eax [ ebp - 0x50 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003bb6b
lea esi [ ebp - 0x2c ]
jmp sub_10002580
sub_1003bb73
lea esi [ ebp - 0x48 ]
jmp sub_10002580
sub_1003bb7b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003bbb0
mov eax [ ebp - 0x14 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003bbbb
mov ecx [ ebp - 0x14 ]
jmp sub_100178e0
sub_1003bbc3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003bbe0
mov eax [ ebp - 0x1c ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003bbeb
mov eax [ ebp - 0x1c ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003bbf6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003bc20
lea esi [ ebp - 0x2c ]
jmp sub_10002580
sub_1003bc28
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003bc50
lea ecx [ ebp - 0x28 ]
jmp sub_1000a130
sub_1003bc58
lea ecx [ ebp - 0x64 ]
jmp sub_100178e0
sub_1003bc60
lea ecx [ ebp - 0x50 ]
jmp sub_100225e0
sub_1003bc68
lea ecx [ ebp - 0x50 ]
jmp sub_100178e0
sub_1003bc70
lea ecx [ ebp - 0x3c ]
jmp sub_100225e0
sub_1003bc78
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x74 ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
j_sub_1001e690#8
jmp sub_1001e690
sub_1003bca5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003bcc0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003bce0
mov eax [ ebp - 0x2c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2c ] 0xfffffffe
mov esi [ ebp - 0x30 ]
jmp sub_10002580
sub_1003bcf9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003bd20
lea esi [ ebp - 0x2c ]
jmp sub_10002580
sub_1003bd28
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003bd50
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov esi [ ebp + 0x8 ]
jmp sub_1000d0b0
sub_1003bd69
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003bd90
lea esi [ ebp - 0x2c ]
jmp sub_10002580
sub_1003bd98
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003bdc0
mov ecx [ ebp + 0x8 ]
jmp sub_1000c620
sub_1003bdc8
mov esi [ ebp + 0x8 ]
add esi 0x18
jmp sub_1002be10
sub_1003bdd3
mov eax [ ebp - 0x14 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003bdde
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003be00
lea esi [ ebp + 0x8 ]
jmp sub_10002580
sub_1003be08
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003be30
lea esi [ ebp - 0x2c ]
jmp sub_10002580
sub_1003be38
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003be60
lea ecx [ ebp - 0x28 ]
jmp sub_100178e0
sub_1003be68
mov eax [ ebp - 0x14 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003be73
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003be90
lea eax [ ebp - 0x20 ]
jmp sub_10004ea0
sub_1003be98
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14 ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003bec0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003bee0
mov eax [ ebp + 0x8 ]
jmp sub_10003ed0
sub_1003bee8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003bf10
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_10002580
sub_1003bf1b
mov esi [ ebp - 0x10 ]
add esi 0x24
jmp sub_10002580
sub_1003bf26
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003bf50
mov eax [ ebp - 0x4c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x4c ] 0xfffffffe
mov esi [ ebp - 0x50 ]
jmp sub_10002580
sub_1003bf69
lea esi [ ebp - 0x2c ]
jmp sub_10002580
sub_1003bf71
lea esi [ ebp - 0x2c ]
jmp sub_10002580
sub_1003bf79
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003bfa0
mov esi [ ebp + 0x8 ]
add esi 0x4
jmp sub_10002580
sub_1003bfab
mov esi [ ebp + 0x8 ]
add esi 0x24
jmp sub_10002580
sub_1003bfb6
mov eax [ ebp + 0x8 ]
add eax 0x40
push eax
call sub_10003dc0
retn
sub_1003bfc3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003bfe0
lea esi [ ebp + 0xc ]
jmp sub_10002580
sub_1003bfe8
lea esi [ ebp - 0x48 ]
jmp sub_10002580
sub_1003bff0
lea esi [ ebp - 0x2c ]
jmp sub_10002580
sub_1003bff8
lea esi [ ebp - 0x2c ]
jmp sub_10002580
sub_1003c000
lea esi [ ebp - 0x2c ]
jmp sub_10002580
sub_1003c008
lea esi [ ebp - 0x2c ]
jmp sub_10002580
sub_1003c010
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c040
jmp sub_1001e690
sub_1003c045
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c060
lea esi [ ebp - 0x2c ]
jmp sub_10002580
sub_1003c068
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c090
mov ecx [ ebp + 0x8 ]
jmp sub_1002d2f0
sub_1003c098
mov esi [ ebp + 0x8 ]
add esi 0x4
jmp sub_1000bb60
sub_1003c0a3
mov esi [ ebp + 0x8 ]
add esi 0x20
jmp sub_1000bb60
sub_1003c0ae
mov esi [ ebp + 0x8 ]
add esi 0x3c
jmp sub_1000bb60
sub_1003c0b9
mov esi [ ebp + 0x8 ]
add esi 0x58
jmp sub_1000bb60
sub_1003c0c4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c0e0
mov ecx [ ebp + 0x8 ]
jmp sub_1002a270
sub_1003c0e8
mov esi [ ebp + 0x8 ]
add esi 0x4
jmp sub_1000bb60
sub_1003c0f3
mov esi [ ebp + 0x8 ]
add esi 0x20
jmp sub_1000bb60
sub_1003c0fe
mov esi [ ebp + 0x8 ]
add esi 0x3c
jmp sub_1000bb60
sub_1003c109
mov esi [ ebp + 0x8 ]
add esi 0x58
jmp sub_1000bb60
sub_1003c114
mov esi [ ebp + 0x8 ]
add esi 0x78
jmp sub_1002be10
sub_1003c11f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c140
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c170
mov ecx [ ebp + 0x8 ]
jmp sub_100178e0
sub_1003c178
mov esi [ ebp + 0x8 ]
add esi 0x4
jmp sub_1000bb60
sub_1003c183
mov esi [ ebp + 0x8 ]
add esi 0x24
jmp sub_10027500
sub_1003c18e
mov esi [ ebp + 0x8 ]
add esi 0x34
jmp sub_1000bb60
sub_1003c199
mov eax [ ebp + 0x8 ]
add eax 0x50
jmp sub_10004ea0
sub_1003c1a4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c1c0
mov eax [ ebp - 0x10 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003c1cb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c1f0
mov ecx [ ebp + 0x8 ]
jmp sub_100178e0
sub_1003c1f8
mov esi [ ebp + 0x8 ]
add esi 0xc
jmp sub_1000bb60
sub_1003c203
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c220
mov eax [ ebp - 0x14 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003c22b
mov eax [ ebp + 0x8 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003c236
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c260
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov esi [ ebp + 0xc ]
jmp sub_10020be0
sub_1003c279
lea esi [ ebp - 0x24 ]
jmp sub_1002be10
sub_1003c281
lea esi [ ebp - 0x24 ]
jmp sub_1002be10
sub_1003c289
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c2b0
lea ecx [ ebp - 0x44 ]
jmp sub_10021c20
sub_1003c2b8
lea esi [ ebp - 0x64 ]
jmp sub_10020be0
sub_1003c2c0
lea ecx [ ebp - 0x38 ]
jmp sub_10021c20
sub_1003c2c8
lea ecx [ ebp - 0x38 ]
jmp sub_10021c20
sub_1003c2d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c300
mov ecx [ ebp + 0x8 ]
jmp sub_1002bac0
sub_1003c308
mov esi [ ebp + 0x8 ]
add esi 0x10
jmp sub_1002d1e0
sub_1003c313
mov esi [ ebp + 0x8 ]
add esi 0x1c
jmp sub_1002d1e0
sub_1003c31e
mov esi [ ebp + 0x8 ]
add esi 0x28
jmp sub_1002d1e0
sub_1003c329
mov ecx [ ebp + 0x8 ]
add ecx 0x34
jmp sub_10021c20
sub_1003c334
mov eax [ ebp + 0x8 ]
add eax 0x3c
push eax
call sub_100206a0
retn
sub_1003c341
mov esi [ ebp + 0x8 ]
add esi 0x58
jmp sub_1000bb60
sub_1003c34c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c370
mov ecx [ ebp - 0x10 ]
jmp sub_10017810
sub_1003c378
mov esi [ ebp - 0x10 ]
add esi 0x28
jmp sub_1000bb60
sub_1003c383
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
j_sub_1001e690#7
jmp sub_1001e690
sub_1003c3a5
mov esi [ ebp - 0x10 ]
jmp sub_10002580
sub_1003c3ad
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c3d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
j_sub_1001e690#6
jmp sub_1001e690
sub_1003c3f5
mov esi [ ebp - 0x10 ]
jmp sub_10002580
j_sub_1001e690#5
jmp sub_1001e690
sub_1003c402
mov esi [ ebp - 0x10 ]
jmp sub_10002580
sub_1003c40a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
j_sub_1001e690#4
jmp sub_1001e690
sub_1003c435
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c450
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
j_sub_1001e690#3
jmp sub_1001e690
j_sub_1001e690#2
jmp sub_1001e690
sub_1003c47a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c4a0
lea esi [ ebp - 0x2c ]
jmp sub_10002580
sub_1003c4a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c4d0
lea esi [ ebp - 0x2c ]
jmp sub_10002580
sub_1003c4d8
lea esi [ ebp - 0x48 ]
jmp sub_10002580
sub_1003c4e0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c510
lea ecx [ ebp - 0x54 ]
jmp sub_1000a130
sub_1003c518
lea ecx [ ebp - 0x74 ]
jmp sub_100178e0
sub_1003c520
lea esi [ ebp - 0x30 ]
jmp sub_10002580
sub_1003c528
lea eax [ ebp - 0x3c ]
jmp sub_100025b0
sub_1003c530
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x88 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c560
lea esi [ ebp - 0x30 ]
jmp sub_10002580
sub_1003c568
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1002e0f2
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c590
mov eax [ ebp + 0x8 ]
add eax 0x4
jmp sub_100025b0
sub_1003c59b
mov esi [ ebp + 0x8 ]
add esi 0x54
jmp sub_10002580
sub_1003c5a6
mov esi [ ebp + 0x8 ]
add esi 0x74
jmp sub_1000d0b0
sub_1003c5b1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c5d0
lea esi [ ebp + 0x8 ]
jmp sub_10002580
sub_1003c5d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c600
lea esi [ ebp - 0x4c ]
jmp sub_1000bb60
sub_1003c608
lea esi [ ebp - 0x2c ]
jmp sub_1000bb60
sub_1003c610
lea ecx [ ebp - 0x30 ]
jmp sub_1000af70
sub_1003c618
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c640
lea esi [ ebp - 0x4c ]
jmp sub_1000bb60
sub_1003c648
lea esi [ ebp - 0x2c ]
jmp sub_1000bb60
sub_1003c650
lea ecx [ ebp - 0x30 ]
jmp sub_1000af70
sub_1003c658
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c680
lea eax [ ebp - 0x28 ]
jmp sub_10004ea0
sub_1003c688
lea ecx [ ebp - 0x3c ]
jmp sub_100178e0
sub_1003c690
lea ecx [ ebp - 0x3c ]
jmp sub_100225e0
sub_1003c698
lea eax [ ebp - 0x28 ]
jmp sub_10004ea0
sub_1003c6a0
lea ecx [ ebp - 0x28 ]
jmp sub_100178e0
sub_1003c6a8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x44 ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c6d0
lea ecx [ ebp - 0x3c ]
jmp sub_100225e0
sub_1003c6d8
lea eax [ ebp - 0x28 ]
jmp sub_10004ea0
sub_1003c6e0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x44 ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c700
lea eax [ ebp - 0x28 ]
jmp sub_10004ea0
sub_1003c708
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c730
lea ecx [ ebp - 0x28 ]
jmp sub_1000a130
sub_1003c738
lea ecx [ ebp - 0x50 ]
jmp sub_100178e0
sub_1003c740
lea eax [ ebp - 0x68 ]
jmp sub_10004ea0
sub_1003c748
lea ecx [ ebp - 0x3c ]
jmp sub_100225e0
sub_1003c750
lea eax [ ebp - 0x68 ]
jmp sub_10004ea0
sub_1003c758
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c780
lea ecx [ ebp - 0x5c ]
jmp sub_100034d0
sub_1003c788
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c7b0
mov eax [ ebp - 0x3c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x3c ] 0xfffffffe
mov eax [ ebp - 0x40 ]
jmp sub_100025b0
sub_1003c7c9
lea esi [ ebp - 0x2c ]
jmp sub_10002580
sub_1003c7d1
lea esi [ ebp - 0x2c ]
jmp sub_10002580
sub_1003c7d9
lea esi [ ebp - 0x2c ]
jmp sub_10002580
sub_1003c7e1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c810
mov eax [ ebp - 0x10 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003c81b
mov ecx [ ebp - 0x10 ]
jmp sub_10001be0
sub_1003c823
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_100034d0
sub_1003c82e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c850
lea esi [ ebp - 0x2c ]
jmp sub_1000bb60
sub_1003c858
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c880
lea esi [ ebp - 0x508 ]
jmp sub_1000bb60
sub_1003c88b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50c ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c8c0
mov ecx [ ebp + 0x8 ]
jmp sub_100178e0
sub_1003c8c8
mov esi [ ebp + 0x8 ]
add esi 0x8
jmp sub_1000bb60
sub_1003c8d3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c8f0
lea esi [ ebp - 0x4c ]
jmp sub_10002580
sub_1003c8f8
lea esi [ ebp - 0x4c ]
jmp sub_1001a3e0
sub_1003c900
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_1002e0f2
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c930
lea esi [ ebp - 0x2c ]
jmp sub_1000bb60
sub_1003c938
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c960
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov esi [ ebp + 0x8 ]
jmp sub_1000bb60
sub_1003c979
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c9a0
mov eax [ ebp - 0x4f0 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x4f0 ] 0xfffffffe
mov esi [ ebp - 0x4f4 ]
jmp sub_1000bb60
sub_1003c9c2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4ec ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003c9f0
mov eax [ ebp - 0x18 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003c9fb
mov eax [ ebp - 0x10 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003ca06
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_1000bb60
sub_1003ca11
mov eax [ ebp - 0x1c ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003ca1c
mov eax [ ebp - 0x1c ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003ca27
mov ecx [ ebp - 0x1c ]
jmp sub_100178e0
sub_1003ca2f
mov esi [ ebp - 0x1c ]
add esi 0xc
jmp sub_1000bb60
sub_1003ca3a
mov ecx [ ebp - 0x18 ]
jmp sub_100225e0
sub_1003ca42
mov eax [ ebp - 0x1c ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003ca4d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003ca70
lea esi [ ebp + 0xc ]
jmp sub_1002be10
sub_1003ca78
mov eax [ ebp - 0x18 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003ca83
mov eax [ ebp - 0x14 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003ca8e
mov eax [ ebp - 0x1c ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003ca99
mov eax [ ebp - 0x14 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003caa4
mov ecx [ ebp - 0x1c ]
jmp sub_100178e0
sub_1003caac
mov esi [ ebp - 0x1c ]
add esi 0xc
jmp sub_1000bb60
sub_1003cab7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003cae0
mov esi [ ebp - 0x10 ]
jmp sub_1000bb60
sub_1003cae8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003cb10
mov esi [ ebp - 0x14 ]
jmp sub_1000bb60
sub_1003cb18
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003cb40
mov esi [ ebp - 0x10 ]
jmp sub_1000bb60
sub_1003cb48
mov esi [ ebp - 0x14 ]
jmp sub_1000bb60
sub_1003cb50
mov esi [ ebp - 0x14 ]
jmp sub_1000bb60
sub_1003cb58
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003cb80
lea esi [ ebp - 0x2c ]
jmp sub_1000bb60
sub_1003cb88
mov esi [ ebp - 0x40 ]
jmp sub_1000bb60
sub_1003cb90
mov esi [ ebp - 0x38 ]
jmp sub_1000bb60
sub_1003cb98
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003cbc0
mov esi [ ebp - 0x1c ]
jmp sub_1000bb60
sub_1003cbc8
mov esi [ ebp - 0x1c ]
jmp sub_1000bb60
sub_1003cbd0
mov esi [ ebp - 0x24 ]
jmp sub_1000bb60
sub_1003cbd8
mov esi [ ebp - 0x24 ]
jmp sub_1000bb60
sub_1003cbe0
mov esi [ ebp - 0x24 ]
jmp sub_1000bb60
sub_1003cbe8
mov esi [ ebp - 0x24 ]
jmp sub_1000bb60
sub_1003cbf0
mov esi [ ebp - 0x24 ]
jmp sub_1000bb60
sub_1003cbf8
mov esi [ ebp - 0x30 ]
jmp sub_1000bb60
sub_1003cc00
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003cc30
mov eax [ ebp - 0x50 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x50 ] 0xfffffffe
lea esi [ ebp - 0x48 ]
jmp sub_1000bb60
sub_1003cc49
mov eax [ ebp - 0x50 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x50 ] 0xfffffffd
lea esi [ ebp - 0x2c ]
jmp sub_1000bb60
sub_1003cc62
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003cc90
mov ecx [ ebp - 0x3c ]
jmp sub_100225e0
sub_1003cc98
mov esi [ ebp - 0x3c ]
add esi 0x4
jmp sub_1000bb60
sub_1003cca3
mov esi [ ebp - 0x3c ]
add esi 0x24
jmp sub_1000bb60
sub_1003ccae
lea esi [ ebp - 0x2c ]
jmp sub_1000bb60
sub_1003ccb6
lea esi [ ebp - 0x2c ]
jmp sub_1000bb60
sub_1003ccbe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003ccf0
mov eax [ ebp - 0xf4 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003ccfe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf0 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003cd30
mov esi [ ebp - 0x14 ]
jmp sub_1000bb60
sub_1003cd38
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003cd60
mov esi [ ebp - 0x18 ]
jmp sub_1000bb60
sub_1003cd68
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003cd90
lea esi [ ebp - 0x44 ]
jmp sub_1000bb60
sub_1003cd98
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003cdc0
lea esi [ ebp - 0x44 ]
jmp sub_1000bb60
sub_1003cdc8
mov esi [ ebp - 0x5c ]
jmp sub_1000bb60
sub_1003cdd0
mov esi [ ebp - 0x58 ]
jmp sub_1000bb60
sub_1003cdd8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003ce00
lea esi [ ebp - 0x44 ]
jmp sub_1000bb60
sub_1003ce08
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
j_sub_1001e690
jmp sub_1001e690
sub_1003ce35
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003ce50
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003ce70
mov ecx [ ebp - 0x34 ]
jmp sub_100178e0
sub_1003ce78
mov esi [ ebp - 0x34 ]
add esi 0x4
jmp sub_1000bb60
sub_1003ce83
mov esi [ ebp - 0x34 ]
add esi 0x20
jmp sub_10023d70
sub_1003ce8e
mov esi [ ebp - 0x34 ]
add esi 0x34
jmp sub_1000bb60
sub_1003ce99
mov eax [ ebp - 0x34 ]
add eax 0x50
jmp sub_10004ea0
sub_1003cea4
lea esi [ ebp - 0x2c ]
jmp sub_1000bb60
sub_1003ceac
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003cee0
mov eax [ ebp - 0x14 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003ceeb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003cf10
mov eax [ ebp - 0x10 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003cf1b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003cf40
mov ecx [ ebp - 0x34 ]
jmp sub_10015bf0
sub_1003cf48
mov esi [ ebp - 0x34 ]
add esi 0x4
jmp sub_1000bb60
sub_1003cf53
lea esi [ ebp - 0x2c ]
jmp sub_1000bb60
sub_1003cf5b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003cf80
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov esi [ ebp + 0xc ]
jmp sub_1000bb60
sub_1003cf99
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003cfc0
lea esi [ ebp - 0x48 ]
jmp sub_1000bb60
sub_1003cfc8
lea esi [ ebp - 0x2c ]
jmp sub_1000bb60
sub_1003cfd0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d000
lea ecx [ ebp - 0x28 ]
jmp sub_1000a130
sub_1003d008
lea ecx [ ebp - 0x3c ]
jmp sub_100178e0
sub_1003d010
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x44 ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d030
lea esi [ ebp - 0x48 ]
jmp sub_10002580
sub_1003d038
lea esi [ ebp - 0x64 ]
jmp sub_1000bb60
sub_1003d040
lea esi [ ebp - 0x2c ]
jmp sub_1000bb60
sub_1003d048
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d070
lea esi [ ebp - 0x80 ]
jmp sub_10002580
sub_1003d078
lea esi [ ebp - 0x2c ]
jmp sub_10002580
sub_1003d080
lea eax [ ebp - 0xa0 ]
push eax
call sub_1001a380
retn
sub_1003d08d
lea esi [ ebp - 0x2c ]
jmp sub_10002580
sub_1003d095
lea esi [ ebp - 0x64 ]
jmp sub_10002580
sub_1003d09d
lea esi [ ebp - 0x64 ]
jmp sub_1001a3e0
sub_1003d0a5
lea esi [ ebp - 0x2c ]
jmp sub_10002580
sub_1003d0ad
lea esi [ ebp - 0xc4 ]
jmp sub_1001ad20
sub_1003d0b8
lea esi [ ebp - 0x64 ]
jmp sub_10002580
sub_1003d0c0
lea esi [ ebp - 0x64 ]
jmp sub_1001a3e0
sub_1003d0c8
lea eax [ ebp - 0xa0 ]
jmp sub_100156f0
sub_1003d0d3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xdc ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d100
lea esi [ ebp - 0x20 ]
jmp sub_1000fd10
sub_1003d108
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d130
lea esi [ ebp - 0x40 ]
jmp sub_1000fd10
sub_1003d138
lea esi [ ebp - 0x30 ]
jmp sub_10002580
sub_1003d140
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x44 ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_1002e0f2
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d170
lea esi [ ebp + 0x8 ]
jmp sub_10002580
sub_1003d178
lea esi [ ebp - 0x2c ]
jmp sub_10002580
sub_1003d180
lea esi [ ebp - 0x48 ]
jmp sub_10002580
sub_1003d188
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d1b0
lea esi [ ebp - 0x30 ]
jmp sub_1000bb60
sub_1003d1b8
mov eax [ ebp - 0x38 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003d1c3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3c ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1002e0f2
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d1f0
lea ecx [ ebp - 0x10 ]
jmp sub_10021c20
sub_1003d1f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d220
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov eax [ ebp + 0x8 ]
jmp sub_100025b0
sub_1003d239
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d260
lea esi [ ebp + 0xc ]
jmp sub_10002580
sub_1003d268
lea esi [ ebp - 0x2c ]
jmp sub_10002580
sub_1003d270
lea esi [ ebp - 0x48 ]
jmp sub_10002580
sub_1003d278
lea esi [ ebp - 0x48 ]
jmp sub_10002580
sub_1003d280
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d2b0
lea eax [ ebp - 0x18 ]
jmp sub_100025b0
sub_1003d2b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d2e0
mov eax [ ebp - 0x14 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003d2eb
mov ecx [ ebp - 0x14 ]
jmp sub_100178e0
sub_1003d2f3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d310
lea esi [ ebp - 0x2c ]
jmp sub_1000bb60
sub_1003d318
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d340
lea esi [ ebp - 0x2c ]
jmp sub_1000bb60
sub_1003d348
mov eax [ ebp - 0x30 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003d353
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d380
mov eax [ ebp - 0x18 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003d38b
mov eax [ ebp - 0x10 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003d396
mov eax [ ebp - 0x1c ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003d3a1
mov eax [ ebp - 0x20 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003d3ac
mov ecx [ ebp - 0x1c ]
jmp sub_100178e0
sub_1003d3b4
mov esi [ ebp - 0x1c ]
add esi 0xc
jmp sub_1000bb60
sub_1003d3bf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d3e0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d400
lea esi [ ebp + 0x8 ]
jmp sub_1000bb60
sub_1003d408
mov eax [ ebp - 0x10 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003d413
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d430
lea esi [ ebp - 0x21e4 ]
jmp sub_10002580
sub_1003d43b
lea esi [ ebp - 0x2200 ]
jmp sub_1000bb60
sub_1003d446
lea esi [ ebp - 0x21c8 ]
jmp sub_10002580
sub_1003d451
lea esi [ ebp - 0x21c8 ]
jmp sub_10002580
sub_1003d45c
lea esi [ ebp - 0x21c8 ]
jmp sub_10002580
sub_1003d467
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2214 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d490
lea esi [ ebp - 0x44 ]
jmp sub_1000bb60
sub_1003d498
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d4c0
mov esi [ ebp - 0x10 ]
jmp sub_1000bb60
sub_1003d4c8
mov esi [ ebp - 0x14 ]
jmp sub_1000bb60
sub_1003d4d0
mov esi [ ebp + 0x10 ]
jmp sub_1000bb60
sub_1003d4d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d500
mov esi [ ebp - 0x24 ]
jmp sub_1000bb60
sub_1003d508
mov esi [ ebp - 0x24 ]
jmp sub_1000bb60
sub_1003d510
mov esi [ ebp - 0x24 ]
jmp sub_1000bb60
sub_1003d518
mov esi [ ebp - 0x24 ]
jmp sub_1000bb60
sub_1003d520
mov esi [ ebp - 0x24 ]
jmp sub_1000bb60
sub_1003d528
mov esi [ ebp - 0x24 ]
jmp sub_1000bb60
sub_1003d530
mov esi [ ebp - 0x28 ]
jmp sub_1000bb60
sub_1003d538
mov esi [ ebp - 0x28 ]
jmp sub_1000bb60
sub_1003d540
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d560
lea esi [ ebp - 0x2b8 ]
jmp sub_1000bb60
sub_1003d56b
lea esi [ ebp - 0x29c ]
jmp sub_1000bb60
sub_1003d576
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2bc ]
mov ecx [ edx - 0x2c0 ]
xor ecx eax
call sub_1002e0f2
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d5b0
lea esi [ ebp - 0x2c ]
jmp sub_1000bb60
sub_1003d5b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d5e0
mov ecx [ ebp + 0x8 ]
jmp sub_10001be0
sub_1003d5e8
mov eax [ ebp + 0x8 ]
add eax 0x1c
jmp sub_1001f670
sub_1003d5f3
mov ecx [ ebp + 0x8 ]
add ecx 0x34
jmp sub_10021c20
sub_1003d5fe
mov eax [ ebp - 0x10 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003d609
mov eax [ ebp - 0x14 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003d614
mov eax [ ebp - 0x14 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003d61f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d640
lea esi [ ebp + 0xc ]
jmp sub_10002580
sub_1003d648
lea ecx [ ebp - 0x30 ]
jmp sub_1000a130
sub_1003d650
lea ecx [ ebp - 0x4c ]
jmp sub_100178e0
sub_1003d658
lea ecx [ ebp - 0x130 ]
jmp sub_100178e0
sub_1003d663
lea ecx [ ebp - 0x60 ]
jmp sub_100178e0
sub_1003d66b
lea ecx [ ebp - 0x108 ]
jmp sub_100178e0
sub_1003d676
lea ecx [ ebp - 0x7c ]
jmp sub_1000a130
sub_1003d67e
lea ecx [ ebp - 0x90 ]
jmp sub_100225e0
sub_1003d689
lea ecx [ ebp - 0xa8 ]
jmp sub_100225e0
sub_1003d694
lea ecx [ ebp - 0xbc ]
jmp sub_100178e0
sub_1003d69f
lea ecx [ ebp - 0xd0 ]
jmp sub_100178e0
sub_1003d6aa
lea ecx [ ebp - 0xe8 ]
jmp sub_1000a130
sub_1003d6b5
lea ecx [ ebp - 0x11c ]
jmp sub_100178e0
sub_1003d6c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x134 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d6e0
mov ecx [ ebp + 0x8 ]
jmp sub_10017810
sub_1003d6e8
mov esi [ ebp + 0x8 ]
add esi 0x30
jmp sub_10002580
sub_1003d6f3
mov ecx [ ebp + 0x8 ]
add ecx 0x50
jmp sub_1000a130
sub_1003d6fe
mov eax [ ebp + 0x18 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003d709
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d730
lea ecx [ ebp - 0x98 ]
jmp sub_1000a130
sub_1003d73b
lea ecx [ ebp - 0xc8 ]
jmp sub_1000a130
sub_1003d746
lea ecx [ ebp - 0xb0 ]
jmp sub_1000a130
sub_1003d751
lea ecx [ ebp - 0x28 ]
jmp sub_100178e0
sub_1003d759
lea ecx [ ebp - 0x7c ]
jmp sub_100178e0
sub_1003d761
lea ecx [ ebp - 0x3c ]
jmp sub_100225e0
sub_1003d769
lea ecx [ ebp - 0x50 ]
jmp sub_100225e0
sub_1003d771
lea ecx [ ebp - 0x64 ]
jmp sub_100178e0
sub_1003d779
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xcc ]
mov ecx [ edx - 0xd0 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d7a0
lea ecx [ ebp - 0xa8 ]
jmp sub_1000a130
sub_1003d7ab
lea ecx [ ebp - 0xd8 ]
jmp sub_1000a130
sub_1003d7b6
lea ecx [ ebp - 0xc0 ]
jmp sub_1000a130
sub_1003d7c1
lea ecx [ ebp - 0x3c ]
jmp sub_100178e0
sub_1003d7c9
lea ecx [ ebp - 0x50 ]
jmp sub_100178e0
sub_1003d7d1
lea ecx [ ebp - 0x64 ]
jmp sub_100225e0
sub_1003d7d9
lea ecx [ ebp - 0x8c ]
jmp sub_100225e0
sub_1003d7e4
lea ecx [ ebp - 0x78 ]
jmp sub_100178e0
sub_1003d7ec
lea ecx [ ebp - 0x28 ]
jmp sub_100225e0
sub_1003d7f4
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xe4 ]
mov ecx [ edx - 0xe8 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d820
lea ecx [ ebp - 0x9c ]
jmp sub_1000a130
sub_1003d82b
lea ecx [ ebp - 0xd0 ]
jmp sub_1000a130
sub_1003d836
lea ecx [ ebp - 0xb8 ]
jmp sub_1000a130
sub_1003d841
lea ecx [ ebp - 0x3c ]
jmp sub_100178e0
sub_1003d849
lea ecx [ ebp - 0x84 ]
jmp sub_100178e0
sub_1003d854
lea ecx [ ebp - 0x28 ]
jmp sub_100225e0
sub_1003d85c
lea ecx [ ebp - 0x64 ]
jmp sub_100225e0
sub_1003d864
lea ecx [ ebp - 0x50 ]
jmp sub_100178e0
sub_1003d86c
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xd4 ]
mov ecx [ edx - 0xd8 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d890
mov ecx [ ebp - 0x44 ]
jmp sub_10017e20
sub_1003d898
lea esi [ ebp - 0x40 ]
jmp sub_1000fd10
sub_1003d8a0
lea esi [ ebp - 0x30 ]
jmp sub_10002580
sub_1003d8a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d8d0
mov eax [ ebp - 0x14 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003d8db
mov eax [ ebp - 0x18 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003d8e6
mov eax [ ebp + 0x8 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003d8f1
mov eax [ ebp + 0x8 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003d8fc
mov eax [ ebp + 0x8 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003d907
mov eax [ ebp + 0x8 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003d912
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d930
lea ecx [ ebp - 0x3c ]
jmp sub_10026090
sub_1003d938
lea esi [ ebp - 0x58 ]
jmp sub_1000bb60
sub_1003d940
lea esi [ ebp - 0x74 ]
jmp sub_1000bb60
sub_1003d948
lea ecx [ ebp - 0x3c ]
jmp sub_1002d2f0
sub_1003d950
lea esi [ ebp - 0x38 ]
jmp sub_1000bb60
sub_1003d958
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d980
mov eax [ ebp - 0x18 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003d98b
mov eax [ ebp - 0x18 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003d996
mov eax [ ebp - 0x18 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003d9a1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003d9c0
lea ecx [ ebp - 0x80 ]
jmp sub_10013df0
sub_1003d9c8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x94 ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_1002e0f2
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003da00
lea ecx [ ebp - 0xac ]
jmp sub_10013680
sub_1003da0b
lea ecx [ ebp - 0x80 ]
jmp sub_10013df0
sub_1003da13
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc0 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003da40
mov eax [ ebp - 0xbe0 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xbe0 ] 0xfffffffe
mov esi [ ebp - 0xbe4 ]
jmp sub_1000bb60
sub_1003da62
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xbe4 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003da90
lea esi [ ebp + 0xc ]
jmp sub_1000bb60
sub_1003da98
mov eax [ ebp - 0xb4 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xb4 ] 0xfffffffe
mov esi [ ebp - 0x98 ]
jmp sub_10027500
sub_1003daba
lea esi [ ebp - 0x2c ]
jmp sub_1000bb60
sub_1003dac2
lea esi [ ebp - 0x2c ]
jmp sub_1000bb60
sub_1003daca
lea esi [ ebp - 0x48 ]
jmp sub_1000bb60
sub_1003dad2
lea esi [ ebp - 0x80 ]
jmp sub_1000bb60
sub_1003dada
lea esi [ ebp - 0x64 ]
jmp sub_1000bb60
sub_1003dae2
lea esi [ ebp - 0xb0 ]
jmp sub_10027500
sub_1003daed
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc4 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003db20
lea esi [ ebp - 0x60 ]
jmp sub_10027500
sub_1003db28
lea esi [ ebp - 0x30 ]
jmp sub_1000bb60
sub_1003db30
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_1002e0f2
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003db60
lea esi [ ebp - 0x2c ]
jmp sub_1000bb60
sub_1003db68
mov eax [ ebp - 0x34 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003db73
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003dba0
lea esi [ ebp - 0x20 ]
jmp sub_10027500
sub_1003dba8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003dbd0
lea esi [ ebp - 0x2c ]
jmp sub_1000bb60
sub_1003dbd8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003dc00
mov eax [ ebp - 0x18 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003dc0b
mov eax [ ebp - 0x18 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003dc16
mov eax [ ebp - 0x14 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003dc21
mov eax [ ebp - 0x14 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003dc2c
mov eax [ ebp - 0x14 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003dc37
mov eax [ ebp - 0x18 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003dc42
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1c ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003dc60
lea ecx [ ebp - 0x90 ]
jmp sub_1000a130
sub_1003dc6b
lea ecx [ ebp - 0xa8 ]
jmp sub_1000a130
sub_1003dc76
lea ecx [ ebp - 0xc0 ]
jmp sub_1000a130
sub_1003dc81
lea ecx [ ebp - 0x3c ]
jmp sub_100178e0
sub_1003dc89
lea ecx [ ebp - 0x28 ]
jmp sub_100178e0
sub_1003dc91
lea ecx [ ebp - 0x50 ]
jmp sub_100225e0
sub_1003dc99
lea ecx [ ebp - 0x78 ]
jmp sub_100225e0
sub_1003dca1
lea ecx [ ebp - 0x64 ]
jmp sub_100178e0
sub_1003dca9
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xcc ]
mov ecx [ edx - 0xd0 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003dcd0
lea ecx [ ebp - 0xd0 ]
jmp sub_1000a130
sub_1003dcdb
lea ecx [ ebp - 0xb8 ]
jmp sub_1000a130
sub_1003dce6
lea ecx [ ebp - 0x110 ]
jmp sub_1000a130
sub_1003dcf1
lea ecx [ ebp - 0xf8 ]
jmp sub_100178e0
sub_1003dcfc
lea esi [ ebp - 0x30 ]
jmp sub_1000bb60
sub_1003dd04
lea ecx [ ebp - 0x8c ]
jmp sub_100225e0
sub_1003dd0f
lea ecx [ ebp - 0x64 ]
jmp sub_100225e0
sub_1003dd17
lea ecx [ ebp - 0x78 ]
jmp sub_100178e0
sub_1003dd1f
lea ecx [ ebp - 0xa0 ]
jmp sub_100178e0
sub_1003dd2a
lea esi [ ebp - 0x50 ]
jmp sub_10002580
sub_1003dd32
lea esi [ ebp - 0x50 ]
jmp sub_10002580
sub_1003dd3a
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x124 ]
mov ecx [ edx - 0x128 ]
xor ecx eax
call sub_1002e0f2
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003dd70
lea ecx [ ebp - 0x60 ]
jmp sub_1000a130
sub_1003dd78
lea ecx [ ebp - 0x48 ]
jmp sub_100225e0
sub_1003dd80
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x74 ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_1002e0f2
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003ddb0
lea esi [ ebp - 0x68 ]
jmp sub_1000bb60
sub_1003ddb8
lea ecx [ ebp - 0xc4 ]
jmp sub_10012d30
sub_1003ddc3
lea esi [ ebp - 0xb0 ]
jmp sub_1000fd10
sub_1003ddce
lea esi [ ebp - 0x4c ]
jmp sub_10002580
sub_1003ddd6
lea esi [ ebp - 0xa0 ]
jmp sub_1000bb60
sub_1003dde1
lea esi [ ebp - 0x84 ]
jmp sub_1000bb60
sub_1003ddec
lea esi [ ebp - 0x30 ]
jmp sub_10002580
sub_1003ddf4
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xcc ]
mov ecx [ edx - 0xd0 ]
xor ecx eax
call sub_1002e0f2
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003de30
lea ecx [ ebp - 0x24 ]
jmp sub_10012d30
sub_1003de38
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003de60
lea esi [ ebp + 0xc ]
jmp sub_10002580
sub_1003de68
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003de90
lea esi [ ebp - 0x2c ]
jmp sub_10002580
sub_1003de98
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003dec0
lea esi [ ebp - 0x2c ]
jmp sub_1000bb60
sub_1003dec8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003def0
lea esi [ ebp - 0x2c ]
jmp sub_1000bb60
sub_1003def8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_1002e0f2
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003df20
mov eax [ ebp - 0x10 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003df2b
mov eax [ ebp - 0x14 ]
push eax
call sub_1002e8fb
pop ecx
retn
sub_1003df36
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003df60
lea ecx [ ebp - 0x18 ]
jmp sub_10021c20
sub_1003df68
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1c ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003df90
lea eax [ ebp - 0x90 ]
jmp sub_100025b0
sub_1003df9b
lea esi [ ebp - 0x30 ]
jmp sub_10002580
sub_1003dfa3
lea esi [ ebp - 0x4c ]
jmp sub_10002580
sub_1003dfab
lea esi [ ebp - 0x74 ]
jmp sub_1000d0b0
sub_1003dfb3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x9c ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_1002e0f2
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003dfe1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_1002e0f2
mov eax r--data
jmp sub_1003636b
sub_1003e000
xor eax eax
call sub_1002c070
mov [ rw-data ] eax
retn
sub_1003e010
push sub_1003e080
call sub_1002e8e4
pop ecx
retn
sub_1003e020
mov eax 0x19
call sub_1002bff0
mov [ rw-data ] eax
retn
sub_1003e030
mov eax 0x9
call sub_1002c070
mov [ rw-data ] eax
retn
sub_1003e040
mov eax 0xa
call sub_1002c070
mov [ rw-data ] eax
retn
sub_1003e050
mov eax 0xf
call sub_1002c070
mov [ rw-data ] eax
retn
sub_1003e060
mov eax 0xf
call sub_1002c070
mov [ rw-data ] eax
retn
sub_1003e070
mov eax 0xf
call sub_1002c070
mov [ rw-data ] eax
retn
sub_1003e080
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
retn
push eax
call sub_1002e8fb
add esp 0x4
sub_1003e0b1
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_1002e3fa
